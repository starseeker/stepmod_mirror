/*
 * $Id: CmRecordFrmwk.java,v 1.4 2006/12/12 13:59:08 robbod Exp $
 *
 * STEPModMkFrmwkReleaseDialog.java
 *
 * Owner: Developed by Eurostep Limited and supplied to ATI/NIST under contract.
 * Author: Rob Bodington, Eurostep Limited
 */


package org.stepmod.gui;

import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;
import org.stepmod.CmRecordFrmwk;
import org.stepmod.CmRelease;
import org.stepmod.CmReleaseFrmwk;
import org.stepmod.STEPmod;
import org.stepmod.cvschk.StepmodCvs;

/**
 *
 * @author  Rob Bodington
 */
public class STEPModMkFrmwkReleaseDialog extends javax.swing.JDialog {
    
    private CmRecordFrmwk cmRecord;
    private DefaultMutableTreeNode node;
    private CmRelease cmRelease;
    
    private STEPModFrame stepmodFrame;
    private boolean create;
    
    
    
    /**
     * Creates new form STEPModMkReleaseDialog for creating a new release that is applied to a set of parts
     */
    public STEPModMkFrmwkReleaseDialog(STEPModFrame frame, String title, CmRecordFrmwk cmRecord) {
        super(frame, true);
        this.stepmodFrame = frame;
        initComponents();
        this.cmRecord = cmRecord;
        titleLabel.setText(title);
        releaseIdjTextField.setText(this.getNextReleaseId());
        releaseDatejTextField.setText(this.getReleaseDate());
        releaseWhojTextField.setText(cmRecord.getStepMod().getStepmodProperty("SFORGE_USERNAME"));
        this.create = create;
    }
    
    private String getNextReleaseId() {
        String id = "";
        
        // Get today's date
        Date date = new Date();
        Format formatter = new SimpleDateFormat("yyyyMMdd");
        String formattedDate = formatter.format(date);
        
        int rel = cmRecord.getHasCmReleases().size();
        
        if (cmRecord.getStepMod().getBasicCmRecord() == cmRecord) {
            id = "stepmod-common-" + formattedDate +"-r"+rel;
        } else {
            id = "stepmod-framework-" + formattedDate +"-r"+rel;
        }
        return(id);
    }
    
    
    private String getReleaseDate() {
        Date date = new Date();
        Format formatter = new SimpleDateFormat("E, dd MMM yyyy HH:mm:ss");
        return(formatter.format(date));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        canceljButton = new javax.swing.JButton();
        okjButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        releaseDatejLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        releaseDescriptionjEditorPane = new javax.swing.JEditorPane();
        jLabel5 = new javax.swing.JLabel();
        releaseDatejTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        releaseWhojTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        releaseIdjTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        canceljButton.setText("Cancel");
        canceljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canceljButtonActionPerformed(evt);
            }
        });

        okjButton.setText("OK");
        okjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okjButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        titleLabel.setText("Create a new release for selected parts");

        releaseDatejLabel.setText("Release date:");

        jScrollPane1.setViewportView(releaseDescriptionjEditorPane);

        jLabel5.setText("Description:");

        releaseDatejTextField.setEditable(false);
        releaseDatejTextField.setText("jTextField3");

        jLabel7.setText("Released by:");

        releaseWhojTextField.setText("jTextField1");

        jLabel2.setText("Release id:");

        releaseIdjTextField.setEditable(false);
        releaseIdjTextField.setText("jTextField1");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(titleLabel)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(okjButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(canceljButton)
                        .add(76, 76, 76))
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addContainerGap(373, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(releaseDatejLabel)
                                .add(12, 12, 12)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(releaseWhojTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                    .add(releaseDatejTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                                    .add(releaseIdjTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 308, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                .add(jLabel5)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 304, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(55, 55, 55))))
        );

        layout.linkSize(new java.awt.Component[] {jLabel5, releaseDatejLabel}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(titleLabel)
                .add(35, 35, 35)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(releaseIdjTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 9, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(releaseDatejLabel)
                    .add(releaseDatejTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(releaseWhojTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 209, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okjButton)
                    .add(canceljButton))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void canceljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canceljButtonActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_canceljButtonActionPerformed
    
    
    
    private void okjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okjButtonActionPerformed
        String releaseId = getNextReleaseId();
        String targetName;
        STEPmod stepMod = cmRecord.getStepMod();
        boolean isBasicCmRecord;
        if (stepMod.getBasicCmRecord() == cmRecord) {
            targetName = "STEPmod common files";
            isBasicCmRecord = true;
        } else {
            targetName = "STEPmod XSL framework";
            isBasicCmRecord = false;
        }
        int answer = JOptionPane.showConfirmDialog(this,
                "You are about to create the CVS tag \""+releaseId+"\" for \""+targetName+"\"\nDo you want to continue?",
                "CVS action ....",
                JOptionPane.YES_NO_OPTION);
        if (answer == JOptionPane.YES_OPTION) {
            StepmodCvs stepmodCvs = new StepmodCvs(stepMod);
            TreeModel repositoryModel = stepmodFrame.getRepositoryJTree().getModel();
            DefaultMutableTreeNode rootNode = (DefaultMutableTreeNode)repositoryModel.getRoot();
            if (isBasicCmRecord) {
                String basicDir = stepMod.getRootDirectory() +"/data/basic";
                stepmodCvs.cvsTag(basicDir, releaseId);
                stepMod.getBasicCmRecord().getCvsStatusObject().updateCvsStatus();
                stepmodFrame.outputCvsResults(stepmodCvs);
                if (stepmodCvs.getCvsErrorVal() == 0) {
                    // successfully tagged the files, so create the record;
                    CmReleaseFrmwk cmRelease = new CmReleaseFrmwk(cmRecord,
                            releaseId,
                            releaseWhojTextField.getText(), releaseDatejTextField.getText(),
                            releaseDescriptionjEditorPane.getText());
                    // Assumes "Common files" is 4th node
                    node = (DefaultMutableTreeNode)repositoryModel.getChild(rootNode, 4);
                    stepmodFrame.addStepmodReleaseToTree(cmRecord, cmRelease, node, true);
                    // now check out the tagged version
                    //part.cvsCoRelease(cmRelease);
                    stepmodFrame.outputCvsResults(stepmodCvs);
                    // Successfully tagged the part, so save the record
                    cmRecord.writeCmRecord();
                } else {
                    JOptionPane.showMessageDialog(this,"CVS tagging action failed.","CVS action ....",JOptionPane.WARNING_MESSAGE);
                }
                
                
            } else {
                String xslDir = stepMod.getRootDirectory() +"/xsl";
                stepmodCvs.cvsTag(xslDir, releaseId);
                stepMod.getStepmodCmRecord().getCvsStatusObject().updateCvsStatus();
                stepmodFrame.outputCvsResults(stepmodCvs);
                
                String dtdDir = stepMod.getRootDirectory() +"/dtd";
                stepmodCvs.cvsTag(dtdDir, releaseId);
                stepMod.getStepmodCmRecord().getCvsStatusObject().updateCvsStatus();
                stepmodFrame.outputCvsResults(stepmodCvs);
                if (stepmodCvs.getCvsErrorVal() == 0) {
                    // successfully tagged the files, so create the record;
                    CmReleaseFrmwk cmRelease = new CmReleaseFrmwk(cmRecord,
                            releaseId,
                            releaseWhojTextField.getText(), releaseDatejTextField.getText(),
                            releaseDescriptionjEditorPane.getText());
                    // Assumes "Common files" is 4th node
                    node = (DefaultMutableTreeNode)repositoryModel.getChild(rootNode, 5);
                    stepmodFrame.addStepmodReleaseToTree(cmRecord, cmRelease, node, true);
                    // now check out the tagged version
                    //part.cvsCoRelease(cmRelease);
                    stepmodFrame.outputCvsResults(stepmodCvs);
                    // Successfully tagged the part, so save the record
                    cmRecord.writeCmRecord();
                } else {
                    JOptionPane.showMessageDialog(this,"CVS tagging action failed.","CVS action ....",JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_okjButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton canceljButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okjButton;
    private javax.swing.JLabel releaseDatejLabel;
    private javax.swing.JTextField releaseDatejTextField;
    private javax.swing.JEditorPane releaseDescriptionjEditorPane;
    private javax.swing.JTextField releaseIdjTextField;
    private javax.swing.JTextField releaseWhojTextField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
    
}
