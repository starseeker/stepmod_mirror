<?xml version="1.0" encoding="utf-8"?>
    <!--
      This file has been auto generated by:
      ant -buildfile buildscript.xml
      
      Usage:
      ant -buildfile script.xml checks
         Generates the HTML for the modules listed in ballot_index.xml
      Errors are reported an stored in 
      ${CHECKDIR}\ant_check_${BALLOTNAME}_${DSTAMP}.txt
      

    -->
<project name="ballotchecks" default="all" basedir=".">
      
   <target name="init">
      <tstamp/>
      <dirname property="BALLOTDIR" file="ballot_index.xml"/>
      <property name="BALLOTNAME" value="203e2_gdt"/>
      <property name="MODULESDIR" value="data/modules/"/>
      <property name="UTILSDIR" value="../../../utils/"/>
      <property name="CHECKDIR" value="${BALLOTDIR}\check_${BALLOTNAME}_${DSTAMP}"/>
      <property name="ANTERR" value="${CHECKDIR}\ant_check_${BALLOTNAME}_${DSTAMP}.txt"/>
      <property name="EXPRESSCOMP" value="C:/apps/eep/Eep.exe"/>
      <property name="EXPRESSARGS" value="-2 -i -w"/>
      <property name="EXPRESSDIR" value="${CHECKDIR}\express"/>
      <property name="ARMEXPRESSFILE" value="arm_${DSTAMP}v1.exp"/>
      <property name="ARMEXPRESS" value="${EXPRESSDIR}\${ARMEXPRESSFILE}"/>
      <property name="ARMERRFILE" value="arm_${DSTAMP}v1_err.txt"/>
      <property name="ARMERR" value="${EXPRESSDIR}\${ARMERRFILE}"/>
      <property name="MIMEXPRESSFILE" value="mim_resources_${DSTAMP}v1.exp"/>
      <property name="MIMEXPRESS" value="${EXPRESSDIR}\${MIMEXPRESSFILE}"/>
      <property name="MIMERRFILE" value="mim_resources_${DSTAMP}v1_err.txt"/>
      <property name="MIMERR" value="${EXPRESSDIR}\${MIMERRFILE}"/>
      <property name="ZIPFILE" value="${CHECKDIR}\check_${DSTAMP}.zip"/>
      <mkdir dir="${CHECKDIR}"/>
   </target>
      
   <target name="checks" depends="init">
      <echo>
          Outputting to: stepmod/${ANTERR}
      </echo>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}dimension_tolerance"/>
         <arg value="clean_module"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}dimension_tolerance"/>
         <arg value="modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}dimension_tolerance"/>
         <arg value="mapping"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULESDIR=${MODULESDIR}dimension_tolerance"/>
         <arg value="valid_modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}construction_geometry"/>
         <arg value="clean_module"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}construction_geometry"/>
         <arg value="modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}construction_geometry"/>
         <arg value="mapping"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULESDIR=${MODULESDIR}construction_geometry"/>
         <arg value="valid_modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}derived_shape_element"/>
         <arg value="clean_module"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}derived_shape_element"/>
         <arg value="modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}derived_shape_element"/>
         <arg value="mapping"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULESDIR=${MODULESDIR}derived_shape_element"/>
         <arg value="valid_modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}geometric_tolerance"/>
         <arg value="clean_module"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}geometric_tolerance"/>
         <arg value="modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}geometric_tolerance"/>
         <arg value="mapping"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULESDIR=${MODULESDIR}geometric_tolerance"/>
         <arg value="valid_modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}default_tolerance"/>
         <arg value="clean_module"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}default_tolerance"/>
         <arg value="modules"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULES=${MODULESDIR}default_tolerance"/>
         <arg value="mapping"/>
      </exec>
      <exec executable="bash" failifexecutionfails="false" dir="${UTILSDIR}" output="${ANTERR}" append="true">
         <arg value="ant"/>
         <arg value="-emacs"/>
         <arg value="-q"/>
         <arg value="-buildfile"/>
         <arg value="build.xml"/>
         <arg value="-DMODULESDIR=${MODULESDIR}default_tolerance"/>
         <arg value="valid_modules"/>
      </exec>
      <fixcrlf srcdir="${CHECKDIR}" includes="**/*.txt"/>
   </target>
      
   <target name="getexpress" depends="init">
      <echo>Copying Express to ${EXPRESSDIR}</echo>
      <exec executable="cscript" dir="${UTILSDIR}">
         <arg value="./getExpressIr.wsf"/>
         <arg value="${EXPRESSDIR}"/>
         <arg value="${BALLOTDIR}/modlist.txt"/>
         <arg value="${BALLOTDIR}/irlist.txt"/>
      </exec>
   </target>
      
   <target name="compileexpress" depends="getexpress">
      <echo>Compiling EXPRESS: ${ARMEXPRESS}</echo>
      <exec executable="${EXPRESSCOMP}" dir="${EXPRESSDIR}" output="${ARMERR}">
         <arg value="${EXPRESSARGS}"/>
         <arg value="${ARMEXPRESS}"/>
      </exec>
      <copy verbose="true" overwrite="true" file="${EXPRESSDIR}/errors.em" tofile="${CHECKDIR}/${ARMERRFILE}"/>
      <copy verbose="true" overwrite="true" file="${ARMEXPRESS}" todir="${CHECKDIR}"/>
        
      <echo>Compiling EXPRESS: ${MIMEXPRESS}</echo>
      <exec executable="${EXPRESSCOMP}" dir="${EXPRESSDIR}" output="${MIMERR}">
         <arg value="${EXPRESSARGS}"/>
         <arg value="${MIMEXPRESS}"/>
      </exec>
      <copy verbose="true" overwrite="true" file="${EXPRESSDIR}/errors.em" tofile="${CHECKDIR}/${MIMERRFILE}"/>
      <copy verbose="true" overwrite="true" file="${MIMEXPRESS}" todir="${CHECKDIR}"/>
        
      <fixcrlf srcdir="${CHECKDIR}" includes="*.txt, **/*.exp"/>
   </target>
      
   <target name="zip" depends="init">
      <echo>Zipping: ${ZIPFILE}</echo>
      <zip zipfile="${ZIPFILE}" basedir="${CHECKDIR}" excludes="**/*.zip, express/**" includes="ant_check*.txt, arm*.*, mim_resources*.*"/>
   </target>
      
   <target name="all" depends="checks, compileexpress, zip"/>
      
</project>