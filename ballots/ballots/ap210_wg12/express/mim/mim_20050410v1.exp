

(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\activity_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.16 2004/10/21 14:43:53 darla Exp $
 ISO TC184/SC4/WG12 N1157 - ISO/TS 10303-1047 Activity - EXPRESS MIM
*)

SCHEMA Activity_mim;

USE FROM Activity_method_mim;    -- ISO/TS 10303-1049

USE FROM action_schema   -- ISO 10303-41
  (action,
   action_relationship,
   action_status,
   executed_action); 

USE FROM basic_attribute_schema   -- ISO 10303-41
  (id_attribute,
   object_role); 

USE FROM management_resources_schema   -- ISO 10303-41
  (action_assignment); 

TYPE action_items = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE;

ENTITY applied_action_assignment
SUBTYPE OF (action_assignment);
  items : SET [1 : ?] OF action_items;
END_ENTITY;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\activity_method_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.13 2004/10/21 14:45:33 darla Exp $
 ISO TC184/SC4/WG12 N1163 - ISO/TS 10303-1049 Activity method - EXPRESS MIM
*)

SCHEMA Activity_method_mim;

USE FROM action_schema    -- ISO 10303-41
(action_method );

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\advanced_boundary_representation_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.6 2004/10/21 14:47:15 darla Exp $
 ISO TC184/SC4/WG12 N1289 - ISO/TS 10303-1514 Advanced boundary representation - EXPRESS MIM
*)

SCHEMA Advanced_boundary_representation_mim;

USE FROM Elemental_geometric_shape_mim;

USE FROM aic_advanced_brep;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\alias_identification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.11 2004/10/28 16:08:14 darla Exp $
 ISO TC184/SC4/WG12 N2907 - ISO/TS 10303-1025 Alias identification - EXPRESS MIM
*)
 


SCHEMA Alias_identification_mim;

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021


TYPE aliasable_item = EXTENSIBLE SELECT;
END_TYPE; 

END_SCHEMA;  -- Alias_identification_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\altered_package_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 09:00:27 liutkus Exp $
   ISO TC184/SC4/WG12 N3283 - ISO/CD-TS 10303-1601 Altered package - EXPRESS MIM
*)


SCHEMA Altered_package_mim;
	USE FROM Package_mim;	-- ISO/TS 10303-1707

(** Needed by mapping *)
TYPE ap_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (package_terminal);
END_TYPE; 

ENTITY altered_package_terminal
  ABSTRACT SUPERTYPE OF ((shape_formed_terminal ANDOR
      surface_prepped_terminal) ANDOR length_trimmed_terminal)
   SUBTYPE OF (package_terminal);
WHERE
 WR1: SIZEOF(QUERY ( sar <* USEDIN (SELF,
      'ALTERED_PACKAGE_MIM.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'terminal to be altered' ))
       = 1;
 WR2: (SELF.of_shape.definition\product_definition.description =
       'altered package');
END_ENTITY;

ENTITY length_trimmed_terminal
   SUBTYPE OF (altered_package_terminal);
WHERE
 WR1: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ALTERED_PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'ALTERED_PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['ALTERED_PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ALTERED_PACKAGE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2)) = 2)) = 1))) = 0);
 WR2:  (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ALTERED_PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'ALTERED_PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['ALTERED_PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ALTERED_PACKAGE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
                   'maximum trimmed length'))) = 1)) = 1))) = 0);
 WR3:  (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ALTERED_PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'ALTERED_PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['ALTERED_PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'ALTERED_PACKAGE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND 
        (it\representation_item.name = 
                  'minimum trimmed length'))) = 1
       )) = 1))) = 0);

END_ENTITY;

ENTITY shape_formed_terminal
   SUBTYPE OF (altered_package_terminal);
WHERE
 WR1: (SIZEOF (QUERY (ada <* USEDIN (SELF,
       'ALTERED_PACKAGE_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       ('ALTERED_PACKAGE_MIM.' +
       'EE_SPECIFICATION' IN
       TYPEOF (ada.assigned_document)) AND
       (ada.assigned_document.kind\document_type.product_data_type =
       'lead form specification') AND
       (SIZEOF (QUERY (dr <* USEDIN (ada.assigned_document,
       'ALTERED_PACKAGE_MIM.' +
       'DOCUMENT_RELATIONSHIP.RELATED_DOCUMENT') |
       dr.relating_document.kind\document_type.product_data_type =
       'material specification')) = 1))) = 1);
END_ENTITY;

ENTITY surface_prepped_terminal
   SUBTYPE OF (altered_package_terminal);
WHERE
WR2: (SIZEOF (QUERY (ada <* USEDIN (SELF,
       'ALTERED_PACKAGE_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       ('ALTERED_PACKAGE_MIM.' +
       'EE_SPECIFICATION' IN
       TYPEOF (ada.assigned_document)) AND
       (ada.assigned_document.kind\document_type.product_data_type =
       'surface finish specification'))) = 1);
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\altered_part_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/02/04 14:02:52 budreckytej Exp $
   ISO TC184/SC4/WG12 N3286 - ISO/CD-TS 10303-1602 Altered part - EXPRESS MIM
*)


SCHEMA Altered_part_mim;
	USE FROM Altered_package_mim;	-- ISO/TS 10303-1601
	USE FROM Packaged_part_black_box_model_mim;	-- ISO/TS 10303-1710
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\analytical_model_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.23 2005/04/04 09:01:07 liutkus Exp $
   ISO TC184/SC4/WG12 N3289 - ISO/CD-TS 10303-1603 Analytical model - EXPRESS MIM
*)


SCHEMA Analytical_model_mim;

	USE FROM Model_parameter_mim;	-- ISO/TS 10303-1703
	USE FROM Product_identification_mim;	-- ISO/TS 10303-1017
	USE FROM Software_mim;	-- ISO/TS 10303-1746
	USE FROM Specification_document_mim;	-- ISO/TS 10303-1747
	USE FROM Document_structure_mim;	-- ISO/TS 10303-1124

USE FROM Date_time_schema
	(date_time_role,
	date_role);
	USE FROM Group_mim;	-- ISO/TS 10303-1113
	
TYPE am_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
     (digital_analytical_model_vector_port);
END_TYPE;
	
ENTITY across_port_variable
  SUBTYPE OF (port_variable);
END_ENTITY;

ENTITY analog_analytical_model_port
  SUBTYPE OF (analytical_model_port);
END_ENTITY;

ENTITY analog_port_variable 
	SUBTYPE OF (representation, representation_item);
END_ENTITY;

ENTITY analytical_model
  SUBTYPE OF (representation);
UNIQUE
  UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 2;
  WR2: SIZEOF (QUERY (dr <* USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       dr.assigned_document.kind\document_type.product_data_type = 
       'language reference manual')) = 1;
  WR3: SIZEOF (QUERY (it <* SELF.items |
       NOT ('ANALYTICAL_MODEL_MIM.' +
       'MODEL_PARAMETER' IN 
       TYPEOF (it)))) = 0;
  WR4: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       (rr\representation_relationship.name = 'access mechanism') AND
       ('ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL_PORT' IN
       TYPEOF (rr.rep_2)))) >= 1;
END_ENTITY;

ENTITY analytical_model_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('ANALYTICAL_MODEL_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'ANALYTICAL_MODEL_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\analytical_model_definition))) = 0;
END_ENTITY;

ENTITY analytical_model_make_from_relationship
  SUBTYPE OF (representation, representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF (['ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL'] *
       TYPEOF (SELF.rep_1)) = 1;
  WR2: SIZEOF (['ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL'] *
       TYPEOF (SELF.rep_2)) = 1;
  WR3: SIZEOF( QUERY(rr <* USEDIN(SELF,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |NOT(
       ('ANALYTICAL_MODEL_MIM.' +
       'MAKE_FROM_MODEL_PORT_RELATIONSHIP' IN TYPEOF(rr.rep_2))))) = 0;
  WR4: SIZEOF( QUERY(rr <* USEDIN(SELF,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |NOT(
       (rr\representation_relationship.name = 'associated make from') AND
       ('ANALYTICAL_MODEL_MIM.' +
       'MAKE_FROM_MODEL_PORT_RELATIONSHIP' IN TYPEOF(rr.rep_2))))) = 0;
  WR5: SIZEOF (['ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL'] *
       TYPEOF (SELF)) = 0;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\analytical_model_make_from_relationship))) = 0;
END_ENTITY; 

ENTITY analytical_model_parameter 
 SUBTYPE OF (model_parameter);
WHERE
  WR1: SIZEOF (QUERY (cri <* USEDIN (SELF,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION.ITEMS') |
       ('ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL' IN TYPEOF(cri)) 
       )) = 1;
END_ENTITY;

ENTITY analytical_model_port
  SUPERTYPE OF (analytical_model_vector_port ANDOR (ONEOF(
   analog_analytical_model_port, digital_analytical_model_port)))
  SUBTYPE OF (representation);
  WHERE
  WR1: SIZEOF (QUERY (am <* QUERY (rr <* USEDIN (SELF,
       'ANALYTICAL_MODEL_MIM.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') |
       rr\representation_relationship.name = 'access mechanism') |
       'ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL' IN 
       TYPEOF (am.rep_1))) = 1;
END_ENTITY;

ENTITY analytical_model_port_assignment
  SUBTYPE OF (property_definition_representation, representation_relationship);
END_ENTITY;

ENTITY analytical_model_scalar_port
  SUBTYPE OF (analytical_model_vector_port);
WHERE
  WR1: SIZEOF (QUERY (it <* SELF.items |
       ('ANALYTICAL_MODEL_MIM.' +
       'MEASURE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'size') AND
       ('ANALYTICAL_MODEL_MIM.' +
       'COUNT_MEASURE' IN
       TYPEOF (it\measure_with_unit.value_component)) AND
       (it\measure_with_unit.value_component = 1))) = 1;
END_ENTITY;

ENTITY analytical_model_vector_port
  SUBTYPE OF (analytical_model_port, compound_representation_item);
WHERE
  WR1: (SIZEOF (QUERY (it <* SELF.items |
       ('ANALYTICAL_MODEL_MIM.' +
       'MEASURE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'size') AND
       ('ANALYTICAL_MODEL_MIM.' +
       'COUNT_MEASURE' IN
       TYPEOF (it\measure_with_unit.value_component)) AND
       ('ANALYTICAL_MODEL_MIM.' +
       'CONTEXT_DEPENDENT_UNIT' IN
       TYPEOF (it\measure_with_unit.unit_component)))) = 1);
END_ENTITY;

ENTITY analytical_representation
  SUBTYPE OF (representation);
UNIQUE
  UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       'ANALYTICAL_MODEL_MIM.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION' IN
       TYPEOF (rr.rep_2))) >= 1;
  WR2: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'ANALYTICAL_MODEL_MIM.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       'ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL' IN TYPEOF (rr.rep_1))) = 1;
END_ENTITY;

ENTITY digital_analytical_model_port
  SUBTYPE OF (analytical_model_port);
WHERE
  WR2: SIZEOF (QUERY (it <* SELF.items |
       ('ANALYTICAL_MODEL_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'nominal signal flow direction') AND
       (it\descriptive_representation_item.description IN 
       ['input direction',
       'output direction', 'bidirectional', 'unknown direction']))) = 1;
  WR3: SIZEOF (QUERY (it <* SELF.items |
       ('ANALYTICAL_MODEL_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'port type') AND
       (it\descriptive_representation_item.description IN 
       ['string property type',
       'logical property type',
       'boolean property type']))) = 1;
END_ENTITY;

ENTITY digital_analytical_model_scalar_port
  SUBTYPE OF (digital_analytical_model_vector_port, analytical_model_scalar_port);
END_ENTITY;

ENTITY digital_analytical_model_vector_port
  SUBTYPE OF (analytical_model_vector_port);
END_ENTITY;

ENTITY make_from_model_port_relationship
 SUBTYPE OF (representation, representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, 
       SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF (['ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL_PORT'] *
       TYPEOF (SELF.rep_1)) = 1;
  WR2: SIZEOF (['ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL_PORT'] *
       TYPEOF (SELF.rep_2)) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\representation_relationship ||
       SELF\make_from_model_port_relationship)) = 0;
  WR4: rep_1 :<>: rep_2;
  WR5: SIZEOF(QUERY( rr1 <* USEDIN(SELF.rep_1,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
        (SIZEOF(QUERY(rr2 <* USEDIN(SELF.rep_2,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
        (rr1.rep_1 :=: rr2.rep_1)
        )) = 0))) = 1;
  WR6: SIZEOF (QUERY( rr <* USEDIN(SELF,
       'ANALYTICAL_MODEL_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       (('ANALYTICAL_MODEL_MIM.' +
       'ANALYTICAL_MODEL_MAKE_FROM_RELATIONSHIP') IN TYPEOF (rr.rep_1))
       )) = 1; 
       
END_ENTITY;

ENTITY port_variable
  SUPERTYPE OF (ONEOF(across_port_variable, through_port_variable, transform_port_variable))
  SUBTYPE OF (representation, representation_item);
END_ENTITY;

ENTITY through_port_variable
  SUBTYPE OF (port_variable);
END_ENTITY;
	
ENTITY transform_port_variable
  SUBTYPE OF (port_variable);
WHERE
  WR1: (SIZEOF (QUERY (it <* SELF.items |
       ('ANALYTICAL_MODEL_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'nominal signal flow direction') AND
       (it\descriptive_representation_item.description IN 
       ['input direction',
       'output direction', 'unknown direction'])))) = 1;
END_ENTITY;

RULE analytical_model_port_unique_constraint FOR
 ( analytical_model_port );
LOCAL
  name_bag : BAG OF STRING := [];
  amp_bag : BAG OF analytical_model_port;
  rr_bag : BAG OF representation_relationship;
  pass : BOOLEAN := TRUE;
  am_bag : BAG OF analytical_model;
END_LOCAL;

REPEAT i := 1 to SIZEOF(analytical_model_port) by 1;
  IF EXISTS( analytical_model_port[i]\representation.name ) THEN
    IF( NOT( analytical_model_port[i]\representation.name IN name_bag ) ) THEN
      name_bag := name_bag + analytical_model_port[i]\representation.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  amp_bag := QUERY( amp <* analytical_model_port | 
          (amp\representation.name = name_bag[i]) );
  am_bag := [];
  REPEAT j := 1 to SIZEOF(amp_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    rr_bag := QUERY( rr <* USEDIN( amp_bag[j], 
               'ANALYTICAL_MODEL_MIM.'
+ 'REPRESENTATION_RELATIONSHIP.REP_2' ) | ((rr\representation_relationship.name = 'access mechanism') 
 AND
('ANALYTICAL_MODEL_MIM.'
+ 'ANALYTICAL_MODEL' IN TYPEOF(rr.rep_1))) );
    REPEAT k := 1 to SIZEOF(rr_bag) by 1;
      IF EXISTS( rr_bag[k].rep_1 ) THEN
        IF ( rr_bag[k].rep_1 IN am_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          am_bag := am_bag + rr_bag[k].rep_1;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_assembly_functional_interface_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 09:01:47 liutkus Exp $
   ISO TC184/SC4/WG12 N1612 - ISO/CD-TS 10303-1604 Ap210 assembly functional interface requirements - EXPRESS MIM
*)


SCHEMA Ap210_assembly_functional_interface_requirements_mim;
	USE FROM Assembly_module_usage_view_mim;	-- ISO/TS 10303-1642
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_assembly_functional_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 09:01:48 liutkus Exp $
   ISO TC184/SC4/WG12 N1615 - ISO/CD-TS 10303-1605 Ap210 assembly functional requirements - EXPRESS MIM
*)


SCHEMA Ap210_assembly_functional_requirements_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Functional_decomposition_to_assembly_design_mim;	-- ISO/TS 10303-1675
	USE FROM Functional_decomposition_with_nodal_representation_to_packaged_mapping_mim;	-- ISO/TS 10303-1678
	USE FROM Physical_node_requirement_to_implementing_component_allocation_mim;	-- ISO/TS 10303-1723
	USE FROM Planned_characteristic_mim;	-- ISO/TS 10303-1733
	USE FROM Test_requirement_allocation_mim;	-- ISO/TS 10303-1751
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_assembly_physical_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 09:01:46 liutkus Exp $
   ISO TC184/SC4/WG12 N1618 - ISO/CD-TS 10303-1606 Ap210 assembly physical design - EXPRESS MIM
*)


SCHEMA Ap210_assembly_physical_design_mim;
	USE FROM Altered_part_mim;	-- ISO/TS 10303-1602
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Assembly_2d_shape_mim;	-- ISO/TS 10303-1632
	USE FROM Assembly_3d_shape_mim;	-- ISO/TS 10303-1633
	USE FROM Assembly_functional_interface_requirement_mim;	-- ISO/TS 10303-1635
	USE FROM Assembly_module_with_cable_component_2d_mim;	-- ISO/TS 10303-1638
	USE FROM Assembly_module_with_cable_component_3d_mim;	-- ISO/TS 10303-1639
	USE FROM Assembly_module_with_macro_component_mim;	-- ISO/TS 10303-1640
	USE FROM Assembly_shape_mim;	-- ISO/TS 10303-1646
	USE FROM Chemical_substance_mim;	-- ISO/TS 10303-1655
	USE FROM Design_specific_assignment_to_assembly_usage_view_mim;	-- ISO/TS 10303-1662
	USE FROM Device_marking_mim;	-- ISO/TS 10303-1664
	USE FROM Physical_unit_interconnect_definition_mim;	-- ISO/TS 10303-1729
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_assembly_physical_interface_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:50 liutkus Exp $
   ISO TC184/SC4/WG12 N1621 - ISO/CD-TS 10303-1607 Ap210 assembly physical interface requirements - EXPRESS MIM
*)


SCHEMA Ap210_assembly_physical_interface_requirements_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Assembly_physical_requirement_allocation_mim;	-- ISO/TS 10303-1648
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_assembly_physical_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/02/04 16:54:02 budreckytej Exp $
   ISO TC184/SC4/WG12 N1624 - ISO/CD-TS 10303-1608 Ap210 assembly physical requirements - EXPRESS MIM
*)


SCHEMA Ap210_assembly_physical_requirements_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Assembly_module_usage_view_mim;	-- ISO/TS 10303-1642
	USE FROM Characteristic_mim;	-- ISO/TS 10303-1654
	USE FROM Requirement_assignment_mim;	-- ISO/TS 10303-1233
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740
	USE FROM Requirement_identification_and_version_mim;	-- ISO/TS 10303-1140
	USE FROM Requirement_view_definition_mim;	-- ISO/TS 10303-1141
	USE FROM Requirement_view_definition_relationship_mim;	-- ISO/TS 10303-1142
	USE FROM Test_requirement_allocation_mim;	-- ISO/TS 10303-1751
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_assembly_requirement_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/02/10 12:37:58 liutkus Exp $
   ISO TC184/SC4/WG12 N1627 - ISO/CD-TS 10303-1609 Ap210 assembly requirement allocation - EXPRESS MIM
*)


SCHEMA Ap210_assembly_requirement_allocation_mim;
	USE FROM Ap210_assembly_functional_requirements_mim;	-- ISO/TS 10303-1605
	USE FROM Ap210_assembly_physical_interface_requirements_mim;	-- ISO/TS 10303-1607
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_assembly_technology_constraints_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 09:01:49 liutkus Exp $
   ISO TC184/SC4/WG12 N1630 - ISO/CD-TS 10303-1610 Ap210 assembly technology constraints - EXPRESS MIM
*)


SCHEMA Ap210_assembly_technology_constraints_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Specification_document_mim;	-- ISO/TS 10303-1747
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_connection_zone_based_model_extraction_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/02/04 16:57:27 budreckytej Exp $
   ISO TC184/SC4/WG12 N1633 - ISO/CD-TS 10303-1611 Ap210 connection zone based model extraction - EXPRESS MIM
*)


SCHEMA Ap210_connection_zone_based_model_extraction_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Characteristic_mim;	-- ISO/TS 10303-1654
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_datum_difference_based_model_definition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mkmodule.js,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   N1746 - ISO/CD-TS - 10303-1759 ap210_datum_difference_based_model_definition - EXPRESS MIM
*)
SCHEMA Ap210_datum_difference_based_model_definition_mim;

	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Datum_difference_based_model_mim; -- ISO/TS 10303-1660

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_device_functional_and_physical_characterization_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/04/04 09:01:44 liutkus Exp $
   ISO TC184/SC4/WG12 N1636 - ISO/CD-TS 10303-1612 Ap210 device functional and physical characterization - EXPRESS MIM
*)


SCHEMA Ap210_device_functional_and_physical_characterization_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_mim;	-- ISO/TS 10303-1655
	USE FROM Packaged_part_black_box_model_mim;	-- ISO/TS 10303-1710
	USE FROM Part_feature_grouping_mim;	-- ISO/TS 10303-1713
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_electronic_assembly_interconnect_and_packaging_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.34 2005/04/08 18:27:20 liutkus Exp $
   ISO TC184/SC4/WG12 N1639 - ISO/CD-TS 10303-410 Ap210 electronic assembly interconnect and packaging design - EXPRESS MIM
*)


SCHEMA Ap210_electronic_assembly_interconnect_and_packaging_design_mim;
USE FROM Ap210_device_functional_and_physical_characterization_mim;	-- ISO/TS 10303-1612
USE FROM Ap210_interconnect_technology_constraints_mim;	-- ISO/TS 10303-1622
USE FROM Ap210_assembly_technology_constraints_mim;	-- ISO/TS 10303-1610
USE FROM Ap210_assembly_functional_requirements_mim;	-- ISO/TS 10303-1605
USE FROM Ap210_assembly_physical_requirements_mim;	-- ISO/TS 10303-1608
USE FROM Ap210_interconnect_functional_requirements_mim;	-- ISO/TS 10303-1619
USE FROM Ap210_interconnect_physical_requirements_mim;	-- ISO/TS 10303-1620
USE FROM Ap210_assembly_physical_design_mim;	-- ISO/TS 10303-1606
USE FROM Ap210_interconnect_design_mim;	-- ISO/TS 10303-1617
USE FROM Ap210_interconnect_design_for_microwave_mim;	-- ISO/TS 10303-1618
USE FROM Ap210_product_rule_mim;	-- ISO/TS 10303-1630
USE FROM Ap210_functional_decomposition_mim;	-- ISO/TS 10303-1614
USE FROM Ap210_package_functional_and_physical_characterization_mim;	-- ISO/TS 10303-1624
USE FROM Ap210_laminate_assembly_design_mim;	-- ISO/TS 10303-1623
USE FROM Ap210_connection_zone_based_model_extraction_mim;	-- ISO/TS 10303-1611
USE FROM Ap210_functional_specification_mim;	-- ISO/TS 10303-1616
USE FROM Ap210_physical_unit_physical_characterization_mim;	-- ISO/TS 10303-1626
USE FROM Ap210_packaged_part_white_box_model_mim;	-- ISO/TS 10303-1625
USE FROM Ap210_printed_part_functional_and_physical_characterization_mim;	-- ISO/TS 10303-1627
USE FROM Ap210_assembly_functional_interface_requirements_mim;	-- ISO/TS 10303-1604
USE FROM Ap210_assembly_physical_interface_requirements_mim;	-- ISO/TS 10303-1607
USE FROM Ap210_assembly_requirement_allocation_mim;	-- ISO/TS 10303-1609
USE FROM Ap210_interconnect_requirement_allocation_mim;	-- ISO/TS 10303-1621
USE FROM Ap210_functional_requirement_allocation_mim;	-- ISO/TS 10303-1615
USE FROM Ap210_datum_difference_based_model_definition_mim;	-- ISO/TS 10303-1759

USE FROM Application_context_schema
	(application_context,
	 application_protocol_definition);

USE FROM Geometry_schema(offset_curve_2d);


SUBTYPE_CONSTRAINT assembly_component_subtypes FOR assembly_component;         
  (ONEOF (printed_component, packaged_component, routed_physical_component)
                ANDOR (thermal_component) ANDOR (cable_component));
END_SUBTYPE_CONSTRAINT;        

SUBTYPE_CONSTRAINT component_terminal_subtypes FOR physical_component_terminal;         
  (ONEOF(assembly_module_macro_component_join_terminal,
        interconnect_module_macro_component_join_terminal));
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT model_parameter_subtypes FOR model_parameter;         
	(ONEOF(analytical_model_parameter,
               category_model_parameter,
               rule_function_domain_parameter,
               rule_function_range_parameter));
END_SUBTYPE_CONSTRAINT;               

SUBTYPE_CONSTRAINT physical_unit_subtypes FOR physical_unit;         
 (ONEOF (bare_die, 
          package, 
          packaged_part, 
          assembly_definition, 
          interconnect_definition,
          reference_packaged_part_assembly_implementation,
          reference_packaged_part_interconnect_implementation));
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT shape_definition_3d_intersection_subtypes FOR shape_definition_3d_intersection;         
  (ONEOF (edge_segment_cross_section,
              pre_defined_parallel_datum_axis_symbol_3d_2d_relationship,
              pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship,
              pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship));
END_SUBTYPE_CONSTRAINT;        

TYPE ap210_managed_design_object = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON managed_design_object WITH 
     (action,
      alternate_product_relationship,
      applied_approval_assignment,
      applied_date_and_time_assignment,
      applied_document_reference,
      applied_group_assignment,
      approval,
      approval_status,
      certification,
      characterized_object,
      composite_curve_segment,
      configuration_effectivity,
      configuration_item,
      contract,
      curve_style,
      curve_style_font,
      curve_style_font_and_scaling,
      date,
      dimension_related_tolerance_zone_element,
      dimensional_characteristic_representation,
      dimensional_size,
      document,
      document_usage_constraint,
      externally_defined_item,
      fill_area_style,
      fill_area_style_colour,
      fill_area_style_hatching,
      fill_area_style_tiles,
      geometric_tolerance,
      geometric_tolerance_relationship,
      group,
      layer_connection_point,
      material_designation,
      measure_with_unit,
      organization,
      person,
      person_and_organization,
      plus_minus_tolerance,
      pre_defined_item,
      presentation_style_assignment,
      product,
      product_concept,
      product_definition,
      product_definition_formation,
      product_definition_formation_relationship,
      product_definition_relationship,
      property_definition,
      property_definition_relationship,
      property_definition_representation,
      representation,
      representation_context,
      representation_item,
      representation_relationship,
      runout_zone_orientation,
      security_classification,
      shape_aspect,
      shape_aspect_relationship,
      tolerance_value,
      tolerance_zone_form,
      versioned_action_request,
      action_directive,
		
	analog_port_variable,
	annotation_fill_area,
	applied_external_identification_assignment,
	applied_organization_assignment,
	applied_person_and_organization_assignment,
	auxiliary_characteristic_dimension_representation,
	assembly_component,
	assembly_component_usage,
	assembly_component_usage_substitute,
	assembly_joint,
	assembly_group_component_definition_placement_link,
	assembly_bond_definition,
	analytical_representation,
	analytical_model_port_assignment,
	analytical_model_port,
	analytical_model_make_from_relationship,
	analytical_model_definition,
	applied_identification_assignment,
	bus_element_link,
	bus_structural_definition,
	calendar_date,
	component_2d_location,
	component_3d_location,
	component_definition,
	component_feature,
	component_feature_relationship,
	component_functional_terminal,
	component_functional_unit,
	component_terminal,
	composite_signal_property_relationship,
	connection_zone_map_identification,
	connection_zone_interface_plane_relationship,
	conductive_interconnect_element_terminal_link,
	connector_based_interconnect_definition,
	coordinated_representation_item,
	date_and_time,
	datum,
	datum_difference_functional_unit_usage_view_terminal_assignment,
	descriptive_representation_item,
	device_terminal_map,
	dimensional_location,
	direct_stratum_component_join_implementation,
	direction,
	effectivity,
	evaluated_characteristic,
	externally_defined_curve_font,
	externally_defined_hatch_style,
	externally_defined_text_font,
	externally_defined_tile_style,
	fabrication_joint,
	frozen_assignment,
	functional_specification,
	functional_unit_terminal_definition,
	functional_terminal_group,
	general_property_relationship,
	geometric_representation_context,
	geometric_representation_item,
	geometric_tolerance_group,
	group_product_definition,
	group_shape_aspect,
	item_defined_transformation,
	interface_mounted_join,
	join_shape_aspect,
	layer,
	layout_junction,
	linear_array_component_definition_link,
	make_from_connectivity_relationship,
	make_from_feature_relationship,
	make_from_usage_option,
	mapped_item,
	measure_qualification,
	model_parameter,
	network_node_definition,
	packaged_connector_terminal_relationship,
	parameter_assignment_override,
	parameter_assignment_representation,
	part_connected_terminals_definition,
	passage_technology,
	physical_connectivity_definition,
	physical_connectivity_element,
	physical_network,
	physical_node_requirement_to_implementing_component_allocation,
	plated_inter_stratum_feature,
	product_category,
	product_category_relationship,
	product_specific_parameter_value_assignment,
	promissory_usage_occurrence,
	projected_zone_definition,
	printed_connector_template_terminal_relationship,
	printed_part_template_connected_terminals_definition,
	printed_part_template_material,
	printed_part_template_material_link,
	representation_relationship_with_transformation,
	requirement_assignment,
	requirements_property,
	rule_action,
	rule_conclusion_definition,
	rule_complex_clause,
	rule_function_definition,
	rule_simple_clause,
	rule_premise_definition,
	runout_zone_orientation_reference_direction,
	scalar_terminal_definition_link,
	sequential_laminate_passage_based_fabrication_joint,
	shape_dimension_representation,
	shape_modification,
	shape_representation,
	shape_representation_relationship,
	signal,
	solid_curve_font,
	specified_higher_usage_occurrence,
	stratum_concept_relationship,
	stratum_surface,
	stratum_technology,
	stratum_technology_link,
	styled_item,
	tolerance_zone_definition,
	usage_view_connection_zone_terminal_shape_relationship,
	vector);
END_TYPE;


RULE application_protocol_definition_required FOR
    (application_context);
WHERE
  WR1:  SIZEOF( QUERY( ac <* application_context |
              (SIZEOF (QUERY (apd <*
USEDIN(ac,'APPLICATION_CONTEXT_SCHEMA.APPLICATION_PROTOCOL_DEFINITION.APPLICATION')
|
                apd.application_interpreted_model_schema_name =
'electronic_assembly_interconnect_and_packaging_design'
                )) > 0)
              )) > 0;
END_RULE;

RULE dependent_instantiable_tolerance_value FOR (
         tolerance_value);
WHERE
  WR1: SIZEOF (QUERY (tv <* tolerance_value |
       NOT (SIZEOF(USEDIN(tv, '')) >= 1))) = 0;
END_RULE;

RULE ee_product_definition_unique_constraint FOR
 ( product_definition_with_associated_documents, 
   physical_unit, functional_unit );
LOCAL
  pdwad : BAG OF product_definition := 
QUERY( r <* product_definition_with_associated_documents | (TRUE) );
  pu : BAG OF product_definition := QUERY( r <* physical_unit | (TRUE) );
  fu : BAG OF product_definition := QUERY( r <* functional_unit | (TRUE) );
  epd : BAG OF product_definition;
  pdf_bag : BAG OF product_definition_formation;
  pd_bag : BAG OF product_definition;
  pass1 : BOOLEAN := TRUE;
  lcs_bag : BAG OF STRING;
  pass2 : BOOLEAN := TRUE;
  id_bag : BAG OF STRING;
END_LOCAL;

epd := pdwad + pu + fu;
REPEAT i := 1 to SIZEOF(epd) by 1;
  IF EXISTS( epd[i].formation ) THEN
    IF( NOT( epd[i].formation IN pdf_bag ) ) THEN
      pdf_bag := pdf_bag + epd[i].formation;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdf_bag) by 1;
  IF ( NOT (pass1 OR pass2) ) THEN ESCAPE;
  END_IF;
  lcs_bag := [];
  id_bag := [];
  pd_bag := QUERY( pd <* epd | (pd.formation :=: pdf_bag[i]) );
  REPEAT j := 1 to SIZEOF(pd_bag) by 1;
    IF ( NOT (pass1 OR pass2) ) THEN ESCAPE;
    END_IF;
    IF ( pass2 ) THEN
      IF EXISTS( pd_bag[j].id ) THEN
        IF ( pd_bag[j].id IN id_bag ) THEN
          pass2 := FALSE;
          ESCAPE;
        ELSE
          id_bag := id_bag + pd_bag[j].id;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass2;
END_RULE;


RULE no_shape_for_make_from FOR
  (make_from_usage_option);
WHERE
  WR1: SIZEOF (QUERY (mfuo <* make_from_usage_option |
       NOT (SIZEOF (QUERY (pd <* USEDIN (mfuo, 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_SHAPE' IN 
       TYPEOF (pd))) = 0))) = 0;
END_RULE;

RULE origin_constraint FOR (placement);
LOCAL
 origin_2d : SET OF axis2_placement_2d := QUERY(pl <* placement | ((pl\representation_item.name = 'origin') AND 
    ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.AXIS2_PLACEMENT_2D' IN TYPEOF(pl))));
 origin_3d : SET OF axis2_placement_3d := QUERY(pl <* placement | ((pl\representation_item.name = 'origin') AND 
    ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.AXIS2_PLACEMENT_3D' IN TYPEOF(pl))));
pass : BOOLEAN := TRUE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(origin_2d) by 1;
  IF (NOT pass) THEN ESCAPE; END_IF;
  IF (NOT((origin_2d[i].location.coordinates[1] = 0.0) AND
   (origin_2d[i].location.coordinates[2] = 0.0) AND
   NOT EXISTS(origin_2d[i].ref_direction)))
  THEN
   pass := FALSE;
  END_IF;
END_REPEAT;
REPEAT i := 1 to SIZEOF(origin_3d) by 1;
  IF (NOT pass) THEN ESCAPE; END_IF;
  IF NOT(
   (origin_3d[i].location.coordinates[1] = 0.0) AND
   (origin_3d[i].location.coordinates[2] = 0.0) AND
   (origin_3d[i].location.coordinates[3] = 0.0) AND
   (NOT(EXISTS(origin_3d[i].ref_direction))) AND 
   (NOT(EXISTS(origin_3d[i].axis)))
   )
  THEN
   pass := FALSE;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass; 
END_RULE;

RULE part_feature_unique_constraint FOR
 ( composite_shape_aspect, shape_aspect, primary_orientation_feature,
tertiary_orientation_feature,
secondary_orientation_feature, package_body, part_tooling_feature,
thermal_feature, part_mounting_feature, package_terminal,
assembly_module_terminal, bare_die_terminal, interconnect_module_terminal,
minimally_defined_bare_die_terminal, packaged_part_terminal, 
package_body_surface );
LOCAL
  csa : BAG OF shape_aspect := QUERY( r <* composite_shape_aspect |
(r\shape_aspect.description = 'part group feature') );
  sa : BAG OF shape_aspect := QUERY( r <* shape_aspect |
(r\shape_aspect.description IN ['part generic feature','polarity indication feature',
'interconnect module edge segment surface',
'interconnect module cavity surface',
'interconnect module cutout surface',
'interconnect module edge surface',
'interconnect module primary surface',
'interconnect module secondary surface',
'interconnect module surface feature']) );
  pof : BAG OF shape_aspect := QUERY( r <* 
                  primary_orientation_feature | (TRUE) );
  sof : BAG OF shape_aspect := QUERY( r <* 
                 secondary_orientation_feature | (TRUE) );
  tof : BAG OF shape_aspect := QUERY( r <* 
                 tertiary_orientation_feature | (TRUE) );
  pb : BAG OF shape_aspect := QUERY( r <* 
                                package_body | (TRUE) );
  ptf : BAG OF shape_aspect := QUERY( r <* part_tooling_feature | (TRUE) );
  tf : BAG OF shape_aspect := QUERY( r <* thermal_feature | (TRUE) );
  pmf : BAG OF shape_aspect := QUERY( r <* part_mounting_feature | (TRUE) );
  pt : BAG OF shape_aspect := QUERY( r <* package_terminal | (TRUE) );
  amt : BAG OF shape_aspect := QUERY( r <* 
                            assembly_module_terminal | (TRUE) );
  bdt : BAG OF shape_aspect := QUERY( r <* bare_die_terminal | (TRUE) );
  imt : BAG OF shape_aspect := QUERY( r <* 
                          interconnect_module_terminal | (TRUE) );
  mdbdt : BAG OF shape_aspect := QUERY( r <* 
                    minimally_defined_bare_die_terminal | (TRUE) );
  ppt : BAG OF shape_aspect := QUERY( r <* 
                                  packaged_part_terminal | (TRUE) );
  pbs : BAG OF shape_aspect := QUERY( r <* 
                                       package_body_surface | (TRUE) );
  pf : BAG OF shape_aspect := [];
  pu_bag : BAG OF physical_unit := [];
  sa_bag : BAG OF shape_aspect;
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING;
END_LOCAL;

sa := csa + sa + pof + sof +tof + pb + ptf + tf + pmf + 
          pt + amt + bdt + imt + mdbdt + ppt + pbs;
REPEAT i := 1 to SIZEOF(sa) by 1;
  IF EXISTS( sa[i] ) THEN
    IF ( NOT ( sa[i] IN pf )) THEN
      pf := pf + sa[i];
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pf) by 1;
  IF EXISTS( pf[i].of_shape.definition ) THEN
    IF ( (
'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
'PHYSICAL_UNIT' IN TYPEOF(pf[i].of_shape.definition)) AND
(pf[i].of_shape.definition.frame_of_reference.name = 
'physical design usage') ) THEN
      IF ( NOT ( pf[i].of_shape.definition IN pu_bag )) THEN
        pu_bag := pu_bag + pf[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  name_bag := [];
  sa_bag := QUERY( sa <* pf | (sa.of_shape.definition :=: pu_bag[i]) );
  REPEAT j := 1 to SIZEOF(sa_bag) by 1;
    IF EXISTS( sa_bag[j]\shape_aspect.name ) THEN
      IF ( sa_bag[j]\shape_aspect.name IN name_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        name_bag := name_bag + sa_bag[j]\shape_aspect.name;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE restrict_manifold_surface_shape_representation FOR
  (manifold_surface_shape_representation);
  WHERE
    WR1: SIZEOF(QUERY(mssr <* manifold_surface_shape_representation |
         (mssr\representation.name IN ['stratum feature non planar 2d shape',
         'open shell based surface',
         'design intent modification non planar 2d shape', 
         'part template non planar 2d shape']) AND
         (NOT(SIZEOF(QUERY(sbsm <* mssr.items | 
         ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
         'SHELL_BASED_SURFACE_MODEL' IN TYPEOF(sbsm)) AND
         (SIZEOF(QUERY(os <* sbsm\shell_based_surface_model.sbsm_boundary |
         'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
         'OPEN_SHELL' IN TYPEOF(os))) = 1)
         )) = 1)))) = 0;
END_RULE;

RULE shape_representation_requires_origin FOR (shape_representation);
WHERE
  WR1: 
(* 
pseudocode
co:FOREACH (sr <* shape_representation |c1);
c1:EXACTLYONE(it <* sr\representation.items |c2) 
   or ATLEASTONE(it <* sr\representation.items |c3)
   or EXACTLYNONE(it <* sr\representation.items |c4);
c2:((it.name = 'origin') or (it.name = 'orientation')) and 
   (AXIS2_PLACEMENT_2D in TYPEOF(it)  OR
    AXIS2_PLACEMENT_3D in TYPEOF(it));
c3:STYLED_ITEM in TYPEOF(it);
c4:((it.name = 'origin') or (it.name = 'orientation')) and
   ((sr.name = 'zone shape') or 
   (sr.context_of_items.context_type = 'connection zone colour'));
*)
SIZEOF(QUERY ( sr <* shape_representation |  NOT(
(SIZEOF(QUERY ( it <* sr\representation.items | (
((it\representation_item.name = 'origin') or (it\representation_item.name = 'orientation')) and 
   (('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
    'AXIS2_PLACEMENT_2D' in TYPEOF(it))  OR
   ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
    'AXIS2_PLACEMENT_2D' in TYPEOF(it)))
))) = 1
) 
OR
(SIZEOF(QUERY ( it <* sr\representation.items | (
   ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
    'STYLED_ITEM' in TYPEOF(it))
))) >= 1
)
OR
(SIZEOF(QUERY ( it <* sr\representation.items | (
((it\representation_item.name = 'origin') or (it\representation_item.name = 'orientation')) and
   ((sr\representation.name = 'zone shape') or 
   (sr.context_of_items\representation_context.context_type = 'connection zone colour'))
))) = 0
)
))) = 0;
END_RULE;

RULE subtype_combination_shape_aspect FOR (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (sa <* shape_aspect |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_BOND_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MINIMALLY_DEFINED_BARE_DIE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_FUNCTIONAL_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DATUM_REFERENCE_FRAME',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DERIVED_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DEVICE_TERMINAL_MAP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'FABRICATION_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'GROUP_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'INTERCONNECT_MODULE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'INTERFACE_MOUNTED_JOIN',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAND_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAYER',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAYER_CONNECTION_POINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MOUNTING_RESTRICTION_AREA',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGE_BODY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGED_PART_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PART_CONNECTED_TERMINALS_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PASSAGE_TECHNOLOGY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_CONNECTIVITY_ELEMENT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_NETWORK',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'POSITIONAL_BOUNDARY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'POSITIONAL_BOUNDARY_MEMBER',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PRINTED_PART_CROSS_SECTION_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'SEQUENTIAL_LAMINATE_PASSAGE_BASED_FABRICATION_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'SHAPE_MODIFICATION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_CONCEPT_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_FEATURE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_SURFACE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TOLERANCE_ZONE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TOLERANCE_ZONE_BOUNDARY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'VIEWING_PLANE']
       * TYPEOF(sa)) <= 1))) = 0;

  WR2: SIZEOF (QUERY (sa <* shape_aspect |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_BOND_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MINIMALLY_DEFINED_BARE_DIE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_FUNCTIONAL_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DATUM_REFERENCE_FRAME',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DEVICE_TERMINAL_MAP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'FABRICATION_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'GROUP_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'INTERCONNECT_MODULE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'INTERFACE_MOUNTED_JOIN',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAND_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAYER',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAYER_CONNECTION_POINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MOUNTING_RESTRICTION_AREA',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGE_BODY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGED_PART_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PART_CONNECTED_TERMINALS_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PASSAGE_TECHNOLOGY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_CONNECTIVITY_ELEMENT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_NETWORK',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_UNIT_DATUM',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'POSITIONAL_BOUNDARY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'POSITIONAL_BOUNDARY_MEMBER',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PRINTED_PART_CROSS_SECTION_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'SEQUENTIAL_LAMINATE_PASSAGE_BASED_FABRICATION_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'SHAPE_MODIFICATION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_CONCEPT_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_FEATURE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_SURFACE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TOLERANCE_ZONE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TOLERANCE_ZONE_BOUNDARY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'VIEWING_PLANE']
       * TYPEOF(sa)) <= 1))) = 0;

  WR3: SIZEOF (QUERY (sa <* shape_aspect |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_BOND_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_FUNCTIONAL_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DATUM_REFERENCE_FRAME',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DERIVED_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DEVICE_TERMINAL_MAP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'FABRICATION_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'GROUP_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'INTERFACE_MOUNTED_JOIN',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAND_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAYER',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'LAYER_CONNECTION_POINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MOUNTING_RESTRICTION_AREA',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGE_BODY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PART_CONNECTED_TERMINALS_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PASSAGE_TECHNOLOGY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_CONNECTIVITY_ELEMENT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_NETWORK',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_UNIT_DATUM_FEATURE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_UNIT_DATUM_TARGET',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'POSITIONAL_BOUNDARY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'POSITIONAL_BOUNDARY_MEMBER',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PRINTED_PART_CROSS_SECTION_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'SEQUENTIAL_LAMINATE_PASSAGE_BASED_FABRICATION_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'SHAPE_MODIFICATION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_CONCEPT_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_FEATURE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_SURFACE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TOLERANCE_ZONE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TOLERANCE_ZONE_BOUNDARY',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'VIEWING_PLANE']
       * TYPEOF(sa)) <= 1))) = 0;

  WR4: SIZEOF (QUERY (sa <* shape_aspect |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_UNIT_DATUM_FEATURE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_UNIT_DATUM_TARGET',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'PHYSICAL_UNIT_DATUM']
       * TYPEOF(sa)) <= 1))) = 0;

END_RULE;

RULE subtype_exclusive_mapped_item FOR (mapped_item);
WHERE
  WR1: SIZEOF (QUERY (mi <* mapped_item |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ANNOTATION_TEXT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ANNOTATION_SYMBOL'] *
       TYPEOF(mi)) <= 1))) = 0;
END_RULE;

RULE subtype_exclusive_product_definition FOR (product_definition);
WHERE
  WR1: SIZEOF (QUERY (pd <* product_definition |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'BUS_STRUCTURAL_DEFINITION', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_DEFINITION', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_FUNCTIONAL_UNIT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'FUNCTIONAL_UNIT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'NETWORK_NODE_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_UNIT', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM']
       * TYPEOF(pd)) <= 1))) = 0;
END_RULE;

RULE subtype_exclusive_property_definition FOR
  (property_definition);
WHERE
  WR1: SIZEOF (QUERY (pd <* property_definition |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DIMENSIONAL_SIZE_PROPERTY',   
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'GEOMETRIC_TOLERANCE_GROUP', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MATERIAL_PROPERTY', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_SHAPE', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'REQUIREMENTS_PROPERTY', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'SIGNAL']
       * TYPEOF(pd)) <= 1))) = 0;
END_RULE;

RULE subtype_exclusive_representation FOR 
  (representation);
WHERE
  WR1: SIZEOF (QUERY (rep <* representation |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'ANALYTICAL_MODEL_PORT', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'COMPONENT_LOCATION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'RULE_FUNCTION_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRUCTURED_TEXT_REPRESENTATION_ITEM',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TEXT_STRING_REPRESENTATION']
       * TYPEOF(rep)) <= 1))) = 0;
END_RULE;

RULE subtype_exclusive_representation_context FOR 
  (representation_context);
LOCAL
 pass : BOOLEAN := TRUE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(representation_context) by 1;
  pass := (NOT ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRUCTURED_TEXT_REPRESENTATION_CONTEXT' IN 
                          TYPEOF(representation_context[i]))
          OR (SIZEOF (TYPEOF(representation_context[i])) <= 2 )) 
       AND 
          (NOT ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(representation_context[i]))
          OR (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'GEOMETRIC_REPRESENTATION_CONTEXT', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PARAMETRIC_REPRESENTATION_CONTEXT'] 
         * TYPEOF(representation_context[i])) <= 2 )) 
      AND
          (NOT ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PARAMETRIC_REPRESENTATION_CONTEXT' IN 
                        TYPEOF(representation_context[i]))
          OR (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'GEOMETRIC_REPRESENTATION_CONTEXT', 
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PARAMETRIC_REPRESENTATION_CONTEXT'] 
        * TYPEOF(representation_context[i])) <= 2 ));
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE subtype_exclusive_shape_aspect_relationship FOR 
  (shape_aspect_relationship);
WHERE
  WR1: SIZEOF (QUERY (sar <* shape_aspect_relationship |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'ASSEMBLY_JOINT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DEVICE_TERMINAL_MAP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DIMENSIONAL_LOCATION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'INTERFACE_MOUNTED_JOIN',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MAKE_FROM_CONNECTIVITY_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'MAKE_FROM_FEATURE_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PHYSICAL_CONNECTIVITY_ELEMENT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'SHAPE_ASPECT_DERIVING_RELATIONSHIP',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'STRATUM_CONCEPT_RELATIONSHIP']
       * TYPEOF(sar)) <= 1))) = 0;
END_RULE;

RULE subtype_mandatory_action FOR (action);
WHERE
  WR1: SIZEOF (QUERY (act <* action |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'DIRECTED_ACTION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'EXECUTED_ACTION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'RULE_ACTION'] * 
       TYPEOF(act)) = 1))) = 0;
END_RULE;

RULE subtype_mandatory_externally_defined_item FOR 
                                       (externally_defined_item);
WHERE
  WR1: SIZEOF (QUERY (edi <* externally_defined_item |
       NOT (SIZEOF ([
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'BOND_CATEGORY',  
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_CURVE_FONT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_HATCH_STYLE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' + 
       'EXTERNALLY_DEFINED_REPRESENTATION_ITEM',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_SYMBOL',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_TEXT_FONT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_TILE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_TILE_STYLE',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'RULE_DEFINITION',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'SIGNAL_CATEGORY'] * 
       TYPEOF (edi)) = 1))) = 0;
END_RULE;

RULE subtype_mandatory_pre_defined_item FOR (pre_defined_item);
WHERE
  WR1: SIZEOF (QUERY (pdi <* pre_defined_item |
       NOT (SIZEOF 
       (['AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PRE_DEFINED_TEXT_FONT',
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'PRE_DEFINED_CURVE_FONT'] *
       TYPEOF(pdi)) = 1))) = 0;
END_RULE;

RULE subtype_mandatory_text_literal FOR (text_literal);
WHERE
  WR1: SIZEOF (QUERY (tl <* text_literal |
       NOT ((
       'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TEXT_LITERAL_WITH_EXTENT' IN TYPEOF (tl)) OR
       ('AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM.' +
       'TEXT_LITERAL_WITH_ASSOCIATED_CURVES' IN
       TYPEOF(tl))))) = 0;
END_RULE;

FUNCTION valid_2d_wireframe_edge_curve
  (crv   : curve; schma : STRING) : BOOLEAN;

  -- recursively check for valid basic curve types
  IF SIZEOF ([schma + '.LINE',
              schma + '.B_SPLINE_CURVE',
              schma + '.CIRCLE',
              schma + '.HYPERBOLA',
              schma + '.ELLIPSE',
              schma + '.PARABOLA',
              schma + '.POLYLINE'] * TYPEOF (crv)) = 1
      THEN RETURN (TRUE);
  ELSE
    -- recursively check for valid basic curves for curve_replicas
    IF (schma + '.CURVE_REPLICA') IN TYPEOF (crv)
      THEN RETURN (valid_2d_wireframe_edge_curve
                         (crv\curve_replica.parent_curve, schma));
    -- recursively check for valid basis curves for offset_curves
    ELSE
      IF (schma + '.OFFSET_CURVE_2D') IN TYPEOF (crv)
        THEN RETURN (valid_2d_wireframe_edge_curve
                         (crv\offset_curve_2d.basis_curve, schma));
      END_IF;
    END_IF;
  END_IF;
  RETURN (FALSE);
END_FUNCTION;

RULE ee_material_unique_constraint FOR
 ( material_designation );
LOCAL
  name_bag : BAG OF STRING := [];
  md_bag : BAG OF material_designation;
  adr_bag : BAG OF applied_document_reference;
  pass : BOOLEAN := TRUE;
  doc_bag : BAG OF ee_specification;
END_LOCAL;

REPEAT i := 1 to SIZEOF(material_designation) by 1;
  IF EXISTS( material_designation[i].name ) THEN
    IF( NOT( material_designation[i].name IN name_bag ) ) THEN
      name_bag := name_bag + material_designation[i].name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  md_bag := QUERY( md <* material_designation | (md\material_designation.name = name_bag[i]) );
  doc_bag := [];
  REPEAT j := 1 to SIZEOF(md_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    adr_bag := QUERY( adr <* USEDIN( md_bag[j], 
('AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'APPLIED_DOCUMENT_REFERENCE.ITEMS')) | 
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'DOCUMENT') IN TYPEOF(adr.assigned_document)) );
    REPEAT k := 1 to SIZEOF(adr_bag) by 1;
      IF EXISTS( adr_bag[k].assigned_document ) THEN
        IF ( adr_bag[k].assigned_document IN doc_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          doc_bag := doc_bag + adr_bag[k].assigned_document;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_functional_decomposition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:45 liutkus Exp $
   ISO TC184/SC4/WG12 N1642 - ISO/CD-TS 10303-1614 Ap210 functional decomposition - EXPRESS MIM
*)


SCHEMA Ap210_functional_decomposition_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Electrical_network_definition_mim;	-- ISO/TS 10303-1665
	USE FROM Thermal_network_definition_mim;	-- ISO/TS 10303-1752
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_functional_requirement_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:49 liutkus Exp $
   ISO TC184/SC4/WG12 N1645 - ISO/CD-TS 10303-1615 Ap210 functional requirement allocation - EXPRESS MIM
*)


SCHEMA Ap210_functional_requirement_allocation_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Functional_unit_requirement_allocation_mim;	-- ISO/TS 10303-1680
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_functional_specification_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:47 liutkus Exp $
   ISO TC184/SC4/WG12 N1648 - ISO/CD-TS 10303-1616 Ap210 functional specification - EXPRESS MIM
*)


SCHEMA Ap210_functional_specification_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Functional_specification_mim;	-- ISO/TS 10303-1679
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_interconnect_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:46 liutkus Exp $
   ISO TC184/SC4/WG12 N1651 - ISO/CD-TS 10303-1617 Ap210 interconnect design - EXPRESS MIM
*)


SCHEMA Ap210_interconnect_design_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_mim;	-- ISO/TS 10303-1655
	USE FROM Connectivity_allocation_to_physical_network_mim;	-- ISO/TS 10303-1658
	USE FROM Design_specific_assignment_to_interconnect_usage_view_mim;	-- ISO/TS 10303-1663
	USE FROM Device_marking_mim;	-- ISO/TS 10303-1664
	USE FROM Interconnect_2d_shape_mim;	-- ISO/TS 10303-1682
	USE FROM Interconnect_3d_shape_mim;	-- ISO/TS 10303-1683
	USE FROM Interconnect_module_to_assembly_module_relationship_mim;	-- ISO/TS 10303-1685
	USE FROM Layered_interconnect_module_2d_design_mim;	-- ISO/TS 10303-1695
	USE FROM Layered_interconnect_module_3d_design_mim;	-- ISO/TS 10303-1696
	USE FROM Layered_interconnect_module_3d_shape_mim;	-- ISO/TS 10303-1697
	USE FROM Layout_macro_definition_mim;	-- ISO/TS 10303-1701
	USE FROM Pre_defined_datum_symbol_mim;	-- ISO/TS 10303-1734
	USE FROM Via_component_mim;	-- ISO/TS 10303-1754
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_interconnect_design_for_microwave_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/02/04 17:06:38 budreckytej Exp $
   ISO TC184/SC4/WG12 N1654 - ISO/CD-TS 10303-1618 Ap210 interconnect design for microwave - EXPRESS MIM
*)


SCHEMA Ap210_interconnect_design_for_microwave_mim;
	USE FROM Ap210_interconnect_design_mim;	-- ISO/TS 10303-1617
	USE FROM Characteristic_mim;	-- ISO/TS 10303-1654
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_interconnect_functional_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/04/04 09:01:49 liutkus Exp $
   ISO TC184/SC4/WG12 N1657 - ISO/CD-TS 10303-1619 Ap210 interconnect functional requirements - EXPRESS MIM
*)


SCHEMA Ap210_interconnect_functional_requirements_mim;
	USE FROM Ap210_functional_decomposition_mim;	-- ISO/TS 10303-1614
	USE FROM Functional_decomposition_to_interconnect_design_mim;	-- ISO/TS 10303-1677
	USE FROM Functional_decomposition_with_nodal_representation_to_packaged_mapping_mim;	-- ISO/TS 10303-1678
	USE FROM Planned_characteristic_mim;	-- ISO/TS 10303-1733
	USE FROM Test_requirement_allocation_mim;	-- ISO/TS 10303-1751
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_interconnect_physical_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 10:36:36 liutkus Exp $
   ISO TC184/SC4/WG12 N1660 - ISO/CD-TS 10303-1620 Ap210 interconnect physical requirements - EXPRESS MIM
*)


SCHEMA Ap210_interconnect_physical_requirements_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Fabrication_requirement_mim;	-- ISO/TS 10303-1669
	USE FROM Interconnect_placement_requirements_mim;	-- ISO/TS 10303-1690
	USE FROM Test_requirement_allocation_mim;	-- ISO/TS 10303-1751
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_interconnect_requirement_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/02/10 12:39:41 liutkus Exp $
   ISO TC184/SC4/WG12 N1663 - ISO/CD-TS 10303-1621 Ap210 interconnect requirement allocation - EXPRESS MIM
*)


SCHEMA Ap210_interconnect_requirement_allocation_mim;
	USE FROM Ap210_interconnect_functional_requirements_mim;	-- ISO/TS 10303-1619
	USE FROM Ap210_interconnect_physical_requirements_mim;	-- ISO/TS 10303-1620
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_interconnect_technology_constraints_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 09:01:48 liutkus Exp $
   ISO TC184/SC4/WG12 N1666 - ISO/CD-TS 10303-1622 Ap210 interconnect technology constraints - EXPRESS MIM
*)


SCHEMA Ap210_interconnect_technology_constraints_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Fabrication_technology_mim;	-- ISO/TS 10303-1670
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_laminate_assembly_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 09:01:48 liutkus Exp $
   ISO TC184/SC4/WG12 N1669 - ISO/CD-TS 10303-1623 Ap210 laminate assembly design - EXPRESS MIM
*)


SCHEMA Ap210_laminate_assembly_design_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Sequential_laminate_assembly_design_mim;	-- ISO/TS 10303-1741
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_package_functional_and_physical_characterization_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:47 liutkus Exp $
   ISO TC184/SC4/WG12 N1672 - ISO/CD-TS 10303-1624 Ap210 package functional and physical characterization - EXPRESS MIM
*)


SCHEMA Ap210_package_functional_and_physical_characterization_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_mim;	-- ISO/TS 10303-1655
	USE FROM Package_mim;	-- ISO/TS 10303-1707
	USE FROM Part_feature_grouping_mim;	-- ISO/TS 10303-1713
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_packaged_part_white_box_model_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:49 liutkus Exp $
   ISO TC184/SC4/WG12 N1675 - ISO/CD-TS 10303-1674 Ap210 packaged part white box model - EXPRESS MIM
*)


SCHEMA Ap210_packaged_part_white_box_model_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Packaged_part_white_box_model_mim;	-- ISO/TS 10303-1709
	USE FROM Part_feature_grouping_mim;	-- ISO/TS 10303-1713
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_physical_unit_physical_characterization_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:50 liutkus Exp $
   ISO TC184/SC4/WG12 N1678 - ISO/CD-TS 10303-1626 Ap210 physical unit physical characterization - EXPRESS MIM
*)


SCHEMA Ap210_physical_unit_physical_characterization_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Part_feature_grouping_mim;	-- ISO/TS 10303-1713
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_printed_part_functional_and_physical_characterization_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:49 liutkus Exp $
   ISO TC184/SC4/WG12 N1681 - ISO/CD-TS 10303-1627 Ap210 printed part functional and physical characterization - EXPRESS MIM
*)


SCHEMA Ap210_printed_part_functional_and_physical_characterization_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Chemical_substance_mim;	-- ISO/TS 10303-1655
	USE FROM Physical_layout_template_mim;	-- ISO/TS 10303-1722
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_product_data_management_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.43 2005/04/08 18:23:54 liutkus Exp $
   ISO TC184/SC4/WG12 N3349 - ISO/CD-TS 10303-1628 Ap210 product data management - EXPRESS MIM
*)


SCHEMA Ap210_product_data_management_mim;

	USE FROM Product_data_management_mim;	-- ISO/TS 10303-1231
	USE FROM Alias_identification_mim;	-- ISO/TS 10303-1025
	USE FROM Classification_with_attributes_mim;	-- ISO/TS 10303-1111
	USE FROM Generic_material_aspects_mim;	-- ISO/TS 10303-1681
	USE FROM Group_mim;	-- ISO/TS 10303-1113
	USE FROM Part_occurrence_mim;	-- ISO/TS 10303-1715
	USE FROM Pre_defined_product_data_management_specialisations_mim;
	USE FROM Promissory_usage_in_product_concept_mim;	-- ISO/TS 10303-1758
	USE FROM Requirement_assignment_mim;	-- ISO/TS 10303-1233
	USE FROM Requirement_view_definition_relationship_mim;	-- ISO/TS 10303-1142
	USE FROM Test_select_product_mim;	-- ISO/TS 10303-1757


	USE FROM Contract_schema(contract_type);
	USE FROM Document_schema(document_type);
	USE FROM Product_definition_schema(product_definition_formation_with_specified_source);
	USE FROM Product_structure_schema(make_from_usage_option);
	USE FROM Representation_schema(parametric_representation_context);


TYPE ap210_pdm_name_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON name_item WITH 
   (external_class_library,
   product,
   product_definition);
END_TYPE; 

TYPE ap210_pdm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_approval_item WITH 
     (action_directive,
      certification,
      configuration_item,
      contract,
      date,
      directed_action,
      document,
      effectivity,
      executed_action,
      general_property_relationship,
      product,
      product_definition,
      product_definition_formation_relationship,
      product_definition_relationship,
      product_definition_formation,
      representation,
      requirement_assignment,
      security_classification,
      shape_aspect_relationship);
END_TYPE;

TYPE ap210_pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_certification_item WITH 
     (alternate_product_relationship,
     product_definition_formation,
     make_from_usage_option);
END_TYPE;

TYPE ap210_pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_classification_item WITH 
     (material_designation);
END_TYPE;

TYPE ap210_pdm_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH 
     (action_directive,
      alternate_product_relationship,
      directed_action,
      person_and_organization,
      product,
      product_definition_formation);
END_TYPE;

TYPE ap210_pdm_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_date_and_time_item WITH 
     (action_directive,
      approval_person_organization,
      certification,
      contract,
      directed_action,
      document,
      product_definition,
      security_classification);
END_TYPE;

TYPE ap210_pdm_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_document_reference_item WITH 
     (applied_external_identification_assignment,
      assembly_component_usage,
      characterized_object,
      configuration_item,
      descriptive_representation_item,
      externally_defined_item,
      material_designation,
      measure_representation_item,
      product,
      product_category,
      product_definition,
      product_definition_formation,
      property_definition,
      representation,
      representation_item);
END_TYPE;

TYPE ap210_pdm_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
     (product_definition,
     product_definition_formation,
     property_definition_representation,
     representation,
     representation_item,
     shape_aspect,
     shape_aspect_relationship);
END_TYPE;

TYPE ap210_pdm_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_organization_item WITH 
     (action_directive,
      applied_identification_assignment,
      certification,
      directed_action,
      document,
      product,
      product_definition,
      product_definition_formation,
      product_definition_formation_relationship,
      representation);
END_TYPE;

TYPE ap210_pdm_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_person_and_organization_item WITH 
     (action_directive,
      applied_identification_assignment,
      certification,
      document,
      product,
      product_definition_formation,
      product_definition_formation_relationship,
      product_definition,
      directed_action);
END_TYPE;

TYPE ap210_pdm_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
    (descriptive_representation_item, 
     configuration_item, 
     product_definition, 
     product_definition_formation, 
     product, 
     shape_aspect, 
     representation); 
END_TYPE; 

TYPE ap210_pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_security_classification_item WITH 
     (document,
      make_from_usage_option,
      product_definition_formation,
      product_definition);
END_TYPE;

TYPE ap210_pdm_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_date_item WITH 
     (action_directive,
      product_definition,
      directed_action,
      approval_person_organization,
      contract,
	  document,
	  executed_action,
      security_classification,
      certification);
END_TYPE;

TYPE ap210_pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_identification_item WITH 
     (characterized_class,
      configuration_item,
      material_designation,
      person_and_organization,
      product,
      product_category,
      product_concept,
      product_definition_formation,
      organization);
END_TYPE;

TYPE promissory_usage_in_product_model_assigned_item = SELECT
     (product_concept,
      product_definition);
END_TYPE;

TYPE ap210_pdm_action_request_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_action_request_item WITH 
     (versioned_action_request);
END_TYPE;

RULE approval_requires_approval_date_time FOR (approval,
         approval_date_time);
WHERE
  WR1: SIZEOF(QUERY ( app <* approval |
       NOT (SIZEOF (QUERY (adt <* approval_date_time |
       app :=: adt.dated_approval)) = 1))) = 0;
END_RULE;

RULE approval_requires_approval_person_organization FOR (approval,
         approval_person_organization);
WHERE
  WR1: SIZEOF (QUERY (app <* approval |
       NOT (SIZEOF (QUERY (apo <* approval_person_organization |
       app :=: apo.authorized_approval)) >= 1))) = 0;
END_RULE;

RULE approval_role_constraint FOR
  (approval_role);
WHERE
  WR1: SIZEOF (QUERY (apr <* approval_role |
       NOT (apr\approval_role.role = 'authorizer')
       )) = 0;
END_RULE;

RULE approvals_are_assigned FOR
  (approval, approval_assignment);
WHERE
  WR1: SIZEOF (QUERY (app <* approval |
       NOT (SIZEOF (QUERY (aa <* approval_assignment |
       app :=: aa.assigned_approval )) >= 1 ))) = 0;
END_RULE;

RULE certification_requires_date_or_date_and_time FOR
  (certification, applied_date_and_time_assignment,
   applied_date_assignment);
WHERE
  WR1: SIZEOF (QUERY (cert <* certification |
       NOT ((SIZEOF (QUERY (adata <* applied_date_and_time_assignment |
       cert IN adata.items )) = 1 ) OR
       (SIZEOF (QUERY (ada <* applied_date_assignment |
       cert IN ada.items )) = 1 )))) = 0;
END_RULE;

RULE certification_unique_constraint FOR (certification);

LOCAL
  r :  BAG OF certification := QUERY (r <* certification | TRUE);
  pass :  BOOLEAN := TRUE;
  name_bag :  BAG OF string := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF (r) by 1;
  IF EXISTS( r[i]\certification.name ) THEN
    IF (r[i]\certification.name IN name_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      name_bag := name_bag + r[i]\certification.name;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
  WR1:  pass;

END_RULE;

RULE configuration_item_requires_person_organization FOR
  (configuration_item,
  applied_person_and_organization_assignment,
  applied_organization_assignment);
WHERE
  WR1: SIZEOF (QUERY (ci <* configuration_item |
       NOT ((SIZEOF (QUERY (apaoa <*
       applied_person_and_organization_assignment |
       ci IN apaoa.items )) = 1 ) OR
       (SIZEOF (QUERY (aoa <*
       applied_organization_assignment |
       ci IN aoa.items )) = 1 )))) = 0;
END_RULE;

RULE contract_unique_constraint FOR (contract);

LOCAL
  r : BAG OF contract := QUERY (r <* contract | TRUE);
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF string := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF (r) by 1;
  IF EXISTS( r[i]\contract.name ) THEN
    IF (r[i]\contract.name IN name_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      name_bag := name_bag + r[i]\contract.name;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
  WR1 : pass;

END_RULE;

RULE date_and_time_require_minute_and_second FOR ( date_and_time );
WHERE
  WR1: SIZEOF(QUERY(dat <* date_and_time |
              NOT(Exists(dat.time_component.minute_component)))) = 0;
  WR2: SIZEOF(QUERY(dat <* date_and_time |
              NOT(Exists(dat.time_component.second_component)))) = 0;
END_RULE;

RULE date_constraint FOR (date);
WHERE
  WR1: SIZEOF (QUERY (d <* date |
       d.year_component < 1856)) = 0;
END_RULE;

RULE dependent_instantiable_action_directive FOR (action_directive);
WHERE
  WR1: SIZEOF (QUERY (ad <* action_directive |
       NOT (SIZEOF (USEDIN (ad, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_approval_status FOR (approval_status);
WHERE
WR1: SIZEOF (QUERY (ast <* approval_status |
     NOT (SIZEOF (USEDIN (ast, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_certification_type FOR (certification_type);
WHERE
  WR1: SIZEOF (QUERY (ct <* certification_type |
       NOT (SIZEOF (USEDIN (ct, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_contract_type FOR (contract_type);
WHERE
  WR1: SIZEOF(QUERY ( ct <* contract_type |
       NOT (SIZEOF (USEDIN (ct, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_date FOR (date);
WHERE
  WR1: SIZEOF (QUERY (dt <* date |
       NOT (SIZEOF(USEDIN (dt, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_date_role FOR (date_role);
WHERE
  WR1: SIZEOF (QUERY (dr <* date_role |
       NOT (SIZEOF (USEDIN (dr, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_date_time_role FOR (date_time_role);
WHERE
  WR1: SIZEOF (QUERY (dtr <* date_time_role |
       NOT (SIZEOF (USEDIN (dtr, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_document_type FOR (document_type);
WHERE
  WR1: SIZEOF (QUERY (dt <* document_type |
       NOT (SIZEOF (USEDIN (dt, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_named_unit FOR (named_unit);
WHERE
  WR1: SIZEOF (QUERY (nu <* named_unit |
       NOT (SIZEOF (USEDIN (nu, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_organization_role FOR (
         organization_role);
WHERE
  WR1: SIZEOF (QUERY (org <* organization_role |
       NOT (SIZEOF (USEDIN (org, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_parametric_representation_context FOR
  (parametric_representation_context);
WHERE
  WR1: SIZEOF (QUERY (prc <* parametric_representation_context |
       NOT (SIZEOF (USEDIN (prc, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_person_and_organization_role FOR (
         person_and_organization_role);
WHERE
  WR1: SIZEOF (QUERY (poar <* person_and_organization_role |
       NOT (SIZEOF (USEDIN (poar, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_representation_item FOR (representation_item);
WHERE
  WR1: SIZEOF (QUERY (ri <* representation_item |
       NOT (SIZEOF (USEDIN (ri, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_security_classification_level FOR (
         security_classification_level);
WHERE
  WR1: SIZEOF (QUERY (scl <* security_classification_level |
       NOT (SIZEOF (USEDIN (scl, '')) >= 1))) = 0;
END_RULE;

RULE dependent_instantiable_shape_representation FOR (
         shape_representation);
WHERE
  WR1: SIZEOF (QUERY (sr <* shape_representation |
       NOT (SIZEOF(USEDIN(sr, '')) >= 1))) = 0;
END_RULE;

RULE directed_action_requires_approval FOR
  (directed_action, applied_approval_assignment);
WHERE
  WR1: SIZEOF (QUERY (da <* directed_action |
       NOT (SIZEOF (QUERY (aaa <* applied_approval_assignment |
       da IN aaa.items )) = 1 ))) = 0;
END_RULE;

RULE directed_action_requires_date_or_date_and_time FOR
  (directed_action, applied_date_and_time_assignment,
   applied_date_assignment);
WHERE
  WR1: SIZEOF (QUERY (da <* directed_action |
       NOT ((SIZEOF (QUERY (adata <* applied_date_and_time_assignment |
       (da IN adata.items)
       AND (adata.role\date_time_role.name = 'start date'))) = 1 ) OR
       (SIZEOF (QUERY (ada <* applied_date_assignment |
       (da IN ada.items)
       AND (ada.role\date_role.name = 'start date'))) = 1 )))) = 0;
END_RULE;

RULE ee_product_configuration_unique_constraint FOR
 ( configuration_item );
LOCAL
  id_bag : BAG OF STRING := [];
  ci_bag : BAG OF configuration_item;
  cd_bag : BAG OF configuration_design;
  pass : BOOLEAN := TRUE;
  pdf_bag : BAG OF product_definition_formation;
END_LOCAL;

REPEAT i := 1 to SIZEOF(configuration_item) by 1;
  IF EXISTS( configuration_item[i].id ) THEN
    IF( NOT( configuration_item[i].id IN id_bag ) ) THEN
      id_bag := id_bag + configuration_item[i].id;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(id_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pdf_bag := [];
  ci_bag := QUERY( ci <* configuration_item | (ci.id = id_bag[i]) );
  REPEAT j := 1 to SIZEOF(ci_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    cd_bag := USEDIN( ci_bag[j], 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'CONFIGURATION_DESIGN.CONFIGURATION');
    REPEAT k := 1 to SIZEOF(cd_bag) by 1;
      IF EXISTS( cd_bag[k].design ) THEN
        IF ( cd_bag[k].design IN pdf_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          pdf_bag := pdf_bag + cd_bag[k].design;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE ee_product_constraint FOR ( product );
WHERE
  WR1: SIZEOF(QUERY(prod <* product |
       NOT ((SIZEOF(QUERY(aoa <* USEDIN(prod,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')
       | (aoa.role\organization_role.name = 'design owner')
       )) = 1) OR 
       (SIZEOF(QUERY(apaoa <* USEDIN(prod,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS')
       | (apaoa.role\person_and_organization_role.name = 'design owner')
       )) = 1)))) = 0;
  WR2: SIZEOF(QUERY(p <* product |
              SIZEOF(USEDIN(p,
              'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
              + 'PRODUCT_DEFINITION_FORMATION.OF_PRODUCT')) = 0)) = 0;
END_RULE;

RULE ee_product_definition_constraint FOR 
( product_definition_with_associated_documents );
WHERE
  WR1: SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT(
       (SIZEOF(QUERY(adata <* USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS')
       | (adata.role\date_time_role.name = 'creation date')
       )) = 1)))) = 0;
  WR2: SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT ((SIZEOF(QUERY(aoa <* USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')
       | (aoa.role\organization_role.name = 'creator')
       )) = 1) OR 
       (SIZEOF(QUERY(apaoa <* USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS')
       | (apaoa.role\person_and_organization_role.name = 'creator')
       )) = 1))
       )) = 0;
  WR3: SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT(
       (SIZEOF(USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')
       ) = 1)
       )
       )) = 0;
  WR4: SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT(
       (SIZEOF(USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')
       ) = 1)
       )
       )) = 0;
END_RULE;

RULE ee_product_model_unique_constraint FOR (product_concept);

LOCAL
  r : BAG OF product_concept := QUERY (r <* product_concept | TRUE);
  pass : BOOLEAN := TRUE;
  id_bag : BAG OF string := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF (r) by 1;
  IF EXISTS( r[i].id ) THEN
    IF (r[i]\product_concept.id IN id_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      id_bag := id_bag + r[i].id;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
  WR1 : pass;
END_RULE;

RULE ee_product_unique_constraint FOR
 ( product );
LOCAL
  id_bag : BAG OF STRING := [];
  p_bag : BAG OF product;
  aoa_bag : BAG OF applied_organization_assignment;
  apaoa_bag : BAG OF applied_person_and_organization_assignment;
  pass : BOOLEAN := TRUE;
  o_bag : BAG OF organization;
  pao_bag : BAG OF person_and_organization;
END_LOCAL;

REPEAT i := 1 to SIZEOF(product) by 1;
  IF EXISTS( product[i].id ) THEN
    IF( NOT( product[i].id IN id_bag ) ) THEN
      id_bag := id_bag + product[i].id;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(id_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  o_bag := [];
  pao_bag := [];
  p_bag := QUERY( p <* product | (p.id = id_bag[i]) );
  REPEAT j := 1 to SIZEOF(p_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    aoa_bag := QUERY( aoa <* USEDIN( p_bag[j], 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') | 
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'ORGANIZATION' IN TYPEOF(aoa.assigned_organization)) AND 
(aoa.role\organization_role.name = 'design owner')) );
    REPEAT k := 1 to SIZEOF(aoa_bag) by 1;
      IF EXISTS( aoa_bag[k].assigned_organization ) THEN
        IF ( aoa_bag[k].assigned_organization IN o_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          o_bag := o_bag + aoa_bag[k].assigned_organization;
        END_IF;
      END_IF;
    END_REPEAT;
    apaoa_bag := QUERY( apaoa <* USEDIN( p_bag[j], 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') | 
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'PERSON_AND_ORGANIZATION' IN 
TYPEOF(apaoa.assigned_person_and_organization)) 
AND (apaoa.role\person_and_organization_role.name = 'design owner')) );
    REPEAT k := 1 to SIZEOF(apaoa_bag) by 1;
      IF EXISTS( apaoa_bag[k].assigned_person_and_organization ) THEN
        IF ( apaoa_bag[k].assigned_person_and_organization IN pao_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          pao_bag := pao_bag + 
                     apaoa_bag[k].assigned_person_and_organization;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE ee_product_version_supersedence_constraint FOR 
( product_definition_formation_relationship );
WHERE
  WR1: SIZEOF(QUERY(pdfr <* product_definition_formation_relationship |
       ((pdfr\product_definition_formation_relationship.name = 'product version supersedence')
       AND (NOT(pdfr.relating_product_definition_formation.of_product :=:
           pdfr.related_product_definition_formation.of_product)))
       )) = 0;
END_RULE;

RULE next_higher_assembly_relationship_constraint FOR
( next_assembly_usage_occurrence );
WHERE
  WR1: SIZEOF(QUERY(nauo <* next_assembly_usage_occurrence|
       NOT(SIZEOF(QUERY(pd <* USEDIN(nauo,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'PROPERTY_DEFINITION.DEFINITION') |
       ((SIZEOF(QUERY(pdr <* USEDIN(pd,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
        ('AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'COMPONENT_LOCATION' IN TYPEOF(pdr.used_representation))
       AND 
       (pdr.used_representation.context_of_items\geometric_representation_context.
       coordinate_space_dimension = 3)
       )) <= 1)
       AND
       (SIZEOF(QUERY(pdr <* USEDIN(pd,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
        ('AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'COMPONENT_LOCATION' IN TYPEOF(pdr.used_representation))
       AND 
       (pdr.used_representation.context_of_items\geometric_representation_context.
       coordinate_space_dimension = 2)
       )) <= 1))
       )) <= 1)
       )) = 0;
END_RULE;

RULE organization_unique_constraint FOR (organization);

LOCAL
  r : BAG OF organization := QUERY (r <* organization | TRUE);
  pass : BOOLEAN := TRUE;
  id_bag : BAG OF string := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF (r) by 1;
  IF EXISTS( r[i].id ) THEN
    IF (r[i]\organization.id IN id_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      id_bag := id_bag + r[i].id;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
WR1 : pass;
END_RULE;

RULE planned_effectivity_constraint FOR ( configuration_effectivity );
WHERE
  WR1: SIZEOF(QUERY(ce <* configuration_effectivity |
       NOT(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(ce.usage))
       AND (ce.usage\product_definition_relationship.name = 'assembly composition'))
       )) = 0;
  WR2: SIZEOF(QUERY(ce <* configuration_effectivity |
       SIZEOF(USEDIN(ce,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
       + 'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 0 
       )) = 0;

END_RULE;

RULE planned_effectivity_unique_constraint FOR
 ( configuration_effectivity );
LOCAL
  ce_bag : BAG OF configuration_effectivity;
  ci_bag : BAG OF configuration_item := [];
  pass : BOOLEAN := TRUE;
  acu_bag : BAG OF assembly_component_usage;
END_LOCAL;

REPEAT i := 1 to SIZEOF(configuration_effectivity) by 1;
  IF EXISTS( configuration_effectivity[i].configuration.configuration ) THEN
    IF( NOT( configuration_effectivity[i].configuration.configuration IN 
                                                            ci_bag ) ) THEN
      ci_bag := ci_bag + 
               configuration_effectivity[i].configuration.configuration;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(ci_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ce_bag := QUERY( r <* configuration_effectivity |
((r.configuration.configuration :=: ci_bag[i]) AND 
                              (r.usage\product_definition_relationship.name = 'assembly composition')
AND ('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(r.usage)) ) );
  acu_bag := [];
  REPEAT j := 1 to SIZEOF(ce_bag) by 1;
    IF EXISTS( ce_bag[j].usage ) THEN
      IF ( ce_bag[j].usage IN acu_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        acu_bag := acu_bag + ce_bag[j].usage;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;


RULE product_concept_requires_configuration_item FOR
  (product_concept, configuration_item);
WHERE
  WR1: SIZEOF (QUERY (pc <* product_concept |
       NOT (SIZEOF (QUERY (ci <* configuration_item |
       pc :=: ci.item_concept)) >=1 ))) = 0;
END_RULE;

RULE product_definition_formation_requires_person_organization FOR
  (product_definition,
  applied_person_and_organization_assignment,
  applied_organization_assignment);
WHERE
  WR1: SIZEOF (QUERY (pd <* product_definition|
       (NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF(pd))) AND
       (NOT ((SIZEOF (QUERY (apaoa <*
       applied_person_and_organization_assignment |
       (pd.formation IN apaoa.items) AND (apaoa.role\person_and_organization_role.name = 'creator'))) = 1 ) OR
       (SIZEOF (QUERY (aoa <*
       applied_organization_assignment |
       (pd.formation IN aoa.items) AND (aoa.role\organization_role.name = 'creator'))) = 1 ))))) = 0;
END_RULE;

RULE product_requires_person_organization FOR
  (product, applied_person_and_organization_assignment,
   applied_organization_assignment);
WHERE
  WR1: SIZEOF (QUERY (prod <* product |
       NOT ((SIZEOF (QUERY (apaoa <*
       applied_person_and_organization_assignment |
       prod IN apaoa.items )) = 1 ) OR
       (SIZEOF (QUERY (aoa <*
       applied_organization_assignment |
       prod IN aoa.items )) = 1 )))) = 0;
END_RULE;

RULE product_requires_product_definition_formation FOR
  (product, product_definition_formation);
WHERE
  WR1: SIZEOF (QUERY (prod <* product |
       NOT (SIZEOF (QUERY (pdf <* product_definition_formation |
       prod :=: pdf.of_product )) >= 1 ))) = 0;
END_RULE;

RULE restrict_action_request_status FOR (action_request_status);
WHERE
  WR1: SIZEOF (QUERY (ars <* action_request_status |
       NOT (ars\action_request_status.status IN
       ['proposed', 'in work', 'issued', 'hold']))) = 0;
END_RULE;

RULE restrict_approval_status FOR (approval_status);
WHERE
  WR1: SIZEOF (QUERY (ast <* approval_status |
       NOT (ast\approval_status.name IN
       ['approved', 'not yet approved', 'disapproved', 'withdrawn']))) = 0;
END_RULE;

RULE restrict_date_role FOR (date_role);
WHERE
  WR1: SIZEOF (QUERY (dr <* date_role |
       NOT (dr\date_role.name IN ['creation date', 'request date', 'release date',
       'start date', 'contract date', 'certification date', 'sign off date',
       'classification date', 'declassification date']))) = 0;
END_RULE;

RULE security_classification_constraint FOR (security_classification,
     applied_date_and_time_assignment, applied_date_assignment,
     applied_person_and_organization_assignment, applied_approval_assignment);
WHERE
  WR1: SIZEOF (QUERY (sc <* security_classification |
       NOT ((SIZEOF (QUERY (adata <* applied_date_and_time_assignment |
       (sc IN adata.items) AND
       ('classification date' = adata.role\date_time_role.name))) = 1 ) OR
       (SIZEOF (QUERY (ada <* applied_date_assignment |
       (sc IN ada.items) AND
       ('classification date' = ada.role\date_role.name))) = 1 )))) = 0;
  WR2: SIZEOF (QUERY (sc <* security_classification |
       SIZEOF (QUERY (apa <* applied_person_and_organization_assignment |
       (sc IN apa.items) AND
       (apa.role\person_and_organization_role.name = 'classification officer')
       )) = 0)) = 0;
  WR3: SIZEOF (QUERY (sc <* security_classification |
       SIZEOF (QUERY (aaa <* applied_approval_assignment |
       (sc IN aaa.items))) = 0)) = 0;
END_RULE;

RULE subtype_exclusive_action_request_assignment FOR 
  (action_request_assignment);
WHERE
  WR1: SIZEOF (QUERY (ara <* action_request_assignment |
       NOT (SIZEOF ([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'CHANGE_REQUEST',
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'START_REQUEST']
       * TYPEOF(ara)) <= 1))) = 0;
END_RULE;

RULE subtype_exclusive_property_definition_representation FOR 
  (property_definition_representation);
WHERE
  WR1: SIZEOF (QUERY (pdr <* property_definition_representation |
       NOT (SIZEOF ([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'SHAPE_DEFINITION_REPRESENTATION',   
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'MATERIAL_PROPERTY_REPRESENTATION']
       * TYPEOF(pdr)) <= 1))) = 0;
END_RULE;

RULE subtype_mandatory_address FOR (address);
WHERE
  WR1: SIZEOF (QUERY (add <* address |
       NOT (SIZEOF ([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'PERSONAL_ADDRESS',
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'ORGANIZATIONAL_ADDRESS'] * 
       TYPEOF (add)) = 1))) = 0;
END_RULE;

RULE subtype_mandatory_date FOR (date);
WHERE
  WR1: SIZEOF (QUERY (d <* date |
       NOT (
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'CALENDAR_DATE'
       IN TYPEOF (d)))) = 0;
END_RULE;

RULE subtype_mandatory_product_definition_usage FOR
  (product_definition_usage);
WHERE
  WR1: SIZEOF (QUERY (pdu <* product_definition_usage |
       NOT (SIZEOF([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'ASSEMBLY_COMPONENT_USAGE',
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
       'MAKE_FROM_USAGE_OPTION'] * 
       TYPEOF(pdu)) = 1))) = 0;
END_RULE;


RULE versioned_action_request_requires_approval FOR
  (versioned_action_request, applied_approval_assignment);
WHERE
  WR1: SIZEOF (QUERY (varq <* versioned_action_request |
       NOT (SIZEOF (QUERY (aaa <* applied_approval_assignment |
       varq IN aaa.items )) = 1 ))) = 0;
END_RULE;

RULE versioned_action_request_requires_date_or_date_and_time FOR
  (versioned_action_request, applied_date_and_time_assignment,
   applied_date_assignment);
WHERE
  WR1: SIZEOF (QUERY (varq <* versioned_action_request |
       NOT ((SIZEOF (QUERY (adata <* applied_date_and_time_assignment |
       varq IN adata.items )) = 1 ) OR
       (SIZEOF (QUERY (ada <* applied_date_assignment |
       varq IN ada.items )) = 1 )))) = 0;
END_RULE;

RULE versioned_action_request_requires_person_organization FOR
  (versioned_action_request,
  applied_person_and_organization_assignment,
  applied_organization_assignment);
WHERE
  WR1: SIZEOF (QUERY (varq <* versioned_action_request |
       NOT ((SIZEOF (QUERY (apaoa <*
       applied_person_and_organization_assignment |
       varq IN apaoa.items )) >= 1 ) OR
       (SIZEOF (QUERY (aoa <*
       applied_organization_assignment |
       varq IN aoa.items )) >= 1 )))) = 0;
END_RULE;

RULE versioned_action_request_requires_status FOR
  (versioned_action_request, action_request_status);
WHERE
  WR1: SIZEOF (QUERY (ar <* versioned_action_request |
       NOT (SIZEOF (QUERY (ars <* action_request_status |
       ar :=: ars.assigned_request)) = 1))) = 0;
END_RULE;


RULE work_request_unique_constraint FOR
 ( versioned_action_request );
LOCAL
  r : BAG OF versioned_action_request := 
QUERY( r <* versioned_action_request | 
(SIZEOF(QUERY( ara <* USEDIN(r,
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'ACTION_REQUEST_ASSIGNMENT.ASSIGNED_ACTION_REQUEST' ) |
((('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' + 
'CHANGE_REQUEST') IN TYPEOF(ara)) OR
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' + 
'START_REQUEST') IN TYPEOF(ara))))) > 0 ) );
  pass : BOOLEAN := TRUE;
  id_bag : BAG OF STRING := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(r) by 1;
  IF EXISTS( r[i].id ) THEN
    IF ( r[i].id IN id_bag ) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      id_bag := id_bag + r[i].id;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\ap210_product_rule_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:01:46 liutkus Exp $
   ISO TC184/SC4/WG12 N1687 - ISO/CD-TS 10303-1630 Ap210 product rule - EXPRESS MIM
*)


SCHEMA Ap210_product_rule_mim;
	USE FROM Ap210_product_data_management_mim;	-- ISO/TS 10303-1628
	USE FROM Product_rule_mim;	-- ISO/TS 10303-1739
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\appearance_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
ISO TC184/SC4/WG12 N2691 - ISO/TS 10303-1001 Appearance assignment - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1912
*) 


SCHEMA Appearance_assignment_mim;

USE FROM aic_associative_draughting_elements;    -- ISO 10303-520

USE FROM aic_mechanical_design_geometric_presentation;    -- ISO 10303-517

USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021

USE FROM presentation_appearance_schema   -- ISO 10303-46
  (invisibility,
   over_riding_styled_item,
   presentation_style_assignment,
   presentation_style_by_context,
   style_context_select,
   styled_item); 

USE FROM representation_schema   -- ISO 10303-43
  (mapped_item); 


TYPE appearance_representation_identification_item = SELECT BASED_ON identification_item WITH 
   (draughting_model, 
    mechanical_design_geometric_presentation_representation);
END_TYPE; 

TYPE appearance_representation_version_item = SELECT BASED_ON versionable_item WITH 
   (draughting_model, 
    mechanical_design_geometric_presentation_representation);
END_TYPE; 

RULE styled_curve FOR 
(styled_item);
WHERE
  WR1: SIZEOF( QUERY( si <* styled_item | ('APPEARANCE_ASSIGNMENT_MIM.CURVE' IN TYPEOF (si.item)) AND (SIZEOF (QUERY (psa <* si.styles | (SIZEOF (QUERY (cs <* psa.styles | ('APPEARANCE_ASSIGNMENT_MIM.CURVE_STYLE' IN TYPEOF (cs)) )) > 0) )) <> 1) )) = 0;
END_RULE; 

END_SCHEMA;  -- Appearance_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\approval_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.14 2004/10/28 16:16:40 darla Exp $
ISO TC184/SC4/WG12 N2910 - ISO/TS 10303-1012 Approval - EXPRESS MIM
*) 


SCHEMA Approval_mim;

USE FROM approval_schema   -- ISO 10303-41
  (approval,
   approval_date_time,
   approval_person_organization,
   approval_relationship,
   approval_role,
   approval_status); 

USE FROM basic_attribute_schema   -- ISO 10303-41
  (object_role,
   role_association,
   role_select); 

USE FROM Date_time_assignment_mim;    -- ISO/TS 10303-1014

USE FROM Date_time_mim;    -- ISO/TS 10303-1010

USE FROM management_resources_schema   -- ISO 10303-41
  (approval_assignment); 

USE FROM Person_organization_mim;    -- ISO/TS 10303-1011


TYPE approval_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE date_and_time_item_approval = SELECT BASED_ON date_and_time_item WITH 
   (approval_person_organization);
END_TYPE; 

TYPE date_item_approval = SELECT BASED_ON date_item WITH 
   (approval_person_organization);
END_TYPE; 

ENTITY applied_approval_assignment
  SUBTYPE OF (approval_assignment);
  items : SET[1:?] OF approval_item;
END_ENTITY;

END_SCHEMA;  -- Approval_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\area_2d_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/02/04 14:28:09 budreckytej Exp $
   ISO TC184/SC4/WG12 N3637 - ISO/CD-TS 10303-1631 Area 2d - EXPRESS MIM
*)

SCHEMA Area_2d_mim;
	USE FROM Extended_elemental_geometric_shape_mim;	-- ISO/TS 10303-1667
	USE FROM Value_with_unit_extension_mim;	-- ISO/TS 10303-1753
	USE FROM Geometric_model_schema
		(circular_area,
		elliptic_area,
		polygonal_area,
		primitive_2d,
		rectangular_area);
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_2d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.4 2005/02/04 14:28:29 budreckytej Exp $
   ISO TC184/SC4/WG12 N3640 - ISO/CD-TS 10303-1632 Assembly 2d shape - EXPRESS MIM
*)


SCHEMA Assembly_2d_shape_mim;
	USE FROM Assembly_technology_mim;	-- ISO/TS 10303-1649
	USE FROM Physical_unit_2d_design_view_mim;	-- ISO/TS 10303-1724
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_3d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/04/04 09:13:40 liutkus Exp $
   ISO TC184/SC4/WG12 N3643 - ISO/CD-TS 10303-1633 Assembly 3d shape - EXPRESS MIM
*)


SCHEMA Assembly_3d_shape_mim;
	USE FROM Assembly_technology_mim;	-- ISO/TS 10303-1649
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_component_placement_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 09:13:38 liutkus Exp $
   ISO TC184/SC4/WG12 N3292 - ISO/CD-TS 10303-1634 Assembly component placement requirements - EXPRESS MIM
*)
SCHEMA Assembly_component_placement_requirements_mim;

	USE FROM Assembly_module_with_interconnect_component_mim;	-- ISO/TS 10303-1643
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740	

TYPE acpr_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (group_shape_aspect,
     group_product_definition);
END_TYPE;

TYPE acpr_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
     (shape_aspect,
     requirements_property);
END_TYPE;

ENTITY group_product_definition
  SUBTYPE OF (component_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'design requirement';
  WR2: (NOT (SELF\product_definition.description = 
                                      'placement group')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF (pd))) >= 1);
END_ENTITY;

RULE component_placement_restriction_assignment_constraint FOR
( representation );
LOCAL
  cpra : SET OF representation := QUERY( cpra <* representation |
          cpra.name = 'component placement restriction assignment');
     i : INTEGER ;
  pass1 : BOOLEAN := TRUE;
  pass2 : BOOLEAN := TRUE;
  mra : BOOLEAN := FALSE;
  mrv : BOOLEAN := FALSE;
END_LOCAL;
 REPEAT i := 1 to SIZEOF (cpra);
  IF NOT(pass1) THEN ESCAPE; END_IF;

  IF NOT((SIZEOF(QUERY(rr <* USEDIN(cpra[i],
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'REPRESENTATION_RELATIONSHIP.REP_1') | (rr.name =
    'component placement restriction assignment area') AND
    (SIZEOF(QUERY(pdr <* USEDIN(rr.rep_2,
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
    ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'MOUNTING_RESTRICTION_AREA' IN TYPEOF(pdr.definition.definition)))
    ) = 1 ) 
     )) <=1 ) OR
(SIZEOF(QUERY(rr <* USEDIN(cpra[i],
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'REPRESENTATION_RELATIONSHIP.REP_1') | (rr.name =
    'component placement restriction assignment volume') AND
    (SIZEOF(QUERY(pdr <* USEDIN(rr.rep_2,
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
    ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'MOUNTING_RESTRICTION_VOLUME' IN TYPEOF(pdr.definition.definition)))
    ) = 1 )
     )) <=1 )
        ) THEN pass1 := FALSE;
  END_IF;      
  mra := (SIZEOF(QUERY(rr <* USEDIN(cpra[i],
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'REPRESENTATION_RELATIONSHIP.REP_1') | (rr.name =
    'component placement restriction assignment area') AND
    (SIZEOF(QUERY(pdr <* USEDIN(rr.rep_2,
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
    ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'MOUNTING_RESTRICTION_AREA' IN TYPEOF(pdr.definition.definition)))
    ) = 1 )
     )) =1 );
  mrv := (SIZEOF(QUERY(rr <* USEDIN(cpra[i],
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'REPRESENTATION_RELATIONSHIP.REP_1') | (rr.name =
    'component placement restriction assignment volume') AND
    (SIZEOF(QUERY(pdr <* USEDIN(rr.rep_2,
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
    ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'MOUNTING_RESTRICTION_VOLUME' IN TYPEOF(pdr.definition.definition)))
    ) = 1 )
     )) =1 );
  IF NOT(mra OR mrv) THEN pass1 := FALSE; END_IF;
 END_REPEAT;
 REPEAT i := 1 to SIZEOF (cpra);
  IF NOT(pass1) THEN ESCAPE; END_IF;
  IF NOT(pass2) THEN ESCAPE; END_IF;

  IF NOT(SIZEOF(QUERY(pdr <* USEDIN(cpra[i],
  'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 
    ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
  'GROUPED_REQUIREMENTS_PROPERTY' IN TYPEOF(pdr.definition))
    AND
    (pdr.definition\group.name =
    'item restricted requirements property')
     )
    ) = 1 ) THEN pass2 := FALSE;
  END_IF;
 END_REPEAT;
WHERE
  WR1: pass1;
  WR2: pass2; 
END_RULE;

ENTITY mounting_restriction_area
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
  WR2: ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PHYSICAL_UNIT' IN TYPEOF (SELF.of_shape.definition));

  WR3: SELF.of_shape.definition.frame_of_reference.name IN ['physical design'];

  WR4: SELF.of_shape.definition\product_definition.name = 'assembly module';

  WR5: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'CSG_2D_SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)))) = 1))) = 0;
  WR6: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'mounting surface') AND 
       (sar.related_shape_aspect\shape_aspect.description =
       'interconnect module component surface feature')))) = 1;
  WR7: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\shape_aspect ||
       SELF\mounting_restriction_area))) = 0;

END_ENTITY;

ENTITY mounting_restriction_volume
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PHYSICAL_UNIT' IN TYPEOF (SELF.of_shape.definition));

  WR2: SELF.of_shape.definition.frame_of_reference.name IN ['physical design'];

  WR3: SELF.of_shape.definition.name = 'assembly module';

  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
        (pdr.used_representation\representation.context_of_items\
       geometric_representation_context.coordinate_space_dimension = 3)
       )) = 1))) = 0;
(* invlaid csa
  WR5: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (sar.related_shape_aspect)) AND
       (sar\shape_aspect_relationship.name = 'mounting surface') AND 
       (sar.related_shape_aspect\shape_aspect.description =
       'interconnect module component surface feature'))) = 1; *)
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\shape_aspect ||
       SELF\mounting_restriction_volume))) = 0;
END_ENTITY;

RULE placement_group_area_assignment_constraint FOR 
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'area impacted group') AND NOT
       ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'MOUNTING_RESTRICTION_AREA' IN TYPEOF(sar.related_shape_aspect))
       )) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'area impacted group') AND NOT
       (('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'GROUP_SHAPE_ASPECT' IN TYPEOF(sar.relating_shape_aspect))
       OR (('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'SHAPE_ASPECT' IN TYPEOF(sar.relating_shape_aspect))
       AND ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'GROUP_PRODUCT_DEFINITION'
       IN TYPEOF(sar.relating_shape_aspect.of_shape.definition))
       AND ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'PRODUCT_DEFINITION_CONTEXT'
IN TYPEOF(sar.relating_shape_aspect.of_shape.definition.frame_of_reference))
   AND 
     (sar.relating_shape_aspect.of_shape.definition.frame_of_reference.name
       = 'design requirement') 
       )))) = 0;
END_RULE;

RULE placement_group_volume_assignment_constraint FOR 
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'volume impacted group') AND NOT
       ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'MOUNTING_RESTRICTION_VOLUME' IN TYPEOF(sar.related_shape_aspect))
       )) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'volume impacted group') AND NOT
       (('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'GROUP_SHAPE_ASPECT' IN TYPEOF(sar.relating_shape_aspect))
       OR (('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'SHAPE_ASPECT' IN TYPEOF(sar.relating_shape_aspect))
       AND ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'GROUP_PRODUCT_DEFINITION'
       IN TYPEOF(sar.relating_shape_aspect.of_shape.definition))
       AND ('ASSEMBLY_COMPONENT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'PRODUCT_DEFINITION_CONTEXT'
IN TYPEOF(sar.relating_shape_aspect.of_shape.definition.frame_of_reference))
   AND 
     (sar.relating_shape_aspect.of_shape.definition.frame_of_reference.name
       = 'design requirement') 
       )))) = 0;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_functional_interface_requirement_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 09:13:44 liutkus Exp $
   ISO TC184/SC4/WG12 N3295 - ISO/CD-TS 10303-1635 Assembly functional interface requirement - EXPRESS MIM
*)
SCHEMA Assembly_functional_interface_requirement_mim;

	USE FROM Packaged_part_black_box_model_mim;	-- ISO/TS 10303-1710
	USE FROM Specification_document_mim; 	-- ISO/TS 10303-1747
	
TYPE afir_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (protocol_physical_layer_definition);
END_TYPE;
	
ENTITY minimally_defined_connector
  SUBTYPE OF (packaged_part);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.' +
       'PACKAGED_PART_TERMINAL' IN TYPEOF (sa)) AND 
       (sa.description = 'interface terminal')
       )) >= 0))) >= 0;
END_ENTITY;

ENTITY protocol_physical_layer_definition 
 SUBTYPE OF (product_definition);
END_ENTITY;

ENTITY protocol_requirement_allocation_to_part_terminal
  SUBTYPE OF (requirement_assignment, requirement_allocation_group);
WHERE
  WR1: 'ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.' +
       'REQUIREMENTS_PROPERTY' IN TYPEOF 
   (SELF\property_definition_relationship.relating_property_definition);
END_ENTITY;

RULE mating_connector_termination_constraint FOR ( shape_aspect );
WHERE
  WR1: SIZEOF(QUERY(sa <* shape_aspect |
       (sa\shape_aspect.description = 'mating connector termination')
       AND NOT(('ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.'
       + 'COMPONENT_DEFINITION' IN TYPEOF(sa.of_shape.definition))
       AND (sa.of_shape.definition\product_definition.description = 
                                           'mating connector')))) = 0;
END_RULE;

RULE mating_connector_termination_unique_constraint FOR
 ( shape_aspect );
LOCAL
  mct : BAG OF shape_aspect := QUERY( sa <* shape_aspect |
(sa\shape_aspect.description = 'mating connector termination') );
  cd_bag : BAG OF component_definition := [];
  sa_bag : BAG OF shape_aspect;
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  ppt_bag : BAG OF packaged_part_terminal;
END_LOCAL;

REPEAT i := 1 to SIZEOF(mct) by 1;
  IF EXISTS( mct[i].of_shape.definition ) THEN
    IF ( ('ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.' +
'COMPONENT_DEFINITION' IN TYPEOF(mct[i].of_shape.definition)) AND
(mct[i].of_shape.definition\product_definition.description = 'mating connector') ) THEN
      IF( NOT( mct[i].of_shape.definition IN cd_bag ) ) THEN
        cd_bag := cd_bag + mct[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(cd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ppt_bag := [];
  sa_bag := QUERY( sa <* mct | (sa.of_shape.definition :=: cd_bag[i]) );
  REPEAT j := 1 to SIZEOF(sa_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    sar_bag := QUERY( sar <* USEDIN(sa_bag[j],
'ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
((sar\shape_aspect_relationship.name = 'instantiated terminal') AND (
'ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_MIM.' +
'PACKAGED_PART_TERMINAL' IN TYPEOF(sar.relating_shape_aspect))) );
    REPEAT k := 1 to SIZEOF(sar_bag) by 1;
      IF EXISTS( sar_bag[k].relating_shape_aspect ) THEN
        IF ( sar_bag[k].relating_shape_aspect IN ppt_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          ppt_bag := ppt_bag + sar_bag[k].relating_shape_aspect;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 09:13:42 liutkus Exp $
   ISO TC184/SC4/WG12 N3298 - ISO/CD-TS 10303-1636 Assembly module design - EXPRESS MIM
*)
SCHEMA Assembly_module_design_mim;

	USE FROM Altered_package_mim;	-- ISO/TS 10303-1601
	USE FROM Assembly_module_usage_view_mim;	-- ISO/TS 10303-1642
	USE FROM Bare_die_mim;	-- ISO/TS 10303-1650
	USE FROM Physical_component_feature_mim;	-- ISO/TS 10303-1721

ENTITY component_mounting_feature
  SUBTYPE OF (physical_component_feature);
WHERE
  WR1: 'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: (SIZEOF (['ASSEMBLY_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROBE_ACCESS_AREA',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'LAND'] * 
       TYPEOF (SELF)) = 0);
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = 
       'planar projected shape')) 
       <= 1))) = 0;
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = '3d bound volume shape')) 
       <= 1))) = 0;
  WR5: (NOT (SELF\shape_aspect.description IN ['component feature'])) OR
       (SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design usage')) <= 1);
  WR6: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) <= 1;
END_ENTITY;

ENTITY packaged_component
  SUBTYPE OF (assembly_component);
WHERE
  WR1: SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PACKAGED_PART',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1;
  WR2: SIZEOF (QUERY (pa <* QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'package alternate') |
       (SIZEOF (['ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PACKAGE',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'LIBRARY_DEFINED_PACKAGE'] *
       TYPEOF (pa.relating_product_definition)) = 1) AND
       (pa.relating_product_definition\product_definition.description =
       'altered package'))) <= 1;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ASSEMBLY_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'packaged component join terminal'))) >= 1))) = 0;
  WR4: (NOT (SELF\product_definition.description = 'packaged connector component')) OR
       (SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PACKAGED_PART',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (TRUE))) = 1);
  WR5: (NOT (SELF\product_definition.description = 'packaged connector component')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ASSEMBLY_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'packaged component join terminal'))) 
        >= 1))) = 0);
  WR6: (NOT (SELF\product_definition.description = 'routed packaged component')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       SIZEOF (QUERY (pd <* USEDIN (sa,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (USEDIN (pd, 
        'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) 
       = 1)) = 1)) = 1))) = 0);
END_ENTITY;

ENTITY routed_physical_component
  SUBTYPE OF (assembly_component);
WHERE
  WR1: SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ASSEMBLY_MODULE_DESIGN_MIM.' +
       'PHYSICAL_UNIT'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1;
  WR2: SELF\product_definition.description :<>: 'laminate component';
END_ENTITY;

RULE component_feature_external_reference_unique_constraint FOR
 ( descriptive_representation_item );
LOCAL
  cfer : BAG OF descriptive_representation_item := 
      QUERY( dri <* descriptive_representation_item
| (dri\representation_item.name = 'component feature external reference') );
  desc_bag : BAG OF STRING := [];
  dri_bag : BAG OF descriptive_representation_item;
  rep_bag : BAG OF representation;
  pass : BOOLEAN := TRUE;
  r_bag : BAG OF representation;
END_LOCAL;

REPEAT i := 1 to SIZEOF(cfer) by 1;
  IF EXISTS( cfer[i]\descriptive_representation_item.description ) THEN
    IF ( NOT ( cfer[i]\descriptive_representation_item.description IN desc_bag )) THEN
      desc_bag := desc_bag + cfer[i]\descriptive_representation_item.description;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(desc_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  r_bag := [];
  dri_bag := QUERY( dri <* cfer | (dri\descriptive_representation_item.description = desc_bag[i]) );
  REPEAT j := 1 to SIZEOF(dri_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    rep_bag := QUERY( r <* USEDIN( dri_bag[j],
'ASSEMBLY_MODULE_DESIGN_MIM.' +
'REPRESENTATION.ITEMS' ) | (r\representation.name = 'component external reference' ) );
    REPEAT k := 1 to SIZEOF(rep_bag) by 1;
      IF EXISTS( rep_bag[k] ) THEN
        IF ( rep_bag[k] IN r_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          r_bag := r_bag + rep_bag[k];
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE component_external_reference_constraint FOR
  (representation);
WHERE
   WR1: SIZEOF( QUERY( rep <* representation | (rep\representation.name =
        'component external reference') AND 
        (SIZEOF( QUERY( dri <* rep.items | NOT(
        ('ASSEMBLY_MODULE_DESIGN_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND 
        (dri\representation_item.name = 'design owner')))) = 1)))=0;
   WR2: SIZEOF(QUERY (rep <* representation |
        (rep\representation.name = 'component external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items | 
        NOT(('ASSEMBLY_MODULE_DESIGN_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND 
        (dri\representation_item.name = 'part number')))) = 1)))=0;
   WR3: SIZEOF(QUERY (rep <* representation |
        (rep\representation.name = 'component external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items | 
        NOT(('ASSEMBLY_MODULE_DESIGN_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND 
        (dri\representation_item.name = 'revision code')))) = 1)))=0;
   WR4: SIZEOF(QUERY (rep <* representation |
        (rep\representation.name = 'component external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items | 
        NOT(('ASSEMBLY_MODULE_DESIGN_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND 
        (dri\representation_item.name = 'product definition id')))) = 1)))=0;
   WR5: SIZEOF(QUERY (rep <* representation |
        (rep\representation.name = 'component external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items | 
        NOT(('ASSEMBLY_MODULE_DESIGN_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND 
        (dri\representation_item.name = 'reference designation')))) = 1)))=0;
END_RULE;

RULE component_mounting_clearance_relationship_constraint FOR
( representation );
WHERE
  WR1: SIZEOF(QUERY(rep <* representation |
       (rep\representation.name = 'mounting clearance')
       AND (SIZEOF(QUERY(lmwu <* rep.items |
       ('ASSEMBLY_MODULE_DESIGN_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF(lmwu))
       AND (lmwu\representation_item.name = 'minimum height')
       )) = 0))) = 0;
END_RULE;

RULE component_overlap_relationship_constraint FOR
( representation );
WHERE
  WR1: SIZEOF(QUERY(rep <* representation |
       (rep\representation.name = 'overlap clearance')
       AND (SIZEOF(QUERY(lmwu <* rep.items |
       ('ASSEMBLY_MODULE_DESIGN_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF(lmwu))
       AND (lmwu\representation_item.name = 'minimum clearance')
       )) = 0))) = 0;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_macro_definition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 09:13:40 liutkus Exp $
   ISO TC184/SC4/WG12 N3352 - ISO/CD-TS 10303-1637 Assembly module macro definition - EXPRESS MIM
*)


SCHEMA Assembly_module_macro_definition_mim;
	USE FROM Interconnect_module_with_macros_mim;	-- ISO/TS 10303-1687

SUBTYPE_CONSTRAINT assembly_module_terminal_subtypes FOR assembly_module_terminal;         
  (ONEOF (assembly_module_interface_terminal, 
           assembly_module_join_terminal));
END_SUBTYPE_CONSTRAINT;        

ENTITY assembly_module_join_terminal
  SUBTYPE OF (assembly_module_terminal);
END_ENTITY;

RULE 
component_terminal_to_assembly_module_join_terminal_assignment_unique_constraint
FOR
 ( shape_aspect_relationship );
LOCAL
  cttamta : BAG OF shape_aspect_relationship := QUERY( sar <*
shape_aspect_relationship | (sar\shape_aspect_relationship.name = 
              'component feature to physical usage view assignment') );
  pass : BOOLEAN := TRUE;
  amt_bag : BAG OF assembly_module_join_terminal := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(cttamta) by 1;
  IF EXISTS( cttamta[i].relating_shape_aspect ) THEN
    IF ( 'ASSEMBLY_MODULE_MACRO_DEFINITION_MIM.' +
'ASSEMBLY_MODULE_JOIN_TERMINAL' IN TYPEOF(cttamta[i].relating_shape_aspect) ) 
    THEN
      IF ( cttamta[i].relating_shape_aspect IN amt_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        amt_bag := amt_bag + cttamta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_usage_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 09:13:39 liutkus Exp $
   ISO TC184/SC4/WG12 N3301 - ISO/CD-TS 10303-1642 Assembly module usage view - EXPRESS MIM
*)
SCHEMA Assembly_module_usage_view_mim;

--	USE FROM Functional_assignment_to_part_mim;	-- ISO/TS 10303-1674
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705
	USE FROM Packaged_connector_model_mim;	-- ISO/TS 10303-1708

ENTITY assembly_definition
 SUBTYPE OF (physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR 
        (SELF\product_definition.name = 'assembly module');
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design')) OR
       (SIZEOF (QUERY (du <* QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'ASSEMBLY_DEFINITION', 
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'EXTERNALLY_DEFINED_ASSEMBLY_DEFINITION', 
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'LIBRARY_DEFINED_ASSEMBLY_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name = 'assembly module')
        )) = 1);
  WR4: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'pca terminal'))) >= 2))) = 0);
END_ENTITY;

ENTITY assembly_module_interface_terminal
  SUBTYPE OF (assembly_module_terminal);
END_ENTITY;

ENTITY assembly_module_terminal
  SUPERTYPE OF (assembly_module_interface_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
  WR2: NOT EXISTS(SELF.of_shape.definition\product_definition.name) OR
      (SELF.of_shape.definition\product_definition.name = 'assembly module');
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) >= 1))) = 0;
  WR4: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) <= 1;
  WR5: (NOT (SELF\shape_aspect.description = 'pca terminal')) OR
       ((SIZEOF(TYPEOF (SELF.of_shape.definition) *
       ['ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'ASSEMBLY_DEFINITION',
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'EXTERNALLY_DEFINED_ASSEMBLY_DEFINITION',
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'LIBRARY_DEFINED_ASSEMBLY_DEFINITION']) >=1)
       AND (SELF.of_shape.definition\product_definition.
       frame_of_reference.name = 'physical design usage'));
  WR6: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 'connection zone')) = 1;
  WR7: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 'interface terminal')) <= 1;
END_ENTITY;
(**
ENTITY externally_defined_assembly_definition
 SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR
       (SELF\product_definition.name = 'assembly module');
  WR3: (NOT (SELF.frame_of_reference\application_context_element.name = 'physical design usage')) 
        OR (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'pca terminal'))) >= 2))) = 0);
END_ENTITY;

ENTITY library_defined_assembly_definition
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SELF\product_definition.name = 'assembly module';
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design usage')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('ASSEMBLY_MODULE_USAGE_VIEW_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'pca terminal'))) >= 2))) = 0);
END_ENTITY;
*)
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_with_cable_component_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/04/04 09:13:43 liutkus Exp $
   ISO TC184/SC4/WG12 N3304 - ISO/CD-TS 10303-1644 Assembly module with cable component - EXPRESS MIM
*)
SCHEMA Assembly_module_with_cable_component_mim;

	USE FROM Cable_mim;	-- ISO/TS 10303-1653

ENTITY cable_component
  SUBTYPE OF (assembly_component);
WHERE
  WR1: SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_MODULE_WITH_CABLE_COMPONENT_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['ASSEMBLY_MODULE_WITH_CABLE_COMPONENT_MIM.' +
       'PHYSICAL_UNIT'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1;
  WR2: SELF\product_definition.description :<>: 'laminate component';
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_with_cable_component_2d_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.4 2005/02/04 14:33:28 budreckytej Exp $
   ISO TC184/SC4/WG12 N3379 - ISO/CD-TS 10303-1638 Assembly module with cable component 2d - EXPRESS MIM
*)


SCHEMA Assembly_module_with_cable_component_2d_mim;
	USE FROM Assembly_module_with_cable_component_mim;	-- ISO/TS 10303-1644
	USE FROM Physical_unit_2d_design_view_mim;	-- ISO/TS 10303-1724
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_with_cable_component_3d_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/04/04 09:13:59 liutkus Exp $
   ISO TC184/SC4/WG12 N3382 - ISO/CD-TS 10303-1639 Assembly module with cable component 3d - EXPRESS MIM
*)


SCHEMA Assembly_module_with_cable_component_3d_mim;
	USE FROM Assembly_module_with_cable_component_mim;	-- ISO/TS 10303-1644
	USE FROM Physical_unit_3d_design_view_mim;	-- ISO/TS 10303-1725
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_with_interconnect_component_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 09:13:41 liutkus Exp $
   ISO TC184/SC4/WG12 N3307 - ISO/CD-TS 10303-1643 Assembly module with interconnect component - EXPRESS MIM
*)
SCHEMA Assembly_module_with_interconnect_component_mim;

	USE FROM Assembly_module_design_mim;	-- ISO/TS 10303-1636
	USE FROM Interconnect_module_usage_view_mim;	-- ISO/TS 10303-1686
	USE FROM Interface_component_mim;	-- ISO/TS 10303-1691	

ENTITY interconnect_module_component_surface_feature
  SUBTYPE OF (physical_component_feature);
WHERE
  WR1: 'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: (SELF\shape_aspect.description IN [
       'interconnect module component surface feature']);
  WR3: SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description IN
       ['interconnect module secondary surface',
        'interconnect module primary surface',
        'interconnect module cavity surface',
        'interconnect module cutout surface',
        'interconnect module edge surface',
        'interconnect module edge segment surface'])) = 1;
END_ENTITY;

RULE interconnect_component_interface_terminal_unique_constraint FOR
 ( physical_component_interface_terminal );
LOCAL
  icit : BAG OF physical_component_interface_terminal := QUERY( cit <*
physical_component_interface_terminal | (cit\shape_aspect.description =
'interconnect component interface terminal') );
  icd_bag : BAG OF interface_component_definition := [];
  cit_bag : BAG OF physical_component_interface_terminal;
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(icit) by 1;
  IF EXISTS( icit[i].of_shape.definition ) THEN
    IF ( 'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_MIM.' +
'INTERFACE_COMPONENT_DEFINITION' IN TYPEOF(icit[i].of_shape.definition) ) 
                                                          THEN
      IF ( NOT ( icit[i].of_shape.definition IN icd_bag )) THEN
        icd_bag := icd_bag + icit[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(icd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  name_bag := [];
  cit_bag := 
        QUERY( cit <* icit | (cit.of_shape.definition :=: icd_bag[i]) );
  REPEAT j := 1 to SIZEOF(cit_bag) by 1;
    IF EXISTS( cit_bag[j]\shape_aspect.name ) THEN
      IF ( cit_bag[j]\shape_aspect.name IN name_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        name_bag := name_bag + cit_bag[j]\shape_aspect.name;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE interconnect_component_join_terminal_unique_constraint FOR
 ( component_terminal );
LOCAL
  icjt : BAG OF component_terminal := QUERY( ct <* component_terminal |
(ct\shape_aspect.description = 'interconnect component join terminal') );
  cd_bag : BAG OF component_definition := [];
  ct_bag : BAG OF component_terminal;
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(icjt) by 1;
  IF EXISTS( icjt[i].of_shape.definition ) THEN
    IF ( 'ASSEMBLY_MODULE_WITH_INTERCONNECT_COMPONENT_MIM.' +
'COMPONENT_DEFINITION' IN TYPEOF(icjt[i].of_shape.definition) ) THEN
      IF ( NOT ( icjt[i].of_shape.definition IN cd_bag )) THEN
        cd_bag := cd_bag + icjt[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(cd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  name_bag := [];
  ct_bag := QUERY( ct <* icjt | (ct.of_shape.definition :=: cd_bag[i]) );
  REPEAT j := 1 to SIZEOF(ct_bag) by 1;
    IF EXISTS( ct_bag[j]\shape_aspect.name ) THEN
      IF ( ct_bag[j]\shape_aspect.name IN name_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        name_bag := name_bag + ct_bag[j]\shape_aspect.name;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_with_macro_component_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/02/28 12:41:46 liutkus Exp $
   ISO TC184/SC4/WG12 N3355 - ISO/CD-TS 10303-1640 Assembly module with macro component - EXPRESS MIM
*)


SCHEMA Assembly_module_with_macro_component_mim;
	USE FROM Assembly_module_macro_definition_mim;	-- ISO/TS 10303-1637
	USE FROM Assembly_module_with_subassembly_mim;	-- ISO/TS 10303-1641

  ENTITY assembly_module_macro_component
    SUBTYPE OF (assembly_component);
  END_ENTITY;
	
ENTITY assembly_module_macro_component_join_terminal
  SUBTYPE OF (physical_component_terminal);
WHERE
  WR1: NOT (SELF\shape_aspect.description IN 
      ['bare die component terminal', 
       'component termination passage join terminal', 
       'conductive interconnect element terminal', 
       'interconnect component join terminal', 
       'interconnect module component terminal', 'land join terminal', 
       'minimally defined component terminal',
       'non functional land join terminal', 
       'packaged component join terminal', 
       'printed component join terminal', 'package terminal occurrence',
       'via terminal']);
END_ENTITY;
	
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_with_packaged_connector_component_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 09:13:39 liutkus Exp $
   ISO TC184/SC4/WG12 N3652 - ISO/CD-TS 10303-1645 Assembly module with packaged connector component - EXPRESS MIM
*)
SCHEMA Assembly_module_with_packaged_connector_component_mim;

	USE FROM Assembly_module_design_mim;	-- ISO/TS 10303-1636
	USE FROM Interface_component_mim;	-- ISO/TS 10303-1691

ENTITY interface_mounted_join
 SUBTYPE OF (shape_aspect_relationship,shape_aspect);
WHERE
  WR1: ('ASSEMBLY_MODULE_WITH_PACKAGED_CONNECTOR_COMPONENT_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal');
  WR2: ('ASSEMBLY_MODULE_WITH_PACKAGED_CONNECTOR_COMPONENT_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       ((SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal') OR
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'packaged connector component interface terminal'));
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_module_with_subassembly_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:13:59 liutkus Exp $
   ISO TC184/SC4/WG12 N3358 - ISO/CD-TS 10303-1641 Assembly module with subassembly - EXPRESS MIM
*)


SCHEMA Assembly_module_with_subassembly_mim;
	USE FROM Assembly_module_design_mim;	-- ISO/TS 10303-1636
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_physical_interface_requirement_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 09:13:44 liutkus Exp $
   ISO TC184/SC4/WG12 N3361 - ISO/CD-TS 10303-1647 Assembly physical interface requirement - EXPRESS MIM
*)


SCHEMA Assembly_physical_interface_requirement_mim;

	USE FROM Assembly_functional_interface_requirement_mim;	-- ISO/TS 10303-1635
	USE FROM Printed_physical_layout_template_mim; -- ISO/TS 10303-1737
	USE FROM Requirement_decomposition_mim; -- ISO/TS 10303-1740
	USE FROM Product_structure_schema(specified_higher_usage_occurrence);

TYPE apir_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
    (shape_aspect); 
END_TYPE; 

TYPE apir_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
    (protocol_physical_layer_definition); 
END_TYPE; 

RULE mating_connector_placement_relationship_constraint FOR
( shape_representation );
WHERE
  WR1: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'mating connector placement')
       AND (SIZEOF(QUERY(p <* sr.items |
       ('ASSEMBLY_PHYSICAL_INTERFACE_REQUIREMENT_MIM.'
        + 'PLACEMENT' IN TYPEOF(p))
       AND (p\representation_item.name = 'connector placement'))) = 0))) = 0;
END_RULE;

RULE next_higher_assembly_interface_requirement_constraint FOR 
( specified_higher_usage_occurrence );
WHERE
  WR1: SIZEOF(QUERY(shuo <* specified_higher_usage_occurrence |
       NOT(SIZEOF(QUERY(pd <* USEDIN(shuo,
       'ASSEMBLY_PHYSICAL_INTERFACE_REQUIREMENT_MIM.'
       + 'PROPERTY_DEFINITION.DEFINITION') |
       NOT(SIZEOF(QUERY(pdr <* USEDIN(pd,
       'ASSEMBLY_PHYSICAL_INTERFACE_REQUIREMENT_MIM.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
        ('ASSEMBLY_PHYSICAL_INTERFACE_REQUIREMENT_MIM.'
       + 'SHAPE_REPRESENTATION' IN TYPEOF(pdr.used_representation))
       AND (pdr.used_representation\representation.name = '3d bound volume shape'))) = 0)
       )) = 0)
       )) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_physical_requirement_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 09:13:42 liutkus Exp $
   ISO TC184/SC4/WG12 N3310 - ISO/CD-TS 10303-1648 Assembly physical requirement allocation - EXPRESS MIM
*)
SCHEMA Assembly_physical_requirement_allocation_mim;

	USE FROM Assembly_physical_interface_requirement_mim;	-- ISO/TS 10303-1647
	USE FROM Assembly_technology_mim;	-- ISO/TS 10303-1649
	USE FROM Shield_mim;	-- ISO/TS 10303-1744

TYPE apra_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
     (shape_aspect,
     product_definition);
END_TYPE;

TYPE apra_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
    (product_definition, 
	shape_aspect); 
END_TYPE; 

ENTITY electromagnetic_compatibility_requirement_allocation
  SUPERTYPE OF (shield_allocation)
  SUBTYPE OF (requirement_assignment); --product_definition_relationship);
END_ENTITY;

ENTITY shield_allocation
  SUBTYPE OF (electromagnetic_compatibility_requirement_allocation);
END_ENTITY;

ENTITY thermal_requirement_allocation
  SUBTYPE OF (requirement_assignment); --product_definition_relationship);
END_ENTITY;

RULE interface_component_allocation_constraint FOR 
( product_definition_relationship );
   WHERE
     WR1: SIZEOF (QUERY (pdr <* product_definition_relationship |
          (pdr\product_definition_relationship.name = 'interface component allocation') AND
          NOT(('ASSEMBLY_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
   'COMPONENT_DEFINITION' IN TYPEOF(pdr.relating_product_definition)) AND
(pdr.relating_product_definition\product_definition.description = 'mating connector')))) = 0;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:13:43 liutkus Exp $
   ISO TC184/SC4/WG12 N3364 - ISO/CD-TS 10303-1646 Assembly shape - EXPRESS MIM
*)


SCHEMA Assembly_shape_mim;
	USE FROM Assembly_module_design_mim;	-- ISO/TS 10303-1636
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_structure_mim.exp
   ------------------------------------------------------------
*)

(* 
 $Id: mim.exp,v 1.6 2004/01/13 10:15:26 robbod Exp $
 ISO TC184/SC4/WG12 N2516 - ISO/TS 10303-1026 Assembly structure - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N1136
*)

SCHEMA Assembly_structure_mim;

USE FROM Product_view_definition_relationship_mim; -- ISO/TS 10303-1041
USE FROM Value_with_unit_mim; -- ISO/TS 10303-1054

USE FROM product_structure_schema -- ISO 10303-44
  (assembly_component_usage,
   next_assembly_usage_occurrence,
   promissory_usage_occurrence,
   quantified_assembly_component_usage,
   specified_higher_usage_occurrence);

END_SCHEMA;






(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\assembly_technology_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.16 2005/04/04 09:13:41 liutkus Exp $
   ISO TC184/SC4/WG12 N3313 - ISO/CD-TS 10303-1649 Assembly technology - EXPRESS MIM
*)
SCHEMA Assembly_technology_mim;
	USE FROM Assembly_module_design_mim;	-- ISO/TS 10303-1636
	USE FROM Component_grouping_mim;	-- ISO/TS 10303-1656
	USE FROM Product_identification_extension_mim;	-- ISO/TS 10303-1738

REFERENCE FROM Physical_unit_usage_view_mim 	-- ISO/TS 10303-1732
  (is_assembly_module_design);

REFERENCE FROM product_property_definition_schema -- ISO 10303-41
  (acyclic_shape_aspect_relationship);

TYPE at_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (assembly_joint);
END_TYPE;

TYPE at_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
     (assembly_bond_definition);
END_TYPE;

ENTITY assembly_bond_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
  WR2: SIZEOF (QUERY (aga <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'BOND_CATEGORY' IN
       TYPEOF (aga.assigned_group))) = 1;
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 1' ))  = 1;
  WR4: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 2' ))  = 1;
  WR5: (('ASSEMBLY_TECHNOLOGY_MIM.' +
       'EXTERNALLY_DEFINED_PRODUCT_DEFINITION' IN
        TYPEOF (SELF.of_shape.definition))
       AND
       (SIZEOF (QUERY (prpc <* USEDIN (SELF.of_shape.definition.formation.of_product,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'technology specific model')) >= 1));
  WR6: ('ASSEMBLY_TECHNOLOGY_MIM.' +
        'EXTERNALLY_DEFINED_PRODUCT_DEFINITION' IN TYPEOF (SELF.of_shape.definition)) AND
        (SELF.of_shape.definition\product_definition.name='assembly bond model');
END_ENTITY;

ENTITY assembly_joint
  SUBTYPE OF (shape_aspect_relationship, shape_aspect);
WHERE
  WR1: (('ASSEMBLY_TECHNOLOGY_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       (SELF.relating_shape_aspect\shape_aspect.description IN 
       ['assembly module component terminal', 
       'bare die component terminal',
       'interconnect component join terminal', 
       'interconnect module component terminal',  
       'package terminal occurrence', 
       'packaged component join terminal'])) OR
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect)) OR
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) OR
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'COMPONENT_MOUNTING_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect));
  WR2: (('ASSEMBLY_TECHNOLOGY_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description IN 
       ['assembly module component terminal', 
       'bare die component terminal', 
       'interconnect component join terminal', 
       'interconnect module component terminal',  
       'package terminal occurrence', 
       'packaged component join terminal'])) OR
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect)) OR
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) OR
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'COMPONENT_MOUNTING_FEATURE' IN
       TYPEOF (SELF.relating_shape_aspect));
  WR3: (NOT (SELF\shape_aspect_relationship.name = 
       'assembled with bonding')) OR
       (SIZEOF (QUERY (ddu <* QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'default definition usage') |
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'ASSEMBLY_BOND_DEFINITION' IN
       TYPEOF (ddu.relating_shape_aspect))) = 1);
  WR4: (NOT (SELF\shape_aspect_relationship.name = 
       'assembled with bonding')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'bond assembly position') AND
       (SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'MAPPED_ITEM' IN TYPEOF (it)) AND
       (it\representation_item.name = 'assembly position'))) = 1))) = 1)) <= 1);
  WR5: (NOT (SELF\shape_aspect_relationship.name = 
       'assembled with fasteners')) OR
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition));
  WR6: ('ASSEMBLY_TECHNOLOGY_MIM.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) OR
       is_assembly_module_design(SELF.of_shape.definition); 
  WR7: (NOT (SELF\shape_aspect_relationship.name =
       'assembled with bonding')) OR
       (SIZEOF (QUERY (ddu <* QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'default definition usage') |
       ('ASSEMBLY_TECHNOLOGY_MIM.' +
        'ASSEMBLY_BOND_DEFINITION' IN
       TYPEOF (ddu.relating_shape_aspect)) AND
       (SIZEOF (QUERY (sar <* USEDIN (ddu.relating_shape_aspect,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 1' ))  = 1)
       AND (SIZEOF (QUERY (sar <* USEDIN (ddu.relating_shape_aspect,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name  = 'bonded feature 1' ))  = 1)
       )) = 1);
  WR8: acyclic_shape_aspect_relationship(SELF,
       [SELF\shape_aspect_relationship.related_shape_aspect],
       'ASSEMBLY_TECHNOLOGY_MIM.'+
       'ASSEMBLY_JOINT');
END_ENTITY;

ENTITY component_mating_constraint_condition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name, SELF\shape_aspect.of_shape;
END_ENTITY;

RULE default_assembly_bond_shape_constraint FOR ( shape_representation );
WHERE
  WR1: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'default assembly bond shape')
       AND NOT(SIZEOF(QUERY(pdr <* USEDIN(sr,
       'ASSEMBLY_TECHNOLOGY_MIM.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('ASSEMBLY_TECHNOLOGY_MIM.'
       + 'SHAPE_ASPECT'
       IN TYPEOF(pdr.definition.definition)))) = 1))) = 0;
END_RULE;

ENTITY connection_zone_based_assembly_joint
  SUBTYPE OF (assembly_joint);
WHERE
  WR1: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 1')) = 1;
  WR2: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 2')) = 1;
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar.relating_shape_aspect\shape_aspect.description = 'connection zone')) = 2;

END_ENTITY;

ENTITY reference_packaged_part_assembly_implementation
 SUBTYPE OF (physical_unit);
WHERE
  WR1: (SIZEOF (QUERY (prpc <* 
       USEDIN (SELF.formation.of_product,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) >= 1) AND
       (SELF\product_definition.name = 'assembly module');
  WR2: (NOT (SELF.frame_of_reference.name = 'physical design')) OR
       (SIZEOF (QUERY (du <* QUERY (pdr <* USEDIN (SELF,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['ASSEMBLY_TECHNOLOGY_MIM.' +
       'ASSEMBLY_DEFINITION', 
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'EXTERNALLY_DEFINED_ASSEMBLY_DEFINITION', 
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'LIBRARY_DEFINED_ASSEMBLY_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name =
       'assembly module') AND
       (SIZEOF (QUERY (prpc <*
       USEDIN (du.relating_product_definition.formation.of_product,
       'ASSEMBLY_TECHNOLOGY_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) >= 1)
       )) = 1);
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\associative_text_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.8 2004/11/18 00:36:06 thendrix Exp $
ISO TC184/SC4/WG12 N2694 - ISO/TS 10303-1132 Associative text - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1665
*) 


SCHEMA Associative_text_mim;

USE FROM Appearance_assignment_mim;    -- ISO/TS 10303-1001

USE FROM Curve_appearance_mim;    -- ISO/TS 10303-1003

USE FROM Text_appearance_mim;    -- ISO/TS 10303-1136

USE FROM Construction_geometry_mim;    -- ISO/TS 10303-1131

USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

USE FROM Shape_property_assignment_mim;    -- ISO/TS 10303-1032

USE FROM draughting_element_schema   -- ISO 10303-101
  (leader_curve); 

USE FROM aic_associative_draughting_elements;    -- ISO 10303-520

USE FROM aic_draughting_annotation;    -- ISO 10303-504

USE FROM aic_draughting_elements;    -- ISO 10303-506

USE FROM presentation_definition_schema;    -- ISO 10303-46


END_SCHEMA;  -- Associative_text_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\bare_die_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.17 2005/04/04 09:13:44 liutkus Exp $
   ISO TC184/SC4/WG12 N3316 - ISO/CD-TS 10303-1650 Bare die - EXPRESS MIM
*)
SCHEMA Bare_die_mim;

	USE FROM Extended_geometric_tolerance_mim;	-- ISO/TS 10303-1666
	USE FROM Functional_assignment_to_part_mim;	-- ISO/TS 10303-1674
	USE FROM Part_feature_function_mim;	-- ISO/TS 10303-1712
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705

ENTITY bare_die
 SUBTYPE OF (physical_unit);
WHERE
  WR1: SIZEOF (QUERY (ifdu <* QUERY (pdr <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\property_definition_relationship.name = 'implemented function') |
       ('BARE_DIE_MIM.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifdu.relating_product_definition)) AND
       (ifdu.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut <* QUERY (pdr <* USEDIN (pd,
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'device unit technology') |
       dut.relating_property_definition\property_definition.name = 
       'unit technology')) = 1)) = 1;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'BARE_DIE_MIM.' +
       'BARE_DIE_TERMINAL' IN 
       TYPEOF (sa))) >= 2))) = 0;
END_ENTITY;

ENTITY bare_die_bottom_surface
 SUBTYPE OF (bare_die_surface);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['BARE_DIE_MIM.' +
       'BARE_DIE',
       'BARE_DIE_MIM.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'BARE_DIE_MIM.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\bare_die_bottom_surface ||
       SELF\part_mounting_feature ||
       SELF\bare_die_surface)) = 0;
END_ENTITY;

ENTITY bare_die_edge_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: 'BARE_DIE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR2: 'BARE_DIE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce <* QUERY (sar <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('BARE_DIE_MIM.' +
       'BARE_DIE_EDGE_SURFACE' IN TYPEOF
       (ce.relating_shape_aspect) ))) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\bare_die_edge_segment_surface)) = 0;
END_ENTITY;

ENTITY bare_die_edge_surface
 SUBTYPE OF (bare_die_surface);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['BARE_DIE_MIM.' +
       'BARE_DIE',
       'BARE_DIE_MIM.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'BARE_DIE_MIM.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\part_mounting_feature ||
       SELF\bare_die_edge_surface ||
       SELF\bare_die_surface)) = 0;
END_ENTITY;

ENTITY bare_die_surface
 ABSTRACT SUPERTYPE OF (ONEOF( bare_die_bottom_surface, 
                         bare_die_top_surface, 
                        bare_die_edge_surface))
 SUBTYPE OF (part_mounting_feature);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['BARE_DIE_MIM.' +
       'BARE_DIE',
       'BARE_DIE_MIM.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'BARE_DIE_MIM.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
END_ENTITY;

ENTITY bare_die_terminal
  SUBTYPE OF (minimally_defined_bare_die_terminal);
WHERE
  WR1: 'BARE_DIE_MIM.' +
       'BARE_DIE' IN 
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (eca <* QUERY (sar <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'external connection area') |
       eca.related_shape_aspect\shape_aspect.description = 'connection zone')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'BARE_DIE_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
  WR4: SIZEOF (QUERY (eca <* QUERY (sar <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'seating plane zone') |
       'BARE_DIE_MIM.' +
       'CONNECTION_ZONE_INTERFACE_PLANE_RELATIONSHIP' IN 
       TYPEOF (eca.related_shape_aspect))) <= 1;
END_ENTITY;

ENTITY bare_die_top_surface
 SUBTYPE OF (bare_die_surface);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['BARE_DIE_MIM.' +
       'BARE_DIE',
       'BARE_DIE_MIM.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'BARE_DIE_MIM.' +
       'LIBRARY_DEFINED_BARE_DIE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\part_mounting_feature ||
       SELF\bare_die_top_surface ||
       SELF\bare_die_surface)) = 0;
END_ENTITY;
(** 
ENTITY externally_defined_bare_die
  SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: SIZEOF (QUERY (ifdu <* QUERY (pdr <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('BARE_DIE_MIM.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifdu.relating_product_definition)) AND
       (ifdu.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut <* QUERY (pdr <* USEDIN (pd,
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'device unit technology') |
       dut.relating_property_definition\property_definition.name = 
       'unit technology')) = 1)) = 1;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'BARE_DIE_MIM.' +
       'BARE_DIE_TERMINAL' IN 
       TYPEOF (sa))) >= 2))) = 0;
END_ENTITY;

ENTITY library_defined_bare_die
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: SIZEOF (QUERY (ifdu <* QUERY (pdr <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('BARE_DIE_MIM.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifdu.relating_product_definition)) AND
       (ifdu.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut <* QUERY (pdr <* USEDIN (pd,
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'device unit technology') |
       dut.relating_property_definition\property_definition.name = 
       'unit technology')) = 1)) = 1;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'BARE_DIE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'BARE_DIE_MIM.' +
       'BARE_DIE_TERMINAL' IN 
       TYPEOF (sa))) >= 2))) = 0;
END_ENTITY;
*)
ENTITY minimally_defined_bare_die_terminal
  SUPERTYPE OF (bare_die_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'BARE_DIE_MIM.' +
       'BARE_DIE' IN 
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (eca <* QUERY (sar <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'external connection area') |
       eca.related_shape_aspect\shape_aspect.description = 'connection zone')) <= 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'BARE_DIE_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) <= 1;
  WR4: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'BARE_DIE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'BARE_DIE_MIM.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) <= 1;
END_ENTITY;

RULE bare_die_unique_constraint FOR
 ( bare_die); --, externally_defined_bare_die, library_defined_bare_die );
LOCAL
  bd : BAG OF physical_unit := QUERY( r <* bare_die |
(r.frame_of_reference.name = 'physical design usage') );
(**  edbd : BAG OF physical_unit := QUERY( r <* externally_defined_bare_die |
(r.frame_of_reference.name = 'physical design usage') );
  ldbd : BAG OF physical_unit := QUERY( r <* library_defined_bare_die |
(r.frame_of_reference.name = 'physical design usage') ); *)
  pu : BAG OF physical_unit;
  pdr_bag : BAG OF product_definition_relationship;
  fu_bag : BAG OF functional_unit := [];
  pu_bag : BAG OF physical_unit;
  ut_bag : BAG OF property_definition;
  pass : BOOLEAN := TRUE;
  pd_bag : BAG OF property_definition;
END_LOCAL;

pu := bd; -- + edbd + ldbd;
REPEAT i := 1 to SIZEOF(pu) by 1;
  pdr_bag := QUERY( pdr <* USEDIN( pu[i],
'BARE_DIE_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) |
( (pdr\product_definition_relationship.name = 'implemented function') AND
(pdr.relating_product_definition.frame_of_reference.name = 
         'functional design usage')
AND ('BARE_DIE_MIM.' +
'FUNCTIONAL_UNIT' IN TYPEOF(pdr.relating_product_definition)) ) );
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF EXISTS( pdr_bag[j].relating_product_definition ) THEN
      IF( NOT( pdr_bag[j].relating_product_definition IN fu_bag ) ) THEN
        fu_bag := fu_bag + pdr_bag[j].relating_product_definition;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(fu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pu_bag := QUERY( r <* pu | (SIZEOF(QUERY(pdr <* USEDIN( fu_bag[i],
'BARE_DIE_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION' ) |
((pdr\product_definition_relationship.name = 'implemented function')AND
        (pdr.related_product_definition :=: r)) ))>0) );
  pd_bag := [];
  REPEAT j := 1 to SIZEOF(pu_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    ut_bag := QUERY( pd <* USEDIN( pu_bag[j],
'BARE_DIE_MIM.' +
'PROPERTY_DEFINITION.DEFINITION' ) | (pd\property_definition.name = 'unit technology') );
    REPEAT k := 1 to SIZEOF(ut_bag) by 1;
      IF EXISTS( ut_bag[k] ) THEN
        IF ( ut_bag[k] IN pd_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          pd_bag := pd_bag + ut_bag[k];
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\basic_curve_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/03/25 14:00:20 budreckytej Exp $
   ISO TC184/SC4/WG12 N3367 - ISO/CD-TS 10303-1651 Basic curve - EXPRESS MIM
*)


SCHEMA Basic_curve_mim;
	USE FROM Basic_geometry_mim;	-- ISO/TS 10303-1652
	USE FROM External_item_identification_assignment_mim;	-- ISO/TS 10303-1128

	USE FROM geometry_schema
		(trimmed_curve,
		line,
		composite_curve,
		composite_curve_segment,
		pcurve,
		surface_curve);
	
TYPE bc_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
     (trimmed_curve);
END_TYPE;
	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\basic_geometry_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/02/28 14:59:47 liutkus Exp $
   ISO TC184/SC4/WG12 N3370 - ISO/CD-TS 10303-1652 Basic geometry - EXPRESS MIM
*)


SCHEMA Basic_geometry_mim;

	USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

	USE FROM Geometry_schema(plane,
	point_on_curve,
	curve,
	line,
	point_on_surface,
	degenerate_pcurve,
	surface,
	oriented_surface); -- required by mapping

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\cable_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 09:39:07 liutkus Exp $
   ISO TC184/SC4/WG12 N3319 - ISO/CD-TS 10303-1653 Cable - EXPRESS MIM
*)
SCHEMA Cable_mim;

	USE FROM Assembly_module_with_packaged_connector_component_mim;	-- ISO/TS 10303-1645

ENTITY cable_terminal
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'CABLE_MIM.' +
       'CABLE_USAGE_VIEW' IN 
       TYPEOF (SELF.of_shape.definition);
END_ENTITY;

ENTITY cable_usage_view
 SUBTYPE OF (physical_unit);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'CABLE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'CABLE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'CABLE_MIM.' +
       'CABLE_TERMINAL' IN 
       TYPEOF (sa))) >= 1))) = 0;
  WR2: SELF.frame_of_reference.name IN ['physical design usage'];
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\certification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.9 2004/10/31 20:37:09 thendrix Exp $
ISO TC184/SC4/WG12 N1148 - ISO/TS 10303-1044 Certification - EXPRESS MIM
*) 


SCHEMA Certification_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (role_association,
   role_select); 

USE FROM certification_schema   -- ISO 10303-41
  (certification,
   certification_type); 

USE FROM management_resources_schema   -- ISO 10303-41
  (certification_assignment); 


TYPE certification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY applied_certification_assignment
  SUBTYPE OF (certification_assignment);
  items : SET[1:?] OF certification_item;
END_ENTITY;

END_SCHEMA;  -- Certification_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\characteristic_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.19 2005/02/25 16:28:05 liutkus Exp $
   ISO TC184/SC4/WG12 N3322 - ISO/CD-TS 10303-1654 Characteristic - EXPRESS MIM
*)
SCHEMA Characteristic_mim;

	USE FROM Document_assignment_mim;	-- ISO/TS 10303-1122
	USE FROM Extended_measure_representation_mim;	-- ISO/TS 10303-1106
	USE FROM Value_with_unit_extension_mim;	-- ISO/TS 10303-1753

USE FROM Group_schema(group);

USE FROM Qualified_measure_schema
	(expanded_uncertainty,
	qualitative_uncertainty,
	measure_qualification);

TYPE c_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (coordinated_representation_item);
END_TYPE;


ENTITY characteristic_type
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN [
       'string property',
       'logical property',
       'boolean property',
       'numeric property',
       'physical property',
       'externally defined property',
       'polar complex numeric property',
       'compound characteristic'
        ];

END_ENTITY;

ENTITY coordinated_representation_item
  SUBTYPE OF (representation, representation_item);
WHERE
  WR1: SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'CHARACTERISTIC_MIM.' + 
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       SIZEOF (USEDIN (pdr, 
       'CHARACTERISTIC_MIM.' +
       'DATA_ENVIRONMENT.ELEMENTS')) <= 1)) <= 1;
  WR2: SIZEOF (USEDIN (SELF, 
       'CHARACTERISTIC_MIM.' + 
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
  WR3: (NOT (SELF\representation_item.name = 'tolerance')) OR
       (SIZEOF (QUERY (it <* SELF.items |
       'CHARACTERISTIC_MIM.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) >= 1); 
  WR4: (NOT (SELF\representation_item.name = 'plus minus tolerance')) OR
       (SIZEOF (QUERY (it <* SELF.items |
       'CHARACTERISTIC_MIM.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) = 3); 
  WR5: (NOT (SELF\representation_item.name = 'symmetrical tolerance')) OR
       (SIZEOF (QUERY (it <* SELF.items |
       'CHARACTERISTIC_MIM.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) = 2); 
  WR6: (NOT (SELF\representation_item.name = 'plus minus tolerance'))
       OR
       (
        (SIZEOF (QUERY (it <* SELF.items
         | ('CHARACTERISTIC_MIM.' +
            'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) 
           AND 
            (it\representation_item.name = 'basic value'))
        ) = 1)
       AND
        (SIZEOF (QUERY (it <* SELF.items
         | ('CHARACTERISTIC_MIM.' +
            'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) 
           AND 
            (it\representation_item.name = 'plus value'))
        ) = 1)
       AND
        (SIZEOF (QUERY (it <* SELF.items 
         | ('CHARACTERISTIC_MIM.' +
            'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) 
           AND 
            (it\representation_item.name = 'minus value'))
        ) = 1)
       );

  WR7: (NOT (SELF\representation_item.name = 'symmetrical tolerance')) OR
       ((SIZEOF (QUERY (it <* SELF.items |
       ('CHARACTERISTIC_MIM.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it)) AND (it\representation_item.name = 'basic value'))
                        ) = 1)
       AND
       (SIZEOF (QUERY (it <* SELF.items |
       ('CHARACTERISTIC_MIM.' +
       'MEASURE_REPRESENTATION_ITEM' IN 
       TYPEOF (it)) AND ( it\representation_item.name = 'deviation value'))
                        ) = 1)
       ); 
END_ENTITY;

ENTITY parameter_type
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN ['string property type','logical property type',
       'physical property type','boolean property type'];
END_ENTITY;

ENTITY table_representation_item
  SUBTYPE OF (compound_representation_item);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'CHARACTERISTIC_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS')) > 0;
  WR2: 'CHARACTERISTIC_MIM.' +
       'LIST_REPRESENTATION_ITEM'
       IN TYPEOF(SELF\compound_representation_item.item_element);
END_ENTITY; 

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\chemical_substance_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 09:39:07 liutkus Exp $
   ISO TC184/SC4/WG12 N3373 - ISO/CD-TS 10303-1655 Chemical substance - EXPRESS MIM
*)


SCHEMA Chemical_substance_mim;
	USE FROM Assembly_structure_mim;	-- ISO/TS 10303-1026
	USE FROM Part_view_definition_mim;	-- ISO/TS 10303-1023
	USE FROM Person_organization_assignment_mim;	-- ISO/TS 10303-1013
	USE FROM Product_identification_mim;	-- ISO/TS 10303-1017

	USE FROM material_property_definition_schema
		(product_material_composition_relationship);

	USE FROM product_structure_schema
		(make_from_usage_option);
		
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\class_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.9 2004/11/19 21:37:34 robbod Exp $
 ISO TC184/SC4/WG12 N3023 - ISO/TS 10303-1070 Class - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2259
*) 


SCHEMA Class_mim;

USE FROM classification_schema   -- ISO 10303-54
  (class,
   class_by_extension,
   class_by_intension); 

USE FROM group_schema   -- ISO 10303-41
  (group); 


END_SCHEMA;  -- Class_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\classification_assignment_mim.exp
   ------------------------------------------------------------
*)

(* 
 $Id: mim.exp,v 1.11 2004/11/30 17:13:38 robbod Exp $
 ISO TC184/SC4/WG12 N3249 - ISO/TS 10303-1114 Classification assignment - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2230 
*)

SCHEMA Classification_assignment_mim;

USE FROM Class_mim;    -- ISO/TS 10303-1070

USE FROM management_resources_schema   -- ISO 10303-41
  (classification_assignment); 


TYPE classification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY applied_classification_assignment
  SUBTYPE OF (classification_assignment);
  items : SET[1:?] OF classification_item;
END_ENTITY;

END_SCHEMA;  -- Classification_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\classification_with_attributes_mim.exp
   ------------------------------------------------------------
*)

(* 
   $Id: mim.exp,v 1.1 2005/03/17 07:24:47 liutkus Exp $
   ISO/TC184/SC4 WG12N2617 - ISO/TS 10303-1111 Classification_with_attributes - Express MIM 
   Supersedes ISO TC184/SC4/WG12N1764
*)

SCHEMA Classification_with_attributes_mim;

USE FROM Class_mim;

USE FROM Classification_assignment_mim;

USE FROM Extended_measure_representation_mim;

USE FROM External_class_mim;

USE FROM Identification_assignment_mim;

USE FROM Plib_class_reference_mim;

USE FROM Part_and_version_identification_mim;

USE FROM Part_view_definition_mim;

USE FROM group_schema(
	group,
      group_relationship);

USE FROM product_property_definition_schema(
      characterized_object,
	general_property,
	general_property_association,
	property_definition);

USE FROM product_property_representation_schema(
	property_definition_representation);

USE FROM representation_schema(
	set_representation_item);

USE FROM management_resources_schema(classification_role); --GL added

TYPE classification_item_extended = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
	characterized_class,
      product, 
      product_definition_formation,
      product_definition);
END_TYPE;

TYPE classification_identification_item = EXTENSIBLE SELECT BASED_ON identification_item WITH
  (class);
END_TYPE;

TYPE classification_classification_item = EXTENSIBLE SELECT BASED_ON classification_item WITH
  (class);
END_TYPE;

TYPE classified_item = EXTENSIBLE GENERIC_ENTITY SELECT (product, product_definition_formation, product_definition);
END_TYPE;

TYPE class_system_item = EXTENSIBLE GENERIC_ENTITY SELECT(characterized_class);
END_TYPE;

TYPE cwa_identification_item = SELECT BASED_ON identification_item WITH (characterized_class);
END_TYPE;

TYPE cwa_versionable_item = SELECT BASED_ON versionable_item WITH (characterized_class);
END_TYPE;


ENTITY characterized_class
SUBTYPE OF (characterized_object, class);
END_ENTITY;

ENTITY class_system 
SUBTYPE OF (group); 
END_ENTITY; 


RULE restrict_classification_assignments FOR (applied_classification_assignment);
WHERE
WR1: SIZEOF(QUERY(aia <* applied_classification_assignment | 
		NOT class_assignment_is_valid(aia)))=0;
END_RULE;

FUNCTION class_assignment_is_valid (aia: applied_classification_assignment): BOOLEAN;
LOCAL
  item: classification_item;
  role: classification_role;
END_LOCAL;

role:= aia.role;
IF ('CLASSIFICATION_WITH_ATTRIBUTES_MIM.' +'CLASS_SYSTEM' IN TYPEOF(aia.assigned_class)) THEN
  IF(role.name <> 'class system membership') THEN
    RETURN(FALSE);
  END_IF;
  REPEAT i:=LOINDEX(aia.items) TO HIINDEX(aia.items);
    item:= aia.items[i];

    IF (SIZEOF(['CLASSIFICATION_WITH_ATTRIBUTES_MIM.' + 'CLASS_SYSTEM_ITEM']*TYPEOF(item))=0) THEN
-- item invalid if item does not belong to the types that may have a class_system
	RETURN(FALSE);
    END_IF;
  END_REPEAT;
END_IF;

IF ('CLASSIFICATION_WITH_ATTRIBUTES_MIM.' +'CHARACTERIZED_CLASS' IN TYPEOF(aia.assigned_class)) THEN
  IF	NOT(role.name IN ['definitional','non-definitional','']) THEN
    RETURN(FALSE); 
  END_IF;

  REPEAT i:=LOINDEX(aia.items) TO HIINDEX(aia.items);
    item:= aia.items[i];

    IF (SIZEOF(['CLASSIFICATION_WITH_ATTRIBUTES_MIM.' + 'CLASSIFIED_ITEM']*TYPEOF(item))=0) THEN
-- item invalid if item does not belong to the types that may have a characterized_class
	RETURN(FALSE);
    END_IF;
  END_REPEAT;
END_IF;
RETURN(TRUE);
END_FUNCTION;

RULE restrict_group_relationship_for_classification_hierarchy FOR (group_relationship); 
WHERE 
WR1: SIZEOF( QUERY( gr <* group_relationship | 
  (gr.name = 'class hierarchy') AND 
  (NOT('CLASSIFICATION_WITH_ATTRIBUTES_MIM.CLASS' IN TYPEOF(gr.related_group)) OR 
  NOT('CLASSIFICATION_WITH_ATTRIBUTES_MIM.CLASS' IN TYPEOF(gr.relating_group))) )) = 0; 
END_RULE; 

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\colour_mim.exp
   ------------------------------------------------------------
*)

(*
WG12 N655
ISO/TS 10303-1002
Product data representation and exchange: Application module: Colour
*)

SCHEMA Colour_mim;
  USE FROM external_reference_schema -- ISO 10303-41
      (externally_defined_item);
  USE FROM presentation_resource_schema -- ISO 10303-46
      (colour,
       colour_rgb,
       colour_specification,
       draughting_pre_defined_colour,
       pre_defined_colour);
  USE FROM support_resource_schema -- ISO 10303-41
      (identifier);

 ENTITY externally_defined_colour
  SUBTYPE OF (colour_specification,externally_defined_item);
END_ENTITY; -- externally_defined_colour

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\component_feature_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 09:39:51 liutkus Exp $
   ISO TC184/SC4/WG12 N3325 - ISO/CD-TS 10303-1657 Component feature - EXPRESS MIM
*)
SCHEMA Component_feature_mim;

	USE FROM Physical_unit_design_view_mim;	-- ISO/TS 10303-1728

ENTITY component_feature
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'COMPONENT_FEATURE_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) <= 1;
END_ENTITY;

ENTITY component_feature_relationship
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :<>:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\component_feature_relationship)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
END_ENTITY; 

ENTITY component_terminal
  SUBTYPE OF (component_feature);
WHERE
  WR1: (SELF\shape_aspect.description IN 
      ['assembly module component terminal', 
       'bare die component terminal', 
       'component termination passage join terminal', 
       'conductive interconnect element terminal', 
       'interconnect component join terminal', 
       'interconnect module component terminal', 'land join terminal', 
       'minimally defined component terminal',
       'non functional land join terminal', 
       'packaged component join terminal', 
       'printed component join terminal', 'package terminal occurrence',
       'via terminal']) OR
        ('COMPONENT_FEATURE_MIM.' +
       'ASSEMBLY_MODULE_MACRO_COMPONENT_JOIN_TERMINAL' IN
       TYPEOF  (SELF)) OR
        ('COMPONENT_FEATURE_MIM.' +
       'INTERCONNECT_MODULE_MACRO_COMPONENT_JOIN_TERMINAL' IN
       TYPEOF  (SELF));
  WR2: 'COMPONENT_FEATURE_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF  (SELF.of_shape.definition);
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) <= 1;
  WR4: SIZEOF (QUERY (at <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated terminals') |
       'COMPONENT_FEATURE_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF (at.relating_shape_aspect))) <= 1;
  WR5: SIZEOF (QUERY (cr <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connectivity requirement') |
       'COMPONENT_FEATURE_MIM.' +
       'PHYSICAL_NETWORK' IN
       TYPEOF (cr.relating_shape_aspect))) <= 1;
  WR6: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design usage')) <= 1;
  WR7: (NOT (SELF\shape_aspect.description IN 
       ['assembly module component terminal', 
       'bare die component terminal', 'package terminal occurrence', 
       'packaged component join terminal', 
       'printed component join terminal'])) OR
       (SELF.product_definitional);
  WR8: (NOT (SELF\shape_aspect.description = 
       'assembly module component terminal')) OR
       ((SELF.of_shape.definition.frame_of_reference.name =
       'physical occurrence') AND
       (EXISTS(SELF.of_shape.definition\product_definition.name)) AND
       (NOT(EXISTS(SELF.of_shape.definition\product_definition.name)) OR
       (SELF.of_shape.definition\product_definition.name =
       'assembly module'))
       );
  WR9: (NOT (SELF\shape_aspect.description = 
       'assembly module component terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('COMPONENT_FEATURE_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)))) = 1);
 WR10: (NOT (SELF\shape_aspect.description = 
       'bare die component terminal')) OR
       (SELF.of_shape.definition\product_definition.description = 
       'bare die component');
 WR11: (NOT (SELF\shape_aspect.description = 
       'bare die component terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('COMPONENT_FEATURE_MIM.' +
       'BARE_DIE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)))) = 1);
(*
 WR12: (NOT (SELF\shape_aspect.description = 
       'component termination passage join terminal')) OR
       (
       ('COMPONENT_FEATURE_MIM.' +
       'PLATED_PASSAGE' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description =
       'component termination passage'));
*)
 WR13: (NOT (SELF\shape_aspect.description = 
       'component termination passage join terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description =
       'component termination passage template join terminal')) = 1);
(*
  WR14: (NOT (SELF\shape_aspect.description = 
        'conductive interconnect element terminal')) OR
       ('COMPONENT_FEATURE_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (associated_component(SELF)) AND
       ((associated_component(SELF).description =
       'conductive interconnect element with pre defined transitions') OR
       (associated_component(SELF).description =
   'conductive interconnect element with user defined single transition')
       ));
*)
 WR15: (NOT (SELF\shape_aspect.description IN
       ['conductive interconnect element terminal',
       'interconnect component join terminal',
       'printed component join terminal'])) OR
       (SIZEOF (QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description =
       'connection zone')) <= 1);
 WR16: (NOT (SELF\shape_aspect.description =
       'interconnect module component terminal')) OR
   ((SELF.of_shape.definition\product_definition.frame_of_reference.name =
       'physical occurrence') AND
       (EXISTS(SELF.of_shape.definition\product_definition.name)) AND
       (NOT(EXISTS(SELF.of_shape.definition\product_definition.name)) OR
       (SELF.of_shape.definition\product_definition.name =
       'interconnect module'))
       );

 WR17: (NOT (SELF\shape_aspect.description =
       'interconnect module component terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       'COMPONENT_FEATURE_MIM.' +
       'INTERCONNECT_MODULE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)
       )) = 1);
 WR18: (NOT (SELF\shape_aspect.description IN
       ['land join terminal', 'non functional land join terminal'])) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       (('COMPONENT_FEATURE_MIM.' +
       'LAND_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (TRUE)))) = 1);
(*
 WR19: (NOT (SELF\shape_aspect.description = 'land join terminal')) OR
       ('COMPONENT_FEATURE_MIM.' +
       'LAND' IN
       TYPEOF (associated_component(SELF)));
*)
 WR20: (NOT (SELF\shape_aspect.description = 
       'minimally defined terminal')) OR
       (SIZEOF (QUERY (pdr<* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'part terminal external reference')) = 1);
(*
 WR21: (NOT (SELF\shape_aspect.description = 
       'non functional land join terminal')) OR
       (('COMPONENT_FEATURE_MIM.' +
       'LAND' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description IN
       ['non functional land',
       'via dependent non functional land',
       'via and contact size dependent non functional land',
       'component termination passage dependent non functional land',
       'contact size dependent non functional land',
       'component termination passage and contact size ' +
       'dependent non functional land',
       'unsupported passage dependent non functional land'])))) = 1);
*)
 WR22: (NOT (SELF\shape_aspect.description = 
       'package terminal occurrence')) OR
       (SIZEOF (QUERY (ud <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'usage definition') |
       ('COMPONENT_FEATURE_MIM.' +
       'PACKAGE_TERMINAL' IN
       TYPEOF (ud.relating_shape_aspect)))) = 1);
 WR23: (NOT (SELF\shape_aspect.description IN 
       ['package terminal occurrence',
       'packaged component join terminal'])) OR
       (('COMPONENT_FEATURE_MIM.' +
       'PACKAGED_COMPONENT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.
        frame_of_reference.name = 
       'physical occurrence'));
 WR24: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('COMPONENT_FEATURE_MIM.' +
       'PACKAGED_PART_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'join terminal'))) = 1);
 WR25: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['COMPONENT_FEATURE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'COMPONENT_FEATURE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2)) <= 2)) <= 1)) <= 1); 
 WR26: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu <* QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['COMPONENT_FEATURE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'COMPONENT_FEATURE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'maximum wire length')) <= 1)) <= 1)) <= 1);
 WR27: (NOT (SELF\shape_aspect.description = 
       'packaged component join terminal')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu <* QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['COMPONENT_FEATURE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'COMPONENT_FEATURE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'minimum wire length')) <= 1)) <= 1)) <= 1); 
 WR28: (NOT (SELF\shape_aspect.description = 
       'printed component join terminal')) OR
       ((SELF.of_shape.definition\product_definition.
       frame_of_reference.name =
       'layout occurrence') AND
       (SELF.of_shape.definition\product_definition.
       name = 'interconnect module')
       );
 WR29: (NOT (SELF\shape_aspect.description = 
       'printed component join terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('COMPONENT_FEATURE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'join terminal'))) = 1);
(* invalid csa
 WR30: (NOT (SELF\shape_aspect.description = 
       'printed component join terminal')) OR
       (SIZEOF (QUERY (i <* QUERY (pdr <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       pdr\shape_aspect_relationship.name = 'implementation') |
       ((SIZEOF (['COMPONENT_FEATURE_MIM.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (i.relating_shape_aspect)) >= 1) AND
       (i.relating_shape_aspect\shape_aspect.description = 
                        'stratum feature template component'))
       )) = 1); *)
(*
 WR31: (NOT (SELF\shape_aspect.description = 'via terminal')) OR
       (('COMPONENT_FEATURE_MIM.' +
       'PLATED_PASSAGE' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description IN
       ['buried via', 'interfacial connection',
       'bonded conductive base blind via',
       'non conductive base blind via',
       'plated conductive base blind via'])))) = 1);
*)
 WR32: (NOT (SELF\shape_aspect.description = 'via terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'COMPONENT_FEATURE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description =
       'via template terminal')) = 1);
 WR33: (NOT (SELF\shape_aspect.description =
       'interconnect component join terminal')) OR
       ((SELF.of_shape.definition\product_definition.
       frame_of_reference.name =
       'physical occurrence') AND
       NOT(SELF.of_shape.definition\product_definition.description 
       IN ['assembly module component', 'bare die component', 
       'interconnect module component', 'laminate component',
       'packaged component']));
 WR34: SIZEOF(QUERY(pd <* USEDIN(SELF, 
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') | SIZEOF(QUERY(pdr <* USEDIN(pd,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
       SIZEOF(QUERY(dri <* pdr.used_representation.items |
       (dri\representation_item.name = 'global swappable') AND 
       (dri\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1)) <= 1;
 WR35: SIZEOF(QUERY(pd <* USEDIN(SELF, 
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') | SIZEOF(QUERY(pdr <* USEDIN(pd,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
       SIZEOF(QUERY(dri <* pdr.used_representation.items |
       (dri\representation_item.name = 'local swappable') AND 
       (dri\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1)) <= 1;
 WR36: SIZEOF(QUERY(pd <* USEDIN(SELF, 
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') | SIZEOF(QUERY(pdr <* USEDIN(pd,
       'COMPONENT_FEATURE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
       SIZEOF(QUERY(dri <* pdr.used_representation.items | dri\representation_item.name = 
       'swap code'
       )) = 1)) = 1)) <= 1;
END_ENTITY;

ENTITY make_from_feature_relationship
 SUBTYPE OF (component_feature_relationship);
WHERE
  WR1: SIZEOF (['COMPONENT_FEATURE_MIM.' +
       'COMPONENT_TERMINAL',
       'COMPONENT_FEATURE_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL'] *
       TYPEOF (SELF.relating_shape_aspect)) = 1;
(* invalid csa       
  WR2: SIZEOF (['COMPONENT_FEATURE_MIM.' +
       'COMPONENT_TERMINAL',
       'COMPONENT_FEATURE_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL'] *
       TYPEOF (SELF.related_shape_aspect)) = 1; *)
(* invalid csa
  WR3: (NOT ('COMPONENT_FEATURE_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.relating_shape_aspect))) OR
       (SELF.relating_shape_aspect\shape_aspect.description IN ['component feature',
       'component termination passage interface terminal', 
       'land or non functional land interface terminal',  
       'printed connector component interface terminal']); *)
(* invalid csa
  WR4: (NOT ('COMPONENT_FEATURE_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.related_shape_aspect))) OR
       (SELF.related_shape_aspect\shape_aspect.description IN ['component feature',
       'component termination passage interface terminal', 
       'land or non functional land interface terminal',  
       'printed connector component interface terminal']); *)
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\component_grouping_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 09:39:51 liutkus Exp $
   ISO TC184/SC4/WG12 N3328 - ISO/CD-TS 10303-1656 Component grouping - EXPRESS MIM
*)
SCHEMA Component_grouping_mim;

	USE FROM Interface_component_mim;	-- ISO/TS 10303-1691

ENTITY array_placement_group_component_definition
  SUPERTYPE OF (ONEOF(linear_array_placement_group_component_definition,
                      rectangular_array_placement_group_component_definition))
  SUBTYPE OF (assembly_group_component_definition);
END_ENTITY;

ENTITY assembly_group_component_definition
  SUBTYPE OF (assembly_component);
WHERE
(* invalid csa
  WR1: (SIZEOF (QUERY (gc <* QUERY (pdr <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'group component') |
       ('COMPONENT_GROUPING_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (gc.related_product_definition)))) >= 1)  OR
       (SIZEOF (QUERY(agcsa <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('COMPONENT_GROUPING_MIM.' +
        'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF (agcsa)))) = 0); *)
  WR2: (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('COMPONENT_GROUPING_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('COMPONENT_GROUPING_MIM.' +
       'ASSEMBLY_JOINT' IN TYPEOF (aj)) AND
       (SIZEOF (QUERY( acu <* USEDIN (aj\shape_aspect_relationship.relating_shape_aspect,
       'COMPONENT_GROUPING_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       ('COMPONENT_GROUPING_MIM.' +
       'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
       AND (acu\product_definition_relationship.relating_product_definition = SELF)
       )) >= 1))) >= 1);
  WR3: (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('COMPONENT_GROUPING_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('COMPONENT_GROUPING_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj))AND
       (SIZEOF (QUERY( acu <* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect,
        'COMPONENT_GROUPING_MIM.' +
        'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        ('COMPONENT_GROUPING_MIM.' +
        'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
        AND (acu\product_definition_relationship.relating_product_definition = SELF)
        )) = 0))) = 0);
  WR4: (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('COMPONENT_GROUPING_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('COMPONENT_GROUPING_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)) AND
       (SIZEOF (QUERY( cl <* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect.of_shape.definition,
        'COMPONENT_GROUPING_MIM.' +
        'REPRESENTATION.ITEMS') |
        ('COMPONENT_GROUPING_MIM.' +
        'COMPONENT_LOCATION' IN TYPEOF (cl))
        AND (aj IN cl\representation.items))) = 0))) = 0);
END_ENTITY;

ENTITY assembly_group_component_definition_placement_link
  SUBTYPE OF (product_definition,product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: 'COMPONENT_GROUPING_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition);
  WR3: 'COMPONENT_GROUPING_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\assembly_group_component_definition_placement_link)) = 0;
  WR5: SELF\product_definition.name = '';
  WR6: SELF\product_definition_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'COMPONENT_GROUPING_MIM.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) = 1;
END_ENTITY; 

ENTITY interfaced_group_component_definition
  SUBTYPE OF (assembly_group_component_definition);
WHERE
  WR1: (SIZEOF (QUERY (gc <* QUERY (pdr <* USEDIN (SELF,
       'COMPONENT_GROUPING_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'group component') |
       ('COMPONENT_GROUPING_MIM.' +
       'INTERFACE_COMPONENT_DEFINITION' IN 
       TYPEOF (gc.related_product_definition))))
       >= 1);
END_ENTITY;

ENTITY linear_array_component_definition_link
  SUBTYPE OF (product_definition,product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: 'COMPONENT_GROUPING_MIM.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition);
  WR3: 'COMPONENT_GROUPING_MIM.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\linear_array_component_definition_link)) = 0;
  WR5: SELF\product_definition.name = '';
  WR6: SELF\product_definition_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'COMPONENT_GROUPING_MIM.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) = 1;
END_ENTITY; 

ENTITY linear_array_placement_group_component_definition
  SUBTYPE OF (array_placement_group_component_definition);
END_ENTITY;

ENTITY rectangular_array_placement_group_component_definition
  SUBTYPE OF (array_placement_group_component_definition);
END_ENTITY;

RULE product_definition_formation_requires_approval FOR
(product_definition,
  applied_approval_assignment);
WHERE
  WR1: SIZEOF (QUERY (pd <* product_definition |
       (NOT('COMPONENT_GROUPING_MIM.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF(pd))) AND
       (NOT (SIZEOF (QUERY (aaa <* applied_approval_assignment |
       pd.formation IN aaa.items )) = 1 )))) = 0;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\conductivity_material_aspects_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 09:39:52 liutkus Exp $
   ISO TC184/SC4/WG12 N3655 - ISO/CD-TS 10303-1756 Conductivity material aspects - EXPRESS MIM
*)
SCHEMA Conductivity_material_aspects_mim;

	USE FROM Classification_assignment_mim;	-- ISO/TS 10303-1114
	USE FROM Generic_material_aspects_mim;	-- ISO/TS 10303-1681
	USE FROM Part_view_definition_mim;	-- ISO/TS 10303-1023
	
TYPE cma_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
     (material_designation);
END_TYPE;
	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\configuration_effectivity_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.8 2004/10/28 18:27:56 darla Exp $
 ISO TC184/SC4/WG12 N2950 - ISO/TS 10303-1058 Configuration effectivity - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2519
*) 


SCHEMA Configuration_effectivity_mim; 

USE FROM Effectivity_mim;    -- ISO/TS 10303-1057

USE FROM Configuration_item_mim;    -- ISO/CD-TS 10303-1056

USE FROM Product_view_definition_relationship_mim;    -- ISO/TS 10303-1041

USE FROM configuration_management_schema   -- ISO 10303-44
  (configuration_effectivity); 


END_SCHEMA;  -- Configuration_effectivity_mim






(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\configuration_item_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/02/25 16:07:46 robbod Exp $
 ISO TC184/SC4/WG12 N2533 - ISO/TS 10303-1056 Configuration item - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2483
*) 


SCHEMA Configuration_item_mim;

USE FROM Product_version_mim;    -- ISO/TS 10303-1018

USE FROM Product_view_definition_mim;    -- ISO/TS 10303-1019

USE FROM Product_concept_identification_mim;    -- ISO/TS 10303-1060

USE FROM configuration_management_schema   -- ISO 10303-44
  (configuration_design,
   configuration_item); 


END_SCHEMA;  -- Configuration_item_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\connectivity_allocation_to_physical_network_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: MimGenerator.java,v 1.6 2004/11/22 16:26:37 raimundas Exp $
   ISO TC184/SC4/WG12 N3376 - ISO/CD-TS 10303-1658 Connectivity allocation to physical network - EXPRESS MIM
*)


SCHEMA Connectivity_allocation_to_physical_network_mim;
	USE FROM Functional_decomposition_with_nodal_representation_to_packaged_mapping_mim;	-- ISO/TS 10303-1678
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\construction_geometry_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.1 2005/04/04 10:38:55 liutkus Exp $
ISO TC184/SC4/WG12 N2868 - ISO/TS 10303-1131 Construction geometry - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1542
*) 


SCHEMA Construction_geometry_mim;

USE FROM aic_topologically_bounded_surface;    -- ISO 10303-511

USE FROM Basic_geometry_mim;    -- ISO/TS 10303-1652

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM geometry_schema   -- ISO 10303-42
  (b_spline_curve,
   b_spline_surface,
   circle,
   composite_curve,
   conical_surface,
   curve,
   curve_bounded_surface,
   curve_replica,
   cylindrical_surface,
   degenerate_pcurve,
   ellipse,
   hyperbola,
   line,
   offset_curve_2d,
   offset_curve_3d,
   offset_surface,
   oriented_surface,
   parabola,
   pcurve,
   placement,
   plane,
   point_on_curve,
   point_on_surface,
   point_replica,
   polyline,
   rectangular_composite_surface,
   rectangular_trimmed_surface,
   spherical_surface,
   surface,
   surface_curve,
   surface_of_linear_extrusion,
   surface_of_revolution,
   surface_replica,
   toroidal_surface,
   trimmed_curve); 

USE FROM representation_schema   -- ISO 10303-43
  (mapped_item,
   representation,
   representation_map,
   representation_relationship); 

USE FROM topology_schema   -- ISO 10303-42
  (edge_curve,
   face_surface,
   vertex_point); 


ENTITY constructive_geometry_representation
  SUBTYPE OF (representation);
WHERE
  WR1: ('CONSTRUCTION_GEOMETRY_MIM.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF.context_of_items)) AND ({2 <= SELF.context_of_items\geometric_representation_context. coordinate_space_dimension <= 3});
  WR2: SIZEOF( QUERY( cgr_i <* SELF.items | SIZEOF(['CONSTRUCTION_GEOMETRY_MIM.PLACEMENT', 'CONSTRUCTION_GEOMETRY_MIM.CURVE', 'CONSTRUCTION_GEOMETRY_MIM.EDGE', 'CONSTRUCTION_GEOMETRY_MIM.FACE', 'CONSTRUCTION_GEOMETRY_MIM.POINT', 'CONSTRUCTION_GEOMETRY_MIM.SURFACE', 'CONSTRUCTION_GEOMETRY_MIM.FACE_SURFACE', 'CONSTRUCTION_GEOMETRY_MIM.VERTEX_POINT'] * TYPEOF(cgr_i)) <> 1 )) = 0;
  WR3: SIZEOF( USEDIN( SELF, 'REPRESENTATION_SCHEMA.' + 'REPRESENTATION_RELATIONSHIP.REP_2') ) > 0;
  WR4: SIZEOF( USEDIN( SELF, 'REPRESENTATION_SCHEMA.' + 'REPRESENTATION_MAP.MAPPED_REPRESENTATION') ) = 0;
END_ENTITY;

ENTITY constructive_geometry_representation_relationship
  SUBTYPE OF (representation_relationship);
WHERE
  WR1: (SELF.rep_1.context_of_items :=: SELF.rep_2.context_of_items) AND ('CONSTRUCTION_GEOMETRY_MIM.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF.rep_1.context_of_items));
  WR2: 'CONSTRUCTION_GEOMETRY_MIM.CONSTRUCTIVE_GEOMETRY_REPRESENTATION' IN TYPEOF(SELF.rep_2);
  WR3: SIZEOF(['CONSTRUCTION_GEOMETRY_MIM.SHAPE_REPRESENTATION', 'CONSTRUCTION_GEOMETRY_MIM.CONSTRUCTIVE_GEOMETRY_REPRESENTATION'] * TYPEOF(SELF.rep_1)) = 1;
  WR4: NOT('CONSTRUCTION_GEOMETRY_MIM.' + 'REPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION' IN TYPEOF(SELF));
END_ENTITY;

END_SCHEMA;  -- Construction_geometry_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\constructive_solid_geometry_2d_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.6 2005/02/04 15:20:21 budreckytej Exp $
   ISO TC184/SC4/WG12 N3331 - ISO/CD-TS 10303-1731 Constructive solid geometry 2d - EXPRESS MIM
*) 


SCHEMA Constructive_solid_geometry_2d_mim;

	USE FROM Area_2d_mim;	-- ISO/TS 10303-1631

USE FROM Representation_schema(mapped_item);

ENTITY csg_2d_shape_representation
  SUBTYPE OF (shape_representation);
   WHERE 
 WR1: SELF.context_of_items\
  geometric_representation_context.coordinate_space_dimension = 2;

 WR2 : SIZEOF (QUERY (it <* SELF.items| NOT
     (SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.CSG_SOLID', 
     'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.MAPPED_ITEM', 
     'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.AXIS2_PLACEMENT_2D'] 
     * TYPEOF(it)) = 1 ))) = 0;

 WR3: SIZEOF(QUERY ( it <* SELF.items | 
    (SIZEOF(['ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.CSG_SOLID']
	* TYPEOF(it)) = 1) 
	OR 
	(('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.MAPPED_ITEM' 
	IN TYPEOF(it)) AND
	('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
	'CSG_2D_SHAPE_REPRESENTATION' 
	  IN TYPEOF(it\mapped_item.mapping_source.mapped_representation))) 
       )) >= 1;

 WR4: SIZEOF(QUERY ( it <* SELF.items | 
     (('ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.MAPPED_ITEM' 
     IN TYPEOF(it)) AND (NOT (( 
      'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
      'CSG_2D_SHAPE_REPRESENTATION') 
      IN TYPEOF(it\mapped_item.mapping_source.mapped_representation)))) )) = 0;
 WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_representation ||
      SELF\csg_2d_shape_representation || SELF\representation)) = 0;
END_ENTITY; -- csg_2d_shape_representation 

END_SCHEMA;  -- Constructive_solid_geometry_2d_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\contextual_shape_positioning_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.3 2004/10/21 15:44:49 darla Exp $
 ISO TC184/SC4/WG12 N1139 - ISO/TS 10303-1027 Contextual shape positioning - EXPRESS MIM
*)
SCHEMA Contextual_shape_positioning_mim;

USE FROM Elemental_geometric_shape_mim;
USE FROM Foundation_representation_mim;
USE FROM Shape_property_assignment_mim; 

USE FROM product_property_representation_schema -- ISO 10303-41
  (context_dependent_shape_representation);

USE FROM representation_schema 	-- ISO 10303-43
      (functionally_defined_transformation,
      representation_relationship_with_transformation,
      mapped_item);

END_SCHEMA;






(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\contract_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.6 2004/10/21 15:47:34 darla Exp $
 ISO TC184/SC4/WG12 N1127 - ISO/TS 10303-1062 Contract - EXPRESS MIM
*)    
SCHEMA Contract_mim;
USE FROM contract_schema -- ISO 10303-41
  (contract);
USE FROM management_resources_schema -- ISO 10303-41
  (contract_assignment);

   
TYPE contract_item = EXTENSIBLE SELECT; 
END_TYPE;
   
   
ENTITY applied_contract_assignment
  SUBTYPE OF (contract_assignment);
  items : SET [1:?] OF contract_item;
END_ENTITY;

END_SCHEMA;

 


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\curve_swept_solid_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/02/04 15:20:47 budreckytej Exp $
   ISO TC184/SC4/WG12 N3334 - ISO/CD-TS 10303-1659 Curve swept solid - EXPRESS MIM
 *)
SCHEMA Curve_swept_solid_mim;

USE FROM Aic_curve_swept_solid;
	USE FROM Elemental_geometric_shape_mim;	-- ISO/TS 10303-1004

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\date_time_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/10/21 16:32:15 darla Exp $
 ISO TC184/SC4/WG12 N1082 - ISO/TS 10303-1010 Date time - EXPRESS MIM
*)       
SCHEMA Date_time_mim;
USE FROM date_time_schema -- ISO 10303-41
  (calendar_date,
   date_and_time,
   coordinated_universal_time_offset);

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\date_time_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.7 2004/10/21 16:34:13 darla Exp $
 ISO TC184/SC4/WG12 N1094 - ISO/TS 10303-1014 Date time assignment - EXPRESS MIM
*)     
SCHEMA Date_time_assignment_mim;

USE FROM Date_time_mim; 	-- 10303-1010

USE FROM date_time_schema 	-- ISO 10303-41
  (date,
   date_role,
   date_time_role);
USE FROM management_resources_schema -- ISO 10303-41
  (date_and_time_assignment,
   date_assignment);

   
TYPE date_item = EXTENSIBLE SELECT; 
END_TYPE;
   
TYPE date_and_time_item = EXTENSIBLE SELECT; 
END_TYPE;
   
ENTITY applied_date_and_time_assignment
  SUBTYPE OF (date_and_time_assignment);
  items : SET [1:?] OF date_and_time_item;
END_ENTITY;
   
ENTITY applied_date_assignment
  SUBTYPE OF (date_assignment);
  items : SET [1:?] OF date_item;
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\datum_difference_based_model_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/02/04 15:21:09 budreckytej Exp $
   ISO TC184/SC4/WG12 N3385 - ISO/CD-TS 10303-1660 Datum difference based model - EXPRESS MIM
*)


SCHEMA Datum_difference_based_model_mim;
	USE FROM Extended_geometric_tolerance_mim;	-- ISO/TS 10303-1666
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705
	
ENTITY datum_difference_based_model_parameter
  SUBTYPE OF (model_parameter);
WHERE
      WR1: SIZEOF(QUERY ( r <* USEDIN(SELF,
               'DATUM_DIFFERENCE_BASED_MODEL_MIM.' + 
               'REPRESENTATION.ITEMS') | (SIZEOF(QUERY (prd2 <*
                QUERY ( prd <* USEDIN(r,
               'DATUM_DIFFERENCE_BASED_MODEL_MIM.' + 
               'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 
               ((('DATUM_DIFFERENCE_BASED_MODEL_MIM.' 
               + 'PROPERTY_DEFINITION_REPRESENTATION') IN TYPEOF(prd)) AND 
               (('DATUM_DIFFERENCE_BASED_MODEL_MIM.' +
                'PROPERTY_DEFINITION') IN TYPEOF(prd\
               property_definition_representation.definition))) ) |
               ('DATUM_DIFFERENCE_BASED_MODEL_MIM.' +
                'DATUM_DIFFERENCE' IN
               TYPEOF(prd2\property_definition_representation.definition\
                                        property_definition.definition))))
                = 1) )) 
               = 1;
END_ENTITY;

ENTITY datum_difference_functional_unit_usage_view_terminal_assignment
  SUBTYPE OF (shape_aspect_relationship);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect_relationship ||
SELF\datum_difference_functional_unit_usage_view_terminal_assignment)) 
                                                              = 0;
  WR2: 'DATUM_DIFFERENCE_BASED_MODEL_MIM.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN TYPEOF 
        (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'DATUM_DIFFERENCE_BASED_MODEL_MIM.' +
       'DATUM_DIFFERENCE' IN TYPEOF 
        (SELF\shape_aspect_relationship.relating_shape_aspect);
END_ENTITY;
	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\default_tolerance_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.15 2004/11/17 22:48:44 thendrix Exp $ 
ISO TC184/SC4/WG12 N2871 - ISO/TS 10303-1052 Default tolerance - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1545
*) 


SCHEMA Default_tolerance_mim;

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM Measure_representation_mim;    -- ISO/TS 10303-1118

USE FROM representation_schema   -- ISO 10303-43
  (compound_item_definition,
   compound_representation_item,
   representation,
   set_representation_item); 

USE FROM Shape_property_assignment_mim;    -- ISO/TS 10303-1032


ENTITY default_tolerance_table
  SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF( QUERY( i <* SELF.items | NOT('DEFAULT_TOLERANCE_MIM.DEFAULT_TOLERANCE_TABLE_CELL' IN TYPEOF(i)) )) = 0;
  WR2: (SIZEOF( QUERY( rr <* USEDIN(SELF,'REPRESENTATION_SCHEMA.' + 'REPRESENTATION_RELATIONSHIP.REP_1') | rr.name < 'general tolerance definition' )) = 0) AND (SIZEOF( QUERY( rr <* USEDIN(SELF,'REPRESENTATION_SCHEMA.' + 'REPRESENTATION_RELATIONSHIP.REP_1') | (rr.name = 'general tolerance definition') AND (rr.rep_2.name < 'default tolerance') )) = 0) AND (SIZEOF( USEDIN(SELF,'REPRESENTATION_SCHEMA.' + 'REPRESENTATION_RELATIONSHIP.REP_2') ) = 0);
END_ENTITY;

ENTITY default_tolerance_table_cell
  SUBTYPE OF (compound_representation_item);
WHERE
  WR1: SIZEOF(QUERY( x <* USEDIN(SELF,'REPRESENTATION_SCHEMA.' + 'REPRESENTATION.ITEMS') | 'DEFAULT_TOLERANCE_MIM.' + 'DEFAULT_TOLERANCE_TABLE' IN TYPEOF(x)))=1 ;
  WR2: default_tolerance_table_cell_wr2(SELF\compound_representation_item.item_element);
  WR3: default_tolerance_table_cell_wr3(SELF\compound_representation_item.item_element);
  WR4: default_tolerance_table_cell_wr4(SELF\compound_representation_item.item_element);
  WR5: default_tolerance_table_cell_wr5(SELF\compound_representation_item.item_element);
END_ENTITY;

FUNCTION default_tolerance_table_cell_wr2
 (agg : compound_item_definition) : BOOLEAN; 
BEGIN 
IF SIZEOF(agg) <= 5 THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END; 
      END_FUNCTION; 

FUNCTION default_tolerance_table_cell_wr3
 (agg : compound_item_definition) : BOOLEAN; 
BEGIN 
IF (SIZEOF(QUERY ( i <* agg | (('DEFAULT_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) 
  AND (i\representation_item.name = 'significant number of digits')) )) = 1) OR 
((SIZEOF(QUERY ( i <* agg | (('DEFAULT_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 
  (i\representation_item.name = 'lower limit')) )) = 1) AND 
(SIZEOF( QUERY ( i <* agg | (('DEFAULT_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 
  (i\representation_item.name = 'upper limit')) )) = 1)) THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END; 
      END_FUNCTION; 

FUNCTION default_tolerance_table_cell_wr4
 (agg : compound_item_definition) : BOOLEAN; 
BEGIN 
IF (SIZEOF(QUERY ( i <* agg | (('DEFAULT_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 
  (i\representation_item.name = 'plus minus tolerance value')) )) = 1) OR 
((SIZEOF(QUERY ( i <* agg | (('DEFAULT_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND (
  i\representation_item.name = 'lower tolerance value')) )) = 1) AND 
(SIZEOF( QUERY ( i <* agg | (('DEFAULT_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND (
  i\representation_item.name = 'upper tolerance value')) )) = 1)) THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END; 
      END_FUNCTION; 

FUNCTION default_tolerance_table_cell_wr5
 (agg : compound_item_definition) : BOOLEAN; 
BEGIN 
IF (SIZEOF(QUERY ( i <* agg | ('DEFAULT_TOLERANCE_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(i)) )) <= 1) AND 
(SIZEOF(QUERY ( i <* agg | ('DEFAULT_TOLERANCE_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(i)) )) = 
  SIZEOF(QUERY ( i <* agg | (('DEFAULT_TOLERANCE_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 
  (i\representation_item.name = 'cell description'))) )) 
THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END; 
      END_FUNCTION; 

END_SCHEMA;  -- Default_tolerance_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\derived_shape_element_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.1 2005/03/17 07:25:04 liutkus Exp $
ISO TC184/SC4/WG12 N2865 - ISO/TS 10303-1130 Derived shape element - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1539
*)


SCHEMA Derived_shape_element_mim;

USE FROM Basic_geometry_mim;

USE FROM shape_aspect_definition_schema   -- ISO 10303-47
  (apex,
   centre_of_symmetry,
   derived_shape_aspect,
   extension,
   geometric_alignment,
   geometric_intersection,
   parallel_offset,
   perpendicular_to,
   shape_aspect_deriving_relationship,
   tangent); 

USE FROM Shape_property_assignment_mim;    -- ISO/TS 10303-1032

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054


END_SCHEMA;  -- Derived_shape_element_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\design_management_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 09:40:21 liutkus Exp $
   ISO TC184/SC4/WG12 N3388 - ISO/CD-TS 10303-1661 Design management - EXPRESS MIM
*)


SCHEMA Design_management_mim;
	USE FROM Approval_mim;	-- ISO/TS 10303-1012
	USE FROM Product_view_definition_mim;	-- ISO/TS 10303-1019
	USE FROM Work_order_mim;	-- ISO/TS 10303-1043

	USE FROM Product_definition_schema(product_definition_relationship);

TYPE design_management_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH 
     (frozen_assignment);
END_TYPE;

TYPE managed_design_object = EXTENSIBLE GENERIC_ENTITY SELECT
	(product_definition);
END_TYPE;

ENTITY current_design_assignment
	SUBTYPE OF (design_object_management_assignment);
END_ENTITY;

ENTITY current_design_object_assignment 
	SUBTYPE OF (design_object_management_assignment);
END_ENTITY;

ENTITY design_object_management_assignment
	SUBTYPE OF (action_assignment);
	 items : SET [1:?] OF managed_design_object; 
END_ENTITY;

ENTITY design_object_management_relationship_action
	SUBTYPE OF (action);
END_ENTITY;

ENTITY frozen_assignment 
 SUBTYPE OF (approval_assignment); 
 items : SET [1:?] OF managed_design_object; 
WHERE
 WR1: SELF\approval_assignment.assigned_approval.status.name in ['approved', 'not yet approved'];
END_ENTITY;

ENTITY previous_design_assignment
	SUBTYPE OF (design_object_management_assignment);
END_ENTITY;

ENTITY previous_design_object_assignment 
	SUBTYPE OF (design_object_management_assignment);
END_ENTITY;

(** Need to review - rewrite global rules below
RULE add_design_object_management_relationship_unique_constraint FOR
 ( add_design_object_assignment, add_design_object_request_assignment );
LOCAL
  pdr_bag : BAG OF product_definition_relationship := [];
  pd_bag : BAG OF product_definition := [];
  adoa_bag : BAG OF add_design_object_assignment;
  adora_bag : BAG OF add_design_object_request_assignment;
  pass : BOOLEAN := TRUE;
  mdo_bag : BAG OF managed_design_object;
END_LOCAL;

REPEAT i := 1 to SIZEOF(add_design_object_assignment) by 1;
  REPEAT j := 1 TO SIZEOF(add_design_object_assignment[i].items) by 1;
    IF ( ('DESIGN_MANAGEMENT_MIM.' +
   'PRODUCT_DEFINITION_RELATIONSHIP' IN 
      TYPEOF(add_design_object_assignment[i].items[j]))
    AND (add_design_object_assignment[i].items[j].name = 
            'design object addition') ) THEN
      IF EXISTS( add_design_object_assignment[i].items[j].
                          related_product_definition ) 
                                                               THEN
        IF( NOT( add_design_object_assignment[i].items[j].
                           related_product_definition 
                                              IN pd_bag ) ) THEN
          pd_bag := pd_bag + 
                    add_design_object_assignment[i].items[j].
                             related_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(add_design_object_request_assignment) by 1;
  REPEAT j := 1 TO 
        SIZEOF(add_design_object_request_assignment[i].items) by 1;
    IF ( ('DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP' IN 
           TYPEOF(add_design_object_request_assignment[i].items[j]))
AND (add_design_object_request_assignment[i].items[j].name = 
                             'design object addition') ) THEN
      IF EXISTS( 
           add_design_object_request_assignment[i].items[j].
                             related_product_definition ) 
                                                          THEN
        IF( NOT( 
           add_design_object_request_assignment[i].items[j].
                               related_product_definition 
                                           IN pd_bag ) ) THEN
          pd_bag := pd_bag + 
             add_design_object_request_assignment[i].items[j].
                                    related_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  mdo_bag := [];
  pdr_bag := QUERY( pdr <* USEDIN(pd_bag[i], 
            'DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | 
                         (pdr\product_definition_relationship.name = 'design object addition') );
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    adoa_bag := QUERY( adoa <* add_design_object_assignment | 
                                 (pdr_bag[j] IN adoa.items) );
    REPEAT k := 1 to SIZEOF(adoa_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      REPEAT l := 1 to SIZEOF(adoa_bag[k].items) by 1;
        IF EXISTS( adoa_bag[k].items[l] ) THEN
          IF ( adoa_bag[k].items[l] IN mdo_bag ) THEN
            pass := FALSE;
            ESCAPE;
          ELSE
            mdo_bag := mdo_bag + adoa_bag[k].items[l];
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    adora_bag := QUERY( adora <* add_design_object_request_assignment | 
                                          (pdr_bag[j] IN adora.items) );
    REPEAT k := 1 to SIZEOF(adora_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      REPEAT l := 1 to SIZEOF(adora_bag[k].items) by 1;
        IF ( adora_bag[k].items[l] IN mdo_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          mdo_bag := mdo_bag + adora_bag[k].items[l];
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE change_design_object_management_relationship_unique_constraint FOR
 (  change_from_design_object_assignment, 
 change_from_design_object_request_assignment,
change_to_design_object_assignment, 
change_to_design_object_request_assignment );
LOCAL
  pd_bag : BAG OF product_definition := [];
  pdr_bag : BAG OF product_definition_relationship;
  ctdoa_bag : BAG OF change_to_design_object_assignment;
  ctdora_bag : BAG OF change_to_design_object_request_assignment;
  cfdoa_bag : BAG OF change_from_design_object_assignment;
  cfdora_bag : BAG OF change_from_design_object_request_assignment;
  pass1 : BOOLEAN := TRUE;
  pass2 : BOOLEAN := TRUE;
  mdo_bag : BAG OF managed_design_object;
END_LOCAL;

REPEAT i := 1 to SIZEOF(change_from_design_object_assignment) by 1;
  REPEAT j := 1 TO 
          SIZEOF(change_from_design_object_assignment[i].items) by 1;
    IF ( ('DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP' IN 
     TYPEOF(change_from_design_object_assignment[i].items[j]))
AND (change_from_design_object_assignment[i].items[j].name = 
                                   'design object change') ) THEN
      IF EXISTS
( change_from_design_object_assignment[i].items[j].
 relating_product_definition ) 
                                                             THEN
        IF( NOT
          ( change_from_design_object_assignment[i].items[j].
                               relating_product_definition 
                                               IN pd_bag ) ) THEN
          pd_bag := pd_bag + 
            change_from_design_object_assignment[i].items[j].
                               relating_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to 
         SIZEOF(change_from_design_object_request_assignment) by 1;
  REPEAT j := 1 TO 
       SIZEOF(change_from_design_object_request_assignment[i].items) by 1;
    IF ( ('DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP' IN 
      TYPEOF(change_from_design_object_request_assignment[i].items[j]))
AND (change_from_design_object_request_assignment[i].items[j].name = 
                      'design object change') ) THEN
      IF EXISTS
  ( change_from_design_object_request_assignment[i].items[j].
                                    relating_product_definition )
                                                THEN
        IF( NOT
  ( change_from_design_object_request_assignment[i].items[j].
                                       relating_product_definition 
                                          IN pd_bag ) ) THEN
          pd_bag := pd_bag + 
    change_from_design_object_request_assignment[i].items[j].
                                      relating_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pd_bag) by 1;
  IF ( NOT (pass1 AND pass2) ) THEN ESCAPE;
  END_IF;
  IF ( pass1 ) THEN
    mdo_bag := [];
    pdr_bag := QUERY( pdr <* USEDIN(pd_bag[i], 
   'DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | 
        (pdr\product_definition_relationship.name = 'design object change') );
    REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
      IF ( NOT pass1 ) THEN ESCAPE;
      END_IF;
      ctdoa_bag := QUERY( ctdoa <* change_to_design_object_assignment | 
                (pdr_bag[j] IN ctdoa.items) );
      REPEAT k := 1 to SIZEOF(ctdoa_bag) by 1;
        IF ( NOT pass1 ) THEN ESCAPE;
        END_IF;
        REPEAT l := 1 to SIZEOF(ctdoa_bag[k].items) by 1;
          IF EXISTS( ctdoa_bag[k].items[l] ) THEN
            IF ( ctdoa_bag[k].items[l] IN mdo_bag ) THEN
              pass1 := FALSE;
              ESCAPE;
            ELSE
              mdo_bag := mdo_bag + ctdoa_bag[k].items[l];
            END_IF;
          END_IF;
        END_REPEAT;
      END_REPEAT;
    END_REPEAT;
    REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
      IF ( NOT pass1 ) THEN ESCAPE;
      END_IF;
      ctdora_bag := 
         QUERY( ctdora <* change_to_design_object_request_assignment | 
                    (pdr_bag[j] IN ctdora.items) );
      REPEAT k := 1 to SIZEOF(ctdora_bag) by 1;
        IF ( NOT pass1 ) THEN ESCAPE;
        END_IF;
        REPEAT l := 1 to SIZEOF(ctdora_bag[k].items) by 1;
          IF EXISTS( ctdora_bag[k].items[l] ) THEN
            IF ( ctdora_bag[k].items[l] IN mdo_bag ) THEN
              pass1 := FALSE;
              ESCAPE;
            ELSE
              mdo_bag := mdo_bag + ctdora_bag[k].items[l];
            END_IF;
          END_IF;
        END_REPEAT;
      END_REPEAT;
    END_REPEAT;
  END_IF;
  IF ( pass2 ) THEN
    mdo_bag := [];
    pdr_bag := QUERY( pdr <* USEDIN(pd_bag[i], 
'DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') | 
   (pdr\product_definition_relationship.name = 'design object change') );
    REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
      IF ( NOT pass2 ) THEN ESCAPE;
      END_IF;
      cfdoa_bag := QUERY( cfdoa <* change_from_design_object_assignment | 
                                           (pdr_bag[j] IN cfdoa.items) );
      REPEAT k := 1 to SIZEOF(cfdoa_bag) by 1;
        IF ( NOT pass2 ) THEN ESCAPE;
        END_IF;
        REPEAT l := 1 to SIZEOF(cfdoa_bag[k].items) by 1;
          IF EXISTS( cfdoa_bag[k].items[l] ) THEN
            IF ( cfdoa_bag[k].items[l] IN mdo_bag ) THEN
              pass2 := FALSE;
              ESCAPE;
            ELSE
              mdo_bag := mdo_bag + cfdoa_bag[k].items[l];
            END_IF;
          END_IF;
        END_REPEAT;
      END_REPEAT;
    END_REPEAT;
    REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
      IF ( NOT pass2 ) THEN ESCAPE;
      END_IF;
      cfdora_bag := 
        QUERY( cfdora <* change_from_design_object_request_assignment | 
                                        (pdr_bag[j] IN cfdora.items) );
      REPEAT k := 1 to SIZEOF(cfdora_bag) by 1;
        IF ( NOT pass2 ) THEN ESCAPE;
        END_IF;
        REPEAT l := 1 to SIZEOF(cfdora_bag[k].items) by 1;
          IF EXISTS( cfdora_bag[k].items[l] ) THEN
            IF ( cfdora_bag[k].items[l] IN mdo_bag ) THEN
              pass2 := FALSE;
              ESCAPE;
            ELSE
              mdo_bag := mdo_bag + cfdora_bag[k].items[l];
            END_IF;
          END_IF;
        END_REPEAT;
      END_REPEAT;
    END_REPEAT;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass1;
  WR2: pass2;
END_RULE;

RULE delete_design_object_management_relationship_unique_constraint FOR
 ( delete_design_object_assignment, 
   delete_design_object_request_assignment );
LOCAL
  pdr_bag : BAG OF product_definition_relationship := [];
  pd_bag : BAG OF product_definition := [];
  ddoa_bag : BAG OF delete_design_object_assignment;
  ddora_bag : BAG OF delete_design_object_request_assignment;
  pass : BOOLEAN := TRUE;
  mdo_bag : BAG OF managed_design_object;
END_LOCAL;

REPEAT i := 1 to SIZEOF(delete_design_object_assignment) by 1;
  REPEAT j := 1 TO SIZEOF(delete_design_object_assignment[i].items) by 1;
    IF ( ('DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP' 
        IN TYPEOF(delete_design_object_assignment[i].items[j]))
AND (delete_design_object_assignment[i].items[j].name = 
                          'design object deletion') ) THEN
      IF EXISTS( delete_design_object_assignment[i].items[j].
                                      relating_product_definition )
                                                               THEN
        IF( NOT( delete_design_object_assignment[i].items[j].
                                          relating_product_definition 
                                                 IN pd_bag ) ) THEN
          pd_bag := pd_bag + 
                 delete_design_object_assignment[i].items[j].
                                           relating_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(delete_design_object_request_assignment) by 1;
  REPEAT j := 1 TO 
         SIZEOF(delete_design_object_request_assignment[i].items) by 1;
    IF ( ('DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP' 
         IN TYPEOF(delete_design_object_request_assignment[i].items[j]))
AND (delete_design_object_request_assignment[i].items[j].name = 
                                     'design object deletion') ) THEN
      IF EXISTS
       ( delete_design_object_request_assignment[i].items[j].
                                        relating_product_definition )
                                                            THEN
        IF( NOT
( delete_design_object_request_assignment[i].items[j].
                                         relating_product_definition 
                                              IN pd_bag ) ) THEN
          pd_bag := pd_bag + 
          delete_design_object_request_assignment[i].items[j].
                                           relating_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  mdo_bag := [];
  pdr_bag := QUERY( pdr <* USEDIN(pd_bag[i], 
'DESIGN_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') | 
                        (pdr\product_definition_relationship.name = 'design object deletion') );
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    ddoa_bag := QUERY( ddoa <* delete_design_object_assignment | 
                                   (pdr_bag[j] IN ddoa.items) );
    REPEAT k := 1 to SIZEOF(ddoa_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      REPEAT l := 1 to SIZEOF(ddoa_bag[k].items) by 1;
        IF EXISTS( ddoa_bag[k].items[l] ) THEN
          IF ( ddoa_bag[k].items[l] IN mdo_bag ) THEN
            pass := FALSE;
            ESCAPE;
          ELSE
            mdo_bag := mdo_bag + ddoa_bag[k].items[l];
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    ddora_bag := 
        QUERY( ddora <* delete_design_object_request_assignment | 
                                    (pdr_bag[j] IN ddora.items) );
    REPEAT k := 1 to SIZEOF(ddora_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      REPEAT l := 1 to SIZEOF(ddora_bag[k].items) by 1;
        IF EXISTS( ddora_bag[k].items[l] ) THEN
          IF ( ddora_bag[k].items[l] IN mdo_bag ) THEN
            pass := FALSE;
            ESCAPE;
          ELSE
            mdo_bag := mdo_bag + ddora_bag[k].items[l];
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
*)	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\design_specific_assignment_to_assembly_usage_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/02/04 15:22:03 budreckytej Exp $
   ISO TC184/SC4/WG12 N3391 - ISO/CD-TS 10303-1662 Design specific assignment to assembly usage view - EXPRESS MIM
*)


SCHEMA Design_specific_assignment_to_assembly_usage_view_mim;
	USE FROM Assembly_module_usage_view_mim;	-- ISO/TS 10303-1642
	USE FROM Assembly_module_with_interconnect_component_mim;	-- ISO/TS 10303-1643
	USE FROM Assembly_module_with_subassembly_mim;	-- ISO/TS 10303-1641
	USE FROM Component_feature_mim;	-- ISO/TS 10303-1657
	USE FROM Physical_unit_design_view_mim;	-- ISO/TS 10303-1728

RULE 
component_terminal_to_assembly_module_interface_terminal_assignment_unique_constraint
FOR
 ( shape_aspect_relationship );
LOCAL
  cttamta : BAG OF shape_aspect_relationship := QUERY( sar <*
shape_aspect_relationship | (sar\shape_aspect_relationship.name = 
              'component feature to physical usage view assignment') );
  pass : BOOLEAN := TRUE;
  amt_bag : BAG OF assembly_module_interface_terminal := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(cttamta) by 1;
  IF EXISTS( cttamta[i].relating_shape_aspect ) THEN
    IF ( 'DESIGN_SPECIFIC_ASSIGNMENT_TO_ASSEMBLY_USAGE_VIEW_MIM.' +
'ASSEMBLY_MODULE_INTERFACE_TERMINAL' IN TYPEOF(cttamta[i].relating_shape_aspect) ) 
    THEN
      IF ( cttamta[i].relating_shape_aspect IN amt_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        amt_bag := amt_bag + cttamta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE component_terminal_to_pca_terminal_assignment_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  cttamta : BAG OF shape_aspect_relationship := QUERY( sar <*
shape_aspect_relationship | (sar\shape_aspect_relationship.name = 
             'component feature to physical usage view assignment') );
  pass : BOOLEAN := TRUE;
  amt_bag : BAG OF assembly_module_terminal := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(cttamta) by 1;
  IF EXISTS( cttamta[i].relating_shape_aspect ) THEN
    IF ( ('DESIGN_SPECIFIC_ASSIGNMENT_TO_ASSEMBLY_USAGE_VIEW_MIM.' +
'SHAPE_ASPECT' IN TYPEOF(cttamta[i].relating_shape_aspect)) AND
(cttamta[i].relating_shape_aspect\shape_aspect.description = 'pca terminal') ) THEN
      IF ( cttamta[i].relating_shape_aspect IN amt_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        amt_bag := amt_bag + cttamta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;


END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\design_specific_assignment_to_interconnect_usage_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 09:50:31 liutkus Exp $
   ISO TC184/SC4/WG12 N3394 - ISO/CD-TS 10303-1663 Design specific assignment to interconnect usage view - EXPRESS MIM
*)


SCHEMA Design_specific_assignment_to_interconnect_usage_view_mim;
	USE FROM Fabrication_joint_mim;	-- ISO/TS 10303-1668
--	USE FROM Interconnect_module_usage_view_mim;	-- ISO/TS 10303-1686
--	USE FROM Land_mim;	-- ISO/TS 10303-1692
--	USE FROM Layered_interconnect_module_with_printed_component_design_mim;	-- ISO/TS 10303-1700

RULE component_terminal_to_interconnect_module_interface_terminal_assignment_unique_constraint
FOR
 ( shape_aspect_relationship );
LOCAL
  cttimta : BAG OF shape_aspect_relationship := QUERY( sar <*
shape_aspect_relationship | (sar\shape_aspect_relationship.name = 
          'component feature to physical usage view assignment') );
  pass : BOOLEAN := TRUE;
  imt_bag : BAG OF interconnect_module_interface_terminal := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(cttimta) by 1;
  IF EXISTS( cttimta[i].relating_shape_aspect ) THEN
    IF ( 'DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_MIM.' +
'INTERCONNECT_MODULE_INTERFACE_TERMINAL' IN 
                    TYPEOF(cttimta[i].relating_shape_aspect) ) THEN
      IF ( cttimta[i].relating_shape_aspect IN imt_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        imt_bag := imt_bag + cttimta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE component_terminal_to_interconnect_module_join_terminal_assignment_unique_constraint
FOR
 ( shape_aspect_relationship );
LOCAL
  cttimta : BAG OF shape_aspect_relationship := QUERY( sar <*
shape_aspect_relationship | (sar\shape_aspect_relationship.name = 
          'component feature to physical usage view assignment') );
  pass : BOOLEAN := TRUE;
  imt_bag : BAG OF interconnect_module_join_terminal := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(cttimta) by 1;
  IF EXISTS( cttimta[i].relating_shape_aspect ) THEN
    IF ( 'DESIGN_SPECIFIC_ASSIGNMENT_TO_INTERCONNECT_USAGE_VIEW_MIM.' +
'INTERCONNECT_MODULE_JOIN_TERMINAL' IN 
                    TYPEOF(cttimta[i].relating_shape_aspect) ) THEN
      IF ( cttimta[i].relating_shape_aspect IN imt_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        imt_bag := imt_bag + cttimta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\device_marking_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/04/08 18:15:28 liutkus Exp $
   ISO TC184/SC4/WG12 N3397 - ISO/CD-TS 10303-1664 Device marking - EXPRESS MIM
*)


SCHEMA Device_marking_mim;

	USE FROM Part_template_2d_shape_mim;	-- ISO/TS 10303-1716
	USE FROM Part_template_non_planar_shape_mim;	-- ISO/TS 10303-1719
	USE FROM Physical_unit_2d_shape_mim;	-- ISO/TS 10303-1726
	
	USE FROM Presentation_definition_schema(annotation_text_occurrence);

TYPE device_marking_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH 
     (representation);
END_TYPE;

TYPE device_marking_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_item WITH 
     (representation);
END_TYPE;

TYPE device_marking_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (representation);
END_TYPE;

RULE marking_constraint FOR ( representation );
WHERE
  WR1: SIZEOF(QUERY(rep <* representation |
       ((rep\representation.name = 'marking')
       AND (SIZEOF(QUERY(pdr <* USEDIN(rep,
       'DEVICE_MARKING_MIM.'
        + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('DEVICE_MARKING_MIM.'
        + 'SHAPE_ASPECT' IN TYPEOF(pdr.definition)))) > 0))
       AND NOT (SIZEOF(QUERY(place <* rep.items |
       (('DEVICE_MARKING_MIM.'
        + 'PLACEMENT' IN TYPEOF (place))
       AND (place\representation_item.name = 'marking location'))
       )) = 1)
       )) = 0;
END_RULE;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\dimension_tolerance_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.1 2005/03/17 07:25:04 liutkus Exp $
ISO TC184/SC4/WG12 N2874 - ISO/TS 10303-1050 Dimension tolerance - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1548
*) 


SCHEMA Dimension_tolerance_mim;

USE FROM Basic_curve_mim;

USE FROM Derived_shape_element_mim;    -- ISO/TS 10303-1130

USE FROM Document_assignment_mim;    -- ISO/TS 10303-1122

USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

USE FROM Extended_measure_representation_mim;    -- ISO/TS 10303-1106

USE FROM external_reference_schema   -- ISO 10303-41
  (external_source,
   externally_defined_item); 

USE FROM geometry_schema   -- ISO 10303-42
  (placement); 

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021

USE FROM Measure_representation_mim;    -- ISO/TS 10303-1118

USE FROM qualified_measure_schema   -- ISO 10303-45
  (descriptive_representation_item,
   measure_qualification,
   value_qualifier); 

USE FROM shape_aspect_definition_schema   -- ISO 10303-47
  (shape_aspect_deriving_relationship); 

USE FROM shape_dimension_schema;    -- ISO 10303-47

USE FROM Shape_property_assignment_mim;    -- ISO/TS 10303-1032

USE FROM shape_tolerance_schema   -- ISO 10303-47
  (limits_and_fits,
   plus_minus_tolerance,
   tolerance_method_definition,
   tolerance_value); 

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054


TYPE dimension_identification_item = SELECT BASED_ON identification_item WITH 
   (dimensional_size);
END_TYPE; 

TYPE dimension_tolerance_document_reference_item = SELECT BASED_ON document_reference_item WITH 
   (dimensional_size, 
    externally_defined_dimension_definition);
END_TYPE; 

ENTITY directed_dimensional_location
  SUBTYPE OF (dimensional_location);
END_ENTITY;

ENTITY externally_defined_dimension_definition
  SUBTYPE OF (dimensional_size, externally_defined_item);
WHERE
  WR1: (SELF\externally_defined_item.item_id = 'external size dimension') AND (SELF\externally_defined_item.source.source_id = 'external size dimension specification');
  WR2: 1 >= SIZEOF(QUERY ( adr <* USEDIN(SELF, 'DOCUMENT_ASSIGNMENT_MIM.APPLIED_DOCUMENT_REFERENCE.ITEMS')| (adr.assigned_document.description = 'external size dimension specification') ));
END_ENTITY;

END_SCHEMA;  -- Dimension_tolerance_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\document_and_version_identification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.12 2004/10/21 16:48:54 darla Exp $
 ISO TC184/SC4/WG12 N1187 - ISO/TS 10303-1121 Document and version identification - EXPRESS MIM
*)

SCHEMA Document_and_version_identification_mim;

USE FROM Product_identification_mim;    -- ISO/TS 10303-1017

USE FROM Product_version_mim;    -- ISO/TS 10303-1018

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\document_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.15 2004/10/28 18:49:44 darla Exp $
 ISO TC184/SC4/WG12 N2959 - ISO/TS 10303-1122 Document assignment - EXPRESS MIM
*)



SCHEMA Document_assignment_mim;

USE FROM Document_and_version_identification_mim;    -- ISO/TS 10303-1121

USE FROM Document_definition_mim;    -- ISO/TS 10303-1123

USE FROM document_schema   -- ISO 10303-41
  (document_product_association); 

USE FROM File_identification_mim;    -- ISO/TS 10303-1127

USE FROM management_resources_schema   -- ISO 10303-41
  (document_reference,
   document_usage_constraint_assignment); 


TYPE document_reference_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY applied_document_reference
  SUBTYPE OF (document_reference);
  items : SET[1:?] OF document_reference_item;
END_ENTITY;

ENTITY applied_document_usage_constraint_assignment
  SUBTYPE OF (document_usage_constraint_assignment);
  items : SET[1:?] OF document_reference_item;
END_ENTITY;

ENTITY document_product_equivalence
  SUBTYPE OF (document_product_association);
WHERE
  WR1: SELF\document_product_association.name = 'equivalence';
  WR2: NOT('DOCUMENT_ASSIGNMENT_MIM.PRODUCT' IN TYPEOF(SELF\document_product_association.related_product)) OR ((SELF\document_product_association.relating_document.kind. product_data_type = 'configuration controlled document') AND (SIZEOF( QUERY( prpc <* USEDIN(SELF\document_product_association.related_product,'PRODUCT_DEFINITION_SCHEMA.' + 'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document' )) = 1));
  WR3: NOT('DOCUMENT_ASSIGNMENT_MIM.PRODUCT_DEFINITION_FORMATION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document version') AND (SIZEOF( QUERY( prpc <* USEDIN(SELF.related_product\product_definition_formation.of_product, 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document')) = 1));
  WR4: NOT('DOCUMENT_ASSIGNMENT_MIM.PRODUCT_DEFINITION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document definition') AND (SIZEOF( QUERY( prpc <* USEDIN(SELF\document_product_association.related_product\product_definition.formation.of_product, 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document' )) = 1));
END_ENTITY;

END_SCHEMA;  -- Document_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\document_definition_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.19 2004/10/28 18:51:31 darla Exp $
 ISO TC184/SC4/WG12 N2961 - ISO/TS 10303-1123 Document definition - EXPRESS MIM
*) 


SCHEMA Document_definition_mim;

USE FROM Document_and_version_identification_mim;    -- ISO/TS 10303-1121

USE FROM External_item_identification_assignment_mim;    -- ISO/TS 10303-1128

USE FROM File_identification_mim;    -- ISO/TS 10303-1127

USE FROM product_definition_schema   -- ISO 10303-41
  (product_definition,
   product_definition_with_associated_documents); 

USE FROM Product_view_definition_mim;    -- ISO/TS 10303-1019


TYPE document_location_select = SELECT BASED_ON external_identification_item WITH 
   (product_definition);
END_TYPE; 

END_SCHEMA;  -- Document_definition_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\document_management_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.10 2004/11/19 21:37:35 robbod Exp $
 ISO TC184/SC4/WG12 N3038 - ISO/TS 10303-1290 Document management - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2331
*) 


SCHEMA Document_management_mim;

USE FROM Alias_identification_mim;    -- ISO/TS 10303-1025

USE FROM basic_attribute_schema   -- ISO 10303-41
  (object_role); 

USE FROM Contract_mim;    -- ISO/TS 10303-1062

USE FROM Document_and_version_identification_mim;    -- ISO/TS 10303-1121

USE FROM Document_assignment_mim;    -- ISO/TS 10303-1122

USE FROM Document_definition_mim;    -- ISO/TS 10303-1123

USE FROM Document_properties_mim;    -- ISO/TS 10303-1126

USE FROM document_schema   -- ISO 10303-41
  (document_relationship); 

USE FROM Document_structure_mim;    -- ISO/TS 10303-1124

USE FROM External_item_identification_assignment_mim;    -- ISO/TS 10303-1128

USE FROM external_reference_schema   -- ISO 10303-41
  (external_source); 

USE FROM File_identification_mim;    -- ISO/TS 10303-1127

USE FROM Management_resource_information_mim;    -- ISO/TS 10303-1288

USE FROM management_resources_schema   -- ISO 10303-41
  (document_usage_role); 

USE FROM Product_categorization_mim;    -- ISO/TS 10303-1016

USE FROM product_definition_schema   -- ISO 10303-41
  (product,
   product_category,
   product_definition,
   product_definition_formation,
   product_definition_relationship); 

USE FROM Security_classification_mim;    -- ISO/TS 10303-1015


TYPE dm_aliasable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON aliasable_item WITH 
   (document_file, 
    product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

TYPE dm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_approval_item WITH 
   (product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE dm_attribute_language_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_attribute_language_item WITH 
   (applied_document_reference, 
    applied_document_usage_constraint_assignment, 
    applied_external_identification_assignment, 
    document_relationship, 
    document_usage_role, 
    external_source, 
    object_role, 
    product, 
    product_category, 
    product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE dm_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH 
   (product_definition_formation);
END_TYPE; 

TYPE dm_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_date_and_time_item WITH 
   (document_file, 
    product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE dm_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_date_item WITH 
   (document_file, 
    product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE dm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_identification_item WITH 
   (document_file, 
    product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

TYPE dm_multi_language_attribute_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_multi_language_attribute_item WITH 
   (applied_document_reference, 
    applied_document_usage_constraint_assignment, 
    applied_external_identification_assignment, 
    document_relationship, 
    document_usage_role, 
    external_source, 
    object_role, 
    product, 
    product_category, 
    product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE dm_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_organization_item WITH 
   (document_file, 
    product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

TYPE dm_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_person_and_organization_item WITH 
   (document_file, 
    product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

TYPE dm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH 
   (document_file, 
    product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

END_SCHEMA;  -- Document_management_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\document_properties_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.11 2004/10/21 17:23:23 darla Exp $
 ISO TC184/SC4/WG12 N1202 - ISO/TS 10303-1126 Document properties - EXPRESS MIM
*)



SCHEMA Document_properties_mim;

USE FROM Document_definition_mim;    -- ISO/TS 10303-1123

USE FROM File_identification_mim;

USE FROM Foundation_representation_mim;

USE FROM Measure_representation_mim;    -- ISO/TS 10303-1118

USE FROM Property_assignment_mim;

USE FROM product_property_definition_schema   -- ISO 10303-41
  (characterized_product_definition); 

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\document_structure_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.9 2004/10/21 17:26:29 darla Exp $
 ISO TC184/SC4/WG12 N1196 - ISO/TS 10303-1124 Document structure - EXPRESS MIM
*)



SCHEMA Document_structure_mim;
USE FROM Document_definition_mim; -- ISO/CD TS 10303-1123
USE FROM File_identification_mim; -- ISO/CD TS 10303-1127
USE FROM document_schema (document_relationship); -- ISO 10303-41
USE FROM product_definition_schema -- ISO 10303-41
	(product_definition_formation_relationship,
         product_definition_relationship);
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\effectivity_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.7 2004/10/21 17:46:30 darla Exp $
 ISO TC184/SC4/WG12 N1169 - ISO/TS 10303-1057 Effectivity - EXPRESS MIM
*)
  
SCHEMA Effectivity_mim;

USE FROM Time_interval_mim; -- ISO 10303-1065
USE FROM Value_with_unit_mim ; -- ISO 10303-1054

USE FROM effectivity_schema -- ISO 10303-41
  (	dated_effectivity,
	effectivity,
   	effectivity_relationship,
	lot_effectivity,
   	serial_numbered_effectivity,
      time_interval_based_effectivity);

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\effectivity_application_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.8 2004/11/15 21:22:47 thendrix Exp $
ISO TC184/SC4/WG12 N3224 - ISO/TS 10303-1059 Effectivity application - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1175
*) 


SCHEMA Effectivity_application_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (object_role,
   role_association,
   role_select); 

USE FROM Effectivity_mim;    -- ISO/TS 10303-1057

USE FROM management_resources_schema   -- ISO 10303-41
  (effectivity_assignment); 


TYPE effectivity_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY applied_effectivity_assignment
  SUBTYPE OF (effectivity_assignment);
  items : SET[1:?] OF effectivity_item;
END_ENTITY;

END_SCHEMA;  -- Effectivity_application_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\electrical_network_definition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/02/04 15:23:35 budreckytej Exp $
   ISO TC184/SC4/WG12 N3337 - ISO/CD-TS 10303-1665 Electrical network definition - EXPRESS MIM
*)
SCHEMA Electrical_network_definition_mim;

	USE FROM Network_functional_design_view_mim;	-- ISO/TS 10303-1704

ENTITY electrical_network
  SUBTYPE OF (functional_unit);
END_ENTITY;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\elemental_geometric_shape_mim.exp
   ------------------------------------------------------------
*)

(* 
$Id: mim.exp,v 1.1 2005/02/04 07:18:09 liutkus Exp $
ISO/TC184/SC4 WG12N2103 - ISO/TS 10303-1004 Elemental geometric shape - EXPRESS MIM *)
   
SCHEMA Elemental_geometric_shape_mim;
  
USE FROM Foundation_representation_mim;

USE FROM Identification_assignment_mim; -- ISO 10303-1021

USE FROM Value_with_unit_mim; -- ISO 10303-1054

USE FROM qualified_measure_schema
	(measure_representation_item); -- ISO 10303-45

USE FROM geometry_schema -- ISO 10303-42
      (cartesian_point,
       direction,
       axis2_placement_2d,
       axis2_placement_3d,
       geometric_representation_context,
       geometric_representation_item,
       cartesian_transformation_operator_2d,
       cartesian_transformation_operator_3d);

USE FROM product_property_representation_schema -- ISO 10303-41
      (shape_representation,
  	 shape_representation_relationship);

USE FROM representation_schema -- ISO 10303-43
      (item_defined_transformation,
	value_representation_item);

TYPE representation_identification_item = SELECT BASED_ON identification_item WITH 
  (shape_representation);
END_TYPE; 
 
TYPE representation_version_item = SELECT BASED_ON versionable_item WITH 
  (shape_representation);
END_TYPE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\encoded_text_representation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.2 2003/11/21 14:01:23 mikeward Exp $
  ISO TC184/SC4/WG12 N - ISO/CD-TS 10303-xxxx Encoded text representation - EXPRESS MIM
*) 


SCHEMA Encoded_text_representation_mim; 

USE FROM Class_mim;    -- ISO/TS 10303-1070

USE FROM Classification_assignment_mim;    -- ISO/TS 10303-1114

USE FROM classification_schema   -- ISO/DIS 10303-54
  (class); 

USE FROM Document_definition_mim;    -- ISO/TS 10303-1123

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021

USE FROM product_definition_schema   -- ISO 10303-41
  (product_definition); 

USE FROM qualified_measure_schema   -- ISO 10303-45
  (descriptive_representation_item); 

USE FROM representation_schema   -- ISO 10303-43
  (representation_item,
   representation_item_relationship); 


TYPE encoded_text_representation_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
   (descriptive_representation_item, 
    encoded_text_representation_item, 
    product_definition, 
    uniform_resource_indicator_representation_item);
END_TYPE; 

TYPE encoded_text_representation_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (encoded_text_format);
END_TYPE; 

ENTITY encoded_text_format
  SUBTYPE OF (class);
END_ENTITY;

ENTITY encoded_text_representation_item
  SUBTYPE OF (descriptive_representation_item);
END_ENTITY;

ENTITY string_representation_item_composition
  SUBTYPE OF (string_representation_item_relationship);
END_ENTITY;

ENTITY string_representation_item_relationship
  SUBTYPE OF (representation_item_relationship);
END_ENTITY;

ENTITY string_representation_item_sequence
  SUBTYPE OF (string_representation_item_relationship);
END_ENTITY;

ENTITY template_specification
  SUBTYPE OF (class);
END_ENTITY;

ENTITY uniform_resource_indicator_representation_item
  SUBTYPE OF (representation_item);
END_ENTITY;

END_SCHEMA;  -- Encoded_text_representation_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\event_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.12 2004/10/21 17:51:16 darla Exp $
 ISO TC184/SC4/WG12 N2115 - ISO/TS 10303-1064 Event - EXPRESS MIM
*)

SCHEMA Event_mim; 

USE FROM Date_time_assignment_mim;    -- ISO/TS 10303-1014

USE FROM Date_time_mim;    -- ISO/TS 10303-1010

USE FROM date_time_schema   -- ISO 10303-41
  (event_occurrence,
   event_occurrence_relationship,
   relative_event_occurrence); 

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054


TYPE event_occurrence_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_and_time_item WITH 
   (event_occurrence);
END_TYPE; 

TYPE event_occurrence_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_item WITH 
   (event_occurrence);
END_TYPE; 

END_SCHEMA;  -- Event_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\event_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.4 2004/10/21 17:52:41 darla Exp $
 ISO TC184/SC4/WG12 N2117 - ISO/TS 10303-1364 Event assignment - EXPRESS MIM
*)



SCHEMA Event_assignment_mim; 

USE FROM Event_mim;    -- ISO/TS 10303-1064

USE FROM management_resources_schema   -- ISO 10303-41
  (event_occurrence_assignment); 


TYPE event_occurrence_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY applied_event_occurrence_assignment
  SUBTYPE OF (event_occurrence_assignment);
  items : SET[1:?] OF event_occurrence_item;
END_ENTITY;

END_SCHEMA;  -- Event_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\extended_elemental_geometric_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/02/10 13:04:03 liutkus Exp $
   ISO TC184/SC4/WG12 N3673 - ISO/CD-TS 10303-1667 Extended elemental geometric shape - EXPRESS MIM
*)


SCHEMA Extended_elemental_geometric_shape_mim;
	USE FROM Basic_geometry_mim;	-- ISO/TS 10303-1652
	USE FROM Shape_property_assignment_mim; -- ISO/TS 10303-1032
	
	USE FROM Representation_schema(
		mapped_item,
		representation_item_relationship,
		representation_map,
		representation_relationship_with_transformation,
		transformation);
		
	USE FROM Geometry_schema(
		vector);	

  ENTITY definitional_representation_relationship
    SUBTYPE OF (representation_relationship);
  END_ENTITY;  
	
ENTITY shape_item_relationship
  SUBTYPE OF (representation_item, representation_item_relationship);
UNIQUE
  UR1: SELF\representation_item_relationship.relating_representation_item, 
       SELF\representation_item_relationship.related_representation_item;
WHERE
  WR1: SELF\representation_item_relationship.relating_representation_item :<>: 
       SELF\representation_item_relationship.related_representation_item;
  WR2: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation_item ||
       SELF\representation_item_relationship || 
       SELF\shape_item_relationship))) = 0;
END_ENTITY; 

RULE feature_shape_definition_constraint FOR (
         shape_representation);
WHERE
  WR1: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'zone shape')
       AND (sr.context_of_items.coordinate_space_dimension = 3)
       AND NOT('EXTENDED_ELEMENTAL_GEOMETRIC_SHAPE_MIM.'
       + 'MANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION' IN TYPEOF(sr)))) = 0;
END_RULE;
	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\extended_geometric_tolerance_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.23 2005/04/08 06:31:38 budreckytej Exp $
   ISO TC184/SC4/WG12 N3400 - ISO/CD-TS 10303-1666 Extended geometric tolerance - EXPRESS MIM
*)


SCHEMA Extended_geometric_tolerance_mim;
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740
	USE FROM Default_tolerance_mim;	-- ISO/TS 10303-1052
	USE FROM Dimension_tolerance_mim;	-- ISO/TS 10303-1050
	USE FROM Geometric_tolerance_mim;	-- ISO/TS 10303-1051
	USE FROM Layered_3d_shape_mim;	-- ISO/TS 10303-1694
	
	USE FROM Application_context_schema(application_context_element);
	USE FROM Material_property_definition_schema(property_definition_relationship);
	USE FROM Shape_tolerance_schema
		(runout_zone_orientation,
		tolerance_zone_form);

TYPE egt_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
   (statistical_geometric_tolerance,
   statistical_dimensional_size,
   statistical_dimensional_location,
   property_definition);
END_TYPE; 

TYPE egt_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
   (shape_dimension_representation);
END_TYPE; 
	
TYPE egt_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
   (representation);
END_TYPE; 
	
ENTITY auxiliary_characteristic_dimension_representation
 SUBTYPE OF (dimensional_characteristic_representation);
END_ENTITY;

ENTITY datum_difference
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PHYSICAL_UNIT_DATUM' IN TYPEOF
       (SELF\shape_aspect_relationship.relating_shape_aspect)) AND
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PHYSICAL_UNIT_DATUM' IN TYPEOF
       (SELF\shape_aspect_relationship.related_shape_aspect));
  WR2: SELF\shape_aspect.name = SELF\shape_aspect_relationship.name;
  WR3: SELF\shape_aspect.description = SELF\shape_aspect_relationship.
       description;
  WR4: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR5: SIZEOF (TYPEOF(SELF) - (TYPEOF(SELF\shape_aspect || 
       SELF\shape_aspect_relationship || SELF\datum_difference))) = 0;
END_ENTITY;

ENTITY datum_difference_based_characteristic
  SUBTYPE OF (representation_item);
WHERE
  WR1: SIZEOF(QUERY ( r <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
       'REPRESENTATION.ITEMS') | (SIZEOF(QUERY (prd2 <*
        QUERY ( prd <* USEDIN(r,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 
       ((('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' 
       + 'PROPERTY_DEFINITION_REPRESENTATION') IN TYPEOF(prd)) AND 
       (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
        'PROPERTY_DEFINITION') IN TYPEOF(prd\
       property_definition_representation.definition))) ) |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'DATUM_DIFFERENCE' IN
      TYPEOF(prd2\property_definition_representation.definition\
                               property_definition.definition))))
            = 1) )) 
               = 1;
END_ENTITY;

(** Questionable entity - nothing directly mapps to it from ARM *)
ENTITY dimensional_size_property
  SUBTYPE OF (dimensional_size, property_definition);
END_ENTITY;

ENTITY edge_segment_vertex
  SUBTYPE OF (physical_unit_datum);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\physical_unit_datum ||
       SELF\edge_segment_vertex)) = 0;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
        pd\property_definition.description = 'shape element characterization'
       )) = 1;
  WR3: SELF\shape_aspect.of_shape\property_definition.definition.
       frame_of_reference\application_context_element.name
       IN ['physical design occurrence', 'physical design usage'];
  WR4: SELF\shape_aspect.name = 'single datum';
END_ENTITY;

ENTITY geometric_tolerance_group
  SUBTYPE OF (property_definition);
WHERE
    WR1: SELF\property_definition.description
         IN ['separate requirement', 'simultaneous requirement'];
(* removed because of the geometric_tolerance_with_specified_datum_system          
    WR2: (NOT (SELF\property_definition.description = 
          'separate requirement'))
         OR (SIZEOF (QUERY(pdr <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM' 
         IN TYPEOF(pdr.related_property_definition)) AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance')
         )) >=1);
*)         
    WR3: (NOT (SELF\property_definition.description = 
        'simultaneous requirement')) 
         OR (SIZEOF (QUERY(pdr <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE' 
         IN TYPEOF(pdr.related_property_definition)) AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance'))
         )) >=2);
    WR4: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'LINEAR_PROFILE_TOLERANCE' IN 
          TYPEOF(pdr.related_property_definition)) AND
         (pdr.related_property_definition\property_definition.name = 
         'linear profile refinement') AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance') )
         )) =0);
    WR5: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'SURFACE_PROFILE_TOLERANCE' IN 
         TYPEOF(pdr.related_property_definition)) AND
         (pdr.related_property_definition\property_definition.name = 
         'surface profile refinement') AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance') )
         )) =0);
    WR6: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'POSITION_TOLERANCE' IN 
         TYPEOF(pdr.related_property_definition)) AND
         (pdr.related_property_definition\property_definition.name = 
         'feature relating position') AND
         (pdr\property_definition_relationship.name = 'group geometric tolerance') )
         )) =0);
    WR7: (NOT (SELF\property_definition.description = 
         'separate requirement')) 
         OR (SIZEOF (QUERY(pdr <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
         (pdr\property_definition_relationship.name = 'group geometric tolerance') AND
      (SIZEOF(['EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'LINEAR_PROFILE_TOLERANCE',
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
         'SURFACE_PROFILE_TOLERANCE',
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
     'POSITION_TOLERANCE'] * TYPEOF(pdr.related_property_definition)) > 0)
         )) =0);
END_ENTITY;

ENTITY linear_profile_tolerance
  SUBTYPE OF (physical_unit_geometric_tolerance);
WHERE
  WR1: ( NOT( SELF\geometric_tolerance.name = 
        'linear profile refinement')) OR
       ( SIZEOF (QUERY( gtr <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
        TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control')
       AND ((gtr.relating_geometric_tolerance\geometric_tolerance.name = 
       'linear profile locating')
       OR (gtr.relating_geometric_tolerance\geometric_tolerance.name = 
       'linear profile refinement')))
       )) = 1);
  WR2: ( NOT(SELF\geometric_tolerance.name = 'linear profile locating')) OR
       ( SIZEOF( QUERY( gtr <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
       TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr.relating_geometric_tolerance\geometric_tolerance.name = 
       'linear profile refinement'))
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control'))) = 1);
(* removed because of the geometric_tolerance_with_specified_datum_system                 
  WR3: ( NOT( ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM' IN TYPEOF(SELF))
       AND ( SELF\geometric_tolerance.name = 
       'linear profile refinement'))) OR
       ( SIZEOF( QUERY( gtr <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
       TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr.relating_geometric_tolerance\geometric_tolerance.name = 
      'linear profile refinement')
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control')
       )) = 0);
*)       
  WR4: ( NOT( SELF\geometric_tolerance.name = 
       'linear profile refinement')) OR
       ( SIZEOF (QUERY( gtr <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATING_GEOMETRIC_TOLERANCE') |
       (('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'LINEAR_PROFILE_TOLERANCE' IN 
       TYPEOF(gtr.relating_geometric_tolerance))
       AND (gtr.related_geometric_tolerance\geometric_tolerance.name = 
       'linear profile refinement')
       AND (gtr\geometric_tolerance_relationship.name = 'linear profile refining control'))
       )) <= 1);
  WR5: NOT('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF));
END_ENTITY;

ENTITY opposing_boundary_dimensional_size
  SUBTYPE OF (dimensional_size);
WHERE
    WR1: SELF\dimensional_size.name  IN ['angular', 'linear'];
END_ENTITY;

ENTITY physical_unit_datum
  SUPERTYPE OF (edge_segment_vertex)
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: SELF\shape_aspect.description IN ['axis', 'plane', 'point', ''];
    WR2: SELF\shape_aspect.product_definitional = False;
    WR3: SELF\shape_aspect.name IN ['single datum', 'common datum', ''];
    WR4: (NOT (SELF\shape_aspect.name = 'common datum')) OR
         (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum feature usage in datum system') AND
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'DATUM_SYSTEM' IN TYPEOF(SAR)))) >= 1);
    WR5: (NOT (SELF\shape_aspect.name = 'common datum')) OR
         (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum feature usage in common datum') AND
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'DATUM_SYSTEM' IN TYPEOF(SAR)))) >= 2);
    WR6: (NOT ((SELF\shape_aspect.description = 'axis') AND
         (SELF\shape_aspect.name IN ['common datum', 'single datum']))) OR
         (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         NOT(sar\shape_aspect_relationship.name = 'reference axis') AND
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'DATUM_REFERENCE_FRAME' IN TYPEOF(SAR)))) = 1);
    WR7: (NOT ((SELF\shape_aspect.description = 'plane') AND
         (SELF\shape_aspect.name IN ['common datum', 'single datum']))) OR
         (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         NOT(sar\shape_aspect_relationship.name = 'reference plane') AND
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'DATUM_REFERENCE_FRAME' IN TYPEOF(SAR)))) = 1);
    WR8: (NOT ((SELF\shape_aspect.description = 'point') AND
         (SELF\shape_aspect.name IN ['common datum', 'single datum']))) OR
         (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         NOT(sar\shape_aspect_relationship.name = 'reference origin') AND
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'DATUM_REFERENCE_FRAME' IN TYPEOF(SAR)))) = 1);
    WR9: (NOT (SELF\shape_aspect.name = 'single datum')) OR
         (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum usage in datum system') AND
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'DATUM_SYSTEM' IN TYPEOF(SAR)))) >= 1);
   WR10: (NOT (SELF\shape_aspect.name = 'single datum')) OR
         (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         (sar\shape_aspect_relationship.name = 'datum feature usage in single datum') AND
         (TRUE))) <= 1);
   WR11: NOT ((SELF\shape_aspect.name IN [''])
         AND (SELF\shape_aspect.description IN ['']));
   WR12: (NOT(SELF\shape_aspect.description = 'plane')) OR
         (SIZEOF(QUERY ( pd <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'PROPERTY_DEFINITION.DEFINITION') |
         pd\property_definition.description = 'datum direction property')) <= 2);
END_ENTITY;

ENTITY physical_unit_datum_feature
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: (SIZEOF(QUERY ( pd <* USEDIN(SELF,
             'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
             'PROPERTY_DEFINITION.' + 'DEFINITION') | 
             (pd\property_definition.description = 'datum feature identification')))) = 1;
    WR2: (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name IN ['datum feature usage in common datum',
         'datum feature usage in single datum'])) >= 1);
    WR3: (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name = 'datum feature usage in single datum')) <= 1);
END_ENTITY;

ENTITY physical_unit_datum_target_set
  SUBTYPE OF (physical_unit_datum_feature);
WHERE
    WR1: (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name = 'datum target usage')) >= 1);
    WR2: (SIZEOF (QUERY ( sar <* USEDIN(SELF,
         'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
         sar\shape_aspect_relationship.name = 'constituent')) = 0);
END_ENTITY;

ENTITY physical_unit_geometric_tolerance
  SUBTYPE OF (geometric_tolerance, property_definition);
WHERE
    WR1: SELF\geometric_tolerance.name = SELF\property_definition.name;
    WR2: SELF\geometric_tolerance.toleranced_shape_aspect
         = SELF\property_definition.definition;
(* removed because of the geometric_tolerance_with_specified_datum_system                   
    WR3: (NOT (SIZEOF([
              'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
              'GEOMETRIC_TOLERANCE_WITH_SPECIFIED_DATUM_SYSTEM',
              'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
              'LINEAR_PROFILE_TOLERANCE',
              'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
              'SURFACE_PROFILE_TOLERANCE',
              'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
              'POSITION_TOLERANCE'] * TYPEOF(SELF)) = 0))
         OR (SELF\geometric_tolerance.name IN ['circularity',
             'cylindricity', 'flatness', 'straightness']);
*)             
    WR4: (NOT (SELF\geometric_tolerance.name = 'circularity')) OR
         (NOT ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF)));
    WR5: (NOT (SELF\geometric_tolerance.name = 'cylindricity')) OR
         (NOT ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
             'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF)));
    WR6: (NOT (SELF\geometric_tolerance.name = 'flatness')) OR
         (NOT ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
         'MODIFIED_GEOMETRIC_TOLERANCE' IN TYPEOF(SELF)));
    WR7: (SIZEOF (QUERY (pugt <* QUERY ( sar <* USEDIN(SELF,
          'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' + 
          'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
          sar\shape_aspect_relationship.name = 'group geometric tolerance') | 
          pugt.relating_shape_aspect\shape_aspect.description = 
          'simultaneous requirement')) <= 1);
END_ENTITY;

ENTITY positional_boundary
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN 
    ['dimension related positional boundary',
  'profile related positional boundary'];

  WR2: SELF\shape_aspect.product_definitional = False;

  WR3: (NOT(SELF\shape_aspect.description = 
           'dimension related positional boundary'))
       OR (SIZEOF(QUERY(sar <* USEDIN(SELF, 
          'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
             'POSITIONAL_BOUNDARY_MEMBER' IN 
               TYPEOF(sar.related_shape_aspect))
            AND (sar\shape_aspect_relationship.name = 'boundary member'))) >= 1);
(* invalid csa
  WR4: (NOT(SELF\shape_aspect.description = 
         'dimension related positional boundary'))
       OR (SIZEOF(QUERY(sar <*USEDIN(SELF, 
          'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | (sar.related_shape_aspect.product_definitional = True) AND
            (sar\shape_aspect_relationship.name = 'constrained feature'))) +
           SIZEOF(QUERY(sar <*USEDIN(SELF, 
          'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'PART_TEMPLATE_DEFINITION' IN TYPEOF(sar.related_shape_aspect))
            AND (sar\shape_aspect_relationship.name = 'constrained feature'))
           ) = 1);     
*)
  WR5: (NOT(SELF\shape_aspect.description = 
              'dimension related positional boundary'))
       OR (SIZEOF(QUERY(pd <* USEDIN(SELF,
          'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'PROPERTY_DEFINITION.DEFINITION')        
          | (pd\property_definition.description = 
                'dimension related positional boundary property'))) = 1);

  WR6: (NOT(SELF\shape_aspect.description = 
                  'profile related positional boundary'))
       OR (SIZEOF(QUERY(pd <* USEDIN(SELF,
          'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'PROPERTY_DEFINITION.DEFINITION')        
          | (pd\property_definition.description = 
                  'profile related positional boundary property'))) = 1);
   
  WR7: (NOT(SELF\shape_aspect.description = 
                     'profile related positional boundary'))
       OR (SIZEOF(QUERY(sar <* USEDIN(SELF, 
          'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') 
          | ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'POSITIONAL_BOUNDARY_MEMBER' IN TYPEOF(sar.related_shape_aspect))
            AND (sar\shape_aspect_relationship.name = 
               'positional boundary and profile boundary member'))) = 1);
END_ENTITY;

ENTITY positional_boundary_member
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.product_definitional = False;

  WR2: SIZEOF(QUERY(pd <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION')        
       | (pd\property_definition.description = 'positional boundary member property'))
       ) = 1;
  WR3: SIZEOF(QUERY(sar <* USEDIN(SELF, 
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') 
       | (sar\shape_aspect_relationship.name = 'boundary member') AND
         ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
          'POSITIONAL_BOUNDARY' IN TYPEOF(sar.relating_shape_aspect))
         AND (sar.relating_shape_aspect\shape_aspect.description =
         'dimension related positional boundary'))) = 1;
END_ENTITY;

ENTITY statistical_dimensional_location
 SUBTYPE OF (dimensional_location);
END_ENTITY;

ENTITY statistical_dimensional_size
 SUBTYPE OF (dimensional_size_property);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 'substitutable dimension'))) 
       <= 1))) <= 1;       
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 
        'dimensional tolerance statistical control requirement')))
       <= 1))) <= 1;       
  WR3: (NOT(SIZEOF (QUERY (pd <* USEDIN (SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 'substitutable dimension'))) 
       <= 1))) <= 1))
       OR (NOT(SIZEOF (QUERY (pd <* USEDIN (SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition)) AND
       (NOT('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'STATISTICAL_DIMENSIONAL_SIZE' IN 
       TYPEOF (pdr.related_property_definition))) AND
       (pdr\property_definition_relationship.name = 'substitutable dimension'))) 
       <= 1))) <= 1));     
END_ENTITY;

ENTITY statistical_geometric_tolerance
  SUBTYPE OF (physical_unit_geometric_tolerance);
WHERE
  WR1: SIZEOF(QUERY(gtr <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') | 
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE' IN
       TYPEOF(gtr.relating_geometric_tolerance)) AND
       (gtr\geometric_tolerance_relationship.name = 'substitutable geometric tolerance')
       )) <= 1;
  WR2: SIZEOF(QUERY(pdr <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') | 
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF(pdr.related_property_definition)) AND
       (pdr\property_definition_relationship.name = 'geometric tolerance statistical control requirement')
       )) = 1;
  WR3: SIZEOF(QUERY(gtr <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'GEOMETRIC_TOLERANCE_RELATIONSHIP.RELATED_GEOMETRIC_TOLERANCE') | 
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'STATISTICAL_GEOMETRIC_TOLERANCE' IN
       TYPEOF(gtr.relating_geometric_tolerance)) AND
       (gtr\geometric_tolerance_relationship.name = 'substitutable geometric tolerance')
       )) <= 0;
END_ENTITY;

ENTITY tolerance_zone_boundary
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: (NOT(SELF\shape_aspect.description = 'conical'))
       OR (NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
                'TOLERANCE_ZONE_EXPLICIT_OPPOSING_BOUNDARY_SET'
                IN TYPEOF(SELF))
           OR('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
               'TOLERANCE_ZONE_IMPLICIT_OPPOSING_BOUNDARY_SET'
               IN TYPEOF(SELF))));
  WR2: (NOT(SELF\shape_aspect.description = 
                 'circular or cylindrical or spherical'))
       OR (NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
                'TOLERANCE_ZONE_EXPLICIT_OPPOSING_BOUNDARY_SET'
                IN TYPEOF(SELF))
           OR('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
               'TOLERANCE_ZONE_IMPLICIT_OPPOSING_BOUNDARY_SET'
               IN TYPEOF(SELF))));
  WR3: SELF\shape_aspect.product_definitional = False;
  WR4: NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
           'TOLERANCE_ZONE_EXPLICIT_OPPOSING_BOUNDARY_SET'
           IN TYPEOF(SELF))
       AND ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
           'TOLERANCE_ZONE_IMPLICIT_OPPOSING_BOUNDARY_SET'
           IN TYPEOF(SELF)));
    WR5: SIZEOF(QUERY(pd <* USEDIN(SELF,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') | (pd\property_definition.description = 
       'boundary zone definition with specified size') OR 
       (pd\property_definition.description = 'conical tolerance zone boundary')
       )) = 1;
  WR6: SIZEOF(USEDIN(SELF, 
            'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'TOLERANCE_ZONE_DEFINITION.BOUNDARIES')) = 1;
END_ENTITY;

ENTITY tolerance_zone_explicit_opposing_boundary_set
  SUBTYPE OF (tolerance_zone_boundary);
END_ENTITY;

ENTITY tolerance_zone_implicit_opposing_boundary_set
  SUBTYPE OF (tolerance_zone_boundary);
END_ENTITY;

ENTITY viewing_plane
  SUBTYPE OF (shape_aspect);
  WHERE
    WR1: SELF\shape_aspect.description = 'affected plane';
    WR2: (SIZEOF(QUERY ( pd <* USEDIN (SELF,
             'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
             'PROPERTY_DEFINITION.' + 'DEFINITION') | (pd\property_definition.description = 
             'viewing plane property')))) =1;
    WR3: NOT SELF\shape_aspect.product_definitional;
END_ENTITY;

RULE boundary_size_characteristic_constraint FOR
  (representation);
WHERE
  WR1: SIZEOF(QUERY(rep <* representation |
       ((rep\representation.name = 'diametrical boundary size')
        OR (rep\representation.name = 'opposing boundary set size'))
       AND (NOT(SIZEOF(QUERY(lmwu <* rep.items |
       (lmwu\representation_item.name = 'tolerance value'))) = 1)))) = 0;
END_RULE;

RULE directed_axis_constraint FOR
  (derived_shape_aspect);
WHERE
  WR1: SIZEOF(QUERY(dsa <* derived_shape_aspect |
       (dsa\shape_aspect.description = 'directed axis')
       AND NOT(SIZEOF(QUERY(sar <* USEDIN(dsa,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'derived axis')
       AND ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'CENTRE_OF_SYMMETRY' IN TYPEOF(sar\shape_aspect_relationship.related_shape_aspect))
       AND (sar\shape_aspect_relationship.related_shape_aspect\shape_aspect.description = 'axis')
       )) = 1))) = 0;
  WR2: SIZEOF(QUERY(dsa <* derived_shape_aspect |
       (dsa\shape_aspect.description = 'directed axis')
       AND NOT(SIZEOF(QUERY(sar <* USEDIN(dsa,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'end shape aspect')
       AND ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'SHAPE_ASPECT' IN TYPEOF(sar\shape_aspect_relationship.related_shape_aspect))
       )) = 1))) = 0;
  WR3: SIZEOF(QUERY(dsa <* derived_shape_aspect |
       (dsa\shape_aspect.description = 'directed axis')
       AND NOT(SIZEOF(QUERY(sar <* USEDIN(dsa,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'start shape aspect')
       AND ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'SHAPE_ASPECT' IN TYPEOF(sar\shape_aspect_relationship.related_shape_aspect))
       )) = 1))) = 0;
END_RULE;

RULE directed_axis_unique_constraint FOR
 ( derived_shape_aspect );
LOCAL
  da : BAG OF derived_shape_aspect := QUERY( r <* derived_shape_aspect |
(r\shape_aspect.description = 'directed axis') );
  sar_bag : BAG OF shape_aspect_relationship;
  cos_bag : BAG OF centre_of_symmetry := [];
  sar2_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  sa_bag : BAG OF shape_aspect;
END_LOCAL;

REPEAT i := 1 to SIZEOF(da) by 1;
  sar_bag := QUERY( sar <* USEDIN(da[i],
'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
((sar\shape_aspect_relationship.name = 'derived axis') AND
(sar.related_shape_aspect\shape_aspect.description = 'axis') AND
('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
'CENTRE_OF_SYMMETRY' IN TYPEOF(sar.related_shape_aspect))) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF( NOT( sar_bag[j].related_shape_aspect IN cos_bag ) ) THEN
        cos_bag := cos_bag + sar_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(cos_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sa_bag := [];
  sar_bag := QUERY( sar <* USEDIN(cos_bag[i],
'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
((sar\shape_aspect_relationship.name = 'derived axis') AND
(sar.relating_shape_aspect IN da)) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    sar2_bag := QUERY( sar <* USEDIN(sar_bag[j].relating_shape_aspect,
'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
(sar\shape_aspect_relationship.name = 'start shape aspect') );
    REPEAT k := 1 to SIZEOF(sar2_bag) by 1;
      IF EXISTS( sar2_bag[k].related_shape_aspect ) THEN
        IF ( sar2_bag[k].related_shape_aspect IN sa_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          sa_bag := sa_bag + sar2_bag[k].related_shape_aspect;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE direction_element_constraint FOR
  (property_definition);
WHERE
  WR1: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'direction element')
       AND NOT(SIZEOF(QUERY(pdr <* USEDIN(pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       (pdr\property_definition_relationship.name = 'element direction vector')
       AND ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION' IN TYPEOF(pdr.related_property_definition))
       AND (pdr.related_property_definition\property_definition.description = 
          'datum direction_property')
       )) = 1))) = 0;
  WR2: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'direction element')
       AND NOT(SIZEOF(QUERY(pdr <* USEDIN(pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       (pdr\property_definition_relationship.name = 'half datum plane direction vector')
       AND ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION' IN TYPEOF(pdr.related_property_definition))
       AND (pdr.related_property_definition\property_definition.description = 
          'datum direction_property')
       )) = 1))) = 0;
  WR3: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'direction element')
       AND NOT(SIZEOF(QUERY(pdr <* USEDIN(pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       (pdr\property_definition_relationship.name = 'direction component')
       AND ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION' IN TYPEOF(pdr.related_property_definition))
       AND (pdr.related_property_definition\property_definition.description =
       'datum based vector orientation'))) = 1))) = 0;
END_RULE;

RULE edge_segment_vertex_constraint 
FOR (shape_aspect_relationship, edge_segment_vertex);
LOCAL
sar : BAG OF shape_aspect_relationship := [];
esv : BAG OF edge_segment_vertex := edge_segment_vertex;
pass : BOOLEAN := TRUE;
END_LOCAL;
  REPEAT i := 1 to SIZEOF (esv) by 1;
   IF (NOT pass) THEN ESCAPE; END_IF;
      sar := QUERY (sar <* shape_aspect_relationship |
       esv[i] = sar\shape_aspect_relationship.related_shape_aspect);
       pass := (SIZEOF(sar) = 2);
      REPEAT j := 2 to SIZEOF (sar) by 1;
       IF (NOT pass) THEN ESCAPE; END_IF;
       pass := ( (sar[j]) :<>: (sar[j-1]));
       IF (NOT pass) THEN ESCAPE; END_IF;
       pass := ( TYPEOF(sar[j]) = TYPEOF(sar[j-1]));
       IF (NOT pass) THEN ESCAPE; END_IF;
       pass := (sar[j].relating_shape_aspect :=:
               sar[j-1].relating_shape_aspect);
      END_REPEAT;
  END_REPEAT;
WHERE
 WR1: pass;
END_RULE;

RULE edge_segment_vertex_unique_constraint FOR
 ( edge_segment_vertex );
LOCAL
  esv : BAG OF edge_segment_vertex := QUERY( r <* edge_segment_vertex
| (r\shape_aspect.name = 'single datum') );
  pd_bag : BAG OF property_definition;
  pdr_bag : BAG OF property_definition_representation;
  pass : BOOLEAN := TRUE;
  desc_bag : BAG OF STRING := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(esv) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pd_bag := QUERY( pd <* USEDIN( esv[i],
'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
'PROPERTY_DEFINITION.DEFINITION') | 
(pd\property_definition.description = 'shape element characterization') );
  REPEAT j := 1 to SIZEOF(pd_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pdr_bag := USEDIN( pd_bag[j],
'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION');
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      IF ( (pdr_bag[k].used_representation\representation.name = 
           'shape element characterization') AND
('EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
'DESCRIPTIVE_REPRESENTATION_ITEM' IN 
TYPEOF(pdr_bag[k].used_representation.items[1])) ) THEN
        IF EXISTS
            ( pdr_bag[k].used_representation.items[1]\descriptive_representation_item.description ) THEN
          IF ( pdr_bag[k].used_representation.items[1]\descriptive_representation_item.description IN 
                   desc_bag ) THEN
            pass := FALSE;
            ESCAPE;
          ELSE
            desc_bag := desc_bag + 
                      pdr_bag[k].used_representation.items[1]\descriptive_representation_item.description;
          END_IF;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE geometric_tolerance_qualifier_constraint FOR
  (measure_qualification);
WHERE
  WR1: SIZEOF(QUERY(mq <* measure_qualification |
       ((mq\measure_qualification.name = 'predefined geometric tolerance qualifier')
       OR (mq\measure_qualification.name = 'user defined geometric tolerance qualifier'))
       AND NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'MEASURE_WITH_UNIT' IN TYPEOF(mq.qualified_measure))
       AND(SIZEOF(QUERY(pugt <* USEDIN(mq.qualified_measure,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'GEOMETRIC_TOLERANCE.MAGNITUDE') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE' IN TYPEOF(pugt)))) = 0)
       ))) = 0;
END_RULE;

RULE positional_boundary_member_definition_constraint FOR
  (property_definition);
WHERE
  WR1: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'positional boundary member property')
       AND NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'POSITIONAL_BOUNDARY_MEMBER' IN TYPEOF(pd.definition))))) = 0; 
  WR2: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'positional boundary member property')
       AND NOT(SIZEOF(QUERY(pdr <* USEDIN(pd, 
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'DIMENSIONAL_SIZE_PROPERTY' IN 
       TYPEOF(pdr.related_property_definition))
       AND (pdr\property_definition_relationship.name = 'boundary member associated dimension')
       )) = 1))) = 0; 
END_RULE;

RULE positional_boundary_offset_constraint FOR
  (property_definition);
WHERE
  WR1: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'positional boundary offset')
       AND NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'SHAPE_ASPECT_RELATIONSHIP' IN TYPEOF (pd.definition)) AND
 (pd.definition\shape_aspect_relationship.name = 'positional boundary and profile boundary member'))
       )) = 0;
  WR2: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'positional boundary offset')
       AND NOT(SIZEOF(QUERY(pdr <* USEDIN(pd,
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       (pdr\property_definition_relationship.name = 'boundary offset') AND
       (pdr.relating_property_definition\property_definition.name =
       'profile related positional boundary property'))) = 1)
       )) = 0;
END_RULE;

RULE profile_related_positional_boundary_definition_constraint FOR
  (property_definition);
WHERE
  WR1: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'profile related positional boundary property')
       AND NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'POSITIONAL_BOUNDARY' IN TYPEOF(pd.definition)) AND
       (pd.definition\shape_aspect.description = 'profile related positional boundary')
       ))) = 0;
  WR2: SIZEOF(QUERY(pd <* property_definition |
       (pd\property_definition.description = 'profile related positional boundary property')
       AND NOT(SIZEOF(QUERY(pdr <* USEDIN(pd, 
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
(pdr.related_property_definition\property_definition.description = 'positional boundary offset')
       AND (pdr\property_definition_relationship.name = 'boundary offset'))) = 1))) = 0;
END_RULE;

RULE projected_zone_and_base_relationship_constraint FOR
  (projected_zone_definition);
WHERE
  WR1: SIZEOF(QUERY(pzd <* projected_zone_definition |
       NOT(('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'PART_TEMPLATE_DEFINITION' IN TYPEOF(pzd.projection_end))
       OR (pzd.projection_end.product_definitional = TRUE)))) = 0;
END_RULE;

RULE projected_zone_height_characteristic_constraint FOR
  (projected_zone_definition);
WHERE
  WR1: SIZEOF(QUERY(pzd <* projected_zone_definition |
       NOT('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF(pzd.projected_length))
       )) = 0;
END_RULE;

RULE restraint_condition_constraint FOR
  (property_definition);
WHERE
  WR1: SIZEOF(QUERY(pd <* property_definition |
       ((pd\property_definition.description = 'restraint') 
       OR (pd\property_definition.description = 'tolerance specific restraint'))
       AND (SIZEOF(QUERY(pdr <* USEDIN(pd, 
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
    + 'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ('EXTENDED_GEOMETRIC_TOLERANCE_MIM.'
    + 'REQUIREMENTS_PROPERTY' IN TYPEOF(pdr.related_property_definition))
       AND (pdr\property_definition_relationship.name = 'restraint description'))) = 0))) = 0;
END_RULE;

RULE shape_element_deriving_relationship_unique_constraint FOR
 ( shape_aspect_deriving_relationship );
LOCAL
  sa_bag : BAG OF shape_aspect := [];
  sadr_bag : BAG OF shape_aspect_deriving_relationship;
  pass : BOOLEAN := TRUE;
  rsa_bag : BAG OF shape_aspect;
END_LOCAL;

REPEAT i := 1 to SIZEOF(shape_aspect_deriving_relationship) by 1;
  IF EXISTS( shape_aspect_deriving_relationship[i].relating_shape_aspect )
                                                    THEN
    IF( NOT( shape_aspect_deriving_relationship[i].
                           relating_shape_aspect IN sa_bag ) ) 
                                                  THEN
      sa_bag := sa_bag + 
            shape_aspect_deriving_relationship[i].relating_shape_aspect;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(sa_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sadr_bag := QUERY( r <* shape_aspect_deriving_relationship | 
                    (r.relating_shape_aspect :=: sa_bag[i]) );
  rsa_bag := [];
  REPEAT j := 1 to SIZEOF(sadr_bag) by 1;
    IF EXISTS( sadr_bag[j].related_shape_aspect ) THEN
      IF ( sadr_bag[j].related_shape_aspect IN rsa_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        rsa_bag := rsa_bag + sadr_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE subtype_exclusive_dimensional_location FOR
  (dimensional_location);
WHERE  
  WR1: SIZEOF (QUERY (dl <* dimensional_location |
       NOT (SIZEOF ([
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'ANGULAR_DIMENSION_WITH_ORIENTATION',
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'DIMENSIONAL_LOCATION',
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'DIMENSIONAL_LOCATION_WITH_PATH']
       * TYPEOF(dl)) <= 1))) = 0;
END_RULE;

(* Rule makes no sense after curve_dimension is substituted by Curved_size_dimension from dimension_tolerance
RULE subtype_exclusive_dimensional_size FOR
  (dimensional_size);
WHERE  
  WR1: SIZEOF (QUERY (ds <* dimensional_size |
       NOT (SIZEOF ([
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'ANGULAR_DIMENSIONAL_SIZE',
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'ANGULAR_SIZE']
       * TYPEOF(ds)) <= 1) OR
       NOT (SIZEOF ([
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'ANGULAR_DIMENSIONAL_SIZE',
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'OPPOSING_BOUNDARY_DIMENSIONAL_SIZE']
       * TYPEOF(ds)) <= 1))) = 0;
END_RULE;
*)
RULE subtype_mandatory_extended_geometric_tolerance FOR
  (geometric_tolerance);
WHERE  
  WR1: SIZEOF (QUERY (gt <* geometric_tolerance |
       NOT (SIZEOF ([
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE'] *
       TYPEOF (gt)) = 1))) = 0;
END_RULE;

RULE subtype_mandatory_runout_zone_orientation FOR
  (runout_zone_orientation);
WHERE  
  WR1: SIZEOF (QUERY (rzo <* runout_zone_orientation |
       NOT (SIZEOF ([
       'EXTENDED_GEOMETRIC_TOLERANCE_MIM.' +
       'RUNOUT_ZONE_ORIENTATION_REFERENCE_DIRECTION'] *
       TYPEOF (rzo)) = 1))) = 0;
END_RULE;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\extended_measure_representation_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.1 2005/02/04 07:18:10 liutkus Exp $
ISO TC184/SC4/WG12 N3232 - ISO/TS 10303-1106 Extended measure representation - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N3047
*) 


SCHEMA Extended_measure_representation_mim;

USE FROM Measure_representation_mim;    -- ISO/TS 10303-1118

USE FROM qualified_measure_schema   -- ISO 10303-45
  (measure_representation_item,
   precision_qualifier,
   qualified_representation_item,
   qualitative_uncertainty, -- GL added, needed for mapping
   standard_uncertainty,
   type_qualifier,
   uncertainty_qualifier); 

USE FROM representation_schema   -- ISO 10303-43
  (compound_item_definition,
   compound_representation_item,
   list_representation_item,
   set_representation_item); 

USE FROM support_resource_schema;    -- ISO 10303-41

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (type_check_function); 


ENTITY value_range
  SUBTYPE OF (compound_representation_item);
WHERE
  WR1: ( 'value_with_unit_mim.'+ 'SET_REPRESENTATION_ITEM' IN TYPEOF ( item_element ) ) AND value_range_wr1 ( item_element );
  WR2: value_range_wr2 ( item_element );
  WR3: value_range_wr3 ( item_element );
END_ENTITY;

RULE subtype_exclusiveness_representation_item FOR 
(representation_item);
WHERE
  WR1: SIZEOF(QUERY (cri <* representation_item | NOT (type_check_function(cri,['QUALIFIED_MEASURE_SCHEMA.MEASURE_REPRESENTATION_ITEM','REPRESENTATION_SCHEMA.VALUE_REPRESENTATION_ITEM','REPRESENTATION_SCHEMA.COMPOUND_REPRESENTATION_ITEM'] , 3)))) = 0;
END_RULE; 

FUNCTION value_range_wr1
 (agg : compound_item_definition) : BOOLEAN; 
BEGIN
IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY (i1 <* agg | (
'QUALIFIED_MEASURE_SCHEMA.MEASURE_REPRESENTATION_ITEM' IN TYPEOF
(i1)))) = 2) OR
(SIZEOF(QUERY (i2 <* agg | (
'REPRESENTATION_SCHEMA.VALUE_REPRESENTATION_ITEM' IN TYPEOF
(i2)))) = 2)) THEN
RETURN(TRUE);
ELSE
RETURN(FALSE);
END_IF;
END;
      END_FUNCTION; 

FUNCTION value_range_wr2
 (agg : compound_item_definition) : BOOLEAN; 
BEGIN
IF (SIZEOF(QUERY (i <* agg | (i.name = 'upper limit'))) = 1)
AND (SIZEOF(QUERY (i <* agg | (i.name = 'lower limit'))) = 1)
THEN
RETURN(TRUE);
ELSE
RETURN(FALSE);
END_IF;
END;
      END_FUNCTION; 

FUNCTION value_range_wr3
 (agg : compound_item_definition) : BOOLEAN; 
BEGIN
IF (SIZEOF(QUERY(i1 <* agg |
('QUALIFIED_MEASURE_SCHEMA.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i1)) AND
(SIZEOF (QUERY (i2 <* agg |
('QUALIFIED_MEASURE_SCHEMA.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i2)) AND
(i1 :<>: i2) AND (i1\measure_with_unit.unit_component :=: i2\measure_with_unit.unit_component))) = 1))) = 2)
THEN
RETURN (TRUE);
ELSE
RETURN (FALSE);
END_IF;
END;
      END_FUNCTION; 

END_SCHEMA;  -- Extended_measure_representation_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\external_class_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.14 2004/11/19 21:37:35 robbod Exp $
 ISO TC184/SC4/WG12 N3050 - ISO/TS 10303-1275 External class - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2265
*) 


SCHEMA External_class_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (description_attribute,
   description_attribute_select); 

USE FROM Class_mim;    -- ISO/TS 10303-1070

USE FROM classification_schema   -- ISO 10303-54
  (class); 

USE FROM external_reference_schema   -- ISO 10303-41
  (external_source,
   externally_defined_item); 

USE FROM Name_assignment_mim;    -- ISO/TS 10303-1340


TYPE external_class_name_item = SELECT BASED_ON name_item WITH 
   (external_class_library);
END_TYPE; 

ENTITY external_class_library
  SUBTYPE OF (external_source);
END_ENTITY;

ENTITY externally_defined_class
  SUBTYPE OF (class, externally_defined_item);
END_ENTITY;

END_SCHEMA;  -- External_class_mim




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\external_item_identification_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.12 2004/10/21 17:58:55 darla Exp $
 ISO TC184/SC4/WG12 N1208 - ISO/TS 10303-1128 External item identification assignment - EXPRESS MIM
*)


SCHEMA External_item_identification_assignment_mim;

USE FROM management_resources_schema   	-- ISO 10303-41
  (external_identification_assignment); 

USE FROM support_resource_schema		-- ISO 10303-41
  (identifier);

TYPE external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY applied_external_identification_assignment
SUBTYPE OF (external_identification_assignment);
  items : SET [1 : ?] OF external_identification_item;
END_ENTITY;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\external_model_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.3 2004/10/21 18:01:28 darla Exp $
 ISO TC184/SC4/WG12 N1229 - ISO/TS 10303-1033 External model - EXPRESS MIM
*)

SCHEMA External_model_mim;
  
USE FROM Elemental_geometric_shape_mim; -- ISO 10303-1004
  
USE FROM File_identification_mim;

USE FROM product_property_definition_schema
  (property_definition);

USE FROM product_property_representation_schema
  (property_definition_representation);

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\fabrication_joint_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/02/10 13:15:17 liutkus Exp $
   ISO TC184/SC4/WG12 N3403 - ISO/CD-TS 10303-1668 Fabrication joint - EXPRESS MIM
*)


SCHEMA Fabrication_joint_mim;
	USE FROM Land_mim;	-- ISO/TS 10303-1692
	USE FROM Layered_interconnect_module_with_printed_component_design_mim;	-- ISO/TS 10303-1700
	USE FROM Sequential_laminate_assembly_design_mim;	-- ISO/TS 10303-1741
	
REFERENCE FROM product_property_definition_schema -- ISO 10303-41
  (acyclic_shape_aspect_relationship);
	
	
ENTITY connection_zone_based_fabrication_joint
  SUBTYPE OF (fabrication_joint);
WHERE
  WR1: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'FABRICATION_JOINT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 1')) = 1;
  WR2: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'FABRICATION_JOINT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'zone 2')) = 1;
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'FABRICATION_JOINT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar.relating_shape_aspect\shape_aspect.description = 'connection zone')) = 2;

END_ENTITY;

ENTITY fabrication_joint
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: (('FABRICATION_JOINT_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description IN
       ['via terminal', 'printed component join terminal',
       'non functional land join terminal',
       'land join terminal', 'conductive interconnect element terminal',
       'component termination passage join terminal']));
  WR2: (('FABRICATION_JOINT_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       (SELF.relating_shape_aspect\shape_aspect.description IN
       ['via terminal', 'printed component join terminal',
       'non functional land join terminal',
       'land join terminal', 'conductive interconnect element terminal',
       'component termination passage join terminal']));
(* invalid csa 
  WR3: SIZEOF (QUERY (ajm <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_JOINT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'auxiliary joint material') |
       ('FABRICATION_JOINT_MIM.' +
       'LAND' IN
       TYPEOF (ajm.related_shape_aspect)) OR
       (('FABRICATION_JOINT_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (ajm.related_shape_aspect)) AND
       (ajm.related_shape_aspect\shape_aspect.description =
       'stratum feature template component')))) <= 1; *)
  WR4: acyclic_shape_aspect_relationship(SELF,
       [SELF\shape_aspect_relationship.related_shape_aspect],
       'FABRICATION_JOINT_MIM.'+
       'FABRICATION_JOINT');
END_ENTITY;

ENTITY passage_terminal_based_fabrication_joint_link
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
END_ENTITY;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\fabrication_requirement_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 09:59:30 liutkus Exp $
   ISO TC184/SC4/WG12 N3406 - ISO/CD-TS 10303-1669 Fabrication requirement - EXPRESS MIM
*)


SCHEMA Fabrication_requirement_mim;
	USE FROM Fabrication_technology_mim;	-- ISO/TS 10303-1670
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\fabrication_technology_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 09:59:30 liutkus Exp $
   ISO TC184/SC4/WG12 N3664 - ISO/CD-TS 10303-1670 Fabrication technology - EXPRESS MIM
*)


SCHEMA Fabrication_technology_mim;
	USE FROM Physical_layout_template_mim;	-- ISO/TS 10303-1722
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740

TYPE ft_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
   (land_physical_template);
END_TYPE; 
	
-- Needed by the mapping
TYPE ft_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
   (design_object);
END_TYPE; 

TYPE ft_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
   (characterized_object,
   representation);
END_TYPE; 

ENTITY dependent_material_removal_feature_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: SELF\product_definition.description = 'material removal feature template';
  WR2: SIZEOF (QUERY (am <* QUERY (pdr <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'associated template') |
       (('FABRICATION_TECHNOLOGY_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (am.relating_product_definition)) AND
       (am.relating_product_definition.description IN
       ['default attachment size and component termination passage based',
       'default attachment size based',
       'default attachment size and via based',
       'default component termination passage based',
       'default via based',
       'default unsupported passage based']))
        )) = 1;
END_ENTITY;

ENTITY design_object
  SUBTYPE OF (characterized_object, group);
END_ENTITY;

ENTITY electrical_isolation_removal_template_definition
  SUBTYPE OF (part_template_definition);
(*
WHERE
  WR1: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'TEXT_LITERAL' IN
       TYPEOF (it))) = 1)) = 1))) = 0);
  WR2: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font vertical extent'))) = 1
       )) = 1))) = 0);
  WR3: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font horizontal extent'))) = 1
       )) = 1))) = 0);
*)
END_ENTITY;

ENTITY grouped_requirements_property
  SUBTYPE OF (group, requirements_property);
WHERE
  WR1: (NOT (SELF\group.name = 
        'item restricted requirements property')) OR
       (SIZEOF (QUERY (aga <* QUERY (ga <* USEDIN (SELF, 
       'FABRICATION_TECHNOLOGY_MIM.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       SIZEOF (aga.items) = 1)) = 1);
  WR2: (NOT (SELF\group.name = 
        'layout spacing requirements property')) OR
       (SIZEOF (QUERY (aga <* QUERY (ga <* USEDIN (SELF, 
       'FABRICATION_TECHNOLOGY_MIM.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (aga.items) = 2) AND
       (SIZEOF (QUERY (rp <* QUERY (it <* aga.items |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (it)) |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (rp)) AND
       (rp\characterized_object.name IN [
       'assembly module assembly component',
       'assembly module component terminal',
       'assembly module component',
       'assembly module macro component join terminal',
       'assembly module macro component',
       'assembly module',
       'bare die component terminal',
       'bare die component',
       'bonded conductive base blind via',
       'buried via',
       'cable component',
       'component feature',
       'component mounting feature',
       'component termination passage and contact size dependent land',
       'component termination passage and contact size dependent non functional land',
       'component termination passage dependent land',
       'component termination passage dependent non functional land',
       'component termination passage interface terminal',
       'component termination passage join terminal',
       'component termination passage',
       'conductive interconnect element terminal',
       'conductive interconnect element with pre defined transitions',
       'conductive interconnect element with user defined single transition',
       'connected area component',
       'contact size dependent land',
       'contact size dependent non functional land',
       'cutout edge segment',
       'cutout',
       'dielectric material passage',
       'electrical isolation laminate component',
       'embedded component terminal',
       'fiducial',
       'fill area',
       'filled area material removal laminate component',
       'inter stratum feature',
       'interconnect component interface terminal',
       'interconnect component join terminal',
       'interconnect module assembly component',
       'interconnect module component stratum based terminal',
       'interconnect module component surface feature',
       'interconnect module component terminal',
       'interconnect module component',
       'interconnect module edge segment',
       'interconnect module edge',
       'interconnect module macro component join terminal',
       'interconnect module macro component',
       'interface access material removal laminate component',
       'interface access stratum feature template component',
       'interface component',
       'interfacial connection',
       'internal probe access area',
       'join two physical connectivity definition supporting inter stratum feature',
       'join two physical connectivity definition supporting printed component',
       'laminate component',
       'laminate text component',
       'laminate text string component',
       'land interface terminal',
       'land join terminal',
       'land',
       'material removal laminate component',
       'minimally defined component terminal',
       'movable packaged component join terminal',
       'multi layer material removal laminate component',
       'multi layer stratum feature template component',
       'non conductive base blind via',
       'non functional land interface terminal',
       'non functional land join terminal',
       'non functional land',
       'packaged component join terminal',
       'packaged component',
       'packaged connector component interface terminal',
       'packaged connector component',
       'partially plated cutout',
       'partially plated interconnect module edge',
       'physical component',
       'physical connectivity interrupting cutout',
       'physical laminate component',
       'physical network supporting inter stratum feature',
       'plated conductive base blind via',
       'plated cutout edge segment',
       'plated cutout',
       'plated interconnect module edge segment',
       'plated interconnect module edge',
       'plated passage or unsupported passage',
       'plated passage',
       'primary stratum indicator symbol',
       'printed component join terminal',
       'printed connector component interface terminal',
       'probe access area',
       'routed interconnect component',
       'routed physical component',
       'special symbol laminate component',
       'stratum feature template component',
       'stratum feature',
       'thermal isolation laminate component',
       'unrouted conductive interconnect element',
       'unsupported passage dependent non functional land',
       'unsupported passage',
       'via and contact size dependent land',
       'via and contact size dependent non functional land',
       'via dependent land',
       'via dependent non functional land',
       'via terminal',
       'via']))) = 2))) = 1);
  WR3: (NOT (SELF\group.name = 
       'layout spacing requirements property')) OR
       (SIZEOF (QUERY (aga <* QUERY (ga <* USEDIN (SELF, 
       'FABRICATION_TECHNOLOGY_MIM.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (QUERY (rp <* QUERY (it <* aga.items |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (it)) |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (rp)) AND
       (rp\characterized_object.description = 
       'dependent design object category'))) = 1))) = 1);
  WR4: (NOT (SELF\group.name = 
       'layout spacing requirements property')) OR
       (SIZEOF (QUERY (aga <* QUERY (ga <* USEDIN (SELF, 
       'FABRICATION_TECHNOLOGY_MIM.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (QUERY (rp <* QUERY (it <* aga.items |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (it)) |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'DESIGN_OBJECT' IN 
       TYPEOF (rp)) AND
       (rp\characterized_object.description = 
       'reference design object category'))) = 1))) = 1);
END_ENTITY;

ENTITY land_physical_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: SIZEOF (QUERY (ada <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc <* USEDIN (ada.assigned_document,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
    duc\document_usage_constraint.subject_element = 
                 'pre defined classification code')) = 1)) <= 1;
(* invalid csa                 
  WR2: SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated definition') |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LAND_TEMPLATE_TERMINAL' IN
       TYPEOF (am.related_shape_aspect))) >= 1; *)
(* invalid csa       
 WR3:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN ['default attachment size based',
       'default attachment size and component termination passage based', 
       'default attachment size and via based'])) OR
       (SIZEOF (QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'minimum attachment region size') AND 
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone')))) <= 1));*)
(* invalid csa              
 WR4:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN ['default attachment size based',
       'default attachment size and component termination passage based', 
       'default attachment size and via based'])) OR
       (SIZEOF (QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'maximum attachment region size') AND 
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone')))) <= 1));*)
(* invalid csa              
 WR5:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default component termination passage based',
   'default attachment size and component termination passage based'])) OR
       (SIZEOF (QUERY (tu <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect)) AND
       (tu.related_shape_aspect\shape_aspect.description = 
       'default component termination passage definition'))) = 1)); *)
(* invalid csa              
 WR6:  NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default attachment size and component termination passage based',
       'default attachment size based', 
       'default attachment size and via based', 
       'default component termination passage based',
       'default via based',
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (ost <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'of stratum technology') |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (ost.relating_shape_aspect.of_shape.definition)
       )) = 1)); *)
 WR7:  NOT(EXISTS(SELF\product_definition.description)) OR
       ((NOT (SELF\product_definition.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2)) = 2)) = 1))) = 0));
 WR8:  NOT(EXISTS(SELF\product_definition.description)) OR
       ((NOT (SELF\product_definition.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND 
       (it\representation_item.name = 'minimum fabrication allowance'))) 
       = 1)) = 1))) = 0));
 WR9:  NOT(EXISTS(SELF\product_definition.description)) OR
       ((NOT (SELF\product_definition.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'minimum annular ring'))) = 1
       )) = 1))) = 0));
(* invalid csa       
 WR10: NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN 
       ['default attachment size and component termination passage based', 
       'default attachment size and via based', 
       'default component termination passage based', 'default via based', 
       'default unsupported passage based'])) OR
       (SIZEOF (QUERY (tu <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect))) = 1)); *)
(* invalid csa              
 WR11: NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description IN ['default via based',
       'default attachment size and via based'])) OR
       (SIZEOF (QUERY (tu <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect)) AND
       (tu.related_shape_aspect\shape_aspect.description = 'default via definition'))) 
       = 1)); *)
(* invalid csa         
 WR12: NOT(EXISTS(SELF\shape_aspect.description)) OR
       ((NOT (SELF\shape_aspect.description = 'default unsupported passage')) OR
       (SIZEOF (QUERY (tu <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'technology usage') |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (tu.related_shape_aspect)) AND
       (tu.related_shape_aspect\shape_aspect.description = 
       'default unsupported passage definition'))) = 1)); *)
END_ENTITY;

ENTITY land_template_terminal
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN ['interface terminal', 'join terminal'];
  WR2: SIZEOF (QUERY (tcz <* QUERY (sar <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'terminal connection zone') AND
       (sar\shape_aspect_relationship.description IN ['edge curve', 'edge point', 
       'surface area', 'surface point'])) |
       tcz.related_shape_aspect\shape_aspect.description = 'connection zone')) >= 0;
END_ENTITY;

ENTITY stratum_technology
  SUBTYPE OF (characterized_object);
UNIQUE
  UR1: SELF\characterized_object.name;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
        'FABRICATION_TECHNOLOGY_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'stiffness class representation')) <= 1))) = 0;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation')) = 1))) = 1;
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (scr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 'stratum class representation') |
       NOT (SIZEOF (QUERY (it <* scr.used_representation.items | 
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'laminate stiffness class') AND
       (it\descriptive_representation_item.description IN ['fluid like', 'conformal coat', 
       'stiff laminate']))) = 1))) = 0))) = 0;
  WR5: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT ({2 <= SIZEOF (pcr.used_representation.items) 
        <= 8}))) = 0))) = 0;
  WR6: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items | 
       NOT (it\representation_item.name IN ['layer purpose', 
       'layer position', 
       'maximum feature size requirement', 
       'minimum finished feature spacing', 
       'minimum finished feature size', 
       'maximum thickness',  
       'minimum thickness']))) = 0))) = 0))) = 0;
  WR7: NOT(EXISTS(SELF\characterized_object.description)) OR
       (NOT (SELF\characterized_object.description = 'design layer') OR 
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum finished feature size'))) = 1))) = 0))) = 0));
  WR8: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'maximum thickness'))) = 1))) = 0))) = 0;
  WR9: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum thickness'))) = 1))) = 0))) = 0;
 WR10: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'maximum feature size requirement'))) <= 1))) = 0))) = 0;
 WR11: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum finished feature spacing'))) <= 1))) = 0))) = 0;
 WR12: NOT(EXISTS(SELF\characterized_object.description)) OR
       ((NOT (SELF\characterized_object.description = 'documentation layer')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'layer purpose'))) = 1))) = 0))) = 0));
 WR13: NOT(EXISTS(SELF\characterized_object.description)) OR
       ((NOT (SELF\characterized_object.description = 'design layer')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['FABRICATION_TECHNOLOGY_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'FABRICATION_TECHNOLOGY_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum finished feature spacing'))) = 1))) = 0))) = 0));
 WR14: NOT(EXISTS(SELF\characterized_object.description)) OR
       ((NOT (SELF\characterized_object.description = 'design layer')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'layer purpose') AND
       (it\descriptive_representation_item.description IN ['power or ground', 'other signal', 
       'lands only']))) = 1))) = 0))) = 0));
 WR15:  SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       ('FABRICATION_TECHNOLOGY_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'layer position') AND
       (it\descriptive_representation_item.description IN [
        'primary', 
        'secondary', 
        'internal', 
        'external', 
        'all']))) = 1))) = 0))) = 0;
 WR16: NOT(EXISTS(SELF\characterized_object.description)) OR
        (SELF\characterized_object.description IN [
         'design layer',
         'documentation layer']);
END_ENTITY;

ENTITY stratum_technology_link
  SUBTYPE OF (property_definition, property_definition_relationship);
WHERE
  WR1: SELF\property_definition_relationship.related_property_definition.definition :<>:
       SELF\property_definition_relationship.relating_property_definition.definition;
(** Need to likely move to subtype       
  WR2: (SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\property_definition_relationship ||
       SELF\stratum_technology_link || SELF\property_definition)) = 0) OR
        ('FABRICATION_TECHNOLOGY_MIM.' +
       'PRINTED_PART_TEMPLATE_LINK' IN TYPEOF(SELF)); *)
  WR3: 'FABRICATION_TECHNOLOGY_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
    TYPEOF(SELF\property_definition_relationship.related_property_definition.definition);
  WR4: 'FABRICATION_TECHNOLOGY_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
    TYPEOF(SELF\property_definition_relationship.relating_property_definition.definition);
  WR5: SELF\property_definition.name = '';
  WR6: SELF\property_definition.description = '';
  WR7: SELF\property_definition_relationship.name = '';
  WR8: SELF\property_definition_relationship.description = '';
  WR9: ('FABRICATION_TECHNOLOGY_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN TYPEOF(SELF\property_definition.definition)) AND
       (SELF\property_definition.definition.description = 'printed part template');
 WR10: SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       pdr.name = 'precedent stratum technology link')) <= 1; 
 WR11: SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'FABRICATION_TECHNOLOGY_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr.name = 'precedent stratum technology link')) <= 1; 
END_ENTITY;

RULE layout_spacing_requirement_occurrence_unique_constraint FOR
 ( grouped_requirements_property, characterized_object );
LOCAL
  lsro : BAG OF grouped_requirements_property := QUERY( grp <*
grouped_requirements_property | 
(grp\group.name = 'layout spacing requirements property') );
  ddo : BAG OF characterized_object := QUERY( co <* characterized_object |
(co\characterized_object.description = 'dependent design object category') );
  ga_bag : BAG OF group_assignment := [];
  ddname_bag : BAG OF STRING := [];
  co_bag : BAG OF characterized_object := [];
  pdb : LIST OF property_definition := [];
  pd_bag : BAG OF property_definition := [];
  grp_bag : BAG OF grouped_requirements_property := [];
  rga_bag : BAG OF group_assignment := [];
  pass : BOOLEAN := TRUE;
  rdname_bag : BAG OF STRING := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(lsro) by 1;
  ga_bag := QUERY( aga <* USEDIN(lsro[i],
'FABRICATION_TECHNOLOGY_MIM.' +
'GROUP_ASSIGNMENT.ASSIGNED_GROUP') | 
'FABRICATION_TECHNOLOGY_MIM.' +
'APPLIED_GROUP_ASSIGNMENT' IN TYPEOF(aga));
  REPEAT j := 1 to SIZEOF(ga_bag) by 1;
    REPEAT k := 1 to SIZEOF(ga_bag[j].items) by 1;
      IF ( 'FABRICATION_TECHNOLOGY_MIM.' +
           'PROPERTY_DEFINITION' IN TYPEOF(ga_bag[j].items[k])) 
     THEN pdb[i] := ga_bag[j].items[k];
     ELSE pdb := [];
     END_IF; 

    IF ( (pdb :<>: []) AND
        ('FABRICATION_TECHNOLOGY_MIM.' +
        'CHARACTERIZED_OBJECT' IN TYPEOF(pdb[1]\property_definition.definition)) AND
        (pdb[1]\property_definition.definition\characterized_object.description = 
        'dependent design object category') ) THEN
      IF EXISTS( pdb[1]\property_definition.definition\characterized_object.name ) THEN
        IF( NOT( pdb[1]\property_definition.definition\characterized_object.name IN ddname_bag ) ) THEN
          ddname_bag := ddname_bag + pdb[1]\property_definition.definition\characterized_object.name;
        END_IF;
      END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(ddname_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  rdname_bag := [];
  co_bag := QUERY( co <* ddo | (co\characterized_object.name = ddname_bag[i]) );
  REPEAT j := 1 to SIZEOF(co_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pd_bag := USEDIN( co_bag[j], 
'FABRICATION_TECHNOLOGY_MIM.'
+ 'PROPERTY_DEFINITION.DEFINITION');
    REPEAT k := 1 to SIZEOF(pd_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      ga_bag := QUERY( ga <* USEDIN(pd_bag[k], 
'FABRICATION_TECHNOLOGY_MIM.' +
'APPLIED_GROUP_ASSIGNMENT.ITEMS') | 
('FABRICATION_TECHNOLOGY_MIM.' +
'GROUPED_REQUIREMENTS_PROPERTY' IN TYPEOF(ga.assigned_group)) );
      REPEAT l := 1 to SIZEOF(ga_bag) by 1;
        IF ( NOT pass ) THEN ESCAPE;
        END_IF;
        IF( NOT( ga_bag[l].assigned_group IN grp_bag ) ) THEN
          grp_bag := grp_bag + ga_bag[l].assigned_group;
        END_IF;
      END_REPEAT;
      REPEAT l := 1 to SIZEOF(grp_bag) by 1;
        IF ( NOT pass ) THEN ESCAPE;
        END_IF;
        rga_bag := USEDIN(grp_bag[l], 
'FABRICATION_TECHNOLOGY_MIM.' +
'GROUP_ASSIGNMENT.ASSIGNED_GROUP');
        REPEAT m := 1 to SIZEOF(rga_bag) by 1;
          IF ( NOT pass ) THEN ESCAPE;
          END_IF;
          REPEAT n:= 1 TO SIZEOF(rga_bag[m].items) by 1;
      IF ( 'FABRICATION_TECHNOLOGY_MIM.' +
           'PROPERTY_DEFINITION' IN TYPEOF(rga_bag[n].items[m]))
     THEN pdb[1] := rga_bag[n].items[m];
     ELSE pdb := [];
     END_IF;

    IF ( (pdb :<>: []) AND
         ('FABRICATION_TECHNOLOGY_MIM.' +
          'CHARACTERIZED_OBJECT' IN 
         TYPEOF(pdb[1]\property_definition.definition)) AND
(pdb[1]\property_definition.definition\characterized_object.description = 
'reference design object category') ) THEN
              IF EXISTS( pdb[1]\property_definition.definition\characterized_object.name ) THEN
                IF( pdb[1]\property_definition.definition\characterized_object.name IN rdname_bag ) THEN
                  pass := FALSE;
                  ESCAPE;
                ELSE
                  rdname_bag := rdname_bag + 
                          pdb[1]\property_definition.definition\characterized_object.name;
                END_IF;
              END_IF;
            END_IF;
          END_REPEAT;
        END_REPEAT;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE land_physical_template_unique_constraint FOR
 ( land_physical_template );
LOCAL
  adr_bag : BAG OF applied_document_reference;
  duc : BAG OF document_usage_constraint;
  pass : BOOLEAN := TRUE;
  duc_bag : BAG OF document_usage_constraint := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(land_physical_template) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  adr_bag := USEDIN(land_physical_template[i],
'FABRICATION_TECHNOLOGY_MIM.' +
'APPLIED_DOCUMENT_REFERENCE.ITEMS' );
  REPEAT j := 1 to SIZEOF(adr_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    duc := QUERY( r <* USEDIN(adr_bag[j].assigned_document,
'FABRICATION_TECHNOLOGY_MIM.' +
'DOCUMENT_USAGE_CONSTRAINT.SOURCE') | (r\document_usage_constraint.subject_element =
'predefined classification code') );
    REPEAT k := 1 to SIZEOF(duc) by 1;
      IF EXISTS( duc[k] ) THEN
        IF ( duc[k] IN duc_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          duc_bag := duc_bag + duc[k];
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE land_template_terminal_unique_constraint FOR
 ( land_template_terminal );
LOCAL
  ltt : BAG OF land_template_terminal := 
QUERY( sa <* land_template_terminal |
(sa\shape_aspect.description IN ['interface terminal','join terminal']) );
  name_bag : BAG OF STRING := [];
  ltt_bag : BAG OF land_template_terminal;
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  lpt_bag : BAG OF land_physical_template;
END_LOCAL;

REPEAT i := 1 to SIZEOF(ltt) by 1;
  IF EXISTS( ltt[i]\shape_aspect.name ) THEN
    IF ( NOT ( ltt[i]\shape_aspect.name IN name_bag ) ) THEN
      name_bag := name_bag + ltt[i]\shape_aspect.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  lpt_bag := [];
  ltt_bag := QUERY( sa <* ltt | (sa\shape_aspect.name = name_bag[i]) );
  REPEAT j := 1 to SIZEOF(ltt_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    sar_bag := QUERY( sar <* USEDIN(ltt_bag[j],
'FABRICATION_TECHNOLOGY_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') | 
((sar\shape_aspect_relationship.name = 'associated definition') AND
('FABRICATION_TECHNOLOGY_MIM.' +
'LAND_PHYSICAL_TEMPLATE' IN TYPEOF(sar.relating_shape_aspect))) );
    REPEAT k := 1 to SIZEOF(sar_bag) by 1;
      IF EXISTS( sar_bag[k].relating_shape_aspect ) THEN
        IF ( sar_bag[k].relating_shape_aspect IN lpt_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          lpt_bag := lpt_bag + sar_bag[k].relating_shape_aspect;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\feature_and_connection_zone_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/02/04 15:27:11 budreckytej Exp $
   ISO TC184/SC4/WG12 N3409 - ISO/CD-TS 10303-1671 Feature and connection zone - EXPRESS MIM
*)


SCHEMA Feature_and_connection_zone_mim;
	USE FROM Shape_property_assignment_mim;	-- ISO/TS 10303-1032
	
ENTITY connection_zone_interface_plane_relationship
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.name;
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect_relationship ||
       SELF\connection_zone_interface_plane_relationship ||
       SELF\shape_aspect)) = 0;
  WR2: 'FEATURE_AND_CONNECTION_ZONE_MIM.' +
       'SEATING_PLANE' IN 
       TYPEOF(SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.relating_shape_aspect\shape_aspect.description = 
      'plane';
  WR4: SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description = 
      'connection zone';
  WR5: SELF\shape_aspect_relationship.description IN ['area', 'edge']; 
  WR6: SELF\shape_aspect.of_shape = SELF\shape_aspect_relationship.related_shape_aspect.of_shape;
  WR7: SELF\shape_aspect.of_shape = SELF\shape_aspect_relationship.relating_shape_aspect.of_shape;
  WR8: SIZEOF (QUERY (dz <* QUERY (sar <* USEDIN (SELF,
       'FEATURE_AND_CONNECTION_ZONE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'derived zone') |
       dz.related_shape_aspect\shape_aspect.description = 'connection zone')) = 1;
END_ENTITY;

RULE connection_zone_constraint FOR ( shape_aspect, representation );
WHERE
   WR1: SIZEOF( QUERY( sa <* shape_aspect | 
        (sa\shape_aspect.description = 'connection zone') AND NOT 
        (SIZEOF (USEDIN (sa, '')) >= 1))) = 0;
   WR2: SIZEOF( QUERY( sa <* shape_aspect | 
              (sa\shape_aspect.description = 'connection zone') AND 
        NOT(SIZEOF( QUERY( sar <* USEDIN(sa,
        'FEATURE_AND_CONNECTION_ZONE_MIM.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (sar\shape_aspect_relationship.name IN [
        'connection',
        'minimum attachment region size',
        'maximum attachment region size',
        'external connection area', 
        'external connection zone',
        'internal connection zone',
        'mounting area', 
        'terminal connection zone'
         ]))) >= 1))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\file_identification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.15 2004/10/21 18:07:23 darla Exp $
 ISO TC184/SC4/WG12 N1205 - ISO/TS 10303-1127 File identification - EXPRESS MIM
*)

SCHEMA File_identification_mim;

USE FROM Identification_assignment_mim;
 
USE FROM External_item_identification_assignment_mim;

USE FROM document_schema   -- ISO 10303-41
  (document,
   document_representation_type); 

USE FROM product_property_definition_schema   -- ISO 10303-41
  (characterized_object); 

TYPE file_identification_item = SELECT BASED_ON identification_item WITH (document_file);
END_TYPE; 

TYPE file_version_item = SELECT BASED_ON versionable_item WITH
  (document_file);
END_TYPE;

TYPE file_location_select = SELECT BASED_ON external_identification_item WITH (document_file);
END_TYPE;

ENTITY document_file
SUBTYPE OF (document, characterized_object);
WHERE
  WR1: SELF\characterized_object.name = '';
  WR2: NOT EXISTS(SELF\characterized_object.description);
  WR3: SIZEOF( QUERY( drt <* SELF\document.representation_types |
               drt.name IN ['digital','physical'])) = 1;
END_ENTITY;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\fill_area_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/08 18:33:29 liutkus Exp $
   ISO TC184/SC4/WG12 N3412 - ISO/CD-TS 10303-1672 Fill area - EXPRESS MIM
*)

SCHEMA Fill_area_mim;
	USE FROM Basic_curve_mim;	-- ISO/TS 10303-1651
	USE FROM Styled_curve_mim;	-- ISO/TS 10303-1749
	USE FROM Value_with_unit_extension_mim;	-- ISO/TS 10303-1753
--	USE FROM Annotated_presentation_mim;
	USE FROM Associative_text_mim;    -- ISO/TS 10303-1132

	USE FROM Extended_elemental_geometric_shape_mim;	-- ISO/TS 10303-1667	
	(** Layered_shape_arm is referenced just for the vector *)

	USE FROM Presentation_definition_schema
		(annotation_fill_area,
		annotation_fill_area_occurrence);
	USE FROM Presentation_appearance_schema(fill_area_style);

(* Not allowed by EXPRESS to extend non extensible select
TYPE fa_presentation_style_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON presentation_style_select WITH 
   (externally_defined_hatch_style,
   fill_area_style_hatching,
   fill_area_style_colour,
   fill_area_style_tiles,
   externally_defined_tile_style);
END_TYPE; *)

RULE fill_area_occurrence_constraint FOR 
( annotation_fill_area_occurrence );
WHERE
  WR1: SIZEOF(QUERY(afao <* annotation_fill_area_occurrence |
       NOT ('FILL_AREA_MIM.'
       + 'ANNOTATION_FILL_AREA' IN TYPEOF(afao.item))
       )) = 0;
  WR2: SIZEOF(QUERY(afao <* annotation_fill_area_occurrence |
       NOT ('FILL_AREA_MIM.'
       + 'CARTESIAN_POINT' IN TYPEOF(afao.fill_style_target))
       )) = 0;
  WR3: SIZEOF(QUERY(afao <* annotation_fill_area_occurrence |
       SIZEOF(QUERY(psa <* afao.styles |
       SIZEOF(QUERY(cs <* psa.styles |
       ('FILL_AREA_MIM.'
       + 'CURVE_STYLE' IN TYPEOF(cs))
       )) = 0
       )) = 0
       )) = 0;
END_RULE;

RULE fill_area_style_constraint FOR ( fill_area_style );
WHERE
  WR1: SIZEOF(QUERY(fas <* fill_area_style |
       NOT (SIZEOF(fas.fill_styles) = 1 )
       )) = 0;
END_RULE;

RULE fill_area_style_unique_constraint FOR (fill_area_style);

LOCAL
  r :  BAG OF fill_area_style := QUERY (r <* fill_area_style | TRUE);
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF string := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF (r) by 1;
  IF EXISTS( r[i]\fill_area_style.name ) THEN
    IF (r[i]\fill_area_style.name IN name_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      name_bag := name_bag + r[i]\fill_area_style.name;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
WR1 : pass;

END_RULE;
	
END_SCHEMA;





(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\form_features_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/04/04 10:09:05 liutkus Exp $
   ISO TC184/SC4/WG12 N3415 - ISO/CD-TS 10303-1673 Form features - EXPRESS MIM
*)


SCHEMA Form_features_mim;
	USE FROM Layered_2d_shape_mim;	-- ISO/TS 10303-1693

RULE radius_edge_feature_shape_constraint FOR ( shape_representation );
WHERE
  WR1: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'radius edge feature shape')
       AND (SIZEOF(QUERY(lmwu <* sr.items | 
       ('FORM_FEATURES_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (lmwu))
       AND (lmwu\representation_item.name = 'maximum radius length')
       )) = 0))) = 0;
  WR2: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'radius edge feature shape')
       AND (SIZEOF(QUERY(lmwu <* sr.items | 
       ('FORM_FEATURES_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (lmwu))
       AND (lmwu\representation_item.name = 'minimum radius length')
       )) = 0))) = 0;
END_RULE;

RULE step_edge_feature_shape_constraint FOR ( shape_representation );
WHERE
  WR1: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'step edge feature shape')
       AND NOT(SIZEOF(QUERY(lmwu <* sr.items | 
       ('FORM_FEATURES_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (lmwu))
       AND (lmwu\representation_item.name = 'maximum step depth')
       )) = 1))) = 0; 
 WR2: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'step edge feature shape')
       AND NOT(SIZEOF(QUERY(lmwu <* sr.items | 
       ('FORM_FEATURES_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (lmwu))
       AND (lmwu\representation_item.name = 'maximum step width')
       )) = 1))) = 0; 
 WR3: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'step edge feature shape')
       AND NOT(SIZEOF(QUERY(lmwu <* sr.items | 
       ('FORM_FEATURES_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (lmwu))
       AND (lmwu\representation_item.name = 'minimum step depth')
       )) = 1))) = 0; 
 WR4: SIZEOF(QUERY(sr <* shape_representation |
       (sr\representation.name = 'step edge feature shape')
       AND NOT(SIZEOF(QUERY(lmwu <* sr.items | 
       ('FORM_FEATURES_MIM.'
       + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (lmwu))
       AND (lmwu\representation_item.name = 'minimum step width')
       )) = 1))) = 0; 
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\foundation_representation_mim.exp
   ------------------------------------------------------------
*)

(* 
$Id: mim.exp,v 1.16 2004/11/18 00:04:02 thendrix Exp $ 
ISO TC184/SC4/WG12 N3223 - ISO/TS 10303-1006 Foundation representation - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N2105
*) 


SCHEMA Foundation_representation_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (description_attribute,
   description_attribute_select,
   id_attribute,
   id_attribute_select); 

USE FROM measure_schema   -- ISO 10303-41
  (global_unit_assigned_context); 

USE FROM qualified_measure_schema   -- ISO 10303-45
  (descriptive_representation_item); 

USE FROM representation_schema   -- ISO 10303-43
  (global_uncertainty_assigned_context,
   representation,
   representation_context,
   representation_item,
   representation_relationship,
   uncertainty_measure_with_unit); 

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054


END_SCHEMA;  -- Foundation_representation_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\functional_assignment_to_part_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.4 2005/02/04 15:29:17 budreckytej Exp $
   ISO TC184/SC4/WG12 N3670 - ISO/CD-TS 10303-1674 Functional assignment to part - EXPRESS MIM
*)


SCHEMA Functional_assignment_to_part_mim;
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705
	USE FROM Physical_unit_usage_view_mim;	-- ISO/TS 10303-1732
	
ENTITY part_connected_terminals_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       SIZEOF (['FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL',
       'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
       'BARE_DIE_TERMINAL',
       'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
       'INTERCONNECT_MODULE_TERMINAL',
       'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
       'PACKAGE_TERMINAL',
       'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
       'PACKAGED_PART_TERMINAL'] *
       TYPEOF (mct.related_shape_aspect)) = 1)) >= 2;
END_ENTITY;

RULE functional_usage_view_to_part_terminal_assignment_constraint FOR 
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'functional terminal allocation')
       AND NOT(('FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.'
       + 'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN
       TYPEOF(sar.relating_shape_aspect)) AND
       (sar.relating_shape_aspect\shape_aspect.description = 'scalar terminal')
       ))) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'functional terminal allocation')
       AND NOT(('FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.'
       + 'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF(sar.related_shape_aspect)) OR
       ('FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.'
       + 'BARE_DIE_TERMINAL' IN
       TYPEOF(sar.related_shape_aspect)) OR
       ('FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.'
       + 'INTERCONNECT_MODULE_TERMINAL' IN
       TYPEOF(sar.related_shape_aspect)) OR
       ('FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.'
       + 'PACKAGED_PART_TERMINAL' IN
       TYPEOF(sar.related_shape_aspect))
       ))) = 0;
END_RULE;

RULE functional_usage_view_to_part_terminal_assignment_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  fuvtpta : BAG OF shape_aspect_relationship := 
QUERY( r <* shape_aspect_relationship |
(r\shape_aspect_relationship.name = 'functional terminal allocation'));
  futd_bag : BAG OF functional_unit_terminal_definition := [];
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  sa_bag : BAG OF shape_aspect;
END_LOCAL;

REPEAT i := 1 to SIZEOF(fuvtpta) by 1;
  IF EXISTS( fuvtpta[i].relating_shape_aspect ) THEN
    IF ( fuvtpta[i].relating_shape_aspect\shape_aspect.description = 
                                             'scalar terminal' ) THEN
      IF ( NOT ( fuvtpta[i].relating_shape_aspect IN futd_bag ) ) THEN
        futd_bag := futd_bag + fuvtpta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(futd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sar_bag := QUERY( sar <* fuvtpta | 
        ((sar.relating_shape_aspect :=: futd_bag[i]) AND
(SIZEOF(['FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
'ASSEMBLY_MODULE_TERMINAL',
'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
'BARE_DIE_TERMINAL',
'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
'INTERCONNECT_MODULE_TERMINAL',
'FUNCTIONAL_ASSIGNMENT_TO_PART_MIM.' +
'PACKAGED_PART_TERMINAL'] * TYPEOF(sar.related_shape_aspect))>0)) );
  sa_bag := [];
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF ( sar_bag[j].related_shape_aspect IN sa_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        sa_bag := sa_bag + sar_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\functional_decomposition_to_assembly_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 10:08:33 liutkus Exp $
   ISO TC184/SC4/WG12 N3418 - ISO/CD-TS 10303-1675 Functional decomposition to assembly design - EXPRESS MIM
*)


SCHEMA Functional_decomposition_to_assembly_design_mim;
	USE FROM Assembly_technology_mim;	-- ISO/TS 10303-1649

RULE
design_functional_unit_allocation_to_assembly_joint_unique_constraint FOR
 ( product_definition_relationship );
LOCAL
  dfuataj : BAG OF product_definition_relationship := 
      QUERY( pdr <* product_definition_relationship |
(pdr\product_definition_relationship.name = 'design functional unit allocation to assembly joint') );
  pass : BOOLEAN := TRUE;
  pd_bag : BAG OF product_definition := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(dfuataj) by 1;
  IF EXISTS( dfuataj[i].relating_product_definition ) THEN
    IF ( dfuataj[i].relating_product_definition.id = 
                         'design composition path' ) THEN
      IF ( dfuataj[i].relating_product_definition IN pd_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        pd_bag := pd_bag + dfuataj[i].relating_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\functional_decomposition_to_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 10:09:06 liutkus Exp $
   ISO TC184/SC4/WG12 N3421 - ISO/CD-TS 10303-1676 Functional decomposition to design - EXPRESS MIM
*)


SCHEMA Functional_decomposition_to_design_mim;
	USE FROM Design_management_mim;	-- ISO/TS 10303-1661
	USE FROM Physical_unit_design_view_mim;	-- ISO/TS 10303-1728
	USE FROM Network_functional_design_view_mim;	-- ISO/TS 10303-1704	

TYPE fdtd_managed_design_object = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON managed_design_object WITH 
	(product_definition_relationship,
	property_definition_relationship);
END_TYPE;

RULE design_functional_unit_allocation_to_assembly_component_constraint FOR
( product_definition_relationship );
WHERE
   WR1: SIZEOF (QUERY (pdr <* product_definition_relationship |
     (pdr\product_definition_relationship.name = 'design functional unit allocation to assembly component')
               AND
                 (NOT(
    (pdr.relating_product_definition\product_definition.description = 'design definition path')
                    AND
            (pdr.relating_product_definition.id = 'design composition path')
                 ))
               )) = 0;

   WR2: SIZEOF (QUERY (pdr <* product_definition_relationship |
   (pdr\product_definition_relationship.name = 'design functional unit allocation to assembly component')
               AND
     (NOT('FUNCTIONAL_DECOMPOSITION_TO_DESIGN_MIM.' +
     'COMPONENT_DEFINITION' IN TYPEOF (pdr.related_product_definition))) 
               )) = 0;
END_RULE;

RULE
design_functional_unit_allocation_to_assembly_component_unique_constraint
FOR ( product_definition_relationship );
LOCAL
  dfuatac : BAG OF product_definition_relationship := 
QUERY( pdr <* product_definition_relationship |
(pdr\product_definition_relationship.name = 'design functional unit allocation to assembly component') );
  cd_bag : BAG OF component_definition := [];
  pdr_bag : BAG OF product_definition_relationship;
  pass : BOOLEAN := TRUE;
  id_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(dfuatac) by 1;
  IF EXISTS( dfuatac[i].related_product_definition ) THEN
    IF( 'FUNCTIONAL_DECOMPOSITION_TO_DESIGN_MIM.' +
'COMPONENT_DEFINITION' IN 
TYPEOF(dfuatac[i].related_product_definition) ) THEN
      IF( NOT( dfuatac[i].related_product_definition IN cd_bag ) ) THEN
        cd_bag := cd_bag + dfuatac[i].related_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(cd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pdr_bag := QUERY( pdr <* dfuatac | 
                 (pdr.related_product_definition :=: cd_bag[i]) );
  id_bag := [];
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF EXISTS( pdr_bag[j].id ) THEN
      IF ( pdr_bag[j].id IN id_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        id_bag := id_bag + pdr_bag[j].id;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE reference_composition_path_constraint FOR 
( product_definition_relationship );
WHERE
  WR1: SIZEOF(QUERY(pdr <* product_definition_relationship |
       (pdr\product_definition_relationship.name = 'reference composition path')
       AND NOT(
       ('FUNCTIONAL_DECOMPOSITION_TO_DESIGN_MIM.'
       + 'COMPONENT_FUNCTIONAL_UNIT' IN 
           TYPEOF(pdr.relating_product_definition))
       AND (pdr.relating_product_definition\product_definition.description = 
          'reference definition path')
       AND (pdr.relating_product_definition.frame_of_reference.name =
      'functional occurrence')
       ))) = 0;
  WR2: SIZEOF(QUERY(pdr <* product_definition_relationship |
       (pdr\product_definition_relationship.name = 'reference composition path')
       AND NOT(
       ('FUNCTIONAL_DECOMPOSITION_TO_DESIGN_MIM.'
       + 'COMPONENT_FUNCTIONAL_UNIT' IN 
         TYPEOF(pdr.related_product_definition))
       AND (pdr.related_product_definition.frame_of_reference.name =
      'functional occurrence')
       ))) = 0;
END_RULE;

RULE reference_functional_unit_assignment_to_part_constraint FOR
( product_definition_relationship );
WHERE
  WR1: SIZEOF(QUERY( pdr <* product_definition_relationship |
       (pdr\product_definition_relationship.name = 'reference functional unit assignment to part')
       AND NOT (('FUNCTIONAL_DECOMPOSITION_TO_DESIGN_MIM.'
       + 'PRODUCT_DEFINITION' IN TYPEOF(pdr.related_product_definition))
       AND ('FUNCTIONAL_DECOMPOSITION_TO_DESIGN_MIM.'
       + 'APPLICATION_CONTEXT_ELEMENT' IN
       TYPEOF(pdr.related_product_definition.frame_of_reference))
       AND ((pdr.relating_product_definition.frame_of_reference.name
              = 'physical design')
       OR (pdr.relating_product_definition.frame_of_reference.name
              = 'physical design usage'))))) = 0; 
  WR2: SIZEOF(QUERY( pdr <* product_definition_relationship |
       (pdr\product_definition_relationship.name = 'reference functional unit assignment to part')
       AND NOT (('FUNCTIONAL_DECOMPOSITION_TO_DESIGN_MIM.'
       + 'PRODUCT_DEFINITION' IN TYPEOF(pdr.relating_product_definition))
       AND (pdr.relating_product_definition\product_definition.description = 
          'design definition path')
       AND (pdr.relating_product_definition.id = 
         'reference composition path')
       ))) = 0; 
END_RULE;

RULE reference_functional_unit_assignment_to_part_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  sar : BAG OF shape_aspect_relationship := 
QUERY( r <* shape_aspect_relationship | (r\shape_aspect_relationship.name =
'reference functional unit assignment to part' ) );
  d_bag : BAG OF STRING := [];
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  pd_bag : BAG OF product_definition;
END_LOCAL;

REPEAT i := 1 to SIZEOF(sar) by 1;
  IF EXISTS( sar[i]\shape_aspect_relationship.description ) THEN
    IF( NOT( sar[i]\shape_aspect_relationship.description IN d_bag ) ) THEN
      d_bag := d_bag + sar[i]\shape_aspect_relationship.description;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(d_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sar_bag := QUERY( r <* sar | (r\shape_aspect_relationship.description = d_bag[i]) );
  pd_bag := [];
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect.of_shape.definition ) THEN
      IF ( sar_bag[j].related_shape_aspect.of_shape.definition IN pd_bag )
                                                                    THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        pd_bag := pd_bag + 
                    sar_bag[j].related_shape_aspect.of_shape.definition;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\functional_decomposition_to_interconnect_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 10:08:46 liutkus Exp $
   ISO TC184/SC4/WG12 N3424 - ISO/CD-TS 10303-1677 Functional decomposition to interconnect design - EXPRESS MIM
*)


SCHEMA Functional_decomposition_to_interconnect_design_mim;
	USE FROM Fabrication_joint_mim;	-- ISO/TS 10303-1668
	USE FROM Network_functional_design_view_mim;	-- ISO/TS 10303-1704

RULE
design_functional_unit_allocation_to_fabrication_joint_unique_constraint
FOR ( product_definition_relationship );
LOCAL
  dfuatfj : BAG OF product_definition_relationship := 
      QUERY( pdr <* product_definition_relationship |
(pdr\product_definition_relationship.name = 'design functional unit allocation to fabrication joint') );
  pass : BOOLEAN := TRUE;
  pd_bag : BAG OF product_definition := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(dfuatfj) by 1;
  IF EXISTS( dfuatfj[i].relating_product_definition ) THEN
    IF ( dfuatfj[i].relating_product_definition.id = 
                    'design composition path' ) THEN
      IF ( dfuatfj[i].relating_product_definition IN pd_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        pd_bag := pd_bag + dfuatfj[i].relating_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE transmission_line_functional_unit_terminal_allocation_unique_constraint
 FOR ( shape_aspect_relationship );
LOCAL
  tlfuta : BAG OF shape_aspect_relationship := 
QUERY( r <* shape_aspect_relationship |
(r\shape_aspect_relationship.name = 'transmission line functional terminal allocation'));
  sa_bag : BAG OF shape_aspect;
  sar_bag : BAG OF shape_aspect_relationship;
  ut_bag : BAG OF shape_aspect := [];
  pass : BOOLEAN := TRUE;
END_LOCAL;

REPEAT i := 1 to SIZEOF(tlfuta) by 1;
  IF EXISTS( tlfuta[i].relating_shape_aspect ) THEN
    IF ( tlfuta[i].relating_shape_aspect\shape_aspect.description = 'unit terminal' )
                                                              THEN
      IF ( NOT ( tlfuta[i].relating_shape_aspect IN ut_bag ) ) THEN
        ut_bag := ut_bag + tlfuta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(ut_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sar_bag := QUERY( sar <* tlfuta | 
((sar.related_shape_aspect\shape_aspect.description =
'printed component join terminal') AND 
(sar.relating_shape_aspect :=: ut_bag[i])) );
  sa_bag := [];
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF ( sar_bag[j].related_shape_aspect IN sa_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        sa_bag := sa_bag + sar_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\functional_decomposition_with_nodal_representation_to_packaged_mapping_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/04/04 10:08:50 liutkus Exp $
   ISO TC184/SC4/WG12 N3430 - ISO/CD-TS 10303-1678 Functional decomposition with nodal representation to packaged mapping - EXPRESS MIM
*)


SCHEMA Functional_decomposition_with_nodal_representation_to_packaged_mapping_mim;
	USE FROM Physical_connectivity_definition_mim;	-- ISO/TS 10303-1755

RULE aggregate_connectivity_requirement_unique_constraint FOR
 ( product_definition_relationship );
LOCAL
  acr : BAG OF product_definition_relationship := 
                     QUERY( pdr <* product_definition_relationship |
                     (pdr\product_definition_relationship.name = 'aggregate connectivity requirement') );
  pass : BOOLEAN := TRUE;
  pd_bag : BAG OF product_definition := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(acr) by 1;
  IF EXISTS( acr[i].related_product_definition ) THEN
    IF ( acr[i].id = 'design composition path' ) THEN
      IF ( acr[i].related_product_definition IN pd_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        pd_bag := pd_bag + acr[i].related_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\functional_specification_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:08:31 liutkus Exp $
   ISO TC184/SC4/WG12 N3427 - ISO/CD-TS 10303-1679 Functional specification - EXPRESS MIM
*)


SCHEMA Functional_specification_mim;
	USE FROM Signal_mim;	-- ISO/TS 10303-1745
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705	
	
	USE FROM Application_context_schema(application_context_element);	

TYPE fs_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
   (functional_specification);
END_TYPE; 

TYPE fs_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
   (representation);
END_TYPE; 
	
ENTITY functional_specification
  SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'FUNCTIONAL_SPECIFICATION_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
       (rr\representation_relationship.name = 'functional characteristic category') AND
       ('FUNCTIONAL_SPECIFICATION_MIM.' +
       'EXTERNAL_DEFINITION' IN
       TYPEOF (rr.rep_1.items[1])))) = 1;
  WR2: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'FUNCTIONAL_SPECIFICATION_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       (rr\representation_relationship.name = 'characterizing signal' +
       'for functional specification')
       )) = 1;
  WR3: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'FUNCTIONAL_SPECIFICATION_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       (rr\representation_relationship.name = 'reference signal for' +
        'functional specification') 
       )) = 1;
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\functional_specification)) = 0;
  WR5: SELF\representation.name = '';
  WR6: SIZEOF(QUERY( pdr <* USEDIN (SELF,
       'FUNCTIONAL_SPECIFICATION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('FUNCTIONAL_SPECIFICATION_MIM.' +
        'COMPONENT_FUNCTIONAL_UNIT' IN TYPEOF (pdr.definition.definition)) 
        )) = 0;
END_ENTITY;
	
ENTITY functional_specification_definition
  SUBTYPE OF (functional_unit);
WHERE
  WR1: SELF.frame_of_reference\application_context_element.name =
             'functional network design';
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'FUNCTIONAL_SPECIFICATION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'FUNCTIONAL_SPECIFICATION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('FUNCTIONAL_SPECIFICATION_MIM.' +
       'FUNCTIONAL_SPECIFICATION' IN TYPEOF (pdr.used_representation))
       )) > 0))) > 0;
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\functional_unit_requirement_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/04/04 10:08:35 liutkus Exp $
   ISO TC184/SC4/WG12 N3433 - ISO/CD-TS 10303-1680 Functional unit requirement allocation - EXPRESS MIM
*)


SCHEMA Functional_unit_requirement_allocation_mim;
	USE FROM Network_functional_design_view_mim;	-- ISO/TS 10303-1704
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\generic_material_aspects_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.2 2004/03/04 13:24:37 budreckytej Exp $
   ISO TC184/SC4/WG12 N3658 - ISO/CD-TS 10303-1681 Generic material aspects - EXPRESS MIM
*)

SCHEMA Generic_material_aspects_mim;

	USE FROM Independent_property_mim;	-- ISO/TS 10303-1036
	USE FROM Independent_property_representation_mim;	-- ISO/TS 10303-1038
	USE FROM Property_assignment_mim;	-- ISO/TS 10303-1030

USE FROM material_property_definition_schema(
  material_designation,
  material_designation_characterization,
  material_property);

USE FROM material_property_representation_schema (
  data_environment,  
  material_property_representation);

ENTITY general_material_property 
SUBTYPE OF (general_property); 
WHERE 
WR1: SIZEOF( QUERY( gpa <* USEDIN(SELF,'MATERIAL_ASPECTS_MIM.GENERAL_PROPERTY_ASSOCIATION.BASE_DEFINITION') | 
  NOT ('MATERIAL_ASPECTS_MIM.MATERIAL_PROPERTY' IN TYPEOF(gpa.derived_definition)) )) = 0; 
END_ENTITY; 

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\geometric_tolerance_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.24 2004/11/17 23:29:32 thendrix Exp $
ISO TC184/SC4/WG12 N2877 - ISO/TS 10303-1051 Geometric tolerance - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1551
*) 


SCHEMA Geometric_tolerance_mim;

USE FROM aic_geometric_tolerances;    -- ISO 10303-519

USE FROM Derived_shape_element_mim;    -- ISO/TS 10303-1130

USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

USE FROM Measure_representation_mim;    -- ISO/TS 10303-1118

USE FROM product_property_representation_schema   -- ISO 10303-41
  (property_definition_representation,
   shape_representation); 

USE FROM qualified_measure_schema   -- ISO 10303-45
  (measure_qualification,
   precision_qualifier,
   type_qualifier,
   value_qualifier); 

USE FROM shape_aspect_definition_schema   -- ISO 10303-47
  (datum_target); 

USE FROM Shape_property_assignment_mim;    -- ISO/TS 10303-1032

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set,
   type_check_function); 


ENTITY placed_datum_target_feature
  SUBTYPE OF (datum_target);
DERIVE
  representation_associations : SET[0:?] OF property_definition_representation := get_shape_aspect_property_definition_representations(SELF);
WHERE
  WR1: SELF.description IN ['point','line','rectangle','circle', 'circular line'];
  WR2: SIZEOF (QUERY (pdr <* representation_associations | 'GEOMETRIC_TOLERANCE_MIM.SHAPE_REPRESENTATION_WITH_PARAMETERS' IN TYPEOF (pdr.used_representation) )) = 1;
  WR3: valid_datum_target_parameters(SELF);
END_ENTITY;

ENTITY shape_representation_with_parameters
  SUBTYPE OF (shape_representation);
WHERE
  WR1: SIZEOF( QUERY( i <* SELF.items | SIZEOF(['GEOMETRIC_TOLERANCE_MIM.PLACEMENT', 'GEOMETRIC_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM', 'GEOMETRIC_TOLERANCE_MIM.DESCRIPTIVE_REPRESENTATION_ITEM'] * TYPEOF(i)) = 1 )) = SIZEOF(SELF.items);
END_ENTITY;

RULE subtype_exclusiveness_geometric_tolerance FOR 
(geometric_tolerance);
WHERE
  WR1: SIZEOF(QUERY (gt <* geometric_tolerance | NOT (type_check_function(gt, ['GEOMETRIC_TOLERANCE_MIM.ANGULARITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.CIRCULAR_RUNOUT_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.COAXIALITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.CONCENTRICITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.CYLINDRICITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.FLATNESS_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.LINE_PROFILE_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.PARALLELISM_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.PERPENDICULARITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.POSITION_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.ROUNDNESS_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.STRAIGHTNESS_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.SURFACE_PROFILE_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.SYMMETRY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.TOTAL_RUNOUT_TOLERANCE'] , 3)))) = 0;
END_RULE; 

RULE subtype_mandatory_geometric_tolerance FOR 
(geometric_tolerance);
WHERE
  WR1: SIZEOF(QUERY (gt <* geometric_tolerance | NOT (type_check_function(gt, ['GEOMETRIC_TOLERANCE_MIM.ANGULARITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.CIRCULAR_RUNOUT_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.COAXIALITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.CONCENTRICITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.CYLINDRICITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.FLATNESS_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.LINE_PROFILE_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.PARALLELISM_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.PERPENDICULARITY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.POSITION_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.ROUNDNESS_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.STRAIGHTNESS_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.SURFACE_PROFILE_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.SYMMETRY_TOLERANCE', 'GEOMETRIC_TOLERANCE_MIM.TOTAL_RUNOUT_TOLERANCE'] , 0)))) = 0;
END_RULE; 

FUNCTION get_shape_aspect_property_definition_representations
 (s_a_instance : shape_aspect) : SET OF property_definition_representation; 
LOCAL
pd_set : SET OF property_definition := [];
pdr_set : SET OF property_definition_representation := [] ;
END_LOCAL;
pd_set := bag_to_set(USEDIN(s_a_instance, 'PRODUCT_PROPERTY_DEFINITION_SCHEMA.PROPERTY_DEFINITION.DEFINITION'));
IF (SIZEOF(pd_set) < 1) THEN
RETURN (pdr_set);
END_IF;
REPEAT i := 1 TO HIINDEX(pd_set);
pdr_set := pdr_set + (QUERY(pdr <* USEDIN(pd_set[i], 'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.' + 'PROPERTY_DEFINITION_REPRESENTATION.' + 'DEFINITION') |
'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.SHAPE_DEFINITION_REPRESENTATION' IN TYPEOF(pdr)));
END_REPEAT;
RETURN (pdr_set);      
END_FUNCTION; 

FUNCTION valid_datum_target_parameters
 (pdf : placed_datum_target_feature) : BOOLEAN; 
LOCAL

rep_set : SET OF representation := [] ;

parameter_representations: SET OF representation;
END_LOCAL;


REPEAT i := 1 TO HIINDEX(pdf.representation_associations);
rep_set := rep_set + pdf.representation_associations[i].used_representation;
END_REPEAT;
 
parameter_representations := QUERY(rep <* rep_set |
('GEOMETRIC_TOLERANCE_MIM.SHAPE_REPRESENTATION_WITH_PARAMETERS' IN
TYPEOF(rep)));


IF (SIZEOF( QUERY( srwp <* parameter_representations |
          (SIZEOF( QUERY( i <* srwp.items |
          (i.name='orientation') AND
          ('GEOMETRIC_TOLERANCE_MIM.PLACEMENT' IN TYPEOF(i)))) = 1))) <> 1) THEN
   RETURN(FALSE);
END_IF;

CASE pdf\shape_aspect.description OF
'point': RETURN(SIZEOF(QUERY( srwp <* parameter_representations |
              (SIZEOF(srwp.items) = 1))) = 1);

'circle': RETURN((SIZEOF( QUERY( srwp <* parameter_representations |
              (SIZEOF(srwp.items) = 2))) = 1) AND
             (SIZEOF( QUERY( srwp <* parameter_representations |
              (SIZEOF( QUERY( i <* srwp.items |
                (i.name='target diameter') AND
                (SIZEOF(['GEOMETRIC_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM',
		   'GEOMETRIC_TOLERANCE_MIM.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)
                 ) = 2) )) = 1))) = 1));

'line': RETURN(SIZEOF( QUERY( srwp <* parameter_representations |
              (SIZEOF( QUERY( i <* srwp.items |
                (i.name='target length') AND
                (SIZEOF(['GEOMETRIC_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM',
		'GEOMETRIC_TOLERANCE_MIM.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)
                 ) = 2) )) = 1))) = 1);

'rectangle': RETURN((SIZEOF( QUERY( srwp <* parameter_representations |
              (SIZEOF(srwp.items)= 3))) = 1) AND
             (SIZEOF( QUERY( srwp <* parameter_representations |
              (SIZEOF( QUERY( i <* srwp.items |
                (i.name='target length') AND
                (SIZEOF(['GEOMETRIC_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM',
		'GEOMETRIC_TOLERANCE_MIM.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)
                 ) = 2))) = 1))) = 1) AND
              (SIZEOF( QUERY( srwp <* parameter_representations |
               (SIZEOF( QUERY( i <* srwp.items |
                 (i.name='target width') AND
                 (SIZEOF(['GEOMETRIC_TOLERANCE_MIM.MEASURE_REPRESENTATION_ITEM',
 		'GEOMETRIC_TOLERANCE_MIM.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)
                  ) = 2))) = 1) )) = 1));
OTHERWISE : RETURN(FALSE);
END_CASE;
   END_FUNCTION; 

END_SCHEMA;  -- Geometric_tolerance_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\geometrically_bounded_surface_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/10/22 13:54:55 darla Exp $
 ISO TC184/SC4/WG12 N1274 - ISO/TS 10303-1507 Geometrically bounded surface - EXPRESS MIM
*)
SCHEMA Geometrically_bounded_surface_mim;

USE FROM aic_geometrically_bounded_surface;

USE FROM Elemental_geometric_shape_mim;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\group_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.1 2005/02/04 07:18:09 liutkus Exp $
 ISO TC184/SC4/WG12 N3246 - ISO/TS 10303-1113 Group - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2227
*) 


SCHEMA Group_mim;

USE FROM group_schema   -- ISO 10303-41
  (group,
   group_relationship); 

USE FROM management_resources_schema   -- ISO 10303-41
  (group_assignment); 

USE FROM Basic_attribute_schema(
	id_attribute, 
	id_attribute_select); -- ISO/IS 10303-41

TYPE groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT;
WHERE
  WR1: NOT ('GROUP_MIM.GROUP' IN TYPEOF(SELF));
END_TYPE; 

ENTITY applied_group_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:?] OF groupable_item;
END_ENTITY;

END_SCHEMA;  -- Group_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\identification_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.11 2004/10/28 16:58:42 darla Exp $
 ISO TC184/SC4/WG12 N2915 - ISO/TS 10303-1021 Identification assignment - EXPRESS MIM
*)

SCHEMA Identification_assignment_mim;

USE FROM management_resources_schema   -- ISO 10303-41
  (identification_assignment,
   identification_role); 


TYPE identification_item = EXTENSIBLE SELECT;
END_TYPE; 

TYPE versionable_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY applied_identification_assignment
  SUBTYPE OF (identification_assignment);
  items : SET[1:?] OF identification_item;
END_ENTITY;

END_SCHEMA;  -- Identification_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\incomplete_data_reference_mechanism_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.3 2005/02/03 12:05:36 rocc Exp $
   ISO/TC184/SC4 WG12N2635 - ISO/TS 10303- incomplete_data_reference_mechanism - EXPRESS MIM
   Supersedes ISO TC184/SC4/WG12N2069 
*)

SCHEMA Incomplete_data_reference_mechanism_mim;

USE FROM Classification_assignment_mim;

USE FROM Document_definition_mim;

USE FROM File_identification_mim;

USE FROM Part_view_definition_mim;


TYPE idrm_marked_item  = EXTENSIBLE SELECT BASED_ON classification_item WITH
      (product_definition, document_file);
END_TYPE;


END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\independent_property_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.10 2004/10/22 14:15:40 darla Exp $
 ISO TC184/SC4/WG12 N1238 - ISO/TS 10303-1036 Independent property - EXPRESS MIM
*)
SCHEMA Independent_property_mim;

USE FROM product_property_definition_schema
(general_property,
 general_property_relationship);

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\independent_property_representation_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.9 2004/10/22 14:17:50 darla Exp $
 ISO TC184/SC4/WG12 N1244 - ISO/TS 10303-1038 Independent property representation - EXPRESS MIM
*)
SCHEMA Independent_property_representation_mim;

USE FROM Foundation_representation_mim;	-- ISO 10303-1006
USE FROM Independent_property_mim;

USE FROM product_property_representation_schema
  (property_definition_representation);	-- ISO 10303-41

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_2d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/02/04 15:35:33 budreckytej Exp $
   ISO TC184/SC4/WG12 N3436 - ISO/CD-TS 10303-1682 Interconnect 2d shape - EXPRESS MIM
*)


SCHEMA Interconnect_2d_shape_mim;
	USE FROM Fabrication_joint_mim;	-- ISO/TS 10303-1668
	USE FROM Layered_interconnect_module_with_design_intent_modifications_mim;	-- ISO/TS 10303-1699
	USE FROM Physical_unit_2d_design_view_mim;	-- ISO/TS 10303-1724

RULE design_intent_modification_planar_position_constraint FOR
( mapped_item );
WHERE
 WR1: SIZEOF(QUERY(mi <* mapped_item |
     (mi\representation_item.name = 'design intent modification planar position')
     AND NOT('INTERCONNECT_2D_SHAPE_MIM.'
       + 'AXIS2_PLACEMENT_2D' IN TYPEOF(mi.mapping_target)))) = 0;
 WR2: SIZEOF(QUERY(mi <* mapped_item |
    (mi\representation_item.name = 'design intent modification planar position')
       AND (SIZEOF(QUERY(rep <* USEDIN(mi,       
       'INTERCONNECT_2D_SHAPE_MIM.'
       + 'REPRESENTATION.ITEMS') |
       SIZEOF(USEDIN(rep,
       'INTERCONNECT_2D_SHAPE_MIM.'
     + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION')) = 0
       )) = 0))) = 0;
 WR3: SIZEOF(QUERY(mi <* mapped_item |
    (mi\representation_item.name = 'design intent modification planar position')
     AND NOT('INTERCONNECT_2D_SHAPE_MIM.'
       + 'AXIS2_PLACEMENT_2D' IN
      TYPEOF(mi.mapping_source.mapped_representation)))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_3d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/02/04 15:35:52 budreckytej Exp $
   ISO TC184/SC4/WG12 N3439 - ISO/CD-TS 10303-1683 Interconnect 3d shape - EXPRESS MIM
*)


SCHEMA Interconnect_3d_shape_mim;
	USE FROM Interconnect_non_planar_shape_mim;	-- ISO/TS 10303-1688

RULE design_intent_modification_3d_position_constraint FOR 
( mapped_item );
WHERE
  WR1: SIZEOF(QUERY(mi <* mapped_item |
       (mi\representation_item.name = 'positioned design intent modification 3d shape')
       AND NOT('INTERCONNECT_3D_SHAPE_MIM.'
       + 'AXIS2_PLACEMENT_3D' IN TYPEOF(mi.mapping_target)))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_module_connection_routing_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:08:49 liutkus Exp $
   ISO TC184/SC4/WG12 N3442 - ISO/CD-TS 10303-1684 Interconnect module connection routing - EXPRESS MIM
*)


SCHEMA Interconnect_module_connection_routing_mim;
	USE FROM Fabrication_joint_mim;	-- ISO/TS 10303-1668
	USE FROM Interconnect_module_with_macros_mim;	-- ISO/TS 10303-1687
	USE FROM Layered_interconnect_module_with_design_intent_modifications_mim;	-- ISO/TS 10303-1699
	
ENTITY direct_stratum_component_join_implementation
  SUBTYPE OF (shape_aspect_relationship);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect_relationship ||
SELF\direct_stratum_component_join_implementation)) = 0;
END_ENTITY;

ENTITY indirect_stratum_component_join_implementation
  SUBTYPE OF (plated_inter_stratum_feature);
END_ENTITY;

RULE junction_vertex_allocation_constraint FOR 
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'junction vertex allocation')
       AND NOT ((('INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.'
        + 'LAYER_CONNECTION_POINT' IN TYPEOF(sar.related_shape_aspect))
       AND (sar.related_shape_aspect\shape_aspect.description = 'explicitly located')) OR
       (('INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.'
        + 'JOIN_SHAPE_ASPECT' IN TYPEOF(sar.related_shape_aspect))
       AND (sar.related_shape_aspect\shape_aspect.name = 'inter stratum join'))
       ))) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'junction vertex allocation') AND
       NOT (sar.relating_shape_aspect\shape_aspect.description = 
                        'topological junction'))) = 0;
END_RULE;

RULE junction_vertex_allocation_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  jva : BAG OF shape_aspect_relationship := QUERY( sar <*
shape_aspect_relationship | (sar\shape_aspect_relationship.name = 'junction vertex allocation') );
  pass : BOOLEAN := TRUE;
  sa_bag : BAG OF shape_aspect := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(jva) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  IF EXISTS( jva[i].relating_shape_aspect ) THEN
    IF ( jva[i].relating_shape_aspect\shape_aspect.description = 
                       'topological junction' ) THEN
      IF ( jva[i].relating_shape_aspect IN sa_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        sa_bag := sa_bag + jva[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
(* invalid csa	
RULE physical_connectivity_abstraction_map_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  pcam : BAG OF shape_aspect_relationship := 
        QUERY( r <* shape_aspect_relationship |
(r\shape_aspect_relationship.name = 'physical to topological abstraction map') );
  pce_bag : BAG OF physical_connectivity_element := [];
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  csa_bag : BAG OF component_shape_aspect;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pcam) by 1;
  IF EXISTS( pcam[i].related_shape_aspect ) THEN
    IF ( 'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' +
'PHYSICAL_CONNECTIVITY_ELEMENT' IN 
TYPEOF(pcam[i].related_shape_aspect) ) THEN
      IF ( NOT ( pcam[i].related_shape_aspect IN pce_bag )) THEN
        pce_bag := pce_bag + pcam[i].related_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pce_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  csa_bag := [];
  sar_bag := QUERY( sar <* pcam | (sar.related_shape_aspect :=: 
                 pce_bag[i]) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    IF ( (
'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' +
'COMPONENT_SHAPE_ASPECT' IN 
TYPEOF(sar_bag[j].relating_shape_aspect))
AND (sar_bag[j].relating_shape_aspect\shape_aspect.description IN [
'conductive interconnect element with pre defined transitions',
'conductive interconnect element with user defined single transition']) )
                                                      THEN
      IF EXISTS( sar_bag[j].relating_shape_aspect ) THEN
        IF ( sar_bag[j].relating_shape_aspect IN csa_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          csa_bag := csa_bag + sar_bag[j].relating_shape_aspect;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
*)
RULE topological_junction_unique_constraint FOR
 ( shape_aspect );
LOCAL
  tj : BAG OF shape_aspect := 
   QUERY( r <* shape_aspect | (r\shape_aspect.description = 'topological junction'));
  sar_bag : BAG OF shape_aspect_relationship;
  s_bag : BAG OF shape_aspect := [];
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(tj) by 1;
  sar_bag := QUERY( sar <* USEDIN( tj[i], 
'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | 
((sar\shape_aspect_relationship.name = 'topological junction scope') AND
(('INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' + 
'PHYSICAL_CONNECTIVITY_DEFINITION') IN
TYPEOF(sar.relating_shape_aspect)) ) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].relating_shape_aspect ) THEN
      IF ( NOT ( sar_bag[j].relating_shape_aspect IN s_bag ) ) THEN
        s_bag := s_bag + sar_bag[j].relating_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(s_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sar_bag := QUERY( sar <* USEDIN( s_bag[i], 
'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT' ) | 
(sar\shape_aspect_relationship.name = 'topological junction scope') );
  name_bag := [];
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect\shape_aspect.name ) THEN
      IF ( sar_bag[j].related_shape_aspect\shape_aspect.name IN name_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        name_bag := name_bag + sar_bag[j].related_shape_aspect\shape_aspect.name;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE explicitly_located_layer_connection_point_unique_constraint FOR
 ( layer_connection_point );
LOCAL
  ellcp : BAG OF layer_connection_point := 
   QUERY( lcp <* layer_connection_point
| (lcp\shape_aspect.description = 'explicitly located') );
  s_bag : BAG OF stratum := [];
  lcp_bag : BAG OF layer_connection_point;
  pd_bag : BAG OF property_definition;
  pdr_bag : BAG OF property_definition_representation;
  pass : BOOLEAN := TRUE;
  cp_bag : BAG OF cartesian_point;
END_LOCAL;

REPEAT i := 1 to SIZEOF(ellcp) by 1;
  IF EXISTS( ellcp[i].of_shape.definition ) THEN
    IF( 'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' +
'STRATUM' IN TYPEOF(ellcp[i].of_shape.definition) ) THEN
      IF( NOT( ellcp[i].of_shape.definition IN s_bag ) ) THEN
        s_bag := s_bag + ellcp[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(s_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  cp_bag := [];
  lcp_bag := 
    QUERY( lcp <* ellcp | (lcp.of_shape.definition :=: s_bag[i]) );
  REPEAT j := 1 to SIZEOF(lcp_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pd_bag := USEDIN( lcp_bag[j], 
'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.'
+ 'PROPERTY_DEFINITION.DEFINITION');
    REPEAT k := 1 to SIZEOF(pd_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      pdr_bag := QUERY( pdr <* USEDIN( pd_bag[k],
'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' +
'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
((pdr.used_representation\representation.name =
'connection point location') AND (
'INTERCONNECT_MODULE_CONNECTION_ROUTING_MIM.' +
'CARTESIAN_POINT' IN TYPEOF(pdr.used_representation.items[1]))) );
      REPEAT l := 1 to SIZEOF(pdr_bag) by 1;
        IF EXISTS( pdr_bag[l].used_representation.items[1] ) THEN
          IF ( pdr_bag[l].used_representation.items[1] IN cp_bag ) THEN
            pass := FALSE;
            ESCAPE;
          ELSE
            cp_bag := cp_bag + pdr_bag[l].used_representation.items[1];
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_module_to_assembly_module_relationship_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 10:09:08 liutkus Exp $
   ISO TC184/SC4/WG12 N3445 - ISO/CD-TS 10303-1685 Interconnect module to assembly module relationship - EXPRESS MIM
*)


SCHEMA Interconnect_module_to_assembly_module_relationship_mim;
	USE FROM Interconnect_module_connection_routing_mim;	-- ISO/TS 10303-1684
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698

TYPE imtamr_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (shape_aspect_relationship);
END_TYPE;

TYPE imtamr_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (component_definition,
      component_feature,
      descriptive_representation_item,
      representation,
      physical_component_interface_terminal,
      component_terminal,
      laminate_component_interface_terminal);
END_TYPE;

RULE component_feature_to_layout_feature_relationship_constraint FOR 
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'component feature to layout feature')
       AND NOT(SIZEOF(
       [
       'INTERCONNECT_MODULE_TO_ASSEMBLY_MODULE_RELATIONSHIP_MIM.'
       + 'PHYSICAL_COMPONENT_INTERFACE_TERMINAL',
       'INTERCONNECT_MODULE_TO_ASSEMBLY_MODULE_RELATIONSHIP_MIM.'
       + 'COMPONENT_TERMINAL']
       * TYPEOF(sar.relating_shape_aspect)) > 0)
       )) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'component feature to layout feature')
       AND NOT(SIZEOF(
       [
       'INTERCONNECT_MODULE_TO_ASSEMBLY_MODULE_RELATIONSHIP_MIM.'
       + 'STRATUM_FEATURE']
       * TYPEOF(sar.related_shape_aspect)) > 0)
       )) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_module_usage_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 10:08:48 liutkus Exp $
   ISO TC184/SC4/WG12 N3448 - ISO/CD-TS 10303-1686 Interconnect module usage view - EXPRESS MIM
*)


SCHEMA Interconnect_module_usage_view_mim;
	USE FROM Extended_geometric_tolerance_mim;	-- ISO/TS 10303-1666
	USE FROM Functional_assignment_to_part_mim;	-- ISO/TS 10303-1674
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705	
(**	
ENTITY library_defined_interconnect_definition
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SELF\product_definition.name = 'interconnect module';
END_ENTITY;
*)
ENTITY interconnect_definition
 SUBTYPE OF (physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR
       (SELF\product_definition.name = 'interconnect module');
  WR3: (NOT (SELF.frame_of_reference.name = 'physical design')) OR
       (SIZEOF (QUERY (du <* QUERY (pdr <* USEDIN (SELF,
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'INTERCONNECT_DEFINITION', 
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'EXTERNALLY_DEFINED_INTERCONNECT_DEFINITION', 
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'LIBRARY_DEFINED_INTERCONNECT_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name = 
       'interconnect module')
)) = 1);
END_ENTITY;

ENTITY interconnect_module_cutout_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR2: 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce <* QUERY (sar <* USEDIN (SELF,
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('interconnect module cutout surface' = 
       ce.relating_shape_aspect\shape_aspect.description) )) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\interconnect_module_cutout_segment_surface)) = 0;
END_ENTITY;

ENTITY interconnect_module_edge_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR2: 'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce <* QUERY (sar <* USEDIN (SELF,
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('interconnect module edge surface' = 
       ce.relating_shape_aspect\shape_aspect.description) )) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\interconnect_module_edge_segment_surface)) = 0;
END_ENTITY;

ENTITY interconnect_module_interface_terminal
  SUBTYPE OF (interconnect_module_terminal);
END_ENTITY;

ENTITY interconnect_module_terminal
  SUPERTYPE OF (interconnect_module_interface_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
  WR2: ('INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.
       frame_of_reference.name = 
       'physical design usage') AND
       (SELF.of_shape.definition\product_definition.name = 
       'interconnect module');
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) >= 1)) >= 1; 
  WR4: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) <= 1;
  WR5: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 
       'connection zone')) <= 1;
END_ENTITY;

RULE interconnect_module_surface_feature_constraint FOR
 (shape_aspect);
WHERE
  WR1: SIZEOF(QUERY(sa <* shape_aspect |
      ((sa\shape_aspect.description = 'interconnect module edge segment surface') OR
      (sa\shape_aspect.description = 'interconnect module cavity surface') OR
      (sa\shape_aspect.description = 'interconnect module cutout surface') OR
      (sa\shape_aspect.description = 'interconnect module edge surface') OR
      (sa\shape_aspect.description = 'interconnect module primary surface') OR
      (sa\shape_aspect.description = 'interconnect module secondary surface') OR
      (sa\shape_aspect.description = 'interconnect module surface feature'))
       AND NOT (
       (sa.of_shape.definition\product_definition.name = 'interconnect module')
       AND (sa.of_shape.definition.frame_of_reference.name = 
       'physical design usage')
       AND(('INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'PHYSICAL_UNIT' IN TYPEOF(sa.of_shape.definition))
       OR ('INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'EXTERNALLY_DEFINED_PHYSICAL_UNIT' IN TYPEOF(sa.of_shape.definition))
       OR ('INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
       'LIBRARY_DEFINED_PHYSICAL_UNIT' IN TYPEOF(sa.of_shape.definition)))
       ))) = 0;
END_RULE;

RULE located_interconnect_module_thickness_requirement_unique_constraint FOR
 ( property_definition_representation );
LOCAL
  limrt : BAG OF property_definition_representation := 
QUERY( pdr <* property_definition_representation
| (pdr.definition\property_definition.name = 
 'located interconnect module thickness') AND
  ('INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
  'SHAPE_ASPECT' IN TYPEOF(pdr.definition.definition)));
  pu_bag : BAG OF physical_unit := [];
  pdr_bag : BAG OF property_definition_representation;
  rr_bag : BAG OF representation_relationship;
  pass : BOOLEAN := TRUE;
  ri_bag : BAG OF representation_item;
END_LOCAL;

REPEAT i := 1 to SIZEOF(limrt) by 1;
  IF EXISTS( limrt[i].definition.definition.of_shape.definition ) THEN
    IF (('INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
         'PHYSICAL_UNIT' IN
         TYPEOF(limrt[i].definition.definition.of_shape.definition)))
        THEN
      IF ( NOT ( limrt[i].definition.definition.of_shape.definition IN 
                 pu_bag )) THEN
        pu_bag := pu_bag + 
                  limrt[i].definition.definition.of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ri_bag := [];
  pdr_bag := QUERY( pdr <* limrt | 
          (pdr.definition.definition.of_shape.definition :=: 
           pu_bag[i]) );
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    rr_bag := QUERY( rr <* USEDIN( pdr_bag[j].used_representation,
'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
'REPRESENTATION_RELATIONSHIP.REP_2' ) | 
(rr\representation_relationship.name = 'reference location') );
    REPEAT k := 1 to SIZEOF(rr_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      REPEAT l := 1 to SIZEOF(rr_bag[k].rep_1.items) by 1;
        IF ( ('INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
'AXIS2_PLACEMENT_2D' IN TYPEOF(rr_bag[k].rep_1.items[l])) OR (
'INTERCONNECT_MODULE_USAGE_VIEW_MIM.' +
'AXIS2_PLACEMENT_3D' IN TYPEOF(rr_bag[k].rep_1.items[l])) ) THEN
          IF EXISTS( rr_bag[k].rep_1.items[l] ) THEN
            IF ( rr_bag[k].rep_1.items[l] IN ri_bag ) THEN
              pass := FALSE;
              ESCAPE;
            ELSE
              ri_bag := ri_bag + rr_bag[k].rep_1.items[l];
            END_IF;
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_module_with_macros_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 10:09:07 liutkus Exp $
   ISO TC184/SC4/WG12 N3451 - ISO/CD-TS 10303-1687 Interconnect module with macros - EXPRESS MIM
*)


SCHEMA Interconnect_module_with_macros_mim;
	USE FROM Assembly_module_with_interconnect_component_mim;	-- ISO/TS 10303-1643
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698

  ENTITY interconnect_module_macro_component
    SUBTYPE OF (assembly_component);
  END_ENTITY;
	
ENTITY interconnect_module_macro_component_join_terminal
  SUBTYPE OF (physical_component_terminal);
WHERE
  WR1: NOT (SELF\shape_aspect.description IN 
       ['assembly module component terminal', 
        'bare die component terminal', 
       'component termination passage join terminal', 
       'conductive interconnect element terminal', 
       'interconnect component join terminal', 
       'land join terminal', 
       'minimally defined component terminal',
       'non functional land join terminal', 
       'packaged component join terminal', 
       'printed component join terminal', 'package terminal occurrence',
       'via terminal']);
END_ENTITY;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_non_planar_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 10:09:05 liutkus Exp $
   ISO TC184/SC4/WG12 N3454 - ISO/CD-TS 10303-1688 Interconnect non planar shape - EXPRESS MIM
*)


SCHEMA Interconnect_non_planar_shape_mim;
	USE FROM Layered_interconnect_module_with_design_intent_modifications_mim;	-- ISO/TS 10303-1699
	USE FROM Physical_unit_non_planar_design_view_mim;	-- ISO/TS 10303-1613
	USE FROM Part_template_2d_shape_mim;	-- ISO/TS 10303-1716

ENTITY manifold_constraining_context_dependent_shape_representation
  SUBTYPE OF (context_dependent_shape_representation, representation_relationship);
END_ENTITY; 

ENTITY shape_representation_relationship_with_transformation
  SUBTYPE OF (shape_representation_relationship, representation_relationship_with_transformation);
END_ENTITY; 
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_physical_requirement_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 10:09:10 liutkus Exp $
   ISO TC184/SC4/WG12 N3457 - ISO/CD-TS 10303-1689 Interconnect physical requirement allocation - EXPRESS MIM
*)


SCHEMA Interconnect_physical_requirement_allocation_mim;
	USE FROM Fabrication_technology_mim;	-- ISO/TS 10303-1670

ENTITY thermal_isolation_removal_template_definition
  SUBTYPE OF (part_template_definition);
(*
WHERE
  WR1: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'TEXT_LITERAL' IN
       TYPEOF (it))) = 1)) = 1))) = 0);
  WR2: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font vertical extent'))) = 1
       )) = 1))) = 0);
  WR3: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'INTERCONNECT_PHYSICAL_REQUIREMENT_ALLOCATION_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font horizontal extent'))) = 1
       )) = 1))) = 0);
*)
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interconnect_placement_requirements_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:08:51 liutkus Exp $
   ISO TC184/SC4/WG12 N3460 - ISO/CD-TS 10303-1690 Interconnect placement requirements - EXPRESS MIM
*)


SCHEMA Interconnect_placement_requirements_mim;
	USE FROM Assembly_component_placement_requirements_mim;	-- ISO/TS 10303-1634
	USE FROM Land_mim;	-- ISO/TS 10303-1692
	USE FROM Layered_interconnect_module_3d_shape_mim;	-- ISO/TS 10303-1697
	USE FROM Part_template_extension_mim;	-- ISO/TS 10303-1718
	
TYPE ipr_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (group_shape_aspect);
END_TYPE;
	
ENTITY interconnect_module_design_object_category
  SUBTYPE OF (characterized_object);
WHERE
  WR1: SELF\characterized_object.description IN 
       ['cutout category', 
       'fill area category', 
       'inter stratum feature category', 
       'stratum feature category', 
       'via category'];
END_ENTITY;

RULE interconnect_module_constraint_region_constraint FOR
  ( group_shape_aspect );
WHERE

  WR1: SIZEOF(QUERY(gsa <* group_shape_aspect |
       NOT(gsa\shape_aspect.description =
       'interconnect module constraint region')
       OR NOT (SIZEOF (QUERY (pd <* USEDIN (gsa,
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       (('INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.' +
       'CSG_2D_SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) OR
       (pdr.used_representation.context_of_items\geometric_representation_context.coordinate_space_dimension = 3))
       )) = 1))) = 0)
       )) = 0;
END_RULE;

RULE layout_spacing_requirement_non_conforming_design_object_constraint FOR
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'layout spacing requirement violation')
       AND (SIZEOF([
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'COMPONENT_TERMINAL',
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'COMPONENT_INTERFACE_TERMINAL',
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'STRATUM_FEATURE'] * TYPEOF(sar.related_shape_aspect)
       ) = 0))) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'layout spacing requirement violation')
       AND (SIZEOF([
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'COMPONENT_TERMINAL',
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'COMPONENT_INTERFACE_TERMINAL',
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'STRATUM_FEATURE'] * TYPEOF(sar.relating_shape_aspect)
       ) = 0))) = 0;
  WR3: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'layout spacing requirement violation')
       AND NOT(SIZEOF(QUERY(grp <* USEDIN(sar,
       'INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'PROPERTY_DEFINITION.DEFINITION') |
       ('INTERCONNECT_PLACEMENT_REQUIREMENTS_MIM.'
       + 'GROUP' IN TYPEOF(grp))
       AND (grp\group.name = 'layout spacing requirements property')
       )) = 1))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\interface_component_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 10:08:45 liutkus Exp $
   ISO TC184/SC4/WG12 N3463 - ISO/CD-TS 10303-1691 Interface component - EXPRESS MIM
*)


SCHEMA Interface_component_mim;
	USE FROM Physical_component_feature_mim;	-- ISO/TS 10303-1721
	
ENTITY physical_component_interface_terminal
 SUBTYPE OF (physical_component_feature);
WHERE
  WR1: SELF\shape_aspect.description IN [
       'interconnect component interface terminal',
       'packaged connector component interface terminal'];
  WR2: 'INTERFACE_COMPONENT_MIM.' +
       'COMPONENT_DEFINITION' IN 
       TYPEOF (SELF.of_shape.definition);
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'INTERFACE_COMPONENT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) <= 1;
  WR4: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'INTERFACE_COMPONENT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design usage')) <= 1;
  WR5: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       ('INTERFACE_COMPONENT_MIM.' +
       'INTERFACE_COMPONENT_DEFINITION' IN 
       TYPEOF (SELF.of_shape.definition));
  WR6: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (SELF.of_shape.definition\product_definition.
        frame_of_reference.name = 
       'physical occurrence');
  WR7: (NOT (SELF\shape_aspect.description = 
       'interconnect component interface terminal')) OR
       ((SIZEOF (QUERY (sar <* USEDIN (SELF,
       'INTERFACE_COMPONENT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1)
       AND 
       NOT(SELF.of_shape.definition\product_definition.description 
       IN ['assembly module component', 'bare die component',
       'interconnect module component', 'laminate component',
       'packaged component']));
  WR8: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (SELF.product_definitional);
  WR9: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (('INTERFACE_COMPONENT_MIM.' +
       'PACKAGED_COMPONENT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.description = 
       'packaged connector component') AND
       (SELF.of_shape.definition\product_definition.
       frame_of_reference.name = 
       'physical occurrence'));
 WR10: (NOT (SELF\shape_aspect.description = 
       'packaged connector component interface terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'INTERFACE_COMPONENT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('INTERFACE_COMPONENT_MIM.' +
       'PACKAGED_PART_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'interface terminal'))) = 1);
END_ENTITY;

ENTITY interface_component_definition
  SUBTYPE OF (assembly_component);
WHERE
  WR1: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'INTERFACE_COMPONENT_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa <* USEDIN (pd,
       'INTERFACE_COMPONENT_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('INTERFACE_COMPONENT_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL' IN 
       TYPEOF (sa)) AND
       (sa\shape_aspect.description IN ['interconnect component interface terminal',
       'packaged connector component interface terminal']))) >= 1)) >= 1);
END_ENTITY;

RULE component_feature_unique_constraint FOR
 ( component_terminal, physical_component_interface_terminal );
LOCAL
  ct : BAG OF shape_aspect := 
     QUERY( ct <* component_terminal | (ct\shape_aspect.description IN 
['assembly module component terminal',
'bare die component terminal',
'interconnect component join terminal',
'interconnect module component terminal',
'interconnect module component stratum based terminal',
'minimally defined component terminal',
'packaged component join terminal']) );
  cit : BAG OF shape_aspect := 
         QUERY( cit <* physical_component_interface_terminal | (
cit\shape_aspect.description IN ['interconnect component interface terminal',
'packaged connector component interface terminal']) );
  cf : BAG OF shape_aspect;
  cd_bag : BAG OF component_definition := [];
  sa_bag : BAG OF shape_aspect;
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  def_bag : BAG OF shape_aspect;
END_LOCAL;

cf := ct + cit;
REPEAT i := 1 to SIZEOF(cf) by 1;
  IF EXISTS( cf[i].of_shape.definition ) THEN
    IF ( 'COMPONENT_FEATURE_MIM.' +
'COMPONENT_DEFINITION' IN TYPEOF(cf[i].of_shape.definition) ) THEN
      IF ( NOT ( cf[i].of_shape.definition IN cd_bag )) THEN
        cd_bag := cd_bag + cf[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(cd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  def_bag := [];
  sa_bag := QUERY( sa <* cf | (sa.of_shape.definition :=: cd_bag[i]) );
  REPEAT j := 1 to SIZEOF(sa_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    sar_bag := QUERY( sar <* USEDIN( sa_bag[j],
'COMPONENT_FEATURE_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | 
             (sar\shape_aspect_relationship.name = 'instantiated feature') );
    REPEAT k := 1 to SIZEOF(sar_bag) by 1;
      IF EXISTS( sar_bag[k].relating_shape_aspect ) THEN
        IF ( sar_bag[k].relating_shape_aspect IN def_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          def_bag := def_bag + sar_bag[k].relating_shape_aspect;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\item_definition_structure_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.1 2005/03/17 07:25:04 liutkus Exp $
   ISO/TC184/SC4 WG12N2620 - ISO/TS 10303-1345 item_definition_structure - EXPRESS MIM
   Supersedes ISO TC184/SC4/WG12N1767
*)

SCHEMA Item_definition_structure_mim;

USE FROM Effectivity_application_mim;

USE FROM Part_occurrence_mim;

USE FROM Product_structure_mim;

REFERENCE FROM Single_part_representation_mim
	(categories_of_product);


TYPE effectivity_item_for_replacement  = SELECT BASED_ON effectivity_item WITH
  (product_definition_relationship);
END_TYPE;


RULE restrict_assembly_category FOR (product_definition);
LOCAL
  assembly_definitions: SET OF product_definition := [];
END_LOCAL;
  assembly_definitions :=  QUERY( pd <* product_definition | 
    SIZEOF( QUERY( pdca <* USEDIN( pd, 'ITEM_DEFINITION_STRUCTURE_MIM.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.DEFINITION') |
    pdca.frame_of_reference.name= 'assembly definition')) > 0 );
WHERE
WR1: SIZEOF( QUERY( pd <* assembly_definitions | 
   NOT ('assembly' IN categories_of_product(pd.formation.of_product)) ))= 0;
END_RULE;

RULE restrict_product_definitions_for_part_definition_relationship FOR
    (product_definition_relationship);
WHERE
WR1: SIZEOF ( QUERY ( pdr <* product_definition_relationship |
     ( pdr.name IN [ 'geometrical relationship' , 'definition replacement' ] ) AND 
	( ( pdr.relating_product_definition.frame_of_reference.name <>'part definition' ) OR 
	( pdr.related_product_definition.frame_of_reference.name <>'part definition' ) ) ) ) =0;
END_RULE;

RULE product_definition_replacement_requires_effectivity_assignment FOR 
	(product_definition_relationship);
WHERE 
WR1: SIZEOF( QUERY( pdr <* product_definition_relationship | 
	(pdr.name = 'definition replacement') AND 
	(SIZEOF( USEDIN(pdr,'ITEM_DEFINITION_STRUCTURE_MIM.APPLIED_EFFECTIVITY_ASSIGNMENT.ITEMS') ) = 0) ))
	 = 0; 
END_RULE; 

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\land_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/04/04 10:09:11 liutkus Exp $
   ISO TC184/SC4/WG12 N3466 - ISO/CD-TS 10303-1692 Land - EXPRESS MIM
*)


SCHEMA Land_mim;
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698


SUBTYPE_CONSTRAINT assembly_component_subtypes FOR assembly_component;         
(ONEOF (land, connected_area_component, inter_stratum_feature)
                ANDOR (thermal_component));
END_SUBTYPE_CONSTRAINT;        
	
ENTITY land
 SUBTYPE OF (assembly_component);
WHERE
  WR1: SIZEOF (QUERY (i_f <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'definition usage') |
       'LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (i_f.relating_product_definition))) = 1;
  WR2: SIZEOF (QUERY (aud <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'alternate usage definition') |
       'LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (aud.relating_product_definition))) <= 1;
  WR3: SIZEOF (QUERY (sfi <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'stratum feature implementation') |
       'LAND_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (sfi.relating_product_definition))) = 1;
(*
  WR4: (NOT (SELF\shape_aspect.description IN
       ['via and contact size dependent land',
    'component termination passage and contact size dependent land'])) OR
       (SIZEOF (QUERY (at <* associated_terminals(SELF) |
       (('LAND_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'land interface terminal')))) >= 0);
  WR5: (NOT (SELF\shape_aspect.description IN
       ['functional land', 'via dependent land',
       'via and contact size dependent land',
       'component termination passage dependent land',
       'contact size dependent land',
   'component termination passage and contact size dependent land'])) OR
       (SIZEOF (QUERY (at <* associated_terminals(SELF) |
       (('LAND_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'land join terminal')))) >= 1);
  WR6: (NOT (SELF\shape_aspect.description IN
       ['via and contact size dependent non functional land',
       'component termination passage and contact size '])) OR
       (SIZEOF (QUERY (at <* associated_terminals(SELF) |
       (('LAND_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'non functional land interface terminal')))) = 1);
  WR7: (NOT (SELF\shape_aspect.description IN
       ['non functional land', 'via dependent non functional land',
       'via and contact size dependent non functional land',
       'component termination passage dependent non functional land',
       'contact size dependent non functional land',
       'component termination passage and contact size ' + 
       'dependent non functional land',
       'unsupported passage dependent non functional land'])) OR
       (SIZEOF (QUERY (at <* associated_terminals(SELF)|
       (('LAND_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'non functional land join terminal')))) >= 1);
*)
  WR8: (NOT (SELF\product_definition.description IN
       ['component termination passage and contact size dependent land',
       'component termination passage and contact size dependent' + 
       'non functional land',
       'component termination passage dependent land',
       'component termination passage dependent non functional land'])) OR
       (SIZEOF (QUERY (rp <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'reference passage') |
       (('LAND_MIM.' +
       'PLATED_PASSAGE' IN
       TYPEOF (rp.relating_product_definition)) AND
       (rp.relating_product_definition\product_definition.description =
       'component termination passage')))) = 1);
 WR9: (NOT (SELF\product_definition.description IN
       ['via and contact size dependent land',
       'via and contact size dependent non functional land',
       'via dependent land', 'via dependent non functional land'])) OR
       (SIZEOF (QUERY (rv <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'reference via') |
       (('LAND_MIM.' +
       'PLATED_PASSAGE' IN
       TYPEOF (rv.relating_product_definition)) AND
       (rv.relating_product_definition\product_definition.description IN
       ['buried via', 'interfacial connection', 
       'bonded conductive base blind via', 'non conductive base blind via',
       'plated conductive base blind via'])))) = 1);
 WR10: (NOT (SELF\product_definition.description = 
       'unsupported passage dependent non functional land')) OR
       (SIZEOF (QUERY (rp <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'reference passage') |
       ('LAND_MIM.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (rp.relating_product_definition)) AND
       (rp.relating_product_definition\product_definition.description =
       'unsupported passage'))) = 1);
 WR11: (NOT (SELF\product_definition.description IN
       ['component termination passage dependent land',
       'component termination passage dependent non functional land'])) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       (('LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'default component termination passage based')))) = 1);
 WR12: (NOT (SELF\product_definition.description IN
       ['component termination passage and contact size dependent land',
       'component termination passage and contact size dependent ' +
       'non functional land'])) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       (('LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'default attachment size and component termination ' +
       'passage based')))) = 1);
 WR13: (NOT (SELF\product_definition.description IN
       ['contact size dependent land',
       'contact size dependent non functional land'])) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       (('LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'default attachment size based')))) = 1);
 WR14: (NOT (SELF\product_definition.description IN
       ['via and contact size dependent land',
       'via and contact size dependent non functional land'])) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       (('LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'default attachment size and via based')))) = 1);
 WR15: (NOT (SELF\product_definition.description IN
       ['via dependent land',
       'via dependent non functional land'])) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       (('LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'default via based')))) = 1);
 WR16: (NOT (SELF\product_definition.description = 
       'unsupported passage dependent ' +
       'non functional land')) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAND_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAND_MIM.' +
       'LAND_PHYSICAL_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'default unsupported passage based'))) = 1);
END_ENTITY;	
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_2d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:09:07 liutkus Exp $
   ISO TC184/SC4/WG12 N3469 - ISO/CD-TS 10303-1693 Layered 2d shape - EXPRESS MIM
*)


SCHEMA Layered_2d_shape_mim;
	USE FROM Constructive_solid_geometry_2d_mim;	-- ISO/TS 10303-1731
--	USE FROM Part_template_2d_shape_mim;	-- ISO/TS 10303-1716
--	USE FROM Physical_unit_2d_shape_mim;	-- ISO/TS 10303-1726
	USE FROM Wireframe_2d_mim; 	-- ISO/TS 10303-1347	

RULE planar_curve_constraint FOR ( shape_representation );
WHERE
WR1: SIZEOF (QUERY (sr <* shape_representation | 
(
NOT(NOT ( sr\representation.name IN ['planar projected shape',
       'bevel edge feature shape',
       'step edge feature shape',
       'radius edge feature shape']) OR
(sr\representation.
context_of_items\geometric_representation_context.
coordinate_space_dimension = 2)
))
)) = 0;
END_RULE;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_3d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 10:08:52 liutkus Exp $
   ISO TC184/SC4/WG12 N3472 - ISO/CD-TS 10303-1694 Layered 3d shape - EXPRESS MIM
*)


SCHEMA Layered_3d_shape_mim;
	USE FROM Advanced_boundary_representation_mim;	-- ISO/TS 10303-1514
	USE FROM Curve_swept_solid_mim;	-- ISO/TS 10303-1659
	USE FROM Geometrically_bounded_surface_mim;	-- ISO/TS 10303-1507
	USE FROM Part_template_3d_shape_mim;	-- ISO/TS 10303-1717
--	USE FROM Part_template_non_planar_shape_mim;	-- ISO/TS 10303-1719
    USE FROM Layered_2d_shape_mim; -- -- ISO/TS 10303-1693
	USE FROM Physical_unit_3d_shape_mim;	-- ISO/TS 10303-1727
	
	USE FROM Representation_schema(representation_relationship_with_transformation);

ENTITY shape_definition_3d_intersection
  SUBTYPE OF (representation, 
              shape_representation_relationship, 
              representation_relationship_with_transformation);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SELF\representation_relationship.rep_1 :<>: SELF\representation_relationship.rep_2;
  WR2: (SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\representation_relationship_with_transformation || 
       SELF\shape_definition_3d_intersection))) = 0)  OR
       ('LAYERED_3D_SHAPE_MIM.' +
       'EDGE_SEGMENT_CROSS_SECTION' IN TYPEOF (SELF)) OR
       ('LAYERED_3D_SHAPE_MIM.' +
       'PRE_DEFINED_PARALLEL_DATUM_AXIS_SYMBOL_3D_2D_RELATIONSHIP' IN TYPEOF (SELF)) OR
       ('LAYERED_3D_SHAPE_MIM.' +
       'PRE_DEFINED_PERPENDICULAR_DATUM_AXIS_SYMBOL_3D_2D_RELATIONSHIP' IN TYPEOF (SELF)) OR
       ('LAYERED_3D_SHAPE_MIM.' +
       'PRE_DEFINED_PERPENDICULAR_DATUM_PLANE_SYMBOL_3D_2D_RELATIONSHIP' IN TYPEOF (SELF));
  WR3: 'LAYERED_3D_SHAPE_MIM.' +
       'ITEM_DEFINED_TRANSFORMATION' IN TYPEOF 
       (SELF\representation_relationship_with_transformation.transformation_operator);

END_ENTITY; 
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_interconnect_module_2d_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/02/04 15:43:13 budreckytej Exp $
   ISO TC184/SC4/WG12 N3478 - ISO/CD-TS 10303-1695 Layered interconnect module 2d design - EXPRESS MIM
*)


SCHEMA Layered_interconnect_module_2d_design_mim;
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698
	USE FROM Physical_unit_2d_shape_mim;	-- ISO/TS 10303-1726

RULE stratum_interconnect_module_planar_position_constraint FOR 
          (mapped_item);
WHERE
  WR1: SIZEOF(QUERY(mi <* mapped_item |
       (mi\representation_item.name = 
          'planar positioned stratum shape in interconnect module')
    AND NOT('LAYERED_INTERCONNECT_MODULE_2D_DESIGN_MIM.'
       + 'AXIS2_PLACEMENT_2D' IN TYPEOF(mi.mapping_target))
       )) = 0;
END_RULE;

RULE stratum_planar_shape_constraint FOR (shape_representation);
WHERE
  WR1: SIZEOF(QUERY(sr <* shape_representation |
       NOT( NOT ((sr\representation.name = 'planar projected shape') AND 
       (SIZEOF(QUERY(pdr <* USEDIN(sr,
       'LAYERED_INTERCONNECT_MODULE_2D_DESIGN_MIM.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('LAYERED_INTERCONNECT_MODULE_2D_DESIGN_MIM.'
       + 'STRATUM' IN TYPEOF(pdr.definition.definition))
       )) = 1))
       OR (SIZEOF(QUERY(a2p2d <* sr.items |
       ('LAYERED_INTERCONNECT_MODULE_2D_DESIGN_MIM.'
       + 'AXIS2_PLACEMENT_2D' IN TYPEOF(a2p2d))
       )) >= 0)))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_interconnect_module_3d_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/04/04 10:08:54 liutkus Exp $
   ISO TC184/SC4/WG12 N3481 - ISO/CD-TS 10303-1696 Layered interconnect module 3d design - EXPRESS MIM
*)


SCHEMA Layered_interconnect_module_3d_design_mim;
	USE FROM Stratum_non_planar_shape_mim;	-- ISO/TS 10303-1748

RULE stratum_interconnect_module_3d_position_constraint FOR (mapped_item);
WHERE
  WR1: SIZEOF(QUERY(mi <* mapped_item |
       (mi\representation_item.name = '3d positioned stratum shape in interconnect module')
       AND NOT('LAYERED_INTERCONNECT_MODULE_3D_DESIGN_MIM.'
       + 'AXIS2_PLACEMENT_3D' IN TYPEOF(mi.mapping_target))
       )) = 0;
END_RULE;

RULE stratum_surface_in_stratum_3d_position_constraint FOR 
( mapped_item );
WHERE
  WR1: SIZEOF(QUERY(mi <* mapped_item |
       (mi\representation_item.name = 'stratum surface in stratum 3d position')
       AND NOT('LAYERED_INTERCONNECT_MODULE_3D_DESIGN_MIM.'
       + 'AXIS2_PLACEMENT_3D' IN TYPEOF(mi.mapping_target))
       )) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_interconnect_module_3d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:08:54 liutkus Exp $
   ISO TC184/SC4/WG12 N3646 - ISO/CD-TS 10303-1697 Layered interconnect module 3d shape - EXPRESS MIM
*)


SCHEMA Layered_interconnect_module_3d_shape_mim;
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698

SUBTYPE_CONSTRAINT plated_inter_stratum_feature_subtypes FOR plated_inter_stratum_feature;         
  (ONEOF(plated_passage,plated_cutout_edge_segment, 
 plated_interconnect_module_edge_segment));
END_SUBTYPE_CONSTRAINT;        

ENTITY cutout_edge_segment
  SUPERTYPE OF (plated_cutout_edge_segment)
  SUBTYPE OF (inter_stratum_feature,shape_aspect_relationship);
WHERE
  WR1: SELF\product_definition.description IN [
       'plated cutout edge segment',
       'cutout edge segment'];
  WR2: SIZEOF (QUERY (cc <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'composed cutout') |(
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (cc.relating_product_definition)) AND 
	(cc.relating_product_definition\product_definition.description  IN ['cutout',
         'physical connectivity interrupting cutout', 'plated cutout']))
       )) = 1;
  WR3: ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition));
  WR4: ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition));
  WR5: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
END_ENTITY;

ENTITY edge_segment_cross_section
  SUBTYPE OF (shape_definition_3d_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\shape_definition_3d_intersection || 
       SELF\edge_segment_cross_section))) = 0;
END_ENTITY; 

ENTITY interconnect_module_edge_segment
  SUBTYPE OF (inter_stratum_feature,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect.description IN [
       'plated interconnect module edge segment', 
       'interconnect module edge segment'];
  WR2: SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) <= 1;
  WR3: (NOT (SELF\shape_aspect.description = 
       'plated interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed edge') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_shape_aspect)) AND
       (ce.relating_shape_aspect\shape_aspect.description =
       'plated interconnect module edge'))) = 1);
  WR4: (NOT (SELF\shape_aspect.description = 'interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed edge') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_shape_aspect)) AND
       (ce.relating_shape_aspect\shape_aspect.description =
       'interconnect module edge'))) = 1);
  WR5: 'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR6: 'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR7: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
END_ENTITY;

ENTITY inter_stratum_feature_edge_segment_template
  SUBTYPE OF (part_template_definition,shape_aspect_relationship);
WHERE
  WR1: (SIZEOF (QUERY (ce <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'INTER_STRATUM_FEATURE_EDGE_TEMPLATE' IN
       TYPEOF (ce.relating_shape_aspect)) 
       )) = 1);
  WR2: 'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\part_template_definition ||
       SELF\shape_aspect_relationship ||
       SELF\inter_stratum_feature_edge_segment_template)) = 0;
END_ENTITY;

ENTITY inter_stratum_feature_edge_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\part_template_definition ||
       SELF\inter_stratum_feature_edge_template)) = 0;
  WR2: SELF\product_definition.description = 
       'inter stratum feature edge template';
END_ENTITY;

ENTITY plated_cutout_edge_segment
  SUBTYPE OF (cutout_edge_segment,plated_inter_stratum_feature);
WHERE
  WR1: SELF\shape_aspect.description IN ['plated cutout edge segment'];
  WR2: SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) <= 1;
  WR3: (NOT (SELF\shape_aspect.description = 'plated cutout edge segment')) OR
       (SIZEOF (QUERY (cc <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed cutout') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (cc.relating_shape_aspect)) AND
       (cc.relating_shape_aspect\shape_aspect.description =
       'plated cutout'))) = 1);
END_ENTITY;

ENTITY plated_interconnect_module_edge_segment
  SUBTYPE OF (interconnect_module_edge_segment,
              plated_inter_stratum_feature);
WHERE
  WR1: SELF\shape_aspect.description IN ['plated interconnect module edge segment'];
  WR2: SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) <= 1;
  WR3: (NOT (SELF\shape_aspect.description = 
          'plated interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed edge') |
       ('LAYERED_INTERCONNECT_MODULE_3D_SHAPE_MIM.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_shape_aspect)) AND
       (ce.relating_shape_aspect\shape_aspect.description =
       'plated interconnect module edge'))) = 1);
END_ENTITY;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_interconnect_module_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.21 2005/04/04 10:08:16 liutkus Exp $
   ISO TC184/SC4/WG12 N3484 - ISO/CD-TS 10303-1698 Layered interconnect module design - EXPRESS MIM
*)


SCHEMA Layered_interconnect_module_design_mim;
	USE FROM Form_features_mim;	-- ISO/TS 10303-1673
	USE FROM Interconnect_module_usage_view_mim;	-- ISO/TS 10303-1686
	USE FROM Interconnect_physical_requirement_allocation_mim;	-- ISO/TS 10303-1689
	USE FROM Part_template_2d_shape_mim;	-- ISO/TS 10303-1716
	USE FROM Physical_connectivity_definition_mim;	-- ISO/TS 10303-1755
	USE FROM Fill_area_mim; -- ISO/TS 10303-1672
	USE FROM Part_template_extension_mim;	-- ISO/TS 10303-1718

TYPE limd_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (stratum_concept_relationship);
END_TYPE; 

TYPE limd_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
     (assembly_component,
      layer,
      stratum);
END_TYPE; 

TYPE limd_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (inter_stratum_feature,
      stratum,
      stratum_feature,
      stratum_surface);
END_TYPE; 

SUBTYPE_CONSTRAINT interconnect_module_terminal_subtypes FOR interconnect_module_terminal;         
  (ONEOF (interconnect_module_interface_terminal,
                      interconnect_module_join_terminal));
END_SUBTYPE_CONSTRAINT;        

ENTITY conductive_interconnect_element_terminal_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :<>:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\conductive_interconnect_element_terminal_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: 'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\shape_aspect.of_shape.definition);
  WR8: SELF\shape_aspect_relationship.related_shape_aspect.description = 'conductive interconnect element terminal';
  WR9: SELF\shape_aspect_relationship.relating_shape_aspect.description = 'conductive interconnect element terminal';
  WR10: SELF\shape_aspect.of_shape.definition\product_definition.description = 'laminate component';
END_ENTITY; 

ENTITY connected_area_component
 SUBTYPE OF (assembly_component);
WHERE
(* invalid csa
 WR1: SIZEOF (QUERY (sfi <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'stratum feature implementation') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (sfi.relating_shape_aspect))) = 1;
 WR2: SIZEOF (QUERY (sfi <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated layer connection point') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (sfi.relating_shape_aspect))) >= 1; *)
 WR3: SELF\product_definition.description = 'stratum feature template component';
 WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\component_definition||
       SELF\connected_area_component)) = 0;
END_ENTITY;
	
ENTITY electrical_isolation_component_definition
  SUBTYPE OF (filled_area_material_removal_component_definition);
END_ENTITY;
(**
ENTITY externally_defined_interconnect_definition
 SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: NOT EXISTS(SELF\product_definition.name) OR
       (SELF\product_definition.name = 'interconnect module');
END_ENTITY;
*)
ENTITY fiducial
  SUBTYPE OF (assembly_component);
WHERE
  WR1: (description = 'laminate component');
END_ENTITY;

ENTITY fiducial_stratum_feature
 SUBTYPE OF (stratum_feature);
END_ENTITY;

ENTITY filled_area_material_removal_component_definition
  SUBTYPE OF (material_removal_component_definition);
END_ENTITY;

ENTITY footprint_occurrence
  SUBTYPE OF (assembly_group_component_definition);--assembly_group_component_shape_aspect);
END_ENTITY;

ENTITY footprint_occurrence_product_definition_relationship
  SUBTYPE OF (product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: SELF\product_definition_relationship.name = 'footprint occurrence sub assembly relationship';

END_ENTITY; 

ENTITY inter_stratum_feature
 SUBTYPE OF (assembly_component);
WHERE
  WR1: SELF\product_definition.description IN ['bonded conductive base blind via', 
       'buried via', 'component termination passage', 
       'interfacial connection', 'non conductive base blind via', 
       'plated conductive base blind via', 'plated cutout', 
       'partially plated cutout', 
       'plated cutout edge segment', 
       'partially plated interconnect module edge', 
       'plated interconnect module edge segment', 
       'plated interconnect module edge', 'unsupported passage', 'cutout', 
       'physical connectivity interrupting cutout', 
       'dielectric material passage', 'cutout edge segment', 
       'interconnect module edge segment', 'interconnect module edge'];
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'feature of size') AND
       (it\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1))) = 1;
  WR3: SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description IN
       ['inter stratum feature template',
       'via template',
       'component termination passage template',
       'unsupported passage template']))) = 1;
  WR4: (NOT (SELF\product_definition.description = 'cutout edge segment')) OR
       (SIZEOF (QUERY (cc <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'composed cutout') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (cc.relating_product_definition)) AND
       ((cc.relating_product_definition\product_definition.description =
       'cutout') OR
       (cc.relating_product_definition\product_definition.description =
       'physical connectivity interrupting cutout') OR
       (cc.relating_product_definition\product_definition.description =
       'partially plated cutout')))) = 1);
  WR5: (NOT (SELF\product_definition.description = 'interconnect module edge segment')) OR
       (SIZEOF (QUERY (ce <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'composed edge') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (ce.relating_product_definition)) AND
       ((ce.relating_product_definition\product_definition.description =
       'interconnect module edge') OR
       (ce.relating_product_definition\product_definition.description =
       'interconnect module edge')
        ))) = 1);
  WR6: (NOT (SELF\product_definition.description = 'dielectric material passage')) OR
       (SIZEOF (QUERY (pp <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'precedent passage') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE' IN
       TYPEOF (pp.relating_product_definition)) AND
       ((pp.relating_product_definition\product_definition.description =
       'cutout') OR
       (pp.relating_product_definition\product_definition.description =
       'physical connectivity interrupting cutout') OR
       (pp.relating_product_definition\product_definition.description =
       'partially plated cutout')))) = 1);
  WR7: (NOT (SELF\product_definition.description = 'dielectric material passage')) OR
       ((SIZEOF (QUERY (rp <* QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF (pd)) |
       rp\property_definition.name = 'feature material')) <= 1) OR
       (SIZEOF (USEDIN (SELF, 
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) <= 1));
  WR8: (NOT (SELF\product_definition.description = 
       'physical connectivity interrupting cutout')) OR
       (SIZEOF (QUERY (ice <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'interrupted connectivity elements') |
       ice.relating_product_definition\product_definition.name =
       'conductive interconnect element')) >= 1);
  WR9: (NOT (SELF\product_definition.description = 'unsupported passage')) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'unsupported passage template'))) = 1);
 WR10: (NOT (SELF\product_definition.description = 'cutout edge segment')) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)))) = 1);
 WR11: (NOT (SELF\product_definition.description = 
       'plated cutout edge segment')) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)))) = 1);
 WR12: (NOT (SELF\product_definition.description = 
       'interconnect module edge segment')) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)))) = 1);
 WR13: (NOT (SELF\product_definition.description = 
       'plated interconnect module edge segment')) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' IN
       TYPEOF (it.relating_product_definition)))) = 1);
END_ENTITY;

ENTITY interconnect_module_join_terminal
  SUBTYPE OF (interconnect_module_terminal);
END_ENTITY;

ENTITY interface_access_component_definition
  SUBTYPE OF (assembly_component);
END_ENTITY;

ENTITY interface_access_material_removal_component_definition
  SUBTYPE OF (material_removal_component_definition);
END_ENTITY;

ENTITY internal_probe_access_area
  SUBTYPE OF (probe_access_area);
END_ENTITY;

ENTITY join_shape_aspect
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: NOT(SELF\shape_aspect.name IN ['constrained intra layer join',
       'inter stratum join', 'intra stratum join']) OR 
       (SIZEOF (QUERY (cp <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (cp.related_shape_aspect))) >= 2);
  WR2: SIZEOF (QUERY (nt <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'network topology') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PHYSICAL_NETWORK' IN
       TYPEOF (nt.relating_shape_aspect))) = 1;
  WR3: (NOT (SELF\shape_aspect.name = 'intra stratum join')) OR
       (SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (ji.related_shape_aspect)) AND
       (ji.related_shape_aspect\shape_aspect.description = 'conductor'))) <= 1);
  WR4: (NOT (SELF\shape_aspect.name = 'intra stratum join')) OR
       (SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (ji.related_shape_aspect)) AND
       (ji.related_shape_aspect\shape_aspect.description = 'connected filled area'))) 
       <= 1);
  WR5: (NOT (SELF\shape_aspect.name = 'inter stratum join')) OR
       (SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_CONCEPT_RELATIONSHIP' IN
       TYPEOF (ji.related_shape_aspect)) AND
       (ji.related_shape_aspect\shape_aspect.description = 
       'physical network supporting stratum feature conductive join')) OR
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PLATED_INTER_STRATUM_FEATURE' IN
       TYPEOF (ji.related_shape_aspect)))) <= 1);
  WR6: NOT(SELF\shape_aspect.name = 'unrouted join') OR
       (SIZEOF (QUERY (cp <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'unrouted terminals') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (cp.related_shape_aspect))) >= 2);
END_ENTITY;


  ENTITY laminate_component_feature
    ABSTRACT SUPERTYPE OF (ONEOF (laminate_component_interface_terminal,
 laminate_component_join_terminal))
    SUBTYPE OF (component_feature);
  END_ENTITY;

ENTITY laminate_component_interface_terminal
  SUBTYPE OF (laminate_component_feature);
WHERE
  WR1: (NOT (SELF\shape_aspect.description IN 
       ['component termination passage interface terminal', 
       'land interface terminal', 
       'printed connector component interface terminal',
       'non functional land interface terminal'])) OR
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition));
  WR2: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature')) = 1;
(*
  WR3: (NOT (SELF\shape_aspect.description = 
       'component termination passage interface terminal')) OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PLATED_PASSAGE' IN
       TYPEOF (associated_component(SELF))) AND
       (associated_component(SELF).description =
       'component termination passage'));
*)
  WR4: (NOT (SELF\shape_aspect.description = 
       'component termination passage interface terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       i_f.relating_shape_aspect\shape_aspect.description =
       'component termination passage template interface terminal')) = 1);
 WR5: (NOT (SELF\shape_aspect.description IN
       ['land interface terminal',
       'non functional land interface terminal'])) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAND_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (TRUE)))) = 1);
(*
 WR6: NOT(SELF\shape_aspect.description = 'land interface terminal') OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAND' IN
       TYPEOF (associated_component(SELF))) AND
(associated_component(SELF).description IN
       ['via and contact size dependent land',
       'contact size dependent land',
    'component termination passage and contact size dependent land']));
 WR7: NOT(SELF\shape_aspect.description =
       'non functional land interface terminal') OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAND' IN
       TYPEOF (associated_component(SELF))) AND
(associated_component(SELF).description IN
       ['via and contact size dependent non functional land',
       'contact size dependent non functional land',
    'component termination passage and contact size dependent non functional land']));
*)
 WR8: (NOT (SELF\shape_aspect.description = 
       'printed connector component interface terminal')) OR
       (SELF.product_definitional);
 WR9: (NOT (SELF\shape_aspect.description = 
       'printed connector component interface terminal')) OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRINTED_COMPONENT' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.description = 
       'printed connector component'));
 WR10: (NOT (SELF\shape_aspect.description = 
       'printed connector component interface terminal')) OR
       (SIZEOF (QUERY (i_f <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated feature') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (i_f.relating_shape_aspect)) AND
       (i_f.relating_shape_aspect\shape_aspect.description =
       'interface terminal'))) = 1);
 WR11: (NOT (SELF\shape_aspect.description =
       'printed connector component interface terminal')) OR
       (SIZEOF (QUERY (i <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       pdr\shape_aspect_relationship.name = 'implementation') |
       (SIZEOF (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE'] *
       TYPEOF (i.relating_shape_aspect)) = 1)
       )) = 1);
 WR12: ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\
        product_definition.frame_of_reference\
        application_context_element.name = 'layout occurrence');
END_ENTITY;

  ENTITY laminate_component_join_terminal
    SUBTYPE OF (laminate_component_feature,
 		component_terminal);
  END_ENTITY;

ENTITY laminate_group_component_make_from_relationship
  SUBTYPE OF (make_from_usage_option);
WHERE
  WR1: SIZEOF (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION'] *
       TYPEOF (SELF.relating_product_definition)) = 1;
  WR2: SIZEOF (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION'] *
       TYPEOF (SELF.related_product_definition)) = 1;
  WR3: SIZEOF( QUERY(pd <* USEDIN(SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
        (SIZEOF( QUERY(pdr <* USEDIN(SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       ((pdr.name = 'stratum mapping') AND
       (pdr.related_property_definition\property_definition.
         definition\product_definition_relationship.name = 'stratum make from')
        AND
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
        'MAKE_FROM_USAGE_OPTION' IN 
         TYPEOF(pdr.related_property_definition\property_definition.definition)))
          )) > 0) 
        )) > 0;
END_ENTITY;

ENTITY layer
 SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (QUERY (ada <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc <* USEDIN (ada.assigned_document,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
       duc\document_usage_constraint.subject_element = 'layer definition')) = 1)) <= 1;       
  WR2: ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP'
       IN TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition_relationship.name = 
                                    'inter stratum extent');
END_ENTITY;

ENTITY layer_connection_point
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name, SELF\shape_aspect.of_shape;
WHERE
  WR1: SELF\shape_aspect.of_shape.definition\product_definition.
       name = 'design layer';
  WR2: SIZEOF (QUERY (cp <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'inter stratum join')))) <= 1;
  WR3: SIZEOF (QUERY (cp <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'intra stratum join')))) = 1;
  WR4: NOT(
       SIZEOF (QUERY (cp <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'inter stratum join')))) = 1)
       OR
       (SIZEOF (QUERY (cp <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connected point') |
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (cp.relating_shape_aspect)) AND 
       (cp.relating_shape_aspect.name = 'intra stratum join')))) = 1);
  WR5: (NOT (SELF\shape_aspect.description = 'dependently located')) OR
       (SIZEOF (QUERY (ado <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated design object') |
       (SIZEOF (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTER_STRATUM_FEATURE',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'INTERCONNECT_MODULE_TERMINAL'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) OR
       ((SIZEOF (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) AND
       (ado.relating_shape_aspect.description IN ['printed component join terminal',
        'embedded component terminal']))
       )) = 1);
  WR6: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'connection point location 2d') AND
       (SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'CARTESIAN_POINT' IN
       TYPEOF (it)) AND (it\geometric_representation_item.dim = 2 )
       )) = 1))) <= 1))) = 0);
  WR7: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'connection point location 3d') AND
       (SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'CARTESIAN_POINT' IN
       TYPEOF (it)) AND (it\geometric_representation_item.dim = 3 )
       )) = 1))) <= 1))) = 0);
  WR8: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) AND
       ((pdr.used_representation\representation.name = 'connection point location 2d')
       OR
       (pdr.used_representation\representation.name = 'connection point location 3d'))
       )) >= 1))) = 0);
  WR9: (NOT (SELF\shape_aspect.description = 'dependently located')) OR
       (SIZEOF (QUERY (ado <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'reference zone') |
       (SIZEOF (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) OR
       ((SIZEOF (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT'] *
       TYPEOF (ado.relating_shape_aspect)) = 1) AND
       (ado.relating_shape_aspect.description IN ['connection zone']))
       )) <= 1);
END_ENTITY;

ENTITY layout_junction
  SUBTYPE OF (shape_aspect);
END_ENTITY;

ENTITY material_removal_component_definition
  SUBTYPE OF (assembly_component);
END_ENTITY;

ENTITY multi_layer_component_definition
  SUBTYPE OF (assembly_component);
END_ENTITY;

ENTITY multi_layer_material_removal_component_definition
  SUBTYPE OF (material_removal_component_definition);
END_ENTITY;

ENTITY multi_layer_stratum_feature
 SUBTYPE OF (stratum_feature);
END_ENTITY;

ENTITY padstack_occurrence
  SUBTYPE OF (assembly_group_component_definition);--assembly_group_component_shape_aspect);
END_ENTITY;

ENTITY padstack_occurrence_product_definition_relationship
  SUBTYPE OF (property_definition, product_definition_relationship);
WHERE
--  WR1: SELF\shape_aspect_relationship.related_shape_aspect :<>:
--       SELF\shape_aspect_relationship.relating_shape_aspect;
--  WR2: SIZEOF(TYPEOF(SELF)) - SIZEOF(TYPEOF(SELF\property_definition ||
--       SELF\shape_aspect_relationship ||
--       SELF\padstack_occurrence_shape_aspect_relationship)) = 0;
--  WR3: SELF\shape_aspect_relationship.name = 
--        'padstack occurrence sub assembly relationship';
  WR1: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: SIZEOF(TYPEOF(SELF)) - SIZEOF(TYPEOF(SELF\property_definition ||
       SELF\product_definition_relationship ||
       SELF\padstack_occurrence_product_definition_relationship)) = 0;
  WR3: SELF\product_definition_relationship.name = 
        'padstack occurrence sub assembly relationship';
END_ENTITY; 

ENTITY passage_padstack_definition 
 SUBTYPE OF (padstack_definition);
END_ENTITY; 

ENTITY passage_technology
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name, SELF\shape_aspect.of_shape;
WHERE
  WR1: 'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION' IN 
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (USEDIN (SELF, 
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) <= 1;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation')) = 1))) = 0;
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (
          {1 <= SIZEOF (pcr.used_representation.items) <= 8}
                                             ))) = 0))) = 0;
  WR5: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items | 
       NOT (it\representation_item.name IN ['maximum aspect ratio', 'plated passage', 
       'maximum allowed component terminal extent', 
       'minimum allowed component terminal extent', 
       'maximum as finished deposition thickness',  
       'minimum as finished deposition thickness',  
       'maximum as finished passage extent', 
       'minimum as finished passage extent']))) = 0))) = 0))) = 0;
  WR6: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'RATIO_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'maximum aspect ratio') AND
       (it\measure_with_unit.value_component > 1.0))) <= 1))) = 0))) = 0;
  WR7: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'plated passage') AND
       (it\descriptive_representation_item.description IN ['true', 'false']))) = 1))) = 0))) = 0;
  WR8: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum as finished passage extent')
       )) <= 1))) = 0))) = 0;
  WR9: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'maximum as finished deposition thickness'))) <= 1))) = 0))) = 0;
 WR10: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum as finished deposition thickness'))) <= 1))) = 0))) = 0;
 WR11: (NOT (SELF\shape_aspect.description IN 
       ['default component termination passage definition',
       'default via definition'])) OR 
       (SIZEOF (USEDIN (SELF, 
        'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1);
 WR12: (NOT (SELF\shape_aspect.description IN  
       ['default component termination passage definition',
       'default unsupported passage definition',
       'default via definition'])) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 'minimum as finished passage extent'))) 
        = 1))) = 0))) = 0);
 WR13: (NOT (SELF\shape_aspect.description =
       'default component termination passage definition')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum as finished deposition thickness'))) 
         = 1))) = 0))) = 0);
 WR14: (NOT (SELF\shape_aspect.description =
       'default component termination passage definition')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum allowed component terminal extent'))) = 1))) = 0))) = 0);
 WR15: (NOT (SELF\shape_aspect.description =
       'default component termination passage definition')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'maximum allowed component terminal extent'))) = 1))) = 0))) = 0);
 WR16: (NOT (SELF\shape_aspect.description = 'default via definition')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pcr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
       'physical characteristics representation') |
       NOT (SIZEOF (QUERY (it <* pcr.used_representation.items |
       (SIZEOF (
       ['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND
       (it\representation_item.name = 
       'minimum as finished deposition thickness'))) = 1))) = 0))) = 0);
 WR17: SIZEOF (QUERY (rpt <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'as finished inter stratum extent') |
       (rpt.related_shape_aspect.of_shape\property_definition.description =
       'finished stratum extent') AND
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP' 
       IN 
        TYPEOF (rpt.related_shape_aspect.of_shape\property_definition.
       definition)) 
       AND    
       (rpt.related_shape_aspect.of_shape\property_definition.
        definition\product_definition_relationship.name =
       'inter stratum extent')))) = 1;
END_ENTITY;

ENTITY physical_network
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (cr <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'connectivity requirement') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (cr.related_shape_aspect)) AND
((cr.related_shape_aspect\shape_aspect.description = 
     'component termination passage join terminal') OR
(cr.related_shape_aspect\shape_aspect.description = 
                              'land join terminal') OR
(cr.related_shape_aspect\shape_aspect.description = 
               'non functional land join terminal') OR
(cr.related_shape_aspect\shape_aspect.description = 
                 'printed component join terminal'))
)) >= 2;
  WR2: SIZEOF (QUERY (nt <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'network topology') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (nt.related_shape_aspect))) >= 1;
  WR3: SIZEOF (QUERY (nt <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'reference connected terminals') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PART_CONNECTED_TERMINALS_DEFINITION' IN
       TYPEOF (nt.relating_shape_aspect))) <= 1;
END_ENTITY;

ENTITY plated_inter_stratum_feature
  SUPERTYPE OF (plated_passage)
  SUBTYPE OF (inter_stratum_feature);
WHERE
  WR1: (SELF\product_definition.description IN ['bonded conductive base blind via', 
        'buried via',
       'component termination passage', 'interfacial connection', 
       'non conductive base blind via', 
       'join two physical connectivity definition supporting inter stratum feature', 
       'plated conductive base blind via', 
       'plated cutout', 'plated interconnect module edge']) OR 
       (SIZEOF 
       (['LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
	'PLATED_CUTOUT_EDGE_SEGMENT',
	'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
	'PLATED_INTERCONNECT_MODULE_EDGE_SEGMENT'] * TYPEOF (SELF)) = 1 );
(* invalid csa 	
  WR2: SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) <= 1; *)
END_ENTITY;

ENTITY plated_passage 
  SUBTYPE OF (plated_inter_stratum_feature);
WHERE
  WR1: SELF\product_definition.description IN ['bonded conductive base blind via', 
       'buried via', 'component termination passage', 
       'interfacial connection', 'non conductive base blind via',
       'plated conductive base blind via'];
(* invalid csa        
  WR2: (NOT (SELF\product_definition.description = 'bonded conductive base blind via')) OR
       (SIZEOF (QUERY (fj <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'features join') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_CONCEPT_RELATIONSHIP' IN
       TYPEOF (fj.relating_shape_aspect)) AND
       (fj.relating_shape_aspect\shape_aspect.name =
       'stratum feature conductive join'))) = 1); *)
  WR3: (NOT (SELF\product_definition.description = 'component termination passage')) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'component termination passage template'))) = 1);
(*
  WR4: (NOT (SELF\shape_aspect.description = 'component termination passage')) OR
       (SIZEOF (QUERY (at <* associated_terminals(SELF) |
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'component termination passage interface terminal')))) >= 0);
  WR5: (NOT (SELF\shape_aspect.description = 'component termination passage')) OR
       (SIZEOF (QUERY (at <* associated_terminals(SELF)|
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at)) AND
       (at\shape_aspect.description =
       'component termination passage join terminal')))) >= 1);
*)
  WR6: (NOT (SELF\product_definition.description IN
       ['bonded conductive base blind via',
       'buried via',
       'interfacial connection',
       'non conductive base blind via',
       'plated conductive base blind via'])) OR
       (SIZEOF (QUERY (it <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       pdr\product_definition_relationship.name = 'instantiated template') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_product_definition)) AND
       (it.relating_product_definition\product_definition.description =
       'via template'))) = 1);
END_ENTITY;

ENTITY probe_access_area
  SUBTYPE OF (assembly_component);
WHERE
  WR1: EXISTS(SELF.of_shape.definition\product_definition.name);
(* invalid csa   
  WR2: ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.name = 'interconnect module');*)
(* invalid csa          
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description =
       'connection zone')) = 1; *)
(* invalid csa          
  WR4: SIZEOF (QUERY (pli <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'probed layout item') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (pli.related_shape_aspect))) = 1; *)
(* invalid csa          
  WR5: (NOT (SELF\shape_aspect.description = 
        'internal probe access area')) OR
       (SIZEOF (QUERY (i <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'implementation') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (i.relating_shape_aspect)))) = 1); *)
END_ENTITY;

ENTITY stratum
 SUBTYPE OF (product_definition);
UNIQUE
  UR1: SELF\product_definition.id, SELF\product_definition.formation;
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition))) = 1)) = 1;
  WR3: (SIZEOF (QUERY (ada <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc <* USEDIN (ada.assigned_document,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
       duc\document_usage_constraint.subject_element = 'attachment region size')) = 1)) <= 1) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'stratum usage') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'EXTERNAL_DEFINITION' IN 
       TYPEOF (tu.relating_property_definition))) = 1)) <= 1);
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = '3d bound volume shape')) <= 1))) 
       = 0;
  WR5: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = 
                  'planar projected shape')) <= 1))) = 0;
  WR6: SIZEOF (QUERY (acu <* QUERY (pdr <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'ASSEMBLY_COMPONENT_USAGE' IN
       TYPEOF (pdr)) |
       acu\product_definition_relationship.name = 'interconnect module stratum assembly relationship'
       )) >= 1;
  WR7: NOT(SELF\product_definition.name = 'design layer') OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition)) AND
       (tu.relating_property_definition.definition\characterized_object.description =
       'design layer'))) = 1)) = 1);
  WR8: NOT(SELF\product_definition.name = 'design layer') OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAYER_CONNECTION_POINT' IN
       TYPEOF (sa))) >= 1)) >= 1);
  WR9: NOT(SELF\product_definition.name = 'documentation layer') OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu <* QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition)) AND
       (tu.relating_property_definition.definition\characterized_object.description =
       'documentation layer'))) = 1)) = 1);
  WR10: NOT(SELF\product_definition.name = 'design layer') OR
       ((NOT(SELF\product_definition.description = 'primary design layer stratum') OR 
       (SIZEOF(QUERY(imps <* USEDIN(SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa <* USEDIN (imps,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       SIZEOF (QUERY (sar <* USEDIN (sa,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT' IN
       TYPEOF (sar.relating_shape_aspect)) AND 
        (sar.relating_shape_aspect\shape_aspect.description = 
       'interconnect module primary surface'))) >= 0)) >= 0)) = 1)) OR 
       (NOT (SELF\product_definition.description = 'non primary design layer stratum') OR
       (SIZEOF(QUERY(imps <* USEDIN(SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa <* USEDIN (imps,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       SIZEOF(QUERY (sar <* USEDIN (sa,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT' IN
       TYPEOF (sar.relating_shape_aspect)) AND
        (sar.relating_shape_aspect\shape_aspect.description =
       'interconnect module primary surface'))) >= 0)) >= 0)) = 0)));
END_ENTITY;	

ENTITY stratum_concept_relationship
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'REQUIREMENTS_PROPERTY' IN
       TYPEOF (pd))) >= 1; 
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (USEDIN (pd, 
        'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) = 1)) = 1;
  WR3: (NOT (SELF\shape_aspect_relationship.name = 
       'dielectric crossover area')) OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN 
       TYPEOF (SELF.relating_shape_aspect)) AND
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (SELF.related_shape_aspect)));
  WR4: (NOT (SELF\shape_aspect_relationship.name = 
       'dielectric crossover area')) OR
       (SIZEOF (QUERY (rdc <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'resulting dielectric crossover') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (rdc.relating_shape_aspect)))) = 1);
(* invalid csa        
  WR5: (NOT (SELF\shape_aspect_relationship.name = 
       'stratum feature conductive join')) OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAND' IN 
       TYPEOF (SELF.relating_shape_aspect)) OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.relating_shape_aspect)) AND
       (SELF.relating_shape_aspect\shape_aspect.description = 
       'stratum feature template component')));
  WR6: (NOT (SELF\shape_aspect_relationship.name = 
       'stratum feature conductive join')) OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'LAND' IN 
       TYPEOF (SELF.related_shape_aspect)) OR
       (('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'COMPONENT_SHAPE_ASPECT' IN
       TYPEOF (SELF.related_shape_aspect)) AND
       (SELF.related_shape_aspect\shape_aspect.description = 
       'stratum feature template component'))); *)
  WR7: (NOT (SELF\shape_aspect_relationship.name =
       'stratum feature conductive join')) OR
       (SIZEOF (QUERY (fj <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'features join') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PLATED_PASSAGE' IN
       TYPEOF (fj.related_shape_aspect)) AND
       (fj.related_shape_aspect\shape_aspect.description =
       'bonded conductive base blind via'))) <= 1);
  WR8: (NOT ((SELF\shape_aspect.description =
       'physical network supporting stratum feature conductive join') AND
       (SELF\shape_aspect_relationship.name =
       'stratum feature conductive join'))) OR
       (SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name =
       'inter stratum join'))) = 1);
END_ENTITY;

ENTITY stratum_feature
  SUPERTYPE OF (fiducial_stratum_feature)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'STRATUM' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'feature of size') AND
       (it\descriptive_representation_item.description IN 
             ['true', 'false']))) = 1)) = 1))) = 0;
  WR3: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'conductor') OR
       (SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name = 
       'intra stratum join'))) = 1));
  WR4: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'connected filled area') OR
       (SIZEOF (QUERY (ji <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'join implementation') |
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
       'JOIN_SHAPE_ASPECT' IN
       TYPEOF (ji.relating_shape_aspect)) AND
       (ji.relating_shape_aspect\shape_aspect.name = 
       'intra stratum join'))) = 1));
  WR5: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'conductor') OR
       (SELF\shape_aspect.of_shape.definition.name = 'design layer'));
  WR6: (NOT(EXISTS(SELF\shape_aspect.description))) OR
       (NOT (SELF\shape_aspect.description = 'connected filled area') OR
       (SELF\shape_aspect.of_shape.definition.name = 'design layer'));
END_ENTITY;

ENTITY stratum_specific_part_template_location_in_padstack_definition
  SUBTYPE OF (assembly_component_usage, property_definition);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\assembly_component_usage ||
       SELF\product_definition_usage ||
       SELF\product_definition_relationship ||
       SELF\stratum_specific_part_template_location_in_padstack_definition || 
       SELF\property_definition)) = 0;
  WR2: SELF\property_definition.name = '';
  WR3: SELF\property_definition.description = '';
  WR4: SELF\product_definition_relationship.name = 'part template location in padstack definition';
  WR5: SELF\product_definition_relationship.description = '';
END_ENTITY;

ENTITY stratum_surface
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: SELF\shape_aspect.description IN ['primary surface',
         'secondary surface', 'average surface']; 
    WR2: 'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
         'STRATUM' IN TYPEOF(SELF\shape_aspect.of_shape.definition);
END_ENTITY;

ENTITY thermal_isolation_component_definition
  SUBTYPE OF (filled_area_material_removal_component_definition);
END_ENTITY;

RULE adjacent_stratum_surface_definition_constraint FOR 
( shape_aspect_relationship );
WHERE
   WR1: SIZEOF (QUERY (sar <* shape_aspect_relationship |
               (sar\shape_aspect_relationship.name = 'adjacent stratum surface definition') AND
     (NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
           'STRATUM_SURFACE' IN TYPEOF (sar.related_shape_aspect)) AND
   (sar.related_shape_aspect\shape_aspect.description IN ['secondary surface']))))) = 0;
   WR2: SIZEOF (QUERY (sar <* shape_aspect_relationship |
               (sar\shape_aspect_relationship.name = 'adjacent stratum surface definition') AND
     (NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
     'STRATUM_SURFACE' IN TYPEOF (sar.relating_shape_aspect)) AND
    (sar.relating_shape_aspect\shape_aspect.description IN ['primary surface']))))) = 0;
END_RULE;

RULE adjacent_stratum_surface_definition_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  assd : BAG OF shape_aspect_relationship := 
      QUERY( sar <* shape_aspect_relationship
| (sar\shape_aspect_relationship.description = 'adjacent stratum surface definition') );
  pass1 : BOOLEAN := TRUE;
  name_bag : BAG OF STRING := [];
  pss_bag : BAG OF stratum_surface := [];
  sar_bag : BAG OF shape_aspect_relationship;
  pass2 : BOOLEAN := TRUE;
  sss_bag : BAG OF stratum_surface;
END_LOCAL;

REPEAT i := 1 to SIZEOF(assd) by 1;
  IF EXISTS( assd[i]\shape_aspect_relationship.name ) THEN
    IF ( assd[i]\shape_aspect_relationship.name IN name_bag ) THEN
      pass1 := FALSE;
      ESCAPE;
    ELSE
      name_bag := name_bag + assd[i]\shape_aspect_relationship.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(assd) by 1;
  IF EXISTS( assd[i].relating_shape_aspect ) THEN
    IF ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'STRATUM_SURFACE' IN TYPEOF(assd[i].relating_shape_aspect) ) THEN
      IF( NOT( assd[i].relating_shape_aspect IN pss_bag ) ) THEN
        pss_bag := pss_bag + assd[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pss_bag) by 1;
  IF ( NOT pass2 ) THEN ESCAPE;
  END_IF;
  sss_bag := [];
  sar_bag := QUERY( sar <* assd | (sar.relating_shape_aspect :=: 
              pss_bag[i]) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'STRATUM_SURFACE' IN TYPEOF(assd[j].related_shape_aspect) ) THEN
        IF ( sar_bag[j].related_shape_aspect IN sss_bag ) THEN
          pass2 := FALSE;
          ESCAPE;
        ELSE
          sss_bag := sss_bag + sar_bag[j].related_shape_aspect;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass1;
  WR2: pass2;
END_RULE;
(* invalid csa
RULE component_termination_passage_template_terminal_unique_constraint FOR
 ( shape_aspect );
LOCAL
  ctptt : BAG OF shape_aspect := QUERY( sa <* shape_aspect |
((sa\shape_aspect.description = 
'component termination passage template interface terminal') OR
(sa\shape_aspect.description = 
'component termination passage template join terminal')) );
  name_bag : BAG OF STRING := [];
  sa_bag : BAG OF shape_aspect;
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  ptd_bag : BAG OF part_template_definition;
END_LOCAL;

REPEAT i := 1 to SIZEOF(ctptt) by 1;
  IF EXISTS( ctptt[i]\shape_aspect.name ) THEN
    IF ( NOT ( ctptt[i]\shape_aspect.name IN name_bag ) ) THEN
      name_bag := name_bag + ctptt[i]\shape_aspect.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ptd_bag := [];
  sa_bag := QUERY( sa <* ctptt | (sa\shape_aspect.name = name_bag[i]) );
  REPEAT j := 1 to SIZEOF(sa_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    sar_bag := QUERY( sar <* USEDIN(sa_bag[j],
'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') | 
((sar\shape_aspect_relationship.name = 'access mechanism') AND
('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'PART_TEMPLATE_DEFINITION' IN TYPEOF(sar.relating_shape_aspect)) AND
(sar.relating_shape_aspect\shape_aspect.name = 
       'component termination passage template')) );
    REPEAT k := 1 to SIZEOF(sar_bag) by 1;
      IF EXISTS( sar_bag[k].relating_shape_aspect ) THEN
        IF ( sar_bag[k].relating_shape_aspect IN ptd_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          ptd_bag := ptd_bag + sar_bag[k].relating_shape_aspect;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
*)
(* invalid csa
RULE conductive_interconnect_element_terminal_unique_constraint FOR
 ( component_terminal );
LOCAL
  ciet : BAG OF component_terminal := QUERY( ct <* component_terminal |
(ct\shape_aspect.description = 'conductive interconnect element terminal') );
  name_bag : BAG OF STRING := [];
  ct_bag : BAG OF component_terminal;
  pdr_bag : BAG OF product_definition_relationship;
  pass : BOOLEAN := TRUE;
  csa_bag : BAG OF component_definition;
END_LOCAL;

REPEAT i := 1 to SIZEOF(ciet) by 1;
  IF EXISTS( ciet[i]\shape_aspect.name ) THEN
    IF( NOT( ciet[i]\shape_aspect.name IN name_bag ) ) THEN
      name_bag := name_bag + ciet[i]\shape_aspect.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ct_bag := QUERY( ct <* ciet | (ct\shape_aspect.name = name_bag[i]) );
  csa_bag := [];
  REPEAT j := 1 to SIZEOF(ct_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pdr_bag := QUERY( pdr <* USEDIN( ct_bag[j],
'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | ((pdr\product_definition_relationship.name =
'associated component') AND (pdr.relating_product_definition\product_definition.description IN
['conductive interconnect element with pre defined transitions',
'conductive interconnect element with user defined single transition'])
AND ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'COMPONENT_DEFINITION' IN TYPEOF(pdr.relating_product_definition))) );
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
      IF EXISTS( pdr_bag[k].relating_product_definition ) THEN
        IF( pdr_bag[k].relating_product_definition IN csa_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          csa_bag := csa_bag + pdr_bag[k].relating_product_definition;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
*)
RULE default_passage_based_land_physical_template_unique_constraint FOR
 ( land_physical_template );
LOCAL
  dpblpt : BAG OF land_physical_template := 
QUERY( lpt <* land_physical_template |
(lpt\shape_aspect.description IN ['default via based',
'default attachment size and via based',
'default unsupported passage based',
'default component termination passage based',
'default attachment size and component termination passage based']) );
  sar_bag : BAG OF shape_aspect_relationship;
  pt_bag : BAG OF passage_technology := [];
  pdr_bag : BAG OF property_definition_relationship;
  pass : BOOLEAN := TRUE;
  st_bag : BAG OF stratum_technology;
END_LOCAL;

REPEAT i := 1 to SIZEOF(dpblpt) by 1;
  sar_bag := QUERY( sar <* USEDIN(dpblpt[i],
'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') | ((sar\shape_aspect_relationship.name =
'technology usage') AND 
('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'PASSAGE_TECHNOLOGY' IN TYPEOF(sar.related_shape_aspect))) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF ( NOT ( sar_bag[j].related_shape_aspect IN pt_bag ) ) THEN
        pt_bag := pt_bag + sar_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pt_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  st_bag := [];
  sar_bag := QUERY( sar <* USEDIN(pt_bag[i],
'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') | ((sar\shape_aspect_relationship.name =
'technology usage') AND (sar.relating_shape_aspect IN dpblpt)) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pdr_bag := 
    QUERY( pdr <* USEDIN(sar_bag[j].relating_shape_aspect\shape_aspect.of_shape,
'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
((pdr\property_definition_relationship.name = 'technology usage') AND
('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'STRATUM_TECHNOLOGY' IN 
      TYPEOF(pdr.relating_property_definition.definition))) );
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
      IF EXISTS( pdr_bag[k].relating_property_definition.definition ) THEN
        IF 
          ( pdr_bag[k].relating_property_definition.definition IN st_bag ) 
                                                                      THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          st_bag := st_bag + 
                       pdr_bag[k].relating_property_definition.definition;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE inter_stratum_extent_constraint FOR 
( product_definition_relationship );
WHERE
  WR1: SIZEOF(QUERY(pdr <* product_definition_relationship |
       (pdr\product_definition_relationship.name = 'inter stratum extent') AND
       NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.'
       + 'STRATUM' IN TYPEOF(pdr.related_product_definition)) AND
       ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.'
       + 'STRATUM' IN TYPEOF(pdr.relating_product_definition)) 
       ))) = 0;
END_RULE;

RULE interconnect_module_stratum_assembly_relationship_constraint FOR
( assembly_component_usage );
WHERE
  WR1: SIZEOF(QUERY(acu <* assembly_component_usage |
       (acu\product_definition_relationship.name = 'interconnect module stratum assembly relationship')
       AND NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.'
       + 'PHYSICAL_UNIT' IN TYPEOF(acu.relating_product_definition))
       )) = 0;
  WR2: SIZEOF(QUERY(acu <* assembly_component_usage |
       (acu\product_definition_relationship.name = 'interconnect module stratum assembly relationship')
       AND NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.'
       + 'STRATUM' IN TYPEOF(acu.related_product_definition))
       )) = 0;
END_RULE;

RULE interconnect_module_stratum_assembly_relationship_unique_constraint FOR
 ( assembly_component_usage );
LOCAL
  imsar : BAG OF assembly_component_usage := 
QUERY( acu <* assembly_component_usage |
(acu\product_definition_relationship.name = 'interconnect module stratum assembly relationship') );
  pu_bag : BAG OF physical_unit := [];
  acu_bag : BAG OF assembly_component_usage;
  pass : BOOLEAN := TRUE;
  refdes_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(imsar) by 1;
  IF EXISTS( imsar[i].relating_product_definition ) THEN
    IF( (imsar[i].relating_product_definition.frame_of_reference.name = 
        'physical design')
AND ('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'PHYSICAL_UNIT' IN TYPEOF(imsar[i].relating_product_definition)) ) THEN
      IF ( NOT ( imsar[i].relating_product_definition IN pu_bag )) THEN
        pu_bag := pu_bag + imsar[i].relating_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  refdes_bag := [];
  acu_bag := 
   QUERY( acu <* imsar | (acu.relating_product_definition :=: pu_bag[i]) );
  REPEAT j := 1 to SIZEOF(acu_bag) by 1;
    IF EXISTS( acu_bag[j].reference_designator ) THEN
      IF ( acu_bag[j].reference_designator IN refdes_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        refdes_bag := refdes_bag + acu_bag[j].reference_designator;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE internal_stratum_access_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  isa : BAG OF shape_aspect_relationship := 
QUERY( r <* shape_aspect_relationship |
(r\shape_aspect_relationship.name = 'internal stratum access'));
  paa_bag : BAG OF probe_access_area := [];
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  pp_bag : BAG OF plated_passage;
END_LOCAL;

REPEAT i := 1 to SIZEOF(isa) by 1;
  IF EXISTS( isa[i].relating_shape_aspect ) THEN
    IF ( (isa[i].relating_shape_aspect\shape_aspect.description = 
'internal probe access area') AND
('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'PROBE_ACCESS_AREA' IN TYPEOF(isa[i].relating_shape_aspect)) ) THEN
      IF ( NOT ( isa[i].relating_shape_aspect IN paa_bag ) ) THEN
        paa_bag := paa_bag + isa[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(paa_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pp_bag := [];
  sar_bag := QUERY( sar <* isa | ((sar.relating_shape_aspect :=: 
paa_bag[i]) AND
('LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.' +
'PLATED_PASSAGE' IN TYPEOF(sar.related_shape_aspect)) AND
(sar.related_shape_aspect\shape_aspect.description IN 
['bonded conductive base blind via',
'buried via','interfacial connection','non conductive base blind via',
'plated conductive base blind via'])) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF ( sar_bag[j].related_shape_aspect IN pp_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        pp_bag := pp_bag + sar_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE stratum_feature_unique_constraint FOR
 ( stratum_feature );
LOCAL
  sf_bag : BAG OF stratum_feature;
  s_bag : BAG OF stratum := [];
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(stratum_feature) by 1;
  IF EXISTS( stratum_feature[i].of_shape.definition ) THEN
    IF( NOT( stratum_feature[i].of_shape.definition IN s_bag ) ) THEN
      s_bag := s_bag + stratum_feature[i].of_shape.definition;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(s_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sf_bag := QUERY( r <* stratum_feature | 
             (r.of_shape.definition :=: s_bag[i]) );
  name_bag := [];
  REPEAT j := 1 to SIZEOF(sf_bag) by 1;
    IF EXISTS( sf_bag[j]\shape_aspect.name ) THEN
      IF ( sf_bag[j]\shape_aspect.name IN name_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        name_bag := name_bag + sf_bag[j]\shape_aspect.name;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE stratum_surface_unique_constraint FOR
 ( stratum_surface );
LOCAL
  ss_bag : BAG OF stratum_surface;
  s_bag : BAG OF stratum := [];
  pass : BOOLEAN := TRUE;
  desc_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(stratum_surface) by 1;
  IF EXISTS( stratum_surface[i].of_shape.definition ) THEN
    IF( NOT( stratum_surface[i].of_shape.definition IN s_bag ) ) THEN
      s_bag := s_bag + stratum_surface[i].of_shape.definition;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(s_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ss_bag := QUERY( r <* stratum_surface | 
               (r.of_shape.definition :=: s_bag[i]) );
  desc_bag := [];
  REPEAT j := 1 to SIZEOF(ss_bag) by 1;
    IF EXISTS( ss_bag[j]\shape_aspect.description ) THEN
      IF ( ss_bag[j]\shape_aspect.description IN desc_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        desc_bag := desc_bag + ss_bag[j]\shape_aspect.description;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE via_template_terminal_unique_constraint FOR
 ( shape_aspect );
LOCAL
  vt : BAG OF shape_aspect := 
         QUERY( r <* shape_aspect | (r\shape_aspect.description = 'via template'));
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(vt) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sar_bag := QUERY( sar <* USEDIN( vt[i],
'LAYERED_INTERCONNECT_MODULE_DESIGN_MIM.'
 + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
((sar\shape_aspect_relationship.name = 'access mechanism') AND 
(sar.related_shape_aspect\shape_aspect.description = 
'via template terminal' )) );
  name_bag := [];
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect\shape_aspect.name ) THEN
      IF ( sar_bag[j].related_shape_aspect\shape_aspect.name IN name_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        name_bag := name_bag + sar_bag[j].related_shape_aspect\shape_aspect.name;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_interconnect_module_with_design_intent_modifications_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/03/29 15:38:18 budreckytej Exp $
   ISO TC184/SC4/WG12 N3661 - ISO/CD-TS 10303-1699 Layered interconnect module with design intent modifications - EXPRESS MIM
*)


SCHEMA Layered_interconnect_module_with_design_intent_modifications_mim;
	USE FROM Assembly_component_placement_requirements_mim;	-- ISO/TS 10303-1634
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698

TYPE limwdim_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (shape_modification);
END_TYPE; 

ENTITY shape_modification
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (dim <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design intent') |
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (dim.relating_shape_aspect))) = 1;
(* invalid csa      
  WR2: (SIZEOF (QUERY (pd<* USEDIN (SELF, 
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pd)) AND
       (pd\property_definition.description = 'modification causal'))) = 1) OR
       (SIZEOF (QUERY (mcf <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'modification causal feature') |
       (SIZEOF (['LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'COMPONENT_SHAPE_ASPECT',
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'COMPONENT_TERMINAL',
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL',
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'STRATUM_FEATURE'] *
       TYPEOF (mcf.relating_shape_aspect)) = 1) OR
       ('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'STRATUM' IN
       TYPEOF (mcf.relating_shape_aspect.of_shape.definition)))) = 1); *)
  WR3: (NOT (SELF\shape_aspect.description IN ['electrical isolation removal',
         'thermal isolation removal'])) OR (SIZEOF(
          QUERY ( pd <* USEDIN(SELF,
         'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
         'PROPERTY_DEFINITION.DEFINITION') | 
         (pd\property_definition.name = 'spacing requirement')  AND
         (SIZEOF(QUERY (pdr <* USEDIN(pd,
         'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
   'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')|
         (pdr\property_definition_relationship.name = 'spacing requirement') AND
         ('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
         'REQUIREMENTS_PROPERTY' IN
         TYPEOF(pdr.relating_property_definition)))) = 1) ))
                = 1);
  WR4: (NOT (SELF\shape_aspect.description IN ['electrical isolation removal',
       'thermal isolation removal'])) OR
       (SIZEOF (QUERY (di <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'design intent') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'STRATUM_FEATURE' IN
       TYPEOF (di.relating_shape_aspect)) AND
       (di.relating_shape_aspect\shape_aspect.description IN ['conductive filled area',
       'connected filled area']))) = 1);
  WR5: (NOT (SELF\shape_aspect.description = 'thermal isolation removal')) OR
       (SIZEOF (QUERY (pd<* USEDIN (SELF, 
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pd)) AND
       (pd\property_definition.description = 'angular orientation requirement'))) = 1);
  WR6: (NOT (SELF\shape_aspect.description = 'thermal isolation removal')) OR
       (SIZEOF (QUERY (pd<* USEDIN (SELF, 
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'REQUIREMENTS_PROPERTY' IN 
       TYPEOF (pd)) AND
       (pd\property_definition.description = 'effective current capacity requirement'))) = 1);
  WR7: (NOT (SELF\shape_aspect.description = 'material addition feature')) OR
       (SIZEOF (QUERY (dim <* QUERY (sar <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material addition shape') |
       (dim.relating_shape_aspect\shape_aspect.description =
       'material addition feature template'))) = 1);
END_ENTITY;

RULE design_intent_modification_sequence_constraint FOR 
( shape_aspect_relationship );
WHERE
   WR1: SIZEOF (QUERY (sar <* shape_aspect_relationship |
               (sar\shape_aspect_relationship.name = 'shape modification sequence')
               AND
         (NOT('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
            'SHAPE_MODIFICATION' IN TYPEOF (sar.relating_shape_aspect)))
               )) = 0;
   WR2: SIZEOF (QUERY (sar <* shape_aspect_relationship |
               (sar\shape_aspect_relationship.name = 'shape modification sequence')
               AND
        (NOT('LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
            'SHAPE_MODIFICATION' IN TYPEOF (sar.related_shape_aspect)))
               )) = 0;
END_RULE;

RULE design_intent_modification_sequence_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  dims : BAG OF shape_aspect_relationship := 
         QUERY( sar <* shape_aspect_relationship |
(sar\shape_aspect_relationship.name = 'shape modification sequence'));
  pm_bag : BAG OF shape_modification := [];
  sar_bag : BAG OF shape_aspect_relationship;
  sm_bag : BAG OF shape_modification;
  pass : BOOLEAN := TRUE;
END_LOCAL;

REPEAT i := 1 to SIZEOF(dims) by 1;
  IF EXISTS( dims[i].relating_shape_aspect ) THEN
    IF( 'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
'SHAPE_MODIFICATION' IN TYPEOF(dims[i].relating_shape_aspect) ) THEN
      IF ( NOT ( dims[i].relating_shape_aspect IN pm_bag ) ) THEN
        pm_bag := pm_bag + dims[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pm_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sar_bag := QUERY( sar <* dims | 
         (sar.relating_shape_aspect :=: pm_bag[i]) );
  sm_bag := [];
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF( 'LAYERED_INTERCONNECT_MODULE_WITH_DESIGN_INTENT_MODIFICATIONS_MIM.' +
'SHAPE_MODIFICATION' IN 
                     TYPEOF(sar_bag[j].related_shape_aspect) ) THEN
        IF ( sar_bag[j].related_shape_aspect IN sm_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          sm_bag := sm_bag + sar_bag[j].related_shape_aspect;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layered_interconnect_module_with_printed_component_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/03/25 14:32:54 budreckytej Exp $
   ISO TC184/SC4/WG12 N3487 - ISO/CD-TS 10303-1700 Layered interconnect module with printed component design - EXPRESS MIM
*)


SCHEMA Layered_interconnect_module_with_printed_component_design_mim;
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698
	
TYPE limwpcd_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
     (printed_component);
END_TYPE; 
	
ENTITY printed_component
  SUBTYPE OF (assembly_component);
WHERE
  WR1: SELF.frame_of_reference.name = 'layout occurrence';
  WR2: SELF\product_definition.description = 'printed component';
(* invalid csa  
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ <* QUERY (sa <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'part template occurrence') |
       SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (pt_occ,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |  
       ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description IN ['printed part template', 
       'printed part cross section template', 
       'printed connector template']))) = 1)) = 1))) = 0; *)
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'printed component join terminal'))) >= 1))) = 0;
  WR5: (NOT (SELF\product_definition.description = 'printed connector component')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'LAMINATE_COMPONENT_INTERFACE_TERMINAL' IN
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 
       'printed connector component interface terminal'))) >= 1))) = 0);
(* invalid csa       
  WR6: (NOT (SELF\product_definition.description = 'printed connector component')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ <* QUERY (sa <* USEDIN (pd,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'part template occurrence') |
       SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (pt_occ,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |  
       ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description = 
       'printed connector template'))) = 1)) = 1))) = 0); *)
(* invalid csa
  WR7: SIZEOF(QUERY(pd <* USEDIN(SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |  
        SIZEOF(QUERY(sa <* USEDIN(pd, 
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') | 
        SIZEOF(QUERY(sar <* USEDIN(sa, 
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        (('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
         'COMPONENT_SHAPE_ASPECT' IN TYPEOF(sar.relating_shape_aspect))
        AND (sar\shape_aspect_relationship.name = 'stratum feature implementation')
        AND (sar.relating_shape_aspect.description = 'stratum feature template component'))
        )) >= 1
        )) >= 1 
        )) >= 1;*)
END_ENTITY;	

ENTITY printed_component_link
  SUBTYPE OF (product_definition,product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: 'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition);
  WR3: 'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\printed_component_link)) = 0;
  WR5: EXISTS(SELF\product_definition.name);
  WR6: SELF\product_definition.name = '';
  WR7: SELF\product_definition_relationship.name = '';
  WR8: SIZEOF(USEDIN(SELF, 
             'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) = 1;
END_ENTITY; 

ENTITY routed_printed_component
 SUBTYPE OF (printed_component);
(* invalid csa
WHERE
  WR1: SIZEOF(QUERY(pd <* USEDIN(SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF(QUERY(sa <* USEDIN(pd, 
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (SIZEOF(QUERY(sar <* USEDIN(sa,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
         'PART_TEMPLATE_DEFINITION' IN TYPEOF(sar.relating_shape_aspect))
        AND (sar.relating_shape_aspect\shape_aspect.description = 
            'printed part cross section template')
        AND (sar\shape_aspect_relationship.name = 'instantiated template')
          )) = 1)
         )) = 1)
        )) = 1; *)
(* invalid csa
  WR2: SIZEOF(QUERY(csa <* USEDIN(SELF,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
         'COMPONENT_SHAPE_ASPECT' IN TYPEOF(csa))      
         AND (SIZEOF(QUERY(sar <* USEDIN(csa, 
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (SIZEOF(QUERY(pdr <* USEDIN(sar,
       'LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('LAYERED_INTERCONNECT_MODULE_WITH_PRINTED_COMPONENT_DESIGN_MIM.' +
         'PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(pdr)) AND
        (pdr\product_definition_relationship.name = 'inter stratum extent')      
        )) = 1)
        AND (sar\shape_aspect_relationship.name = 'component extent')
        )) = 1)
        )) = 1; *)
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\layout_macro_definition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:22:52 liutkus Exp $
   ISO TC184/SC4/WG12 N3490 - ISO/CD-TS 10303-1701 Layout macro definition - EXPRESS MIM
*)


SCHEMA Layout_macro_definition_mim;
	USE FROM Fabrication_joint_mim;	-- ISO/TS 10303-1668
--	USE FROM Layered_interconnect_module_with_printed_component_design_mim;	-- ISO/TS 10303-1700
--	USE FROM Physical_unit_design_view_mim;	-- ISO/TS 10303-1728
--	USE FROM Printed_physical_layout_template_mim;	-- ISO/TS 10303-1737

	USE FROM Application_context_schema(application_context_element);
	
ENTITY layout_macro_component
  SUBTYPE OF (printed_component);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ <* QUERY (sa <* USEDIN (pd,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'layout macro component shape aspect') |
       SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (pt_occ,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |
       ('LAYOUT_MACRO_DEFINITION_MIM.' +
       'LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect))
       )) = 1)) = 1))) = 0;
  WR2: SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design definition') |
       (SIZEOF (['LAYOUT_MACRO_DEFINITION_MIM.' +
       'LAYOUT_MACRO_DEFINITION'] *
       TYPEOF (ip.relating_product_definition)) = 1)
       )) = 1;
  WR3: SELF\product_definition.description <> 'printed connector component';
END_ENTITY;

ENTITY layout_macro_definition
 SUBTYPE OF (physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: SIZEOF (QUERY (du <* QUERY (pdr <* USEDIN (SELF,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['LAYOUT_MACRO_DEFINITION_MIM.' +
       'INTERCONNECT_DEFINITION', 
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'EXTERNALLY_DEFINED_INTERCONNECT_DEFINITION', 
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'LIBRARY_DEFINED_INTERCONNECT_DEFINITION'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name = 'interconnect module')
       )) = 0;
 WR3: SELF.frame_of_reference\application_context_element.name = 'physical design';
 WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ <* QUERY (sa <* USEDIN (pd,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'layout macro definition shape aspect') |
       SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (pt_occ,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'floor layout view') |
       ('LAYOUT_MACRO_DEFINITION_MIM.' +
       'LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE' IN
       TYPEOF (it.relating_shape_aspect))
       )) = 1)) = 1))) = 0;
END_ENTITY;

ENTITY layout_macro_definition_terminal_to_usage_terminal_assignment
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.name;
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect_relationship ||
       SELF\layout_macro_definition_terminal_to_usage_terminal_assignment ||
       SELF\shape_aspect)) = 0;
  WR2: 'LAYOUT_MACRO_DEFINITION_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN 
       TYPEOF(SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description
       IN ['component termination passage join terminal',
           'conductive interconnect element terminal',
           'land join terminal',
           'non functional land join terminal',
           'printed component join terminal',
           'via terminal'];
  WR4: SIZEOF(USEDIN(SELF, 
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT')) <= 1;

END_ENTITY;

ENTITY layout_macro_floor_plan_template
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: NOT(SELF\product_definition.description IN
      ['component termination passage template',
       'component termination passage template',
       'default trace template',
       'inter stratum feature template',
       'printed connector template',
       'printed part cross section template',
       'printed part template',
       'trace template',
       'unsupported passage template',
       'via template',
       'non conductive cross section template']);
(* invalid csa       
  WR2: SIZEOF(QUERY( sar <* USEDIN(SELF,
       'LAYOUT_MACRO_DEFINITION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ((sar\shape_aspect_relationship.name = 'access maps') AND
      ('LAYOUT_MACRO_DEFINITION_MIM.' +
       'LAYOUT_MACRO_DEFINITION_TERMINAL_TO_USAGE_TERMINAL_ASSIGNMENT' IN
       TYPEOF (sar.relating_shape_aspect)))
       )) >=1; *)
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\management_resource_information_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.11 2004/11/19 21:37:37 robbod Exp $
 ISO TC184/SC4/WG12 N3080 - ISO/TS 10303-1288 Management resource information - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2280
*) 


SCHEMA Management_resource_information_mim;

USE FROM Alias_identification_mim;    -- ISO/TS 10303-1025

USE FROM Approval_mim;    -- ISO/TS 10303-1012

USE FROM approval_schema   -- ISO 10303-41
  (approval,
   approval_relationship,
   approval_status); 

USE FROM Certification_mim;    -- ISO/TS 10303-1044

USE FROM certification_schema   -- ISO 10303-41
  (certification,
   certification_type); 

USE FROM Contract_mim;    -- ISO/TS 10303-1062

USE FROM contract_schema   -- ISO 10303-41
  (contract); 

USE FROM Date_time_assignment_mim;    -- ISO/TS 10303-1014

USE FROM date_time_schema   -- ISO 10303-41
  (date_role,
   date_time_role); 

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021

USE FROM management_resources_schema   -- ISO 10303-41
  (identification_role,
   organizational_project_role); 

USE FROM Multi_linguism_mim;    -- ISO/TS 10303-1105

USE FROM Person_organization_assignment_mim;    -- ISO/TS 10303-1013

USE FROM Person_organization_mim;    -- ISO/TS 10303-1011

USE FROM person_organization_schema   -- ISO 10303-41
  (organization,
   organization_relationship,
   organizational_project,
   organizational_project_relationship,
   person_and_organization); 

USE FROM Project_mim;    -- ISO/TS 10303-1061

USE FROM Security_classification_mim;    -- ISO/TS 10303-1015

USE FROM security_classification_schema   -- ISO 10303-41
  (security_classification,
   security_classification_level); 


TYPE mri_aliasable_item = EXTENSIBLE SELECT BASED_ON aliasable_item WITH 
   (approval_status, 
    contract, 
    organization, 
    security_classification_level);
END_TYPE; 

TYPE mri_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH 
   (certification, 
    contract);
END_TYPE; 

TYPE mri_attribute_language_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON attribute_language_item WITH 
   (applied_organizational_project_assignment, 
    approval, 
    approval_relationship, 
    approval_status, 
    certification, 
    certification_type, 
    contract, 
    date_role, 
    date_time_role, 
    identification_role, 
    organization_relationship, 
    organizational_project, 
    organizational_project_relationship, 
    organizational_project_role, 
    person_and_organization);
END_TYPE; 

TYPE mri_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_and_time_item WITH 
   (applied_organization_assignment, 
    applied_person_and_organization_assignment, 
    applied_security_classification_assignment, 
    certification, 
    contract, 
    security_classification);
END_TYPE; 

TYPE mri_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_item WITH 
   (applied_organization_assignment, 
    applied_person_and_organization_assignment, 
    applied_security_classification_assignment, 
    certification, 
    contract, 
    security_classification);
END_TYPE; 

TYPE mri_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (approval_status, 
    contract, 
    organization, 
    security_classification_level);
END_TYPE; 

TYPE mri_multi_language_attribute_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON multi_language_attribute_item WITH 
   (applied_organizational_project_assignment, 
    approval, 
    approval_relationship, 
    approval_status, 
    certification, 
    certification_type, 
    contract, 
    date_role, 
    date_time_role, 
    identification_role, 
    organization_relationship, 
    organizational_project, 
    organizational_project_relationship, 
    organizational_project_role, 
    person_and_organization);
END_TYPE; 

TYPE mri_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_item WITH 
   (applied_identification_assignment, 
    applied_security_classification_assignment, 
    contract);
END_TYPE; 

TYPE mri_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON person_and_organization_item WITH 
   (applied_identification_assignment, 
    applied_security_classification_assignment, 
    contract);
END_TYPE; 

END_SCHEMA;  -- Management_resource_information_mim






(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\manifold_subsurface_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 10:22:51 liutkus Exp $
   ISO TC184/SC4/WG12 N3475 - ISO/CD-TS 10303-1702 Manifold subsurface - EXPRESS MIM
*)


SCHEMA Manifold_subsurface_mim;
	USE FROM Manifold_surface_mim;	-- ISO/TS 10303-1509
	USE FROM Aic_manifold_subsurface;
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\manifold_surface_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.6 2004/10/22 14:19:04 darla Exp $
 ISO TC184/SC4/WG12 N1277 - ISO/TS 10303-1509 Manifold surface - EXPRESS MIM
*)

SCHEMA Manifold_surface_mim;

USE FROM Elemental_geometric_shape_mim;

USE FROM aic_manifold_surface;              -- ISO 10303-511 


END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\measure_representation_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.4 2004/10/22 14:22:50 darla Exp $
 ISO TC184/SC4/WG12 N1217 - ISO/TS 10303-1118 Measure representation - EXPRESS MIM
*)

SCHEMA Measure_representation_mim;

USE FROM Foundation_representation_mim;

USE FROM qualified_measure_schema
(measure_representation_item);

USE FROM representation_schema
(value_representation_item);

USE FROM Value_with_unit_mim;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\model_parameter_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.19 2005/04/04 10:22:52 liutkus Exp $
   ISO TC184/SC4/WG12 N3493 - ISO/CD-TS 10303-1703 Model parameter - EXPRESS MIM
*)


SCHEMA Model_parameter_mim;
	USE FROM Characteristic_mim;	-- ISO/TS 10303-1654
	USE FROM Classification_with_attributes_mim;	-- ISO/TS 10303-1111
	USE FROM Independent_property_representation_mim;	-- ISO/TS 10303-1038
	USE FROM Group_mim;	-- ISO/TS 10303-1113	
	
	USE FROM Specification_document_mim;	-- ISO/TS 10303-1747

TYPE mp_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
   (representation_item);
END_TYPE; 

TYPE mp_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
   (model_parameter);
END_TYPE; 

TYPE model_parameter_assigned_item = SELECT
     (unit);
END_TYPE;

ENTITY category_model_parameter 
 SUBTYPE OF (model_parameter);
END_ENTITY;

ENTITY model_parameter 
 SUBTYPE OF (descriptive_representation_item,group_assignment, general_property);
  items : OPTIONAL SET [1:1] OF model_parameter_assigned_item;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 
       'MODEL_PARAMETER_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
  WR2: SIZEOF (QUERY (aga <* USEDIN (SELF, 
       'MODEL_PARAMETER_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       ('MODEL_PARAMETER_MIM.' +
       'PARAMETER_TYPE' IN 
       TYPEOF (aga.assigned_group)) AND
       (aga.assigned_group\group.name IN ['string property type', 
       'logical property type', 'physical property type', 
       'boolean property type']))) = 1;
END_ENTITY;

ENTITY parameter_assignment_override
  SUBTYPE OF (representation, representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\parameter_assignment_override))) = 0;
  WR2: SELF\representation_relationship.rep_1 <> 
       SELF\representation_relationship.rep_2;
  WR3: SELF\representation_relationship.name = '';
  WR4: SELF\representation.name = '';
  WR5: 'MODEL_PARAMETER_MIM.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION' IN TYPEOF(SELF\representation_relationship.rep_1);
  WR6: 'MODEL_PARAMETER_MIM.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION' IN TYPEOF(SELF\representation_relationship.rep_2);
END_ENTITY; 

ENTITY parameter_assignment
  SUBTYPE OF (parameter_assignment_representation, property_definition_representation);
END_ENTITY; 

ENTITY parameter_assignment_representation
  SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (SELF.items) = 2;
  WR2: SIZEOF (QUERY (it <* SELF.items |
       (SIZEOF (TYPEOF (it) *
       ['MODEL_PARAMETER_MIM.' +
       'MODEL_PARAMETER']) 
       = 1))) = 1;
  WR3: SIZEOF (QUERY (it <* SELF.items |
       (SIZEOF (TYPEOF (it) *
       ['MODEL_PARAMETER_MIM.' +
       'COORDINATED_REPRESENTATION_ITEM']) 
       = 1))) <= 1;
  WR4: SIZEOF (QUERY (it <* SELF.items |
        (SIZEOF (QUERY(aga <* USEDIN (it,
        'MODEL_PARAMETER_MIM.' +
        'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
             (SIZEOF (TYPEOF ( aga\group_assignment.assigned_group) *
       ['MODEL_PARAMETER_MIM.' +
       'CHARACTERISTIC_TYPE']) = 1))) 
       = 1))) <= 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\parameter_assignment_representation)) = 0; 
END_ENTITY;

ENTITY product_specific_parameter_value_assignment
  SUBTYPE OF (characterized_object,
              product_related_product_category); 
WHERE
  WR1: SIZEOF(SELF\product_related_product_category.products) = 1;
  WR2: SIZEOF(QUERY(pd <* USEDIN(SELF,
       'MODEL_PARAMETER_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.description = 
                                'assigned parameter') AND
       (SIZEOF(QUERY(pdr <* USEDIN(pd,
       'MODEL_PARAMETER_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (
       ['MODEL_PARAMETER_MIM.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION'] *
       TYPEOF (pdr.used_representation)) = 1))) = 1))) = 1;
  WR3: NOT ('MODEL_PARAMETER_MIM.' +
       'CHARACTERIZED_PRODUCT_CATEGORY' IN
       TYPEOF(SELF));  
  WR4: SELF\characterized_object.name = SELF\product_category.name;  
END_ENTITY;

ENTITY schema_based_model_parameter 
 SUBTYPE OF (model_parameter);
END_ENTITY;

RULE model_parameter_unique_constraint FOR
 ( model_parameter );
LOCAL
  name_bag : BAG OF STRING := [];
  mp_bag : BAG OF model_parameter;
  adr_bag : BAG OF applied_document_reference;
  pass : BOOLEAN := TRUE;
  d_bag : BAG OF document;
END_LOCAL;

REPEAT i := 1 to SIZEOF(model_parameter) by 1;
  IF EXISTS( model_parameter[i]\representation_item.name ) THEN
    IF( NOT( model_parameter[i]\representation_item.name IN name_bag ) ) THEN
      name_bag := name_bag + model_parameter[i]\representation_item.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  mp_bag := QUERY( mp <* model_parameter | (mp\representation_item.name = name_bag[i]) );
  d_bag := [];
  REPEAT j := 1 to SIZEOF(mp_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    adr_bag := USEDIN( mp_bag[j], 
'MODEL_PARAMETER_MIM.'
+ 'APPLIED_DOCUMENT_REFERENCE.ITEMS' );
    REPEAT k := 1 to SIZEOF(adr_bag) by 1;
      IF EXISTS( adr_bag[k].assigned_document ) THEN
        IF ( adr_bag[k].assigned_document IN d_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          d_bag := d_bag + adr_bag[k].assigned_document;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\multi_linguism_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.9 2004/11/30 17:12:57 robbod Exp $
 ISO TC184/SC4/WG12 N3243 - ISO/TS 10303-1105 Multi linguism - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2224
*) 


SCHEMA Multi_linguism_mim;

USE FROM management_resources_schema   -- ISO 10303-41
  (attribute_classification_assignment,
   attribute_value_assignment); 

USE FROM group_schema   -- ISO 10303-41
  (group); 


TYPE attribute_language_item = EXTENSIBLE GENERIC_ENTITY SELECT
   (multi_language_attribute_assignment, 
    attribute_value_assignment);
END_TYPE; 


TYPE multi_language_attribute_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY language 
SUBTYPE OF (group); 
WHERE
WR1: SELF\group.name <> '';
END_ENTITY; 

ENTITY attribute_language_assignment 
SUBTYPE OF (attribute_classification_assignment); 
  SELF\attribute_classification_assignment.assigned_class: language;
  items : SET [1:?] OF attribute_language_item; 
WHERE 
WR1: SELF\attribute_classification_assignment.role.name IN ['primary', 'translated']; 
WR2: SELF\attribute_classification_assignment.attribute_name<> '';
END_ENTITY; 

ENTITY multi_language_attribute_assignment 
SUBTYPE OF (attribute_value_assignment); 
  items : SET [1:?] OF multi_language_attribute_item;

DERIVE
  translation_language : language := language_indication[1]\attribute_classification_assignment.assigned_class;

INVERSE
  language_indication: SET[1:1] OF attribute_language_assignment FOR items;

WHERE 
WR1: (SELF\attribute_value_assignment.role.name = 'alternate language');
WR2: SIZEOF( QUERY( ala <* language_indication |  
   (ala\attribute_classification_assignment.attribute_name = 'attribute_value') AND 
   (ala\attribute_classification_assignment.role.name='translated') )) = 1 ; 
WR3: SELF\attribute_value_assignment.attribute_name <> '' ;
WR4: SIZEOF(QUERY(ci <* items |
SIZEOF(QUERY(ata <* USEDIN(ci, 'MULTI_LINGUISM_MIM.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS') |
(ata\attribute_value_assignment.attribute_name = SELF\attribute_value_assignment.attribute_name) AND 
(ata.translation_language :=: translation_language) ))>1 )) =0;
WR5: SIZEOF(QUERY(ci <* items |
SIZEOF(QUERY(ata <* USEDIN(ci, 'MULTI_LINGUISM_MIM.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS') |
 (ata\attribute_classification_assignment.role.name='primary') AND
 (ata\attribute_classification_assignment.attribute_name= SELF\attribute_value_assignment.attribute_name) AND 
 (ata\attribute_classification_assignment.assigned_class :=: translation_language) ))>0 )) =0;
END_ENTITY; 


RULE restrict_language_assignment_per_attribute FOR (attribute_language_assignment);
WHERE
WR1: SIZEOF ( QUERY ( ala1 <* attribute_language_assignment |
	SIZEOF(QUERY( it <* ala1.items |
	   SIZEOF ( QUERY ( ala2 <* USEDIN ( it ,'MULTI_LINGUISM_MIM.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS' ) | 
		( ala1\attribute_classification_assignment.attribute_name = ala2\attribute_classification_assignment.attribute_name ) AND 
		( ala1\attribute_classification_assignment.assigned_class :=: ala2\attribute_classification_assignment.assigned_class )
		 )) >1 
	   )) >0 
	)) =0;
END_RULE;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\name_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.6 2004/11/19 21:37:37 robbod Exp $
 ISO TC184/SC4/WG12 N3086 - ISO/TS 10303-1340 Name assignment - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2283
*) 


SCHEMA Name_assignment_mim;

USE FROM management_resources_schema   -- ISO 10303-41
  (name_assignment); 


TYPE name_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY applied_name_assignment
  SUBTYPE OF (name_assignment);
  item : name_item;
END_ENTITY;

END_SCHEMA;  -- Name_assignment_mim






(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\network_functional_design_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.17 2005/04/04 10:22:51 liutkus Exp $
   ISO TC184/SC4/WG12 N3340 - ISO/CD-TS 10303-1704 Network functional design view - EXPRESS MIM
*)
SCHEMA Network_functional_design_view_mim;

	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705
	USE FROM Part_occurrence_mim;	-- ISO/TS 10303-1715
	USE FROM Requirement_assignment_mim;	-- ISO/TS 10303-1233

USE FROM Material_property_definition_schema (property_definition_relationship);

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set); 

TYPE nfdv_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (component_functional_unit);
END_TYPE; 

ENTITY bus_element_link
  SUBTYPE OF (product_definition,product_definition_relationship);
UNIQUE
  UR1: SELF\product_definition_relationship.related_product_definition,
       SELF\product_definition_relationship.relating_product_definition;
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'BUS_STRUCTURAL_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition)) OR
       ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'NETWORK_NODE_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.related_product_definition));
  WR3: ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'BUS_STRUCTURAL_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition)) OR
       ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'NETWORK_NODE_DEFINITION' IN
       TYPEOF (SELF\product_definition_relationship.relating_product_definition));
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\product_definition_relationship ||
       SELF\bus_element_link)) = 0;
  WR5: NOT EXISTS(SELF\product_definition.name) OR 
        (SELF\product_definition.name = '');
  WR6: SELF\product_definition_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
             'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')) >= 1;
END_ENTITY; 

ENTITY bus_structural_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: SIZEOF (QUERY (bce <* QUERY (pdr <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'bus composition') |
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'BUS_ELEMENT_LINK' IN
       TYPEOF (bce.related_product_definition))) >= 1;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd, 
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 
       'functional unit network terminal definition bus assignment')) 
       <= 1)) <= 1;
  WR3: consistent_bus_structural_definition(bag_to_set(QUERY( pdr <* USEDIN(SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'BUS_ELEMENT_LINK' IN TYPEOF(pdr.related_product_definition))));
END_ENTITY;

ENTITY component_functional_terminal
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'COMPONENT_FUNCTIONAL_UNIT' IN
       TYPEOF (SELF.of_shape.definition);
  WR2: SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated terminal') |
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION'
       IN TYPEOF (it.relating_shape_aspect))) = 1;
  WR3: SIZEOF (QUERY (futba <* QUERY (pdr <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'functional unit terminal bus assignment') |
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'BUS_STRUCTURAL_DEFINITION' IN 
       TYPEOF (futba.relating_property_definition.definition))) <= 1;
  WR4: SIZEOF (QUERY (futna <* QUERY (pdr <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'functional unit terminal node assignment') |
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'NETWORK_NODE_DEFINITION' IN 
       TYPEOF (futna.relating_property_definition.definition))) <= 1;
END_ENTITY;

ENTITY component_functional_unit
  SUBTYPE OF (product_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'functional occurrence';
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa <* USEDIN (pd,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'COMPONENT_FUNCTIONAL_TERMINAL' IN
       TYPEOF (sa))) >= 1)) >= 1;
  WR3: SIZEOF (QUERY (ifu <* QUERY (pdr <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated functional unit') |
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (ifu.relating_product_definition))) = 1;
  WR4: SIZEOF (QUERY (nc <* QUERY (pdr <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'network composition') |
       ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (nc.relating_product_definition)) AND
       (nc.relating_product_definition.frame_of_reference.name =
       'functional network design'))) = 1;
END_ENTITY;

ENTITY network_node_definition
  SUBTYPE OF (product_definition);
WHERE
  WR1: SELF.frame_of_reference.name = 'functional network design';
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (funtdna <* QUERY (pdr <* USEDIN (pd,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name =
       'functional unit network terminal definition node assignment') |
       ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_SHAPE' IN 
       TYPEOF (funtdna.related_property_definition)) AND
       ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' + 
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN 
       TYPEOF 
       (funtdna.related_property_definition.definition)))) <= 1)) <= 1;
  WR3: SIZEOF (QUERY (funn <* USEDIN (SELF, 
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (funn.relating_product_definition)) AND
       (funn.relating_product_definition.frame_of_reference.name =
       'functional network design'))) = 1;
END_ENTITY;

RULE bus_structural_definition_unique_constraint FOR 
(bus_structural_definition, product_definition_formation, product);

LOCAL
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(bus_structural_definition) by 1;
  IF EXISTS( bus_structural_definition[i].formation.of_product.name ) THEN
    IF (bus_structural_definition[i].formation.of_product.name IN 
                                                       name_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      name_bag := name_bag + 
bus_structural_definition[i]\product_definition.formation.of_product.name;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
WR1: pass;
END_RULE;

RULE functional_unit_network_terminal_definition_bus_assignment_constraint
FOR ( property_definition_relationship );
WHERE
  WR1: SIZEOF(QUERY(pdr <* property_definition_relationship |
  (pdr\property_definition_relationship.name = 'functional unit network terminal definition bus assignment')
       AND NOT('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'BUS_STRUCTURAL_DEFINITION' IN
       TYPEOF(pdr.relating_property_definition.definition))
       )) = 0;
  WR2: SIZEOF(QUERY(pdr <* property_definition_relationship |
  (pdr\property_definition_relationship.name = 'functional unit network terminal definition bus assignment')
       AND NOT(('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_SHAPE' IN
       TYPEOF(pdr.related_property_definition.definition))
       AND (SIZEOF(QUERY(futd <* 
                       USEDIN(pdr.related_property_definition.definition,
       'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION.OF_SHAPE' IN TYPEOF(futd))
       )) > 0)))) = 0;
END_RULE;

RULE functional_unit_terminal_bus_assignment_constraint FOR
( property_definition_relationship );
WHERE
  WR1: SIZEOF(QUERY(pdr <* property_definition_relationship |
       (pdr\property_definition_relationship.name = 'functional unit terminal bus assignment')
       AND NOT('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.'
       + 'BUS_STRUCTURAL_DEFINITION'
       IN TYPEOF(pdr.relating_property_definition.definition))
       )) = 0;
END_RULE;

RULE functional_unit_network_node_definition_unique_constraint FOR
 ( network_node_definition );
LOCAL
  funnd : BAG OF network_node_definition := 
 QUERY( nnd <* network_node_definition
| (nnd.frame_of_reference.name = 'functional network design') );
  name_bag : BAG OF STRING := [];
  nnd_bag : BAG OF network_node_definition;
  pdr_bag : BAG OF product_definition_relationship;
  pass : BOOLEAN := TRUE;
  fu_bag : BAG OF functional_unit;
END_LOCAL;

REPEAT i := 1 to SIZEOF(funnd) by 1;
  IF EXISTS( funnd[i]\product_definition.name ) THEN
    IF( NOT( funnd[i]\product_definition.name IN name_bag ) ) THEN
      name_bag := name_bag + funnd[i]\product_definition.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  fu_bag := [];
  nnd_bag := QUERY( nnd <* funnd | (nnd\product_definition.name = 
          name_bag[i]) );
  REPEAT j := 1 to SIZEOF(nnd_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pdr_bag := QUERY( pdr <* USEDIN( nnd_bag[j], 
'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.'
+ 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | 
(('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' +
'FUNCTIONAL_UNIT' IN TYPEOF(pdr.relating_product_definition)) AND 
                  (pdr\product_definition_relationship.name = 'functional unit network node')) );
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
      IF EXISTS( pdr_bag[k].relating_product_definition ) THEN
        IF ( pdr_bag[k].relating_product_definition IN fu_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          fu_bag := fu_bag + pdr_bag[k].relating_product_definition;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE functional_unit_unique_constraint FOR
 ( component_functional_unit );
LOCAL
  fu : BAG OF component_functional_unit := 
QUERY( cfu <* component_functional_unit
| (cfu.frame_of_reference.name = 'functional occurrence') );
  id_bag : BAG OF STRING := [];
  cfu_bag : BAG OF component_functional_unit;
  pdr_bag : BAG OF product_definition_relationship;
  pass : BOOLEAN := TRUE;
  fu_bag : BAG OF functional_unit;
END_LOCAL;

REPEAT i := 1 to SIZEOF(fu) by 1;
  IF EXISTS( fu[i].id ) THEN
    IF( NOT( fu[i].id IN id_bag ) ) THEN
      id_bag := id_bag + fu[i].id;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(id_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  fu_bag := [];
  cfu_bag := QUERY( cfu <* fu | (cfu.id = id_bag[i]) );
  REPEAT j := 1 to SIZEOF(cfu_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pdr_bag := QUERY( pdr <* USEDIN( cfu_bag[j], 
'NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.'
+ 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | 
((pdr\product_definition_relationship.name = 'network composition')
AND ('NETWORK_FUNCTIONAL_DESIGN_VIEW_MIM.' + 
'FUNCTIONAL_UNIT'
IN TYPEOF(pdr.relating_product_definition)) AND 
      (pdr.relating_product_definition.frame_of_reference.name =
       'functional network design')) );
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
      IF EXISTS( pdr_bag[k].relating_product_definition ) THEN
        IF ( pdr_bag[k].relating_product_definition IN fu_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          fu_bag := fu_bag + pdr_bag[k].relating_product_definition;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

FUNCTION consistent_bus_structural_definition
     (input_rel : SET [1:?] OF product_definition_relationship) : BOOLEAN;    

LOCAL  
        input : SET OF product_definition := [];
       vertex : SET OF product_definition := []; 
         edge : INTEGER := SIZEOF(input);
           vc : INTEGER := 0;
vertex_degree : INTEGER := 0;    
END_LOCAL;    
REPEAT i := 1 to SIZEOF(input_rel) BY 1;
      input := input + input_rel[i].related_product_definition;
END_REPEAT;

REPEAT i := 1 TO SIZEOF(input) BY 1;
      vertex := vertex + input[i]\product_definition_relationship.relating_product_definition;
      vertex := vertex + input[i]\product_definition_relationship.related_product_definition;
END_REPEAT;
     vc := SIZEOF(vertex);
    IF ( vc <> ( edge + 1 )) THEN 
      RETURN(FALSE);
    END_IF;
REPEAT i := 1 TO vc BY 1;
      vertex_degree := 0;
      REPEAT j := 1 to SIZEOF(input) BY 1;
        IF input[j]\product_definition_relationship.relating_product_definition = vertex[i] THEN 
          vertex_degree := vertex_degree + 1;
        END_IF;
        IF input[j]\product_definition_relationship.related_product_definition = vertex[i] THEN 
          vertex_degree := vertex_degree + 1;
        END_IF;
      END_REPEAT;
      IF (vertex_degree > 2) THEN
        RETURN(FALSE);
      END_IF;
END_REPEAT;    
RETURN(TRUE);  
END_FUNCTION;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\network_functional_usage_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.18 2005/02/25 11:14:36 liutkus Exp $
   ISO TC184/SC4/WG12 N3343 - ISO/CD-TS 10303-1705 Network functional usage view - EXPRESS MIM
*)
SCHEMA Network_functional_usage_view_mim;

	USE FROM Analytical_model_mim;	-- ISO/TS 10303-1603
	USE FROM Network_functional_design_view_mim;	-- ISO/TS 10303-1704
	USE FROM Product_identification_mim;	-- ISO/TS 10303-1017
	USE FROM Product_view_definition_relationship_mim;	-- ISO/TS 10303-1041

-- USE FROM Date_time_schema;

USE FROM Document_schema(document_type);
USE FROM Product_property_definition_schema
	(shape_aspect,
	shape_aspect_relationship);
USE FROM Material_property_definition_schema(property_definition_relationship);

TYPE nfuv_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
     (shape_aspect);
END_TYPE;

ENTITY functional_terminal_group
 SUBTYPE OF (group);
UNIQUE
   UR1: SELF\group.name;
END_ENTITY;

ENTITY functional_unit
 SUBTYPE OF (product_definition);
WHERE
  WR1: SELF.frame_of_reference.name IN ['functional design usage', 
       'functional network design'];
  WR2: (NOT ('NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
   SELF\product_definition_with_associated_documents.documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR3: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) = 1; 
  WR4: SIZEOF (USEDIN (SELF, 
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR5: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR6: SIZEOF (USEDIN (SELF, 
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR7: (NOT (SELF.frame_of_reference.name = 
                                 'functional network design')) OR
       (SIZEOF (QUERY (du <* QUERY (pdr <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       du.relating_product_definition.frame_of_reference.name = 
       'functional design usage')) = 1);
  WR8: (NOT (SIZEOF([
        'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
            'THERMAL_NETWORK',
            'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
            'ELECTRICAL_NETWORK'] * TYPEOF(SELF)) = 1))
        OR (SELF.frame_of_reference.name = 'functional network design');
END_ENTITY;

ENTITY functional_unit_terminal_definition
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: ('NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'FUNCTIONAL_UNIT' IN
       TYPEOF (SELF.of_shape.definition)) AND
   (SELF.of_shape.definition\product_definition.frame_of_reference.name =
       'functional design usage');
  WR2: SIZEOF (QUERY (pd2 <* QUERY (pd <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION' IN
       TYPEOF (pd)) |
       SIZEOF (QUERY (funtdba <* QUERY (pdr <* USEDIN (pd2,
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 
       'functional unit network terminal definition bus assignment') |
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'BUS_STRUCTURAL_DEFINITION' IN 
       TYPEOF 
       (funtdba.relating_property_definition.definition))) <= 1)) <= 1;
  WR3: SIZEOF (QUERY (pd2 <* QUERY (pd <* USEDIN (SELF,
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION' IN
       TYPEOF (pd)) |
       SIZEOF (QUERY (funtdna <* QUERY (pdr <* USEDIN (pd2,
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 
       'functional unit network terminal definition node assignment') |
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'NETWORK_NODE_DEFINITION' IN 
       TYPEOF 
       (funtdna.relating_property_definition.definition))) <= 1)) <= 1;
END_ENTITY;
(**
ENTITY library_defined_functional_unit
 SUBTYPE OF (externally_defined_functional_unit);
DERIVE
  library : external_source := SELF\externally_defined_item.source;
END_ENTITY;
*)
ENTITY make_from_functional_unit_terminal_definition_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.relating_shape_aspect, 
       SELF\shape_aspect_relationship.related_shape_aspect;
WHERE
  WR1: SIZEOF (['NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION'] *
       TYPEOF (SELF.relating_shape_aspect)) = 1;
  WR2: SIZEOF (['NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION'] *
       TYPEOF (SELF.related_shape_aspect)) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
    SELF\make_from_functional_unit_terminal_definition_relationship)) = 0;
  WR4: relating_shape_aspect.of_shape :<>: 
       related_shape_aspect.of_shape;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect.description = '';
  WR7: SELF\shape_aspect.product_definitional = FALSE;
  WR8: SIZEOF (USEDIN (SELF,
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION')) = 0;
  WR9: SIZEOF (QUERY( sar <* USEDIN(SELF,
       'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (('NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP') IN TYPEOF
       (sar.of_shape\property_definition.definition))
       )) = 1;
END_ENTITY;

ENTITY scalar_terminal_definition_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
UNIQUE
  UR1: related_shape_aspect, relating_shape_aspect;
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :<>:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
       'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\scalar_terminal_definition_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SELF\shape_aspect_relationship.relating_shape_aspect\shape_aspect.description = 'scalar terminal';
  WR8: SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description = 'scalar terminal';
END_ENTITY; 

RULE functional_unit_usage_view_terminal_definition_unique_constraint FOR
 ( functional_unit_terminal_definition );
LOCAL
  name_bag : BAG OF STRING := [];
  futd_bag : BAG OF functional_unit_terminal_definition;
  adr_bag : BAG OF applied_document_reference;
  pass : BOOLEAN := TRUE;
  fu_bag : BAG OF functional_unit;
END_LOCAL;

REPEAT i := 1 to SIZEOF(functional_unit_terminal_definition) by 1;
  IF EXISTS( functional_unit_terminal_definition[i]\shape_aspect.name ) THEN
    IF( NOT( functional_unit_terminal_definition[i]\shape_aspect.name IN 
                                              name_bag ) ) THEN
      name_bag := name_bag + 
                    functional_unit_terminal_definition[i]\shape_aspect.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  fu_bag := [];
  futd_bag := QUERY( futd <* functional_unit_terminal_definition |
((futd\shape_aspect.name = name_bag[i]) AND
('NETWORK_FUNCTIONAL_USAGE_VIEW_MIM.' +
'FUNCTIONAL_UNIT' IN TYPEOF(futd.of_shape.definition)) AND
(futd.of_shape.definition.frame_of_reference.name = 
                                    'functional design usage')) );
  REPEAT j := 1 to SIZEOF(futd_bag) by 1;
    IF EXISTS( futd_bag[j].of_shape.definition ) THEN
      IF ( futd_bag[j].of_shape.definition IN fu_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        fu_bag := fu_bag + futd_bag[j].of_shape.definition;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\non_feature_shape_element_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/03/24 15:21:00 liutkus Exp $
   ISO TC184/SC4/WG12 N3496 - ISO/CD-TS 10303-1706 Non feature shape element - EXPRESS MIM
*)

SCHEMA Non_feature_shape_element_mim;
	USE FROM Basic_geometry_mim;	-- ISO/TS 10303-1652
	USE FROM Extended_elemental_geometric_shape_mim;	-- ISO/TS 10303-1667
	USE FROM Part_feature_location_mim;	-- ISO/TS 10303-1714
	USE FROM Shape_property_assignment_mim;	-- ISO/TS 10303-1032

	USE FROM Material_property_definition_schema(property_definition_relationship);
	
ENTITY group_shape_aspect
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: 'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PRODUCT_DEFINITION' IN
       TYPEOF (SELF\shape_aspect.of_shape.definition);
  WR2: NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region']) OR
       (('NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (SELF\shape_aspect.of_shape.definition)) AND
       (EXISTS(SELF\shape_aspect.of_shape.definition\product_definition.name)) AND
       (NOT EXISTS(SELF\shape_aspect.of_shape.definition\product_definition.name) OR 
       (SELF\shape_aspect.of_shape.definition\product_definition.name = 'interconnect module')));
 WR3: ((NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
               (SIZEOF( QUERY ( pd <* USEDIN(SELF,
            'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr <* USEDIN(pd,
           'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATING_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'constrained object')
     AND (('NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                    'INTERCONNECT_MODULE_DESIGN_OBJECT_CATEGORY') IN
                  TYPEOF(pdr.related_property_definition.definition)))
                        )) = 1)
                )) = 1));
 WR4: (NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'design specific purpose'))) = 1)) = 1))) = 0);
  WR5: (NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'keepout') AND
       (it\descriptive_representation_item.description IN ['true', 'false']))) = 1)) = 1))) = 0);
  WR6: (NOT(SELF\shape_aspect.description IN 
       ['interconnect module constraint region'])) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) = 1)) = 1);
  WR7: (NOT(SELF\shape_aspect.description IN
       ['interconnect module constraint region'])) OR
               (SIZEOF( QUERY ( pd <* USEDIN(SELF,
            'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr <* USEDIN(pd,
           'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'requirement')
     AND (('NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                    'REQUIREMENTS_PROPERTY') IN
                  TYPEOF(pdr.relating_property_definition)))
                        )) = 1)
                )) = 1);
  WR8: (NOT(SELF\shape_aspect.description = 
       'termination constraint')) OR
       (SIZEOF (QUERY (ctm <* QUERY (sar <* USEDIN (SELF,
       'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'constrained termination member') |
       ctm.related_shape_aspect\shape_aspect.description = 
       'mating connector termination')) >= 2);
  WR9: EXISTS(SELF\shape_aspect.description);
  WR10: (NOT(SELF\shape_aspect.description IN
       ['placement group'])) OR
               (SIZEOF( QUERY ( pd <* USEDIN(SELF,
            'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr <* USEDIN(pd,
           'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'requirement')
     AND (('NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                    'REQUIREMENTS_PROPERTY') IN
                  TYPEOF(pdr.relating_property_definition))
               AND
           (pdr.relating_property_definition\property_definition.name = 'requirement')))
                   ) = 1)
                )) = 1);
  WR11: (NOT(SELF\shape_aspect.description IN
       ['termination constraint'])) OR
               (SIZEOF( QUERY ( pd <* USEDIN(SELF,
            'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                         'PROPERTY_DEFINITION.DEFINITION')
                     | (SIZEOF( QUERY ( pdr <* USEDIN(pd,
           'NON_FEATURE_SHAPE_ELEMENT_MIM.' +
    'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION')
                            | ((pdr\property_definition_relationship.name = 'termination usage constraint')
     AND (('NON_FEATURE_SHAPE_ELEMENT_MIM.' +
                    'REQUIREMENTS_PROPERTY') IN
                  TYPEOF(pdr.relating_property_definition))
                           AND
    (pdr.relating_property_definition\property_definition.name = 'termination usage constraint')))
                        ) = 1) 
                )) = 1);
END_ENTITY;

ENTITY reference_graphic_registration_mark
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.product_definitional = false;
END_ENTITY;

ENTITY seating_plane
  SUBTYPE OF (shape_aspect);
WHERE
    WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
         SELF\seating_plane)) = 0;
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\package_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/04/04 10:22:52 liutkus Exp $
   ISO TC184/SC4/WG12 N3499 - ISO/CD-TS 10303-1707 Package - EXPRESS MIM
*)


SCHEMA Package_mim;
	USE FROM Extended_geometric_tolerance_mim;	-- ISO/TS 10303-1666
	USE FROM Part_feature_function_mim;	-- ISO/TS 10303-1712
(** 	
ENTITY externally_defined_package
 SUBTYPE OF (externally_defined_physical_unit);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical design usage';
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
                           'registered case style')) >= 1))) = 0;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PACKAGE_MIM.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr)) |
       sr_pdr.used_representation\representation.name = 'seating plane')) = 1))) = 0;
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PACKAGE_MIM.' +
       'PACKAGE_BODY' IN 
       TYPEOF (sa))) <= 1))) = 0;
  WR5: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PACKAGE_MIM.' +
       'PACKAGE_TERMINAL' IN 
       TYPEOF (sa))) >= 1))) = 0;
  WR6: (NOT (SELF\product_definition.description = 'altered package')) OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'package preparation') AND
       (SIZEOF (['PACKAGE_MIM.' +
       'PACKAGE',
       'PACKAGE_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'PACKAGE_MIM.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (pdr.relating_product_definition)) = 1))) = 1); 
END_ENTITY;
*)
ENTITY functional_orientation_feature
 SUBTYPE OF (shape_aspect);
END_ENTITY;

ENTITY guided_wave_terminal
   SUBTYPE OF (package_terminal);
END_ENTITY;
(**
ENTITY library_defined_package
 SUBTYPE OF (library_defined_physical_unit);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical design usage';
  WR2: SIZEOF(USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION')) > 0;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY(sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PACKAGE_MIM.' +
       'SEATING_PLANE' IN
       TYPEOF (sa))) = 1))) = 1;
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PACKAGE_MIM.' +
       'PACKAGE_BODY' IN 
       TYPEOF (sa))) = 1))) <= 1;
  WR5: NOT(EXISTS(SELF\product_definition.description) AND
        (SELF\product_definition.description = 'altered package')) OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'package preparation') AND
       (SIZEOF (['PACKAGE_MIM.' +
       'PACKAGE',
       'PACKAGE_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'PACKAGE_MIM.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (pdr.relating_product_definition)) = 1))) = 1); 
END_ENTITY;
*)
ENTITY package
 SUBTYPE OF (physical_unit);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical design usage';
  WR2: SIZEOF (QUERY (prpc <* USEDIN (SELF.formation.of_product,
       'PACKAGE_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'package')) > 0;
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PACKAGE_MIM.' +
       'PACKAGE_BODY' IN 
       TYPEOF (sa))) = 1))) <= 1;
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PACKAGE_MIM.' +
       'PACKAGE_TERMINAL' IN 
       TYPEOF (sa))) >= 1))) >= 1;
  WR5: (NOT (SELF\product_definition.description = 'altered package')) OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'package alteration') AND
       (SIZEOF (['PACKAGE_MIM.' +
       'PACKAGE',
       'PACKAGE_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'PACKAGE_MIM.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (pdr.relating_product_definition)) = 1))) = 1); 
  WR6: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 'package mounting data')) = 1))) = 1;

  WR7: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body height above seating plane')) = 1)
       )) = 1))) = 1;

  WR8: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body height below seating plane')) = 1)
       )) = 1))) <= 1;

  WR9: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body clearance above seating plane')) = 1)
       )) = 1))) <= 1;

  WR10: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum body clearance below seating plane')) = 1)
       )) = 1))) <= 1;

  WR11: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'minimum body clearance above seating plane')) = 1)
       )) = 1))) <= 1;

  WR12: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'minimum body clearance below seating plane')) = 1)
       )) = 1))) <= 1;

  WR13: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'maximum lead length below seating plane')) = 1)
       )) = 1))) <= 1;

  WR14: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 'package mounting data')
       AND (SIZEOF (QUERY (item <* USEDIN( pdr.used_representation,
       'PACKAGE_MIM.' +
       'REPRESENTATION.ITEMS') | item\representation_item.name =
       'least lead length below seating plane')) = 1)
       )) = 1))) <= 1;
  WR15: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('PACKAGE_MIM.' +
       'SHAPE_ASPECT' IN TYPEOF(sa)) AND
       (SIZEOF (QUERY ( sar <* USEDIN(sa,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
        ((sar\shape_aspect_relationship.name = 'package seating plane') AND
        ('PACKAGE_MIM.' +
       'SEATING_PLANE' IN TYPEOF(sar.related_shape_aspect))) )) = 1))
       )) = 1)
       )
       ) = 1;

  WR16: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PACKAGE_MIM.' +
       'SEATING_PLANE' IN
       TYPEOF (sa)))) = 1))) = 1;

  WR17: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('PACKAGE_MIM.' +
       'SHAPE_ASPECT' IN TYPEOF(sa)) AND
       (SIZEOF (QUERY ( sar <* USEDIN(sa,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
        ((sar\shape_aspect_relationship.name = 'of datum reference plane') AND
        ('PACKAGE_MIM.' +
       'DATUM_REFERENCE_FRAME' IN TYPEOF(sar.related_shape_aspect))) )) = 1))
       )) = 1)
       )
       ) <= 1;
 WR18: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PACKAGE_MIM.' +
       'PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(sa))
       )) = 1)
       )
       ) <= 1;
END_ENTITY;

ENTITY package_body
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['PACKAGE_MIM.' +
       'PACKAGE',
       'PACKAGE_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'PACKAGE_MIM.' +
       'LIBRARY_DEFINED_PACKAGE']) = 1;
  WR2: SIZEOF (USEDIN (SELF, 
        'PACKAGE_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) = 1;
END_ENTITY;

ENTITY package_body_bottom_surface
 SUBTYPE OF (package_body_surface);
END_ENTITY;

ENTITY package_body_edge_segment_surface
  SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: 'PACKAGE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR2: 'PACKAGE_MIM.' +
       'EDGE_SEGMENT_VERTEX' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR3: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
  WR4: SIZEOF (QUERY (ce <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'composed surface') |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_EDGE_SURFACE' IN TYPEOF
       (ce.relating_shape_aspect) ))) = 1;
  WR5: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\package_body_edge_segment_surface)) = 0;
END_ENTITY;

ENTITY package_body_edge_surface
 SUBTYPE OF (package_body_surface);
WHERE
  WR1: SELF\shape_aspect.product_definitional;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\part_mounting_feature ||
       SELF\package_body_edge_surface ||
       SELF\package_body_surface)) = 0;
END_ENTITY;

ENTITY package_body_surface
ABSTRACT SUPERTYPE OF (ONEOF(package_body_top_surface,
                         package_body_edge_surface,
                         package_body_bottom_surface))
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['PACKAGE_MIM.' +
       'PACKAGE',
       'PACKAGE_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'PACKAGE_MIM.' +
       'LIBRARY_DEFINED_PACKAGE']) = 1;
  WR2: SELF\shape_aspect.product_definitional;
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (TYPEOF(sar\shape_aspect_relationship.relating_shape_aspect) = 
       ['PACKAGE_MIM.' +
       'PACKAGE_BODY']))) = 1;
END_ENTITY;

ENTITY package_body_top_surface
 SUBTYPE OF (package_body_surface);
END_ENTITY;

ENTITY package_terminal
 SUPERTYPE OF ((guided_wave_terminal ANDOR wire_terminal) 
 	ANDOR primary_reference_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PACKAGE_MIM.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) >= 1))) = 0;
  WR2: SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['PACKAGE_MIM.' +
       'PACKAGE',
       'PACKAGE_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'PACKAGE_MIM.' +
       'LIBRARY_DEFINED_PACKAGE']) = 1;
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF, 
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |(
       'PACKAGE_MIM.' +
       'PRODUCT_DEFINITION' IN TYPEOF (sar.relating_shape_aspect.of_shape.definition)) AND
       (sar\shape_aspect_relationship.name = 'terminal core material') AND
       (sar.relating_shape_aspect.of_shape.definition.
        frame_of_reference\application_context_element.name = 'material definition') 
       )) <= 1;
  WR4: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |(
       'PACKAGE_MIM.' +
       'PRODUCT_DEFINITION' IN TYPEOF (sar.relating_shape_aspect.of_shape.definition)) AND
       (sar\shape_aspect_relationship.name = 'terminal surface material') AND
       (sar.relating_shape_aspect.of_shape.definition.
        frame_of_reference\application_context_element.name = 'material definition') 
       )) = 1;
  WR5: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'PACKAGE_MIM.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) <= 1;
 WR6: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'external connection zone') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) >= 0;
 WR7: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu <* QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PACKAGE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'maximum terminal diametrical extent')) 
        <= 1)) <= 1)) <= 1;
 WR8: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (lmwu <* QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PACKAGE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) |
       lmwu\representation_item.name = 'minimum terminal diametrical extent')) 
         <= 1)) <= 1)) <= 1;
 WR9: SIZEOF(QUERY ( sar <* USEDIN (SELF,
      'PACKAGE_MIM.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       <= 1;
 WR10: SIZEOF(QUERY ( sar <* USEDIN (SELF,
      'PACKAGE_MIM.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       <= 1;
 WR11: SIZEOF (QUERY (eca <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'seating plane zone') |
       'PACKAGE_MIM.' +
       'CONNECTION_ZONE_INTERFACE_PLANE_RELATIONSHIP' IN
       TYPEOF (eca.related_shape_aspect))) <= 1;
END_ENTITY;

RULE polarity_indication_feature_constraint FOR 
( shape_aspect);
WHERE
  WR1: SIZEOF (QUERY ( sa <* shape_aspect | NOT(
       NOT (sa\shape_aspect.description = 'polarity indication feature') OR 
       (SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (sa,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'associated body vertical extent')
       ) |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_BOTTOM_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) <= 1) 
       ))) = 0;
  WR2: SIZEOF (QUERY ( sa <* shape_aspect | NOT(
       NOT (sa\shape_aspect.description = 'polarity indication feature') OR 
       (SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (sa,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'associated body vertical extent')
       ) |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_TOP_SURFACE' IN
       TYPEOF (it.relating_shape_aspect)) 
       )) <= 1)
       ))) = 0;
  WR3: SIZEOF (QUERY ( sa <* shape_aspect | NOT(
       NOT (sa\shape_aspect.description = 'polarity indication feature') OR 
       (SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (sa,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'associated terminal')
       ) |
       ('PACKAGE_MIM.' +
       'PACKAGE_TERMINAL' IN
       TYPEOF (it.relating_shape_aspect))
       )) = 1)
       ))) = 0;
END_RULE;

ENTITY primary_orientation_feature
 SUBTYPE OF (physical_unit_datum_feature);
WHERE
  WR1: SELF\shape_aspect.product_definitional = TRUE;
  WR2: SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_BOTTOM_SURFACE' IN
       TYPEOF (it.relating_shape_aspect)) 
       )) <= 1;
  WR3: SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_TOP_SURFACE' IN
       TYPEOF (it.relating_shape_aspect)) 
       )) <= 1;
END_ENTITY;

ENTITY primary_reference_terminal
  SUBTYPE OF (package_terminal);
WHERE
 WR1: SIZEOF(QUERY ( sar <* USEDIN (SELF,
      'PACKAGE_MIM.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       = 0;
 WR2: SIZEOF(QUERY ( sar <* USEDIN (SELF,
      'PACKAGE_MIM.' +
      'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'precedent feaure' ))
       <= 1;
END_ENTITY;

ENTITY secondary_orientation_feature
 SUBTYPE OF (physical_unit_datum_feature);
WHERE
 WR1:SIZEOF ((TYPEOF (SELF)) * 
      ['PACKAGE_MIM.' +
       'PRIMARY_ORIENTATION_FEATURE',
       'PACKAGE_MIM.' +
       'SEATING_PLANE',
       'PACKAGE_MIM.' +
       'VIEWING_PLANE',
       'PACKAGE_MIM.' +
       'PHYSICAL_UNIT_DATUM',
       'PACKAGE_MIM.' +
       'COMPONENT_DEFINITION']) = 0;
 WR2: SELF.product_definitional = TRUE;
 WR3: SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_BOTTOM_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) <= 1;
 WR4: SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_TOP_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) <= 1;
END_ENTITY;

ENTITY tertiary_orientation_feature
 SUBTYPE OF (physical_unit_datum_feature);
WHERE
 WR1:SIZEOF ((TYPEOF (SELF)) * 
      ['PACKAGE_MIM.' +
       'PRIMARY_ORIENTATION_FEATURE',
       'PACKAGE_MIM.' +
       'SECONDARY_ORIENTATION_FEATURE',
       'PACKAGE_MIM.' +
       'SEATING_PLANE',
       'PACKAGE_MIM.' +
       'VIEWING_PLANE',
       'PACKAGE_MIM.' +
       'PHYSICAL_UNIT_DATUM',
       'PACKAGE_MIM.' +
       'COMPONENT_DEFINITION']) = 0;
 WR2: SELF.product_definitional = TRUE;
 WR3: SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_BOTTOM_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) <= 1;
 WR4: SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated body vertical extent') |
       ('PACKAGE_MIM.' +
       'PACKAGE_BODY_TOP_SURFACE' IN
       TYPEOF (it.relating_shape_aspect))
       )) <= 1;
END_ENTITY;

ENTITY wire_terminal
   SUBTYPE OF (package_terminal);
WHERE
WR1: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (QUERY (it <* pdr.used_representation.items |
       (('PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM') IN TYPEOF (it))
       AND
       (('PACKAGE_MIM.' +
       'LENGTH_UNIT') IN
   TYPEOF (it\measure_with_unit.unit_component)))) = 2))) = 1)) )) = 0);
 WR2: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (QUERY (it <* pdr.used_representation.items | (
       'PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) AND
       (it\representation_item.name = 'maximum wire terminal length')
       AND
       (('PACKAGE_MIM.' +
       'LENGTH_UNIT') IN
        TYPEOF (it\measure_with_unit.unit_component)))) = 1
                                               ))) = 1)) )) = 0);
 WR3: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (SIZEOF (QUERY (it <* pdr.used_representation.items | (
       'PACKAGE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (it)) AND
       (it\representation_item.name = 'minimum wire terminal length')
       AND
       (('PACKAGE_MIM.' +
       'LENGTH_UNIT') IN
       TYPEOF (it\measure_with_unit.unit_component)))) = 1)))
                                                     = 1)) )) = 0);
 WR4: (SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PACKAGE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'internal connection zone') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1);
END_ENTITY;

RULE package_unique_constraint FOR
 ( package); --, externally_defined_package, library_defined_package );
LOCAL
  p : BAG OF physical_unit := QUERY( r <* package |
(r.frame_of_reference.name = 'physical design usage') );
(**  edp : BAG OF physical_unit := QUERY( r <* externally_defined_package |
(r.frame_of_reference.name = 'physical design usage') );
  ldp : BAG OF physical_unit := QUERY( r <* library_defined_package |
(r.frame_of_reference.name = 'physical design usage') ); *)
  pu : BAG OF physical_unit;
  pd_bag : BAG OF property_definition;
  pdr_bag : BAG OF property_definition_representation;
  pass : BOOLEAN := TRUE;
  r_bag : BAG OF representation := [];
END_LOCAL;

pu := p; -- + edp + ldp;

REPEAT i := 1 to SIZEOF(pu) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pd_bag := USEDIN( pu[i], 
'PACKAGE_MIM.' +
'PROPERTY_DEFINITION.DEFINITION' );
  REPEAT j := 1 to SIZEOF(pd_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pdr_bag := QUERY( pdr <* USEDIN( pd_bag[j], 
'PACKAGE_MIM.' +
'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION' ) | 
(pdr.used_representation\representation.name =
'registered case style') );
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
      IF EXISTS( pdr_bag[k].used_representation ) THEN
        IF ( pdr_bag[k].used_representation IN r_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          r_bag := r_bag + pdr_bag[k].used_representation;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE; 

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\packaged_connector_model_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/02/04 15:53:18 budreckytej Exp $
   ISO TC184/SC4/WG12 N3502 - ISO/CD-TS 10303-1708 Packaged connector model - EXPRESS MIM
*)


SCHEMA Packaged_connector_model_mim;
	USE FROM Packaged_part_black_box_model_mim;	-- ISO/TS 10303-1710
(**	
ENTITY externally_defined_packaged_connector
 SUBTYPE OF (externally_defined_packaged_part);
END_ENTITY;

ENTITY library_defined_packaged_connector
 SUBTYPE OF (library_defined_packaged_part);
END_ENTITY;
*)
ENTITY packaged_connector
  SUBTYPE OF (packaged_part);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PACKAGED_CONNECTOR_MODEL_MIM.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN
       TYPEOF (sa)))) = 1))) >= 1;

  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (SIZEOF (QUERY ( sar <* USEDIN(sa,
       'PACKAGED_CONNECTOR_MODEL_MIM.' + 
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        sar\shape_aspect_relationship.name = 'interface plane')) = 1)
       )) = 1)
       )
       ) <= 1;

  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PACKAGED_CONNECTOR_MODEL_MIM.' +
       'SEATING_PLANE' IN
       TYPEOF (sa)))) = 1))) <= 1;
END_ENTITY;

ENTITY packaged_connector_terminal_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
WHERE
  WR1: (SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['PACKAGED_CONNECTOR_MODEL_MIM.' +
       'PACKAGED_PART',
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'PACKAGED_CONNECTOR_MODEL_MIM.' +
       'LIBRARY_DEFINED_PACKAGED_PART']) 
       = 1) AND
       (SELF.of_shape.definition\product_definition.description =
       'packaged connector');
  WR2: (('PACKAGED_CONNECTOR_MODEL_MIM.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect)) AND
       (SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description 
        = 'interface terminal'));
  WR3: (('PACKAGED_CONNECTOR_MODEL_MIM.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect)) AND
       (SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description 
        = 'join terminal'));
END_ENTITY;

RULE packaged_connector_terminal_relationship_unique_constraint FOR
 ( packaged_connector_terminal_relationship );
LOCAL
  pu_bag : BAG OF physical_unit := [];
  pctr_bag : BAG OF packaged_connector_terminal_relationship;
  it_bag : BAG OF packaged_part_terminal;
  jt_bag : BAG OF packaged_part_terminal;
  pass1 : BOOLEAN := TRUE;
  pass2 : BOOLEAN := TRUE;
END_LOCAL;

REPEAT i := 1 to SIZEOF(packaged_connector_terminal_relationship) by 1;
  IF EXISTS( packaged_connector_terminal_relationship[i].
                               of_shape.definition ) THEN
    IF ( 'PACKAGED_CONNECTOR_MODEL_MIM.' +
'PHYSICAL_UNIT' 
   IN TYPEOF(packaged_connector_terminal_relationship[i].
                               of_shape.definition) ) THEN
      IF ( NOT ( packaged_connector_terminal_relationship[i].
                               of_shape.definition 
                                           IN pu_bag )) THEN
        pu_bag := pu_bag + 
    packaged_connector_terminal_relationship[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT (pass1 OR pass2) ) THEN ESCAPE;
  END_IF;
  it_bag := [];
  jt_bag := [];
  pctr_bag := QUERY( r <* packaged_connector_terminal_relationship | 
                            (r.of_shape.definition :=: pu_bag[i]) );
  REPEAT j := 1 to SIZEOF(pctr_bag) by 1;
    IF ( NOT (pass1 OR pass2) ) THEN ESCAPE;
    END_IF;
    IF ( pass1 AND (
'PACKAGED_CONNECTOR_MODEL_MIM.' +
'PACKAGED_PART_TERMINAL' IN TYPEOF(pctr_bag[j].relating_shape_aspect))
AND (pctr_bag[j].relating_shape_aspect\shape_aspect.description = 'join terminal') ) THEN
      IF EXISTS( pctr_bag[j].relating_shape_aspect ) THEN
        IF ( pctr_bag[j].relating_shape_aspect IN jt_bag ) THEN
          pass1 := FALSE;
          ESCAPE;
        ELSE
          jt_bag := jt_bag + pctr_bag[j].relating_shape_aspect;
        END_IF;
      END_IF;
    END_IF;
    IF ( pass2 AND (
'PACKAGED_CONNECTOR_MODEL_MIM.' +
'PACKAGED_PART_TERMINAL' IN TYPEOF(pctr_bag[j].related_shape_aspect))
AND (pctr_bag[j].related_shape_aspect\shape_aspect.description = 
'interface terminal') ) THEN
      IF EXISTS( pctr_bag[j].related_shape_aspect ) THEN
        IF ( pctr_bag[j].related_shape_aspect IN it_bag ) THEN
          pass2 := FALSE;
          ESCAPE;
        ELSE
          it_bag := it_bag + pctr_bag[j].related_shape_aspect;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass1;
  WR2: pass2;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\packaged_part_black_box_model_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.15 2005/04/04 10:22:50 liutkus Exp $
   ISO TC184/SC4/WG12 N3346 - ISO/CD-TS 10303-1710 Packaged part black box model - EXPRESS MIM
*)
SCHEMA Packaged_part_black_box_model_mim;

	USE FROM Functional_assignment_to_part_mim;	-- ISO/TS 10303-1674
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705
	USE FROM Package_mim;	-- ISO/TS 10303-1707
	USE FROM Part_external_reference_mim;	-- ISO/TS 10303-1711

ENTITY packaged_part
 SUBTYPE OF (physical_unit);
WHERE 
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF, 
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PACKAGED_PART_TERMINAL' IN 
       TYPEOF (sa))) >= 0))) = 0;
  WR2: SIZEOF (USEDIN (SELF, 
        'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'MATERIAL_DESIGNATION.DEFINITIONS')) <= 1;
  WR3: SIZEOF (QUERY (ifu <* QUERY (pdr <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'FUNCTIONAL_UNIT' IN
       TYPEOF (ifu.relating_product_definition)) AND
       (ifu.relating_product_definition.frame_of_reference.name =
       'functional design usage'))) <= 1;
  WR4: NOT(EXISTS(SELF\product_definition.description)) OR
       ((NOT (SELF\product_definition.description = 'altered packaged part')) OR
       (SIZEOF (QUERY (bpp <* QUERY (pdr <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'base packaged part') |
       (SIZEOF (['PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PACKAGED_PART',
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] * 
       TYPEOF (bpp.relating_product_definition)) = 1) AND
       (bpp.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) >= 1));
  WR5: SIZEOF (QUERY (upkg <* QUERY (pdr <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'used package') |
       SIZEOF (['PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PACKAGE',
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGE',
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'LIBRARY_DEFINED_PACKAGE'] * 
       TYPEOF (upkg.relating_product_definition)) = 1)) >= 1;
  WR6: SELF.frame_of_reference.name = 'physical design usage';
END_ENTITY;

ENTITY packaged_part_terminal
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN ['interface terminal', 
       'join terminal'];
  WR2: (SIZEOF (TYPEOF (SELF.of_shape.definition) *
       ['PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PACKAGED_PART',
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'LIBRARY_DEFINED_PACKAGED_PART']) 
       = 1) AND
  (SELF.of_shape.definition\product_definition.frame_of_reference.name = 
       'physical design usage');
  WR3: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) >= 1))) = 0;
  WR4: SIZEOF (QUERY (top <* QUERY (sar <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'terminal of package') |
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PACKAGE_TERMINAL' IN
       TYPEOF (top.related_shape_aspect))) >= 1;
  WR5: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PART_CONNECTED_TERMINALS_DEFINITION'
       IN TYPEOF (mct.relating_shape_aspect))) <= 1;
  WR6: (NOT(SELF\shape_aspect.description = 'interface terminal')) OR
       (SIZEOF(QUERY (sar <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN TYPEOF(sar))
       AND (sar.relating_shape_aspect\shape_aspect.description = 
       'join terminal'))) >= 1);
  WR7: (NOT(SELF\shape_aspect.description = 'join terminal')) OR
       (SIZEOF(QUERY (sar <* USEDIN (SELF,
       'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       ('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
       'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' IN TYPEOF(sar))
       AND (sar.relating_shape_aspect\shape_aspect.description = 
        'interface terminal'))) <= 1);
END_ENTITY;

RULE packaged_part_unique_constraint FOR
 ( packaged_part); --, externally_defined_packaged_part, library_defined_packaged_part);
LOCAL
  pp : SET OF physical_unit := packaged_part; -- + externally_defined_packaged_part + library_defined_packaged_part;
  pdr_bag : BAG OF product_definition_relationship;
  pdf_bag : BAG OF product_definition_formation := [];
  pass : BOOLEAN := TRUE;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pp) by 1;
  IF ( NOT pass ) THEN ESCAPE; END_IF;
    pdf_bag := [];
    pdr_bag := QUERY( pdr <* USEDIN( pp[i], 
'PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) | 
((pdr\product_definition_relationship.name = 'used package')
AND (('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'PACKAGE' IN TYPEOF(pdr.relating_product_definition)) (** OR
('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'EXTERNALLY_DEFINED_PACKAGE' IN TYPEOF(pdr.relating_product_definition)) OR
('PACKAGED_PART_BLACK_BOX_MODEL_MIM.' +
'LIBRARY_DEFINED_PACKAGE' IN TYPEOF(pdr.relating_product_definition))  *)
) ) );
    pdf_bag := pdf_bag + pdr_bag[1].relating_product_definition.formation;
    REPEAT k := 1 to SIZEOF(pdr_bag) by 1;
     IF ( NOT pass ) THEN ESCAPE; END_IF;
      IF EXISTS( pdr_bag[k].relating_product_definition.formation ) THEN
        IF NOT( pdr_bag[k].relating_product_definition.formation IN pdf_bag ) THEN
          pass := FALSE;
        END_IF;
      END_IF;
    END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE; 

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\packaged_part_white_box_model_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:22:50 liutkus Exp $
   ISO TC184/SC4/WG12 N3505 - ISO/CD-TS 10303-1709 Packaged part white box model - EXPRESS MIM
*)


SCHEMA Packaged_part_white_box_model_mim;
	USE FROM Bare_die_mim;	-- ISO/TS 10303-1650
	USE FROM Packaged_part_black_box_model_mim;	-- ISO/TS 10303-1710
	USE FROM Physical_unit_2d_shape_mim;	-- ISO/TS 10303-1726
	
ENTITY device_terminal_map
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.related_shape_aspect,
       SELF\shape_aspect_relationship.relating_shape_aspect;
WHERE
  WR1: 'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
       'PACKAGED_PART_TERMINAL'
       IN TYPEOF (SELF.relating_shape_aspect);
END_ENTITY;

RULE device_terminal_map_relationship_constraint FOR 
( shape_aspect_relationship );
WHERE
   WR1: SIZEOF (QUERY (sar <* shape_aspect_relationship |
               (sar\shape_aspect_relationship.name = 'device terminal map relationship')
               AND
      (NOT('PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
      'DEVICE_TERMINAL_MAP' IN TYPEOF (sar.relating_shape_aspect)))
               )) = 0;
   WR2: SIZEOF (QUERY (sar <* shape_aspect_relationship |
               (sar\shape_aspect_relationship.name = 'device terminal map relationship')
               AND
    (NOT('PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
       'DEVICE_TERMINAL_MAP' IN TYPEOF (sar.related_shape_aspect)))
               )) = 0;
END_RULE;

(* removed 
RULE part_device_terminal_model_port_assignment_unique_constraint FOR
 ( property_definition_representation );
LOCAL
  amp_bag : BAG OF analytical_model_port := [];
  pdr_bag : BAG OF property_definition_representation;
  pass : BOOLEAN := TRUE;
  sa_bag : BAG OF shape_aspect;
END_LOCAL;

REPEAT i := 1 to SIZEOF(property_definition_representation) by 1;
  IF EXISTS( property_definition_representation[i].used_representation )
                                                            THEN
    IF( 'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
'ANALYTICAL_MODEL_PORT' IN TYPEOF(
property_definition_representation[i].used_representation) ) THEN
      IF( NOT( property_definition_representation[i].used_representation IN 
                                              amp_bag ) )
                                                               THEN
        amp_bag := amp_bag + 
              property_definition_representation[i].used_representation;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(amp_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sa_bag := [];
  pdr_bag := QUERY( pdr <* property_definition_representation | 
                            (pdr.used_representation :=: amp_bag[i]) );
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF EXISTS( pdr_bag[j].definition.definition ) THEN
      IF ( pdr_bag[j].definition.definition IN sa_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        sa_bag := sa_bag + pdr_bag[j].definition.definition;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
*)

RULE analytical_model_port_assignment_unique_constraint FOR
 ( property_definition_representation );
 WHERE TRUE; 
END_RULE; 

RULE part_device_terminal_unique_constraint FOR
 ( shape_aspect );
LOCAL
  pdr_bag : BAG OF product_definition_relationship := [];
  sa_bag : BAG OF shape_aspect;
  pd_bag : BAG OF property_definition;
  sa : BAG OF bare_die_terminal;
  pass : BOOLEAN := TRUE;
  bdt_bag : BAG OF bare_die_terminal;
END_LOCAL;

REPEAT i := 1 to SIZEOF(shape_aspect) by 1;
  IF EXISTS( shape_aspect[i].of_shape.definition ) THEN
    IF( ('PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP' IN 
TYPEOF(shape_aspect[i].of_shape.definition)) AND
(shape_aspect[i].of_shape.definition.description = 'part device') ) THEN
      IF( NOT( shape_aspect[i].of_shape.definition IN pdr_bag ) ) THEN
        pdr_bag := pdr_bag + shape_aspect[i].of_shape.definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdr_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  bdt_bag := [];
  sa_bag := QUERY( sa <* shape_aspect | (sa.of_shape.definition :=: 
                   pdr_bag[i]) );
  REPEAT j := 1 to SIZEOF(sa_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    pd_bag := QUERY( pd <* USEDIN(
sa_bag[j].of_shape.definition.related_product_definition,
'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
'PROPERTY_DEFINITION.DEFINITION') | (SIZEOF([
'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
'BARE_DIE'
-- ,'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' + 'EXTERNALLY_DEFINED_BARE_DIE',
-- 'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' + 'LIBRARY_DEFINED_BARE_DIE'
] * TYPEOF(pd.definition))>0) );
    REPEAT k := 1 to SIZEOF(pd_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      sa := QUERY( bdt <* USEDIN(pd_bag[k],
'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
'SHAPE_ASPECT.OF_SHAPE') |
('PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
'BARE_DIE_TERMINAL' IN TYPEOF(bdt)) );
      REPEAT l := 1 to SIZEOF(sa) by 1;
        IF EXISTS( sa[l] ) THEN
          IF ( sa[l] IN bdt_bag ) THEN
            pass := FALSE;
            ESCAPE;
          ELSE
            bdt_bag := bdt_bag + sa[l];
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE part_device_unique_constraint FOR
 ( product_definition_relationship );
LOCAL
  pd : BAG OF product_definition_relationship := QUERY( pdr <*
product_definition_relationship | (pdr\product_definition_relationship.description = 'part device') );
  pu_bag : BAG OF physical_unit := [];
  pdr_bag : BAG OF product_definition_relationship;
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pd) by 1;
  IF EXISTS( pd[i].relating_product_definition ) THEN
    IF( (pd[i].relating_product_definition.frame_of_reference.name =
'physical design usage') AND (SIZEOF(
['PACKAGED_PART_WHITE_BOX_MODEL_MIM.' +
'PACKAGED_PART'
-- ,'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' + 'EXTERNALLY_DEFINED_PACKAGED_PART',
-- 'PACKAGED_PART_WHITE_BOX_MODEL_MIM.' + 'LIBRARY_DEFINED_PACKAGED_PART'
] * 
TYPEOF(pd[i].relating_product_definition))>0) ) THEN
      IF( NOT( pd[i].relating_product_definition IN pu_bag ) ) THEN
        pu_bag := pu_bag + pd[i].relating_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  name_bag := [];
  pdr_bag := QUERY( pdr <* pd | (pdr.relating_product_definition :=: 
                                                       pu_bag[i]) );
  REPEAT j := 1 to SIZEOF(pdr_bag) by 1;
    IF EXISTS( pdr_bag[j]\product_definition_relationship.name ) THEN
      IF ( pdr_bag[j]\product_definition_relationship.name IN name_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        name_bag := name_bag + pdr_bag[j]\product_definition_relationship.name;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_and_version_identification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/01/13 10:15:26 robbod Exp $
 ISO TC184/SC4/WG12 N2522 - ISO/TS 10303-1022 Part and version identification - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N1115
*) 


SCHEMA Part_and_version_identification_mim; 

USE FROM Product_identification_mim;    -- ISO/TS 10303-1017

USE FROM Product_version_mim;    -- ISO/TS 10303-1018


END_SCHEMA;  -- Part_and_version_identification_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_definition_relationship_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.4 2004/10/22 14:35:06 darla Exp $
 ISO TC184/SC4/WG12 N1327 - ISO/TS 10303-1055 Part definition relationship - EXPRESS MIM
*)
   
SCHEMA Part_definition_relationship_mim;

USE FROM Part_view_definition_mim;
USE FROM Product_view_definition_relationship_mim;
USE FROM Value_with_unit_mim; -- ISO/TS 10303-1054

USE FROM product_structure_schema
	(make_from_usage_option);

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_external_reference_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/02/04 15:54:21 budreckytej Exp $
   ISO TC184/SC4/WG12 N3508 - ISO/CD-TS 10303-1711 Part external reference - EXPRESS MIM
*)


SCHEMA Part_external_reference_mim;
	USE FROM Physical_layout_template_mim;	-- ISO/TS 10303-1722

RULE package_external_reference_constraint FOR
  (representation);
WHERE
   WR1: SIZEOF (QUERY (rep <* representation |
        (rep\representation.name = 'package external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items |
        NOT(('PART_EXTERNAL_REFERENCE_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
        (dri\representation_item.name = 'design owner')))) = 1)))=0;
   WR2: SIZEOF (QUERY (rep <* representation |
        (rep\representation.name = 'package external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items |
        NOT(('PART_EXTERNAL_REFERENCE_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
        (dri\representation_item.name = 'part number')))) = 1)))=0;
   WR3: SIZEOF (QUERY (rep <* representation |
        (rep\representation.name = 'package external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items |
        NOT(('PART_EXTERNAL_REFERENCE_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
        (dri\representation_item.name = 'revision code')))) = 1)))=0;
   WR4: SIZEOF (QUERY (rep <* representation |
        (rep\representation.name = 'package external reference') AND 
        (SIZEOF (QUERY (dri <* rep.items |
        NOT(('PART_EXTERNAL_REFERENCE_MIM.' +
        'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
        (dri\representation_item.name = 'product definition id')))) = 1)))=0;
END_RULE;

RULE package_terminal_external_reference_constraint FOR
  (descriptive_representation_item);
WHERE
  WR1: SIZEOF(QUERY(dri <* descriptive_representation_item |
       (dri\representation_item.name = 'package terminal external reference')
       AND (SIZEOF(QUERY(rep <* USEDIN(dri,
       'PART_EXTERNAL_REFERENCE_MIM.'
       + 'REPRESENTATION.ITEMS') |
       (rep\representation.name = 'package external reference'))) = 0)
       )) = 0;
END_RULE;

RULE package_terminal_external_reference_unique_constraint FOR
 ( descriptive_representation_item );
LOCAL
  pter : BAG OF descriptive_representation_item := 
                QUERY( dri <* descriptive_representation_item
| (dri\representation_item.name = 'package terminal external reference') );
  desc_bag : BAG OF STRING := [];
  dri_bag : BAG OF descriptive_representation_item;
  rep_bag : BAG OF representation;
  pass : BOOLEAN := TRUE;
  r_bag : BAG OF representation;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pter) by 1;
  IF EXISTS( pter[i]\descriptive_representation_item.description ) THEN
    IF ( NOT ( pter[i]\descriptive_representation_item.description IN desc_bag )) THEN
      desc_bag := desc_bag + pter[i]\descriptive_representation_item.description;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(desc_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  r_bag := [];
  dri_bag := QUERY( dri <* pter | (dri\descriptive_representation_item.description = desc_bag[i]) );
  REPEAT j := 1 to SIZEOF(dri_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    rep_bag := QUERY( r <* USEDIN( dri_bag[j],
'PART_EXTERNAL_REFERENCE_MIM.' +
'REPRESENTATION.ITEMS' ) | (r\representation.name = 'package external reference') );
    REPEAT k := 1 to SIZEOF(rep_bag) by 1;
      IF EXISTS( rep_bag[k] ) THEN
        IF ( rep_bag[k] IN r_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          r_bag := r_bag + rep_bag[k];
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE part_terminal_external_reference_unique_constraint FOR
 ( representation );
LOCAL
  pter : BAG OF representation := QUERY( r <* representation |
(r\representation.name = 'part terminal external reference'));
  fn_bag : BAG OF STRING := [];
  ft_bag : BAG OF STRING := [];
  r_bag : BAG OF representation;
  pdr_bag : BAG OF property_definition_representation;
  pass : BOOLEAN := TRUE;
  ptd_bag : BAG OF part_template_definition;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pter) by 1;
  REPEAT j := 1 to SIZEOF(pter[i].items) by 1;
    IF ( 'PART_EXTERNAL_REFERENCE_MIM.' +
'DESCRIPTIVE_REPRESENTATION_ITEM' IN 
TYPEOF(pter[i].items[j]) ) THEN
      IF ( (pter[i].items[j]\representation_item.name = 'feature name') AND 
      (NOT ( pter[i].items[j]\descriptive_representation_item.description 
                                                  IN fn_bag )) ) THEN
        fn_bag := fn_bag + pter[i].items[j]\descriptive_representation_item.description;
      END_IF;
      IF ( (pter[i].items[j]\representation_item.name = 'feature type') AND 
      (NOT ( pter[i].items[j]\descriptive_representation_item.description 
                 IN ft_bag )) ) THEN
        ft_bag := ft_bag + 
        pter[i].items[j]\descriptive_representation_item.description;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(fn_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  REPEAT j := 1 to SIZEOF(ft_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    r_bag := QUERY( r <* pter | ((SIZEOF(
QUERY(ri <* r.items | ((ri\descriptive_representation_item.description =
ft_bag[j]) AND (ri\representation_item.name = 'feature type')) ) )>0) AND 
(SIZEOF(QUERY(ri <* r.items |
((ri\descriptive_representation_item.description = fn_bag[i]) AND 
         (ri\representation_item.name = 'feature name')) ) )>0)) );
    ptd_bag := [];
    REPEAT k := 1 to SIZEOF(r_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      pdr_bag := USEDIN( r_bag[k], 
'PART_EXTERNAL_REFERENCE_MIM.' +
'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION' );
      REPEAT l:= 1 to SIZEOF(pdr_bag) by 1;
        IF EXISTS( pdr_bag[l].definition.definition ) THEN
          IF ( 'PART_EXTERNAL_REFERENCE_MIM.' +
'PHYSICAL_UNIT' IN TYPEOF( pdr_bag[l].definition.definition ) ) THEN
            IF ( pdr_bag[l].definition.definition IN ptd_bag ) THEN
              pass := FALSE;
              ESCAPE;
            ELSE
              ptd_bag := ptd_bag + pdr_bag[l].definition.definition;
            END_IF;
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_feature_function_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/02/04 15:55:01 budreckytej Exp $
   ISO TC184/SC4/WG12 N3511 - ISO/CD-TS 10303-1712 Part feature function - EXPRESS MIM
*)


SCHEMA Part_feature_function_mim;
	USE FROM Geometric_tolerance_mim;	-- ISO/TS 10303-1051
	USE FROM Physical_unit_usage_view_mim;	-- ISO/TS 10303-1732

ENTITY fiducial_part_feature
 SUBTYPE OF (part_tooling_feature);
END_ENTITY;

ENTITY part_interface_access_feature
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PART_FEATURE_FUNCTION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'interface_access area') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1;
END_ENTITY;

ENTITY part_mating_feature
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PART_FEATURE_FUNCTION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'mating area') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1;
END_ENTITY;

ENTITY part_mounting_feature
 SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PART_FEATURE_FUNCTION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name  = 'mounting area') AND
       (sar.related_shape_aspect\shape_aspect.description = 'connection zone'))) = 1;
END_ENTITY;

ENTITY part_tooling_feature
 SUPERTYPE OF (ONEOF(fiducial_part_feature,
               tool_registration_mark) ANDOR 
               test_point_part_feature)
 SUBTYPE OF (shape_aspect);
WHERE
 WR1: SELF\shape_aspect.product_definitional = true;
END_ENTITY;

ENTITY test_point_part_feature
 SUBTYPE OF (part_tooling_feature);
END_ENTITY;

ENTITY thermal_feature
 SUBTYPE OF (shape_aspect);
END_ENTITY;

ENTITY tool_registration_mark
 SUBTYPE OF (part_tooling_feature);
END_ENTITY;

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_feature_grouping_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 10:22:51 liutkus Exp $
   ISO TC184/SC4/WG12 N3514 - ISO/CD-TS 10303-1713 Part feature grouping - EXPRESS MIM
*)


SCHEMA Part_feature_grouping_mim;
	USE FROM Physical_unit_usage_view_mim;	-- ISO/TS 10303-1732
--	USE FROM Value_with_unit_extension_mim;	-- ISO/TS 10303-1753
	USE FROM Shape_aspect_definition_schema(composite_shape_aspect);
	
ENTITY composite_array_shape_aspect
  SUPERTYPE OF (ONEOF( linear_composite_array_shape_aspect,
                 rectangular_composite_array_shape_aspect))
  SUBTYPE OF (composite_shape_aspect);
END_ENTITY;

ENTITY composite_array_shape_aspect_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :<>:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'PART_FEATURE_GROUPING_MIM.' +
       'SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'PART_FEATURE_GROUPING_MIM.' +
       'SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\composite_array_shape_aspect_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'PART_FEATURE_GROUPING_MIM.' +
             'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) = 1;
END_ENTITY; 

ENTITY linear_composite_array_shape_aspect
  SUBTYPE OF (composite_array_shape_aspect);
END_ENTITY;

ENTITY linear_composite_array_shape_aspect_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :<>:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'PART_FEATURE_GROUPING_MIM.' +
       'LINEAR_COMPOSITE_ARRAY_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'PART_FEATURE_GROUPING_MIM.' +
       'LINEAR_COMPOSITE_ARRAY_SHAPE_ASPECT' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\linear_composite_array_shape_aspect_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SIZEOF(USEDIN(SELF, 
             'PART_FEATURE_GROUPING_MIM.' +
             'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) = 1;
END_ENTITY; 

ENTITY rectangular_composite_array_shape_aspect
  SUBTYPE OF (composite_array_shape_aspect);
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_feature_location_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/03/24 15:21:53 liutkus Exp $
   ISO TC184/SC4/WG12 N3517 - ISO/CD-TS 10303-1714 Part feature location - EXPRESS MIM
*)


SCHEMA Part_feature_location_mim;
	USE FROM Extended_elemental_geometric_shape_mim;	-- ISO/TS 10303-1667
--	USE FROM Non_feature_shape_element_mim;	-- ISO/TS 10303-1706
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_occurrence_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/02/02 14:44:27 budreckytej Exp $
   ISO TC184/SC4/WG12 N3649 - ISO/CD-TS 10303-1715 Part occurrence - EXPRESS MIM
*)


SCHEMA Part_occurrence_mim;
	USE FROM Assembly_structure_mim;	-- ISO/TS 10303-1026
	USE FROM Extended_measure_representation_mim;	-- ISO/TS 10303-1106
	USE FROM Measure_representation_mim;	-- ISO/TS 10303-1118
	USE FROM Part_view_definition_mim;	-- ISO/TS 10303-1023
	USE FROM Product_view_definition_relationship_mim;	-- ISO/TS 10303-1041
	USE FROM Value_with_unit_mim;	-- ISO/TS 10303-1054

USE FROM product_property_definition_schema(
	characterized_product_definition,
	property_definition);

USE FROM product_property_representation_schema(
	property_definition_representation);
	
USE FROM product_structure_schema
	(product_definition_occurrence_relationship,
	quantified_assembly_component_usage);


TYPE product_definition_or_assembly_relationship = SELECT (assembly_component_usage, product_definition);
END_TYPE;
	
RULE restrict_part_occurrence FOR (product_definition);
LOCAL
  part_occurrences: SET OF product_definition := [];
END_LOCAL;
  part_occurrences := QUERY(pd <* product_definition | 
	( pd.frame_of_reference.name = 'part occurrence' ));
WHERE
WR1: SIZEOF ( QUERY ( pd <* part_occurrences | 
	( NOT( pd.name IN 
['single instance' , 'selected instance' ,'quantified instance' , 'specified instance' ] ) ) ) ) = 0;
WR2: SIZEOF ( QUERY ( pd <* part_occurrences | 
 	(SIZEOF ( QUERY ( pdr <* USEDIN ( pd ,
'PART_OCCURRENCE_MIM.' + 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) | 
	pdr.name = 'definition usage' ) ) <>1 ) AND 
	( SIZEOF ( QUERY ( cd <* USEDIN ( pd , 'PART_OCCURRENCE_MIM.' + 'CONFIGURATION_DESIGN.DESIGN' ) | 
	( cd.name = 'occurrence usage definition' ) AND 
	( NOT ('PART_OCCURRENCE_MIM.' + 'PRODUCT_IDENTIFICATION' IN TYPEOF( cd.configuration ) ) ) ) ) <>1 ) ) ) = 0;
WR3: SIZEOF ( QUERY ( pd <* part_occurrences |  
	(SIZEOF ( QUERY ( cd <* USEDIN ( pd , 'PART_OCCURRENCE_MIM.'+ 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) |
 	( 'PART_OCCURRENCE_MIM.' +'PRODUCT_DEFINITION_USAGE' IN TYPEOF ( cd ) ) ) ) = 0 )AND
 	( SIZEOF ( USEDIN ( pd , 'PART_OCCURRENCE_MIM.' + 'PRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE' ) ) = 0 ) ) ) = 0;
WR4: SIZEOF ( QUERY ( pd <* part_occurrences | 
	( pd.name = 'selected instance' ) AND 
	NOT valid_selected_instance_representation(pd) ))=0;
WR5: SIZEOF ( QUERY ( pd <* part_occurrences | 
 	( pd.name = 'quantified instance' ) AND 
	( SIZEOF ( QUERY (ppd <* USEDIN ( pd , 'PART_OCCURRENCE_MIM.' +'PROPERTY_DEFINITION.DEFINITION' ) |
 	( ppd.name ='occurrence quantity' ) AND 
	( SIZEOF ( QUERY ( pdr <*USEDIN ( ppd , 'PART_OCCURRENCE_MIM.' +'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION' ) | (
	pdr.used_representation.name = 'quantity' ) AND 
	(SIZEOF ( pdr.used_representation.items ) = 1 ) AND 
 	(SIZEOF ( QUERY ( i <* pdr.used_representation.items | 
	('PART_OCCURRENCE_MIM.' + 'MEASURE_REPRESENTATION_ITEM' IN TYPEOF ( i ) ) AND
	( i.name = 'quantity measure' ) ) ) = 1)))= 1 )))= 0 )))= 0;
WR6: SIZEOF ( QUERY ( pd <* part_occurrences | 
	( pd.name = 'specified instance' ) AND 
	( SIZEOF ( QUERY (
pdor <* USEDIN ( pd , 'PART_OCCURRENCE_MIM.' +'PRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE' ) | 
  'PART_OCCURRENCE_MIM.' +'SPECIFIED_HIGHER_USAGE_OCCURRENCE' IN TYPEOF ( pdor.occurrence_usage ) ) ) = 0 ) ) ) = 0;
END_RULE;
	
RULE restrict_part_occurrence_category FOR (product_definition);
LOCAL
  part_occurrences: SET OF product_definition := [];
END_LOCAL;
  part_occurrences :=  QUERY( pd <* product_definition |(
		pd.frame_of_reference.name = 'part occurrence'));
WHERE
WR1: SIZEOF( QUERY( pd <* part_occurrences | 
(SIZEOF( QUERY( prpc <* USEDIN(pd.formation.of_product, 'PRODUCT_OCCURRENCE_MIM.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | 
  prpc.name IN ['part','raw material','tool'] )) = 0 ) )) = 0;
END_RULE;
	
RULE selected_instance_usage_requires_representation FOR
    (assembly_component_usage);
LOCAL
  selected_instance_usages: SET OF assembly_component_usage := [];
END_LOCAL;
  selected_instance_usages:=  QUERY( acr <* assembly_component_usage|
		(acr.name = 'selected instance usage'));
WHERE
WR1: SIZEOF ( QUERY ( acr <* selected_instance_usages | 
	NOT valid_selected_instance_representation(acr) ))=0;
END_RULE;
	
RULE restrict_product_definitions_for_definition_usage FOR
    (product_definition_relationship);
WHERE
WR1: SIZEOF ( QUERY ( pdr <* product_definition_relationship |
     ( pdr.name = 'definition usage' ) AND 
	( ( pdr.relating_product_definition.frame_of_reference.name<> 'part definition' ) OR 
	( pdr.related_product_definition.frame_of_reference.name<>'part occurrence' )))) =0;
END_RULE;
	
FUNCTION valid_selected_instance_representation (pd: product_definition_or_assembly_relationship): LOGICAL;
LOCAL
  properties: SET OF property_definition :=[];
  property_definition_representations: SET OF property_definition_representation :=[];
  selected_representation: representation;
END_LOCAL;

properties :=QUERY( prd<* USEDIN ( pd ,'PRODUCT_OCCURRENCE_MIM.PROPERTY_DEFINITION.DEFINITION' ) | 
 (prd.name = 'occurrence selection' ));
IF (SIZEOF( properties)<>1) THEN
	RETURN(FALSE);
END_IF;

property_definition_representations := QUERY ( pdr <* USEDIN ( properties[1] , 'PRODUCT_OCCURRENCE_MIM.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | 
	( pdr.used_representation.name = 'selection criteria' ));
IF (SIZEOF(property_definition_representations)<>1) THEN
	RETURN(FALSE);
END_IF;

selected_representation := property_definition_representations[1].used_representation;

IF (SIZEOF(selected_representation.items) <1) OR (SIZEOF(selected_representation.items) >2) THEN
	RETURN(FALSE);
END_IF;

IF (SIZEOF ( QUERY ( i <* selected_representation.used_representation.items |
	( SIZEOF (['PRODUCT_OCCURRENCE_MIM.MEASURE_REPRESENTATION_ITEM' ,
			'PRODUCT_OCCURRENCE_MIM.VALUE_RANGE']* TYPEOF ( i ) ) = 1) AND
 	( i.name = 'selection quantity' ))) <> 1 ) THEN
	RETURN(FALSE);
END_IF;

IF (SIZEOF ( QUERY ( i <* selected_representation.used_representation.items |
	( 'PRODUCT_OCCURRENCE_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF ( i ) ) AND
 	( i.name = 'selection control' )))> 1) THEN
	RETURN(FALSE);
END_IF; --the selection control is not specified then the quantity shall be a qualified_representation_item or a value_range
IF (SIZEOF ( QUERY ( i <* selected_representation.used_representation.items |
	( 'PRODUCT_OCCURRENCE_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF( i ) ) AND
 	( i.name = 'selection control' ) ))= 0) AND 
   (SIZEOF ( QUERY ( i <* selected_representation.used_representation.items |
      ( i.name = 'selection quantity' ) AND  
      ( SIZEOF(['PRODUCT_OCCURRENCE_MIM.QUALIFIED_REPRESENTATION_ITEM' ,
		'PRODUCT_OCCURRENCE_MIM.VALUE_RANGE']* TYPEOF ( i ) ) =0 ))) > 0 ) THEN
	RETURN(FALSE);
END_IF;
	
RETURN(TRUE);
END_FUNCTION;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_template_2d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/04/04 10:10:22 liutkus Exp $
   ISO TC184/SC4/WG12 N3520 - ISO/CD-TS 10303-1716 Part template 2d shape - EXPRESS MIM
*)


SCHEMA Part_template_2d_shape_mim;
	USE FROM Component_grouping_mim;	-- ISO/TS 10303-1656
	USE FROM Package_mim;	-- ISO/TS 10303-1707
	USE FROM Part_template_extension_mim;	-- ISO/TS 10303-1718
	USE FROM Printed_physical_layout_template_mim;	-- ISO/TS 10303-1737
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740
	
ENTITY design_layer_type_specific_padstack_definition 
 SUBTYPE OF (padstack_definition);
END_ENTITY; 

ENTITY footprint_definition
 SUBTYPE OF (part_template_definition);
WHERE
  WR1: (NOT ('PART_TEMPLATE_2D_SHAPE_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\footprint_definition))) = 0;
  WR7: SELF.frame_of_reference.name IN ['layout design usage' ];
  WR8: SIZEOF (QUERY (prpc <* USEDIN (SELF.formation.of_product,
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'template model')) = 1;
END_ENTITY;

ENTITY padstack_definition
 SUPERTYPE OF (ONEOF( design_layer_type_specific_padstack_definition,
               stratum_type_independent_padstack_definition))
 SUBTYPE OF (part_template_definition);
WHERE
  WR1: (NOT ('PART_TEMPLATE_2D_SHAPE_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\padstack_definition))) = 0;
  WR7: SELF.frame_of_reference.name IN ['layout design usage' ];
  WR9: SIZEOF (QUERY (prpc <* USEDIN (SELF.formation.of_product,
       'PART_TEMPLATE_2D_SHAPE_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'template model')) = 1;
END_ENTITY;

ENTITY stratum_type_independent_padstack_definition 
 SUBTYPE OF (padstack_definition);
END_ENTITY; 
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_template_3d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 10:22:52 liutkus Exp $
   ISO TC184/SC4/WG12 N3523 - ISO/CD-TS 10303-1717 Part template 3d shape - EXPRESS MIM
*)


SCHEMA Part_template_3d_shape_mim;
	USE FROM Part_template_shape_with_parameters_mim;	-- ISO/TS 10303-1720
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_template_extension_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/03/23 08:03:55 liutkus Exp $
   ISO TC184/SC4/WG12 N3526 - ISO/CD-TS 10303-1718 Part template extension - EXPRESS MIM
*)


SCHEMA Part_template_extension_mim;
	USE FROM Fabrication_technology_mim;	-- ISO/TS 10303-1670
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698
	USE FROM Styled_curve_mim;	-- ISO/TS 10303-1749
	USE FROM Styled_text_mim;	-- ISO/TS 10303-1750
	
	USE FROM Presentation_definition_schema(text_literal);

ENTITY part_text_template_definition
  SUBTYPE OF (part_template_definition);
WHERE
  WR1: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'TEXT_LITERAL' IN
       TYPEOF (it))) = 1)) = 1))) = 0);
  WR2: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['PART_TEMPLATE_EXTENSION_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font vertical extent'))) = 1
       )) = 1))) = 0);
  WR3: (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['PART_TEMPLATE_EXTENSION_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 
         'maximum font horizontal extent'))) = 1
       )) = 1))) = 0);
END_ENTITY;

ENTITY reference_packaged_part_interconnect_implementation
 SUBTYPE OF (physical_unit);
WHERE
  WR1: EXISTS(SELF\product_definition.name);
  WR2: (SIZEOF (QUERY (prpc <*
       USEDIN (SELF.formation.of_product,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) >= 1) AND
       (SELF\product_definition.name = 'interconnect module');
  WR3: SIZEOF (QUERY (du <* QUERY (pdr <* USEDIN (SELF,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design usage') |
       (SIZEOF (['PART_TEMPLATE_EXTENSION_MIM.' +
       'PHYSICAL_UNIT', 
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'EXTERNALLY_DEFINED_PHYSICAL_UNIT', 
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'LIBRARY_DEFINED_PHYSICAL_UNIT'] *
       TYPEOF (du.relating_product_definition)) = 1) AND
       (du.relating_product_definition.frame_of_reference.name = 
       'physical design usage') AND
       (du.relating_product_definition\product_definition.name =
       'interconnect module') AND
       (SIZEOF (QUERY (prpc <*
       USEDIN (du.relating_product_definition.formation.of_product,
       'PART_TEMPLATE_EXTENSION_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
       prpc\product_category.name = 'template model')) >= 1) 
       )) <= 1;
  WR4: SELF.frame_of_reference.name = 'physical design';
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_template_non_planar_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/04/04 10:22:51 liutkus Exp $
   ISO TC184/SC4/WG12 N3529 - ISO/CD-TS 10303-1719 Part template non planar shape - EXPRESS MIM
*)


SCHEMA Part_template_non_planar_shape_mim;
	USE FROM Layered_3d_shape_mim;	-- ISO/TS 10303-1694
	USE FROM Manifold_surface_mim;	-- ISO/TS 10303-1509

RULE part_template_non_planar_2d_shape_constraint FOR 
( manifold_surface_shape_representation );
WHERE
  WR1: SIZEOF(QUERY(mssr <* manifold_surface_shape_representation |
       (mssr\representation.name = 'part template non planar 2d shape')
       AND NOT(SIZEOF(QUERY(a2p3d <* mssr.items |
       ('PART_TEMPLATE_NON_PLANAR_SHAPE_MIM.'
       + 'AXIS2_PLACEMENT_3D' IN TYPEOF(a2p3d))
       )) = 1)
       )) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_template_shape_with_parameters_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/03/29 15:42:29 budreckytej Exp $
   ISO TC184/SC4/WG12 N3532 - ISO/CD-TS 10303-1720 Part template shape with parameters - EXPRESS MIM
*)


SCHEMA Part_template_shape_with_parameters_mim;
	USE FROM Non_feature_shape_element_mim;	-- ISO/TS 10303-1706
	USE FROM Physical_layout_template_mim;	-- ISO/TS 10303-1722
	USE FROM Shape_parameters_mim;	-- ISO/TS 10303-1743
	
TYPE ptswp_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (shape_representation);
END_TYPE; 

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\part_view_definition_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.11 2004/10/28 17:03:50 darla Exp $
 ISO TC184/SC4/WG12 N2919 - ISO/TS 10303-1023 Part view definition - EXPRESS MIM
*)


SCHEMA Part_view_definition_mim;

USE FROM Part_and_version_identification_mim;    -- ISO/TS 10303-1022

USE FROM Product_view_definition_mim;    -- ISO/TS 10303-1019


END_SCHEMA;  -- Part_view_definition_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\person_organization_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.11 2004/10/29 16:20:10 thendrix Exp $
ISO TC184/SC4/WG12 N2922 - ISO/TS 10303-1011 Person organization - EXPRESS MIM
*) 


SCHEMA Person_organization_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (id_attribute,
   id_attribute_select,
   name_attribute,
   name_attribute_select); 

USE FROM person_organization_schema   -- ISO 10303-41
  (address,
   organization,
   organization_relationship,
   organizational_address,
   person,
   person_and_organization,
   personal_address); 


ENTITY person_and_organization_address
  SUBTYPE OF (organizational_address, personal_address);
  SELF\organizational_address.organizations : SET[1:1] OF organization;
  SELF\personal_address.people : SET[1:1] OF person;
WHERE
  WR1: SIZEOF(QUERY(pao <* USEDIN (SELF\personal_address.people[1], 'PERSON_ORGANIZATION_SCHEMA.PERSON_AND_ORGANIZATION.THE_PERSON') | pao.the_organization :=: SELF\organizational_address.organizations[1])) = 1;
END_ENTITY;

END_SCHEMA;  -- Person_organization_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\person_organization_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.6 2004/10/22 14:39:13 darla Exp $
 ISO TC184/SC4/WG12 N1091 - ISO/TS 10303-1013 Person organization assignment - EXPRESS MIM
*)
      
SCHEMA Person_organization_assignment_mim;

USE FROM Person_organization_mim; 		-- 10303-1011
USE FROM person_organization_schema 	-- ISO 10303-41
  (organization_role,
   person_and_organization_role);
USE FROM management_resources_schema 	-- ISO 10303-41
  (organization_assignment,
   person_and_organization_assignment);

   
TYPE organization_item = EXTENSIBLE SELECT; 
END_TYPE;

   
TYPE person_and_organization_item = EXTENSIBLE SELECT; 
END_TYPE;

   
ENTITY applied_organization_assignment
  SUBTYPE OF (organization_assignment);
  items : SET [1:?] OF organization_item;
END_ENTITY;

   
ENTITY applied_person_and_organization_assignment
  SUBTYPE OF (person_and_organization_assignment);
  items : SET [1:?] OF person_and_organization_item;
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_component_feature_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: MimGenerator.java,v 1.6 2004/11/22 16:26:37 raimundas Exp $
   ISO TC184/SC4/WG12 N3535 - ISO/CD-TS 10303-1721 Physical component feature - EXPRESS MIM
*)


SCHEMA Physical_component_feature_mim;
	USE FROM Component_feature_mim;	-- ISO/TS 10303-1657

 ENTITY physical_component_feature
    SUBTYPE OF (component_feature);
  END_ENTITY;

  ENTITY physical_component_terminal
    ABSTRACT SUPERTYPE
    SUBTYPE OF (component_terminal,
 			physical_component_feature);
  END_ENTITY;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_connectivity_definition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/04/04 10:26:05 liutkus Exp $
   ISO TC184/SC4/WG12 N3667 - ISO/CD-TS 10303-1755 Physical connectivity definition - EXPRESS MIM
*)


SCHEMA Physical_connectivity_definition_mim;
	USE FROM Part_external_reference_mim;	-- ISO/TS 10303-1711
	USE FROM Physical_component_feature_mim;	-- ISO/TS 10303-1721
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740

TYPE fde_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (shape_aspect_relationship,
      physical_connectivity_definition,
      physical_connectivity_element);
END_TYPE; 

TYPE fde_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (physical_connectivity_definition,
      physical_connectivity_element);
END_TYPE; 
	
ENTITY make_from_connectivity_relationship
 SUBTYPE OF (shape_aspect_relationship);
WHERE
  WR1: 'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION'
       IN TYPEOF (SELF.relating_shape_aspect);
  WR2: 'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION'
       IN TYPEOF (SELF.related_shape_aspect);
END_ENTITY;

ENTITY physical_connectivity_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name,SELF\shape_aspect.of_shape;
WHERE
  WR1: SIZEOF (QUERY (at <* QUERY (sar <* USEDIN (SELF,
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'associated terminals') |
       ('PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'COMPONENT_TERMINAL' IN
       TYPEOF (at.related_shape_aspect)) AND
((at.related_shape_aspect\shape_aspect.description = 
                 'assembly module component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
                        'bare die component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
               'interconnect component join terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
             'interconnect module component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
              'minimally defined component terminal') OR
(at.related_shape_aspect\shape_aspect.description = 
                     'packaged component join terminal'))
       )) > 1;
  WR2: SIZEOF (QUERY( pd <* USEDIN(SELF,
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
        (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'connectivity allocation')) = 1)
       ))
       <= 1;
END_ENTITY;

RULE physical_connectivity_definition_relationship_constraint FOR
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'physical connectivity definition change')
       AND NOT('PHYSICAL_CONNECTIVITY_DEFINITION_MIM.'
       + 'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF(sar.related_shape_aspect))
       )) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'physical connectivity definition change')
       AND NOT('PHYSICAL_CONNECTIVITY_DEFINITION_MIM.'
       + 'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF(sar.relating_shape_aspect))
       )) = 0;
  WR3: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'physical connectivity definition change')
       AND (SIZEOF(QUERY(rpd <* USEDIN(sar, 
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.'
       + 'PROPERTY_DEFINITION.DEFINITION') |
       ('PHYSICAL_CONNECTIVITY_DEFINITION_MIM.'
       + 'REQUIREMENTS_PROPERTY' IN TYPEOF(rpd))
       )) = 0)
       )) = 0;
  
END_RULE;

ENTITY physical_connectivity_element
  SUBTYPE OF (shape_aspect_relationship, shape_aspect);
WHERE
  WR1: (SELF.relating_shape_aspect\shape_aspect.description = 
                          'topological junction') XOR
       (SIZEOF ([
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'COMPONENT_TERMINAL'] *
       TYPEOF (SELF.relating_shape_aspect)) = 1);
  WR2: (SELF.related_shape_aspect\shape_aspect.description = 'topological junction') XOR
       (SIZEOF ([
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'COMPONENT_TERMINAL'] *
       TYPEOF (SELF.related_shape_aspect)) = 1);
  WR3: SIZEOF (QUERY (se <* QUERY (sar <* USEDIN (SELF,
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'structure element') |
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF (se.relating_shape_aspect))) = 1;
  WR4: ('PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'PHYSICAL_UNIT' IN 
       TYPEOF (SELF.of_shape.definition)) AND
       (SELF.of_shape.definition\product_definition.
         frame_of_reference.name = 
       'physical design');
END_ENTITY;

ENTITY physical_unit_network_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SELF.frame_of_reference.name IN ['physical network design'];
END_ENTITY;

RULE physical_connectivity_element_unique_constraint FOR
 ( physical_connectivity_element );
LOCAL
  name_bag : BAG OF STRING := [];
  pce_bag : BAG OF physical_connectivity_element;
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  pcd_bag : BAG OF physical_connectivity_definition;
END_LOCAL;

REPEAT i := 1 to SIZEOF(physical_connectivity_element) by 1;
  IF EXISTS( physical_connectivity_element[i]\shape_aspect.name ) THEN
    IF( NOT( physical_connectivity_element[i]\shape_aspect.name IN 
         name_bag ) ) THEN
      name_bag := name_bag + 
                physical_connectivity_element[i]\shape_aspect.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pcd_bag := [];
  pce_bag := QUERY( pce <* physical_connectivity_element |
(pce\shape_aspect.name = name_bag[i]) );
  REPEAT j := 1 to SIZEOF(pce_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    sar_bag := QUERY( sar <* USEDIN( pce_bag[j],
'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') | ((sar\shape_aspect_relationship.name =
'structure element') AND (
'PHYSICAL_CONNECTIVITY_DEFINITION_MIM.' +
'PHYSICAL_CONNECTIVITY_DEFINITION' IN 
TYPEOF(sar.relating_shape_aspect))) );
    REPEAT k := 1 to SIZEOF(sar_bag) by 1;
      IF EXISTS( sar_bag[j].relating_shape_aspect ) THEN
        IF ( sar_bag[j].relating_shape_aspect IN pcd_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          pcd_bag := pcd_bag + sar_bag[j].relating_shape_aspect;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_layout_template_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 10:10:27 liutkus Exp $
   ISO TC184/SC4/WG12 N3538 - ISO/CD-TS 10303-1722 Physical layout template - EXPRESS MIM
*)


SCHEMA Physical_layout_template_mim;
	USE FROM Functional_decomposition_to_design_mim;	-- ISO/TS 10303-1676
	USE FROM Product_identification_mim;	-- ISO/TS 10303-1017

	USE FROM Application_context_schema(application_context_element);
		
ENTITY part_template_definition
  SUBTYPE OF (product_definition);
WHERE
  WR1: frame_of_reference\application_context_element.name = 'template definition';

  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'ANALYTICAL_MODEL' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'part template analytical model'))) 
       <= 1))) = 0;       

  WR3: (NOT (SELF\product_definition.description = 
         'component termination passage template')) OR
       (SIZEOF (QUERY (ctpt <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'inter stratum feature passage technology') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (ctpt.relating_product_definition)) AND
       (ctpt.relating_product_definition\product_definition.description = 
       'default component termination passage definition'))) = 1);

  WR4: (NOT (SELF\product_definition.description = 
        'component termination passage template')) OR
       (SIZEOF (QUERY (am <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'access mechanism') |
       am.related_product_definition\product_definition.description IN 
       ['component termination passage template interface terminal',
       'component termination passage template join terminal'])) >= 2);

  WR5: (NOT (SELF\product_definition.description = 'default trace template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu <* QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition))) = 1)) = 1);

  WR6: (NOT (SELF\product_definition.description = 'inter stratum feature template')) OR
       (SIZEOF (QUERY (isfpt <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'inter stratum feature passage technology') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PASSAGE_TECHNOLOGY' IN
       TYPEOF (isfpt.relating_product_definition)))) = 1);

  WR7: (NOT (SELF\product_definition.description = 'printed connector template')) OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF, 
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name IN 
       ['connector'])) >= 1);

  WR8: (NOT (SELF\product_definition.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'ANALYTICAL_MODEL' IN 
       TYPEOF (pdr.used_representation)) AND
       (pdr.used_representation\representation.name = 'transmission line model'))) 
       = 1))) = 0);

  WR9: (NOT (SELF\product_definition.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       SIZEOF (
       ['PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2)) = 2)) = 1))) = 0);

 WR10: (NOT (SELF\product_definition.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'maximum width'))) = 1
       )) = 1))) = 0);

 WR11: (NOT (SELF\product_definition.description = 'printed part cross section template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] * 
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'minimum width'))) = 1
       )) = 1))) = 0);

 WR12: (NOT (SELF\product_definition.description = 'printed part template')) OR
       (SIZEOF (QUERY (impl_func <* QUERY (pdr <* 
       USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'implemented function') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'FUNCTIONAL_UNIT' IN 
       TYPEOF (impl_func.relating_product_definition)) AND
       (impl_func.relating_product_definition.frame_of_reference.name =
       'functional design usage'))) = 1);
 
 WR13: (NOT (SELF\product_definition.description = 'printed part template')) OR
       (SIZEOF (QUERY (ad <* QUERY (pdr <* USEDIN (SELF, 
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'associated definition') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN 
       TYPEOF (ad.related_product_definition)) AND
       (ad.related_product_definition\product_definition.description IN 
       ['interface terminal', 'join terminal']))) >= 2);

 WR14: (NOT (SELF\product_definition.description = 'trace template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 'curve style parameters'
       )) = 1 ) )) = 1 );  

 WR15: (NOT (SELF\product_definition.description = 'unsupported passage template')) OR
       (SIZEOF (QUERY (upt <* QUERY (pdr <* USEDIN (SELF, 
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'inter stratum feature passage technology') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PASSAGE_TECHNOLOGY' IN 
       TYPEOF (upt.relating_product_definition)) AND
       (upt.relating_product_definition\product_definition.description = 
       'default unsupported passage definition'))) = 1);

 WR16: (NOT (SELF\product_definition.description = 'via template')) OR
       (SIZEOF (QUERY (vpt <* QUERY (pdr <* USEDIN (SELF, 
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'inter stratum feature passage technology') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PASSAGE_TECHNOLOGY' IN 
       TYPEOF (vpt.relating_product_definition)) AND
       (vpt.relating_product_definition\product_definition.description = 
       'default via definition'))) = 1);

 WR17: (NOT (SELF\product_definition.description = 'via template')) OR
       (SIZEOF (QUERY (am <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'access mechanism') |
       am.related_product_definition\product_definition.description =
                                 'via template terminal')) >= 2);

 WR18: EXISTS(SELF\product_definition.name);

 WR19: (NOT (SELF\product_definition.description = 'non conductive cross section template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu <* QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'STRATUM_TECHNOLOGY' IN
       TYPEOF (tu.relating_property_definition.definition)))) = 1)) = 1);

 WR20: (NOT (SELF\product_definition.description = 'non conductive cross section template')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       (SIZEOF (
       ['PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'MEASURE_REPRESENTATION_ITEM',
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT'] *
       TYPEOF (it)) = 2) AND (it\representation_item.name = 'nominal width'))) = 1
       )) = 1))) = 0);

 WR21: (NOT (SELF\product_definition.description = 'printed connector template')) OR
       (SIZEOF (QUERY (ad <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'associated definition') |
       ('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (ad.related_product_definition)) AND
       (ad.relating_product_definition\product_definition.description IN
       ['interface terminal', 'join terminal']))) >= 2);

 WR22: (NOT (SELF\product_definition.description = 
                         'printed part cross section template')) OR
       (SIZEOF (QUERY (ad <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'horizontal material link') |
       NOT(('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_product_definition)) AND
       (('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_product_definition\product_definition_relationship.
                                                   related_product_definition)) AND
       (ad.relating_product_definition\product_definition_relationship.
                 related_product_definition\product_definition.description = 'left'))))) = 0); 

 WR23: (NOT (SELF\product_definition.description = 
                        'printed part cross section template')) OR
       (SIZEOF (QUERY (ad <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'horizontal material link') |
       NOT(('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_product_definition)) AND
       (('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_product_definition\product_definition_relationship.
                                                 relating_product_definition)) AND
       (ad.relating_product_definition\product_definition_relationship.
              relating_product_definition\product_definition.description = 'right'))))) = 0); 

 WR24: (NOT (SELF\product_definition.description = 
                                'printed part cross section template')) OR
       (SIZEOF (QUERY (ad <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'vertical material link') |
       NOT(('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_product_definition)) AND
       (('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_product_definition\product_definition_relationship.
                                              related_product_definition)) AND
       (ad.relating_product_definition\product_definition_relationship.
          related_product_definition\product_definition.description = 'bottom'))))) = 0); 

 WR25: (NOT (SELF\product_definition.description = 
                                 'printed part cross section template')) OR
       (SIZEOF (QUERY (ad <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'vertical material link') |
       NOT(('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (ad.relating_product_definition)) AND
       (('PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (ad.relating_product_definition\product_definition_relationship.
                                          relating_product_definition)) AND
       (ad.relating_product_definition\product_definition_relationship.
          relating_product_definition\product_definition.description = 'top'))))) = 0); 
END_ENTITY;	
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_node_requirement_to_implementing_component_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 10:26:08 liutkus Exp $
   ISO TC184/SC4/WG12 N3541 - ISO/CD-TS 10303-1723 Physical node requirement to implementing component allocation - EXPRESS MIM
*)


SCHEMA Physical_node_requirement_to_implementing_component_allocation_mim;
	USE FROM Assembly_module_with_packaged_connector_component_mim;	-- ISO/TS 10303-1645
	USE FROM Assembly_technology_mim;	-- ISO/TS 10303-1649
	USE FROM Physical_connectivity_definition_mim;	-- ISO/TS 10303-1755
	
REFERENCE FROM product_property_definition_schema -- ISO 10303-41
  (acyclic_shape_aspect_relationship);
	
ENTITY physical_node_requirement_to_implementing_component_allocation
  SUBTYPE OF (shape_aspect_relationship, shape_aspect);
WHERE
  WR1: ('PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (SELF.related_shape_aspect.of_shape\property_definition.definition)) AND
       (NOT (SELF.related_shape_aspect.of_shape\property_definition.definition\product_definition.description IN 
       ['laminate component']));
  WR2: 'PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_MIM.' +
       'PHYSICAL_CONNECTIVITY_DEFINITION' IN
       TYPEOF (SELF.relating_shape_aspect);
  WR3: acyclic_shape_aspect_relationship(SELF,
       [SELF\shape_aspect_relationship.related_shape_aspect],
       'PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION_MIM.'+
       'PHYSICAL_NODE_REQUIREMENT_TO_IMPLEMENTING_COMPONENT_ALLOCATION');
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\physical_node_requirement_to_implementing_component_allocation)) = 0;
(*
  WR5: SIZEOF(terminal_of_implementing_component(SELF,SELF.relating_shape_aspect)) = 0;
*)
END_ENTITY;
	
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_2d_design_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.16 2005/04/04 10:26:05 liutkus Exp $
   ISO TC184/SC4/WG12 N3547 - ISO/CD-TS 10303-1724 Physical unit 2d design view - EXPRESS MIM
*)


SCHEMA Physical_unit_2d_design_view_mim;
	USE FROM Assembly_module_with_interconnect_component_mim;	-- ISO/TS 10303-1643
	USE FROM Physical_unit_2d_shape_mim;	-- ISO/TS 10303-1726
REFERENCE FROM Physical_unit_usage_view_mim   	
  (is_laminate_component); -- ISO/TS 10303-1732
REFERENCE FROM Physical_unit_design_view_mim   
  (is_interconnect_module_occurrence); 	-- ISO/TS 10303-1728
REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set); 
	
	
ENTITY component_2d_location
  SUBTYPE OF (context_dependent_shape_representation, shape_representation_relationship, representation_relationship_with_transformation, definitional_representation_relationship);
(* NEED to re-write !!!  
WHERE
  WR1: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'placement fixed') AND 
       ((it\descriptive_representation_item.description = 'true') OR
       (it\descriptive_representation_item.description = 'false')))) = 1;
  WR2: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)))) = 1;
  WR3: (NOT 
       (SELF.context_of_items\geometric_representation_context.
       coordinate_space_dimension
       = 2)) OR (SIZEOF (QUERY (it <* SELF.items |
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (it))) = 1);
  WR4: (NOT 
       (SELF.context_of_items\geometric_representation_context.
       coordinate_space_dimension
        = 3)) OR (SIZEOF (QUERY (it <* SELF.items |
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_3D' IN TYPEOF (it))) = 1);
  WR5: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM'
       IN TYPEOF (it)) 
       )) = 1;
  WR6: NOT (SIZEOF (QUERY (it <* SELF.items |
        'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (it))) = 1)
        OR
        (SIZEOF (QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D'
        IN TYPEOF (cto2d)) AND
        (SIZEOF (QUERY (mi <* USEDIN (cto2d,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM.MAPPING_TARGET') | (
       (SIZEOF (QUERY (cl <* USEDIN (mi,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'REPRESENTATION.ITEMS') |(cl = SELF))) = 1)))) >= 1)
        )) = 1);
  WR7: NOT (SIZEOF (QUERY (it <* SELF.items |
        'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'AXIS2_PLACEMENT_3D' IN TYPEOF (it))) = 1)
      OR
       (SIZEOF (QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'AXIS2_PLACEMENT_3D'
        IN TYPEOF (cto2d)) AND
        (SIZEOF (QUERY (mi <* USEDIN (cto2d,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM.MAPPING_TARGET') | (
       (SIZEOF (QUERY (cl <* USEDIN (mi,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'REPRESENTATION.ITEMS') |(cl = SELF))) = 1)))) = 1)
        )) = 1);
  WR8:NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2) AND 
          (SELF.context_of_items.context_type = 'component surface') AND
        (( SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'mounting surface assembly joint') AND
       (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
         'interconnect module component surface feature') AND
       (SIZEOF(QUERY ( sar <* USEDIN (pdr.definition.definition.relating_shape_aspect,
        'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        ((sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module primary surface') OR
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge surface') OR
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge segment surface')))) = 1)
       )
       )) = 1)))
       OR
       (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);
  WR9:NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2) AND 
          (SELF.context_of_items.context_type = 'component surface') AND
         (( SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'mounting surface assembly joint') AND
       (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
         'interconnect module component surface feature') AND
       (SIZEOF(QUERY ( sar <* USEDIN (pdr.definition.definition.relating_shape_aspect,
        'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module secondary surface')) = 1)
       ))) = 1)))
       OR
    (SIZEOF(QUERY( cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,-1.0,0.001 )))) = 1);
  WR10: (NOT(is_laminate_component_location(SELF))) OR
      (SIZEOF(QUERY( pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
      (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
        'interconnect module component surface feature'))) = 0);
  WR11: (NOT(is_laminate_component_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);
  WR12: SIZEOF(QUERY( pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'SHAPE_ASPECT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.definition.definition\shape_aspect.description =
        'interconnect module component surface feature'))) = 0;
  WR13: (NOT((SELF.context_of_items\geometric_representation_context.
        coordinate_space_dimension = 2) AND
        (SELF.context_of_items.context_type = 'component stacked')))
        OR 
      (SIZEOF(QUERY( pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
      (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
        'interconnect module component surface feature'))) = 0);
 WR14: NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)
          AND
         (SELF.context_of_items.context_type = 'component edge'))
       OR
        ((NOT(is_laminate_component_location(SELF)))
          AND
       (( SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'reference terminal assembly joint') AND
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'COMPONENT_TERMINAL' IN 
                      TYPEOF (pdr.definition.definition.related_shape_aspect)) 
         AND
       (pdr.definition.definition.related_shape_aspect\shape_aspect.description IN
       ['packaged component join terminal',
       'package terminal occurrence'])
         AND
       (SIZEOF(QUERY ( sar <* USEDIN 
                          (pdr.definition.definition.related_shape_aspect,
        'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (sar\shape_aspect_relationship.name = 'instantiated feature')
           AND
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'PRIMARY_REFERENCE_TERMINAL' IN TYPEOF (sar.relating_shape_aspect))
         )) = 1)
         AND
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'COMPONENT_DEFINITION' IN
         TYPEOF (pdr.definition.definition.related_shape_aspect.of_shape.definition))
         AND
       (component_definition_located_by_component_location(SELF) =
                 pdr.definition.definition.related_shape_aspect.of_shape.definition) 
       ))) = 1))
         AND
       (( SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.name = 'mounting surface assembly joint') AND
       (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
         'interconnect module component surface feature') AND
       (SIZEOF(QUERY ( sar <* USEDIN (pdr.definition.definition.relating_shape_aspect,
        'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge surface') OR
        (sar.relating_shape_aspect\shape_aspect.description =
         'interconnect module edge segment surface'))) = 1)
         AND
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'COMPONENT_MOUNTING_FEATURE' IN 
                      TYPEOF (pdr.definition.definition.related_shape_aspect)) 
         AND
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'COMPONENT_DEFINITION' IN
         TYPEOF (pdr.definition.definition.related_shape_aspect.of_shape.definition))
         AND
       (component_definition_located_by_component_location(SELF) =
                 pdr.definition.definition.related_shape_aspect.of_shape.definition) 
       ))) = 1))
      );
 WR15: NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)
          AND
         (SELF.context_of_items.context_type = 'component stacked'))
       OR
        ((NOT(is_laminate_component_location(SELF)))
          AND
       (( SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       (
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition))
         AND
       ('mounting joint' = pdr.name)
         AND
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'COMPONENT_MOUNTING_FEATURE' IN
                      TYPEOF (pdr.definition.definition.related_shape_aspect))
         AND
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'COMPONENT_DEFINITION' IN
         TYPEOF (pdr.definition.definition.related_shape_aspect.of_shape.definition))
         AND
       (component_definition_located_by_component_location(SELF) :=:
                 pdr.definition.definition.related_shape_aspect.of_shape.definition)    
         AND
       (component_definition_located_by_component_location(SELF) :<>: 
                 pdr.definition.definition.relating_shape_aspect.of_shape.definition)    
       )
      )) = 1))
        );
 WR16: (NOT(is_interconnect_module_component_location(SELF))) OR
      (SIZEOF(QUERY( pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
      (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
        'interconnect module component surface feature'))) = 0);
 WR17: NOT((SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)
          AND
         (SELF.context_of_items.context_type = 'component stacked'))
       OR
       (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      ((cto2d_determinant_test(cto2d,1.0,0.001 )) OR
      (cto2d_determinant_test(cto2d,-1.0,0.001 )))
      )) = 1);
 WR18 : SIZEOF (QUERY (it <* SELF\representation.items| NOT
     (SIZEOF(
    ['PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
     'CARTESIAN_TRANSFORMATION_OPERATOR_2D', 
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
     'MAPPED_ITEM', 
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
     'DESCRIPTIVE_REPRESENTATION_ITEM', 
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
     'AXIS2_PLACEMENT_3D'] 
     * TYPEOF(it)) = 1 ))) = 0;
 WR19: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_3D'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'origin') 
       )) = 0;
 WR20: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM'
       IN TYPEOF (it))
       AND NOT
       (((it\representation_item.name = 'component assembly 2d position')
        OR
       (it\representation_item.name = 'component assembly 3d position'))
       AND
       (it.mapping_source.mapping_origin\representation_item.name = 'origin')
       AND
       (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_2D' IN TYPEOF (it.mapping_source.mapping_origin))
        OR
       ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_3D' IN TYPEOF (it.mapping_source.mapping_origin))))
       )) = 0;
 WR21: SIZEOF(QUERY(pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.'
       + 'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN 
            TYPEOF(pdr.definition.definition))
       )) = 1;
 WR22: (NOT(is_top_footprint_occurrence_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);
 WR23: (NOT(is_bottom_footprint_occurrence_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,-1.0,0.001 )))) = 1);
 WR24: (NOT(is_symmetrical_footprint_occurrence_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);
 WR25: (NOT(is_top_padstack_occurrence_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);
 WR26: (NOT(is_bottom_padstack_occurrence_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,-1.0,0.001 )))) = 1);
 WR27: (NOT(is_symmetrical_padstack_occurrence_location(SELF) AND
         (SELF.context_of_items\geometric_representation_context.coordinate_space_dimension
         = 2)))
         OR
         (SIZEOF(QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (cto2d)) AND
      (cto2d_determinant_test(cto2d,1.0,0.001 )))) = 1);*)
END_ENTITY;
	
RULE component_part_2d_geometric_representation_relationship_constraint FOR 
( shape_representation_relationship );
LOCAL
 rr: SET OF representation_relationship :=
      QUERY ( srr <* shape_representation_relationship |
       srr\representation_relationship.name = 
                            'component part planar shape');
 pass: BOOLEAN := TRUE;
 grc1: Geometric_representation_context := ?;
 grc2: Geometric_representation_context := ?;
END_LOCAL;
REPEAT i := 1 to SIZEOF(rr) by 1;
  grc1 := rr[i].rep_1.context_of_items;
  grc2 := rr[i].rep_2.context_of_items;
IF ((grc1.coordinate_space_dimension) <>
          (grc2.coordinate_space_dimension))
THEN
  pass := FALSE;
END_IF;
END_REPEAT;
WHERE
 WR1: pass;
END_RULE;
	

FUNCTION component_definition_located_by_component_location 
                   (cl : component_2d_location) : component_definition; 
LOCAL
  pdr : BAG OF property_definition_representation := USEDIN (cl,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION');
  pd : property_definition := ?;
END_LOCAL;
   REPEAT i := 1 TO HIINDEX(pdr) BY 1;
    IF('PRODUCT_PROPERTY_DEFINITION_SCHEMA.' +
        'PROPERTY_DEFINITION' IN 
                                  TYPEOF (pdr[i].definition))
      THEN                            
        pd := pdr[i].definition;
        IF(('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
          'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN 
                                    TYPEOF (pd.definition))
          AND
          ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
           'COMPONENT_DEFINITION' IN 
           TYPEOF (pd.definition\product_definition_relationship.
                                                  related_product_definition)))
        THEN 
          RETURN(pd.definition\product_definition_relationship.
                                                   related_product_definition);
      END_IF;                                               
    END_IF;
   END_REPEAT;
 RETURN (?);
END_FUNCTION;

FUNCTION cto2d_determinant_test (cto2d: cartesian_transformation_operator_2d;
                             expected_value: REAL; delta: REAL ) : BOOLEAN;

LOCAL
  det : REAL := 0.0;
  DRs : LIST [4:4] OF REAL := [];
END_LOCAL;
     DRs[1] := cto2d.u[1].direction_ratios[1];
     DRs[2] := cto2d.u[1].direction_ratios[2];
     DRs[3] := cto2d.u[2].direction_ratios[1];
     DRs[4] := cto2d.u[2].direction_ratios[2];
     det  :=  (DRs[1] * DRs[4]) - (DRs[2] * DRs[3]);
IF (Abs(expected_value - det) < Abs(delta) ) THEN
    RETURN (TRUE);
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_bottom_footprint_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pds : SET OF property_definition := BAG_TO_SET(USEDIN ( pd,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION.DEFINITION'));
   fo : SET OF shape_aspect :=  [];
  sar : SET OF shape_aspect_relationship := [];
  dri : SET OF descriptive_representation_item := [];
  pdr : SET OF property_definition_representation := [];
 pass : BOOLEAN := FALSE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(pds) by 1;
      fo := fo + BAG_TO_SET(QUERY( sa <* (USEDIN(pds[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT.OF_SHAPE')) |
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'FOOTPRINT_OCCURRENCE' IN TYPEOF(sa)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(fo) by 1;
      sar := sar + BAG_TO_SET(QUERY( sar <* (USEDIN ( fo[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) | 
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' + 
  'FOOTPRINT_DEFINITION' IN 
      TYPEOF(sar.relating_shape_aspect.of_shape.definition)) AND
  ('usage definition' = sar\shape_aspect_relationship.name)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(sar) by 1;
      pdr := pdr + BAG_TO_SET(QUERY( pdr <* (
          USEDIN (sar[i].relating_shape_aspect.of_shape.definition,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'REPRESENTATION' IN TYPEOF(pdr.used_representation)) AND
  (pdr.used_representation\representation.name = 'product definition context description')));
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdr) by 1;
      dri := dri + (QUERY( dri <* pdr[i].used_representation.items |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
   (dri\representation_item.name = 'text') AND
   (dri.description = 'bottom')));
END_REPEAT;

IF (SIZEOF(dri) = 1) THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_bottom_footprint_occurrence_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_bottom_footprint_occurrence(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_bottom_padstack_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pds : SET OF property_definition := BAG_TO_SET(USEDIN ( pd,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION.DEFINITION'));
   fo : SET OF shape_aspect :=  [];
  sar : SET OF shape_aspect_relationship := [];
  dri : SET OF descriptive_representation_item := [];
  pdr : SET OF property_definition_representation := [];
 pass : BOOLEAN := FALSE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(pds) by 1;
      fo := fo + BAG_TO_SET(QUERY( sa <* (USEDIN(pds[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT.OF_SHAPE')) |
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PADSTACK_OCCURRENCE' IN TYPEOF(sa)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(fo) by 1;
      sar := sar + BAG_TO_SET(QUERY( sar <* (USEDIN ( fo[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) | 
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' + 
  'PADSTACK_DEFINITION' IN 
      TYPEOF(sar.relating_shape_aspect.of_shape.definition)) AND
  ('usage definition' = sar\shape_aspect_relationship.name)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(sar) by 1;
      pdr := pdr + BAG_TO_SET(QUERY( pdr <* (
          USEDIN (sar[i].relating_shape_aspect.of_shape.definition,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'REPRESENTATION' IN TYPEOF(pdr.used_representation)) AND
  (pdr.used_representation\representation.name = 'product definition context description')));
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdr) by 1;
      dri := dri + (QUERY( dri <* pdr[i].used_representation.items |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
   (dri\representation_item.name = 'text') AND
   (dri.description = 'bottom')));
END_REPEAT;

IF (SIZEOF(dri) = 1) THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_bottom_padstack_occurrence_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_bottom_padstack_occurrence(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_interconnect_module_component_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_interconnect_module_occurrence(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_laminate_component_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_laminate_component(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_symmetrical_footprint_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pds : SET OF property_definition := BAG_TO_SET(USEDIN ( pd,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION.DEFINITION'));
   fo : SET OF shape_aspect :=  [];
  sar : SET OF shape_aspect_relationship := [];
  dri : SET OF descriptive_representation_item := [];
  pdr : SET OF property_definition_representation := [];
 pass : BOOLEAN := FALSE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(pds) by 1;
      fo := fo + BAG_TO_SET(QUERY( sa <* (USEDIN ( pds[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT.OF_SHAPE')) |
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'FOOTPRINT_OCCURRENCE' IN TYPEOF(sa)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(fo) by 1;
      sar := sar + BAG_TO_SET(QUERY( sar <* (USEDIN ( fo[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) | 
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' + 
  'FOOTPRINT_DEFINITION' IN 
      TYPEOF(sar.relating_shape_aspect.of_shape.definition)) AND
  ('usage definition' = sar\shape_aspect_relationship.name)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(sar) by 1;
      pdr := pdr + BAG_TO_SET(QUERY( pdr <* (
          USEDIN (sar[i].relating_shape_aspect.of_shape.definition,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'REPRESENTATION' IN TYPEOF(pdr.used_representation)) AND
  (pdr.used_representation\representation.name = 'product definition context description')));
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdr) by 1;
      dri := dri + (QUERY( dri <* pdr[i].used_representation.items |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
   (dri\representation_item.name = 'text') AND
   (dri.description = 'symmetrical')));
END_REPEAT;

IF (SIZEOF(dri) = 1) THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_symmetrical_footprint_occurrence_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_symmetrical_footprint_occurrence(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_symmetrical_padstack_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pds : SET OF property_definition := BAG_TO_SET(USEDIN ( pd,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION.DEFINITION'));
   fo : SET OF shape_aspect :=  [];
  sar : SET OF shape_aspect_relationship := [];
  dri : SET OF descriptive_representation_item := [];
  pdr : SET OF property_definition_representation := [];
 pass : BOOLEAN := FALSE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(pds) by 1;
      fo := fo + BAG_TO_SET(QUERY( sa <* (USEDIN ( pds[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT.OF_SHAPE')) |
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PADSTACK_OCCURRENCE' IN TYPEOF(sa)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(fo) by 1;
      sar := sar + BAG_TO_SET(QUERY( sar <* (USEDIN ( fo[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) | 
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' + 
  'PADSTACK_DEFINITION' IN 
      TYPEOF(sar.relating_shape_aspect.of_shape.definition)) AND
  ('usage definition' = sar\shape_aspect_relationship.name)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(sar) by 1;
      pdr := pdr + BAG_TO_SET(QUERY( pdr <* (
          USEDIN (sar[i].relating_shape_aspect.of_shape.definition,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'REPRESENTATION' IN TYPEOF(pdr.used_representation)) AND
  (pdr.used_representation\representation.name = 'product definition context description')));
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdr) by 1;
      dri := dri + (QUERY( dri <* pdr[i].used_representation.items |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
   (dri\representation_item.name = 'text') AND
   (dri.description = 'symmetrical')));
END_REPEAT;

IF (SIZEOF(dri) = 1) THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_symmetrical_padstack_occurrence_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_symmetrical_padstack_occurrence(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_top_footprint_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pds : SET OF property_definition := BAG_TO_SET(USEDIN ( pd,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION.DEFINITION'));
   fo : SET OF shape_aspect :=  [];
  sar : SET OF shape_aspect_relationship := [];
  dri : SET OF descriptive_representation_item := [];
  pdr : SET OF property_definition_representation := [];
 pass : BOOLEAN := FALSE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(pds) by 1;
      fo := fo + BAG_TO_SET(QUERY( sa <* (USEDIN ( pds[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT.OF_SHAPE')) |
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'FOOTPRINT_OCCURRENCE' IN TYPEOF(sa)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(fo) by 1;
      sar := sar + BAG_TO_SET(QUERY( sar <* (USEDIN ( fo[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) | 
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' + 
  'FOOTPRINT_DEFINITION' IN 
      TYPEOF(sar.relating_shape_aspect.of_shape.definition)) AND
  ('usage definition' = sar\shape_aspect_relationship.name)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(sar) by 1;
      pdr := pdr + BAG_TO_SET(QUERY( pdr <* (
          USEDIN (sar[i].relating_shape_aspect.of_shape.definition,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'REPRESENTATION' IN TYPEOF(pdr.used_representation)) AND
  (pdr.used_representation\representation.name = 'product definition context description')));
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdr) by 1;
      dri := dri + (QUERY( dri <* pdr[i].used_representation.items |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
   (dri\representation_item.name = 'text') AND
   (dri.description = 'top')));
END_REPEAT;

IF (SIZEOF(dri) = 1) THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_top_footprint_occurrence_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_top_footprint_occurrence(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

FUNCTION is_top_padstack_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pds : SET OF property_definition := BAG_TO_SET(USEDIN ( pd,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION.DEFINITION'));
   fo : SET OF shape_aspect :=  [];
  sar : SET OF shape_aspect_relationship := [];
  dri : SET OF descriptive_representation_item := [];
  pdr : SET OF property_definition_representation := [];
 pass : BOOLEAN := FALSE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(pds) by 1;
      fo := fo + BAG_TO_SET(QUERY( sa <* (USEDIN ( pds[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT.OF_SHAPE')) |
     'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PADSTACK_OCCURRENCE' IN TYPEOF(sa)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(fo) by 1;
      sar := sar + BAG_TO_SET(QUERY( sar <* (USEDIN ( fo[i],
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT')) | 
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' + 
  'PADSTACK_DEFINITION' IN 
      TYPEOF(sar.relating_shape_aspect.of_shape.definition)) AND
  ('usage definition' = sar\shape_aspect_relationship.name)));
END_REPEAT;
REPEAT i := 1 to SIZEOF(sar) by 1;
      pdr := pdr + BAG_TO_SET(QUERY( pdr <* (
          USEDIN (sar[i].relating_shape_aspect.of_shape.definition,
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'REPRESENTATION' IN TYPEOF(pdr.used_representation)) AND
  (pdr.used_representation\representation.name = 'product definition context description')));
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdr) by 1;
      dri := dri + (QUERY( dri <* pdr[i].used_representation.items |
     ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(dri)) AND
   (dri\representation_item.name = 'text') AND
   (dri.description = 'top')));
END_REPEAT;

IF (SIZEOF(dri) = 1) THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_top_padstack_occurrence_location ( cl: component_2d_location) : BOOLEAN; 
LOCAL
  pdrs : SET OF property_definition_representation := BAG_TO_SET(USEDIN ( cl, 
  'PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
END_LOCAL;
IF sizeof (pdrs) = 1 THEN
  IF (('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF 
     (pdrs[1].definition.definition)) AND
  ('PHYSICAL_UNIT_2D_DESIGN_VIEW_MIM.' +
  'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN TYPEOF 
     (pdrs[1].definition.definition.related_product_definition)) AND
   is_top_padstack_occurrence(pdrs[1].definition.definition.related_product_definition)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_2d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 10:26:11 liutkus Exp $
   ISO TC184/SC4/WG12 N3559 - ISO/CD-TS 10303-1726 Physical unit 2d shape - EXPRESS MIM
*)


SCHEMA Physical_unit_2d_shape_mim;
	USE FROM Non_feature_shape_element_mim;	-- ISO/TS 10303-1706
	USE FROM Physical_unit_shape_with_parameters_mim;	-- ISO/TS 10303-1730
	USE FROM Layered_2d_shape_mim; -- ISO/TS 10303-1693
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_3d_design_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.16 2005/04/04 10:26:09 liutkus Exp $
   ISO TC184/SC4/WG12 N3562 - ISO/CD-TS 10303-1725 Physical unit 3d design view - EXPRESS MIM
*)


SCHEMA Physical_unit_3d_design_view_mim;
	USE FROM Layered_3d_shape_mim;	-- ISO/TS 10303-1694
	
ENTITY component_3d_location
  SUBTYPE OF (context_dependent_shape_representation, shape_representation_relationship, representation_relationship_with_transformation, definitional_representation_relationship);
(* NEED to re-write !!!    
WHERE
  WR1: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'placement fixed') AND 
       ((it\descriptive_representation_item.description = 'true') OR
       (it\descriptive_representation_item.description = 'false')))) = 1;
  WR2: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM'
       IN TYPEOF (it)))) = 1;
  WR3: (NOT 
       (SELF.context_of_items\geometric_representation_context.
       coordinate_space_dimension
       = 2)) OR (SIZEOF (QUERY (it <* SELF.items |
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (it))) = 1);
  WR4: (NOT 
       (SELF.context_of_items\geometric_representation_context.
       coordinate_space_dimension
        = 3)) OR (SIZEOF (QUERY (it <* SELF.items |
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_3D' IN TYPEOF (it))) = 1);
  WR5: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM'
       IN TYPEOF (it)) 
       )) = 1;
  WR6: NOT (SIZEOF (QUERY (it <* SELF.items |
        'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D' IN TYPEOF (it))) = 1)
        OR
        (SIZEOF (QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
        'CARTESIAN_TRANSFORMATION_OPERATOR_2D'
        IN TYPEOF (cto2d)) AND
        (SIZEOF (QUERY (mi <* USEDIN (cto2d,
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM.MAPPING_TARGET') | (
       (SIZEOF (QUERY (cl <* USEDIN (mi,
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'REPRESENTATION.ITEMS') |(cl = SELF))) = 1)))) >= 1)
        )) = 1);
  WR7: NOT (SIZEOF (QUERY (it <* SELF.items |
        'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
        'AXIS2_PLACEMENT_3D' IN TYPEOF (it))) = 1)
      OR
       (SIZEOF (QUERY (cto2d <* SELF.items |
        ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
        'AXIS2_PLACEMENT_3D'
        IN TYPEOF (cto2d)) AND
        (SIZEOF (QUERY (mi <* USEDIN (cto2d,
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM.MAPPING_TARGET') | (
       (SIZEOF (QUERY (cl <* USEDIN (mi,
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'REPRESENTATION.ITEMS') |(cl = SELF))) = 1)))) = 1)
        )) = 1);
  WR8: SIZEOF(QUERY( pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
        'SHAPE_ASPECT' IN TYPEOF (pdr.definition.definition)) AND
       (pdr.definition.definition\shape_aspect.description =
        'interconnect module component surface feature'))) = 0;
  WR9: (NOT((SELF.context_of_items\geometric_representation_context.
        coordinate_space_dimension = 2) AND
        (SELF.context_of_items.context_type = 'component stacked')))
        OR 
      (SIZEOF(QUERY( pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (pdr.definition.definition)) AND
      (pdr.definition.definition.relating_shape_aspect\shape_aspect.description =
        'interconnect module component surface feature'))) = 0);
 WR10 : SIZEOF (QUERY (it <* SELF\representation.items| NOT
     (SIZEOF(
    ['PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
     'CARTESIAN_TRANSFORMATION_OPERATOR_2D', 
     'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
     'MAPPED_ITEM', 
     'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
     'DESCRIPTIVE_REPRESENTATION_ITEM', 
     'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
     'AXIS2_PLACEMENT_3D'] 
     * TYPEOF(it)) = 1 ))) = 0;
 WR11: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_3D'
       IN TYPEOF (it)) AND
       (it\representation_item.name = 'origin') 
       )) = 0;
 WR12: SIZEOF (QUERY (it <* SELF.items |
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'MAPPED_ITEM'
       IN TYPEOF (it))
       AND NOT
       (((it\representation_item.name = 'component assembly 2d position')
        OR
       (it\representation_item.name = 'component assembly 3d position'))
       AND
       (it.mapping_source.mapping_origin\representation_item.name = 'origin')
       AND
       (('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_2D' IN TYPEOF (it.mapping_source.mapping_origin))
        OR
       ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.' +
       'AXIS2_PLACEMENT_3D' IN TYPEOF (it.mapping_source.mapping_origin))))
       )) = 0;
 WR13: SIZEOF(QUERY(pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
        ('PHYSICAL_UNIT_3D_DESIGN_VIEW_MIM.'
       + 'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN 
            TYPEOF(pdr.definition.definition))
       )) = 1;*)
END_ENTITY;
(* temporary to get aim to compile.	
RULE component_part_3d_geometric_representation_relationship_constraint FOR
( shape_representation_relationship );
LOCAL
 rr: SET OF representation_relationship :=
      QUERY ( srr <* shape_representation_relationship |
       srr\representation_relationship.name = 'component part 3d shape');
 pass: BOOLEAN := TRUE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(rr) by 1;
IF ((rr[i].rep_1.context_of_items.coordinate_space_dimension) <> 
          (rr[i].rep_2.context_of_items.coordinate_space_dimension))
THEN
  pass := FALSE;
END_IF;
END_REPEAT;
WHERE
 WR1: pass;
END_RULE;
	
RULE component_part_3d_geometric_representation_relationship_constraint FOR
( shape_representation_relationship );
LOCAL
 rr: SET OF representation_relationship :=
      QUERY ( srr <* shape_representation_relationship |
       srr\representation_relationship.name = 'component part 3d shape');
 pass: BOOLEAN := TRUE;
END_LOCAL;
REPEAT i := 1 to SIZEOF(rr) by 1;
IF ((rr[i].rep_1.context_of_items.coordinate_space_dimension) <> 
          (rr[i].rep_2.context_of_items.coordinate_space_dimension))
THEN
  pass := FALSE;
END_IF;
END_REPEAT;
WHERE
 WR1: pass;
END_RULE;	
*)

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_3d_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 10:25:55 liutkus Exp $
   ISO TC184/SC4/WG12 N3565 - ISO/CD-TS 10303-1727 Physical unit 3d shape - EXPRESS MIM
*)


SCHEMA Physical_unit_3d_shape_mim;
	USE FROM Non_feature_shape_element_mim;	-- ISO/TS 10303-1706
	USE FROM Physical_unit_shape_with_parameters_mim;	-- ISO/TS 10303-1730
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_design_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.15 2005/04/04 10:26:07 liutkus Exp $
   ISO TC184/SC4/WG12 N3568 - ISO/CD-TS 10303-1728 Physical unit design view - EXPRESS MIM
*)

SCHEMA Physical_unit_design_view_mim;
	USE FROM Physical_unit_usage_view_mim;	-- ISO/TS 10303-1732
	
	USE FROM Application_context_schema(application_context_element);
	
TYPE pudv_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (assembly_component_usage,
     descriptive_representation_item);
END_TYPE; 
	
ENTITY component_definition
  SUBTYPE OF (product_definition);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = 'planar projected shape')) 
       <= 1))) = 0;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       sr_pdr.used_representation\representation.name = '3d bound volume shape')) 
       <= 1))) = 0;
  WR3: (NOT (SELF\product_definition.description = 
                                         'bare die component')) OR
       (SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'BARE_DIE',
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'EXTERNALLY_DEFINED_BARE_DIE',
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'LIBRARY_DEFINED_BARE_DIE'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1);
  WR4: NOT(is_assembly_module_occurrence(SELF))
       OR
       (SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       ('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage') AND
       (ip.relating_product_definition\product_definition.name = 
          'assembly module')
       )) = 1);
  WR5: NOT(is_assembly_module_occurrence(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (sa <* USEDIN (pd,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'COMPONENT_TERMINAL' IN 
       TYPEOF (sa)) AND
       (sa\shape_aspect.description = 'assembly module component terminal'))) 
       >= 2)) >= 1);
  WR6: NOT(is_interconnect_module_occurrence(SELF))
       OR
       (SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       ('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage') AND
        (SELF\product_definition.name = 'interconnect module')
       )) = 1);
(* invalid csa       
  WR7: (NOT (SELF\product_definition.description = 'mating connector')) OR
       ((('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' + 
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF)) AND
       (SIZEOF (QUERY (doc <* 
   SELF\product_definition_with_associated_documents.documentation_ids |
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'EE_SPECIFICATION' IN 
       TYPEOF (doc))) = 1)) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pt_occ <* QUERY (sa <* USEDIN (pd,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       sa\shape_aspect.description = 'part template occurrence') |
       SIZEOF (QUERY (it <* QUERY (sar <* USEDIN (pt_occ,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'instantiated template') |  
       ('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (it.relating_shape_aspect)) AND
       (it.relating_shape_aspect\shape_aspect.description = 
       'printed connector template'))) = 1)) = 1))) = 0) OR
       (SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PACKAGED_PART',
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'EXTERNALLY_DEFINED_PACKAGED_PART',
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'LIBRARY_DEFINED_PACKAGED_PART'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition\product_definition.description =
       'packaged connector'))) = 1)); *)
  WR8: (NOT (SELF\product_definition.description = 'mating connector')) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name  = 
       'mating connector placement')) = 1)) = 1);
 WR9: (NOT (SELF\product_definition.description = 'mating connector')) OR
       ((SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') | 
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF(pdr))) = 0) AND
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | 
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'NEXT_ASSEMBLY_USAGE_OCCURRENCE' IN TYPEOF(pdr))) = 0));
 WR10: SIZEOF(QUERY(pdr <* USEDIN(SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        NOT(NOT(pdr\product_definition_relationship.name = 'instantiated part')
        OR 
        (SELF.formation :=: 
        pdr.relating_product_definition.formation))))
        = 0;
 WR11: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'SHAPE_REPRESENTATION'
       IN TYPEOF (pdr.used_representation)) |
       (sr_pdr.used_representation\representation.name = 
        'part template non planar 2d shape')
       OR
       (sr_pdr.used_representation\representation.name = 'non planar 2d shape')
       OR
       (sr_pdr.used_representation\representation.name = 
        'open shell based surface'))) 
       <= 1))) = 0;
(** Wrong back dependence        
 WR12: NOT((SELF.frame_of_reference.name = 'layout occurrence') 
          AND
       NOT('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRINTED_COMPONENT' IN TYPEOF(SELF))) OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ((SIZEOF (['PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'COMPONENT_SHAPE_ASPECT'] *
       TYPEOF (sa)) >= 1)) 
        )) = 1))) = 0);
*)
 WR13: NOT(is_assembly_module_macro_occurrence(SELF))
       OR
       (SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design definition') |
       ('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design') AND
       (ip.relating_product_definition\product_definition.name = 
           'assembly module')
       )) = 1);
 WR14: NOT(is_interconnect_module_macro_occurrence(SELF))
        OR
       (SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'design definition') |
       ('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PHYSICAL_UNIT' IN
       TYPEOF (ip.relating_product_definition)) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design') AND
       (ip.relating_product_definition\product_definition.name = 
             'interconnect module')
        )) = 1);
 WR15: SIZEOF(QUERY(pdr <* USEDIN(SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        ((pdr\product_definition_relationship.name = 'instantiated definition')
        AND
        (NOT(SELF.formation :=:
        pdr.relating_product_definition.formation)))))
        = 0;
 WR16: (NOT (SELF\product_definition.description =
                                         'routed interconnect component')) OR
       ((SIZEOF (QUERY (ip <* QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'instantiated part') |
       (SIZEOF (['PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
       'PHYSICAL_UNIT'] *
       TYPEOF (ip.relating_product_definition)) = 1) AND
       (ip.relating_product_definition.frame_of_reference.name =
       'physical design usage'))) = 1) AND
       (SELF.frame_of_reference.name = 'physical occurrence'));
END_ENTITY;

ENTITY assembly_component
  SUBTYPE OF (component_definition, product_definition_shape);
END_ENTITY;

ENTITY thermal_component
  SUBTYPE OF (assembly_component);
END_ENTITY;

FUNCTION is_assembly_module_macro_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'assembly module') AND
   (pd.frame_of_reference\application_context_element.name = 'macro occurrence'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_assembly_module_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'assembly module') AND
   (pd.frame_of_reference\application_context_element.name = 'physical occurrence'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_interconnect_module_macro_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'interconnect module') AND
   (pd.frame_of_reference\application_context_element.name = 'macro occurrence'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_interconnect_module_occurrence ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'interconnect module') AND
   (pd.frame_of_reference\application_context_element.name = 'physical occurrence'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

RULE assembly_composition_relationship_unique_constraint FOR
 ( assembly_component_usage );
LOCAL
  acr : BAG OF assembly_component_usage := 
 QUERY( acu <* assembly_component_usage |
(acu\product_definition_relationship.name = 'assembly composition') );
  pu_bag : BAG OF physical_unit := [];
  acu_bag : BAG OF assembly_component_usage;
  pass : BOOLEAN := TRUE;
  cd_bag : BAG OF component_definition;
END_LOCAL;

REPEAT i := 1 to SIZEOF(acr) by 1;
  IF EXISTS( acr[i].relating_product_definition ) THEN
    IF( (acr[i].relating_product_definition.frame_of_reference.name = 
         'physical design')
AND ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
'PHYSICAL_UNIT' IN TYPEOF(acr[i].relating_product_definition)) ) THEN
      IF ( NOT ( acr[i].relating_product_definition IN pu_bag )) THEN
        pu_bag := pu_bag + acr[i].relating_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  cd_bag := [];
  acu_bag := QUERY( acu <* acr | (acu.relating_product_definition :=: 
                               pu_bag[i]) );
  REPEAT j := 1 to SIZEOF(acu_bag) by 1;
    IF EXISTS( acu_bag[j].related_product_definition ) THEN
      IF ( 'PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
'COMPONENT_DEFINITION' IN 
             TYPEOF(acu_bag[j].related_product_definition) ) THEN
        IF ( acu_bag[j].related_product_definition IN cd_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          cd_bag := cd_bag + acu_bag[j].related_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE next_higher_assembly_relationship_unique_constraint FOR
 ( next_assembly_usage_occurrence );
LOCAL
  pu_bag : BAG OF physical_unit := [];
  nauo_bag : BAG OF next_assembly_usage_occurrence;
  pass : BOOLEAN := TRUE;
  refdes_bag : BAG OF STRING;
END_LOCAL;

REPEAT i := 1 to SIZEOF(next_assembly_usage_occurrence) by 1;
  IF EXISTS( next_assembly_usage_occurrence[i].relating_product_definition )
                                                               THEN
    IF( 
(next_assembly_usage_occurrence[i].
                relating_product_definition.frame_of_reference.name 
                                                  = 'physical design')
AND ('PHYSICAL_UNIT_DESIGN_VIEW_MIM.' +
'PHYSICAL_UNIT' 
     IN TYPEOF(next_assembly_usage_occurrence[i].
                                relating_product_definition)) ) THEN
      IF ( NOT ( next_assembly_usage_occurrence[i].
                                  relating_product_definition 
                                              IN pu_bag )) THEN
        pu_bag := pu_bag + 
             next_assembly_usage_occurrence[i].relating_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  refdes_bag := [];
  nauo_bag := QUERY( nauo <* next_assembly_usage_occurrence | 
                  (nauo.relating_product_definition :=: pu_bag[i]) );
  REPEAT j := 1 to SIZEOF(nauo_bag) by 1;
    IF EXISTS( nauo_bag[j].reference_designator ) THEN
      IF ( nauo_bag[j].reference_designator IN refdes_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        refdes_bag := refdes_bag + nauo_bag[j].reference_designator;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_interconnect_definition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/04/04 10:26:05 liutkus Exp $
   ISO TC184/SC4/WG12 N3571 - ISO/CD-TS 10303-1729 Physical unit interconnect definition - EXPRESS MIM
*)


SCHEMA Physical_unit_interconnect_definition_mim;
	USE FROM Part_occurrence_mim;	-- ISO/TS 10303-1715

	USE FROM Date_time_schema
		(date_time_role,
		date_role);
	USE FROM Document_schema(document_type);
	USE FROM Person_organization_schema
		(person_and_organization_role,
		organization_role);	
	USE FROM Product_definition_schema(product_definition_with_associated_documents);	
	USE FROM Product_property_definition_schema(property_definition);
			
ENTITY connector_based_interconnect_definition
  SUBTYPE OF (property_definition);
UNIQUE
  UR1: SELF\property_definition.name,SELF\property_definition.definition;
WHERE
  WR1: 'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' +
       'PHYSICAL_INTERCONNECT_DEFINITION' IN 
        TYPEOF(SELF\property_definition.definition);
END_ENTITY;

ENTITY physical_interconnection_definition
  SUBTYPE OF (property_definition);
UNIQUE
  UR1: SELF\property_definition.name,SELF\property_definition.definition;
WHERE
  WR1: 'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' +
       'PHYSICAL_UNIT_INTERCONNECT_DEFINITION' IN 
        TYPEOF(SELF\property_definition.definition);
END_ENTITY;

ENTITY physical_unit_interconnect_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_UNIT_INTERCONNECT_DEFINITION_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\physical_unit_interconnect_definition))) = 0;
  WR7: SELF.frame_of_reference.name IN ['physical interconnect design'];
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_non_planar_design_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 10:25:58 liutkus Exp $
   ISO TC184/SC4/WG12 N3574 - ISO/CD-TS 10303-1613 Physical unit non planar design view - EXPRESS MIM
*)


SCHEMA Physical_unit_non_planar_design_view_mim;
	USE FROM Manifold_subsurface_mim;	-- ISO/TS 10303-1702
	USE FROM Physical_unit_design_view_mim;	-- ISO/TS 10303-1728
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_shape_with_parameters_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/03/31 11:47:39 budreckytej Exp $
   ISO TC184/SC4/WG12 N3577 - ISO/CD-TS 10303-1730 Physical unit shape with parameters - EXPRESS MIM
*)


SCHEMA Physical_unit_shape_with_parameters_mim;
	USE FROM Elemental_geometric_shape_mim;	-- ISO/TS 10303-1004
--	USE FROM Non_feature_shape_element_mim;	-- ISO/TS 10303-1706
	USE FROM Part_view_definition_mim;	-- ISO/TS 10303-1023
	USE FROM Requirement_assignment_mim;	-- ISO/TS 10303-1233
	USE FROM Shape_parameters_mim;	-- ISO/TS 10303-1743
	USE FROM Physical_unit_design_view_mim;	-- ISO/TS 10303-1023
	
TYPE puswp_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (shape_representation);
END_TYPE; 
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\physical_unit_usage_view_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.18 2005/04/04 10:25:56 liutkus Exp $
   ISO TC184/SC4/WG12 N3580 - ISO/CD-TS 10303-1732 Physical unit usage view - EXPRESS MIM
*)


SCHEMA Physical_unit_usage_view_mim;
	USE FROM Analytical_model_mim;	-- ISO/TS 10303-1603
	USE FROM Feature_and_connection_zone_mim;	-- ISO/TS 10303-1671
	USE FROM Item_definition_structure_mim;	-- ISO/TS 10303-1345
	USE FROM Part_feature_location_mim;	-- ISO/TS 10303-1714
	USE FROM Requirement_assignment_mim;	-- ISO/TS 10303-1233
	USE FROM Shape_composition_mim;	-- ISO/TS 10303-1742
	
	USE FROM Application_context_schema(application_context_element);
	USE FROM Material_property_definition_schema(property_definition_relationship);

TYPE puuv_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH 
     (shape_aspect);
END_TYPE;

TYPE puuv_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (shape_aspect);
END_TYPE;
	
ENTITY connection_zone_map_identification
  SUBTYPE OF (shape_aspect,representation_relationship);
WHERE
  WR1: SELF\representation_relationship.rep_2 :<>:
       SELF\representation_relationship.rep_1;
  WR2: 'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'USAGE_VIEW_CONNECTION_ZONE_TERMINAL_SHAPE_RELATIONSHIP' IN 
	TYPEOF(SELF\representation_relationship.rep_1);
  WR3: 'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'USAGE_VIEW_CONNECTION_ZONE_TERMINAL_SHAPE_RELATIONSHIP' IN 
	TYPEOF(SELF\representation_relationship.rep_2);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\representation_relationship ||
       SELF\connection_zone_map_identification)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\representation_relationship.name = '';
  WR7: 'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'FOOTPRINT_DEFINITION' IN TYPEOF(SELF.of_shape.definition);
END_ENTITY; 
(*
ENTITY library_defined_physical_unit
 SUPERTYPE OF (ONEOF (library_defined_package,
                      library_defined_assembly_definition,
                      library_defined_interconnect_definition,
                      library_defined_packaged_part, 
                      library_defined_bare_die))
 SUBTYPE OF (externally_defined_physical_unit);
DERIVE
  library : external_source := SELF\externally_defined_item.source;
END_ENTITY;

ENTITY library_defined_product_definition
 SUBTYPE OF (externally_defined_product_definition);
DERIVE
  library : external_source := SELF\externally_defined_item.source;
END_ENTITY;
*)
ENTITY make_from_part_feature_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.relating_shape_aspect, 
       SELF\shape_aspect_relationship.related_shape_aspect;
WHERE
  WR1: SIZEOF (['PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'COMPONENT_TERMINAL',
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL'] *
       TYPEOF (SELF.relating_shape_aspect)) = 0;
  WR2: SIZEOF (['PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'COMPONENT_TERMINAL',
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PHYSICAL_COMPONENT_INTERFACE_TERMINAL'] *
       TYPEOF (SELF.related_shape_aspect)) = 0;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\make_from_part_feature_relationship)) = 0;
  WR4: SELF.related_shape_aspect.product_definitional = TRUE;
  WR5: SELF.relating_shape_aspect.product_definitional = TRUE;
  WR6: SELF\shape_aspect.name = '';
  WR7: SELF\shape_aspect.description = '';
  WR8: SELF\shape_aspect.product_definitional = FALSE;
  WR9: SIZEOF (USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION')) = 0;
 WR10: SIZEOF (QUERY( sar <* USEDIN(SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'DESIGN_MAKE_FROM_RELATIONSHIP') IN TYPEOF
       (sar.of_shape\property_definition.definition))
       )) = 1;
END_ENTITY; 

ENTITY part_feature_template_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\part_feature_template_definition))) = 0;
  WR7: SIZEOF (QUERY (prpc <* USEDIN (SELF.formation.of_product,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'template model')) >= 1;
END_ENTITY;
	
ENTITY physical_unit
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SELF.frame_of_reference.name IN ['physical design', 
       'physical design usage'];
  WR7: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (dut <* QUERY (pdr <* USEDIN (pd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'physical unit technology') |
       dut.relating_property_definition\property_definition.name =
       'unit technology')) = 1)) <= 1;
  WR8: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'ASSEMBLY_MODULE_TERMINAL' IN
       TYPEOF (sa))) >= 1))) = 0);
  WR9: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
               'maximum negative component height')) <= 1))) = 0);
 WR10: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       pdr.used_representation\representation.name = 
                 'maximum positive component height')) <= 1))) = 0);
 WR11: NOT(is_assembly_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'implemented function') AND
       (pdr.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) = 1);
 WR12: NOT(is_assembly_module_design(SELF)) 
       OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATING_PRODUCT_DEFINITION') |
       (is_laminate_component(pdr.related_product_definition)
       ))) = 0);
 WR14: NOT(is_interconnect_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
       (pdr\product_definition_relationship.name = 'implemented function') AND
       (pdr.relating_product_definition.frame_of_reference.name = 
       'functional design usage'))) <= 1);
 WR15: NOT(is_interconnect_module_usage(SELF)) 
       OR
       (SIZEOF (QUERY (pd1 <* USEDIN (SELF, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_SHAPE' IN TYPEOF (pd1)) 
       AND (SIZEOF(QUERY(cd <* USEDIN(pd1,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'CHARACTERIZED_DEFINITION' IN TYPEOF (cd))
       AND (SIZEOF(QUERY(pd2 <* USEDIN(cd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd2\property_definition.name = 'located interconnect module thickness')
       AND (SIZEOF(USEDIN(pd2,        
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) > 1)
       )) = 1))) = 1))) <=1 );
 WR16: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
       'interconnect module usage view physical characteristics'))) <= 1);
 WR17: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
          'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr <* USEDIN (pd, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
          'minimum thickness over metal requirement')
       AND ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) <= 1))) <= 1);
 WR18: NOT(is_interconnect_module_usage(SELF))
        OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
         'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr <* USEDIN (pd, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
         'maximum thickness over metal requirement')
       AND ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) <= 1))) <= 1);
 WR19: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
          'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr <* USEDIN (pd, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
         'minimum thickness over dielectric requirement')
       AND ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) <= 1))) <= 1);
 WR20: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (pd\property_definition.name = 
          'interconnect module usage view physical characteristics')
       AND (SIZEOF (QUERY (pdr <* USEDIN (pd, 
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       (pdr.used_representation\representation.name = 
           'maximum thickness over dielectric requirement')
       AND ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF (pdr.used_representation))
       )) <= 1))) <= 1);
 WR21: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       ((pd\property_definition.name = 'restraint') OR
       (pd\property_definition.name = 'tolerance specific restraint')))) <= 1);
 WR22: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (sa\shape_aspect.description = 
                                 'interconnect module primary surface')
       )) <= 1))) = 0);
WR23: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (sa\shape_aspect.description = 
                              'interconnect module secondary surface')
       )) <= 1))) = 0);
WR24: NOT(is_interconnect_module_usage(SELF))
       OR
       (SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (sa\shape_aspect.description =
                                 'interconnect module edge surface')
       )) <= 1))) = 0);
WR25: NOT(is_assembly_module_design(SELF)) OR
((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'assembly module')      
       AND (SIZEOF (QUERY(pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY(sa <* USEDIN (pd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (sa)))) > 0 ))) = 0)))
       OR (SIZEOF (QUERY(pd <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       (SIZEOF (QUERY(sa <* USEDIN (pd,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'ASSEMBLY_JOINT' IN TYPEOF (sa)) AND
       (SIZEOF (QUERY( acu <* USEDIN (
       sa\shape_aspect_relationship.relating_shape_aspect.of_shape.definition,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
       AND (acu\product_definition_relationship.relating_product_definition = SELF)
       )) >= 1))) >=1 ))) >= 1));
WR26: NOT(is_assembly_module_design(SELF)) OR
      ((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'assembly module')      
       ))
       AND (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj))AND
       (SIZEOF (QUERY( acu <* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect,
        'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
        ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (acu))
        AND (acu\product_definition_relationship.relating_product_definition = SELF)
        )) = 0))) = 0));
WR27: NOT(is_assembly_module_design(SELF)) OR
      ((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'assembly module')      
       ))
       AND (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)))) = 0) OR
       (SIZEOF (QUERY(aj <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'ASSEMBLY_JOINT' IN TYPEOF (aj)) AND
        (SIZEOF (QUERY( cl <* USEDIN (aj\
        shape_aspect_relationship.related_shape_aspect.of_shape.definition,
        'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'REPRESENTATION.ITEMS') |
        ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
        'COMPONENT_LOCATION' IN TYPEOF (cl))
        AND (aj IN cl\representation.items))) = 0))) = 0));
WR28: NOT(is_interconnect_module_design(SELF)) OR
       ((NOT ((SELF.frame_of_reference.name = 'physical design') AND
       (SELF\product_definition.name = 'interconnect module')
       )) OR
       (SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATING_PRODUCT_DEFINITION') |
        (
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(pdr))
       AND
       (pdr\product_definition_relationship.name = 'interconnect module stratum assembly relationship')
       AND
       (pdr.related_product_definition\product_definition.description = 'primary design layer stratum')
       AND
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'STRATUM' IN TYPEOF(pdr.related_product_definition))
        )
       )
       ) = 1));

END_ENTITY;

ENTITY usage_view_connection_zone_terminal_shape_relationship
  SUBTYPE OF (representation, representation_relationship_with_transformation);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF (['PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_REPRESENTATION'] *
       TYPEOF (SELF.rep_1)) = 1;
  WR2: SIZEOF (['PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
       'SHAPE_REPRESENTATION'] *
       TYPEOF (SELF.rep_2)) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\representation_relationship_with_transformation || 
       SELF\usage_view_connection_zone_terminal_shape_relationship))) = 0;
  WR4: SELF\representation_relationship.rep_1 <> 
       SELF\representation_relationship.rep_2;
END_ENTITY; 

RULE part_feature_constraint FOR
  (shape_aspect, product_definition, shape_aspect_relationship);
LOCAL
pass : BOOLEAN := TRUE;
name_bag : BAG OF STRING := [];
sa : BAG OF shape_aspect := [];
pd : BAG OF product_definition := QUERY ( pd <* product_definition |
       pd.frame_of_reference\application_context_element.name
       = 'physical design usage');
END_LOCAL;
 REPEAT i := 1 to SIZEOF (pd) by 1;
name_bag := [];
sa := QUERY ( sa <* shape_aspect | (
(sa.of_shape\property_definition.definition = pd[i]) AND
(sa.product_definitional) AND
(NOT (sa\shape_aspect.description = 'connection zone'))
));
  REPEAT j := 1 to SIZEOF (sa) by 1;
   IF (NOT pass) THEN ESCAPE; END_IF;
 IF sa[j]\shape_aspect.name in name_bag THEN pass := FALSE;
 ELSE
  name_bag := name_bag + sa[j]\shape_aspect.name;
 END_IF;
  END_REPEAT;
 END_REPEAT;
WHERE
 WR1: pass;
 WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
      (sar\shape_aspect_relationship.name = 'precedent feature') AND
      (sar.related_shape_aspect = sar.relating_shape_aspect))) = 0;
 WR3: SIZEOF(QUERY(sa <* shape_aspect | 
      ((sa\shape_aspect.description = 'part group feature') OR
      (sa\shape_aspect.description = 'part generic feature') OR
      (sa\shape_aspect.description = 'polarity indication feature'))
      AND (SIZEOF(QUERY(sar <* USEDIN(sa,
     'PHYSICAL_UNIT_USAGE_VIEW_MIM.' + 
     'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'precedent feature')
      ) > 1))) = 0;
 WR4: SIZEOF(QUERY(sa <* shape_aspect |
      ((sa\shape_aspect.description = 'interconnect module edge segment surface') OR
      (sa\shape_aspect.description = 'interconnect module cavity surface') OR
      (sa\shape_aspect.description = 'interconnect module cutout surface') OR
      (sa\shape_aspect.description = 'interconnect module edge surface') OR
      (sa\shape_aspect.description = 'interconnect module primary surface') OR
      (sa\shape_aspect.description = 'interconnect module secondary surface') OR
      (sa\shape_aspect.description = 'interconnect module surface feature'))
      AND (SIZEOF(QUERY(sar <* USEDIN(sa,
     'PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
     'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
      sar\shape_aspect_relationship.name = 'precedent feature')
      ) > 0))) = 0;
END_RULE;

FUNCTION is_assembly_module_design ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'assembly module') AND
   (pd.frame_of_reference\application_context_element.name = 'physical design'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_assembly_module_usage ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'assembly module') AND
   (pd.frame_of_reference\application_context_element.name = 'physical design usage'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_interconnect_module_design ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'interconnect module') AND
   (pd.frame_of_reference\application_context_element.name = 'physical design'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_laminate_component ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF (pd\product_definition.description = 'laminate component') THEN
    RETURN (TRUE);
ELSE
  IF ('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'PRINTED_COMPONENT' IN TYPEOF(pd)) THEN
    RETURN (TRUE);
  END_IF;
END_IF;
RETURN (pass);
END_FUNCTION;

FUNCTION is_ee_product_definition ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF (NOT(is_laminate_component(pd)) AND 
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'COMPONENT_DEFINITION' IN TYPEOF(pd))) AND 
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'STRATUM' IN TYPEOF(pd))) AND 
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'ASSEMBLY_GROUP_COMPONENT_DEFINITION_PLACEMENT_LINK' IN TYPEOF(pd))) AND
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'BUS_STRUCTURAL_DEFINITION' IN TYPEOF(pd))) AND
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'COMPONENT_FUNCTIONAL_UNIT' IN TYPEOF(pd))) AND
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'LINEAR_ARRAY_COMPONENT_DEFINITION_LINK' IN TYPEOF(pd))) AND
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'NETWORK_NODE_DEFINITION' IN TYPEOF(pd))) AND
   (NOT('PHYSICAL_UNIT_USAGE_VIEW_MIM.' +
  'PRINTED_PART_TEMPLATE_MATERIAL' IN TYPEOF(pd)))
   ) 
THEN
    RETURN (TRUE);
ELSE
    RETURN (FALSE);
END_IF;
END_FUNCTION;

RULE promissory_usage_relationship_constraint FOR 
( promissory_usage_occurrence );
WHERE
  WR1: SIZEOF(QUERY(puo <* promissory_usage_occurrence |
       ('PHYSICAL_UNIT_USAGE_VIEW_MIM.'
       + 'PHYSICAL_UNIT' IN TYPEOF (puo.relating_product_definition))
       AND (puo.relating_product_definition.frame_of_reference.name
       = 'physical design'))) = 0;
  WR2: SIZEOF(QUERY(puo <* promissory_usage_occurrence |
       SIZEOF(USEDIN(puo,
       'PHYSICAL_UNIT_USAGE_VIEW_MIM.'
       + 'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')
       ) = 0)) = 0;
END_RULE;

RULE promissory_usage_relationship_unique_constraint FOR
 ( promissory_usage_occurrence );
LOCAL
  pu_bag : BAG OF physical_unit := [];
  puo_bag : BAG OF promissory_usage_occurrence;
  pass : BOOLEAN := TRUE;
  comp_bag : BAG OF physical_unit;
END_LOCAL;

REPEAT i := 1 to SIZEOF(promissory_usage_occurrence) by 1;
  IF EXISTS( promissory_usage_occurrence[i].relating_product_definition ) 
                                                      THEN
    IF( (('PHYSICAL_UNIT_USAGE_VIEW_MIM.' + 
'PHYSICAL_UNIT') IN
TYPEOF(promissory_usage_occurrence[i].relating_product_definition)) AND (
promissory_usage_occurrence[i].relating_product_definition.
frame_of_reference.name =
'physical design') ) THEN
      IF( NOT( promissory_usage_occurrence[i].
                                relating_product_definition IN pu_bag ) ) 
                                                                THEN
        pu_bag := pu_bag + promissory_usage_occurrence[i].
                                             relating_product_definition;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pu_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  puo_bag := QUERY( puo <* promissory_usage_occurrence | 
      (puo.relating_product_definition :=: pu_bag[i]) );
  comp_bag := [];
  REPEAT j := 1 to SIZEOF(puo_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    IF ( ((
'PHYSICAL_UNIT_USAGE_VIEW_MIM.' + 
'PHYSICAL_UNIT') IN
TYPEOF(puo_bag[j].related_product_definition)) AND (
puo_bag[j].related_product_definition.frame_of_reference.name IN [
'physical design',
'physical design usage']) ) THEN
      IF EXISTS( puo_bag[j].related_product_definition ) THEN
        IF ( puo_bag[j].related_product_definition IN comp_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          comp_bag := comp_bag + puo_bag[j].related_product_definition;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

FUNCTION is_interconnect_module_usage ( pd : product_definition) : BOOLEAN; 
LOCAL
  pass : BOOLEAN := FALSE;
END_LOCAL;
IF NOT(EXISTS(pd\product_definition.name)) THEN RETURN(FALSE); END_IF;
IF ((pd\product_definition.name = 'interconnect module') AND
   (pd.frame_of_reference\application_context_element.name = 'physical design usage'))
THEN
    RETURN (TRUE);
END_IF;
RETURN (pass);
END_FUNCTION;

RULE product_definition_requires_date_or_date_and_time FOR
  (product_definition, applied_date_and_time_assignment,
   applied_date_assignment);
WHERE
  WR1: SIZEOF (QUERY (pd <* product_definition | NOT 
       (NOT(is_ee_product_definition(pd)) OR 
       ((SIZEOF (QUERY (adata <* applied_date_and_time_assignment |
       pd IN adata.items )) = 1 ) OR
       (SIZEOF (QUERY (ada <* applied_date_assignment |
       pd IN ada.items )) = 1 )))
       )) = 0;
END_RULE; -- product_definition_requires_date_or_date_and_time

RULE product_definition_requires_person_organization FOR
  (product_definition,
  applied_person_and_organization_assignment,
  applied_organization_assignment);
WHERE
  WR1: SIZEOF (QUERY (pd <* product_definition | NOT
       (NOT(is_ee_product_definition(pd)) OR
       ((SIZEOF (QUERY (apaoa <*
       applied_person_and_organization_assignment |
       pd IN apaoa.items )) = 1 ) OR
       (SIZEOF (QUERY (aoa <*
       applied_organization_assignment |
       pd IN aoa.items )) = 1 )))
       )) = 0;
END_RULE; -- product_definition_requires_person_organization

END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\planned_characteristic_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/04/04 10:25:57 liutkus Exp $
   ISO TC184/SC4/WG12 N3544 - ISO/CD-TS 10303-1733 Planned characteristic - EXPRESS MIM
*)


SCHEMA Planned_characteristic_mim;
	USE FROM Product_rule_mim;	-- ISO/TS 10303-1739
	USE FROM Requirement_assignment_mim;	-- ISO/TS 10303-1233
	
	USE FROM Representation_schema(representation_relationship_with_transformation);
	
ENTITY evaluated_characteristic
  SUBTYPE OF (representation, representation_relationship);
UNIQUE
  UR1: SELF\representation_relationship.rep_1, SELF\representation_relationship.rep_2;
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\representation_relationship_with_transformation || 
       SELF\evaluated_characteristic))) = 0;
  WR2: SELF\representation_relationship.rep_1 <> 
       SELF\representation_relationship.rep_2;
  WR3: SELF\representation_relationship.name = '';
  WR4: SELF\representation.name = '';
  WR5: SELF\representation_relationship.rep_1.name = 'planned characteristic';
END_ENTITY; 

ENTITY evaluation_product_definition
 SUBTYPE OF (product_definition);
END_ENTITY;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\plib_class_reference_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.1 2005/02/04 07:18:09 liutkus Exp $
 ISO TC184/SC4/WG12 N3240 - ISO/TS 10303-1291 Plib class reference - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2289
*) 


SCHEMA Plib_class_reference_mim;

USE FROM External_class_mim;    -- ISO/TS 10303-1275

USE FROM External_item_identification_assignment_mim;    -- ISO/TS 10303-1128

USE FROM external_reference_schema   -- ISO 10303-41
  (external_source,
   pre_defined_item); 

USE FROM Person_organization_assignment_mim;    -- ISO/TS 10303-1013


TYPE plib_class_identification_item = SELECT BASED_ON external_identification_item WITH 
   (externally_defined_class);
END_TYPE; 

TYPE plib_class_organization_item = SELECT BASED_ON organization_item WITH 
   (class);
END_TYPE; 

ENTITY known_source
  SUBTYPE OF (external_source, pre_defined_item);
END_ENTITY;

END_SCHEMA;  -- Plib_class_reference_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\pre_defined_datum_2d_symbol_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/04/04 10:25:58 liutkus Exp $
   ISO TC184/SC4/WG12 N3550 - ISO/CD-TS 10303-1735 Pre defined datum 2d symbol - EXPRESS MIM
*)


SCHEMA Pre_defined_datum_2d_symbol_mim;
	USE FROM Extended_geometric_tolerance_mim;	-- ISO/TS 10303-1666
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\pre_defined_datum_3d_symbol_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/04/04 10:26:04 liutkus Exp $
   ISO TC184/SC4/WG12 N3556 - ISO/CD-TS 10303-1736 Pre defined datum 3d symbol - EXPRESS MIM
*)


SCHEMA Pre_defined_datum_3d_symbol_mim;
	USE FROM Extended_geometric_tolerance_mim;	-- ISO/TS 10303-1666
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\pre_defined_datum_symbol_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.9 2005/04/04 10:30:58 liutkus Exp $
   ISO TC184/SC4/WG12 N3553 - ISO/CD-TS 10303-1734 Pre defined datum symbol - EXPRESS MIM
*)


SCHEMA Pre_defined_datum_symbol_mim;
	USE FROM Pre_defined_datum_2d_symbol_mim;	-- ISO/TS 10303-1735
	USE FROM Pre_defined_datum_3d_symbol_mim;	-- ISO/TS 10303-1736

SUBTYPE_CONSTRAINT pdds_shape_definition_3d_intersection_subtypes FOR shape_definition_3d_intersection;         
  (ONEOF (pre_defined_parallel_datum_axis_symbol_3d_2d_relationship,
          pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship,
          pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship));
END_SUBTYPE_CONSTRAINT;        
	
ENTITY pre_defined_parallel_datum_axis_symbol_3d_2d_relationship
  SUBTYPE OF (shape_definition_3d_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\shape_definition_3d_intersection || 
       SELF\pre_defined_parallel_datum_axis_symbol_3d_2d_relationship))) = 0;
END_ENTITY; 

ENTITY pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship
  SUBTYPE OF (shape_definition_3d_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\shape_definition_3d_intersection || 
       SELF\pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship))) = 0;
END_ENTITY; 

ENTITY pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship
  SUBTYPE OF (shape_definition_3d_intersection);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\representation ||
       SELF\representation_relationship || 
       SELF\shape_representation_relationship || 
       SELF\shape_definition_3d_intersection || 
       SELF\pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship))) = 0;
END_ENTITY; 
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\pre_defined_product_data_management_specialisations_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.2 2005/02/10 11:45:17 liutkus Exp $
   N - ISO/CD-TS - 10303- pre_defined_product_data_management_specialisations - EXPRESS MIM
*)

SCHEMA Pre_defined_product_data_management_specialisations_mim;

USE FROM Activity_mim; -- ISO/TS 10303-1047
USE FROM Approval_mim; -- ISO/TS 10303-1012
USE FROM Date_time_assignment_mim; -- ISO/TS 10303-1014
USE FROM Person_organization_assignment_mim; -- ISO/TS 10303-1013
USE FROM Security_classification_mim; -- ISO/TS 10303-1015
USE FROM Work_request_mim; -- ISO/TS 10303-1042


END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\printed_physical_layout_template_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.12 2005/04/04 10:25:54 liutkus Exp $
   ISO TC184/SC4/WG12 N3583 - ISO/CD-TS 10303-1737 Printed physical layout template - EXPRESS MIM
*)


SCHEMA Printed_physical_layout_template_mim;
	USE FROM Extended_geometric_tolerance_mim;	-- ISO/TS 10303-1666
	USE FROM Fabrication_technology_mim;	-- ISO/TS 10303-1670
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740

TYPE pplt_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
     (printed_part_template_terminal);
END_TYPE;
	
ENTITY printed_connector_template_terminal_relationship
 SUBTYPE OF (shape_aspect, shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.relating_shape_aspect,
       SELF\shape_aspect_relationship.related_shape_aspect;
WHERE
  WR1: SIZEOF ( QUERY( sar <* USEDIN ( SELF, 
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
        (( sar\shape_aspect_relationship.name = 'connector') AND
          (sar.relating_shape_aspect\shape_aspect.description = 
              'printed connector template'))
        )) = 1;
  WR2: (('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN TYPEOF 
       (SELF\shape_aspect_relationship.relating_shape_aspect)) AND
       (SELF\shape_aspect_relationship.relating_shape_aspect\shape_aspect.description 
        = 'interface terminal'));
  WR3: (('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN 
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect)) AND
       (SELF\shape_aspect_relationship.related_shape_aspect\shape_aspect.description 
        = 'join terminal'));
  WR4: SELF\shape_aspect_relationship.relating_shape_aspect :<>:
       SELF\shape_aspect_relationship.related_shape_aspect;
END_ENTITY;

ENTITY printed_part_cross_section_template_terminal
  SUBTYPE OF (printed_part_template_terminal);
WHERE
(* invalid csa
  WR1: 
       SIZEOF (QUERY (am <* QUERY (pdr <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\shape_aspect_relationship.name = 'cross section definition') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN
       TYPEOF (am.relating_product_definition)) AND
       (am.relating_product_definition\shape_aspect.description = 
       'printed part cross section template'))) = 1;
*)
  WR2: SIZEOF (QUERY (ga <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       (('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL_CONNECTION_ZONE_CATEGORY' IN
       TYPEOF (ga.assigned_group)) AND 
       (ga.assigned_group.name IN  
                       ['area edge segment', 'curve edge segment']))
        )) = 1;
  WR3: SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) <= 1;
  WR4: SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) <= 1;
  WR5: SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) <= 1;
  WR6: SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) <= 1;
  WR7: NOT((SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to right of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to left of terminal')
       ) |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
       
  WR8: NOT((SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to top of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to left of terminal')
       ) |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
  WR9: NOT((SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to left of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to bottom of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to left of terminal')
       ) |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
 WR10: NOT((SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to right of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to top of terminal')
       ) |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
 WR11: NOT((SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to right of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to right of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to bottom of terminal')
       ) |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
 WR12: NOT((SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to top of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1) AND
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'material to bottom of terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 1)) 
   OR
       (SIZEOF (QUERY (am <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       (sar\shape_aspect_relationship.name = 'material to top of terminal') OR
       (sar\shape_aspect_relationship.name = 'material to bottom of terminal')
       ) |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL_LINK' IN
       TYPEOF (am.relating_shape_aspect))
       )) = 2);
END_ENTITY;

ENTITY printed_part_template_connected_terminals_definition
  SUBTYPE OF (shape_aspect);
UNIQUE
  UR1: SELF\shape_aspect.name;
WHERE
  WR1: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       ('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF (mct.related_shape_aspect)) AND
       (mct.related_shape_aspect\shape_aspect.description IN 
       ['interface terminal', 'join terminal']))) >= 2;
END_ENTITY;

ENTITY printed_part_template_link
  SUBTYPE OF (stratum_technology_link,product_definition_relationship);
WHERE
  WR1: SELF\product_definition_relationship.related_product_definition :<>:
       SELF\product_definition_relationship.relating_product_definition;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\property_definition_relationship ||
       SELF\printed_part_template_link || SELF\property_definition ||
       SELF\stratum_technology_link || SELF\product_definition_relationship)) = 0;
  WR3: 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN 
    TYPEOF(SELF\product_definition_relationship.related_product_definition);
  WR4: 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PART_TEMPLATE_DEFINITION' IN 
    TYPEOF(SELF\product_definition_relationship.relating_product_definition);
  WR5: SELF\product_definition_relationship.name = '';
  WR6: SELF\product_definition_relationship.description = '';
  WR7: SELF\product_definition_relationship.related_product_definition.description =
       'printed part template';
  WR8: SELF\product_definition_relationship.relating_product_definition.description =
       'printed part template';
END_ENTITY;

ENTITY printed_part_template_material
 SUBTYPE OF (product_definition);
WHERE
  WR1: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       SIZEOF (QUERY (tu <* QUERY (pdr <* USEDIN (pd,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'technology usage') |
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'STRATUM_TECHNOLOGY' IN 
       TYPEOF (tu.relating_property_definition.definition))) = 1)) = 1;
  WR2: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sr_pdr <* QUERY (pdr <* USEDIN (pd,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'REPRESENTATION' IN 
       TYPEOF (pdr.used_representation)) |
       ((sr_pdr.used_representation\representation.name = 
                'physical characteristics representation')
       AND
       (SIZEOF (sr_pdr.used_representation.items) = 2 )
       AND 
      ( SIZEOF(QUERY (it <* sr_pdr.used_representation.items |
       it\representation_item.name IN ['maximum width', 
                                        'minimum width'])) = 2 ))
       )) = 1)))
       = 0;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\product_definition ||
       SELF\printed_part_template_material)) = 0;
 WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'top')))) <= 1))) = 0;
 WR5: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'bottom')))) <= 1))) = 0;
 WR6: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'left')))) <= 1))) = 0;
 WR7: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (sa <* USEDIN (pd,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT.OF_SHAPE') |
       (('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (sa)) AND (sa.description = 'right')))) <= 1))) = 0;
END_ENTITY;

ENTITY printed_part_template_material_link
  SUBTYPE OF (shape_aspect,shape_aspect_relationship);
UNIQUE
  UR1: SELF\shape_aspect_relationship.related_shape_aspect, 
       SELF\shape_aspect_relationship.relating_shape_aspect;
WHERE
  WR1: SELF\shape_aspect_relationship.related_shape_aspect :<>:
       SELF\shape_aspect_relationship.relating_shape_aspect;
  WR2: 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (SELF\shape_aspect_relationship.related_shape_aspect);
  WR3: 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY' IN
       TYPEOF (SELF\shape_aspect_relationship.relating_shape_aspect);
  WR4: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\shape_aspect_relationship ||
       SELF\printed_part_template_material_link)) = 0;
  WR5: SELF\shape_aspect.name = '';
  WR6: SELF\shape_aspect_relationship.name = '';
  WR7: SELF\shape_aspect_relationship.related_shape_aspect.of_shape :<>: 
       SELF\shape_aspect_relationship.relating_shape_aspect.of_shape;
  WR8: SELF\shape_aspect_relationship.relating_shape_aspect.description IN
       ['bottom', 'right'];
  WR9: SELF\shape_aspect_relationship.related_shape_aspect.description IN
       ['top', 'left'];
END_ENTITY; 

ENTITY printed_part_template_terminal
  SUPERTYPE OF (printed_part_cross_section_template_terminal)
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SELF\shape_aspect.description IN ['interface terminal', 'join terminal'];
  WR2: SIZEOF (QUERY (ga <* USEDIN (SELF, 
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT.ITEMS') |
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_TERMINAL_CONNECTION_ZONE_CATEGORY' IN
       TYPEOF (ga.assigned_group))) = 1;
  WR3: SIZEOF (QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
       sar.related_shape_aspect\shape_aspect.description = 
       'connection zone')) >= 1;
  WR4: SIZEOF (QUERY (pd <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION.DEFINITION') |
       NOT (SIZEOF (QUERY (pdr <* USEDIN (pd,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_REPRESENTATION' IN
       TYPEOF (pdr.used_representation))) >= 1))) = 0;
  WR5: SIZEOF ((SELF\shape_aspect.of_shape.definition\product_definition.description = 'printed part template')
       OR
       (SELF\shape_aspect.of_shape.definition\product_definition.description = 'printed connector template'))
        = 1;
  WR6: SIZEOF (QUERY (mct <* QUERY (sar <* USEDIN (SELF,
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') |
       sar\shape_aspect_relationship.name = 'member connected terminal') |
       'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION' IN
       TYPEOF (mct.relating_shape_aspect))) <= 1;
END_ENTITY;

ENTITY printed_part_template_terminal_connection_zone_category
   SUBTYPE OF (group);
WHERE
   WR1: SELF\group.name IN ['area edge segment','curve edge segment',
        'surface area','surface point'];
END_ENTITY;

ENTITY template_material_cross_section_boundary
  SUBTYPE OF (shape_aspect);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\shape_aspect ||
       SELF\template_material_cross_section_boundary)) = 0;
  WR2: 'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
       'PRINTED_PART_TEMPLATE_MATERIAL' IN TYPEOF 
       (SELF.of_shape\property_definition.definition);
  WR3: SELF\shape_aspect.description IN
       ['top', 'left', 'right', 'bottom'];
END_ENTITY;
(* invalid csa
RULE printed_connector_template_terminal_relationship_unique_constraint FOR
 ( printed_connector_template_terminal_relationship );
LOCAL
  ptd_bag : BAG OF part_template_definition := [];
  pcttr_bag : BAG OF printed_connector_template_terminal_relationship;
  sar_bag : BAG OF shape_aspect_relationship;
  pass1 : BOOLEAN := TRUE;
  jt_bag : BAG OF printed_part_template_terminal;
  pass2 : BOOLEAN := TRUE;
  it_bag : BAG OF printed_part_template_terminal;
END_LOCAL;

REPEAT i := 1 to 
        SIZEOF(printed_connector_template_terminal_relationship) by 1;
  sar_bag := QUERY( sar <* 
          USEDIN( printed_connector_template_terminal_relationship[i],
'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | 
  ((sar\shape_aspect_relationship.name = 'connector') AND
('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
'PART_TEMPLATE_DEFINITION' IN TYPEOF(sar.relating_shape_aspect)) AND
(sar.relating_shape_aspect\shape_aspect.description = 'printed connector template')) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].relating_shape_aspect ) THEN
      IF ( NOT ( sar_bag[j].relating_shape_aspect IN ptd_bag )) THEN
        ptd_bag := ptd_bag + sar_bag[j].relating_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(ptd_bag) by 1;
  IF ( NOT (pass1 OR pass2) ) THEN ESCAPE;
  END_IF;
  it_bag := [];
  jt_bag := [];
  sar_bag := QUERY( sar <* USEDIN( ptd_bag[i],
'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT' ) | 
  (sar\shape_aspect_relationship.name = 'connector') );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF ( NOT (pass1 OR pass2) ) THEN ESCAPE;
    END_IF;
    pcttr_bag := 
   QUERY( pcttr <* printed_connector_template_terminal_relationship |
(pcttr :=: sar_bag[j].related_shape_aspect) );
    REPEAT k := 1 to SIZEOF(pcttr_bag) by 1;
      IF ( NOT (pass1 OR pass2) ) THEN ESCAPE;
      END_IF;
      IF ( pass1 AND (
'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
'PRINTED_PART_TEMPLATE_TERMINAL' IN 
TYPEOF(pcttr_bag[k].relating_shape_aspect))
AND (pcttr_bag[k].relating_shape_aspect\shape_aspect.description = 'join terminal') )
                                                    THEN
        IF EXISTS( pcttr_bag[k].relating_shape_aspect ) THEN
          IF ( pcttr_bag[k].relating_shape_aspect IN jt_bag ) THEN
            pass1 := FALSE;
            ESCAPE;
          ELSE
            jt_bag := jt_bag + pcttr_bag[k].relating_shape_aspect;
          END_IF;
        END_IF;
      END_IF;
      IF ( pass2 AND (
'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' + 
'PRINTED_PART_TEMPLATE_TERMINAL' IN 
TYPEOF(pcttr_bag[k].related_shape_aspect))
AND (pcttr_bag[k].related_shape_aspect\shape_aspect.description = 'interface terminal') )
                                                      THEN
        IF EXISTS( pcttr_bag[k].related_shape_aspect ) THEN
          IF ( pcttr_bag[k].related_shape_aspect IN it_bag ) THEN
            pass2 := FALSE;
            ESCAPE;
          ELSE
            it_bag := it_bag + pcttr_bag[k].related_shape_aspect;
          END_IF;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass1;
  WR2: pass2;
END_RULE;
*)
RULE printed_part_template_terminal_relationship_constraint FOR 
( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'printed part template terminal relationship')
       AND NOT('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.'
       + 'PRINTED_PART_TEMPLATE_TERMINAL' IN 
        TYPEOF(sar.related_shape_aspect)
       ))) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'printed part template terminal relationship')
       AND NOT('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.'
       + 'PRINTED_PART_TEMPLATE_TERMINAL' IN 
       TYPEOF(sar.relating_shape_aspect)
       ))) = 0;
END_RULE;

RULE functional_usage_view_to_printed_part_template_terminal_assignment_constraint
FOR ( shape_aspect_relationship );
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'functional terminal allocation')
       AND NOT(('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.'
       + 'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' IN
       TYPEOF(sar.relating_shape_aspect)) AND
       (sar.relating_shape_aspect\shape_aspect.description = 'scalar terminal'))
       )) = 0;
  WR2: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'functional terminal allocation')
       AND NOT(('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.'
       + 'PRINTED_PART_TEMPLATE_TERMINAL' IN
       TYPEOF(sar.related_shape_aspect)) AND
       ((sar.related_shape_aspect\shape_aspect.description = 'interface terminal')
       OR (sar.related_shape_aspect\shape_aspect.description = 'join terminal')))
       )) = 0;
END_RULE;

RULE functional_usage_view_to_printed_part_template_terminal_assignment_unique_constraint
FOR ( shape_aspect_relationship );
LOCAL
  fuvtpptta : BAG OF shape_aspect_relationship := 
             QUERY( r <* shape_aspect_relationship |
(r\shape_aspect_relationship.name = 'functional terminal allocation'));
  futd_bag : BAG OF functional_unit_terminal_definition := [];
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  pptt_bag : BAG OF printed_part_template_terminal;
END_LOCAL;

REPEAT i := 1 to SIZEOF(fuvtpptta) by 1;
  IF EXISTS( fuvtpptta[i].relating_shape_aspect ) THEN
    IF ( fuvtpptta[i].relating_shape_aspect\shape_aspect.description = 
                                   'scalar terminal' ) THEN
      IF ( NOT ( fuvtpptta[i].relating_shape_aspect IN futd_bag ) ) THEN
        futd_bag := futd_bag + fuvtpptta[i].relating_shape_aspect;
      END_IF;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(futd_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pptt_bag := [];
  sar_bag := QUERY( sar <* fuvtpptta |
((sar.relating_shape_aspect :=: futd_bag[i]) AND
(sar.related_shape_aspect\shape_aspect.description IN ['interface terminal',
'join terminal']) AND
('PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.' +
'PRINTED_PART_TEMPLATE_TERMINAL' IN TYPEOF(sar.related_shape_aspect))) );
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF ( sar_bag[j].related_shape_aspect IN pptt_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        pptt_bag := pptt_bag + sar_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
(* invalid csa
RULE printed_part_template_terminal_unique_constraint FOR
 ( printed_part_template_terminal );
LOCAL
  pptt : BAG OF printed_part_template_terminal := 
                QUERY( r <* printed_part_template_terminal |
(r\shape_aspect.description IN ['interface terminal','join terminal']) );
  name_bag : BAG OF STRING := [];
  sar_bag : BAG OF shape_aspect_relationship;
  sa_bag : BAG OF shape_aspect;
  pass : BOOLEAN := TRUE;
  ptd_bag : BAG OF part_template_definition;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pptt) by 1;
  IF EXISTS( pptt[i]\shape_aspect.name ) THEN
    IF ( NOT ( pptt[i]\shape_aspect.name IN name_bag )) THEN
      name_bag := name_bag + pptt[i]\shape_aspect.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ptd_bag := [];
  sa_bag := QUERY( sa <* pptt | (sa\shape_aspect.name = name_bag[i]) );
  REPEAT j := 1 to SIZEOF(sa_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    sar_bag := QUERY( sar <* USEDIN( sa_bag[j],
'PRINTED_PHYSICAL_LAYOUT_TEMPLATE_MIM.'
+ 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT') | 
((sar\shape_aspect_relationship.name = 'associated definition')
AND (sar.relating_shape_aspect\shape_aspect.description = 'printed part template')) );
    REPEAT k := 1 to SIZEOF(sar_bag) by 1;
      IF EXISTS( sar_bag[k].relating_shape_aspect ) THEN
        IF ( sar_bag[k].relating_shape_aspect IN ptd_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          ptd_bag := ptd_bag + sar_bag[k].relating_shape_aspect;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
*)
  FUNCTION printed_part_template_access_mechanisms(
    input : SET OF printed_part_template_link
  ) : SET OF printed_part_template_terminal;

    LOCAL
      pptt : SET OF printed_part_template_terminal := [];
    END_LOCAL;

    REPEAT i := 1 TO SIZEOF(input) BY 1;
      pptt := input[i].precedent_printed_part_template.raw_access_mechanisms + pptt;
      pptt := input[i].subsequent_printed_part_template.raw_access_mechanisms + pptt;
    END_REPEAT;
    RETURN(pptt);
  END_FUNCTION;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\process_property_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.13 2004/10/22 14:41:13 darla Exp $
 ISO TC184/SC4/WG12 N2126 - ISO/TS 10303-1040 Process property assignment - EXPRESS MIM
*)

SCHEMA Process_property_assignment_mim; 

USE FROM Activity_method_mim;    -- ISO/TS 10303-1049

USE FROM Activity_mim;    -- ISO/TS 10303-1047

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM Independent_property_mim;    -- ISO/TS 10303-1036

USE FROM process_property_representation_schema   -- ISO 10303-49
  (action_property_representation); 

USE FROM process_property_schema   -- ISO 10303-49
  (action_property,
   characterized_action_definition); 

USE FROM product_property_definition_schema   -- ISO 10303-41
  (derived_property_select,
   general_property_association); 


END_SCHEMA;  -- Process_property_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_categorization_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/10/29 16:40:18 thendrix Exp $
ISO TC184/SC4/WG12 N1100 - ISO/TS 10303-1016 Product categorization - EXPRESS MIM
*) 


SCHEMA Product_categorization_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (id_attribute,
   id_attribute_select); 

USE FROM product_definition_schema   -- ISO 10303-41
  (product_category,
   product_category_relationship); 


END_SCHEMA;  -- Product_categorization_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_concept_identification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.6 2004/10/22 14:44:26 darla Exp $
 ISO TC184/SC4/WG12 N1178 - ISO/TS 10303-1060 Product concept identification - EXPRESS MIM
*)
   
SCHEMA Product_concept_identification_mim;

USE FROM product_concept_schema -- ISO 10303-44
  (product_concept);
USE FROM application_context_schema -- ISO 10303-41
  (product_concept_context);

   
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_data_management_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2004/09/29 18:26:21 abf Exp $
   ISO TC184/SC4/WG3 N1487 - ISO/CD-TS 10303-1231 Product data management - EXPRESS MIM
*)

SCHEMA Product_data_management_mim;

USE FROM action_schema   -- ISO 10303-41
  (action,
   action_directive,
   action_method,
   action_relationship,
   action_request_solution,
   action_request_status,
   directed_action,
   executed_action,
   versioned_action_request); 

USE FROM Activity_method_mim;    -- ISO/TS 10303-1049

USE FROM Activity_mim;    -- ISO/TS 10303-1047

USE FROM application_context_schema   -- ISO 10303-41
  (application_context_relationship,
   application_protocol_definition,
   product_definition_context); 

USE FROM Approval_mim;    -- ISO/TS 10303-1012

USE FROM approval_schema   -- ISO 10303-41
  (approval,
   approval_person_organization,
   approval_relationship,
   approval_status); 

USE FROM Assembly_structure_mim;    -- ISO/TS 10303-1026

USE FROM basic_attribute_schema   -- ISO 10303-41
  (object_role); 

USE FROM Certification_mim;    -- ISO/TS 10303-1044

USE FROM certification_schema   -- ISO 10303-41
  (certification,
   certification_type); 

USE FROM Class_mim;    -- ISO/TS 10303-1070

USE FROM Classification_assignment_mim;    -- ISO/TS 10303-1114

USE FROM classification_schema   -- ISO/DIS 10303-54
  (class,
   complete_membership_select); 

USE FROM Configuration_effectivity_mim;    -- ISO/TS 10303-1058

USE FROM Configuration_item_mim;    -- ISO/TS 10303-1056

USE FROM configuration_management_schema   -- ISO 10303-44
  (configuration_effectivity,
   configuration_item); 

USE FROM Contract_mim;    -- ISO/TS 10303-1062

USE FROM contract_schema   -- ISO 10303-41
  (contract); 

USE FROM Date_time_assignment_mim;    -- ISO/TS 10303-1014

USE FROM Date_time_mim;    -- ISO/TS 10303-1010

USE FROM date_time_schema   -- ISO 10303-41
  (calendar_date,
   date_and_time,
   date_role,
   date_time_role,
   event_occurrence); 

USE FROM Document_assignment_mim;    -- ISO/TS 10303-1122

USE FROM Document_management_mim;    -- ISO/TS 10303-1290

USE FROM document_schema   -- ISO 10303-41
  (document_relationship); 

USE FROM Document_structure_mim;    -- ISO/TS 10303-1124

USE FROM Effectivity_application_mim;    -- ISO/TS 10303-1059

USE FROM Effectivity_mim;    -- ISO/TS 10303-1057

USE FROM effectivity_schema   -- ISO 10303-41
  (effectivity); 

USE FROM Event_assignment_mim;    -- ISO/TS 10303-1364

USE FROM Event_mim;    -- ISO/TS 10303-1064

USE FROM External_class_mim;    -- ISO/TS 10303-1275

USE FROM External_item_identification_assignment_mim;    -- ISO/TS 10303-1128

USE FROM external_reference_schema   -- ISO 10303-41
  (external_source); 

USE FROM File_identification_mim;    -- ISO/TS 10303-1127

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM group_schema   -- ISO 10303-41
  (group); 

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021

USE FROM Incomplete_data_reference_mechanism_mim;    -- ISO/TS 10303-1349

USE FROM Independent_property_mim;    -- ISO/TS 10303-1036

USE FROM Independent_property_representation_mim;    -- ISO/TS 10303-1038

USE FROM Management_resource_information_mim;    -- ISO/TS 10303-1288

USE FROM management_resources_schema   -- ISO 10303-41
  (date_and_time_assignment,
   date_assignment,
   document_usage_role,
   identification_assignment,
   identification_role,
   organizational_project_role); 

USE FROM Measure_representation_mim;    -- ISO/TS 10303-1118

USE FROM measure_schema   -- ISO 10303-41
  (context_dependent_unit,
   conversion_based_unit,
   derived_unit,
   measure_with_unit,
   named_unit); 

USE FROM Multi_linguism_mim;    -- ISO/TS 10303-1105

USE FROM Name_assignment_mim;    -- ISO/TS 10303-1340

USE FROM Person_organization_assignment_mim;    -- ISO/TS 10303-1013

USE FROM Person_organization_mim;    -- ISO/TS 10303-1011

USE FROM person_organization_schema   -- ISO 10303-41
  (address,
   organization,
   organization_relationship,
   organizational_address,
   organizational_project,
   organizational_project_relationship,
   person,
   person_and_organization); 

USE FROM Process_property_assignment_mim;    -- ISO/TS 10303-1040

USE FROM process_property_schema   -- ISO 10303-49
  (action_property); 

USE FROM Product_categorization_mim;    -- ISO/TS 10303-1016

USE FROM Product_concept_identification_mim;    -- ISO/TS 10303-1060

USE FROM product_concept_schema   -- ISO 10303-44
  (product_concept); 

USE FROM product_definition_schema   -- ISO 10303-41
  (product,
   product_category,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_formation_with_specified_source,
   product_definition_relationship); 

USE FROM Product_identification_mim;    -- ISO/TS 10303-1017

USE FROM product_property_definition_schema   -- ISO 10303-41
  (general_property,
   general_property_relationship,
   property_definition,
   shape_aspect,
   shape_aspect_relationship); 

USE FROM product_property_representation_schema   -- ISO 10303-41
  (property_definition_representation); 

USE FROM Product_replacement_mim;    -- ISO/TS 10303-1046

USE FROM Product_structure_mim;    -- ISO/TS 10303-1134

USE FROM product_structure_schema   -- ISO 10303-44
  (alternate_product_relationship,
   assembly_component_usage,
   assembly_component_usage_substitute); 

USE FROM Product_version_mim;    -- ISO/TS 10303-1018

USE FROM Product_version_relationship_mim;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_mim;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_properties_mim;    -- ISO/TS 10303-1034

USE FROM Product_view_definition_relationship_mim;    -- ISO/TS 10303-1041

USE FROM Project_mim;    -- ISO/TS 10303-1061

USE FROM Property_assignment_mim;    -- ISO/TS 10303-1030

USE FROM qualified_measure_schema   -- ISO 10303-45
  (descriptive_representation_item,
   measure_representation_item); 

USE FROM representation_schema   -- ISO 10303-43
  (founded_item,
   representation,
   representation_context,
   representation_item,
   uncertainty_measure_with_unit); 

USE FROM Security_classification_mim;    -- ISO/TS 10303-1015

USE FROM security_classification_schema   -- ISO 10303-41
  (security_classification); 

USE FROM Shape_property_assignment_mim;    -- ISO/TS 10303-1032

USE FROM Single_part_representation_mim;    -- ISO/TS 10303-1133

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054

USE FROM Work_order_mim;    -- ISO/TS 10303-1043

USE FROM Work_request_mim;    -- ISO/TS 10303-1042


TYPE pdm_action_items = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON action_items WITH 
   (configuration_effectivity, 
    product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE pdm_action_request_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON action_request_item WITH 
   (product_definition, 
    product_definition_formation, 
    product_definition_relationship, 
    property_definition);
END_TYPE; 

TYPE pdm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH 
   (action, 
    applied_action_assignment, 
    configuration_effectivity, 
    versioned_action_request);
END_TYPE; 

TYPE pdm_attribute_language_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON attribute_language_item WITH 
   (applied_document_reference, 
    applied_document_usage_constraint_assignment, 
    applied_external_identification_assignment, 
    applied_organizational_project_assignment, 
    approval, 
    approval_relationship, 
    approval_status, 
    certification, 
    certification_type, 
    contract, 
    date_role, 
    date_time_role, 
    document_relationship, 
    document_usage_role, 
    external_source, 
    identification_role, 
    object_role, 
    organization_relationship, 
    organizational_project, 
    organizational_project_relationship, 
    organizational_project_role, 
    person_and_organization, 
    product, 
    product_category, 
    product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE pdm_certification_item = EXTENSIBLE SELECT BASED_ON certification_item WITH 
   (product_definition_formation_relationship);
END_TYPE; 

TYPE pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
   (action, 
    action_directive, 
    action_method, 
    action_property, 
    action_relationship, 
    action_request_solution, 
    action_request_status, 
    address, 
    alternate_product_relationship, 
    applied_action_assignment, 
    applied_action_request_assignment, 
    applied_approval_assignment, 
    applied_certification_assignment, 
    applied_contract_assignment, 
    applied_date_and_time_assignment, 
    applied_date_assignment, 
    applied_document_reference, 
    applied_document_usage_constraint_assignment, 
    applied_effectivity_assignment, 
    applied_event_occurrence_assignment, 
    applied_external_identification_assignment, 
    applied_identification_assignment, 
    applied_organization_assignment, 
    applied_organizational_project_assignment, 
    applied_person_and_organization_assignment, 
    applied_security_classification_assignment, 
    approval, 
    approval_person_organization, 
    approval_relationship, 
    approval_status, 
    assembly_component_usage_substitute, 
    calendar_date, 
    certification, 
    class, 
    configuration_item, 
    context_dependent_unit, 
    contract, 
    conversion_based_unit, 
    date_and_time, 
    date_and_time_assignment, 
    date_assignment, 
    derived_unit, 
    descriptive_representation_item, 
    directed_action, 
    document_file, 
    document_relationship, 
    effectivity, 
    event_occurrence, 
    executed_action, 
    general_property, 
    general_property_relationship, 
    group, 
    identification_assignment, 
    language, 
    measure_representation_item, 
    measure_with_unit, 
    multi_language_attribute_assignment, 
    named_unit, 
    organization, 
    organization_relationship, 
    organizational_address, 
    organizational_project, 
    organizational_project_relationship, 
    person, 
    person_and_organization_address, 
    product, 
    product_category, 
    product_concept, 
    product_definition, 
    product_definition_context, 
    product_definition_formation, 
    product_definition_formation_relationship, 
    product_definition_relationship, 
    property_definition, 
    property_definition_representation, 
    representation, 
    representation_context, 
    representation_item, 
    security_classification, 
    uncertainty_measure_with_unit, 
    versioned_action_request);
END_TYPE; 

TYPE pdm_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_and_time_item WITH 
   (action, 
    applied_action_assignment, 
    executed_action, 
    versioned_action_request);
END_TYPE; 

TYPE pdm_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_item WITH 
   (action, 
    applied_action_assignment, 
    versioned_action_request);
END_TYPE; 

TYPE pdm_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
   (action_method, 
    executed_action, 
    product_definition_formation_relationship, 
    shape_aspect, 
    shape_aspect_relationship, 
    versioned_action_request);
END_TYPE; 

TYPE pdm_effectivity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON effectivity_item WITH 
   (product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE pdm_event_occurrence_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON event_occurrence_item WITH 
   (organizational_project);
END_TYPE; 

TYPE pdm_external_class_name_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON name_item WITH 
   (assembly_component_usage, 
    external_class_library);
END_TYPE; 

TYPE pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (shape_aspect_relationship);
END_TYPE; 

TYPE pdm_multi_language_attribute_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON multi_language_attribute_item WITH 
   (applied_document_reference, 
    applied_document_usage_constraint_assignment, 
    applied_external_identification_assignment, 
    applied_organizational_project_assignment, 
    approval, 
    approval_relationship, 
    approval_status, 
    certification, 
    certification_type, 
    contract, 
    date_role, 
    date_time_role, 
    document_relationship, 
    document_usage_role, 
    external_source, 
    identification_role, 
    object_role, 
    organization_relationship, 
    organizational_project, 
    organizational_project_relationship, 
    organizational_project_role, 
    person_and_organization, 
    product, 
    product_category, 
    product_definition, 
    product_definition_formation, 
    product_definition_relationship);
END_TYPE; 

TYPE pdm_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_item WITH 
   (action, 
    applied_action_assignment, 
    approval, 
    configuration_item, 
    contract, 
    executed_action, 
    security_classification, 
    versioned_action_request);
END_TYPE; 

TYPE pdm_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON person_and_organization_item WITH 
   (action, 
    applied_action_assignment, 
    approval, 
    configuration_item, 
    contract, 
    executed_action, 
    security_classification, 
    versioned_action_request);
END_TYPE; 

TYPE pdm_project_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON project_item WITH 
   (executed_action, 
    product_concept);
END_TYPE; 

TYPE pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH 
   (assembly_component_usage);
END_TYPE; 

END_SCHEMA;  -- Product_data_management_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_identification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.8 2004/10/28 17:12:52 darla Exp $
 ISO TC184/SC4/WG12 N2926 - ISO/TS 10303-1017 Product identification - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2525
*) 


SCHEMA Product_identification_mim; 

USE FROM Product_categorization_mim;    -- ISO/TS 10303-1016

USE FROM product_definition_schema   -- ISO 10303-41
  (product,
   product_related_product_category); 


END_SCHEMA;  -- Product_identification_mim






(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_identification_extension_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/03/25 14:35:27 budreckytej Exp $
   ISO TC184/SC4/WG12 N3586 - ISO/CD-TS 10303-1738 Product identification extension - EXPRESS MIM
*)


SCHEMA Product_identification_extension_mim;
	USE FROM External_item_identification_assignment_mim;	-- ISO/TS 10303-1128
	USE FROM Product_view_definition_mim;	-- ISO/TS 10303-1019
	
	USE FROM External_reference_schema
		(externally_defined_item,
		external_source);
	
TYPE pie_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
     (externally_defined_product_definition);
END_TYPE; 

ENTITY externally_defined_product_definition
 SUPERTYPE OF (library_defined_product_definition)
 SUBTYPE OF (product_definition, externally_defined_item);
END_ENTITY;

ENTITY library_defined_product_definition
 SUBTYPE OF (externally_defined_product_definition);
DERIVE
  library : external_source := SELF\externally_defined_item.source;
END_ENTITY;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_replacement_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/10/22 15:07:34 darla Exp $
 ISO TC184/SC4/WG12 N1145 - ISO/TS 10303-1046 Product replacement - EXPRESS MIM
*)
    
SCHEMA Product_replacement_mim;

USE FROM Assembly_structure_mim; -- ISO 10303-1026
USE FROM Product_identification_mim; -- ISO 10303-1017

USE FROM product_structure_schema -- ISO 10303-44
  (alternate_product_relationship,
   assembly_component_usage_substitute);
END_SCHEMA;






(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_rule_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.22 2005/04/04 10:32:45 liutkus Exp $
   ISO TC184/SC4/WG12 N3589 - ISO/CD-TS 10303-1739 Product rule - EXPRESS MIM
*)


SCHEMA Product_rule_mim;
	USE FROM Model_parameter_mim;	-- ISO/TS 10303-1703
	USE FROM Specification_document_mim;    --  ISO/CD-TS 10303-1747
	USE FROM Software_mim;	-- ISO/TS 10303-1746
	USE FROM Product_identification_mim; -- ISO/TS 10303-1017
	
	USE FROM Date_time_assignment_mim; -- ISO/TS 10303-1014
	USE FROM Activity_mim; -- ISO/TS 10303-1047
	
	USE FROM Product_definition_schema(product_definition_relationship);

TYPE pr_name_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON name_item WITH 
     (rule_set);
END_TYPE; 

TYPE pr_action_items = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON action_items WITH 
     (product_definition_formation);
END_TYPE; 

TYPE pr_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_and_time_item WITH 
     (rule_action);
END_TYPE; 

TYPE pr_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
   (rule_function_definition,
   representation);
END_TYPE; 

TYPE rule_superseded_item = SELECT
     (product_definition_formation);
END_TYPE;

ENTITY rule_action
  SUBTYPE OF (action);
WHERE
  WR1: SIZEOF (QUERY (aaa <* QUERY (aa <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' + 
       'ACTION_ASSIGNMENT.ASSIGNED_ACTION') |
       'PRODUCT_RULE_MIM.' +
       'APPLIED_ACTION_ASSIGNMENT' IN
       TYPEOF (aa)) |
       SIZEOF (QUERY (it <* aaa.items |
       (('PRODUCT_RULE_MIM.' +
       'PRODUCT_DEFINITION_FORMATION' IN 
       TYPEOF (it))
AND (it\product_definition_formation.description = 'rule version'))
)) = 1)) = 1;
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'participant date and time')) +
       SIZEOF (QUERY (ada <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'participant date')) = 1;
  WR3: (NOT (SELF\action.name = 'rule justification')) OR
       (SIZEOF (QUERY (ja <* QUERY (ar <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'ACTION_RELATIONSHIP.RELATED_ACTION') |
       ar\action_relationship.name = 'justified action') |
       'PRODUCT_RULE_MIM.' +
       'RULE_ACTION' IN
       TYPEOF (ja.relating_action))) = 1);
  WR4: (NOT (SELF\action.name = 'rule modification')) OR
       (SIZEOF (QUERY (mr <* QUERY (ar <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'ACTION_RELATIONSHIP.RELATED_ACTION') |
       ar\action_relationship.name = 'modification rationale') |
       ('PRODUCT_RULE_MIM.' +
       'RULE_ACTION' IN
       TYPEOF (mr.relating_action)) AND
       (mr.relating_action\action.name = 'rule change request'))) = 1);
END_ENTITY;

ENTITY rule_boolean_function_definition 
 SUBTYPE OF (rule_function_definition);
 WHERE
  WR1: SIZEOF (QUERY (it <* SELF.items |
       'PRODUCT_RULE_MIM.' +
       'MODEL_PARAMETER' IN
       TYPEOF (it))) >= 1;
END_ENTITY;

ENTITY rule_complex_clause 
 SUBTYPE OF (representation);
UNIQUE
 UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       'PRODUCT_RULE_MIM.' +
       'RULE_SIMPLE_CLAUSE' IN TYPEOF (rr.rep_1))) >= 1;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_complex_clause)) = 0;
END_ENTITY;

ENTITY rule_conclusion_definition 
 SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
        'PRODUCT_RULE_MIM.' +
        'RULE_DEFINITION' IN TYPEOF
       (pdr.definition.definition))) = 1;
  WR2: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
        'PRODUCT_RULE_MIM.' +
        'RULE_SIMPLE_CLAUSE' IN TYPEOF 
       (rr\representation_relationship.rep_1))) >= 1;

  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_conclusion_definition)) = 0;
END_ENTITY;

ENTITY rule_definition 
 SUBTYPE OF (rule_software_definition);
WHERE
  WR1: SELF\product_definition.formation.description = 'rule version';
END_ENTITY;

ENTITY rule_function_definition 
 SUPERTYPE OF (rule_boolean_function_definition)
 SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (it <* SELF.items |
       'PRODUCT_RULE_MIM.' +
       'MODEL_PARAMETER' IN
       TYPEOF (it))) >= 1;
  WR2: SIZEOF(QUERY(adf <* USEDIN(SELF,
       'PRODUCT_RULE_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       (adf\document_reference.assigned_document.kind\document_type.product_data_type
       = 'reference document') AND
       (SIZEOF(['PRODUCT_RULE_MIM.' +
       'EE_SPECIFICATION', 
       'PRODUCT_RULE_MIM.' +
       'DOCUMENT'] * 
        TYPEOF(adf\document_reference.assigned_document))>=1))) = 1;
  WR3: SIZEOF(QUERY(adf <* USEDIN(SELF,
       'PRODUCT_RULE_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       (adf\document_reference.assigned_document.kind\document_type.product_data_type =
       'source code') AND
       ('PRODUCT_RULE_MIM.' +
       'EE_SPECIFICATION' IN 
        TYPEOF(adf\document_reference.assigned_document)))) = 1;
END_ENTITY;

ENTITY rule_function_domain_parameter 
 SUBTYPE OF (model_parameter);
WHERE
  WR1: SIZEOF (QUERY (cri <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'REPRESENTATION.ITEMS') |
       ('PRODUCT_RULE_MIM.' +
       'RULE_FUNCTION_DEFINITION' IN TYPEOF(cri)) 
       )) = 1;
END_ENTITY;

ENTITY rule_function_range_parameter 
 SUBTYPE OF (model_parameter);
WHERE
  WR1: SIZEOF (QUERY (cri <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'REPRESENTATION.ITEMS') |
       ('PRODUCT_RULE_MIM.' +
       'RULE_FUNCTION_DEFINITION' IN TYPEOF(cri)) 
       )) = 1;
END_ENTITY;

ENTITY rule_general_clause 
 SUBTYPE OF (representation);
UNIQUE
 UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       'PRODUCT_RULE_MIM.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION' IN
       TYPEOF (rr.rep_2))) >= 1;
  WR2: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       'PRODUCT_RULE_MIM.' +
       'RULE_FUNCTION_DEFINITION' IN TYPEOF (rr.rep_1))) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_general_clause)) = 0;
END_ENTITY;

ENTITY rule_premise_definition 
 SUBTYPE OF (representation);
WHERE
  WR1: SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
        'PRODUCT_RULE_MIM.' +
        'RULE_DEFINITION' IN TYPEOF
       (pdr.definition.definition))) = 1;

  WR2: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
        'PRODUCT_RULE_MIM.' +
        'RULE_COMPLEX_CLAUSE' IN TYPEOF 
       (rr\representation_relationship.rep_1))) >= 1;

  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_premise_definition)) = 0;
END_ENTITY;

ENTITY rule_superseded_assignment
 SUBTYPE OF (action_assignment);
     items : SET [1:?] OF rule_superseded_item;
END_ENTITY;

ENTITY rule_set 
 SUBTYPE OF (rule_software_definition);
END_ENTITY;

ENTITY rule_software_definition 
 SUBTYPE OF (product_definition);
END_ENTITY;

ENTITY rule_set_group
SUBTYPE OF (rule_software_definition);
WHERE
  WR1: SIZEOF (QUERY (rsge <* QUERY (gr <* USEDIN (SELF, 
       'PRODUCT_RULE_MIM.' + 
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       gr\product_definition_relationship.name = 'rule set group element') |
       'PRODUCT_RULE_MIM.' +
       'RULE_SET' IN
       TYPEOF (rsge.related_product_definition))) >= 1;
END_ENTITY;

ENTITY rule_simple_clause 
 SUBTYPE OF (representation);
UNIQUE
 UR1: SELF\representation.name;
WHERE
  WR1: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_1') |
       'PRODUCT_RULE_MIM.' +
       'PARAMETER_ASSIGNMENT_REPRESENTATION' IN
       TYPEOF (rr.rep_2))) >= 1;
  WR2: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'PRODUCT_RULE_MIM.' + 
       'REPRESENTATION_RELATIONSHIP.REP_2') | 
       'PRODUCT_RULE_MIM.' +
       'RULE_BOOLEAN_FUNCTION_DEFINITION' IN TYPEOF (rr.rep_1))) = 1;
  WR3: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\representation ||
       SELF\rule_simple_clause)) = 0;
END_ENTITY;

  ENTITY rule_supersedence
    SUBTYPE OF (rule_action);
  END_ENTITY;

RULE rule_action_unique_constraint FOR
 ( rule_action );
LOCAL
  adta : BAG OF applied_date_and_time_assignment;
  adta_bag : BAG OF applied_date_and_time_assignment := [];
  ra_bag : BAG OF rule_action;
  aaa_bag : BAG OF applied_action_assignment;
  pass : BOOLEAN := TRUE;
  rd_bag : BAG OF product_definition_formation;
END_LOCAL;

REPEAT i := 1 to SIZEOF(rule_action) by 1;
  adta := USEDIN( rule_action[i], 
'PRODUCT_RULE_MIM.' +
'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS' );
  REPEAT j := 1 to SIZEOF(adta) by 1;
    IF EXISTS( adta[j] ) THEN
      IF( NOT( adta[j] IN adta_bag ) ) THEN
        adta_bag := adta_bag + adta[j];
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;

REPEAT i := 1 to SIZEOF(adta_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  ra_bag := QUERY( r <* rule_action | (r IN adta_bag[i].items) );
  rd_bag := [];
  REPEAT j := 1 to SIZEOF(ra_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    aaa_bag := QUERY( aa <* USEDIN( ra_bag[j], 
'PRODUCT_RULE_MIM.' +
'ACTION_ASSIGNMENT.ASSIGNED_ACTION' ) | 
(('PRODUCT_RULE_MIM.' +
'APPLIED_ACTION_ASSIGNMENT') IN TYPEOF(aa) ) );
    REPEAT k := 1 to SIZEOF(aaa_bag) by 1;
      IF ( NOT pass ) THEN ESCAPE;
      END_IF;
      REPEAT l := 1 to SIZEOF(aaa_bag[k].items) by 1;
        IF EXISTS( aaa_bag[k].items[l] ) THEN
          IF ( ('PRODUCT_RULE_MIM.' +
'PRODUCT_DEFINITION_FORMATION'  IN TYPEOF(aaa_bag[k].items[l])) AND
(aaa_bag[k].items[l]\product_definition_formation.description = 'rule version') ) THEN
            IF ( aaa_bag[k].items[l] IN rd_bag ) THEN
              pass := FALSE;
              ESCAPE;
            ELSE
              rd_bag := rd_bag + aaa_bag[k].items[l];
            END_IF;
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE rule_conclusion_definition_unique_constraint FOR 
(rule_conclusion_definition,
representation,representation_relationship);
LOCAL
r : BAG of representation := 
           QUERY (r <* representation | r\representation.name = 
                                             'rule definition');
rr : BAG OF representation_relationship := [];
pass : BOOLEAN := TRUE;
count : INTEGER := 0;
name_bag : BAG OF string := [];
END_LOCAL;
  REPEAT i := 1 to SIZEOF (r) by 1;
   count := 0;
   name_bag := [];
   IF NOT pass THEN ESCAPE;
   END_IF;
   rr := USEDIN(r[i],
 'PRODUCT_RULE_MIM.' +
        'REPRESENTATION_RELATIONSHIP.REP_1');
   REPEAT j := 1 to SIZEOF (rr) by 1;
    IF 'PRODUCT_RULE_MIM.' +
       'RULE_CONCLUSION_DEFINITION' IN
       TYPEOF (rr[j].rep_2)
    THEN
      IF EXISTS( rr[j].rep_2\representation.name ) THEN
        IF rr[j].rep_2\representation.name IN name_bag
        THEN
         pass := FALSE;
        ELSE
         name_bag := name_bag + rr[j].rep_2\representation.name;
        END_IF;
      END_IF;
    END_IF;
   END_REPEAT;
  END_REPEAT;
WHERE
 WR1: pass;
END_RULE;

RULE rule_function_unique_constraint FOR
 ( rule_function_definition );
LOCAL
  name_bag : BAG OF STRING := [];
  rfd_bag : BAG OF rule_function_definition;
  adr_bag : BAG OF applied_document_reference;
  pass : BOOLEAN := TRUE;
  doc_bag : BAG OF document;
END_LOCAL;

REPEAT i := 1 to SIZEOF(rule_function_definition) by 1;
  IF EXISTS( rule_function_definition[i]\representation.name ) THEN
    IF( NOT( rule_function_definition[i]\representation.name IN name_bag ) ) THEN
      name_bag := name_bag + rule_function_definition[i]\representation.name;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(name_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  doc_bag := [];
  rfd_bag := QUERY( am <* rule_function_definition | 
               (am\representation.name = name_bag[i]) );
  REPEAT j := 1 to SIZEOF(rfd_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    adr_bag := QUERY( adr <* USEDIN( rfd_bag[j],
'PRODUCT_RULE_MIM.'
+ 'APPLIED_DOCUMENT_REFERENCE.ITEMS' ) |
(adr.assigned_document.kind\document_type.product_data_type = 'reference document') );
    REPEAT k := 1 to SIZEOF(adr_bag) by 1;
      IF EXISTS( adr_bag[k].assigned_document ) THEN
        IF ( adr_bag[k].assigned_document IN doc_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          doc_bag := doc_bag + adr_bag[k].assigned_document;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE rule_premise_definition_unique_constraint FOR (rule_premise_definition,
representation,representation_relationship);
local
rr : BAG OF representation_relationship := [];
rpd : BAG OF rule_premise_definition := [];
pass : BOOLEAN := TRUE;
count : INTEGER := 0;
END_LOCAL;
  REPEAT i := 1 to SIZEOF (rule_premise_definition) by 1;
   count := 0;
   IF NOT pass THEN ESCAPE;
   END_IF;
   rr :=
USEDIN(rule_premise_definition[i],'REPRESENTATION_SCHEMA.REPRESENTATION_RELATIONSHIP.REP_2');
    REPEAT j := 1 to SIZEOF (rr) by 1;
     IF NOT pass THEN ESCAPE;
     END_IF;
     IF (rr[j]\representation_relationship.rep_1\representation.description IN
              ['rule definition']) THEN
     count := count + 1;
     END_IF;
     IF count = 2 THEN pass := FALSE;
     END_IF;
    END_REPEAT;
  END_REPEAT;
WHERE
 WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_structure_mim.exp
   ------------------------------------------------------------
*)

(*
ISO TC184/SC4/WG12 N2547 - ISO/TS 10303-1134 Product structure - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1671
*) 


SCHEMA Product_structure_mim;

USE FROM Assembly_structure_mim;    -- ISO/TS 10303-1026

USE FROM Contextual_shape_positioning_mim;    -- ISO/TS 10303-1027

USE FROM Part_and_version_identification_mim;    -- ISO/TS 10303-1022

USE FROM Part_definition_relationship_mim;    -- ISO/TS 10303-1055

USE FROM Product_replacement_mim;    -- ISO/TS 10303-1046

USE FROM Product_version_relationship_mim;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_relationship_mim;    -- ISO/TS 10303-1041

USE FROM Property_assignment_mim;    -- ISO/TS 10303-1030

USE FROM Single_part_representation_mim;    -- ISO/TS 10303-1133

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set); 


END_SCHEMA;  -- Product_structure_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_version_mim.exp
   ------------------------------------------------------------
*)

(* 
 $Id: mim.exp,v 1.6 2004/01/13 10:15:26 robbod Exp $
 ISO TC184/SC4/WG12 N2528 - ISO/TS 10303-1018 Product version - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N1106
*) 


SCHEMA Product_version_mim; 

USE FROM Product_identification_mim;    -- ISO/TS 10303-1017

USE FROM product_definition_schema   -- ISO 10303-41
  (product_definition_formation); 


END_SCHEMA;  -- Product_version_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_version_relationship_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/10/22 15:11:16 darla Exp $
 ISO TC184/SC4/WG12 N1130 - ISO/TS 10303-1020 Product version relationship - EXPRESS MIM
*)
   
SCHEMA Product_version_relationship_mim;

USE FROM Product_version_mim; 	--ISO 10303-1018

USE FROM product_definition_schema 	-- ISO 10303-41
  (product_definition_formation_relationship);
   
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_view_definition_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.15 2004/10/29 17:58:04 thendrix Exp $
 ISO TC184/SC4/WG12 N2928 - ISO/TS 10303-1019 Product view definition - EXPRESS MIM
*) 


SCHEMA Product_view_definition_mim;

USE FROM application_context_schema   -- ISO 10303-41
  (product_definition_context); 

USE FROM basic_attribute_schema   -- ISO 10303-41
  (name_attribute,
   name_attribute_select); 

USE FROM product_definition_schema   -- ISO 10303-41
  (product_definition,
   product_definition_context_association); 

USE FROM Product_version_mim;    -- ISO/TS 10303-1018

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set); 


END_SCHEMA;  -- Product_view_definition_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_view_definition_properties_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.13 2004/11/15 21:22:47 thendrix Exp $
ISO TC184/SC4/WG12 N3228 - ISO/TS 10303-1034 Product view definition properties - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N2127
*) 


SCHEMA Product_view_definition_properties_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (id_attribute,
   id_attribute_select); 

USE FROM product_property_definition_schema   -- ISO 10303-41
  (characterized_product_definition); 

USE FROM Product_view_definition_mim;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_relationship_mim;    -- ISO/TS 10303-1041

USE FROM Property_assignment_mim;    -- ISO/TS 10303-1030


END_SCHEMA;  -- Product_view_definition_properties_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\product_view_definition_relationship_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.5 2004/10/22 15:18:56 darla Exp $
 ISO TC184/SC4/WG12 N1142 - ISO/TS 10303-1041 Product view definition relationship - EXPRESS MIM
*)

SCHEMA Product_view_definition_relationship_mim;

USE FROM Product_view_definition_mim; -- ISO 10303-1019
USE FROM product_definition_schema -- ISO 10303-41
  (product_definition_relationship);

USE FROM product_structure_schema -- ISO 10303-44
  (product_definition_usage);
END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\project_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.1 2005/02/04 07:18:09 liutkus Exp $
 ISO TC184/SC4/WG12 N2112 - ISO/TS 10303-1061 Project - EXPRESS MIM
*) 


SCHEMA Project_mim; 

USE FROM Date_time_assignment_mim;    -- ISO/TS 10303-1014

USE FROM Date_time_mim;    -- ISO/TS 10303-1010

USE FROM Event_assignment_mim;    -- ISO/TS 10303-1364

USE FROM Event_mim;    -- ISO/TS 10303-1064

USE FROM management_resources_schema   -- ISO 10303-41
  (organizational_project_assignment,
   organizational_project_role); 

USE FROM Person_organization_mim;    -- ISO/TS 10303-1011

USE FROM person_organization_schema   -- ISO 10303-41
  (organizational_project,
   organizational_project_relationship); 


TYPE project_as_date_and_time_item = SELECT BASED_ON date_and_time_item WITH 
   (organizational_project);
END_TYPE; 

TYPE project_as_date_item = SELECT BASED_ON date_item WITH 
   (organizational_project);
END_TYPE; 

TYPE project_event_occurrence_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON event_occurrence_item WITH 
   (organizational_project);
END_TYPE; 

TYPE project_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY applied_organizational_project_assignment
  SUBTYPE OF (organizational_project_assignment);
  items : SET[1:?] OF project_item;
END_ENTITY;

END_SCHEMA;  -- Project_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\promissory_usage_in_product_concept_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/03/30 07:56:13 budreckytej Exp $
   ISO TC184/SC4/WG12 N3683 - ISO/TS 10303-1758 Promissory usage in product concept - EXPRESS MIM
*)

SCHEMA Promissory_usage_in_product_concept_mim;

	USE FROM Configuration_item_mim;	-- ISO/TS 10303-1056
	USE FROM Security_classification_mim;	-- ISO/TS 10303-1015

TYPE puipc_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH 
     (promissory_usage_in_product_concept_relationship);
END_TYPE;

 ENTITY promissory_usage_in_product_concept_relationship
  SUBTYPE OF (configuration_item);
 END_ENTITY;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\property_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.13 2004/10/29 22:05:36 thendrix Exp $
ISO TC184/SC4/WG12 N2129 - ISO/TS 10303-1030 Property assignment - EXPRESS MIM
*) 


SCHEMA Property_assignment_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (id_attribute,
   id_attribute_select); 

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM Independent_property_mim;    -- ISO/TS 10303-1036

USE FROM product_property_definition_schema   -- ISO 10303-41
  (general_property_association,
   property_definition); 

USE FROM product_property_representation_schema   -- ISO 10303-41
  (property_definition_representation); 


END_SCHEMA;  -- Property_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\requirement_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.11 2004/11/19 21:37:39 robbod Exp $
 ISO TC184/SC4/WG12 N3125 - ISO/TS 10303-1233 Requirement assignment - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2346
*) 


SCHEMA Requirement_assignment_mim;

USE FROM group_schema   -- ISO 10303-41
  (group); 

USE FROM management_resources_schema   -- ISO 10303-41
  (group_assignment); 

USE FROM product_definition_schema   -- ISO 10303-41
  (product_definition); 

USE FROM product_property_definition_schema   -- ISO 10303-41
  (characterized_object); 

USE FROM Property_assignment_mim;    -- ISO/TS 10303-1030

USE FROM Requirement_view_definition_mim;    -- ISO/TS 10303-1141


TYPE requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE requirement_source_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY assigned_requirement
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_assignment;
  items : SET[1:1] OF product_definition;
END_ENTITY;

ENTITY requirement_assigned_object
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_assignment;
  items : SET[1:1] OF requirement_assigned_item;
END_ENTITY;

ENTITY requirement_assignment
  SUBTYPE OF (characterized_object, group);
END_ENTITY;

ENTITY requirement_source
  SUBTYPE OF (group);
END_ENTITY;

ENTITY source_for_requirement
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_source;
  items : SET[1:1] OF requirement_source_item;
END_ENTITY;

ENTITY sourced_requirement
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_source;
  items : SET[1:1] OF product_definition;
END_ENTITY;

END_SCHEMA;  -- Requirement_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\requirement_decomposition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.11 2005/04/04 10:35:34 liutkus Exp $
   ISO TC184/SC4/WG12 N3592 - ISO/CD-TS 10303-1740 Requirement decomposition - EXPRESS MIM
*)


SCHEMA Requirement_decomposition_mim;

	USE FROM Conductivity_material_aspects_mim;	-- ISO/TS 10303-1756
	USE FROM Elemental_geometric_shape_mim;	-- ISO/TS 10303-1004
	USE FROM Functional_specification_mim;	-- ISO/TS 10303-1679
	USE FROM Product_rule_mim;	-- ISO/TS 10303-1739
	
	USE FROM Material_property_definition_schema(property_definition_relationship);	

REFERENCE FROM support_resource_schema   -- ISO 10303-41
  (bag_to_set); 
	

TYPE rd_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
     (requirements_property);
END_TYPE; 

TYPE rd_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
     (requirements_property);
END_TYPE;
	
ENTITY material_electrical_conductivity_category
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.name IN ['conductive', 'non conductive', 'resistive',  
       'semi conductive'];
END_ENTITY;

ENTITY requirements_property
  SUBTYPE OF (property_definition);
WHERE
  WR1: SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'requirements property composition')) <= 1;
  WR2: SIZEOF (QUERY (pdr <* USEDIN (SELF,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
       SIZEOF (QUERY (it <* pdr.used_representation.items |
       ('REQUIREMENT_DECOMPOSITION_MIM.' +
       'DESCRIPTIVE_REPRESENTATION_ITEM' IN
       TYPEOF (it)) AND
       (it\representation_item.name = 'requirements description'))) = 1)) <= 1;
  WR3: SIZEOF (QUERY (dr <* USEDIN (SELF,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'EE_SPECIFICATION' IN 
       TYPEOF (dr.assigned_document))) >= 1;
  WR4: NOT(EXISTS(SELF\property_definition.description)) OR
       (NOT (SELF\property_definition.description IN ['constraint', 
        'part based constraint']) OR
       (SIZEOF (QUERY (dc <* QUERY (pdr <* USEDIN (SELF,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'design constraint') |
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'RULE_DEFINITION' IN 
       TYPEOF (dc.relating_property_definition.definition))) = 1));
  WR5: NOT(EXISTS(SELF\property_definition.description)) OR
       (NOT (SELF\property_definition.description = 
          'part based constraint') OR
       (SIZEOF (QUERY (cp <* QUERY (pdr <* USEDIN (SELF,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'constraining part') |
       ('REQUIREMENT_DECOMPOSITION_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP' IN
       TYPEOF (cp.relating_property_definition.definition)) AND
       (cp.relating_property_definition.definition\product_definition_relationship.name = 
       'constraining part') AND
   (cp.relating_property_definition.definition.related_product_definition.
       frame_of_reference.name = 'design requirement'))) = 1));
  WR6: NOT(EXISTS(SELF\property_definition.description)) OR
       (NOT (SELF\property_definition.description = 
         'interface requirement') OR
       (SIZEOF (QUERY (itnha <* QUERY (pdr <* USEDIN (SELF,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       pdr\property_definition_relationship.name = 'interface to next higher assembly') |
       ('REQUIREMENT_DECOMPOSITION_MIM.' +
       'PRODUCT_DEFINITION' IN
       TYPEOF (itnha.relating_property_definition.definition)) AND
    (itnha.relating_property_definition.definition.frame_of_reference.name
       = 'design requirement') AND
       (SIZEOF (QUERY (hai <* QUERY (pdr <* 
       USEDIN (itnha.relating_property_definition.definition,
       'REQUIREMENT_DECOMPOSITION_MIM.' + 
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'higher assembly interface') |
       SIZEOF (QUERY (pdr <* USEDIN (hai,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'SPECIFIED_HIGHER_USAGE_OCCURRENCE'  
       IN TYPEOF (pdr))) = 1)) = 1))) = 1));
END_ENTITY;

(** It is declared as used for ARM concept Requirement_allocation, which is now substituted by requirement_assignment.
Need to analyse more on this *)
ENTITY requirement_allocation_group
  SUBTYPE OF (group, property_definition_relationship);
WHERE
  WR1: (SIZEOF (QUERY (aga <* QUERY (ga <* USEDIN (SELF, 
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (['REQUIREMENT_DECOMPOSITION_MIM.' +
       'PRODUCT',
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PRODUCT_DEFINITION_FORMATION',
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'CONFIGURATION_ITEM'] * TYPEOF (aga.items)) = 1))) = 1);

  WR2: 'REQUIREMENT_DECOMPOSITION_MIM.' +
       'REQUIREMENTS_PROPERTY' IN TYPEOF 
   (SELF\property_definition_relationship.relating_property_definition);

  WR3: NOT(SELF\property_definition_relationship.related_property_definition.description = 'test requirement') OR
       (SIZEOF (QUERY (aga <* QUERY (ga <* USEDIN (SELF,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'GROUP_ASSIGNMENT.ASSIGNED_GROUP') |
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'APPLIED_GROUP_ASSIGNMENT' IN
       TYPEOF (ga)) |
       (SIZEOF (['REQUIREMENT_DECOMPOSITION_MIM.' +
       'PROPERTY_DEFINITION_REPRESENTATION'] * TYPEOF (aga.items)) = 1))) >= 1);
END_ENTITY;

ENTITY requirement_definition
 SUBTYPE OF (product_definition);
WHERE
  WR1: (NOT ('REQUIREMENT_DECOMPOSITION_MIM.' +
       'PRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS' IN 
       TYPEOF (SELF))) OR
       (SIZEOF (QUERY (docs <* 
       SELF\product_definition_with_associated_documents.
        documentation_ids |
       docs.kind\document_type.product_data_type = 'CAD filename')) <= 1);
  WR2: SIZEOF (QUERY (adta <* USEDIN (SELF, 
       'REQUIREMENT_DECOMPOSITION_MIM.' + 
       'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |
       adta.role\date_time_role.name = 'creation date')) + 
       SIZEOF (QUERY (ada <* USEDIN (SELF, 
       'REQUIREMENT_DECOMPOSITION_MIM.' + 
       'APPLIED_DATE_ASSIGNMENT.ITEMS') |
       ada.role\date_role.name = 'creation date')) = 1;
  WR3: SIZEOF (USEDIN (SELF, 
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')) = 1;
  WR4: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'creator')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'creator')) >= 1;
  WR5: SIZEOF (USEDIN (SELF, 
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')) = 1;
  WR6: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\product_definition ||
       SELF\requirement_definition))) = 0;
  WR7: SIZEOF (QUERY (prpc <* USEDIN (SELF.formation.of_product,
       'REQUIREMENT_DECOMPOSITION_MIM.' +
       'PRODUCT_RELATED_PRODUCT_CATEGORY.' +
       'PRODUCTS') |
       prpc\product_category.name = 'requirements model')) >= 1;
END_ENTITY;

RULE operational_requirement_occurrence_relationship_constraint FOR
( property_definition_relationship );
WHERE
  WR1: SIZEOF(QUERY(pdr <* property_definition_relationship |
       ((pdr\property_definition_relationship.name = 'and operation')
        OR (pdr\property_definition_relationship.name = 'or operation'))
       AND NOT('REQUIREMENT_DECOMPOSITION_MIM.'
        + 'REQUIREMENTS_PROPERTY' IN 
                             TYPEOF(pdr.related_property_definition))
       )) = 0;
  WR2: SIZEOF(QUERY(pdr <* property_definition_relationship |
       ((pdr\property_definition_relationship.name = 'and operation')
        OR (pdr\property_definition_relationship.name = 'or operation'))
       AND NOT('REQUIREMENT_DECOMPOSITION_MIM.'
        + 'REQUIREMENTS_PROPERTY' IN 
                           TYPEOF(pdr.relating_property_definition))
       )) = 0;
END_RULE;

RULE requirements_property_constraint FOR 
           (product_definition,
            descriptive_representation_item,
            requirements_property);
LOCAL
ri : BAG OF descriptive_representation_item := 
         QUERY (dri <* descriptive_representation_item 
                              | dri\representation_item.name = 
                                          'requirements name');
pd : BAG OF product_definition:=
         QUERY(tpd <* product_definition
               | ('REQUIREMENT_DECOMPOSITION_MIM.' +
                  'APPLICATION_CONTEXT_ELEMENT' IN
                  TYPEOF(tpd.frame_of_reference)) AND
                  (tpd.frame_of_reference.name IN ['requirement',
                                                   'design requirement',
                                                   'assembly requirement'])
                  AND
                  (tpd.name = 'requirements model'));

r : BAG OF representation := [];
pdr : BAG OF property_definition_representation := [];
pass1 : BOOLEAN := TRUE;

rp : BAG OF property_definition := [];
pass2 : BOOLEAN := TRUE;

END_LOCAL;
  (* WR1 Test *)
  REPEAT i := 1 to SIZEOF (ri) by 1;
     r := [];
     pdr := [];
     r := (USEDIN(ri[i],
         'REQUIREMENT_DECOMPOSITION_MIM.' +
             'REPRESENTATION.ITEMS'));
     pass1 := (SIZEOF(r) = 1);
     IF (NOT pass1) THEN ESCAPE; END_IF;

     pdr := (USEDIN(r[1],
             'REQUIREMENT_DECOMPOSITION_MIM.' +
             'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'));
     pass1 := (SIZEOF(pdr) = 1);
     IF (NOT pass1) THEN ESCAPE; END_IF;

     pass1 := ('REQUIREMENT_DECOMPOSITION_MIM.' +
             'REQUIREMENTS_PROPERTY' IN TYPEOF(pdr[1].definition));
     IF (NOT pass1) THEN ESCAPE; END_IF;
  END_REPEAT;
  (* WR2 Test *)
  REPEAT i := 1 to SIZEOF (pd) by 1;
     rp := [];
     IF (NOT pass2) THEN ESCAPE; END_IF;
     rp := QUERY(rp <* USEDIN(pd[i],
             'REQUIREMENT_DECOMPOSITION_MIM.' +
             'PROPERTY_DEFINITION.DEFINITION') |
             'REQUIREMENT_DECOMPOSITION_MIM.' +
             'REQUIREMENTS_PROPERTY' IN TYPEOF(rp));
     pass2 := (SIZEOF(rp) = 1);
  END_REPEAT;
WHERE
 WR1: pass1;
 WR2: pass2;
END_RULE;

RULE requirements_property_unique_constraint FOR 
           (descriptive_representation_item,
            requirements_property);
LOCAL
desc_bag : BAG OF STRING := [];
pass1 : BOOLEAN := TRUE;
pdr : BAG OF property_definition_representation := [];
rep : BAG OF representation := [];
pd : BAG OF product_definition := [];

END_LOCAL;
  REPEAT i := 1 to SIZEOF (requirements_property) by 1;
     IF (NOT pass1) THEN ESCAPE; END_IF;
     IF ('REQUIREMENT_DECOMPOSITION_MIM.' +
         'PRODUCT_DEFINITION' IN TYPEOF(requirements_property[i].definition))
      THEN pd := pd + requirements_property[i].definition;
     END_IF;
  END_REPEAT;
  IF (instance_unique(pd) = FALSE ) THEN pass1 := FALSE; END_IF;
WHERE
 WR1: pass1;
END_RULE;

FUNCTION instance_unique 

      ( the_bag : BAG OF GENERIC : intype ) : BOOLEAN;

LOCAL

      the_set : SET OF GENERIC : intype := [];
      i : INTEGER ;
      pass : BOOLEAN := TRUE;
END_LOCAL ;

      IF SIZEOF (the_bag) > 0 THEN
                  the_set := bag_to_set(the_bag);
      END_IF ;
      IF NOT(SIZEOF(the_set) = SIZEOF(the_bag)) THEN
       pass := FALSE;
      END_IF;

      RETURN (pass);

END_FUNCTION ;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\requirement_identification_and_version_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.15 2004/11/19 21:37:39 robbod Exp $
 ISO TC184/SC4/WG12 N3128 - ISO/TS 10303-1140 Requirement identification and version - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2348
*) 


SCHEMA Requirement_identification_and_version_mim;

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021

USE FROM Management_resource_information_mim;    -- ISO/TS 10303-1288

USE FROM product_definition_schema   -- ISO 10303-41
  (product,
   product_definition_formation); 

USE FROM Product_identification_mim;    -- ISO/TS 10303-1017

USE FROM Product_version_mim;    -- ISO/TS 10303-1018

USE FROM Product_version_relationship_mim;    -- ISO/TS 10303-1020


TYPE requirement_identification_and_version_mri_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_identification_item WITH 
   (product, 
    product_definition_formation);
END_TYPE; 

END_SCHEMA;  -- Requirement_identification_and_version_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\requirement_view_definition_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.10 2004/11/19 21:37:40 robbod Exp $
 ISO TC184/SC4/WG12 N3134 - ISO/TS 10303-1141 Requirement view definition - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2355
*) 


SCHEMA Requirement_view_definition_mim;

USE FROM Identification_assignment_mim;    -- ISO/TS 10303-1021

USE FROM Product_version_mim;    -- ISO/TS 10303-1018

USE FROM Product_view_definition_mim;    -- ISO/TS 10303-1019

USE FROM Requirement_identification_and_version_mim;    -- ISO/TS 10303-1140


END_SCHEMA;  -- Requirement_view_definition_mim




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\requirement_view_definition_relationship_mim.exp
   ------------------------------------------------------------
*)

(* 
 $Id: mim.exp,v 1.7 2004/11/19 21:37:40 robbod Exp $
 ISO TC184/SC4/WG12 N3137 - ISO/TS 10303-1142 Requirement view definition relationship - EXPRESS MIM
 Supersedes ISO TC184/SC4/WG12 N2358
*) 


SCHEMA Requirement_view_definition_relationship_mim;

USE FROM Product_view_definition_relationship_mim;    -- ISO/TS 10303-1041

USE FROM Requirement_view_definition_mim;    -- ISO/TS 10303-1141


END_SCHEMA;  -- Requirement_view_definition_relationship_mim



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\security_classification_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.9 2004/10/22 15:22:41 darla Exp $
 ISO TC184/SC4/WG12 N1097 - ISO/TS 10303-1015 Security classification - EXPRESS MIM
*)

SCHEMA Security_classification_mim;

USE FROM security_classification_schema -- ISO 10303-41
  (security_classification,
   security_classification_level);
USE FROM management_resources_schema -- ISO 10303-41
  (security_classification_assignment);
  
TYPE security_classification_item = EXTENSIBLE SELECT; 
END_TYPE;

ENTITY applied_security_classification_assignment
  SUBTYPE OF (security_classification_assignment);
  items : SET [1:?] OF security_classification_item;
END_ENTITY;

END_SCHEMA;








(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\sequential_laminate_assembly_design_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 10:35:36 liutkus Exp $
   ISO TC184/SC4/WG12 N3595 - ISO/CD-TS 10303-1741 Sequential laminate assembly design - EXPRESS MIM
*)


SCHEMA Sequential_laminate_assembly_design_mim;
	USE FROM Assembly_module_with_interconnect_component_mim;	-- ISO/TS 10303-1643
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698
	
ENTITY interconnect_module_stratum_based_terminal
  SUBTYPE OF (interconnect_module_terminal);
END_ENTITY;

ENTITY sequential_laminate_passage_based_fabrication_joint
  SUBTYPE OF (shape_aspect);
END_ENTITY;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\shape_composition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.10 2005/02/04 16:11:22 budreckytej Exp $
   ISO TC184/SC4/WG12 N3598 - ISO/CD-TS 10303-1742 Shape composition - EXPRESS MIM
*)


SCHEMA Shape_composition_mim;
	USE FROM Shape_property_assignment_mim;	-- ISO/TS 10303-1032
	
	USE FROM Shape_aspect_definition_schema(composite_shape_aspect);
--	USE FROM Product_property_definition_schema;
	USE FROM Shape_dimension_schema (dimensional_location);
	
ENTITY composite_group_shape_aspect
  SUBTYPE OF (composite_shape_aspect);
END_ENTITY;

ENTITY composite_unit_shape_aspect
  SUBTYPE OF (composite_shape_aspect);
END_ENTITY;

RULE composite_shape_element_constraint FOR
  (composite_shape_aspect);
WHERE
  WR1: SIZEOF(QUERY(csa <* composite_shape_aspect |
        SIZEOF(QUERY(sar <* USEDIN(csa,
       'SHAPE_COMPOSITION_MIM.'
        + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT') |
        (sar\shape_aspect_relationship.name = 'composing')
        )) < 2)) = 0;
  WR2: SIZEOF(QUERY(csa <* composite_shape_aspect |
        NOT ((SIZEOF(TYPEOF(csa)) > 2) OR 
        (csa\shape_aspect.description <> '') OR 
        (csa\shape_aspect.name <> ''))
        )) = 0;
END_RULE;

RULE shape_element_composing_relationship_constraint FOR
  (shape_aspect_relationship);
WHERE
  WR1: SIZEOF(QUERY(sar <* shape_aspect_relationship |
       (sar\shape_aspect_relationship.name = 'composing') AND
       ('SHAPE_COMPOSITION_MIM.'
       + 'COMPOSITE_SHAPE_ASPECT' IN TYPEOF(sar.relating_shape_aspect))
       )) = 0;
END_RULE;

RULE shape_element_constituent_relationship_unique_constraint FOR
 ( shape_aspect_relationship );
LOCAL
  sar : BAG OF shape_aspect_relationship := 
QUERY( r <* shape_aspect_relationship | (r\shape_aspect_relationship.name IN [
'constituent', 'composing', 
'bare die terminal surface constituent relationship',
'interconnect module terminal surface constituent relationship',
'package terminal surface constituent relationship'] ) );
  sa_bag : BAG OF shape_aspect := [];
  sar_bag : BAG OF shape_aspect_relationship;
  pass : BOOLEAN := TRUE;
  rsa_bag : BAG OF shape_aspect;
END_LOCAL;

REPEAT i := 1 to SIZEOF(sar) by 1;
  IF EXISTS( sar[i].relating_shape_aspect ) THEN
    IF( NOT( sar[i].relating_shape_aspect IN sa_bag ) ) THEN
      sa_bag := sa_bag + sar[i].relating_shape_aspect;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(sa_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  sar_bag := QUERY( r <* sar | (r\shape_aspect_relationship.relating_shape_aspect :=: sa_bag[i]) );
  rsa_bag := [];
  REPEAT j := 1 to SIZEOF(sar_bag) by 1;
    IF EXISTS( sar_bag[j].related_shape_aspect ) THEN
      IF ( sar_bag[j].related_shape_aspect IN rsa_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        rsa_bag := rsa_bag + sar_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE shape_element_locating_relationship_unique_constraint FOR
 ( dimensional_location );
LOCAL
  sa_bag : BAG OF shape_aspect := [];
  dl_bag : BAG OF dimensional_location;
  pass : BOOLEAN := TRUE;
  rsa_bag : BAG OF shape_aspect;
END_LOCAL;

REPEAT i := 1 to SIZEOF(dimensional_location) by 1;
  IF EXISTS( dimensional_location[i].relating_shape_aspect ) THEN
    IF( NOT( dimensional_location[i].relating_shape_aspect IN sa_bag ) )
                                                              THEN
      sa_bag := sa_bag + dimensional_location[i].relating_shape_aspect;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(sa_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  dl_bag := QUERY( r <* dimensional_location | 
                    (r.relating_shape_aspect :=: sa_bag[i]) );
  rsa_bag := [];
  REPEAT j := 1 to SIZEOF(dl_bag) by 1;
    IF EXISTS( dl_bag[j].related_shape_aspect ) THEN
      IF ( dl_bag[j].related_shape_aspect IN rsa_bag ) THEN
        pass := FALSE;
        ESCAPE;
      ELSE
        rsa_bag := rsa_bag + dl_bag[j].related_shape_aspect;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;

RULE subtype_mandatory_composite_shape_aspect FOR
  (composite_shape_aspect);
WHERE  
  WR1: SIZEOF (QUERY (csa <* composite_shape_aspect |
       NOT (SIZEOF
       (['SHAPE_COMPOSITION_MIM.' +
       'COMPOSITE_GROUP_SHAPE_ASPECT',
       'SHAPE_COMPOSITION_MIM.' +
       'COMPOSITE_UNIT_SHAPE_ASPECT']
       * TYPEOF(csa)) = 1))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\shape_parameters_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/02/04 16:11:46 budreckytej Exp $
   ISO TC184/SC4/WG12 N3601 - ISO/CD-TS 10303-1743 Shape parameters - EXPRESS MIM
*)


SCHEMA Shape_parameters_mim;
	USE FROM External_item_identification_assignment_mim;	-- ISO/TS 10303-1128
	
	USE FROM Product_property_definition_schema(characterized_object);
	
ENTITY keepout_design_object_category
  SUBTYPE OF (characterized_object);
WHERE
  WR1: SELF\characterized_object.description IN 
       ['assembly module assembly component category',
        'component feature category',
        'assembly ee material category',
        'interconnect ee material category',
        'interconnect module assembly component category',
        'via category',
        'inter stratum feature category',
        'cutout category',
        'fill area category',
        'laminate component category',
        'stratum feature category'];
END_ENTITY;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\shape_property_assignment_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.12 2004/10/29 22:22:14 thendrix Exp $
ISO TC184/SC4/WG12 N1226 - ISO/TS 10303-1032 Shape property assignment - EXPRESS MIM
*) 


SCHEMA Shape_property_assignment_mim;

USE FROM basic_attribute_schema   -- ISO 10303-41
  (id_attribute); 

USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

USE FROM External_model_mim;    -- ISO/TS 10303-1033

USE FROM Foundation_representation_mim;    -- ISO/TS 10303-1006

USE FROM product_property_definition_schema   -- ISO 10303-41
  (characterized_object,
   product_definition_shape,
   shape_aspect,
   shape_aspect_relationship); 

USE FROM product_property_representation_schema   -- ISO 10303-41
  (shape_definition_representation); 

USE FROM Product_view_definition_mim;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_relationship_mim;    -- ISO/TS 10303-1041


END_SCHEMA;  -- Shape_property_assignment_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\shield_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 10:35:36 liutkus Exp $
   ISO TC184/SC4/WG12 N3604 - ISO/CD-TS 10303-1744 Shield - EXPRESS MIM
*)


SCHEMA Shield_mim;

	USE FROM Assembly_component_placement_requirements_mim;	-- ISO/TS 10303-1634
	USE FROM Layered_interconnect_module_with_printed_component_design_mim;	-- ISO/TS 10303-1700

ENTITY discrete_shield
  SUBTYPE OF (assembly_component);
WHERE
  WR1: SELF.frame_of_reference.name = 'physical occurrence';
  WR2: SIZEOF (QUERY (si <* QUERY (pdr <* USEDIN (SELF,
       'SHIELD_MIM.' +
       'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |
       pdr\product_definition_relationship.name = 'shielded item') |
       'SHIELD_MIM.' +
       'COMPONENT_DEFINITION' IN
       TYPEOF (si.relating_product_definition))) >= 1;
END_ENTITY;

ENTITY integral_shield
  SUBTYPE OF (assembly_component);
WHERE
  WR1: SIZEOF (QUERY(pdr <* USEDIN(SELF,
       'SHIELD_MIM.' +
       'PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION') |
       (('SHIELD_MIM.' +
       'COMPONENT_DEFINITION' IN TYPEOF(pdr.relating_property_definition))
       OR ('SHIELD_MIM.' +
    'COMPONENT_DEFINITION' IN TYPEOF(pdr.relating_property_definition)))
       AND (pdr\property_definition_relationship.name = 'shielded item'))) >=1;
END_ENTITY;

ENTITY routed_shield
  SUBTYPE OF (routed_printed_component);
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\signal_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/04 10:35:34 liutkus Exp $
   ISO TC184/SC4/WG12 N3607 - ISO/CD-TS 10303-1745 Signal - EXPRESS MIM
*)


SCHEMA Signal_mim;
	USE FROM Characteristic_mim;	-- ISO/TS 10303-1654
	
	USE FROM Product_property_definition_schema
		(characterized_object,
		property_definition);
	USE FROM Material_property_definition_schema(property_definition_relationship);
	USE FROM Group_schema(group);
	USE FROM Document_schema(document_usage_constraint);
	
TYPE s_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH 
     (composite_signal_property_relationship,
      property_definition,
      signal);
END_TYPE; 
	
ENTITY composite_signal_property_relationship
  SUBTYPE OF (property_definition, property_definition_relationship);
WHERE
  WR1: SELF\property_definition_relationship.related_property_definition.definition :<>:
       SELF\property_definition_relationship.relating_property_definition.definition;
  WR2: SIZEOF(TYPEOF(SELF) - TYPEOF(SELF\property_definition_relationship ||
       SELF\composite_signal_property_relationship || SELF\property_definition)) = 0;
  WR3: SELF\property_definition_relationship.related_property_definition.name =
       'signal property';
  WR4: SELF\property_definition_relationship.relating_property_definition.name =
       'composite signal property';
  WR5: SELF\property_definition.name = '';
  WR6: SELF\property_definition.description = '';
  WR7: SELF\property_definition_relationship.name = '';
  WR8: SELF\property_definition_relationship.description = '';
  WR9: ('SIGNAL_MIM.' +
       'CHARACTERIZED_OBJECT' IN TYPEOF(SELF\property_definition.definition)) AND
       (SELF\property_definition.definition.description = 'aggregate operation');
 WR10: 'SIGNAL_MIM.' +
       'EXTERNAL_DEFINITION' IN TYPEOF(SELF\property_definition.definition);
END_ENTITY;

ENTITY signal
  SUBTYPE OF (characterized_object);
WHERE
  WR1: SIZEOF (QUERY (aca <* USEDIN (SELF,
       'SIGNAL_MIM.' + 
       'APPLIED_CLASSIFICATION_ASSIGNMENT.ITEMS') |
       'SIGNAL_MIM.' +
       'SIGNAL_CATEGORY' IN
       TYPEOF (aca.assigned_group))) >= 1;
  WR2: (SIZEOF (QUERY (ada <* USEDIN (SELF,
       'SIGNAL_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       SIZEOF (QUERY (duc <* USEDIN (ada.assigned_document,
       'SIGNAL_MIM.' +
       'DOCUMENT_USAGE_CONSTRAINT.SOURCE') |
       duc\document_usage_constraint.subject_element = 'signal category')) = 1)) = 1);
  WR3: SIZEOF (USEDIN (SELF, 
       'SIGNAL_MIM.' +
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) = 1;
END_ENTITY;

ENTITY signal_category
  SUBTYPE OF (group);
WHERE
  WR1: SELF\group.description IN ['signal characteristic category', 
       'signal property category'];
END_ENTITY;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\single_part_representation_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.11 2004/11/18 17:39:07 thendrix Exp $
ISO TC184/SC4/WG12 N2544 - ISO/TS 10303-1133 Single part representation - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1668
*) 


SCHEMA Single_part_representation_mim;

USE FROM Document_assignment_mim;    -- ISO/TS 10303-1122

USE FROM Extended_measure_representation_mim;    -- ISO/TS 10303-1106

USE FROM External_model_mim;    -- ISO/TS 10303-1033

USE FROM Part_and_version_identification_mim;    -- ISO/TS 10303-1022

USE FROM Part_view_definition_mim;    -- ISO/TS 10303-1023

USE FROM Person_organization_assignment_mim;    -- ISO/TS 10303-1013

USE FROM Product_categorization_mim;    -- ISO/TS 10303-1016

USE FROM Property_assignment_mim;    -- ISO/TS 10303-1030

USE FROM Shape_property_assignment_mim;    -- ISO/TS 10303-1032


TYPE spr_document_reference_item = SELECT BASED_ON document_reference_item WITH 
   (product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

TYPE spr_organization_item = EXTENSIBLE SELECT BASED_ON organization_item WITH 
   (product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

TYPE spr_person_and_organization_item = EXTENSIBLE SELECT BASED_ON person_and_organization_item WITH 
   (product, 
    product_definition, 
    product_definition_formation);
END_TYPE; 

FUNCTION categories_of_product
 (obj : product) : SET OF STRING; 
LOCAL
category_assignments: BAG OF product_category;
categories: SET OF STRING:=[];
i: INTEGER;
END_LOCAL;
category_assignments := USEDIN(obj, 'PRODUCT_DEFINITION_SCHEMA' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS');
REPEAT i := LOINDEX(category_assignments) TO HIINDEX(category_assignments) BY 1;
categories := categories + category_assignments[i].name;
END_REPEAT;
RETURN(categories);
      END_FUNCTION; 

END_SCHEMA;  -- Single_part_representation_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\software_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/04/04 10:35:35 liutkus Exp $
   ISO TC184/SC4/WG12 N3610 - ISO/CD-TS 10303-1746 Software - EXPRESS MIM
*)


SCHEMA Software_mim;
	USE FROM Document_definition_mim;	-- ISO/TS 10303-1123
	USE FROM Product_identification_mim;	-- ISO/TS 10303-1017
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\specification_document_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.18 2005/04/04 10:35:36 liutkus Exp $
   ISO TC184/SC4/WG12 N3613 - ISO/CD-TS 10303-1747 Specification document - EXPRESS MIM
*)


SCHEMA Specification_document_mim;
	USE FROM Characteristic_mim;	-- ISO/TS 10303-1654
	USE FROM Configuration_item_mim;	-- ISO/TS 10303-1056
	USE FROM Encoded_text_representation_mim; -- ISO/TS 10303-1366
	USE FROM Person_organization_assignment_mim;	-- ISO/TS 10303-1013
	USE FROM Person_organization_mim;	-- ISO/TS 10303-1011

	USE FROM Document_schema (document_type);
	USE FROM Management_resources_schema(group_assignment);
	USE FROM Date_time_schema(date_time_role);
	
	USE FROM Product_definition_schema(product_definition_formation_relationship);


TYPE document_identifier_assigned_item = SELECT
     (document);
END_TYPE;

TYPE sd_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH 
	(configuration_item,
	product,
    product_definition,
    product_definition_formation);
END_TYPE;
	
ENTITY document_identifier
  SUBTYPE OF (group);
UNIQUE
  UR1: SELF\group.name, SELF\group.description;
WHERE
  WR1: SIZEOF (USEDIN(SELF,
                     'SPECIFICATION_DOCUMENT_MIM.' +
                     'DOCUMENT_IDENTIFIER_ASSIGNMENT.ITEMS')) > 0;
END_ENTITY;

ENTITY document_identifier_assignment
 SUBTYPE OF (group_assignment);
   SELF\group_assignment.assigned_group : document_identifier;
     items : SET [1:?] OF document_identifier_assigned_item;
END_ENTITY;

ENTITY ee_specification 
 SUBTYPE OF (document);
WHERE
  WR1: SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'SPECIFICATION_DOCUMENT_MIM.' +
       'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\person_and_organization_role.name = 'document source')) +
       SIZEOF (QUERY (apoa <* USEDIN (SELF, 
       'SPECIFICATION_DOCUMENT_MIM.' +
       'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') |
       apoa.role\organization_role.name = 'document source')) >= 1;
  WR2: SELF\document.kind\document_type.product_data_type IN 
       ['assembly technology specification',
       'design specification', 'fabrication technology specification',
       'interface specification', 'language reference manual',
       'lead form specification', 'material specification',
       'reference document', 'source code',
       'font registration document',
       'process specification', 'surface finish specification',
       'test specification'];
END_ENTITY;

ENTITY structured_text_representation_context
  SUBTYPE OF (representation_context);
WHERE
  WR1: SIZEOF (QUERY (rep <* USEDIN (SELF,
       'SPECIFICATION_DOCUMENT_MIM.' +
       'REPRESENTATION.CONTEXT_OF_ITEMS') | NOT (
       'SPECIFICATION_DOCUMENT_MIM.' +
       'STRUCTURED_TEXT_REPRESENTATION_ITEM' IN
       TYPEOF (rep)))) = 0;
END_ENTITY;

ENTITY structured_text_representation_item
  SUBTYPE OF (representation, descriptive_representation_item);
WHERE
  WR1: SIZEOF (QUERY (rr <* USEDIN (SELF,
       'SPECIFICATION_DOCUMENT_MIM.' +
       'REPRESENTATION_RELATIONSHIP.REP_2') |
       'SPECIFICATION_DOCUMENT_MIM.' +
       'STRUCTURED_TEXT_REPRESENTATION_ITEM' IN
       TYPEOF (rr.rep_1) ))<= 1;
  WR2: SIZEOF (USEDIN (SELF, 
        'SPECIFICATION_DOCUMENT_MIM.' + 
       'APPLIED_DOCUMENT_REFERENCE.ITEMS')) >= 1;
  WR3: (SIZEOF (QUERY (it <* SELF\representation.items |
       'SPECIFICATION_DOCUMENT_MIM.' +
       'EXTERNALLY_DEFINED_REPRESENTATION_ITEM' IN 
       TYPEOF (it))) = 1); 
END_ENTITY;

RULE product_association_constraint FOR 
( product_definition_formation_relationship );
WHERE
  WR1: SIZEOF(QUERY(pdfr <* product_definition_formation_relationship |
       (pdfr\product_definition_formation_relationship.name = 'product association')
       AND (SIZEOF(QUERY(adr <* USEDIN(pdfr,
       'SPECIFICATION_DOCUMENT_MIM.'
       + 'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       ('SPECIFICATION_DOCUMENT_MIM.'
       + 'EE_SPECIFICATION' IN TYPEOF(adr.assigned_document))
       )) = 0))) = 0;
END_RULE;

RULE ee_document_constraint FOR ( document );
WHERE
  WR1: SIZEOF(QUERY(doc <* document |
       (SIZEOF(QUERY(adata <* USEDIN(doc,
       'SPECIFICATION_DOCUMENT_MIM.'
       + 'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS')
       | (adata.role\date_time_role.name = 'creation date')
       )) = 0))) = 0;
  WR2: SIZEOF(QUERY(doc <* document |
       NOT ((SIZEOF(QUERY(aoa <* USEDIN(doc,
       'SPECIFICATION_DOCUMENT_MIM.'
       + 'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')
       | (aoa.role\organization_role.name = 'publisher')
       )) = 1) OR 
       (SIZEOF(QUERY(apaoa <* USEDIN(doc,
       'SPECIFICATION_DOCUMENT_MIM.'
       + 'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS')
       | (apaoa.role\person_and_organization_role.name = 'publisher')
       )) = 1)))) = 0;
  WR3: SIZEOF(QUERY(doc <* document |
       NOT (SIZEOF(USEDIN(doc,
       'SPECIFICATION_DOCUMENT_MIM.'
       + 'DOCUMENT_IDENTIFIER_ASSIGNMENT.ITEMS')) = 1)
       )) = 0;
END_RULE;

RULE ee_document_unique_constraint FOR
 ( document, document_identifier_assignment );
LOCAL
  pass : BOOLEAN := TRUE;
  rev_exists_bag : BAG OF document := [];
  dia_bag : BAG OF document_identifier_assignment := [];
  desc_bag : BAG OF STRING := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(document) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  IF NOT(EXISTS( document[i].description )) THEN
   pass := FALSE;
  END_IF;
END_REPEAT;


REPEAT i := 1 to SIZEOF(document_identifier_assignment) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  desc_bag := [];
  REPEAT j := 1 to SIZEOF(document_identifier_assignment[i].items) by 1;
     desc_bag := desc_bag + document_identifier_assignment[i].items[j]\document.description;
  END_REPEAT;
  IF NOT(value_unique(desc_bag)) THEN
    pass := FALSE;
  END_IF;
END_REPEAT;

WHERE
  WR1: pass;
END_RULE;

RULE product_association_unique_constraint FOR
 ( product_definition_formation_relationship );
LOCAL
  pdfr : BAG OF product_definition_formation_relationship := QUERY( r <*
product_definition_formation_relationship | 
  (r\product_definition_formation_relationship.name = 'product association' ) );
  pdf_bag : BAG OF product_definition_formation := [];
  pdfr_bag : BAG OF product_definition_formation_relationship;
  pass : BOOLEAN := TRUE;
  adr_bag : BAG OF applied_document_reference;
  es_bag : BAG OF ee_specification;
END_LOCAL;

REPEAT i := 1 to SIZEOF(pdfr) by 1;
  IF EXISTS( pdfr[i].relating_product_definition_formation ) THEN
    IF( NOT( pdfr[i].relating_product_definition_formation IN pdf_bag ) )
                                                              THEN
      pdf_bag := pdf_bag + pdfr[i].
                 relating_product_definition_formation;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(pdf_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  pdfr_bag := QUERY( r <* pdfr | 
             (r.relating_product_definition_formation :=: pdf_bag[i]) );
  es_bag := [];
  REPEAT j := 1 to SIZEOF(pdfr_bag) by 1;
    IF ( NOT pass ) THEN ESCAPE;
    END_IF;
    adr_bag := QUERY( adr <* USEDIN( pdfr_bag[j], 
('AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'APPLIED_DOCUMENT_REFERENCE.ITEMS')) | 
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'EE_SPECIFICATION') IN TYPEOF(adr.assigned_document)) );
    REPEAT k := 1 to SIZEOF(adr_bag) by 1;
      IF EXISTS( adr_bag[k].assigned_document ) THEN
        IF ( adr_bag[k].assigned_document IN es_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          es_bag := es_bag + adr_bag[k].assigned_document;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\stratum_non_planar_shape_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/02/04 16:14:34 budreckytej Exp $
   ISO TC184/SC4/WG12 N3616 - ISO/CD-TS 10303-1748 Stratum non planar shape - EXPRESS MIM
*)


SCHEMA Stratum_non_planar_shape_mim;
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698
	USE FROM Manifold_surface_mim;	-- ISO/TS 10303-1509

RULE stratum_average_surface_shape_constraint FOR 
( manifold_surface_shape_representation );
WHERE
  WR1: SIZEOF(QUERY(mssr <* manifold_surface_shape_representation |
       (mssr\representation.name = 'stratum average surface shape')
       AND NOT (
       SIZEOF(QUERY(pdr <* USEDIN(mssr,
       'STRATUM_NON_PLANAR_SHAPE_MIM.'
        + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('STRATUM_NON_PLANAR_SHAPE_MIM.'
        + 'STRATUM_SURFACE' IN TYPEOF(pdr.definition.definition))
       AND (pdr.definition.definition\shape_aspect.description = 
                                            'average surface'))) = 1
       ))) = 0;

END_RULE;

RULE stratum_feature_non_planar_2d_shape_constraint FOR 
( manifold_surface_shape_representation );
WHERE
  WR1: SIZEOF(QUERY(mssr <* manifold_surface_shape_representation |
       (mssr\representation.name = 'stratum feature non planar 2d shape')
       AND NOT (
       SIZEOF(QUERY(pdr <* USEDIN(mssr,
       'STRATUM_NON_PLANAR_SHAPE_MIM.'
        + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |
       ('STRATUM_NON_PLANAR_SHAPE_MIM.'
        + 'STRATUM_FEATURE' IN TYPEOF(pdr.definition.definition))
       )) = 1
       ))) = 0;
END_RULE;

RULE 
stratum_feature_shape_stratum_average_surface_shape_relationship_constraint
 FOR 
( representation_relationship );
WHERE
  WR1: SIZEOF(QUERY(rr <* representation_relationship |
       (rr\representation_relationship.name = 
'stratum feature shape stratum average surface shape relationship')
       AND NOT(('STRATUM_NON_PLANAR_SHAPE_MIM.'
       + 'MANIFOLD_SURFACE_SHAPE_REPRESENTATION' IN TYPEOF(rr.rep_2))
       AND (rr.rep_2\representation.name = 'stratum feature non planar 2d shape')
       ))) = 0;
  WR2: SIZEOF(QUERY(rr <* representation_relationship |
       (rr\representation_relationship.name = 
'stratum feature shape stratum average surface shape relationship')
       AND NOT(('STRATUM_NON_PLANAR_SHAPE_MIM.'
       + 'MANIFOLD_SURFACE_SHAPE_REPRESENTATION' IN TYPEOF(rr.rep_1))
       AND (rr.rep_1\representation.name = 'stratum average surface shape')
       ))) = 0;
END_RULE;

RULE stratum_feature_shape_stratum_surface_shape_relationship_constraint FOR
( representation_relationship );
WHERE
  WR1: SIZEOF(QUERY(rr <* representation_relationship |
       (rr\representation_relationship.name = 
        'stratum feature shape stratum surface shape relationship')
       AND NOT(('STRATUM_NON_PLANAR_SHAPE_MIM.'
       + 'MANIFOLD_SURFACE_SHAPE_REPRESENTATION' IN TYPEOF(rr.rep_2))
       AND (rr.rep_2\representation.name = 'stratum feature non planar 2d shape')
       ))) = 0;
  WR2: SIZEOF(QUERY(rr <* representation_relationship |
       (rr\representation_relationship.name = 
            'stratum feature shape stratum surface shape relationship')
       AND NOT(('STRATUM_NON_PLANAR_SHAPE_MIM.'
       + 'MANIFOLD_SURFACE_SHAPE_REPRESENTATION' IN TYPEOF(rr.rep_1))
       AND (rr.rep_1\representation.name = 'stratum surface shape')
       ))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\styled_curve_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.13 2005/04/08 18:28:36 liutkus Exp $
   ISO TC184/SC4/WG12 N3619 - ISO/CD-TS 10303-1749 Styled curve - EXPRESS MIM
*)

SCHEMA Styled_curve_mim;
	USE FROM Colour_mim;    -- ISO/TS 10303-1002

	USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

	USE FROM presentation_definition_schema
		(annotation_curve_occurrence,
		annotation_occurrence);

	USE FROM presentation_appearance_schema
		(presentation_style_assignment,
		presentation_style_select,
		styled_item);
	
	USE FROM representation_schema
		(parametric_representation_context);
		
		
	USE FROM presentation_appearance_schema
		(curve_style,
		curve_style_font,
		curve_style_font_and_scaling,
		fill_area_style_colour,		
		pre_defined_curve_font);

ENTITY solid_curve_font
 SUBTYPE OF (pre_defined_curve_font);
END_ENTITY; 

RULE curve_style_font_and_scaling_unique_constraint 
   FOR (curve_style_font_and_scaling);

LOCAL
  r : BAG OF curve_style_font_and_scaling := 
                         QUERY (r <* curve_style_font_and_scaling | TRUE);
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF string := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF (r) by 1;
  IF EXISTS( r[i]\curve_style_font_and_scaling.name ) THEN
    IF (r[i]\curve_style_font_and_scaling.name IN name_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      name_bag := name_bag + r[i]\curve_style_font_and_scaling.name;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
WR1 : pass;

END_RULE;

RULE curve_style_requires_length_measure_with_unit FOR ( curve_style );
WHERE
  WR1: SIZEOF(QUERY(cs <* curve_style |
       NOT('STYLED_CURVE_MIM.'
        + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF(cs))
       )) = 0;
END_RULE;

RULE curve_style_unique_constraint FOR
 ( representation );
LOCAL
  cs : BAG OF representation := QUERY( r <* representation |
((r\representation.name = 'curve style parameters') AND (r.context_of_items\representation_context.context_type =
'curve style parametric context')) );
  pass : BOOLEAN := TRUE;
  desc_bag : BAG OF STRING := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF(cs) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  REPEAT j := 1 to SIZEOF(cs[i].items) by 1;
    IF ( ('STYLED_CURVE_MIM.' +
'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(cs[i].items[j])) AND
(cs[i].items[j]\representation_item.name = 'curve style name') ) THEN
      IF EXISTS( cs[i].items[j]\descriptive_representation_item.description ) THEN
        IF ( cs[i].items[j]\descriptive_representation_item.description IN desc_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          desc_bag := desc_bag + cs[i].items[j]\descriptive_representation_item.description;
        END_IF;
      END_IF;
    END_IF;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\styled_text_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.7 2005/04/04 10:36:04 liutkus Exp $
   ISO TC184/SC4/WG12 N3622 - ISO/CD-TS 10303-1750 Styled text - EXPRESS MIM
*)


SCHEMA Styled_text_mim;
	USE FROM Elemental_geometric_shape_mim;	-- ISO/TS 10303-1004
	USE FROM Specification_document_mim;	-- ISO/TS 10303-1747
	
	USE FROM External_reference_schema(externally_defined_item);
	USE FROM Presentation_definition_schema(text_literal);
	USE FROM Presentation_resource_schema(
		externally_defined_text_font,
		font_select);	

RULE registered_font_constraint FOR ( externally_defined_text_font );
WHERE
  WR1: SIZEOF(QUERY(edtf <* externally_defined_text_font |
       (SIZEOF(QUERY(adr <* USEDIN(edtf,
       'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.'
       + 'APPLIED_DOCUMENT_REFERENCE.ITEMS') |
       (adr.assigned_document.kind\document_type.product_data_type =
                     'font registration document')
       )) = 0))) = 0;
END_RULE; -- registered_font_constraint

RULE registered_font_unique_constraint FOR
 ( externally_defined_text_font );
LOCAL
  ii_bag : BAG OF STRING := [];
  edtf_bag : BAG OF externally_defined_text_font;
  adr_bag : BAG OF applied_document_reference;
  pass : BOOLEAN := TRUE;
  es_bag : BAG OF ee_specification;
END_LOCAL;

REPEAT i := 1 to SIZEOF(externally_defined_text_font) by 1;
  IF EXISTS( externally_defined_text_font[i].item_id ) THEN
    IF ( NOT ( externally_defined_text_font[i].item_id IN ii_bag ) ) THEN
      ii_bag := ii_bag + externally_defined_text_font[i].item_id;
    END_IF;
  END_IF;
END_REPEAT;

REPEAT i := 1 to SIZEOF(ii_bag) by 1;
  IF ( NOT pass ) THEN ESCAPE;
  END_IF;
  edtf_bag := QUERY( edtf <* externally_defined_text_font |
            (edtf.item_id = ii_bag[i]) );
  REPEAT j := 1 to SIZEOF(edtf_bag) by 1;
    adr_bag := QUERY( adr <* USEDIN( edtf_bag[j],
'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' +
'APPLIED_DOCUMENT_REFERENCE.ITEMS' ) |
         (adr.assigned_document.kind\document_type.product_data_type =
'font registration document') );
    es_bag := [];
    REPEAT k := 1 to SIZEOF(adr_bag) by 1;
      IF EXISTS( adr_bag[k].assigned_document ) THEN
        IF ( adr_bag[k].assigned_document IN es_bag ) THEN
          pass := FALSE;
          ESCAPE;
        ELSE
          es_bag := es_bag + adr_bag[k].assigned_document;
        END_IF;
      END_IF;
    END_REPEAT;
  END_REPEAT;
END_REPEAT;
WHERE
  WR1: pass;
END_RULE; -- registered_font_unique_constraint
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\test_requirement_allocation_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.8 2005/04/04 10:36:03 liutkus Exp $
   ISO TC184/SC4/WG12 N3625 - ISO/CD-TS 10303-1751 Test requirement allocation - EXPRESS MIM
*)


SCHEMA Test_requirement_allocation_mim;
	USE FROM Functional_assignment_to_part_mim;	-- ISO/TS 10303-1674
	USE FROM Requirement_decomposition_mim;	-- ISO/TS 10303-1740
	USE FROM Network_functional_usage_view_mim;	-- ISO/TS 10303-1705

TYPE tra_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH 
     (product_definition_formation,
     property_definition_representation);
END_TYPE;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\test_select_product_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mkmodule.js,v 1.41 2004/10/11 20:17:49 thendrix Exp $
   N3680 - ISO/CD-TS - 10303-1757 Test select product - EXPRESS MIM
*)
SCHEMA Test_select_product_mim;

	USE FROM Product_replacement_mim;	-- ISO/TS 10303-1046

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\text_appearance_mim.exp
   ------------------------------------------------------------
*)

(*
$Id: mim.exp,v 1.9 2004/11/18 00:36:06 thendrix Exp $
ISO TC184/SC4/WG12 N2697 - ISO/TS 10303-1136 Text appearance - EXPRESS MIM
Supersedes ISO TC184/SC4/WG12 N1701
*) 


SCHEMA Text_appearance_mim;

USE FROM Elemental_geometric_shape_mim;    -- ISO/TS 10303-1004

USE FROM presentation_appearance_schema   -- ISO 10303-46
  (box_height,
   box_width,
   box_slant_angle,
   box_rotate_angle,
   character_glyph_style_stroke,
   character_glyph_style_outline,
   text_style,
   text_style_for_defined_font,
   text_style_with_box_characteristics,
   text_style_with_mirror,
   text_style_with_spacing); 

USE FROM presentation_definition_schema   -- ISO 10303-46
  (composite_text,
   composite_text_with_extent,
   composite_text_with_delineation,
   composite_text_with_blanking_box,
   text_literal,
   text_literal_with_extent,
   text_literal_with_delineation,
   text_literal_with_blanking_box); 

USE FROM presentation_resource_schema   -- ISO 10303-46
  (colour_rgb,
   externally_defined_text_font,
   font_select,
   pre_defined_colour,
   pre_defined_text_font); 

USE FROM aic_draughting_annotation;    -- ISO 10303-504


RULE text_font_usage FOR 
(externally_defined_text_font,pre_defined_text_font);
WHERE
  WR1: SIZEOF (QUERY (pdtf <* pre_defined_text_font | SIZEOF (USEDIN (pdtf, 'PRESENTATION_DEFINITION_SCHEMA.TEXT_LITERAL.FONT')) = 0 )) = 0;
  WR2: SIZEOF (QUERY (edtf <* externally_defined_text_font | SIZEOF (USEDIN (edtf, 'PRESENTATION_DEFINITION_SCHEMA.TEXT_LITERAL.FONT')) = 0 )) = 0;
END_RULE; 

END_SCHEMA;  -- Text_appearance_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\thermal_network_definition_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.6 2005/02/04 16:16:35 budreckytej Exp $
   ISO TC184/SC4/WG12 N3628 - ISO/CD-TS 10303-1752 Thermal network definition - EXPRESS MIM
*)


SCHEMA Thermal_network_definition_mim;
	USE FROM Network_functional_design_view_mim;	-- ISO/TS 10303-1704

ENTITY thermal_network
  SUBTYPE OF (functional_unit);
END_ENTITY;
	
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\time_interval_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.10 2004/10/22 15:26:05 darla Exp $
 ISO TC184/SC4/WG12 N2119 - ISO/TS 10303-1065 Time interval - EXPRESS MIM
*)

SCHEMA Time_interval_mim; 

USE FROM date_time_schema   -- ISO 10303-41
  (time_interval,
   time_interval_relationship,
   time_interval_with_bounds); 

USE FROM Event_mim;    -- ISO/TS 10303-1064

USE FROM Value_with_unit_mim;    -- ISO/TS 10303-1054


END_SCHEMA;  -- Time_interval_mim


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\value_with_unit_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.13 2004/10/22 15:28:54 darla Exp $
 ISO TC184/SC4/WG12 N1302 - ISO/TS 10303-1054 Value with unit - EXPRESS MIM
*)

SCHEMA Value_with_unit_mim;

USE FROM measure_schema;

USE FROM representation_schema
 (uncertainty_measure_with_unit);

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\value_with_unit_extension_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.14 2005/02/28 12:58:42 liutkus Exp $
   ISO TC184/SC4/WG12 N3631 - ISO/CD-TS 10303-1753 Value with unit extension - EXPRESS MIM
*)


SCHEMA Value_with_unit_extension_mim;
	USE FROM Value_with_unit_mim;	-- ISO/TS 10303-1054

	USE FROM Iso13584_generic_expressions_schema
		(environment,
		generic_literal,
		variable_semantics);

	USE FROM basic_attribute_schema
		(name_attribute);
	
ENTITY absorbed_dose_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\absorbed_dose_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = gray;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY activity_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\activity_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = becquerel;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
   WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY capacitance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\capacitance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = farad;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
   WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY conductance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\conductance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = siemens;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY dose_equivalent_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\dose_equivalent_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = sievert;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY electric_charge_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\electric_charge_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = coulomb;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY electromotive_force_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\electromotive_force_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = volt ;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY energy_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\energy_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = joule;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY expression_conversion_based_unit
  SUBTYPE OF (context_dependent_unit, variable_semantics); 
INVERSE
  associated_variable_environment: environment FOR semantics; 
END_ENTITY;

ENTITY force_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\force_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = newton;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY frequency_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\frequency_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = hertz;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY illuminance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\illuminance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = lux;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY inductance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\inductance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = henry;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY luminous_flux_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\luminous_flux_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = lumen;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY magnetic_flux_density_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\magnetic_flux_density_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = tesla;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY magnetic_flux_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\magnetic_flux_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = weber;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY polar_complex_number_literal
  SUBTYPE OF (generic_literal);
  radius    : REAL;
  angle     : REAL;
WHERE
  WR1: radius >= 0;
  WR2: { 0 <= angle < 2*PI };
END_ENTITY;

ENTITY power_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\power_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = watt;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY pressure_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\pressure_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = pascal;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY resistance_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\measure_with_unit ||
       SELF\resistance_measure_with_unit))) = 0;
  WR2: SELF\measure_with_unit.unit_component\si_unit.name = ohm;
  WR3: 'VALUE_WITH_UNIT_EXTENSION_MIM.SI_UNIT' IN 
       TYPEOF(SELF\measure_with_unit.unit_component);
  WR4: 'VALUE_WITH_UNIT_EXTENSION_MIM.NUMERIC_MEASURE' IN 
       TYPEOF(SELF\measure_with_unit.value_component);
END_ENTITY;

ENTITY scattering_parameter
 SUBTYPE OF (polar_complex_number_literal);
WHERE
  WR1: SIZEOF(TYPEOF(SELF) - (TYPEOF(SELF\polar_complex_number_literal ||
       SELF\scattering_parameter))) = 0;
END_ENTITY;

RULE subtype_exclusive_measure_with_unit FOR (measure_with_unit);
WHERE
  WR1: SIZEOF (QUERY (mwu <* measure_with_unit |
       NOT (SIZEOF ([
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ABSORBED_DOSE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ACTIVITY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'AMOUNT_OF_SUBSTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'AREA_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'CAPACITANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'CELSIUS_TEMPERATURE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'CONDUCTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'DOSE_EQUIVALENT_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ELECTRIC_CHARGE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ELECTRIC_CURRENT_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ELECTROMOTIVE_FORCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ENERGY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'FORCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'FREQUENCY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'ILLUMINANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'INDUCTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'LENGTH_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'LUMINOUS_FLUX_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'LUMINOUS_INTENSITY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'MAGNETIC_FLUX_DENSITY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'MAGNETIC_FLUX_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'MASS_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'PLANE_ANGLE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'POWER_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'PRESSURE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'RATIO_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'RESISTANCE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'SOLID_ANGLE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'THERMODYNAMIC_TEMPERATURE_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'TIME_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'UNCERTAINTY_MEASURE_WITH_UNIT',
       'VALUE_WITH_UNIT_EXTENSION_MIM.' +
       'VOLUME_MEASURE_WITH_UNIT'] *
       TYPEOF(mwu)) <= 1))) = 0;
END_RULE;
	
END_SCHEMA;




(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\via_component_mim.exp
   ------------------------------------------------------------
*)

(*
   $Id: mim.exp,v 1.5 2005/04/04 10:36:04 liutkus Exp $
   ISO TC184/SC4/WG12 N3634 - ISO/CD-TS 10303-1754 Via component - EXPRESS MIM
*)


SCHEMA Via_component_mim;
	USE FROM Interconnect_module_connection_routing_mim;	-- ISO/TS 10303-1684
	USE FROM Layered_interconnect_module_design_mim;	-- ISO/TS 10303-1698
END_SCHEMA;



(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\wireframe_2d_mim.exp
   ------------------------------------------------------------
*)

(* 
   $Id: mim.exp,v 1.4 2005/02/15 10:11:27 rocc Exp $
   ISO/TC184/SC4 WG12N2626 - ISO/TS 10303-1347 Wireframe_2d - EXPRESS MIM
   Supersedes ISO TC184/SC4/WG12N1776
*)

SCHEMA Wireframe_2d_mim;

USE FROM Elemental_geometric_shape_mim;

USE FROM aic_geometrically_bounded_2d_wireframe;

END_SCHEMA;


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\work_order_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.13 2004/10/22 15:31:03 darla Exp $
 ISO TC184/SC4/WG12 N1154 - ISO/TS 10303-1043 Work order - EXPRESS MIM
*)

SCHEMA Work_order_mim; 

USE FROM Activity_mim;    -- ISO/TS 10303-1047

USE FROM Work_request_mim;    -- ISO/TS 10303-1042

USE FROM action_schema   -- ISO 10303-41
  (action_directive,
   directed_action); 

END_SCHEMA; 


(*
   ------------------------------------------------------------
G:\workspace\stepmod\ballots\ballots\ap210_wg12\express\mim\work_request_mim.exp
   ------------------------------------------------------------
*)

(*
 $Id: mim.exp,v 1.16 2004/10/22 15:32:13 darla Exp $
 ISO TC184/SC4/WG12 N1151 - ISO/TS 10303-1042 Work request - EXPRESS MIM
*)

SCHEMA Work_request_mim;

USE FROM Activity_method_mim;    -- ISO/TS 10303-1049

USE FROM action_schema   -- ISO 10303-41
  (action_request_solution,
   action_request_status,
   versioned_action_request); 

USE FROM management_resources_schema   -- ISO 10303-41
   (action_request_assignment);


TYPE action_request_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE;

ENTITY applied_action_request_assignment
SUBTYPE OF (action_request_assignment);
  items : SET [1 : ?] OF action_request_item;
END_ENTITY;

END_SCHEMA;
