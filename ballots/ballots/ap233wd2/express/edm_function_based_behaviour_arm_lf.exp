
(* ===================================================================================== *)
(* Long form schema generated by The EXPRESS Data Manager  compiler version 9.5B.2004.01.23*)
(* Mon Apr 24 17:06:37 2006                                                                *)
(* The schema is converted from ISO10303 P11-2003 to ISO10303 P11-1994                     *)
(* ===================================================================================== *)
(*"Function_based_behaviour_arm"  $Id: arm.exp,v 1.2 2006/04/06 13:08:13 philsp Exp $
ISO TC184/SC4/WG12 N3713 - ISO/WD 10303-1453 Function based behaviour - EXPRESS ARM
* *)


SCHEMA Function_based_behaviour_arm_lf;


(*
USE FROM Behaviour_description_assignment_arm;

USE FROM Extended_task_element_arm;

USE FROM Foundation_representation_arm;

USE FROM Required_resource_arm;

USE FROM Resource_property_assignment_arm;
*)
(* USED FROM (Activity_method_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_method_item = SELECT (
   Product,
   Product_version,
   Product_view_definition);
END_TYPE;


(* Pruned unused type: alias_identification_item  *)

(* USED FROM (Value_with_unit_arm); *)
TYPE any_number_value = NUMBER;
END_TYPE;
(* USED FROM (Value_with_unit_arm); *)
TYPE any_string_value = STRING;
END_TYPE;

(* Pruned unused type: behaviour_and_version_identification_item  *)

(* USED FROM (Behaviour_description_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE behaviour_item = SELECT (
   Behaviour_view_definition);
END_TYPE;

(* USED FROM (Behaviour_description_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE behaviour_model = SELECT (
   Functional_model);
END_TYPE;


(* Pruned unused type: behaviour_view_definition_identification_item  *)

(* USED FROM (Resource_property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
(* NOTE: Empty SELECT set! *)
(* TYPE characterized_resource_select = SELECT (); END_TYPE; *) 

(* USED FROM (Classification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classification_item = SELECT (
   Condition,
   Condition_assignment,
   Condition_parameter,
   Condition_relationship,
   Required_resource,
   Required_resource_assignment,
   Required_resource_relationship,
   Resource_item,
   Resource_item_assignment,
   Resource_item_relationship);
END_TYPE;


(* Pruned unused type: condition_classification_item  *)

(* USED FROM (Condition_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE condition_item = SELECT (
   Required_resource_assignment,
   Resource_item_assignment,
   Resource_property);
END_TYPE;

(* USED FROM (Condition_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE condition_parameter_item = SELECT (
   Condition_relationship);
END_TYPE;


(* Pruned unused type: fbb_condition_item  *)


(* Pruned unused type: fbb_required_resource_item  *)


(* Pruned unused type: fbb_resource_assignment_item  *)


(* Pruned unused type: fbb_resource_item_select  *)


(* Pruned unused type: fbb_task_item  *)


(* Pruned unused type: functional_behaviour_model  *)

(* USED FROM (Identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE identification_item = SELECT (
   Behaviour_view_definition);
END_TYPE;

(* USED FROM (Value_with_unit_arm); *)
TYPE length_measure = REAL;
END_TYPE;
(* USED FROM (Value_with_unit_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE measure_value = SELECT (
   any_number_value,
   any_string_value,
   length_measure,
   plane_angle_measure);
END_TYPE;

(* USED FROM (Value_with_unit_arm); *)
TYPE plane_angle_measure = REAL;
END_TYPE;

(* Pruned unused type: required_resource_classification_item  *)

(* USED FROM (Required_resource_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE required_resource_item = SELECT (
   Task_step);
END_TYPE;

(* USED FROM (Resource_item_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE resource_assignment_item = SELECT (
   Product,
   Product_version,
   Product_view_definition);
END_TYPE;


(* Pruned unused type: resource_item_classification_item  *)

(* USED FROM (Resource_item_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE resource_item_select = SELECT (
   Product,
   Product_version,
   Product_view_definition);
END_TYPE;

(* USED FROM (Task_element_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE task_item = activity_method_item;
END_TYPE;

(* USED FROM (Activity_method_arm); *)
ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;
(* USED FROM (Alias_identification_arm); *)
ENTITY Alias_identification
  SUBTYPE OF (Identification_assignment);
DERIVE
  SELF\Identification_assignment.role: STRING :='alias';
WHERE
WR1: SIZEOF (QUERY( item <* SELF\Identification_assignment.items |
NOT ('FUNCTION_BASED_BEHAVIOUR_ARM_LF.ALIAS_IDENTIFICATION_ITEM' IN TYPEOF(item) ) )) = 0;

END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Applied_independent_resource_property
  SUBTYPE OF (Resource_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;
(* USED FROM (Behaviour_identification_and_version_arm); *)
ENTITY Behaviour
SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Behaviour_description_assignment_arm); *)
ENTITY Behaviour_description_association;
  description : OPTIONAL STRING;
  representation : behaviour_model;
  represented_item : behaviour_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Behaviour_identification_and_version_arm); *)
ENTITY Behaviour_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Behaviour;
END_ENTITY;
(* USED FROM (Behaviour_identification_and_version_arm); *)
    (* This ENTITY has RENAMED attributes in the EXPRESS E2 source, RENAMED attrs implemented as DERIVE *)
ENTITY Behaviour_version_sequence
SUBTYPE OF (Product_version_relationship);

  SELF\Product_version_relationship.relating_version : Behaviour_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_version_relationship.related_version : Behaviour_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : BEHAVIOUR_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : BEHAVIOUR_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Behaviour_view_definition_arm); *)
ENTITY Behaviour_view_definition
SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Behaviour_version;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class
  SUPERTYPE OF (ONEOF (
              CLASS_BY_EXTENSION,
              CLASS_BY_INTENSION));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Classification_assignment_arm); *)
ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Concurrent_elements
SUBTYPE OF (Structured_task_element);
  elements : SET [2 : ?] OF Task_element;
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition_assignment;
  assigned_condition : Condition;
  item : condition_item;
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  condition : Condition;
  parameter : OPTIONAL condition_parameter_item;
END_ENTITY;
(* USED FROM (Condition_arm); *)
ENTITY Condition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_condition : Condition;
  related_condition : Condition;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Decision_path;
  condition : Condition;
  defined_in : Multiple_decision_point;
  path_element : Task_element;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Decision_point
SUBTYPE OF (Structured_task_element);
  condition : Condition;
  true_case_element : OPTIONAL Task_element;
  false_case_element : OPTIONAL Task_element;
  unknown_case_element : OPTIONAL Task_element;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit
  SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'FUNCTION_BASED_BEHAVIOUR_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);

END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY End_task
SUBTYPE OF (Task_element);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Exit_loop
SUBTYPE OF (Task_element);
END_ENTITY;

ENTITY Functional_model
SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Functional_representation_context;
  SELF\Representation.items : SET [1 : ?] OF Functional_representation_item;
END_ENTITY;

ENTITY Functional_representation_context
SUBTYPE OF (Representation_context);
END_ENTITY;

ENTITY Functional_representation_item
SUBTYPE OF (Representation_item);
  item : Task_element;
END_ENTITY;
(* USED FROM (Identification_assignment_arm); *)
ENTITY Identification_assignment;
  identifier  : STRING;
  role        : STRING;
  description : OPTIONAL STRING;
  items       : SET [1:?] OF identification_item;
END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Looping_element
SUPERTYPE OF (ONEOF (
              REPEAT_COUNT,
              REPEAT_UNTIL,
              REPEAT_WHILE))

SUBTYPE OF (Structured_task_element);
  repeated_element : Task_element;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Multiple_decision_point
SUBTYPE OF (Structured_task_element);
INVERSE
  paths : SET [2 : ?] OF Decision_path FOR defined_in;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Product_identification_arm); *)
ENTITY Product;
  id : STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_categorization_arm); *)
ENTITY Product_category;  
  id		: OPTIONAL STRING;
  name	: STRING;
  description : OPTIONAL STRING;  
END_ENTITY;
(* USED FROM (Product_identification_arm); *)
ENTITY Product_category_assignment;
  category : Product_category;
  products : SET[1:?] OF Product;
END_ENTITY;
(* USED FROM (Product_categorization_arm); *)
ENTITY Product_category_hierarchy;  
  super_category : Product_category;  
  sub_category   : Product_category;
END_ENTITY;
(* USED FROM (Product_version_arm); *)
ENTITY Product_version;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Product_version_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_version : Product_version;
  related_version : Product_version;
WHERE
  WR1: relating_version :<>: related_version;
  WR2: EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Repeat_count
SUBTYPE OF (Looping_element);
  count : INTEGER;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Repeat_until
SUBTYPE OF (Looping_element);
  condition : Condition;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Repeat_while
SUBTYPE OF (Looping_element);
  condition : Condition;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation;
  id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_context;
  id : STRING;
  kind : STRING;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_item
   ABSTRACT SUPERTYPE;
  name : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource
   ABSTRACT SUPERTYPE OF (ONEOF (
                        REQUIRED_RESOURCE_BY_RESOURCE_ITEM,
                        REQUIRED_RESOURCE_BY_SPECIFICATION));
  name : STRING;
  description : OPTIONAL STRING;
  required_quantity : OPTIONAL Value_with_unit;
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_assignment;
  assigned_resource : Required_resource;
  item : required_resource_item;
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_by_resource_item
  SUBTYPE OF (Required_resource);
  resource_item : Resource_item;
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_by_specification
  SUBTYPE OF (Required_resource);
END_ENTITY;
(* USED FROM (Required_resource_arm); *)
ENTITY Required_resource_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : Required_resource;
  related : Required_resource;
END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_group_relationship
  SUBTYPE OF (Resource_item_relationship);
  quantity : OPTIONAL Value_with_unit;
END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_item;
  name : STRING;
  description : OPTIONAL STRING;
  resource_items : OPTIONAL SET[0:?] OF resource_item_select;
END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_item_assignment;
  assigned_resource : Resource_item;
  item : resource_assignment_item;
END_ENTITY;
(* USED FROM (Resource_item_arm); *)
ENTITY Resource_item_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : Resource_item;
  related : Resource_item;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Resource_property;
  name : STRING;
  description : STRING;
  described_element : characterized_resource_select;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Resource_property_representation;
  description : OPTIONAL STRING;
  property : Resource_property;
  rep : Representation;
  role : STRING;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY String_representation_item
  SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Structured_task_element
 ABSTRACT SUPERTYPE OF (ONEOF (
                        CONCURRENT_ELEMENTS,
                        DECISION_POINT,
                        LOOPING_ELEMENT,
                        TASK_ELEMENT_SEQUENCE))

SUBTYPE OF (Task_element);
END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Supplied_part_relationship
  SUBTYPE OF (Product_version_relationship);
WHERE
  WR1: SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_element
 ABSTRACT SUPERTYPE OF (ONEOF (
                        END_TASK,
                        EXIT_LOOP,
                        STRUCTURED_TASK_ELEMENT,
                        TASK_STEP))

SUBTYPE OF (Activity_method);
END_ENTITY;
(* USED FROM (Task_element_arm); *)
    (* This ENTITY has RENAMED attributes in the EXPRESS E2 source, RENAMED attrs implemented as DERIVE *)
ENTITY Task_element_assignment
SUBTYPE OF (Applied_activity_method_assignment);

  SELF\Applied_activity_method_assignment.assigned_activity_method : Task_element;  -- assigned_task_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Applied_activity_method_assignment.items : SET [1 : ?] OF task_item;
    DERIVE
      assigned_task_element : TASK_ELEMENT := SELF\Applied_activity_method_assignment.assigned_activity_method;  -- ASSIGNED_ACTIVITY_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_element_relationship
SUBTYPE OF (Activity_method_relationship);
  SELF\Activity_method_relationship.relating_method : Task_element;
  SELF\Activity_method_relationship.related_method : Task_element;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
ENTITY Task_element_sequence
SUBTYPE OF (Structured_task_element);
  elements : LIST [2 : ?] OF Task_element;
END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
    (* This ENTITY had its attributes changed during E2 to E1 conversion  *)
ENTITY Task_io
SUBTYPE OF (Task_element_assignment);

  SELF\Applied_activity_method_assignment.assigned_activity_method : Task_step;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
ENTITY Task_io_hierarchy;
  child : Task_io;
  parent : Task_io;
WHERE
  (*"wr1" Ensure the parent and child relationships are for the same role*)
  wr1: child.role = parent.role;
END_ENTITY;
(* USED FROM (Task_element_arm); *)
    (* This ENTITY has RENAMED attributes in the EXPRESS E2 source, RENAMED attrs implemented as DERIVE *)
ENTITY Task_step
SUBTYPE OF (Task_element);

  SELF\Activity_method.description : STRING;                  -- step_text : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      step_text : STRING := SELF\Activity_method.description;  -- DESCRIPTION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Extended_task_element_arm); *)
    (* This ENTITY has RENAMED attributes in the EXPRESS E2 source, RENAMED attrs implemented as DERIVE *)
ENTITY Task_step_hierarchy
SUBTYPE OF (Task_element_relationship);

  SELF\Task_element_relationship.related_method : Task_step;  -- child : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Task_element_relationship.relating_method : Task_step;  -- parent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      child : TASK_STEP := SELF\Task_element_relationship.related_method;  -- RELATED_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      parent : TASK_STEP := SELF\Task_element_relationship.relating_method;  -- RELATING_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Unit
  SUPERTYPE OF (ONEOF (
              AMOUNT_OF_SUBSTANCE_UNIT,
              ELECTRIC_CURRENT_UNIT,
              LENGTH_UNIT,
              LUMINOUS_INTENSITY_UNIT,
              MASS_UNIT,
              PLANE_ANGLE_UNIT,
              RATIO_UNIT,
              SOLID_ANGLE_UNIT,
              THERMODYNAMIC_TEMPERATURE_UNIT,
              TIME_UNIT));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Value_with_unit;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'FUNCTION_BASED_BEHAVIOUR_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'FUNCTION_BASED_BEHAVIOUR_ARM_LF.' +

    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;


END_SCHEMA;

