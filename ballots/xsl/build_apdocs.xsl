<?xml version="1.0" encoding="utf-8"?>
<!--
$ Id: build.xsl,v 1.9 2003/02/26 02:12:17 thendrix Exp $
   Author:  Rob Bodington, Eurostep Limited
   Owner:   Developed by Eurostep Limited http://www.eurostep.com
   Purpose: To build the initial ANT build package. 
-->

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:msxsl="urn:schemas-microsoft-com:xslt"
		xmlns:exslt="http://exslt.org/common"
                version="1.0">
  
  <xsl:import href="../../xsl/common.xsl"/>

  <xsl:output method="xml" indent="yes"/>

    <xsl:variable name="LOWER" select="'abcdefghijklmnopqrstuvwxyz_'"/>
    <xsl:variable name="UPPER" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
        
  <xsl:template match="ballot_index">
    <xsl:text>
    </xsl:text>
    <xsl:comment>
      This file has been auto generated by:
      ant -buildfile buildbuild.xml
    </xsl:comment>
    <project name="ballothtml" default="all" basedir="../../..">
      <xsl:text>
      </xsl:text>
      <xsl:element name="target">
        <xsl:attribute name="name">variables</xsl:attribute>
        <xsl:attribute name="description">initialize variables</xsl:attribute>
        <xsl:element name="tstamp"/>
        <xsl:element name="property">
          <xsl:attribute name="name">BALLLOTSTYLES</xsl:attribute>
          <xsl:attribute name="value">ballots/xsl</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_RCS</xsl:attribute>
          <xsl:attribute name="value">NO</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_ISSUES</xsl:attribute>
          <xsl:attribute name="value">NO</xsl:attribute>
        </xsl:element>
        
        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_BACKGROUND</xsl:attribute>
          <xsl:choose>
            <xsl:when test="./@output_background='YES'">
              <xsl:attribute name="value">YES</xsl:attribute>
            </xsl:when>            
            <xsl:otherwise>
              <xsl:attribute name="value">NO</xsl:attribute>            
            </xsl:otherwise>
          </xsl:choose>
        </xsl:element>
        
        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_RESOURCES_BACKGROUND</xsl:attribute>
          <xsl:choose>
            <xsl:when test="./@output_resources_background='NO'">
              <xsl:attribute name="value">NO</xsl:attribute>
            </xsl:when>            
            <xsl:otherwise>
              <xsl:attribute name="value">YES</xsl:attribute>            
            </xsl:otherwise>
          </xsl:choose>
        </xsl:element>
        
        <xsl:element name="property">
          <xsl:attribute name="name">STEPMODSTYLES</xsl:attribute>
          <xsl:attribute name="value">xsl</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">STEPMODDTDDIR</xsl:attribute>
          <xsl:attribute name="value">dtd</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">DTDDIR</xsl:attribute>
          <xsl:attribute name="value">ballots/dtd</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">ISODIR</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('ballots/isohtml/',@name)"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">ISOMENU</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('./ballots/ballots/',@name,'/menubar_iso.xml')"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">BALLOTDIR</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('ballots/ballots/',@name)"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">BALLOTMENU</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('./ballots/ballots/',@name,'/menubar_ballot.xml')"/>
          </xsl:attribute>
        </xsl:element>
        
        <xsl:element name="property">
          <xsl:attribute name="name">ARCHIVE</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:choose>
              <xsl:when test="string-length(./@wg.number.ballot_package) > 3">
                <xsl:value-of select="concat(translate(normalize-space(translate(./@wg.number.ballot_package,$UPPER,$LOWER)),' ',''),'-',@name,'-${DSTAMP}')"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="concat('wgxxnxxxx' ,'-',@name,'-${DSTAMP}')"/>                
              </xsl:otherwise>
            </xsl:choose>
          </xsl:attribute>
        </xsl:element>
        
        <xsl:element name="property">
          <xsl:attribute name="name">DATE</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="'${DSTAMP}'"/>
          </xsl:attribute>
        </xsl:element>

        <xsl:if test="./ballot_package/ap_doc">
          <xsl:apply-templates select="." mode="apdoc_variables"/>
          <xsl:apply-templates select="." mode="dependent_mod_res_variables"/>
        </xsl:if>
        <xsl:if test="./ballot_package/module">
          <xsl:apply-templates select="."  mode="modules_variables"/>
        </xsl:if>
      </xsl:element>
      
      <xsl:text>
      </xsl:text>
      <target name="init" depends="variables">
        <xsl:element name="mkdir">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>          
        </xsl:element>
        
        <xsl:element name="copy">
          <xsl:attribute name="todir">
            <xsl:value-of select="'${ISODIR}/images'"/>
          </xsl:attribute>
          <fileset dir="images"/>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>
      
      <xsl:variable name="all_target1" select="'init, resources, isoindex'"/>
      <xsl:variable name="all_target2">
        <xsl:choose>
          <xsl:when test="./ballot_package/ap_doc">
            <xsl:value-of select="concat($all_target1, ', isoapdoc, isodepmodules')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$all_target1"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="all_target">
        <xsl:choose>
          <xsl:when test="./ballot_package/module">
            <xsl:value-of select="concat($all_target2, ', isomodules')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$all_target2"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <target name="all" depends="{$all_target}" 
        description="Create HTML for everything"/> 
      <xsl:text>
      </xsl:text>
      <target name="clean" depends="variables" 
        description="delete generated files">
        <xsl:element name="delete">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>
      <target name="zip" depends="all" description="create .zip file">
        <xsl:element name="zip">
          <xsl:attribute name="zipfile">
            <xsl:value-of select="'${ISODIR}/${ARCHIVE}.zip'"/>
          </xsl:attribute>
          <xsl:attribute name="basedir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="excludes">
            <xsl:value-of select="'**/*.zip'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**'"/>
          </xsl:attribute>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>
      <target name="isoindex" depends="init" 
        description="Create HTML index">
        <dependset>
          <xsl:element name="srcfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'${DTDDIR}'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
            </xsl:attribute>
          </xsl:element>
          <xsl:element name="srcfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'${BALLLOTSTYLES}'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'**/*.xsl'"/>
            </xsl:attribute>
          </xsl:element>
          <xsl:element name="srcfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'${BALLOTDIR}'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'**/*.xml'"/>
            </xsl:attribute>
          </xsl:element>
          <xsl:element name="targetfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'.'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'${BALLOTDIR}/*.htm*'"/>
            </xsl:attribute>
          </xsl:element>
        </dependset>
        
        <xsl:element name="style">
          <xsl:attribute name="in">
            <xsl:value-of select="'${BALLOTDIR}/ballot_summary.xml'"/>
          </xsl:attribute>
          <xsl:attribute name="out">
            <xsl:value-of select="'${ISODIR}/index.htm'"/>
          </xsl:attribute>
          <xsl:attribute name="destdir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="extension">
            <xsl:value-of select="'.htm'"/>
          </xsl:attribute>
          <xsl:attribute name="style">
            <xsl:value-of select="'${BALLLOTSTYLES}/ballot_summary.xsl'"/>
          </xsl:attribute>
          <param name="output_type" expression="HTM"/>
          <param name="stepmodhome" expression="."/>
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'date'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="'${DATE}'"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>
      
      <xsl:if test="./ballot_package/ap_doc">
        <xsl:apply-templates select="." mode="apdoc_target"/>
        <xsl:apply-templates select="." mode="dependent_modules_target"/>
      </xsl:if>
      <xsl:if test="./ballot_package/module">
        <xsl:apply-templates select="." mode="modules_target"/>
      </xsl:if>
      <xsl:apply-templates select="." mode="resources_target"/>
      
    </project>
  </xsl:template>

  <xsl:template match="module">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,@name,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>




  <xsl:template match="ballot_index" mode="apdoc_variables">
    <xsl:element name="property">
      <xsl:attribute name="name">APDIR</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:value-of select="concat('data/application_protocols/',./ballot_package/ap_doc/@name)"/>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/**/*.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APXSL</xsl:attribute>
      <xsl:attribute name="value">xsl/ap_doc</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCGIFS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/*.gif</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSHOMEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/home.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSAAMXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/aam.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSAAMIDEFXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/aamidef*.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSDATAPLANXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/data_plan_*.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSCOPEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/1_scope.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCREFSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/2_refs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCDEFSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/3_defs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINFOREQSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/4_info_reqs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCMAINXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/5_main.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCCCSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/6_ccs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXAAM</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_aam.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_arm_expg.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXCHANGESXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_changes.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXCOMP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_comp_int.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXEXPLFXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_exp_lf.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXGUIDEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_guide.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXIMPMETHXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_imp_meth.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXOBJREGXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_obj_reg.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXPICSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_pics.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXSHORTNAMESXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_shortnames.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXTECHDISCXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_tech_disc.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCBIBLIOXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/biblio.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCCONTENTSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/contents.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCCOVERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/cover.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFOREWORDXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/foreword.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMEAPTITLEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_aptitle.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMECONTENTTITLEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_contenttitle.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMEINDEXXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_index.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMETOCXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_toc.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMEXPRESSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMEXPRESSINNERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMEXPRESSTOPXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMAPPINGSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_mappings.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMAPPINGSINNERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_mappings_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMAPPINGSTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_mappings_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMODULES</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_modules.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMODULESINNER</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_modules_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMODULESTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_modules_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMEXPRESS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_express.xml</xsl:attribute>
    </xsl:element>

    <!--    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMEXPRESSINNERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_express_inner.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMEXPRESSTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_express_top.xml</xsl:attribute>
    </xsl:element>
    -->
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMMODULES</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_modules.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMMODULESINNER</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_modules_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMMODULESTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_modules_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXRESOURCES</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_resources.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXRESOURCESINNER</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_resources_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXRESOURCESTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_resources_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINTRODUCTION</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/introduction.xml</xsl:attribute>
    </xsl:element>
  </xsl:template>
  
  
  <xsl:template match="ballot_index" mode="modules_variables">
    <!-- the Modules -->
    <xsl:element name="property">
      <xsl:attribute name="name">EXPRESS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">GIFS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.gif'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.png'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.jpg'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">CONTENTSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/contents.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MODULES</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/**/*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">SCOPEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/1_scope.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">REFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/2_refs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DEFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/3_defs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">INFOREQSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/4_info_reqs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MAINXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_main.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MAPPINGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mapping.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">INDEXXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/index.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ABSTRACTXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/abstract.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ASHORTNAMESXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/a_short_names.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">BOBJREGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/b_obj_reg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">BIBLIOXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/biblio.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">CARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/c_arm_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">COVERXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/cover.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/d_mim_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPARMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPARMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm_lf.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPMIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPMIMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim_lf.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">FGUIDEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/f_guide.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">FOREWORDXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/foreword.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">INTRODUCTIONXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/introduction.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ARMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/armexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mimexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">ARMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
  </xsl:template>
  
  <!-- output the variable for the dependent modules and resources -->
  <xsl:template match="ballot_index" mode="dependent_mod_res_variables">
    <xsl:variable name="mim_modules">
      <xsl:apply-templates select="./ballot_package/ap_doc" mode="get_mod_node_set"/>
    </xsl:variable>
    
    <xsl:variable name="mim_modules_node_set" select="exslt:node-set($mim_modules)"/>

    <!--    
    <xsl:apply-templates select="$mim_modules_node_set/xmodule" mode="properties"/>
    <xsl:apply-templates select="$mim_modules_node_set/xresource" mode="properties"/>
    -->
    
    <!-- The resources -->
    <xsl:element name="property">
      <xsl:attribute name="name">RESOURCESXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">RESOURCESEXP</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'.exp'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">RESOURCESSCHEMAEXPGGIFS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'/expg*.gif'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">RESOURCESSCHEMAEXPGXMLS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'/expg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <!-- The dependent modules -->
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEXPRESS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODGIFS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.gif'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.png'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.jpg'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODCONTENTSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/contents.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMODULES</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/**/*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODSCOPEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/1_scope.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODREFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/2_refs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODDEFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/3_defs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODINFOREQSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/4_info_reqs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMAINXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_main.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMAPPINGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mapping.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODINDEXXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/index.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODABSTRACTXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/abstract.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODASHORTNAMESXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/a_short_names.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODBOBJREGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/b_obj_reg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODBIBLIOXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/biblio.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODCARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/c_arm_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODCOVERXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/cover.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODDMIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/d_mim_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPARMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPARMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm_lf.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPMIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPMIMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim_lf.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODFGUIDEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/f_guide.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODFOREWORDXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/foreword.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODINTRODUCTIONXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/introduction.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
      
    <xsl:element name="property">
      <xsl:attribute name="name">DMODARMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/armexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mimexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODARMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
  </xsl:template>
  
  <xsl:template match="ballot_index" mode="apdoc_target">
    <xsl:text>
    </xsl:text>
    <target name="isoapdoc" depends="init" description="generate HTML for AP doc">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/${APDIR}/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSHOMEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/home.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMEAPTITLEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_aptitle.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMECONTENTTITLEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_contenttitle.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMEINDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_index.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMETOCXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_toc.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSAAMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/aam_descriptions.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSAAMIDEFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSDATAPLANXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCREFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCDEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINFOREQSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_4_info_reqs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCMAINXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_5_main.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCCCSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_6_ccs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXAAM}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_aam.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXARMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_arm_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXCHANGESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_changes.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXCOMP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_comp_int.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXEXPLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_exp_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
       </xsl:element>
       <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXGUIDEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_guide.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXIMPMETHXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_imp_meth.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
       </xsl:element>

       <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_obj_reg.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

         <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXPICSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_pics.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXSHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_shortnames.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXTECHDISCXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_tech_disc.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCBIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_biblio.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCCONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_contents.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCCOVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_cover.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_foreword.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMEXPRESSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMEXPRESSINNERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMEXPRESSTOPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMAPPINGSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_mappings.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMAPPINGSINNERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_mappings_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMAPPINGSTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_mappings_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMODULES}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_modules.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMODULESINNER}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_modules_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMODULESTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_modules_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMEXPRESS}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_express.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <!-- RBN NOT USED ???
           <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMEXPRESSINNERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_express_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMEXPRESSTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_express_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>
-->
        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMMODULES}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_modules.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMMODULESINNER}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_modules_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMMODULESTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_modules_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXRESOURCES}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_resources.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXRESOURCESINNER}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_resources_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXRESOURCESTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_resources_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
         </xsl:element>
        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINTRODUCTION}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_introduction.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
         <param name="output_background" expression="${OUTPUT_BACKGROUND}"/>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
         
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
    </target>
  </xsl:template>


  <xsl:template match="ballot_index" mode="resources_target">
    <xsl:text>
    </xsl:text>
    <target name="resources" depends="init" 
      description="generate common resources">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfilelist">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="files">
            <xsl:value-of select="'${RESOURCESXML}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/resources/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESOURCESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
            <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute> 
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RESOURCES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESOURCESEXP}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>  
    </target>
  </xsl:template>

  <xsl:template match="ballot_index" mode="modules_target">
    <xsl:text>
    </xsl:text>    
    <target name="isomodules" depends="init" 
      description="generate HTML for all modules">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${GIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/modules/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${CONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_contents.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${SCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${REFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INFOREQSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_4_info_reqs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MAINXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_main.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MAPPINGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mapping.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mim.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/index.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ABSTRACTXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_abstract.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ASHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_a_short_names.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${BOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_b_obj_reg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${BIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_biblio.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${CARMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_c_arm_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${COVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_cover.xsl'"/>
        </xsl:attribute>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'coverpage_date'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DATE}'"/>
          </xsl:attribute>
        </xsl:element>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_d_mim_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
       <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPARMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPARMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPMIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPMIMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${FGUIDEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_f_guide.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${FOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_foreword.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INTRODUCTIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_introduction.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ARMEXPXML}, ${MIMEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ARMEXPGXML},${MIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${SYS}/e_exp_arm_lf.xml'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${GIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
    </target>
  </xsl:template>

  <xsl:template match="ballot_index" mode="dependent_modules_target">
    <xsl:text>
    </xsl:text>    
    <target name="isodepmodules" depends="init" 
      description="generate HTML for all modules">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${DMODMODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${DMODGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${DMODEXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/modules/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODCONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_contents.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODSCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODREFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODDEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODINFOREQSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_4_info_reqs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODMAINXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_main.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODMAPPINGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mapping.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODMIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mim.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODINDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/index.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODABSTRACTXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_abstract.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODASHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_a_short_names.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODBOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_b_obj_reg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODBIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_biblio.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODCARMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_c_arm_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODCOVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_cover.xsl'"/>
        </xsl:attribute>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'coverpage_date'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DATE}'"/>
          </xsl:attribute>
        </xsl:element>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODDMIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_d_mim_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
       <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODEEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODEEXPARMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODEEXPARMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODEEXPMIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODEEXPMIMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODFGUIDEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_f_guide.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODFOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_foreword.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODINTRODUCTIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_introduction.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODARMEXPXML}, ${DMODMIMEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMODARMEXPGXML},${DMODMIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${SYS}/e_exp_arm_lf.xml'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${DMODEXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${DMODGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
    </target>
  </xsl:template>

  <xsl:template match="resource">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lname" select="translate(./@name,$UPPER,$LOWER)"/>

    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="resource" mode="wgnumexp">
    <xsl:value-of select="./@wg.number.express" />     
  </xsl:template>
 
  <xsl:template match="resource" mode="name">
    <xsl:value-of select="./@name" />     
  </xsl:template>


  <xsl:template match="ap_doc" mode="get_mod_node_set">
    <xsl:variable name="selected_ap" select="@name"/>
    <xsl:variable name="ap_file" 
      select="concat('../../data/application_protocols/',$selected_ap,'/application_protocol.xml')"/>	    
    <xsl:variable name="ap_node" select="document($ap_file)"/>
    <xsl:variable name="ap_top_module" select="$ap_node/application_protocol/@module_name"/>
    
    <xsl:variable name="top_module_file" 
      select="concat('../../data/modules/',$ap_top_module,'/mim.xml')"/>
    
    <xsl:variable name="top_module_node"
      select="document($top_module_file)/express"/>
    
    <xsl:variable name="schema-name"
      select="$top_module_node//schema/@name"/>
    
    <xsl:variable name="mim_schemas">
      <xsl:call-template name="depends-on-recurse-mim-x">
        <xsl:with-param name="todo" select="concat(' ',$schema-name,' ')"/>
        <xsl:with-param name="done" select="' '"/>
      </xsl:call-template>
    </xsl:variable>
    
    <xsl:variable name="schemas-node-set" select="exslt:node-set($mim_schemas)"/>
    
      <xsl:for-each select="$schemas-node-set//x">
        <xsl:sort/>
        <xsl:choose>
          <xsl:when test="substring-before(.,'/mim.xml')">
            <xsl:variable name="module" select="substring-after(substring-before(.,'/mim'),'modules/')"/>
            <xsl:variable name="module_ok">
              <xsl:call-template name="check_module_exists">
                <xsl:with-param name="module" select="$module"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:choose>
              <xsl:when test="$module_ok='true'">
                <module>
                  <xsl:attribute name="name">
                    <xsl:value-of select="$module"/>
                  </xsl:attribute>
                </module>
              </xsl:when>
              <xsl:otherwise>
                <error>
                  <xsl:value-of select="$module"/>
                </error>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <xsl:variable name="resource" 
              select="substring-after(substring-before(.,'.xml'),'../../data/resources/')"/>
            <resource>
              <xsl:attribute name="name">
                <xsl:value-of select="$resource"/>
              </xsl:attribute>
            </resource>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:for-each>
  </xsl:template>

<xsl:template name="depends-on-recurse-mim-x">
  <xsl:param name="todo" select="' '"/>
  <xsl:param name="done" />
    <!--
         For each interfaced schema:
         Check if not already done
         Otherwise output and add to todo
         -->
    <xsl:variable name="this-schema" select="substring-before(concat(normalize-space($todo),' '),' ')"/>
    <xsl:if test="$this-schema">

      <!-- open up the relevant schema  - which can be a resource or a mim schema -->
      <xsl:variable name="file_name">
        <xsl:choose>
          <xsl:when test="substring-before($this-schema,'_mim')">
            <xsl:value-of select="concat('../../data/modules/',substring-before($this-schema,'_mim'),'/mim.xml')"/>
          </xsl:when>
          <xsl:when test="substring-before($this-schema,'_schema')">
            <xsl:value-of select="concat('../../data/resources/',$this-schema,'/',$this-schema,'.xml')"/>
          </xsl:when>
          <xsl:when test="starts-with($this-schema,'aic_')">
            <xsl:value-of select="concat('../../data/resources/',$this-schema,'/',$this-schema,'.xml')"/>
          </xsl:when>
          <xsl:otherwise>
            BAD SCHEMA name !!! <xsl:value-of select="$this-schema"/>
        </xsl:otherwise>
      </xsl:choose>
  </xsl:variable>
  
  <xsl:if test="not(contains($done,concat(' ',$this-schema,' ')))">
    <x><xsl:value-of select="translate($file_name,'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
    'abcdefghijklmnopqrstuvwxyz')" /></x>
  </xsl:if>
  
  <xsl:variable name="mim-node" select="document($file_name)/express"/>
  
  
  <!-- get the list of schemas for this level that have not already been done -->

  <xsl:variable name="my-kids" >
    <xsl:if test="not(contains($done,concat(' ',$this-schema,' ')))" >
      <xsl:apply-templates select="$mim-node//interface" mode="interface-schemas">
        <xsl:with-param name="done" select="$done" />
        </xsl:apply-templates>
      </xsl:if>
    </xsl:variable>

    <xsl:variable name="after" select="normalize-space(concat(substring-after($todo, $this-schema),$my-kids))"/>
                          
    <xsl:if test="$after">
      <xsl:call-template name="depends-on-recurse-mim-x">
        <xsl:with-param name="todo" select="$after"/>
        <xsl:with-param name="done" select="concat($done,' ',$this-schema,' ')"/>
      </xsl:call-template>
    </xsl:if>
    
  </xsl:if>

</xsl:template>

<xsl:template match="interface" mode="interface-schemas">
  <xsl:param name="done"/>
  <xsl:if test="not(contains($done,@schema))">
    <xsl:value-of select="concat(' ',@schema,' ')"/> 
  </xsl:if>
</xsl:template>

</xsl:stylesheet>












