<?xml version="1.0" encoding="utf-8"?>
<!--
$Id: build.xsl,v 1.9 2003/02/26 02:12:17 thendrix Exp $
   Author:  Rob Bodington, Eurostep Limited
   Owner:   Developed by Eurostep Limited http://www.eurostep.com
   Purpose: To build the initial ANT build package. 
-->

<xsl:stylesheet
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:exslt="http://exslt.org/common"
  exclude-result-prefixes="exslt"
  version="1.0">
  
  <xsl:import href="../../xsl/common.xsl"/>

  <xsl:output method="xml" indent="yes"/>

    <xsl:variable name="LOWER" select="'abcdefghijklmnopqrstuvwxyz_'"/>
    <xsl:variable name="UPPER" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
        
  <xsl:template match="ballot_index">
  
    <xsl:if test="count(//ap_doc) &gt; 1">
      <xsl:message>
        Error - A ballot cycle should only contain one AP document (ap_doc).
      </xsl:message>
    </xsl:if>

    <xsl:if test="count(//res_doc) &gt; 1">
      <xsl:message>
        Error - A ballot cycle should only contain one Resource part document (res_doc).
      </xsl:message>
    </xsl:if>



    <xsl:text>
    </xsl:text>
    <xsl:comment>
      This file has been auto generated by:
      ant -buildfile buildbuild.xml
    </xsl:comment>


    <!-- 
         note the use of xsl:extension-element-prefixes to prevent the
         output of the names space
         -->
    <project
      xsl:extension-element-prefixes="exslt"
      name="ballothtml" default="all" basedir="../../..">
      <xsl:text>
      </xsl:text>
      <xsl:element name="target">
  <xsl:attribute name="name">variables</xsl:attribute>
  <xsl:attribute name="description">initialize variables</xsl:attribute>
  <xsl:element name="tstamp"/>
  <xsl:element name="property">
    <xsl:attribute name="name">BALLLOTSTYLES</xsl:attribute>
    <xsl:attribute name="value">ballots/xsl</xsl:attribute>
  </xsl:element>
  
  <xsl:element name="property">
    <xsl:attribute name="name">APDOCS_INLINE_ERRORS</xsl:attribute>
    <xsl:attribute name="value">'yes'</xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">MODULES_INLINE_ERRORS</xsl:attribute>
    <xsl:attribute name="value">'yes'</xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">DEPMODULES_INLINE_ERRORS</xsl:attribute>
    <xsl:attribute name="value">'yes'</xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">OUTPUT_RCS</xsl:attribute>
    <xsl:attribute name="value">NO</xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">OUTPUT_ISSUES</xsl:attribute>
    <xsl:attribute name="value">NO</xsl:attribute>
  </xsl:element>
  
  <xsl:element name="property">
    <xsl:attribute name="name">OUTPUT_APDOCS_BACKGROUND</xsl:attribute>
    <xsl:choose>
      <xsl:when test="./@output_apdocs_background='YES'">
	<xsl:attribute name="value">YES</xsl:attribute>
      </xsl:when>            
      <xsl:otherwise>
	<xsl:attribute name="value">NO</xsl:attribute>            
      </xsl:otherwise>
    </xsl:choose>
  </xsl:element>

  <xsl:element name="property">
    <xsl:attribute name="name">CONFIRMATORY_BALLOT</xsl:attribute>
    <xsl:choose>
      <xsl:when test="./@confirmatory_ballot='YES'">
	<xsl:attribute name="value">YES</xsl:attribute>
      </xsl:when>            
      <xsl:otherwise>
	<xsl:attribute name="value">NO</xsl:attribute>            
      </xsl:otherwise>
    </xsl:choose>
  </xsl:element>

  <xsl:text>
  </xsl:text>
  <xsl:comment>If OUTPUT_APDOCS_BACKGROUND 'YES' then this is the
  image for the ap documents in package</xsl:comment>
  <xsl:element name="property">
    <xsl:attribute name="name">APDOCS_BACKGROUND</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:choose>
	<xsl:when test="./@background.image.apdocs">
	  <xsl:value-of select="./@background.image.apdocs"/>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:value-of select="'refonly.gif'"/>
	</xsl:otherwise>
      </xsl:choose>
    </xsl:attribute>
  </xsl:element>

  <xsl:element name="property">
    <xsl:attribute name="name">OUTPUT_MODULES_BACKGROUND</xsl:attribute>
    <!-- 
	 When an AP document is being balloted as well modules, 
	 the default is a grey image stepmod/images/greybackground.jpg
	 otherwise the modules have no background
    -->
    <xsl:choose>
      <xsl:when test="//ap_doc">
	<xsl:attribute name="value">YES</xsl:attribute>
      </xsl:when>
      <xsl:otherwise>
	<xsl:attribute name="value">NO</xsl:attribute>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:element>
  <xsl:text>
  </xsl:text>
  <xsl:comment>If OUTPUT_MODULES_BACKGROUND 'YES' then this is the
  image for the modules in package</xsl:comment>
  <xsl:element name="property">
    <xsl:attribute name="name">MODULES_BACKGROUND</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:choose>
	<xsl:when test="./@background.image.modules">
	  <xsl:value-of select="./@background.image.modules"/>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:value-of select="'greybackground.jpg'"/>
	</xsl:otherwise>
      </xsl:choose>
    </xsl:attribute>
  </xsl:element>

  <xsl:element name="property">
    <xsl:attribute name="name">OUTPUT_DEPMODULES_BACKGROUND</xsl:attribute>
    <xsl:choose>
      <xsl:when test="./@output.dependent.modules.background='NO'">
	<xsl:attribute name="value">NO</xsl:attribute>
      </xsl:when>
      <xsl:otherwise>
	<xsl:attribute name="value">YES</xsl:attribute>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:element>
  <xsl:text>
  </xsl:text>
  <xsl:comment>If OUTPUT_DEPMODULES_BACKGROUND 'YES' then this is the
  image for the dependent modules in package</xsl:comment>
  <xsl:element name="property">
    <xsl:attribute name="name">DEPMODULES_BACKGROUND</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:choose>
	<xsl:when test="./@background.image.dependent.modules">
	  <xsl:value-of select="./@background.image.dependent.modules"/>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:value-of select="'refonly.gif'"/>
	</xsl:otherwise>
      </xsl:choose>
    </xsl:attribute>
  </xsl:element>


  <xsl:element name="property">
    <xsl:attribute name="name">OUTPUT_RESOURCES_BACKGROUND</xsl:attribute>
	<xsl:attribute name="value">NO</xsl:attribute>
  </xsl:element>
  <xsl:text>
  </xsl:text>
  <xsl:comment>If OUTPUT_RESOURCES_BACKGROUND 'YES' then this is the
  image for the dependent modules in package</xsl:comment>
  <xsl:element name="property">
    <xsl:attribute name="name">RESOURCES_BACKGROUND</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:choose>
	<xsl:when test="./@background.image.dependent.resources">
	  <xsl:value-of select="./@background.image.dependent.resources"/>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:value-of select="'refonly.gif'"/>
	</xsl:otherwise>
      </xsl:choose>
    </xsl:attribute>
  </xsl:element>

  <xsl:element name="property">
    <xsl:attribute name="name">OUTPUT_DEPRESOURCES_BACKGROUND</xsl:attribute>
    <xsl:choose>
      <xsl:when test="./@output.dependent.resources.background='NO'">
	<xsl:attribute name="value">NO</xsl:attribute>
      </xsl:when>            
      <xsl:otherwise>
	<xsl:attribute name="value">YES</xsl:attribute>            
      </xsl:otherwise>
    </xsl:choose>
  </xsl:element>
  <xsl:text>
  </xsl:text>
  <xsl:comment>If OUTPUT_DEPRESOURCES_BACKGROUND 'YES' then this is the
  image for the dependent modules in package</xsl:comment>
  <xsl:element name="property">
    <xsl:attribute name="name">DEPRESOURCES_BACKGROUND</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:choose>
	<xsl:when test="./@background.image.dependent.resources">
	  <xsl:value-of select="./@background.image.dependent.resources"/>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:value-of select="'refonly.gif'"/>
	</xsl:otherwise>
      </xsl:choose>
    </xsl:attribute>
  </xsl:element>


  <xsl:element name="property">
    <xsl:attribute name="name">STEPMOD_DATA_MODULES</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="'../../../../data/modules/'"/>
    </xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">STEPMOD_DATA_APS</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="'../../../../data/application_protocol/'"/>
    </xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">STEPMOD_DATA_RESOURCES</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="'../../../../data/resources/'"/>
    </xsl:attribute>
  </xsl:element>

  
  <xsl:element name="property">
    <xsl:attribute name="name">STEPMODSTYLES</xsl:attribute>
    <xsl:attribute name="value">xsl</xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">STEPMODDTDDIR</xsl:attribute>
    <xsl:attribute name="value">dtd</xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">DTDDIR</xsl:attribute>
    <xsl:attribute name="value">ballots/dtd</xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">ISODIR</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="concat('ballots/isohtml/',@name)"/>
    </xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">ABSTRACTDIR</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="concat('ballots/isohtml/',@name,'/abstracts')"/>
    </xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">EXPRESSDIR</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="concat('ballots/isohtml/',@name,'/express')"/>
    </xsl:attribute>
  </xsl:element>

  <xsl:element name="property">
    <xsl:attribute name="name">APDOCMENU</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="concat('./ballots/ballots/',@name,'/menubar_build.xml')"/>
    </xsl:attribute>
  </xsl:element>


  <xsl:element name="property">
    <xsl:attribute name="name">ISOMENU</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="concat('./ballots/ballots/',@name,'/menubar_iso.xml')"/>
    </xsl:attribute>
  </xsl:element>

  <xsl:element name="property">
    <xsl:attribute name="name">BALLOTNAME</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="@name"/>
    </xsl:attribute>
  </xsl:element>

  <xsl:element name="property">
    <xsl:attribute name="name">BALLOTDIR</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="concat('ballots/ballots/',@name)"/>
    </xsl:attribute>
  </xsl:element>
  <xsl:element name="property">
    <xsl:attribute name="name">BALLOTMENU</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="concat('./ballots/ballots/',@name,'/menubar_ballot.xml')"/>
    </xsl:attribute>
  </xsl:element>
  
  <xsl:element name="property">
    <xsl:attribute name="name">ARCHIVE</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:choose>
	<xsl:when test="string-length(./@wg.number.ballot_package) > 3">
	  <xsl:value-of select="concat(translate(normalize-space(translate(./@wg.number.ballot_package,$UPPER,$LOWER)),' ',''),'-',@name,'-${DSTAMP}')"/>
	</xsl:when>
	<xsl:otherwise>
	  <xsl:value-of select="concat('wgxxnxxxx' ,'-',@name,'-${DSTAMP}')"/>                
	</xsl:otherwise>
      </xsl:choose>
    </xsl:attribute>
  </xsl:element>
  
  <xsl:element name="property">
    <xsl:attribute name="name">DATE</xsl:attribute>
    <xsl:attribute name="value">
      <xsl:value-of select="'${DSTAMP}'"/>
    </xsl:attribute>
  </xsl:element>

  <!-- assumption that if the AP document is specified, then all the
       modules are part of that document -->
  <xsl:choose>
    <xsl:when test="./ballot_package/ap_doc">
      <xsl:apply-templates select="." mode="apdoc_variables"/>
      <xsl:apply-templates select="." mode="dependent_mod_res_variables"/>
      <xsl:if test="./ballot_package/module">
	<xsl:apply-templates select="."  mode="modules_variables"/>
      </xsl:if>
    </xsl:when>
    <xsl:when test="./ballot_package/module">
      <xsl:apply-templates select="."  mode="modules_variables"/>
      <xsl:apply-templates select="." mode="dependent_mod_res_variables"/>
    </xsl:when>
    <xsl:when test="./ballot_package/res_doc">
      <xsl:apply-templates select="."  mode="resdoc_variables"/>
      <xsl:apply-templates select="." mode="dependent_mod_res_variables"/>
    </xsl:when>
    <xsl:otherwise>
      <xsl:message>WARNING --- ONLY DEALING WITH MODULES, RESOURCE DOCUMENTS, AND AP DOCUMENTS!!!!</xsl:message>
    </xsl:otherwise>
  </xsl:choose>
  <xsl:apply-templates select="."  mode="abstract_variable"/>
</xsl:element>
      
      <xsl:text>
      </xsl:text>
      <target 
        xsl:extension-element-prefixes="exslt"        
        name="init" depends="variables">

        <!-- output the menubar file -->
        <xsl:if test="//ap_doc">
          <xsl:apply-templates select="." mode="menubar_build"/>
        </xsl:if>

        <xsl:element name="mkdir">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>          
        </xsl:element>

        <xsl:element name="copy">
          <xsl:attribute name="todir">
            <xsl:value-of select="'${ISODIR}/images'"/>
          </xsl:attribute>
          <fileset dir="images"/>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>
      
      <xsl:variable name="all_target1" select="'init, depresources, isoindex, normref_check'"/>
      <xsl:variable name="all_target2">
        <xsl:choose>
          <xsl:when test="./ballot_package/ap_doc">
            <xsl:value-of select="concat($all_target1, ', isoapdoc, isodepmodules')"/>
          </xsl:when>
          <xsl:when test="./ballot_package/res_doc">
            <xsl:value-of select="concat($all_target1, ', isoresdoc, resources')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$all_target1"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="all_target3">
        <xsl:choose>
          <xsl:when test="./ballot_package/module">
            <xsl:value-of select="concat($all_target2, ', isomodules, isodepmodules')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$all_target2"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>

      <xsl:variable name="all_target" select="concat($all_target3,', copy_abstracts, copy_express')"/>
      <target
        xsl:extension-element-prefixes="exslt"        
        name="all" depends="{$all_target}" 
        description="Create HTML for everything"/> 

    <xsl:message>
      Created the ant build file: build.xml
      Targets are: <xsl:value-of select="$all_target"/> 
    </xsl:message>
      <xsl:text>
      </xsl:text>
       <target
        xsl:extension-element-prefixes="exslt"        
        name="clean" depends="variables" 
        description="delete generated files">
        <xsl:element name="delete">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>
       <target
        xsl:extension-element-prefixes="exslt"        
        name="zip" depends="all" description="create .zip file">
        <xsl:element name="zip">
          <xsl:attribute name="zipfile">
            <xsl:value-of select="'${ISODIR}/${ARCHIVE}.zip'"/>
          </xsl:attribute>
          <xsl:attribute name="basedir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="excludes">
            <xsl:value-of select="'**/*.zip'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**'"/>
          </xsl:attribute>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>





    <target name="validhtml" depends="variables" description="validate html">
      <property name="HTMLDTDCAT" value="../../../etc/html/dtds/HTML4.cat"/>
      <property name="HTMLVALID" value="&quot;C:/sp1.3.4/bin/nsgmls.exe&quot;"/>   
      <property name="HTMLNAME" value="&quot;*.htm&quot;" />
      <xsl:element name="property">
        <xsl:attribute name="name">HTMLVALIDERR</xsl:attribute>
        <xsl:attribute name="value">${BALLOTDIR}/<xsl:value-of select="concat(@name,'-${DSTAMP}')"/>-html-valid-errors.txt</xsl:attribute>
      </xsl:element>

      <echo>Validating HTML ISODIR ${ISODIR}</echo> 
      <echo> HTMLVALID ${HTMLVALID}</echo>
      <echo> HTMLDTDCAT ${HTMLDTDCAT}</echo>
      <echo> HTMLVALIDERR ${HTMLVALIDERR}</echo>

        <xsl:element name="exec">
          <xsl:attribute name="executable">c:/cygwin/bin/find</xsl:attribute>
          <xsl:attribute name="dir">${ISODIR}</xsl:attribute>

          <xsl:attribute name="output">${HTMLVALIDERR}</xsl:attribute>
          <xsl:element name="arg">
            <xsl:attribute name="value">.</xsl:attribute>
          </xsl:element>
          <xsl:element name="arg">
            <xsl:attribute name="value">-name</xsl:attribute>
          </xsl:element>
          <xsl:element name="arg">
            <xsl:attribute name="value">${HTMLNAME}</xsl:attribute>
          </xsl:element>
               <xsl:element name="arg">
                 <xsl:attribute name="value">-exec</xsl:attribute>
               </xsl:element> 
               <xsl:element name="arg">
                 <xsl:attribute name="value">${HTMLVALID}</xsl:attribute>
               </xsl:element>
               <xsl:element name="arg">
            <xsl:attribute name="value">-c${HTMLDTDCAT}</xsl:attribute>
          </xsl:element>
          
          <xsl:element name="arg">
            <xsl:attribute name="value">-s</xsl:attribute>
          </xsl:element>
          <xsl:element name="arg">
            <xsl:attribute name="value">&#x7B;&#x7D;</xsl:attribute>
          </xsl:element>
          <xsl:element name="arg">
            <xsl:attribute name="value">&quot;&#x3B;&quot;</xsl:attribute>
          </xsl:element>
	</xsl:element>


        <xsl:text>
        </xsl:text>

      </target>

   <target name="validlinks" depends="variables">
     <property name="HTMLLINKERR" value="${{BALLOTDIR}}/${{BALLOTNAME}}-${{DSTAMP}}-html-link-errors.txt"/>
     <java jar="c:\apps\linkve~1\htmltools.jar"
	   fork="true"
	   output="${{HTMLLINKERR}}"
	   >
       <arg value="-x"/>
       <arg value="-c"/>
       <arg value="file:${{ISODIR}}/index.htm"/>
     </java>
   </target>


  <!-- generate the target "normref_check" -->
  <!-- Note - that this target should be included in isoindex, but left out
       as not all publication packages have a normref_check file yet -->
    <xsl:text>
    </xsl:text>
    <target name="normref_check" depends="init" 
      description="Create normative reference check">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${DTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${BALLLOTSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${BALLOTDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xml'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${BALLOTDIR}/*.htm*'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      <xsl:element name="style">
        <xsl:attribute name="in">
          <xsl:value-of select="'${BALLOTDIR}/normref_check.xml'"/>
        </xsl:attribute>
        <xsl:attribute name="out">
          <xsl:value-of select="'${ISODIR}/normref_check.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/pub_ballot/normref_check.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <param name="stepmodhome" expression="."/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'date'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DATE}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
    </target>


      <xsl:text>
      </xsl:text>


       <target
        xsl:extension-element-prefixes="exslt"        
        name="isoindex" depends="init" 
        description="Create HTML index">
        <dependset>
          <xsl:element name="srcfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'${DTDDIR}'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
            </xsl:attribute>
          </xsl:element>
          <xsl:element name="srcfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'${BALLLOTSTYLES}'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'**/*.xsl'"/>
            </xsl:attribute>
          </xsl:element>
          <xsl:element name="srcfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'${BALLOTDIR}'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'**/*.xml'"/>
            </xsl:attribute>
          </xsl:element>
          <xsl:element name="targetfileset">
            <xsl:attribute name="dir">
              <xsl:value-of select="'.'"/>
            </xsl:attribute>
            <xsl:attribute name="includes">
              <xsl:value-of select="'${BALLOTDIR}/*.htm*'"/>
            </xsl:attribute>
          </xsl:element>
        </dependset>
        
        <xsl:element name="style">
          <xsl:attribute name="in">
            <xsl:value-of select="'${BALLOTDIR}/ballot_summary.xml'"/>
          </xsl:attribute>
          <xsl:attribute name="out">
            <xsl:value-of select="'${ISODIR}/index.htm'"/>
          </xsl:attribute>
          <xsl:attribute name="destdir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="extension">
            <xsl:value-of select="'.htm'"/>
          </xsl:attribute>
          <xsl:attribute name="style">
            <xsl:value-of select="'${BALLLOTSTYLES}/ballot_summary.xsl'"/>
          </xsl:attribute>
          <param name="output_type" expression="HTM"/>
          <param name="stepmodhome" expression="."/>
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'date'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="'${DATE}'"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:element>
      </target>
      
      <xsl:text>
      </xsl:text>
      
      <!-- assumption that if the AP document is specified, then all the
           modules are part of that document -->
      <xsl:choose>
        <xsl:when test="./ballot_package/ap_doc">
          <xsl:apply-templates select="." mode="apdoc_target"/>
          <xsl:apply-templates select="." mode="dependent_modules_target">
            <xsl:with-param name="menu" select="'APDOCMENU'"/>
          </xsl:apply-templates>
          <xsl:if test="./ballot_package/module">
            <xsl:apply-templates select="." mode="modules_target">
              <xsl:with-param name="menu" select="'APDOCMENU'"/>
            </xsl:apply-templates>
          </xsl:if>
        </xsl:when>
        <xsl:when test="./ballot_package/module">
          <xsl:apply-templates select="." mode="modules_target">
            <xsl:with-param name="menu" select="'ISOMENU'"/>
          </xsl:apply-templates>
          <xsl:apply-templates select="." mode="dependent_modules_target">
            <xsl:with-param name="menu" select="'ISOMENU'"/>
          </xsl:apply-templates>
        </xsl:when>
        <xsl:when test="./ballot_package/res_doc">
          <xsl:apply-templates select="." mode="resdoc_target">
            <xsl:with-param name="menu" select="'ISOMENU'"/>
          </xsl:apply-templates>
          <xsl:apply-templates select="." mode="resources_target">
            <xsl:with-param name="menu" select="'ISOMENU'"/>
          </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
          <xsl:message>WARNING --- ONLY DEALING WITH MODULES AND AP DOCUMENTS!!!!</xsl:message>
        </xsl:otherwise>
      </xsl:choose>
      
      <xsl:apply-templates select="." mode="dependent_resources_target"/>      
      <xsl:apply-templates select="." mode="abstracts_target"/>      
      <xsl:apply-templates select="." mode="express_target"/>      

    </project>

  </xsl:template>

  <xsl:template match="module">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,@name,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>


  <xsl:template match="ballot_index" mode="menubar_build">
    <xsl:variable name="ap_doc" select="//ap_doc/@name"/>
    <xsl:variable name="ap_doc_path"
      select="concat('../../data/application_protocols/',$ap_doc,'/application_protocol.xml')"/>
    <xsl:variable name="ap_module" 
      select="document($ap_doc_path)/application_protocol/@module_name"/>

    <xsl:variable name="ap_doc_href"
      select="concat('../../application_protocols/',$ap_doc)"/>
    <xsl:variable name="ap_module_href"
      select="concat('../../modules/',$ap_module,'/sys/cover.htm')"/>

    <xsl:element name="echo">
      <xsl:attribute name="file">
        <xsl:value-of select="'${APDOCMENU}'"/>
      </xsl:attribute>
      &lt;menubar&gt;
        &lt;menuitem
          item="AP scope"
          relative.url="<xsl:value-of select="concat($ap_doc_href,'/sys/1_scope.htm')"/>"/&gt;

        &lt;menuitem
          item="AP module"
          relative.url="<xsl:value-of select="$ap_module_href"/>"/&gt;

        &lt;menuitem
          item="AP contents"
          relative.url="<xsl:value-of select="concat($ap_doc_href,'/sys/contents.htm')"/>"/&gt;

        &lt;menuitem
          item="AP index"
          relative.url="<xsl:value-of select="concat($ap_doc_href,'/sys/index_apdoc.htm')"/>"/&gt;
      &lt;/menubar&gt;
      </xsl:element>
  </xsl:template>

  <xsl:template match="ballot_index" mode="apdoc_variables">
    <xsl:element name="property">
      <xsl:attribute name="name">APDIR</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:value-of select="concat('data/application_protocols/',./ballot_package/ap_doc/@name)"/>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/**/*.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APXSL</xsl:attribute>
      <xsl:attribute name="value">xsl/ap_doc</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCGIFS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/*.gif</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCJPEGS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/*.jpeg</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCJPGS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/*.jpg</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCPNGS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/*.png</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSHOMEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/home.xml</xsl:attribute>
    </xsl:element>
        
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSAAMIDEFXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/aamidef*.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSDATAPLANXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/data_plan_*.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCSCOPEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/1_scope.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCREFSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/2_refs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCDEFSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/3_defs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINFOREQSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/4_info_reqs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCMAINXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/5_main.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCCCSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/6_ccs.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXAAM</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_aam.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCABSTRACT</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/abstract.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_arm_expg.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXMIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_mim_expg.xml</xsl:attribute>
    </xsl:element>
    


    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXCHANGESXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_changes.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXCOMP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_comp_int.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXEXPLFXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_exp_lf.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXGUIDEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_guide.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXIMPMETHXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_imp_meth.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXOBJREGXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_obj_reg.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXPICSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_pics.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXSHORTNAMESXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_shortnames.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCANNEXTECHDISCXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/annex_tech_disc.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCBIBLIOXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/biblio.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCCONTENTSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/contents.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXAPDOCXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_apdoc.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCCOVERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/cover.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFOREWORDXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/foreword.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMEAPTITLEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_aptitle.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMECONTENTTITLEXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_contenttitle.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMEINDEXXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_index.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMETOCXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_toc.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCFRAMETOCSHORTXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/frame_toc_short.xml</xsl:attribute>
    </xsl:element>
 
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCHELPXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/help.xml</xsl:attribute>
    </xsl:element>
 
    <xsl:element name="property">
      <xsl:attribute name="name">INDEXARMEXPRESSNAVXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express_nav.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">INDEXARMEXPRESSNAVINNERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express_nav_inner.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">INDEXARMEXPRESSNAVTOPXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express_nav_top.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMEXPRESSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMEXPRESSINNERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMEXPRESSTOPXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_express_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMAPPINGSXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_mappings.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMAPPINGSINNERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_mappings_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMAPPINGSTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_mappings_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMODULES</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_modules.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMODULESINNER</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_modules_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXARMMODULESTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_arm_modules_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMEXPRESS</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_express.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMEXPRESSINNERXML</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_express_inner.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMEXPRESSTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_express_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMMODULES</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_modules.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMMODULESINNER</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_modules_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXMIMMODULESTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_mim_modules_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXRESOURCES</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_resources.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXRESOURCESINNER</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_resources_inner.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINDEXRESOURCESTOP</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/index_resources_top.xml</xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">APDOCINTRODUCTION</xsl:attribute>
      <xsl:attribute name="value">${APDIR}/sys/introduction.xml</xsl:attribute>
    </xsl:element>
  </xsl:template>
  
  <xsl:template match="ballot_index" mode="resdoc_variables">
    <!-- the Resource documents -->

      <xsl:variable name="resdoc_name" select="./ballot_package/res_doc/@name"/>
      <xsl:variable name="resdoc_file" 
        select="concat('../../data/resource_docs/',$resdoc_name,'/resource.xml')"/>	    
      <xsl:variable name="resdoc_node" select="document($resdoc_file)"/>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCDIR</xsl:attribute>
      <xsl:attribute name="value">
	<xsl:value-of select="concat('data/resource_docs/',./ballot_package/res_doc/@name)"/>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCS</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/**/*.xml</xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCGIFS</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/*.gif</xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCJPEGS</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/*.jpeg</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCJPGS</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/*.jpg</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCPNGS</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/*.png</xsl:attribute>
    </xsl:element>
    

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCINDEXXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/resdocindex.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCABSTRACTXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/abstract.xml</xsl:attribute>
    </xsl:element>



    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCCONTENTSXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/contents.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCSCOPEXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/1_scope.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCREFSXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/2_refs.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCDEFSXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/3_defs.xml</xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCSCHEMAXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/*_schema.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCASHORTNAMESXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/a_short_names.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCBOBJREGXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/b_obj_reg.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCBIBLIOXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/biblio.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCCOVERXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/cover.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCCEXPSCHEMAXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/c_exp_schema_*.xml</xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCCEXPXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/c_exp.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCDEXPGXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/d_expg.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCTECHDISCUSSIONXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/tech_discussion.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCEXAMPLESXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/examples.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCADDSCOPE</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/add_scope.xml</xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCFOREWORDXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/foreword.xml</xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCINTRODUCTIONXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/sys/introduction.xml</xsl:attribute>
    </xsl:element>
    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCSCHEMADIAGXML</xsl:attribute>
      <xsl:attribute name="value">${RESDOCDIR}/schema_diagexpg*.xml</xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCRESOURCESCHEMAXML</xsl:attribute>
      <xsl:attribute name="value" >
	<xsl:apply-templates select="$resdoc_node/resource/schema">
	  <xsl:with-param name="prefix" select="'data/resources/'"/>
	  <xsl:with-param name="suffix" select="'.xml'"/>
	</xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCRESOURCESCHEMAEXP</xsl:attribute>
      <xsl:attribute name="value" >
	<xsl:apply-templates select="$resdoc_node/resource/schema">
	  <xsl:with-param name="prefix" select="'data/resources/'"/>
	  <xsl:with-param name="suffix" select="'.exp'"/>
	</xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>


    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCRESOURCESCHEMAGIF</xsl:attribute>
      <xsl:attribute name="value" >
	<xsl:apply-templates select="$resdoc_node/resource/schema" mode="descriptions">
	  <xsl:with-param name="prefix" select="'data/resources/'"/>
	  <xsl:with-param name="suffix" select="'*.gif'"/>
	</xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCRESOURCESCHEMADESCRIPTIONSJPEG</xsl:attribute>
      <xsl:attribute name="value" >
	<xsl:apply-templates select="$resdoc_node/resource/schema" mode="descriptions">
	  <xsl:with-param name="prefix" select="'data/resources/'"/>
	  <xsl:with-param name="suffix" select="'*.jpeg'"/>
	</xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCRESOURCESCHEMADESCRIPTIONSJPG</xsl:attribute>
      <xsl:attribute name="value" >
	<xsl:apply-templates select="$resdoc_node/resource/schema" mode="descriptions">
	  <xsl:with-param name="prefix" select="'data/resources/'"/>
	  <xsl:with-param name="suffix" select="'*.jpg'"/>
	</xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCRESOURCESCHEMADESCRIPTIONSPNG</xsl:attribute>
      <xsl:attribute name="value" >
	<xsl:apply-templates select="$resdoc_node/resource/schema" mode="descriptions">
	  <xsl:with-param name="prefix" select="'data/resources/'"/>
	  <xsl:with-param name="suffix" select="'*.png'"/>
	</xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>



    <xsl:element name="property">
      <xsl:attribute name="name">RESDOCRESOURCESEXPGXML</xsl:attribute>
      <xsl:attribute name="value" >
	<xsl:apply-templates select="$resdoc_node/resource/schema">
	  <xsl:with-param name="prefix" select="'data/resources/'"/>
	  <xsl:with-param name="suffix" select="'expg*.xml'"/>
	</xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>


  </xsl:template>

  <xsl:template match="ballot_index" mode="modules_variables">
    <!-- the Modules -->
    <xsl:element name="property">
      <xsl:attribute name="name">EXPRESS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">GIFS</xsl:attribute>
      <xsl:attribute name="value">
        <!-- not sure why copying EXPRESS
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates> -->
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.gif'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.png'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.jpg'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">CONTENTSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/contents.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MODULES</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/**/*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">SCOPEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/1_scope.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">REFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/2_refs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DEFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/3_defs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">INFOREQSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/4_info_reqs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MAINXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_main.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">MAPPINGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mapping.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">INDEXXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/index.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ABSTRACTXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/abstract.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ASHORTNAMESXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/a_short_names.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">BOBJREGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/b_obj_reg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">BIBLIOXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/biblio.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">MODINDEXXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/modindex.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">CARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/c_arm_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">COVERXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/cover.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/d_mim_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPARMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:variable name="long_forms">
      <xsl:call-template name="get_long_form_modules">
        <xsl:with-param name="modules" select="ballot_package/module"/>
        <xsl:with-param name="prefix" select="'data/modules/'"/>
        <xsl:with-param name="suffix" select="'/sys/e_exp_arm_lf.xml'"/>
      </xsl:call-template>
    </xsl:variable>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPARMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <!-- <xsl:value-of select="$long_forms"/> -->        
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm_lf.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPMIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">EEXPMIMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <!--    <xsl:value-of select="$long_forms"/> -->
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim_lf.xml'"/>
        </xsl:apply-templates> 
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">FGUIDEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/f_guide.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">FOREWORDXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/foreword.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">INTRODUCTIONXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/introduction.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ARMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">ARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/armexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mimexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">ARMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">MIMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="ballot_package/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
  </xsl:template>

  <!-- output the variable for the dependent resources for a resdoc -->
  <xsl:template match="ballot_index" mode="dependent_res_variables">
  
  </xsl:template>


  <!-- output the variable for the dependent modules and resources -->
  <xsl:template match="ballot_index" mode="dependent_mod_res_variables">
    <xsl:param name="menu"/>

    <xsl:variable name="mim_modules">
      <xsl:call-template name="get_mod_node_set"/>
    </xsl:variable>
    <xsl:variable name="mim_modules_node_set" select="exslt:node-set($mim_modules)"/>

    <!--    
    <xsl:apply-templates select="$mim_modules_node_set/xmodule" mode="properties"/>
    <xsl:apply-templates select="$mim_modules_node_set/xresource" mode="properties"/>
    -->
    
    <!-- The resources -->
    <xsl:element name="property">
      <xsl:attribute name="name">DRESOURCESXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DRESOURCESEXP</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'.exp'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <!-- dont need diagrams for dependent resources. 
    <xsl:element name="property">
      <xsl:attribute name="name">DRESOURCESSCHEMAEXPGGIFS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'expg*.gif'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DRESOURCESSCHEMAEXPGXMLS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/resource">
          <xsl:with-param name="prefix" select="'data/resources/'"/>
          <xsl:with-param name="suffix" select="'expg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
-->

    <!-- The dependent modules -->
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEXPRESS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODGIFS</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.exp'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.gif'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.png'"/>
          <xsl:with-param name="terminate" select="'NO'"/>
        </xsl:apply-templates>
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/*.jpg'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODCONTENTSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/contents.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMODULES</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/**/*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODSCOPEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/1_scope.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODREFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/2_refs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODDEFSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/3_defs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODINFOREQSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/4_info_reqs.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMAINXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_main.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMAPPINGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mapping.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/5_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODINDEXXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/index.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODABSTRACTXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/abstract.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODASHORTNAMESXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/a_short_names.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODBOBJREGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/b_obj_reg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODBIBLIOXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/biblio.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:element name="property">
      <xsl:attribute name="name">DMODMODINDEXXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/modindex.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODCARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/c_arm_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODCOVERXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/cover.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODDMIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/d_mim_expg.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPARMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>

    <xsl:variable name="long_forms">
      <xsl:call-template name="get_long_form_modules">
        <xsl:with-param name="modules" select="$mim_modules_node_set/module"/>
        <xsl:with-param name="prefix" select="'data/modules/'"/>
        <xsl:with-param name="suffix" select="'/sys/e_exp_mim.xml'"/>        
      </xsl:call-template>
    </xsl:variable>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPARMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <!-- <xsl:value-of select="$long_forms"/> -->
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_arm_lf.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPMIMXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODEEXPMIMLFXML</xsl:attribute>
      <xsl:attribute name="value">
        <!-- <xsl:value-of select="$long_forms"/> -->
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/e_exp_mim_lf.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODFGUIDEXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/f_guide.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODFOREWORDXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/foreword.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODINTRODUCTIONXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/sys/introduction.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
      
    <xsl:element name="property">
      <xsl:attribute name="name">DMODARMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMDESCRIPTIONSXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim_descriptions.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODARMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/armexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMEXPGXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mimexpg*.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODARMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/arm.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
    
    <xsl:element name="property">
      <xsl:attribute name="name">DMODMIMEXPXML</xsl:attribute>
      <xsl:attribute name="value">
        <xsl:apply-templates select="$mim_modules_node_set/module">
          <xsl:with-param name="prefix" select="'data/modules/'"/>
          <xsl:with-param name="suffix" select="'/mim.xml'"/>
        </xsl:apply-templates>
      </xsl:attribute>
    </xsl:element>
    
  </xsl:template>
  
<xsl:template match="ballot_index" mode="resdoc_target">
       <xsl:text>
    </xsl:text>
     <target
        xsl:extension-element-prefixes="exslt"        
        name="isoresdoc" depends="init" description="generate HTML for AP doc">
 
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <!-- 
          <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
        -->
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/resource_docs/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
     <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCABSTRACTXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_abstract.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'ballot'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${BALLOT}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
 

     <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_contents.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCINDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_resdocindex.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'ballot'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${BALLOT}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCSCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCREFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCDEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCSCHEMAXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_schema.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCEXPSCHEMAXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_c_exp_schema.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_c_exp.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCDEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_d_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCASHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_a_short_names.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCBOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_b_obj_reg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCRESOURCESEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCTECHDISCUSSIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_tech_discussion.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCEXAMPLESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_examples.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCADDSCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_add_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCBIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_biblio.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCOVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_cover.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCFOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_foreword.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCINTRODUCTIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_introduction.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCSCHEMADIAGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

 
    <xsl:variable name="resdoc_name">
      <xsl:apply-templates select="ballot_package/res_doc" mode="name"/>
    </xsl:variable>


    <xsl:variable name="resdoc_dir">
      <xsl:value-of select="concat('../../data/resource_docs/',$resdoc_name)"/>
    </xsl:variable>
     
     
    <xsl:variable name="resdoc_xml"
                select="concat($resdoc_dir,'/resource.xml')"/>

    <xsl:variable name="wgnumexp">
      <xsl:apply-templates select="document($resdoc_xml)/resource" mode="wgnumexp"/>
    </xsl:variable>


     <xsl:element name="concat">
        <xsl:attribute name="destfile">
          <xsl:value-of select="concat('${ISODIR}','/', 'wg12n',$wgnumexp,'.exp')" />
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCRESOURCESCHEMAEXP}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element> 

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}/${RESDOCDIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="concat('wg12n',$wgnumexp,'.exp')"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

    </target>


</xsl:template>


  <xsl:template match="ballot_index" mode="apdoc_target">
    <xsl:text>
    </xsl:text>
     <target
        xsl:extension-element-prefixes="exslt"        
        name="isoapdoc" depends="init" description="generate HTML for AP doc">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCJPEGS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCJPGS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCPNGS}'"/>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/${APDIR}/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSHOMEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/home.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMEAPTITLEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_aptitle.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMECONTENTTITLEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_contenttitle.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMEINDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_index.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
                <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMETOCXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_toc.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
                <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFRAMETOCSHORTXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/frame_toc_short.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
                <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCHELPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_help.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
                <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSAAMIDEFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSDATAPLANXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/imgfile.xsl'"/>
        </xsl:attribute>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>

        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCSCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCREFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCDEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINFOREQSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_4_info_reqs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCMAINXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_5_main.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCCCSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_6_ccs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCABSTRACT}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_abstract.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXAAM}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_aam.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXARMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_arm_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXMIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_mim_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXCHANGESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_changes.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXCOMP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_comp_int.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXEXPLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_exp_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

       <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXGUIDEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_guide.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXIMPMETHXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_imp_meth.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

       <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_obj_reg.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXPICSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_pics.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXSHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_shortnames.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCANNEXTECHDISCXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_annex_tech_disc.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCBIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_biblio.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCCONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_contents.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXAPDOCXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_index_apdoc.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCCOVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_cover.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'confirmatory_ballot'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
	    <xsl:value-of select="'${CONFIRMATORY_BALLOT}'"/>
	  </xsl:attribute>        
	</xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCFOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_foreword.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INDEXARMEXPRESSNAVXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express_nav.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INDEXARMEXPRESSNAVINNERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express_nav_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INDEXARMEXPRESSNAVTOPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express_nav_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMEXPRESSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMEXPRESSINNERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMEXPRESSTOPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_express_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMAPPINGSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_mappings.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMAPPINGSINNERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_mappings_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMAPPINGSTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_mappings_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMODULES}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_modules.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMODULESINNER}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_modules_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXARMMODULESTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_arm_modules_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMEXPRESS}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_express.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMEXPRESSINNERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_express_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMEXPRESSTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_express_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMMODULES}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_modules.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMMODULESINNER}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_modules_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXMIMMODULESTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_mim_modules_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXRESOURCES}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_resources.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXRESOURCESINNER}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_resources_inner.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

        <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINDEXRESOURCESTOP}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/index_resources_top.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${APDOCINTRODUCTION}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${APXSL}/sect_introduction.xsl'"/>
        </xsl:attribute>
         <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCS_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
         <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
 <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_apdocs_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_APDOCS_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${APDOCMENU}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
         
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCJPGS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCJPEGS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${APDOCPNGS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
    </target>
  </xsl:template>


  <xsl:template match="ballot_index" mode="resources_target">
    <xsl:text>
    </xsl:text>
     <target
        xsl:extension-element-prefixes="exslt"        
        name="resources" depends="init" 
      description="generate common resources">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfilelist">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="files">
            <xsl:value-of select="'${RESDOCRESOURCESSCHEMAXML}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/resources/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCRESOURCESCHEMAXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
            <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute> 
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RESOURCES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:choose>
          <xsl:when test="./@background.image.dependent.resources">
            <xsl:element name="param">
              <xsl:attribute name="name">
                <xsl:value-of select="'background_image'"/>
              </xsl:attribute>
              <xsl:attribute name="expression">
                <xsl:value-of select="./@background.image.dependent.resources"/>
              </xsl:attribute>
            </xsl:element>
          </xsl:when>
          <xsl:otherwise>
            <xsl:element name="param">
              <xsl:attribute name="name">
                <xsl:value-of select="'background_image'"/>
              </xsl:attribute>
              <xsl:attribute name="expression">
                <xsl:value-of select="'greybackground.jpg'"/>
              </xsl:attribute>
            </xsl:element>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCRESOURCESCHEMAEXP}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>  
   
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCRESOURCESCHEMAGIF}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>  

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCRESOURCESCHEMAJPEG}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCRESOURCESCHEMAJPG}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
  
    </target>

  </xsl:template>


  <xsl:template match="ballot_index" mode="dependent_resources_target">
    <xsl:text>
    </xsl:text>
     <target
        xsl:extension-element-prefixes="exslt"        
        name="depresources" depends="init" 
      description="generate common resources">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfilelist">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="files">
            <xsl:value-of select="'${DRESOURCESXML}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/resources/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DRESOURCESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
            <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute> 
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_DEPRESOURCES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:choose>
          <xsl:when test="./@background.image.dependent.resources">
            <xsl:element name="param">
              <xsl:attribute name="name">
                <xsl:value-of select="'background_image'"/>
              </xsl:attribute>
              <xsl:attribute name="expression">
                <xsl:value-of select="./@background.image.dependent.resources"/>
              </xsl:attribute>
            </xsl:element>
          </xsl:when>
          <xsl:otherwise>
            <xsl:element name="param">
              <xsl:attribute name="name">
                <xsl:value-of select="'background_image'"/>
              </xsl:attribute>
              <xsl:attribute name="expression">
                <xsl:value-of select="'greybackground.jpg'"/>
              </xsl:attribute>
            </xsl:element>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${DRESOURCESEXP}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>  
    </target>
  </xsl:template>

  <!-- called from template match="ballot_index" mode="modules_target" -->
  <xsl:template match="ballot_index"
    mode="modules_target_style_attributes">
    <xsl:param name="menu"/>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${MODULES_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_MODULES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="concat('${',$menu,'}')"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'background_image'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${MODULES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
  </xsl:template>
  


  <xsl:template match="ballot_index" mode="modules_target">
    <xsl:param name="menu"/>
    <xsl:text>
    </xsl:text>    
     <target
        xsl:extension-element-prefixes="exslt"        
        name="isomodules" depends="init" 
      description="generate HTML for all modules">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${GIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/modules/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${CONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_contents.xsl'"/>
        </xsl:attribute>        
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${SCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${REFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INFOREQSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_4_info_reqs.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MAINXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_main.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MAPPINGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mapping.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mim.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/index.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ABSTRACTXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_abstract.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ASHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_a_short_names.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${BOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_b_obj_reg.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${BIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_biblio.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MODINDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_modindex.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${CARMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_c_arm_expg.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${COVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_cover.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'confirmatory_ballot'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
	    <xsl:value-of select="'${CONFIRMATORY_BALLOT}'"/>
	  </xsl:attribute>        
	</xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'coverpage_date'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DATE}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_d_mim_expg.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPARMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPARMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPMIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPMIMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim_lf.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${FGUIDEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_f_guide.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${FOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_foreword.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INTRODUCTIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_introduction.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ARMEXPXML}, ${MIMEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ARMEXPGXML},${MIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/imgfile.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${SYS}/e_exp_arm_lf.xml'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <xsl:apply-templates select="." mode="modules_target_style_attributes">
          <xsl:with-param name="menu" select="$menu"/>
        </xsl:apply-templates>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${GIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
    </target>
  </xsl:template>

  <!-- called from template match="ballot_index" mode="dependent_modules_target" -->
  <xsl:template match="ballot_index" mode="dependent_modules_target_style_attributes">
    <xsl:param name="menu"/>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'INLINE_ERRORS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DEPMODULES_INLINE_ERRORS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_DEPMODULES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="concat('${',$menu,'}')"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_MODULES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_RESOURCES'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_RESOURCES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'STEPMOD_DATA_APS'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${STEPMOD_DATA_APS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'background_image'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DEPMODULES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
  </xsl:template>


  <xsl:template match="ballot_index" mode="dependent_modules_target">
    <xsl:param name="menu"/>

    <xsl:variable name="mim_modules">
      <xsl:call-template name="get_mod_node_set"/>
    </xsl:variable>
    <xsl:variable name="mim_modules_node_set" select="exslt:node-set($mim_modules)"/>
    
    <xsl:choose>
      <xsl:when test="$mim_modules_node_set/module">
        <xsl:text>
        </xsl:text>    
        <target
          xsl:extension-element-prefixes="exslt"        
          name="isodepmodules" depends="init" 
          description="generate HTML for all modules">
          <dependset>
            <xsl:element name="srcfileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'${STEPMODDTDDIR}'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
              </xsl:attribute>
            </xsl:element>
            <xsl:element name="srcfileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'${STEPMODSTYLES}'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'**/*.xsl'"/>
              </xsl:attribute>
            </xsl:element>
            <xsl:element name="srcfileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'.'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'${DMODMODULES}'"/>
              </xsl:attribute>
            </xsl:element>
            <xsl:element name="srcfileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'.'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'${DMODGIFS}'"/>
              </xsl:attribute>
            </xsl:element>
            <xsl:element name="srcfileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'.'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'${DMODEXPRESS}'"/>
              </xsl:attribute>
            </xsl:element>
            <xsl:element name="targetfileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'${ISODIR}'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'/data/modules/**/*.htm'"/>
              </xsl:attribute>
            </xsl:element>
          </dependset>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODCONTENTSXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_contents.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODSCOPEXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_1_scope.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODREFSXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_2_refs.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODDEFSXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_3_defs.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODINFOREQSXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_4_info_reqs.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODMAINXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_5_main.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODMAPPINGXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mapping.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODMIMXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mim.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODINDEXXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/index.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODABSTRACTXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_abstract.xsl'"/>
            </xsl:attribute>        
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODASHORTNAMESXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_a_short_names.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODBOBJREGXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_b_obj_reg.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODBIBLIOXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_biblio.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODMODINDEXXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_modindex.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODCARMEXPGXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_c_arm_expg.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODCOVERXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_cover.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
            <xsl:element name="param">
              <xsl:attribute name="name">
                <xsl:value-of select="'coverpage_date'"/>
              </xsl:attribute>
              <xsl:attribute name="expression">
                <xsl:value-of select="'${DATE}'"/>
              </xsl:attribute>
            </xsl:element>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODDMIMEXPGXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_d_mim_expg.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODEEXPXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODEEXPARMXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODEEXPARMLFXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODEEXPMIMXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODEEXPMIMLFXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim_lf.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODFGUIDEXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_f_guide.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODFOREWORDXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_foreword.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODINTRODUCTIONXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_introduction.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODARMEXPXML}, ${DMODMIMEXPXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${DMODARMEXPGXML},${DMODMIMEXPGXML}'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/imgfile.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="style">
            <xsl:attribute name="includes">
              <xsl:value-of select="'${SYS}/e_exp_arm_lf.xml'"/>
            </xsl:attribute>
            <xsl:attribute name="style">
              <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
            </xsl:attribute>
            <xsl:apply-templates select="." mode="dependent_modules_target_style_attributes">
              <xsl:with-param name="menu" select="$menu"/>
            </xsl:apply-templates>
          </xsl:element>
          
          <xsl:element name="copy">
            <xsl:attribute name="todir">
              <xsl:value-of select="'${ISODIR}'"/>
            </xsl:attribute>
            <xsl:element name="fileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'.'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'${DMODEXPRESS}'"/>
              </xsl:attribute>
            </xsl:element>
          </xsl:element>
          
          <xsl:element name="copy">
            <xsl:attribute name="todir">
              <xsl:value-of select="'${ISODIR}'"/>
            </xsl:attribute>
            <xsl:element name="fileset">
              <xsl:attribute name="dir">
                <xsl:value-of select="'.'"/>
              </xsl:attribute>
              <xsl:attribute name="includes">
                <xsl:value-of select="'${DMODGIFS}'"/>
              </xsl:attribute>
            </xsl:element>
          </xsl:element>
        </target>
      </xsl:when>
      <xsl:otherwise>
        <xsl:message>
          No dependent modules
        </xsl:message>
        <target
          xsl:extension-element-prefixes="exslt"        
          name="isodepmodules" depends="init" 
          description="generate HTML for all modules"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>


  <xsl:template match="res_doc">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lname" select="translate(./@name,$UPPER,$LOWER)"/>

    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="res_doc">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lname" select="translate(./@name,$UPPER,$LOWER)"/>

    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="schema">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lname" select="translate(./@name,$UPPER,$LOWER)"/>

    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,$lname,'/',$lname,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,$lname,'/',$lname,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,$lname,'/',$lname,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>


  <xsl:template match="schema" mode="descriptions">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lname" select="translate(./@name,$UPPER,$LOWER)"/>

    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,$lname,'/',$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,$lname,'/',$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,$lname,'/',$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

 

  <xsl:template match="resource" mode="wgnumexp">
    <xsl:value-of select="./@wg.number.express" />     
  </xsl:template>
 
  <xsl:template match="res_doc" mode="name">
    <xsl:value-of select="./@name" />     
  </xsl:template>


<xsl:template name="depends-on-recurse-mim-x">
  <xsl:param name="todo" select="' '"/>
  <xsl:param name="done"/>
  <!--
       For each interfaced schema:
       Check if not already done
       Otherwise output and add to todo
       -->
    
  <xsl:variable name="this-schema" select="substring-before(concat(normalize-space($todo),' '),' ')"/>
    
  <xsl:if test="$this-schema">

    <!-- open up the relevant schema  - which can be a resource or a mim schema -->
    <xsl:variable name="file_name">
      <xsl:choose>
        <xsl:when test="substring-before($this-schema,'_mim')">
          <xsl:value-of select="concat('../../data/modules/',substring-before($this-schema,'_mim'),'/mim.xml')"/>
        </xsl:when>
        <xsl:when test="substring-before($this-schema,'_schema')">
          <xsl:value-of select="concat('../../data/resources/',$this-schema,'/',$this-schema,'.xml')"/>
        </xsl:when>
        <xsl:when test="starts-with($this-schema,'aic_')">
          <xsl:value-of select="concat('../../data/resources/',$this-schema,'/',$this-schema,'.xml')"/>
        </xsl:when>
        <xsl:when test="substring-before($this-schema,'_arm')">
          BAD SCHEMA name !!! {<xsl:value-of select="$this-schema"/>}
        </xsl:when>
        <xsl:otherwise>
          <!-- assume that it is a resource -->
          <xsl:message>
            Found <xsl:value-of select="$this-schema"/> assumed a resource.
          </xsl:message>
          <xsl:value-of select="concat('../../data/resources/',$this-schema,'/',$this-schema,'.xml')"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>
  
    <xsl:if test="not(contains($done,concat(' ',$this-schema,' ')))">
      <x><xsl:value-of select="translate($file_name,'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
      'abcdefghijklmnopqrstuvwxyz')"/></x>
    </xsl:if>

  
    <xsl:variable name="mim-node" select="document($file_name)/express"/>
  
    <!-- get the list of schemas for this level that have not already been done -->
  
    <xsl:variable name="my-kids">
      <xsl:if test="not(contains($done,concat(' ',$this-schema,' ')))">
        <xsl:apply-templates select="$mim-node//interface" mode="interface-schemas">
          <xsl:with-param name="done" select="$done"/>
        </xsl:apply-templates>

        <!-- only process mims and search for express_refs--> 
        <xsl:if test="substring-before($this-schema,'_mim')">
          <xsl:variable name="module_dir" 
            select="concat('../../data/modules/',translate(substring-before($this-schema,'_mim'),'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),'/')"/>
        
          <!-- get the express refs from the mim -->
          <xsl:apply-templates select="$mim-node//express_ref|$mim-node//module_ref" mode="schema_name">
            <xsl:with-param name="done" select="$done"/>
          </xsl:apply-templates>
          <xsl:if test="$mim-node/@description.file">
            <xsl:variable name="mim_descriptions"
              select="document(concat($module_dir,$mim-node/@description.file))"/>
            
            <xsl:apply-templates select="$mim_descriptions//express_ref|$mim_descriptions//module_ref" mode="schema_name">
              <xsl:with-param name="done" select="$done"/>
            </xsl:apply-templates>
          </xsl:if>
          
          <!-- get the express refs from the arm -->
          <xsl:variable name="arm-node" select="document(concat($module_dir,'arm.xml'))/express"/>
          <xsl:apply-templates select="$arm-node//express_ref|$arm-node//module_ref" mode="schema_name">
            <xsl:with-param name="done" select="$done"/>
          </xsl:apply-templates>
          <xsl:if test="$arm-node/@description.file">
            <xsl:variable name="arm_descriptions"
              select="document(concat($module_dir,$arm-node/@description.file))"/>
            <xsl:apply-templates select="$arm_descriptions//express_ref|$arm_descriptions//module_ref" mode="schema_name">
              <xsl:with-param name="done" select="$done"/>
            </xsl:apply-templates>
          </xsl:if>
          
          <!-- get the express refs from the module -->
          <xsl:variable name="module-node" select="document(concat($module_dir,'module.xml'))"/>
          <xsl:apply-templates select="$module-node//express_ref|$module-node//module_ref" mode="schema_name">
            <xsl:with-param name="done" select="$done"/>
          </xsl:apply-templates>
        </xsl:if>        
      </xsl:if>    
    </xsl:variable>
  
    <xsl:variable name="after" select="normalize-space(concat(substring-after($todo, $this-schema),$my-kids))"/>
        
    <xsl:if test="$after">
      <xsl:call-template name="depends-on-recurse-mim-x">
        <xsl:with-param name="todo" select="$after"/>
        <xsl:with-param name="done" select="concat($done,' ',$this-schema,' ')"/>
      </xsl:call-template>
    </xsl:if>
    
  </xsl:if>
  
</xsl:template>


<xsl:template match="interface" mode="interface-schemas">
  <xsl:param name="done"/>
  <xsl:variable name="schema" select="concat(' ',@schema,' ')"/>
  <xsl:if test="not(contains($done,$schema))">
    <xsl:value-of select="$schema"/> 
  </xsl:if>
</xsl:template>

<xsl:template match="module_ref" mode="schema_name">
  <xsl:variable name="schema"
    select="concat(' ',normalize-space(substring-before(@linkend,':')),'_mim ')"/>  
  <!--
  <xsl:message>
    <xsl:variable name="root" select="/*"/>
    <xsl:choose>
      <xsl:when test="name($root)='ext_descriptions'">
        <xsl:value-of select="concat('module_ref:',name($root),':',$root/@module_directory,':',$root/@schema_file,':',$schema)"/>
      </xsl:when>
      <xsl:when test="name($root)='module'">
        <xsl:value-of select="concat('module_ref:',name($root),':',$root/@name,':',$schema)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat('module_ref:',name($root),':',$schema)"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:message> -->
  <xsl:value-of select="$schema"/>
</xsl:template>

<xsl:template match="express_ref" mode="schema_name">
  <xsl:param name="done"/>
  <xsl:variable name="schema"
    select="concat(' ',substring-before(substring-after(substring-after(@linkend,':'),':'),'.'),' ')"/> 
  <xsl:variable name="schema1">
    <xsl:choose>
      <xsl:when test="contains($schema,'_arm ')">
        <xsl:value-of select="concat(substring-before($schema,'_arm '),'_mim ')"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$schema"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
  <xsl:if test="not(contains($done,$schema1))">
    <!--
    <xsl:message>
      <xsl:variable name="root" select="/*"/>
      <xsl:choose>
        <xsl:when test="name($root)='ext_descriptions'">
          <xsl:value-of select="concat('express_ref:',name($root),':',$root/@module_directory,':',$root/@schema_file,':',$schema1)"/>
        </xsl:when>
        <xsl:when test="name($root)='module'">
          <xsl:value-of select="concat('express_ref:',name($root),':',$root/@name,':',$schema1)"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="concat('express_ref:',name($root),':',$schema1)"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:message> -->
    <xsl:value-of select="$schema1"/> 
  </xsl:if>
</xsl:template>


<!-- return a node set of all the dependent modules and resources,
     excluding any that are explicitly part of the ballot -->
<xsl:template name="get_mod_node_set">
  <xsl:variable name="modules">
    <xsl:for-each select="/ballot_index/ballot_package/module">
      <xsl:variable name="mod_schema">
        <xsl:call-template name="schema_name">
          <xsl:with-param name="module_name" select="@name"/>
          <xsl:with-param name="arm_mim" select="'mim'"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:value-of select="concat(' ',$mod_schema,' ')"/>
    </xsl:for-each>
  </xsl:variable>

  <xsl:variable name="aps">
    <xsl:for-each select="/ballot_index/ballot_package/ap_doc">
      <xsl:variable name="selected_ap" select="@name"/>
      <xsl:variable name="ap_file" 
        select="concat('../../data/application_protocols/',$selected_ap,'/application_protocol.xml')"/>	    
      <xsl:variable name="ap_node" select="document($ap_file)"/>
      <xsl:variable name="ap_top_module" select="$ap_node/application_protocol/@module_name"/>
      <xsl:variable name="mod_schema">
        <xsl:call-template name="schema_name">
          <xsl:with-param name="module_name" select="$ap_top_module"/>
          <xsl:with-param name="arm_mim" select="'mim'"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:value-of select="concat(' ',$mod_schema,' ')"/>
    </xsl:for-each>
  </xsl:variable>
  
  <xsl:variable name="resdocs">
    <xsl:for-each select="/ballot_index/ballot_package/res_doc">
      <xsl:variable name="selected_resdoc" select="@name"/>
      <xsl:variable name="resdoc_file" 
        select="concat('../../data/resource_docs/',$selected_resdoc,'/resource.xml')"/>	    
      <xsl:variable name="resdoc_node" select="document($resdoc_file)"/>
      <xsl:for-each select="$resdoc_node/resource/schema">
	<xsl:variable name="resdoc_schema" select="@name"/>
	<xsl:value-of select="concat(' ',$resdoc_schema,' ')"/>
      </xsl:for-each>
    </xsl:for-each>
  </xsl:variable>

  <xsl:variable name="todo_schema_list" select="concat(string($aps),string($modules),string($resdocs))"/>


  <xsl:variable name="mim_schemas">
    <xsl:call-template name="depends-on-recurse-mim-x">
      <xsl:with-param name="todo" select="$todo_schema_list"/>
      <xsl:with-param name="done" select="' '"/>
    </xsl:call-template>
  </xsl:variable>

  <xsl:variable name="schemas-node-set" select="exslt:node-set($mim_schemas)"/>

  <xsl:for-each select="$schemas-node-set//x">
    <xsl:sort/>
    <xsl:choose>
      <xsl:when test="substring-before(.,'/mim.xml')">
        <xsl:variable name="module" select="substring-after(substring-before(.,'/mim'),'modules/')"/>
        <xsl:variable name="module_ok">
          <xsl:call-template name="check_module_exists">
            <xsl:with-param name="module" select="$module"/>
          </xsl:call-template>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="$module_ok='true'">
            <xsl:variable name="mod_schema">
              <xsl:call-template name="schema_name">
                <xsl:with-param name="module_name" select="$module"/>
                <xsl:with-param name="arm_mim" select="'mim'"/>
              </xsl:call-template>
            </xsl:variable>
            <xsl:if test="not(contains($modules,concat(' ',$mod_schema,' ')))">
              <module>
                <xsl:attribute name="name">
                  <xsl:value-of select="$module"/>
                </xsl:attribute>
              </module>
            </xsl:if>
          </xsl:when>
          <xsl:otherwise>
            <error>
              <xsl:value-of select="$module"/>
            </error>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
	  <xsl:variable name="resource" 
			select="substring-after(substring-before(.,'.xml'),'../../data/resources/')"/>
	  <xsl:if test="not(contains($resdocs,concat(' ',substring-after($resource,'/'),' ')))">
	    <resource>
	      <xsl:attribute name="name">
		<xsl:value-of select="$resource"/>
	      </xsl:attribute>
	    </resource>
	  </xsl:if>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:for-each>

</xsl:template>


<xsl:template match="ballot_index" mode="abstracts_target">
   <target 
     xsl:extension-element-prefixes="exslt"
     name="copy_abstracts" 
     depends="init" 
     description="Copy abstracts to ISOHTML">

    <xsl:for-each select="/ballot_index/ballot_package/ap_doc">
      <xsl:element name="copy">
        <xsl:attribute name="file">
          <xsl:value-of select="concat('${ISODIR}/data/application_protocols/',@name,'/sys/abstract.htm')"/>
        </xsl:attribute>
        <xsl:attribute name="tofile">
          <xsl:value-of select="concat('${ABSTRACTDIR}/ap_abstract_',@name,'.htm')"/>
        </xsl:attribute>
      </xsl:element>
    </xsl:for-each>
    <xsl:for-each select="/ballot_index/ballot_package/module">
      <xsl:element name="copy">
        <xsl:attribute name="file">
          <xsl:value-of select="concat('${ISODIR}/data/modules/',@name,'/sys/abstract.htm')"/>
        </xsl:attribute>
        <xsl:attribute name="tofile">
          <xsl:value-of select="concat('${ABSTRACTDIR}/module_abstract_',@name,'.htm')"/>
        </xsl:attribute>
      </xsl:element>
    </xsl:for-each>
   </target>
</xsl:template>


<xsl:template match="ballot_index" mode="express_target">
   <target 
     xsl:extension-element-prefixes="exslt"
     name="copy_express" 
     depends="init" 
     description="Copy ballot module express to ISOHTML">

    <xsl:for-each select="/ballot_index/ballot_package/module">
      <xsl:variable name="module" select="@name"/>
      <xsl:variable name="module_xml"
        select="document(concat('../../data/modules/',$module,'/module.xml'))"/>

      <xsl:variable name="part" select="$module_xml/module/@part"/>
      <xsl:variable name="status" 
        select="translate(translate($module_xml/module/@status,$UPPER,$LOWER),'-','')"/>
      <xsl:variable name="wg" select="$module_xml/module/@sc4.working_group"/>
      <xsl:variable name="prefix" select="concat('part',$part,$status,'_wg',$wg,'n')"/>

      <xsl:variable name="wg.number.arm" select="$module_xml/module/@wg.number.arm"/>
      <xsl:element name="copy">
        <xsl:attribute name="file">
          <xsl:value-of select="concat('data/modules/',@name,'/arm.exp')"/>
        </xsl:attribute>
        <xsl:attribute name="tofile">
          <xsl:value-of select="concat('${EXPRESSDIR}/',$prefix,$wg.number.arm,'arm.exp')"/>
        </xsl:attribute>
      </xsl:element>

      <xsl:if test="$module_xml/module/arm_lf">
        <xsl:variable name="wg.number.arm_lf" select="$module_xml/module/@wg.number.arm_lf"/>
        <xsl:element name="copy">
          <xsl:attribute name="file">
            <xsl:value-of select="concat('data/modules/',@name,'/arm_lf.exp')"/>
          </xsl:attribute>
          <xsl:attribute name="tofile">
            <xsl:value-of select="concat('${EXPRESSDIR}/',$prefix,$wg.number.arm_lf,'arm_lf.exp')"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:if>

      <xsl:variable name="wg.number.mim" select="$module_xml/module/@wg.number.mim"/> 
      <xsl:element name="copy">
        <xsl:attribute name="file">
          <xsl:value-of select="concat('data/modules/',@name,'/mim.exp')"/>
        </xsl:attribute>
        <xsl:attribute name="tofile">
          <xsl:value-of select="concat('${EXPRESSDIR}/',$prefix,$wg.number.mim,'mim.exp')"/>
        </xsl:attribute>
      </xsl:element>

      <xsl:if test="$module_xml/module/mim_lf">
        <xsl:variable name="wg.number.mim_lf" select="$module_xml/module/@wg.number.mim_lf"/>
        <xsl:element name="copy">
          <xsl:attribute name="file">
            <xsl:value-of select="concat('data/modules/',@name,'/mim_lf.exp')"/>
          </xsl:attribute>
          <xsl:attribute name="tofile">
            <xsl:value-of select="concat('${EXPRESSDIR}/',$prefix,$wg.number.mim_lf,'mim_lf.exp')"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:if>
    </xsl:for-each>
   </target>
</xsl:template>

<xsl:template name="get_long_form_modules">
  <xsl:param name="modules"/>
  <xsl:param name="prefix"/>
  <xsl:param name="suffix"/>
  <xsl:param name="terminate"/>
  <xsl:variable name="long_forms">
    <xsl:for-each select="$modules">
      <xsl:variable name="module_xml" select="document(concat('../../data/modules/',@name,'/module.xml'))"/>
      <xsl:if test="$module_xml/module/arm_lf">
        <xsl:choose>
          <xsl:when test="$terminate='YES'">
            <xsl:choose>
              <xsl:when test="position()=last()">
                <xsl:value-of select="concat($prefix,@name,$suffix)"/><xsl:text/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:if>
    </xsl:for-each>
  </xsl:variable>


</xsl:template>

<xsl:template name="check_resdoc_exists">
    <xsl:param name="resdoc"/>

    <xsl:variable name="ret_val">
        <xsl:choose>
          <xsl:when
            test="document('../../repository_index.xml')/repository_index/resource_docs/resource_doc[@name=$resdoc]">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of
              select="concat(' The resource document ', $resdoc,
                      ' is not identified as a resource document  in repository_index.xml')"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:value-of select="$ret_val"/>
  </xsl:template>


<xsl:template match="ballot_index" mode="abstract_variable">
</xsl:template>


</xsl:stylesheet>
