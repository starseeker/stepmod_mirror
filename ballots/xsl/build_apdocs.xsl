<?xml version="1.0" encoding="utf-8"?>
<!--
$ Id: build.xsl,v 1.9 2003/02/26 02:12:17 thendrix Exp $
   Author:  Rob Bodington, Eurostep Limited
   Owner:   Developed by Eurostep Limited http://www.eurostep.com
   Purpose: To build the initial ANT build package. 
-->

<xsl:stylesheet 
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  version="1.0">
  
  <xsl:import href="../../xsl/common.xsl"/>

  <xsl:output method="xml" indent="yes"/>

    <xsl:variable name="LOWER" select="'abcdefghijklmnopqrstuvwxyz_'"/>
    <xsl:variable name="UPPER" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
        
  <xsl:template match="ballot_index">
    <xsl:text>
    </xsl:text>
    <xsl:comment>
      This file has been auto generated by:
      ant -buildfile buildbuild.xml
    </xsl:comment>
    <project name="ballothtml" default="all" basedir="../../..">
      <xsl:text>
      </xsl:text>
      <xsl:element name="target">
        <xsl:attribute name="name">variables</xsl:attribute>
        <xsl:attribute name="description">initialize variables</xsl:attribute>
        <xsl:element name="tstamp"/>
        <xsl:element name="property">
          <xsl:attribute name="name">BALLLOTSTYLES</xsl:attribute>
          <xsl:attribute name="value">ballots/xsl</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_RCS</xsl:attribute>
          <xsl:attribute name="value">NO</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_ISSUES</xsl:attribute>
          <xsl:attribute name="value">NO</xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_BACKGROUND</xsl:attribute>
          <xsl:choose>
            <xsl:when test="./@output_background='YES'">
              <xsl:attribute name="value">YES</xsl:attribute>
            </xsl:when>            
          <xsl:otherwise>
          <xsl:attribute name="value">NO</xsl:attribute>            
          </xsl:otherwise>
          </xsl:choose>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">OUTPUT_RESOURCES_BACKGROUND</xsl:attribute>
          <xsl:attribute name="value">YES</xsl:attribute>            
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">STEPMODSTYLES</xsl:attribute>
          <xsl:attribute name="value">xsl</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">STEPMODDTDDIR</xsl:attribute>
          <xsl:attribute name="value">dtd</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">DTDDIR</xsl:attribute>
          <xsl:attribute name="value">ballots/dtd</xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">ISODIR</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('ballots/isohtml/',@name)"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">ISOMENU</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('./ballots/ballots/',@name,'/menubar_iso.xml')"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">BALLOTDIR</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('ballots/ballots/',@name)"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="property">
          <xsl:attribute name="name">BALLOTMENU</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="concat('./ballots/ballots/',@name,'/menubar_ballot.xml')"/>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">ARCHIVE</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:choose>
              <xsl:when test="string-length(./@wg.number.ballot_package) > 3">
            <xsl:value-of select="concat(translate(normalize-space(translate(./@wg.number.ballot_package,$UPPER,$LOWER)),' ',''),'-',@name,'-${DSTAMP}')"/>
              </xsl:when>
              <xsl:otherwise>
            <xsl:value-of select="concat('wgxxnxxxx' ,'-',@name,'-${DSTAMP}')"/>                
              </xsl:otherwise>
            </xsl:choose>

          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">DATE</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:value-of select="'${DSTAMP}'"/>
          </xsl:attribute>
        </xsl:element>
  
        <xsl:element name="property">
          <xsl:attribute name="name">EXPRESS</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/*.exp'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:text>
        </xsl:text>

        <xsl:element name="property">
          <xsl:attribute name="name">GIFS</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/ap_doc">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/*.exp'"/>
              <xsl:with-param name="terminate" select="'NO'"/>
            </xsl:apply-templates>
            <xsl:apply-templates select="ballot_package/ap_doc">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/*.gif'"/>
              <xsl:with-param name="terminate" select="'NO'"/>
            </xsl:apply-templates>
            <xsl:apply-templates select="ballot_package/ap_doc">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/*.png'"/>
              <xsl:with-param name="terminate" select="'NO'"/>
            </xsl:apply-templates>
            <xsl:apply-templates select="ballot_package/ap_doc">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/*.jpg'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCGIFS</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/*.exp'"/>
              <xsl:with-param name="terminate" select="'NO'"/>
            </xsl:apply-templates>
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/*.gif'"/>
              <xsl:with-param name="terminate" select="'NO'"/>
            </xsl:apply-templates>
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/*.png'"/>
              <xsl:with-param name="terminate" select="'NO'"/>
            </xsl:apply-templates>
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/*.jpg'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCINDEXXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/index.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCISSUESXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/dvlp/issues.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCABSTRACTXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/abstract.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCCONTENTSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/contents.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCS</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/**/*.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCSCOPEXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/1_scope.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCREFSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/2_refs.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCDEFSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/3_defs.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCMAINXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/main.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name"></xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="''"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCSCHEMAXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/*_schema.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCASHORTNAMESXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/a_short_names.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCBOBJREGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/b_obj_reg.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCBIBLIOXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/biblio.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCCOVERXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/cover.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCCEXPSCHEMAXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/c_exp_schema_*.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCCEXPXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/c_exp.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCDEXPGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/d_expg.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCTECHDISCUSSIONXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/tech_discussion.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCEXAMPLESXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/examples.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCADDSCOPE</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/add_scope.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCFOREWORDXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/foreword.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCINTRODUCTIONXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/sys/introduction.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCDESCRIPTIONSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resources/'"/>
              <xsl:with-param name="suffix" select="'/descriptions.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCSCHEMADIAGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/resource">
              <xsl:with-param name="prefix" select="'data/resource_docs/'"/>
              <xsl:with-param name="suffix" select="'/schema_diagexpg*.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">CONTENTSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/contents.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">MODULES</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/**/*.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">SCOPEXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/1_scope.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">REFSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/2_refs.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">DEFSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/3_defs.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">INFOREQSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/4_info_reqs.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">MAINXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/5_main.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">MAPPINGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/5_mapping.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name"></xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="''"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">MIMXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/5_mim.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">INDEXXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/index.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">ABSTRACTXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/abstract.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">ASHORTNAMESXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/a_short_names.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">BOBJREGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/b_obj_reg.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">BIBLIOXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/biblio.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">CARMEXPGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/c_arm_expg.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">COVERXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/cover.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">DMIMEXPGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/d_mim_expg.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">EEXPXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/e_exp.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">EEXPARMXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/e_exp_arm.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">EEXPARMLFXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/e_exp_arm_lf.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">EEXPMIMXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/e_exp_mim.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">EEXPMIMLFXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/e_exp_mim_lf.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">FGUIDEXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/f_guide.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">FOREWORDXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/foreword.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">INTRODUCTIONXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/sys/introduction.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">ARMDESCRIPTIONSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/arm_descriptions.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">MIMDESCRIPTIONSXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/mim_descriptions.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">ARMEXPGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/armexpg*.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">MIMEXPGXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/mimexpg*.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">ARMEXPXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/arm.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">MIMEXPXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:apply-templates select="ballot_package/module">
              <xsl:with-param name="prefix" select="'data/modules/'"/>
              <xsl:with-param name="suffix" select="'/mim.xml'"/>
            </xsl:apply-templates>
          </xsl:attribute>
        </xsl:element>


        <xsl:variable name="resources_set">
          <xsl:apply-templates select="ballot_package/module" mode="resources" />
          <xsl:apply-templates select="ballot_package/resource" mode="resources"/>
        </xsl:variable>

        <xsl:variable name="resdoc_resources_set">
          <xsl:apply-templates select="ballot_package/resource" mode="resdoc_resources"/>
        </xsl:variable>

        <xsl:element name="property">
          <xsl:attribute name="name">RESOURCESXML</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:call-template name="output_resources">
              <xsl:with-param name="resources"
                select="normalize-space($resources_set)"/>
              <xsl:with-param name="prefix" select="'data/resources/'"/>
              <xsl:with-param name="suffix" select="'.xml'"/>
            </xsl:call-template>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESOURCESEXP</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:call-template name="output_resources">
              <xsl:with-param name="resources"
                select="normalize-space($resources_set)"/>
              <xsl:with-param name="prefix" select="'data/resources/'"/>
              <xsl:with-param name="suffix" select="'.exp'"/>
            </xsl:call-template>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESDOCRESOURCESEXP</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:call-template name="output_resources">
              <xsl:with-param name="resources"
                select="normalize-space($resdoc_resources_set)"/>
              <xsl:with-param name="prefix" select="'data/resources/'"/>
              <xsl:with-param name="suffix" select="'.exp'"/>
            </xsl:call-template>
          </xsl:attribute>
        </xsl:element>


        <xsl:element name="property">
          <xsl:attribute name="name">RESOURCESSCHEMAEXPGGIFS</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:call-template name="output_resources">
              <xsl:with-param name="resources"
                select="normalize-space($resources_set)"/>
              <xsl:with-param name="prefix" select="'data/resources/'"/>
              <xsl:with-param name="suffix" select="'expg*.gif'"/>
            </xsl:call-template>
          </xsl:attribute>
        </xsl:element>

        <xsl:element name="property">
          <xsl:attribute name="name">RESOURCESSCHEMAEXPGXMLS</xsl:attribute>
          <xsl:attribute name="value">
            <xsl:call-template name="output_resources">
              <xsl:with-param name="resources"
                select="normalize-space($resources_set)"/>
              <xsl:with-param name="prefix" select="'data/resources/'"/>
              <xsl:with-param name="suffix" select="'expg*.xml'"/>
            </xsl:call-template>
          </xsl:attribute>
        </xsl:element>
    </xsl:element>

    <xsl:text>
    </xsl:text>
    <target name="init" depends="variables">
      <xsl:element name="mkdir">
        <xsl:attribute name="dir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>          
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}/images'"/>
        </xsl:attribute>
        <fileset dir="images"/>
      </xsl:element>
    </target>

    <xsl:text>
    </xsl:text>
    <xsl:choose>
      <target name="all" depends="init, resources, apdoc, isoindex, isomodules," 
        description="Create HTML for everything"/> 
    <xsl:text>
    </xsl:text>
    <target name="clean" depends="variables" 
      description="delete generated files">
      <xsl:element name="delete">
        <xsl:attribute name="dir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
      </xsl:element>
    </target>

    <xsl:text>
    </xsl:text>
    <target name="zip" depends="all" description="create .zip file">
      <xsl:element name="zip">
        <xsl:attribute name="zipfile">
          <xsl:value-of select="'${ISODIR}/${ARCHIVE}.zip'"/>
        </xsl:attribute>
        <xsl:attribute name="basedir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="excludes">
          <xsl:value-of select="'**/*.zip'"/>
        </xsl:attribute>
        <xsl:attribute name="includes">
          <xsl:value-of select="'**'"/>
        </xsl:attribute>
      </xsl:element>
    </target>

    <xsl:text>
    </xsl:text>
    <target name="isoindex" depends="init" 
      description="Create HTML index">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${DTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${BALLLOTSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${BALLOTDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xml'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${BALLOTDIR}/*.htm*'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="in">
          <xsl:value-of select="'${BALLOTDIR}/ballot_summary.xml'"/>
        </xsl:attribute>
        <xsl:attribute name="out">
          <xsl:value-of select="'${ISODIR}/index.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${BALLLOTSTYLES}/ballot_summary.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <param name="stepmodhome" expression="."/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'date'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DATE}'"/>
          </xsl:attribute>
        </xsl:element>

      </xsl:element>
    </target>
    
    <xsl:text>
    </xsl:text>
    
    <target name="resources" depends="init" 
      description="generate common resources">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfilelist">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="files">
            <xsl:value-of select="'${RESOURCESXML}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/resources/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESOURCESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
            <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute> 
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RESOURCES_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESOURCESEXP}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
   

    </target>
    
    
    <xsl:text>
    </xsl:text>    

    <target name="isomodules" depends="init" 
      description="generate HTML for all modules">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${MODULES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${GIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/modules/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${CONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_contents.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${SCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${REFSXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_2_refs.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${REFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${DEFSXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_3_defs.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${INFOREQSXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_4_info_reqs.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INFOREQSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_4_info_reqs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${MAINXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_5_main.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MAINXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_main.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${MAPPINGXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_5_mapping.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MAPPINGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mapping.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${MIMXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_5_mim.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${MIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_5_mim.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <!--
    <style includes="${MODULES}/index.xml" 
      destdir="." extension=".htm"
      style="${STYLES}/index.xsl">
      <param name="output_type" expression="HTM"/>
      <param name="output_rcs" expression="${OUTPUT_RCS}"/>
    </style>
    -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/index.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <!--
<style includes="${ABSTRACTXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_abstract.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ABSTRACTXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_abstract.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <!--
<style includes="${ASHORTNAMESXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_a_short_names.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ASHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_a_short_names.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${BOBJREGXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_b_obj_reg.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${BOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_b_obj_reg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${BIBLIOXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_biblio.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${BIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_biblio.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${CARMEXPGXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_c_arm_expg.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${CARMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_c_arm_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${COVERXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_cover.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${COVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_cover.xsl'"/>
        </xsl:attribute>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'coverpage_date'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${DATE}'"/>
          </xsl:attribute>
        </xsl:element>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${DMIMEXPGXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_d_mim_expg.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${DMIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_d_mim_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
       <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${EEXPXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_e_exp.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${EEXPARMXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_e_exp_arm.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPARMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${EEXPARMLFXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPARMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <!--
<style includes="${EEXPMIMXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_e_exp_mim.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPMIMXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${EEXPMIMLFXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_e_exp_mim_lf.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${EEXPMIMLFXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_mim_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${FGUIDEXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_f_guide.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${FGUIDEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_f_guide.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${FOREWORDXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_foreword.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${FOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_foreword.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${INTRODUCTIONXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_introduction.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${INTRODUCTIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_introduction.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${ARMEXPXML}, ${MIMEXPXML}" 
        destdir="${ISODIR}" extension=".htm"
        style="${STEPMODSTYLES}/express.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ARMEXPXML}, ${MIMEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/express.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
           
      <!--
<style includes="${ARMEXPGXML},
                       ${MIMEXPGXML}" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/imgfile.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
        <param name="menubar_file" expression="${ISOMENU}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${ARMEXPGXML},${MIMEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <!--
<style includes="${SYS}/e_exp_arm_lf.xml" destdir="${ISODIR}"
        extension=".htm"
        style="${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl">
        <param name="output_type" expression="HTM"/>
        <param name="output_rcs" expression="${OUTPUT_RCS}"/>
</style> -->
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${SYS}/e_exp_arm_lf.xml'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/sect_e_exp_arm_lf.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_background'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_BACKGROUND}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:if test="./@background_image">
          <xsl:element name="param">
            <xsl:attribute name="name">
              <xsl:value-of select="'background_image'"/>
            </xsl:attribute>
            <xsl:attribute name="expression">
              <xsl:value-of select="./@background_image"/>
            </xsl:attribute>
          </xsl:element>
        </xsl:if>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${GIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
    </target>

      <xsl:if test="ballot_package/resource">

    <target name="isoresdocs" depends="init" 
      description="generate HTML for all modules">
      <dependset>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODDTDDIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.dtd, **/*.ent'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${STEPMODSTYLES}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'**/*.xsl'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
        <!-- 
          <xsl:element name="srcfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${EXPRESS}'"/>
          </xsl:attribute>
        </xsl:element>
        -->
        <xsl:element name="targetfileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'${ISODIR}'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'/data/resource_docs/**/*.htm'"/>
          </xsl:attribute>
        </xsl:element>
      </dependset>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCINDEXXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/index.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCISSUESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/projmg/resource_issues_file.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCABSTRACTXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_abstract.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCONTENTSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_contents.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>      

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCSCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_1_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCREFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_2_refs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCDEFSXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_3_defs.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCSCHEMAXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_schema.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCEXPSCHEMAXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_c_exp_schema.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCEXPXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_c_exp.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCDEXPGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_d_expg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCMAINXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_main.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCASHORTNAMESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_a_short_names.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCBOBJREGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_b_obj_reg.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESOURCESSCHEMAEXPGXMLS}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCTECHDISCUSSIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_tech_discussion.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCEXAMPLESXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_examples.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCADDSCOPEXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_add_scope.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>      

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCBIBLIOXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_biblio.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCCOVERXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_cover.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>


      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCFOREWORDXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_foreword.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCINTRODUCTIONXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/sect_introduction.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>
      
      <xsl:element name="style">
        <xsl:attribute name="includes">
          <xsl:value-of select="'${RESDOCSCHEMADIAGXML}'"/>
        </xsl:attribute>
        <xsl:attribute name="destdir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:attribute name="extension">
          <xsl:value-of select="'.htm'"/>
        </xsl:attribute>
        <xsl:attribute name="style">
          <xsl:value-of select="'${STEPMODSTYLES}/res_doc/imgfile.xsl'"/>
        </xsl:attribute>
        <param name="output_type" expression="HTM"/>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_rcs'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_RCS}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'output_issues'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${OUTPUT_ISSUES}'"/>
          </xsl:attribute>
        </xsl:element>
        <xsl:element name="param">
          <xsl:attribute name="name">
            <xsl:value-of select="'menubar_file'"/>
          </xsl:attribute>
          <xsl:attribute name="expression">
            <xsl:value-of select="'${ISOMENU}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

      <xsl:element name="copy">
        <xsl:attribute name="todir">
          <xsl:value-of select="'${ISODIR}'"/>
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESOURCESSCHEMAEXPGGIFS}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>

    <xsl:variable name="resdoc_name">
      <xsl:apply-templates select="ballot_package/resource" mode="name"/>
    </xsl:variable>

    <xsl:variable name="resdoc_dir">
      <xsl:value-of select="concat('../../data/resource_docs/',$resdoc_name)"/>
    </xsl:variable>
     
    <xsl:variable name="resdoc_ok">
      <xsl:call-template name="check_resdoc_exists">
        <xsl:with-param name="resdoc" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <xsl:variable name="resdoc_xml"
                select="concat($resdoc_dir,'/resource.xml')"/>

    <xsl:variable name="wgnumexp">
      <xsl:apply-templates select="document($resdoc_xml)/resource" mode="wgnumexp"/>
    </xsl:variable>

      <xsl:element name="concat">
        <xsl:attribute name="destfile">
          <xsl:value-of select="concat('${ISODIR}','/', 'wg12n',$wgnumexp,'.exp')" />
        </xsl:attribute>
        <xsl:element name="fileset">
          <xsl:attribute name="dir">
            <xsl:value-of select="'.'"/>
          </xsl:attribute>
          <xsl:attribute name="includes">
            <xsl:value-of select="'${RESDOCRESOURCESEXP}'"/>
          </xsl:attribute>
        </xsl:element>
      </xsl:element>   
    </target>
  </xsl:if>

  </project>

  </xsl:template>

  <xsl:template match="module">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,@name,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,@name,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

<xsl:template match="resource" mode="resources">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>

    <xsl:variable name="resdoc_dir">
      <xsl:value-of select="concat('../../data/resource_docs/',@name)"/>
    </xsl:variable>
     
    <xsl:variable name="resdoc_ok">
      <xsl:call-template name="check_resdoc_exists">
        <xsl:with-param name="resdoc" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <xsl:variable name="resdoc_xml"
                select="concat($resdoc_dir,'/resource.xml')"/>

    <xsl:choose>
      <xsl:when test="$resdoc_ok='true'">
        <xsl:apply-templates select="document($resdoc_xml)/resource/schema"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="error_message">
          <xsl:with-param name="inline" select="'no'"/>
          <xsl:with-param name="message">
            <xsl:value-of select="concat('Error ref1: ', $resdoc_ok)"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

<xsl:template match="resource" mode="resdoc_resources">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>

    <xsl:variable name="resdoc_dir">
      <xsl:value-of select="concat('../../data/resource_docs/',@name)"/>
    </xsl:variable>
     
    <xsl:variable name="resdoc_ok">
      <xsl:call-template name="check_resdoc_exists">
        <xsl:with-param name="resdoc" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <xsl:variable name="resdoc_xml"
                select="concat($resdoc_dir,'/resource.xml')"/>

    <xsl:choose>
      <xsl:when test="$resdoc_ok='true'">
        <xsl:apply-templates select="document($resdoc_xml)/resource/schema">
          <xsl:with-param name="recurse" select="'NO'" />
        </xsl:apply-templates>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="error_message">
          <xsl:with-param name="inline" select="'no'"/>
          <xsl:with-param name="message">
            <xsl:value-of select="concat('Error ref1: ', $resdoc_ok)"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>


  <xsl:template match="interface" mode="resources">
    <xsl:param name="resource_set" />
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lschema" select="translate(./@schema,$UPPER,$LOWER)"/>
    <xsl:variable name="lname" select="translate(../@name,$UPPER,$LOWER)"/>
      <xsl:choose>        
      <!--      <xsl:when test="contains($resource_set,$lschema)"> -->
      <xsl:when test="contains($resource_set,concat(':',$lschema,':'))">
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($resource_set,':',$lschema,':')"/>
        <xsl:variable name="resource_dir">
          <xsl:value-of select="concat('../../data/resources/',$lschema,'/')"/>
        </xsl:variable>
        <xsl:variable name="resource_xml">
          <xsl:value-of select="concat($resource_dir,$lschema,'.xml')" />
          </xsl:variable>
          <xsl:apply-templates select="document($resource_xml)/express/schema/interface" mode="resources">
            <xsl:with-param name="resource_set" select="concat($resource_set,':',$lname,':')"/>  
          </xsl:apply-templates>
        </xsl:otherwise>
      </xsl:choose>  
    </xsl:template>

  <xsl:template match="module" mode="resources">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>

    <xsl:variable name="module_dir">
      <xsl:value-of select="concat('../../data/modules/',@name)"/>
    </xsl:variable>

    <xsl:variable name="module_ok">
      <xsl:call-template name="check_module_exists">
        <xsl:with-param name="module" select="@name"/>
      </xsl:call-template>
    </xsl:variable>
    <!--
    <xsl:message >
     !!!!Module name:  <xsl:value-of select="@name"/>: module name 

    </xsl:message>
-->
    <xsl:choose>
      <xsl:when test="$module_ok='true'">
        <xsl:variable name="mim_xml" 
          select="concat($module_dir,'/mim.xml')"/>
        <xsl:apply-templates select="document($mim_xml)/express/schema/interface"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="error_message">
          <xsl:with-param name="inline" select="'no'"/>
          <xsl:with-param name="message">
            <xsl:value-of select="concat('Error ref1: ', $module_ok)"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>


  <xsl:template match="interface">
    <xsl:variable name="type" 
      select="substring(@schema,string-length(@schema)-3)"/>
    <xsl:if test="$type!='_mim'">
      <xsl:value-of select="concat(':',@schema,':')"/>
      <!--
      <xsl:message>
            schema:<xsl:value-of select="concat(':',@schema,':')"/>:schema
      </xsl:message>
      -->
    </xsl:if>
  </xsl:template>


  <xsl:template match="schema">
    <xsl:param name="recurse" select="'YES'" />
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lname" select="translate(./@name,$UPPER,$LOWER)"/>

    <xsl:value-of select="concat(':',$lname,':')"/>
    <xsl:if test="$recurse='YES'">
      
    <xsl:variable name="resource_dir">
      <xsl:value-of select="concat('../../data/resources/',$lname,'/')"/>
    </xsl:variable>
    <xsl:variable name="resource_xml">
      <xsl:value-of select="concat($resource_dir,$lname,'.xml')" />
    </xsl:variable>
    <xsl:apply-templates select="document($resource_xml)/express/schema/interface" mode="resources">
      <xsl:with-param name="resource_set" select="concat(':',$lname,':')" />
    </xsl:apply-templates>
    </xsl:if>
</xsl:template>


  <xsl:template name="output_resources">
    <xsl:param name="resources"/>
    <xsl:param name="prefix" select="'data/resources/'"/>
    <xsl:param name="suffix" select="'.xml'"/>
    <xsl:variable
      name="first"
      select="substring-before(substring-after($resources,':'),':')"/>

    <!--    <xsl:message>
      first-<xsl:value-of select="$first"/>-first
    </xsl:message> -->
    <xsl:variable
      name="rest"
      select="substring-after(substring-after($resources,':'),':')"/>
    <xsl:choose>
      <!-- added second test because the recursion does not stop otherwise - rats  -->
      <xsl:when test="contains($rest,$first) and string-length($first)!=0">
        <!-- the schema is in the list and will be dealt with later -->
        <xsl:call-template name="output_resources">
          <xsl:with-param name="resources" select="$rest"/>
          <xsl:with-param name="suffix" select="$suffix"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:when test="contains($rest,':')">
        <xsl:value-of select="concat($prefix,$first,'/',$first,$suffix)"/>,<xsl:text/>
        <xsl:call-template name="output_resources">
          <xsl:with-param name="resources" select="$rest"/>
          <xsl:with-param name="suffix" select="$suffix"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,$first,'/',$first,$suffix)"/><xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="resource">
    <xsl:param name="prefix"/>
    <xsl:param name="suffix"/>
    <xsl:param name="terminate" select="'YES'"/>
    <!-- the name of the resource directory should be in lower case -->
    <xsl:variable name="lname" select="translate(./@name,$UPPER,$LOWER)"/>

    <xsl:choose>
      <xsl:when test="$terminate='YES'">
        <xsl:choose>
          <xsl:when test="position()=last()">
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/><xsl:text/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat($prefix,$lname,$suffix)"/>,<xsl:text/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="resource" mode="wgnumexp">
    <xsl:value-of select="./@wg.number.express" />     
  </xsl:template>
 
  <xsl:template match="resource" mode="name">
    <xsl:value-of select="./@name" />     
  </xsl:template>

 <xsl:template name="check_resdoc_exists">
    <xsl:param name="resdoc"/>

    <xsl:variable name="ret_val">
        <xsl:choose>
          <xsl:when
            test="document('../../repository_index.xml')/repository_index/resource_docs/resource_doc[@name=$resdoc]">
            <xsl:value-of select="'true'"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of
              select="concat(' The resource document ', $resdoc,
                      ' is not identified as a resource document  in repository_index.xml')"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:value-of select="$ret_val"/>
  </xsl:template>


</xsl:stylesheet>












