<!DOCTYPE html
  PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<?xml-stylesheet type="text/xsl" href="../../../../xsl/part1000/collection_page.xsl"><html xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fn="http://www.w3.org/2005/xpath-functions">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <title>ISO/DIS 10303-1:2010</title>
   </head>
   <body>
      <table cellspacing="0" border="0" width="100%">
         <tr>
            <td valign="MIDDLE"><b>Application modules</b></td>
            <td valign="MIDDLE" align="RIGHT"><b>ISO/DIS 10303-1:2010</b></td>
         </tr>
      </table>
      <table border="1" cellspacing="1" width="100%">
         <tr>
            <td valign="top">
               <div><a href="../sys/cover.htm">Cover page</a></div>
               <div><a href="../sys/contents.htm">Table of contents</a></div>
               <div><a href="../sys/cover.htm#copyright">Copyright</a></div>
               <div><a href="../sys/foreword.htm">Foreword</a></div>
            </td>
            <td valign="top">
               <div><a href="../sys/introduction.htm">Introduction</a></div>
               <div><a href="../sys/1_scope.htm">1 Scope</a></div>
               <div><a href="../sys/2_defs.htm">2 Terms, definitions and abbreviated terms</a></div>
               <div><a href="../sys/3_overview.htm">3 Overview of IS0 10303</a></div>
            </td>
            <td valign="top">
               <div><a href="../sys/4_arch.htm">4 Architecture of IS0 10303</a></div>
               <div><a href="../sys/5_structure.htm">5 Structure of ISO 10303</a></div>
               <div><a href="../sys/6_smrl.htm">6 STEP Module and Resource Library</a></div>
               <div><a href="../sys/7_info_obj.htm">7 Information object registration scheme</a></div>
            </td>
            <td valign="top">
               <div><a href="../sys/a_obj_reg.htm">A Information object registration</a></div>
               <div><a href="../sys/biblio.htm">Bibliography</a></div>
               <div><a href="../sys/docindex.htm">Index</a></div>
            </td>
         </tr>
      </table>
      	
      <h2 id="arch">4 Architecture of ISO 10303</h2>
      	
      <p>ISO 10303 has evolved over the past two decades; there are now two related architectures that govern the development of ISO
         10303 standards.  They are referred to as the initial architecture and the modular architecture.  Both architectures are in
         effect, though new projects are encouraged to migrate to the modular architecture.
      </p>
      	
      <p>This clause explains the concepts behind the STEP architecture, describes the initial architecture, then explains the modular
         architecture. 
      </p>
      	
      <h3 id="arch_1">4.1 General</h3>
      	
      <p>The architecture of STEP is designed to support the development of standards for product data exchange and product data sharing.
         The architecture is governed by the following concepts: (1) the scope of what is standardized and what is conformance tested
         is set at the level of “an application,” (2) application requirements are based on a model of a business activity, (3) application
         requirements are standardized using natural language, and (4) a mapping is specified defining how the application requirements
         are satisfied using a STEP data model.
      </p>
      	
      <p>The key information models comprising the STEP standards are known as application protocols (APs).  As illustrated below,
         an AP consists of the following major elements:
      </p>
      	
      <ul>
         	
         <li>An application activity model (AAM) describing the business process the information model supports.</li>
         	
         <li>An application reference model (ARM) specifying the information requirements.</li>
         	
         <li>A schema for data structures based on the STEP integrated resources (IRs), called an application interpreted model (AIM),
            that is the basis for implementations of the standard.
         </li>
         
      </ul>
      
      <p>ISO 10303 architects made a conscious decision to focus on the information required by industrial processes rather than on
         the processes themselves as the processes may change over time while the underlying information requirements are longer lasting.
         This focus on information allows STEP to support data exchange, some forms of data sharing, as well as long-term data retention.
         To that end, the ISO TC 184-SC 4 created a data specification language, called EXPRESS, and standardized it as ISO 10303-11.
         SC 4 has also standardized implementation methods for file exchange and data access interface based on that language. The
         AIM of an AP is specified using EXPRESS.  A conforming implementation of an AP must use the AIM schema in combination with
         one of the implementation methods. STEP standardizes conformance testing methods and abstract test suites to facilitate certification
         of AP implementations.  An AP may specify conformance classes (CC) allowing certification of conformance to a specified subset
         of the AIM.
      </p>
      
      <p>Application interpreted constructs (AICs) were introduced to the STEP architecture to enable cooperative use of multiple APs
         in a business enterprise.  An AIC specifies a piece of an AIM that may be used to exchange product data common to two or more
         APs.  However, an AIC does not document the common requirements or the mapping of those requirements into the AIM.
      </p>
      
      	
      <h3 id="arch_2">4.2 Initial architecture</h3>
      	
      <p>An <a href="2_defs.htm#term_application_protocol">AP</a> compliant with initial architecture is called a "monolithic AP".
      </p>
      	
      <h3 id="arch_3">4.3 Modular architecture</h3>
      
      <p>The stated objective of the STEP modularization effort is to enable the more efficient technical development, standardization,
         implementation and deployment of STEP standards without changing the fundamentals of the current technical architecture. 
         The STEP architecture will continue to be based on standardizing industry requirements and mapping those requirements to a
         data model based on the STEP integrated resources, a process known as interpretation.
      </p>
      
      <p>The primary change introduced by the new modular architecture is the explicit harmonization of common information requirements.
         Rather than relying on harmonization occurring as a by-product of consistent interpretation across APs, module requirements
         are first harmonized across domains and the resulting mappings are standardized in smaller packages, known as application
         modules (AMs).  AMs are reused by other AMs and ultimately in APs. 
      </p>
      
      <p>The implementable portion of the STEP modular architecture has two core components:</p>
      
      <ul>
         
         <li>Application module (AM) - A small, reusable data specification documented with an ARM (application reference model); mapping;
            interpreted schema; and usage guide.
         </li>
         
         <li>Application protocol (AP) - The use of a data specification to meet the requirements of some business process.</li>
         
      </ul>
      
      <p>The objectives and function of the architectural components are described below. 
         
      </p>
      	
      <h4 id="arch_31">4.3.1 Application Module</h4>
      
      <p>
         An application module is designed to maximize reusability of the harmonized requirements and the associated interpretation
         into the Integrated Resources (IRs), the data specification, and thus, software implementations.  This supports reusability
         by the standards developer, implementer, and user.
      </p>
      
      <p>Application modules replace AICs in the STEP architecture. The objectives of AICs and AMs are similar.  They both standardize
         interpretation results for reuse in multiple APs.  However, AICs and AMs are created differently and have different content.
         AMs, unlike AICs, contain harmonized information requirements and specifications of the mappings of those requirements to
         the IRs. An objective of modularization is to document a concept one time and then to directly reuse that concept in other
         modules. An AIC is only created when a concept has already been documented in two or more APs.
      </p>
      
      <p>The modular approach calls for the use of EXPRESS rather than natural language for the documentation of requirements, i.e.,
         the ARM, in an application module.  This allows the use of tools to validate the dependencies between application module ARMs.
         It has the added benefit of allowing for the future use of an in-development EXPRESS mapping language called EXPRESS-X [8]
         that will make the requirements-to-resources mapping computer interpretable as well.
      </p>
      	
      <h4 id="arch_32">4.3.2 Application Protocol</h4>
      
      <p>A modular AP is a documented use of an application module for a specific business process. A single, normatively referenced
         AM is the data specification for the AP.  This AM uses other normative AMs and may include specific business process rules
         or constraints.  The AP document contains an activity model and conformance class definitions.  Industry terminology mappings
         from the generic AM terminology may be defined in an AP to make it more understandable to reviewers from the application domain.
         In Figure 2, the current STEP architecture is contrasted with the proposed modular STEP architecture.  A modular AP references,
         through a high-level module, a collection of related AMs that provide the documentation of its requirements and interpreted
         model.
      </p>
      
      	
      <p>An <a href="2_defs.htm#term_application_protocol">AP</a> compliant with modular architecture is called a "modular AP".
      </p>
      <br><br><p>© ISO 2010 — All rights reserved</p>
   </body>
</html>