<collection_page page_type="main">
	<h2>
		<a name="defns">4 Overview of IS0 10303</a>
	</h2>
	<h2>4.1 Purpose</h2>
	<p>
The purpose of IS0 10303 is to specify a form for the unambiguous representation and exchange
of computer-interpretable product data throughout the life of a product. This form is
independent of any particular computer system. This form enables consistent implementations
across multiple applications and systems. This International Standard permits different implementation
methods to be used for storing, accessing, transferring, and archiving product data.
Implementations can be tested for conformance.
      </p>
	<h2>4.2 Fundamental principles</h2>
	<p>
IS0 10303 separates the techniques of representation of product information from the implementation
methods used for data exchange.
	</p> 
	<p>
The representation techniques provide a single representation of product information common
to many applications. This common representation can be tailored to meet the needs of specific
applications. An application protocol specifies the representation of product information for one
or more applications.
	</p> 
	<p>
IS0 10303 specifies the implementation methods that support the exchange of product data
defined in application protocols.
	</p> 
	<p>
IS0 10303 defines a formal data specification language, EXPRESS which is used to specify the
representation of product information. The use of a formal language provides unambiguous and
consistent representation and facilitates development of implementations.
IS0 10303 provides a methodology and framework for conformance testing of implementations.	
	</p> 
	<h3>4.2.1 Integrated resources</h3>
	<p>
The specification of a representation of product information is provided by a set of integrated
resources. Each integrated resource comprises a set of product data descriptions, written in EXPRESS
known as resource constructs. One set may be dependent on other sets for its definition.
Similar information for different applications is represented by a single resource construct.
	</p> 
	<p>
The integrated resources are divided into two groups: generic resources and application resources.
The generic resources are independent of applications and can reference each other.
The application resources can reference the generic resources and can add other resource constructs
for use by a group of similar applications. Application resources do not reference other
application resources.
	</p> 
	<h3>4.2.2 Support for applications</h3>
	<p>
The integrated resources define a generic information model for product information. They are
not sufficient to support the information requirements of an application without the addition of
application specific constraints, relationships and attributes.
	</p> 
	<p>
IS0 10303 defines application protocols in which the integrated resources are interpreted to meet
the product information requirements of specific applications. The interpretation is achieved by
selecting appropriate resource constructs and refining their meaning, by specifying any appropriate
constraints, relationships, and attributes. This interpretation results in an application
interpreted model. The application interpreted model is documented as part of an application
protocol.
	</p> 
	<p>
Wherever a resource construct is used to represent the same information requirement in different
application protocols, the same interpretation of the resource construct is used. The scope and 
information requirements of the application are specified in the terminology of the application.
The application protocol provides a mapping to show how the interpretation of the integrated
resources is used to meet the information requirements of the application.
	</p> 
	<h3>4.2.3 Implementation methods</h3>
	<p>
Each implementation method included in IS0 10303 is specified by a mapping from the EXPRESS
language onto the formal language used for the method. The mapping is independent
of the application protocol. The mapping is expressed in a formal notation. At least three
implementation methods for IS0 10303 have been identified.	
	</p> 
	<h3>4.2.4 Implementations</h3>
	<p>
An application protocol may specify one or more applicable implementation methods from the
set of implementation methods in IS0 10303. An implementation shall apply one or more of
the implementation methods specified in the application protocol to the application interpreted
model.
	</p> 
	<h3>4.2.5 Conformance testing</h3>
	<p>
Conformance of an implementation to an application protocol is specified by the conformance
requirements in the application protocol.
	</p> 
	<p>
A set of tests, specified in an abstract test suite, is defined for each application protocol. When
associated with an abstract test method, these tests may be used to assess the conformance of an
implementation. The overall framework for conformance assessment is specified in IS0 10303-31.
An abstract test method for each implementation method is specified in one of the conformance
testing methodology and framework series of parts of IS0 10303.
	</p> 
	<p>
The scope of conformance testing of a specific implementation is the requirements specified
for the conformance class(es) claimed for the implementation in the Protocol Implementation
Conformance Statement. The tests are selected from the abstract test suite, based on the
conformance class claimed by the implementation. Test results provide the basis for conformance
assessment.
	</p> 
	<p>
IS0 10303 contains abstract test suites and defines abstract test methods for performing conformance
testing to provide a basis for test results that are repeatable, comparable, and auditable.
Inclusion of conformance testing procedures in IS0 10303 is intended to promote widespread
acceptance of test results.	
	</p>
	<h2>4.3 Information object registration</h2>
	<p>
In order to provide unambiguous identification of schemas and other information objects in an
open information system, this International Standard employs the registration technique defined
in ISO/IEC 8824-l. This technique identifies objects by their assignment to a’ tree structure
whose root is IS0 itself. Each node in the tree is identified by a sequence of integers corresponding
to the index of the leaf under each node. Nodes that identify agencies that can further specify
inferior nodes are called registration authorities. There is provision in this technqiue for having
registration provided by national bodies and other identified organizations (including private
corporations). A registration authority is automatically granted to the technical committee or
subcommittee that prepares a standard in order to identify objects within the standard. Thus,
IS0 10303 is identified by the object identifier:
	</p> 
	<p>
( I 0 10303 )
	</p> 
	<p>
Here the initial 1 indicates ISO; the 0 following it identifies the object as a standard, and the
number following that is the number of the standard. ISO/IEC 8824-l also defines identifiers to
stand in the place of these numbers; thus ‘iso’ has the value 1 and ‘standard’ has the value 0.
For multi-part standards, the next number is required to be the part number. Thus, this part
of IS0 10303 is identified by the object identifier:
	</p> 
	<p>
( iso standard 10303 part(l) )
	</p> 
	<p>
Here, the value of the part number is given explicitly, but the notation allows us to associate a
term with this value, thereby providing some semantics. The notation for values of this type is
defined in clause 28 of ISO/IEC 8824-1, and the predefined assignments are specified in annex
B of ISO/IEC 8824-l.
	</p> 
	<p>
For the purposes of identifying information objects unambiguously within an open information
system, IS0 10303 adopts the following conventions:
	</p> 
	<ul>
		<li>
- The value following the part number shall be version number. By convention, the value
of the version number of the first edition shall be 1. The value 0, if used at all, is reserved
to refer to DIS documents.
         </li>
		<li>
- The value following the version number is used to identify the type of information object
defined within the part. The value 1 shall indicate that the object so identified is a schema.
         </li>
		<li>
- The value following the object type is an integer that identifies the instance of the object
type so identified.
         </li>
		<li>
- To meet the syntactic requirements of ISO/IEC 8824-1, replace each occurrence of a
low line in a schema name with a hyphen when defining this value.
         </li>
	</ul>
	<p>
EXAMPLE 1 - In IS0 10303-41, several schemas are defined. The application-context-schema can
be identified by the value
	</p> 
	<p>
( iso standard 10303 part(41) version(l) object(l) application-context-schema(l) )
	</p> 
	<p>
and the product-definition schema can be identified by the value
( iso standard 10303 part(41) version(l) object(l) product-definition-schema(2) )	
	</p> 
</collection_page>
