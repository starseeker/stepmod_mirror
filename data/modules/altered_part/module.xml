<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.12 2005/02/04 15:32:30 kovaliovas Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="altered_part" part="1602" version="1" sc4.working_group="12" wg.number="3284" wg.number.arm="3285" wg.number.mim="3286" checklist.internal_review="3675" checklist.project_leader="3676" checklist.convener="3677" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/02/04 15:32:30 $" rcs.revision="$Revision: 1.12 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, part, altered part, electrical, piece part
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
		This part of ISO 10303 specifies an application module for the
		representation of the properties of a component that has had some 
		preparation work done to it that modifies the form or fit or function or material properties of the component and is usually installed in the product to be delivered to a customer. The preparation work may be necessary to facilitate the installation, or to support alternate mounting arrangements, or to support field programmability. This module does not distinguish between the properties of a component that has been altered prior to installation and the properties of a component that has been altered, installed and delivered to a customer as part of the assembly.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>representation of a piece part which is modified;</li>
		<li>items within the scope of application module Altered package, ISO/CD-TS 10303-1601;</li>
		<li>items within the scope of application module Packaged part black box model, ISO/CD-TS 10303-1710.</li>
 </inscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Altered_packaged_part" extensible="NO">
            <aimelt xml:space="preserve">packaged_part</aimelt>
            <source xml:space="preserve">ISO 10303-1710</source>
            <refpath xml:space="preserve">packaged_part &lt;=
physical_unit &lt;=
product_definition
{product_definition
[product_definition.description = 'altered packaged part']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage']}
</refpath>
            <aa attribute="base_packaged_part" assertion_to="Packaged_part">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_part &lt;=
physical_unit &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'base packaged part'}
product_definition_relationship.relating_product_definition -&gt;
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage'}
product_definition =&gt;
physical_unit =&gt;
packaged_part
</refpath>
            </aa>
            <aa attribute="used_package" assertion_to="Altered_package">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_part &lt;=
physical_unit &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'used package'}
product_definition_relationship.relating_product_definition -&gt;
{product_definition
[product_definition.description = 'altered package']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage']}
product_definition =&gt;
physical_unit =&gt;
package
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>

