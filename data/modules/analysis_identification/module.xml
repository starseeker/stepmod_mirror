<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.11 2008/08/17 20:48:36 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="analysis_identification"
   part="1476"
   version="1"
   sc4.working_group="12"
   wg.number="4546"
   wg.number.arm="4547"
   wg.number.mim="4548"
   checklist.convener="4636"
   checklist.internal_review="4637"
   checklist.project_leader="4638"
   status="CD-TS"
   language="E"
   publication.year=""
   publication.date=""
   published="n"
   rcs.date="$Date: 2008/08/17 20:48:36 $"
   rcs.revision="$Revision: 1.11 $"
   development.folder="dvlp">

 <keywords>
    module, systems engineering, analysis
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 <abstract>
    <li>
    	This part of ISO 10303 specifies an application module for the representation 
	the data that identifies an analysis along with its associated discipline, 
	version, and status.
	</li>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap233.projlead2"/>
   <editor ref="ap233.editor2"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
    	This part of ISO 10303 specifies an application module for the representation 
	the data that identifies an analysis along with its associated discipline, 
	version, and status.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>representation of the data that identify an analysis its associated discipline, 
   	version, and status.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
	<li>relationships between analyses;</li>
	<li>representation of any use of an analysis.</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
  	<mapping_table>
		<ae entity="Analysis">
			<aimelt>
				product
			</aimelt>
			<source>ISO 10303-41</source>
			<refpath>
				product
				{product &lt;- 
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category 
				product_category.name='Analysis'}
			</refpath>
		</ae>
		<ae entity="Analysis_discipline_definition">
			<aimelt>product_definition</aimelt>
			<source>ISO 10303-41</source>
			<refpath>
				product_definition
				{product_definition
				product_definition.formation -&gt;
				product_definition_formation
				product_definition_formation.of_product -&gt;
				product &lt;- 
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category 
				product_category.name='Analysis'}				
			</refpath>
                        <aa attribute="defined_version" assertion_to="Analysis_version">
                          <aimelt>PATH</aimelt>
                          <refpath>
                                product_definition
				product_definition.formation -&gt;
				product_definition_formation
				{product_definition_formation.of_product -&gt;
				product &lt;- 
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category 
				product_category.name='Analysis'}
                          </refpath>
                        </aa>
		</ae>
		<ae entity="Analysis_version">
			<aimelt>
				product_definition_formation
			</aimelt>
			<source>
				ISO 10303-41
			</source>
			<refpath>
				product_definition_formation
				{product_definition_formation
				product_definition_formation.of_product -&gt;
				product &lt;- 
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category 
				product_category.name='Analysis'}
			</refpath>
			<aa attribute="of_product" assertion_to="Analysis">
				<aimelt>PATH</aimelt>
				<refpath>
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product
					{product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='Analysis'}
				</refpath>
			</aa>
		</ae>
		<ae entity="Analysis_version_sequence">
			<aimelt>product_definition_formation_relationship</aimelt>
			<source>ISO 10303-41</source>
			<refpath>
				product_definition_formation_relationship
				{product_definition_formation_relationship
				product_definition_formation_relationship.relating_product_definition_formation -&gt;
				product_definition_formation
				product_definition_formation.of_product -&gt;
				product	&lt;- 
				product_related_product_category.products[i]
				product_related_product_category &lt;=
				product_category
				product_category.name='Analysis'}
			</refpath>
			<aa attribute="predecessor" assertion_to="Analysis_version">
				<aimelt>PATH</aimelt>
				<refpath>
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='Analysis'}
				</refpath>
			</aa>
			<aa attribute="successor" assertion_to="Analysis_version">
				<aimelt>PATH</aimelt>
				<refpath>
					product_definition_formation_relationship
					product_definition_formation_relationship.relating_product_definition_formation -&gt;
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i] 
					product_related_product_category &lt;=
					product_category
					product_category.name='Analysis'}
				</refpath>
			</aa>
		</ae>
		<ae entity="Identification_assignment" original_module="identification_assignment">
			<aimelt>applied_identification_assignment</aimelt>
			<source>ISO 10303-1021</source>
			<aa attribute="items" assertion_to="Analysis">
				<aimelt>PATH</aimelt>
				<refpath>
					applied_identification_assignment
					applied_identification_assignment.items[i] -&gt;
					identification_item
					identification_item *&gt;
					identification_item
					identification_item *&gt;
					analysis_identification_item
					analysis_identification_item =
					product
					{product &lt;- 
					product_related_product_category.products
					product_related_product_category &lt;=
					product_category 
					product_category.name='Analysis'}
				</refpath>
			</aa>
			<aa attribute="items" assertion_to="Analysis_discipline_definition">
				<aimelt>PATH</aimelt>
				<refpath>
					applied_identification_assignment
					applied_identification_assignment.items[i] -&gt;
					product_definition
					{product_definition
					product_definition.formation -&gt;
					product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products[i]
					product_related_product_category &lt;=
					product_category
					product_category.name='Analysis'}
				</refpath>
			</aa>
			<aa attribute="items" assertion_to="Analysis_version">
				<aimelt>PATH</aimelt>
				<refpath>
					applied_identification_assignment
					applied_identification_assignment.items[i] -&gt;
					identification_item
					identification_item *&gt;
					identification_item
					identification_item *&gt;
					analysis_identification_item
					analysis_identification_item =
					product_definition_formation
					{product_definition_formation
					product_definition_formation.of_product -&gt;
					product &lt;- 
					product_related_product_category.products
					product_related_product_category &lt;=
					product_category 
					product_category.name='Analysis'}
				</refpath>
			</aa>
		</ae>
	</mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
 </mim>

 <!--
  <usage_guide><p>This annex provides a rather random collection of notes associated with the both the 
  creation of an analysis capability within STEP and its associated application.  The purpose is to 
  provide a single placeholder for various emails of significance that where not widely 
  distributed and will soon be lost in our large email archive boxes.</p>
  
  To be done:
  <ul>
<li>Put all hyperlink targets in ap333 /etc folder on stepmod.  AP233 workspace is no good.  It doesn't have 
  open access.  This can be easily fixed by Tommy Taylor. That battle ground is loose-loose, I'm not going 
  there again. I'm prefer to use stepmod.  Its got necessary configuration controls and it provides open access
  to all reviewers.</li>
  <li>Provide hyperlink to first draft sent by Keith with associated email notes back from Phil</li>
  <li>Provide hyperlink to followup document with abstracts and definitions "Decision_making16.pdf"</li>
  <li>Provide hyperlink to the file "AP233 Decision_analysis(1).pdf" given to Phil in Hangzhou</li>
  <li>Provide hyperlinks to relevant references sent by Keith with notes as to why they are important</li>
  <li>Provide chronological log of emails of relevance traffic</li>
  <li>Figure out some way to give reviewers a friendly means of seeing all attributes associated with all 
  concepts captured as entities.  Need a big picture view and then a detail view.  Need to do it is a 
  manner that can be easily maintained as changes are made.</li>
  </ul>
  
  <b>Systems Engineering Analysis Support for Decision Making</b>
  <ol>
  <li>Provide hyperlink to the file "AP233 Decision_analysis(1).pdf" given to Phil in Hangzhou</li>
  <li>Provide hyperlink to followup document with abstracts for all figues, definitions 
  for all semantics used and key to the mapping to OWL via Protege "Decision_making16.pdf"</li>
  <li><b>To-be-done</b> Cross check content of this document with content of this and companion schemas </li>
  </ol>
  
  <b>Original note from Keith Hunten (base defined): </b>
  <p>Here is something to start on.  I have yanked the pertinent information from AP209E1 and copied 
  it here.  
  <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/analysis/Analysis_Identification_Module_Input.doc?rev=1.1"/>.
  Take a look and see what you think and get back to me.  There definitely 
  needs to be some more work done on this - see my comments in the ARM EXPRESS for E2 
  section.</p>
  
  <b>More guidance from Keith (Thu, 05 Jan 2006)</b>
  <p>Now that we are starting to talk about integration of specific types of 
  analyses please cast a look at the attached Part 53 document.  This part evolved 
  from the European GEM program, and then it was integrated along with the CGNS 
  computational fluid dynamics work into the STEP IRs.  In the (now aborted) AP237 
  work this part was used to integrate the CFD analysis to the structure we have 
  just been working on.  </p>
  
  <p>The intent is for Part 53 
    <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/analysis/WG12N2170_Part_53_Document.pdf?rev=1.1"/>.
  to serve as the basis for 
  integrating multiple disciplines together - so our next step needs to be looking 
  at putting together an ARM for these concepts.  Of course we can take the typical 
  current approach of just re-casting it as an ARM</p>
  
  <p>Please look at the Part 53. It has a very carefully thought out relationship 
  of properties to analysis in general.</p>

  <p>Please check out diagram 10 in the AP209E1 ARM provided in
    <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/analysis/AP209_ARM_Overview.pdf?rev=1.1"/>.
  - it has the concepts of nominal (what we call Materials and Processes) type 
  properties, and the idealized ones for an analysis.</p>
  
  <b>Feedback from Phil (Wed, 4 Jan 2006)</b>
 
  <p>OK Here is my first cut at fixing up your schema!  I still have a number of issues:</p>
  <ul>
<li>This analysis module appears to be PART centric, I believe it should be PRODUCT 
centric to allow us to deal with Critical path analysis of project plans or 
execution path analysis of Functional Flow Block Diagrams.</li>
<li> Not sure how to deal with release status. I will ask my PLCS colleagues on this</li>
<li>I haven't sorted out the external file information</li>
<li>design_discipline_product_definition seems to be self standing and not related 
to the rest of the model, isn't this purely a product_view_definition?</li></ul>

<p>The following comments within the email are collected.  These provide Phil's rational for removing 
attributes listed in Keith's base.  Actual code etc. sent by Phil has been delete, its all in the 
in the arm.exp files</p>
<ul>
<li>Re. ENTITY  Analysis - (*  analysis_type   : TEXT; - This should be done via a classification scheme, 
since there is an unbounded collection of analysis types *)</li>
<li>Re. ENTITY  Analysis - (* owner           : person_organization;  - This should be handled via a 
person_organization_assignment in the role of "owner" *)</li>
<li>Re. ENTITY Analysis_design_version_relationship - (* In this ENTITY we should 
re-declare the analysis and design attributes from the inherited related_version and 
relating_version attributes: *)</li>
<li>Re. ENTITY analysis_discipline_product_definition - (* approved_by : OPTIONAL approval;
This should be handled via an assigned approval *)</li>
<li>Re. ENTITY analysis_discipline_product_definition - (* creation_date   : DATE;
This should be handled via a date_time_assignment in the role of "creation_date" *)</li>
<li>Re. ENTITY analysis_version -  (* approved_by      : OPTIONAL approval;
This should be handled via an assigned approval *)</li>
<li>Re. ENTITY analysis_version -  (* contract_number  : OPTIONAL IDENTIFIER;
This should be handled via contract assignment *)</li>
<li>Re. ENTITY analysis_version -  (* creator          : person_organization;
This should be handled via a person_organization_assignment in the role of "creator" *)
</li>
<li>Re. ENTITY analysis_version -  (* security_code    : LABEL;
This should be handled via security classification *)</li>
</ul>
  <b>From Keith Hunten to Phil </b>
<p>I could not agree more!  There are several attributes that need to  be removed - 
there are notes in the file I sent to Harry on that subject.  The base of this is that 
in the modular APs and architecture the 'old' AP203/AP209 way of associating things 
like approvals, contracts, security and the like has now changed quite a bit.  This 
is the task that remains to complete the conversion of the 
analysis_identification module.</p>
 
<p>This of course gets me to one of my favourite soapboxes - now that these concepts 
are modularized and done essentially by interaction operators and assignments, 
they are nearly invisible to the casual observer!  Now we do not have a product 
definition that says it may have an approval - there is just an approval 'floating 
out there' that may be used - and it is up to the user/implementor to find it.  We 
definately will need really good RPGs here to say the least - I wlll be quite 
interested to see how good a job your DEXs do in bringing this across.</p>

<b>More from Keith</b>
<p>Lots of good ideas here - looks like the two of you have answered most of my comments.</p>

<ul>
<li>I agree with Phil on the use of classification for analysis type - 
do you have anything we can use for a prototype?</li>
<li>In addition to handling release status, many of the extensible selects in the 
Analysis_characterized ARM will need further additions in order to address other????
aspects of the AP209 requirements.</li>
<li>We definately need to do this - a quick look at AP203E2 should answer it as they 
certainly do this to manage CAD files rather than STEP shape reps if they wish.  
Come to think of it AP239 should do this as well...</li>
<li>As far as being Part centric - this comes from AP203E1.  The E2 version is
Product centric and I believe that we should go with that.</li></ul>
 
<p>The DDPD is indeed a product_view_definition - but in the context of a 
design/analysis integration this needs to be expilcitly deliniated.  I suppose 
I could be convinced to forgo this specialization - however this distinction was 
brought out as being important during the original requirements gathering and 
anlysis stage of AP209.</p>

<b>From Phil</b>
<p>I agree that we need to support external files. I think we should follow the 
External_model module approach (although I have issues about the scope limitation 
in that module to require it to be a geometric model!).</p>

<p>I have moved the relationship to product_version into a separate module.
I'm not sure if this relationship should only be to product versions, do we want to 
cover Psychometric analysis of people with this structure, if so we would need a 
more general assignment capability.</p>
<note>Harry says - This could be of major importance to human operated systems</note>
 
<p>I have moved the status flag out of analysis version to a separate entity which 
then related to the analysis version this allows different status' to be applied to 
the same version over time, this is then managed using effectivity_assignment.</p>
 
<p>I have deleted the Design_discipline_product_definition from the module. Since 
it is not related to any other aspect it should not be a part of this module and at 
best should be in a separate module. However, based on my first point, if we allow 
analysis of non-products, then we cannot assume that the definition of the non-product 
would be given in a subtype of a product_view_definition.</p>
 
<p>Finally I have removed the CAE file reference. There could easily be zero, one or 
many files associated with the analysis definition, i.e. results file, mesh file 
parameters file etc. I think this should be handled using the same structure you use 
for specifying the analysis definition, then creating a special subtype of that 
structure which includes a file reference. Please have a look at External_model, 
that creates a subtype of Geometric_model with an external file reference. This 
approach allows the same handling of the concepts irrespective of where they are 
held (internally in the data structure or in an external file).</p>
<note>Harry says - Key don't forget</note>

<b>From Phil - Thoughts on usage</b>
<p>Some thoughts I have on how this can tie together with the work we are doing in 
AP233.  As currently specified in the associated definitions from the previous 
version of AP209, an analysis represents the results of an analysis process. 
Therefore we need to have some tie up between an activity_actual (representing the 
performance of the analysis be a particular person using particular resources on a 
specified date/time) and the analysis results.</p>

<p>From my AP233/Vivace perspective I also want to have a relationship between 
derived/calculated properties of a product and the analysis which lead to these 
property values. The way I currently see it is that we would have an independent 
property assignment of the property value to the product. This property would be 
associated with the same analysis activity in the role of an output. I also think 
the property should be linked directly to the analysis results via a justification 
as in "this property is justified by these analysis results".</p>

<b>From Harry</b>
<p>The abstraction level that my head is at is defined in the Analysis in support
of decision making slides that we overviewed in Hangzhou and that you have an I
think are working with via Vivace.  These are now at
  <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/analysis/AP233_Decision_analysis_1.pdf?rev=1.1"/>.
If what you say is supportive of what I outlined there I'm happy.  I yield to you 
guys on the deep EXPRESS detail.</p>

<p>One point that I feel is important is the concept parameters being a resultant
type view of a collection of properties.  The hard point is that my parameters
coming out of my analysis become the properties that you will use in your
analysis.  I tried to capture this in the slides but haven't the fogggiest idea
as to how this is expressed in EXPRESS.</p>

<p>It distrubes me that AP233 is trying to use the word "parameter" for a very
focus purpose in the SBB domain.  We really need to take that word back and use 
it in the most generic context possible.</p>

</usage_guide>

-->

</module>
