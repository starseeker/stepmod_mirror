(*
   $Id: mkmodule.js,v 1.46 2010/02/04 16:48:02 robbod Exp $
   ISO TC184/SC4/WG12 N9830 - ISO/CD-TS - 10303- annotated_3d_model_equivalence_shape - EXPRESS ARM*)
(* UNDER DEVELOPMENT *)
SCHEMA Annotated_3d_model_equivalence_shape_arm;

  USE FROM Annotated_3d_model_equivalence_inspection_result_arm;
  
  USE FROM Advanced_boundary_representation_arm;
  
  USE FROM External_representation_item_arm;

  USE FROM Manifold_surface_arm;

  USE FROM Scan_data_3d_shape_arm;
  
  USE FROM Shell_based_wireframe_arm;
  
  REFERENCE FROM Support_resource_arm 
    (bag_to_set);
 
  TYPE a3ms_accuracy_type_name = EXTENSIBLE ENUMERATION BASED_ON a3m_accuracy_type_name with
    (atns_length_measure,
     atns_others);
  END_TYPE;
  
  TYPE a3ms_detected_difference_type_name = EXTENSIBLE ENUMERATION BASED_ON a3m_detected_difference_type_name with
    (ddns_area_measure,
     ddns_cartesian_point,
     ddns_connected_face_set,
     ddns_count_measure,
     ddns_edge,
     ddns_face,
     ddns_five_count_measure,
     ddns_four_count_measure,
     ddns_length_measure,
     ddns_no_element,
     ddns_others,
     ddns_point_on_curve,
     ddns_point_on_surface,
     ddns_several_edges,
     ddns_several_faces,
     ddns_three_count_measure,
     ddns_two_cartesian_points,
     ddns_two_count_measure,
     ddns_volume_measure);
  END_TYPE;

  TYPE a3ms_element_type_name = EXTENSIBLE ENUMERATION BASED_ON a3m_element_type_name with
    (etns_connected_edge_set,
     etns_connected_face_set,
     etns_external_representation_item,
     etns_manifold_solid_brep,
     etns_others,
     etns_point_cloud_dataset,
     etns_shell_based_surface_model,
     etns_shell_based_wireframe_model,
     etns_vertex_point);
  END_TYPE;

  TYPE a3ms_equivalence_detected_difference_select = EXTENSIBLE SELECT 
    BASED_ON equivalence_detected_difference_select WITH
    (area_measure,
     Cartesian_point,
     Connected_face_set,
     count_measure,
     Edge,
     Face,
     length_measure,
     Point_on_curve,
     Point_on_surface,
     volume_measure);
  END_TYPE;

  TYPE a3ms_equivalence_measured_value_select = EXTENSIBLE SELECT 
    BASED_ON equivalence_measured_value_select WITH
    (area_measure,
     length_measure,
     plane_angle_measure,
     volume_measure);
  END_TYPE;
  
  TYPE a3ms_inspected_equivalence_element_select = EXTENSIBLE GENERIC_ENTITY SELECT 
    BASED_ON inspected_equivalence_element_select WITH
    (Connected_edge_set,
     Connected_face_set,
     External_representation_item,
     Manifold_solid_brep,
     Point_cloud_dataset,
     Shell_based_surface_model,
     Vertex_point);
  END_TYPE;

  TYPE a3ms_measured_data_type_name = EXTENSIBLE ENUMERATION BASED_ON a3m_measured_data_type_name with
    (mdns_area_measure,
     mdns_boolean_value,
     mdns_length_measure,
     mdns_others,
     mdns_plane_angle_measure,
     mdns_volume_measure);
  END_TYPE;

  TYPE a3ms_target_annotated_3d_model_select = EXTENSIBLE GENERIC_ENTITY SELECT 
    BASED_ON target_annotated_3d_model_select WITH
    (Representation_relationship);
  END_TYPE;

  ENTITY A3m_equivalence_criterion_for_shape
    ABSTRACT SUPERTYPE OF 
      (ONEOF(A3m_equivalence_criterion_of_detailed_shape_data_content,
             A3m_equivalence_criterion_of_representative_shape_property_value,
             A3m_equivalence_criterion_of_shape_data_structure))
    SUBTYPE OF(A3m_equivalence_criterion);
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:?] OF a3ms_element_type_name;
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:?] OF a3ms_element_type_name;
      SELF\A3m_equivalence_criterion.measured_data_type : a3ms_measured_data_type_name;
      SELF\A3m_equivalence_criterion.detected_difference_types : LIST[1:?] OF a3ms_detected_difference_type_name;
      SELF\A3m_equivalence_criterion.accuracy_types : LIST[0:?] OF a3ms_accuracy_type_name;
    WHERE
      WR1: a3ms_validate_accuracy_types(SELF,SELF);
  END_ENTITY;
  
  ENTITY A3m_equivalence_criterion_of_detailed_shape_data_content
    ABSTRACT SUPERTYPE OF 
    (ONEOF (Different_surface_normal,
            Mismatch_of_arcwise_connected_curves,
            Mismatch_of_arcwise_connected_surfaces,
            Mismatch_of_arcwise_connected_surfaces_boundary,
            Mismatch_of_points,
            Mismatch_of_point_cloud_and_related_geometry,
            Mismatch_of_underlying_edge_geometry,
            Mismatch_of_underlying_face_geometry))
    SUBTYPE OF(A3m_equivalence_criterion_for_shape);
  END_ENTITY;
  
  ENTITY A3m_equivalence_criterion_of_representative_shape_property_value
    ABSTRACT SUPERTYPE OF 
    (ONEOF (Different_bounding_box,
            Different_centroid,
            Different_curve_length,
            Different_number_of_closed_shell,
            Different_number_of_geometric_elements,
            Different_number_of_geometric_elements_wireframe_model,                               
            Different_number_of_topological_elements,
            Different_number_of_topological_elements_wireframe_model,
            Different_surface_area,
            Different_volume))
    SUBTYPE OF(A3m_equivalence_criterion_for_shape);
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types :  LIST[1:?] OF a3m_element_type_name
        := SELF\A3m_equivalence_criterion.compared_element_types;
  END_ENTITY;

  ENTITY A3m_equivalence_criterion_of_shape_data_structure
    ABSTRACT SUPERTYPE OF
    (ONEOF (Mismatch_of_edges,
			Mismatch_of_faces,
			Missing_edge,
			Missing_face))
    SUBTYPE OF(A3m_equivalence_criterion_for_shape);
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types :  LIST[1:?] OF a3m_element_type_name
        := SELF\A3m_equivalence_criterion.compared_element_types;
  END_ENTITY;

  ENTITY A3ms_equivalence_criterion_with_specified_elements
    SUBTYPE OF(A3m_equivalence_criterion_for_shape,A3m_equivalence_criterion_with_specified_elements);
      SELF\A3m_equivalence_criterion_with_specified_elements.comparing_specified_elements :
       SET[1:?] OF a3ms_inspected_equivalence_element_select; 
      SELF\A3m_equivalence_criterion_with_specified_elements.compared_specified_elements :
       SET[1:?] OF a3ms_inspected_equivalence_element_select; 
  WHERE
    WR1: (a3ms_get_element_type(SELF.comparing_specified_elements) = etns_external_representation_item) OR
         (a3ms_get_element_type(SELF.comparing_specified_elements) IN SELF\A3m_equivalence_criterion_for_shape.comparing_element_types);  
    WR2: (a3ms_get_element_type(SELF.compared_specified_elements) = etns_external_representation_item )OR
         (a3ms_get_element_type(SELF.compared_specified_elements) IN SELF\A3m_equivalence_criterion_for_shape.compared_element_types);
  END_ENTITY;

  ENTITY A3ms_equivalence_inspection_result
    SUBTYPE OF(A3m_equivalence_inspection_result);
      SELF\A3m_equivalence_inspection_result.criterion_inspected:a3m_equivalence_criterion_for_shape;
    WHERE
     WR1: a3ms_validate_accuracy_types(SELF,
           SELF\A3m_equivalence_inspection_result.criterion_inspected);
     WR2: SIZEOF (QUERY(re <* bag_to_set(USEDIN(SELF,
           'ANNOTATED_3D_MODEL_EQUIVALENCE_INSPECTION_RESULT_ARM.'+
           'A3M_EQUIVALENCE_INSPECTION_REPORT.INSPECTION_RESULT')) |
         NOT(a3ms_validate_element_types(re,
             SELF\A3m_equivalence_inspection_result.criterion_inspected)))) = 0;
     WR3: SIZEOF (QUERY(re <* bag_to_set(USEDIN(SELF,
           'ANNOTATED_3D_MODEL_EQUIVALENCE_INSPECTION_RESULT_ARM.'+
           'A3M_EQUIVALENCE_INSPECTION_REPORT.INSPECTION_RESULT')) |
         NOT(a3ms_validate_detected_difference_types(re,
             SELF\A3m_equivalence_inspection_result.criterion_inspected)))) = 0;
     WR4: SIZEOF (QUERY(re <* bag_to_set(USEDIN(SELF,
           'ANNOTATED_3D_MODEL_EQUIVALENCE_INSPECTION_RESULT_ARM.'+
           'A3M_EQUIVALENCE_INSPECTION_REPORT.INSPECTION_RESULT')) |
         NOT(a3ms_validate_measured_type(re,
             SELF\A3m_equivalence_inspection_result.criterion_inspected)))) = 0;
  END_ENTITY;

  ENTITY Different_bounding_box
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      approximation_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[3:3] OF a3ms_element_type_name
       := [etns_manifold_solid_brep,etns_shell_based_surface_model,etns_shell_based_wireframe_model];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_two_cartesian_points];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Different_centroid
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      approximation_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[3:3] OF a3ms_element_type_name
       := [etns_manifold_solid_brep,etns_shell_based_surface_model,etns_shell_based_wireframe_model];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_cartesian_point];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Different_curve_length
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      approximation_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_edge_set];
       SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_length_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Different_number_of_closed_shell
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_manifold_solid_brep];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF  a3ms_detected_difference_type_name
       := [ddns_count_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;
 
  ENTITY Different_number_of_geometric_elements
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[2:2] OF a3ms_element_type_name
       := [etns_manifold_solid_brep,etns_shell_based_surface_model];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_three_count_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;
 
  ENTITY Different_number_of_geometric_elements_wireframe_model
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_shell_based_wireframe_model];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
        := [ddns_two_count_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  ENTITY Different_number_of_topological_elements
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[2:2] OF a3ms_element_type_name
       := [etns_manifold_solid_brep, etns_shell_based_surface_model];
      SELF\A3m_equivalence_criterion.measured_data_type:a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_five_count_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  ENTITY Different_number_of_topological_elements_wireframe_model
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_shell_based_wireframe_model];
      SELF\A3m_equivalence_criterion.measured_data_type:a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_four_count_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;
  
  ENTITY Different_surface_area
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      approximation_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_area_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_area_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Different_surface_normal 
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      discretization_distance_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_plane_angle_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
         := [ddns_cartesian_point,ddns_point_on_surface];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[1:1] OF a3ms_accuracy_type_name := [atns_length_measure];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Different_volume
    SUBTYPE OF (A3m_equivalence_criterion_of_representative_shape_property_value);
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      approximation_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_manifold_solid_brep];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_volume_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name
       := [ddns_volume_measure];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Mismatch_of_arcwise_connected_curves 
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      discretization_distance_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_edge_set];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_edge_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
         := [ddns_cartesian_point,ddns_point_on_curve];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[1:1] OF a3ms_accuracy_type_name := [atns_length_measure];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Mismatch_of_arcwise_connected_surfaces 
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      discretization_distance_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
         := [ddns_cartesian_point,ddns_point_on_surface];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[1:1] OF a3ms_accuracy_type_name := [atns_length_measure];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;
  
  ENTITY Mismatch_of_arcwise_connected_surfaces_boundary 
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
      discretization_distance_tolerance : length_measure;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
         := [ddns_cartesian_point,ddns_point_on_curve];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[1:1] OF a3ms_accuracy_type_name := [atns_length_measure];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Mismatch_of_edges
    SUBTYPE OF(A3m_equivalence_criterion_of_shape_data_structure);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name
       := [etns_connected_edge_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
       := [ddns_edge, ddns_several_edges];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  ENTITY Mismatch_of_faces
    SUBTYPE OF(A3m_equivalence_criterion_of_shape_data_structure);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name
       := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
       := [ddns_face, ddns_several_faces];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  ENTITY Mismatch_of_point_cloud_and_related_geometry
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[2:2] OF a3ms_element_type_name
       := [etns_connected_edge_set, etns_connected_face_set];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name
       := [etns_point_cloud_dataset];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[3:3] OF a3ms_detected_difference_type_name
         := [ddns_cartesian_point,ddns_point_on_curve,ddns_point_on_surface];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[1:1] OF a3ms_accuracy_type_name := [atns_length_measure];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;
  
  ENTITY Mismatch_of_points
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
     SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_numerical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_vertex_point];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_vertex_point];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_length_measure;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name :=
         [ddns_no_element];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
    WHERE
      WR1 : ('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.' +
             'A3M_EQUIVALENCE_LOWER_VALUE_LIMIT' 
              IN TYPEOF(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold))
            AND
            (a3ms_get_value_limit_type(SELF\A3m_equivalence_criterion.assessment_specification\A3m_equivalence_assessment_by_numerical_test.threshold)
             = SELF.measured_data_type);
  END_ENTITY;

  ENTITY Mismatch_of_underlying_edge_geometry
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name := [ddns_edge];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  ENTITY Mismatch_of_underlying_face_geometry
    SUBTYPE OF(A3m_equivalence_criterion_of_detailed_shape_data_content);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.comparing_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[1:1] OF a3ms_detected_difference_type_name := [ddns_face];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  ENTITY Missing_edge
    SUBTYPE OF(A3m_equivalence_criterion_of_shape_data_structure);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name
       := [etns_connected_edge_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
       := [ddns_no_element, ddns_edge];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  ENTITY Missing_face
    SUBTYPE OF(A3m_equivalence_criterion_of_shape_data_structure);  
      SELF\A3m_equivalence_criterion.assessment_specification : A3m_equivalence_assessment_by_logical_test;
    DERIVE
      SELF\A3m_equivalence_criterion.compared_element_types : LIST[1:1] OF a3ms_element_type_name
       := [etns_connected_face_set];
      SELF\A3m_equivalence_criterion.measured_data_type: a3ms_measured_data_type_name := mdns_boolean_value;
      SELF\A3m_equivalence_criterion.detected_difference_types: LIST[2:2] OF a3ms_detected_difference_type_name
       := [ddns_no_element, ddns_face];
      SELF\A3m_equivalence_criterion.accuracy_types: LIST[0:0] OF a3ms_accuracy_type_name := [];
  END_ENTITY;

  FUNCTION a3ms_get_accuracy_type
    (ei:A3m_equivalence_inspection_accuracy): a3ms_accuracy_type_name;
    IF(a3ms_get_value_limit_type(ei.range) = mdns_length_measure) THEN
      RETURN(atns_length_measure);
    END_IF;
    RETURN(atns_others);
  END_FUNCTION;

  FUNCTION a3ms_get_detected_difference_type
    (ei:LIST[0:?] OF equivalence_detected_difference_select):a3ms_detected_difference_type_name;
    LOCAL
      type_out : SET OF STRING;
      sizeei : INTEGER;
    END_LOCAL;
    sizeei := SIZEOF(ei);
    IF(sizeei = 0) THEN
      RETURN(ddns_no_element);
    ELSE
      type_out := TYPEOF(ei[1]);
	-- all Element types should be same.
      REPEAT i := 2 TO sizeei;
        IF(TYPEOF(ei[i]) <> type_out) THEN
	       RETURN(ddns_others);
	    END_IF;
	  END_REPEAT;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.AREA_MEASURE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_area_measure);
		ELSE
		  RETURN(ddns_others);
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.CARTESIAN_POINT' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_cartesian_point);
		ELSE
		  IF(sizeei = 2) THEN
			RETURN(ddns_two_cartesian_points);
		  ELSE
			RETURN(ddns_others);
		  END_IF;
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.CONNECTED_FACE_SET' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_connected_face_set);
		ELSE
		  RETURN(ddns_others);
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.COUNT_MEASURE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_count_measure);
		ELSE
		  IF(sizeei = 2) THEN
			RETURN(ddns_two_count_measure);
		  ELSE
			IF(sizeei = 3) THEN
			  RETURN(ddns_three_count_measure);
			ELSE
			  IF(sizeei = 4) THEN
				RETURN(ddns_four_count_measure);
			  ELSE
			    IF(sizeei = 5) THEN
				  RETURN(ddns_five_count_measure);
			    ELSE
				  RETURN(ddns_others);
			    END_IF;
			  END_IF;
			END_IF;
		  END_IF;
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.EDGE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_edge);
		ELSE
		  RETURN(ddns_several_edges);
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.FACE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_face);
		ELSE
		  RETURN(ddns_several_faces);
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.LENGTH_MEASURE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_length_measure);
		ELSE
		  RETURN(ddns_others);
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.POINT_ON_CURVE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_point_on_curve);
		ELSE
		  RETURN(ddns_others);
		END_IF;
	  END_IF;
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.POINT_ON_SURFACE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_point_on_surface);
		ELSE
		  RETURN(ddns_others);
		END_IF;
	  END_IF;
	  
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.VOLUME_MEASURE' IN type_out) THEN
		IF(sizeei = 1) THEN
		  RETURN(ddns_volume_measure);
		ELSE
		  RETURN(ddns_others);
		END_IF;
	  END_IF;
    END_IF;
    RETURN(ddns_others);
  END_FUNCTION;

  FUNCTION a3ms_get_element_type
    (ei:SET[1:?] OF inspected_equivalence_element_select):a3ms_element_type_name;
    LOCAL
      type_out : SET OF STRING;
      repset: SET OF Representation;
    END_LOCAL;
    type_out := TYPEOF(ei[1]);
    -- etns_shell_based_wireframe_model
	repset := bag_to_set(USEDIN(ei[1],'ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.REPRESENTATION.ITEMS'));
    REPEAT i := 1 TO SIZEOF(repset);
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.SHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION' IN TYPEOF(repset[i])) THEN
	     RETURN(etns_shell_based_wireframe_model);
	  END_IF;
	END_REPEAT;
	-- all Element types should be same.
    IF(SIZEOF(ei) > 1) THEN
	  RETURN(etns_others);
	END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.CONNECTED_EDGE_SET' IN type_out) THEN
       RETURN(etns_connected_edge_set);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.CONNECTED_FACE_SET' IN type_out) THEN
       RETURN(etns_connected_face_set);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.MANIFOLD_SOLID_BREP' IN type_out) THEN
       RETURN(etns_manifold_solid_brep);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.POINT_CLOUD_DATASET' IN type_out) THEN
       RETURN(etns_point_cloud_dataset);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.SHELL_BASED_SURFACE_MODEL' IN type_out) THEN
       RETURN(etns_shell_based_surface_model);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.VERTEX_POINT' IN type_out) THEN
       RETURN(etns_vertex_point);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.EXTERNAL_REPRESENTATION_ITEM' IN type_out) THEN
       RETURN(etns_external_representation_item);
    END_IF;
    RETURN(etns_others);
  END_FUNCTION;

  FUNCTION a3ms_get_measured_type
    (ei: equivalence_measured_value_select):a3ms_measured_data_type_name;
    LOCAL
      type_out : SET OF STRING;
    END_LOCAL;
    type_out := TYPEOF(ei);
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.AREA_MEASURE' IN type_out) THEN
       RETURN(mdns_area_measure);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.EQUIVALENCE_BOOLEAN_VALUE' IN type_out) THEN
       RETURN(mdns_boolean_value);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.LENGTH_MEASURE' IN type_out) THEN
       RETURN(mdns_length_measure);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.PLANE_ANGLE_MEASURE' IN type_out) THEN
       RETURN(mdns_plane_angle_measure);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.VOLUME_MEASURE' IN type_out) THEN
       RETURN(mdns_volume_measure);
    END_IF;
    RETURN(mdns_others);
  END_FUNCTION;

  FUNCTION a3ms_get_value_limit_type
    (ei:a3m_equivalence_value_limit_type_select):a3ms_measured_data_type_name;
    LOCAL
      aevr : A3m_equivalence_value_range;
      aevl : A3m_equivalence_value_limit;
      type_out : SET OF STRING :=[];
    END_LOCAL;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_VALUE_RANGE' IN TYPEOF(ei)) THEN
      aevr := ei;
      type_out := TYPEOF (aevr.lower_limit.value_component);
    ELSE
      IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_VALUE_LIMIT' IN TYPEOF(ei)) THEN
        aevl := ei;
        type_out := TYPEOF (aevl.value_component);
      END_IF;
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.AREA_MEASURE' IN type_out) THEN
       RETURN(mdns_area_measure);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.EQUIVALENCE_BOOLEAN_VALUE' IN type_out) THEN
       RETURN(mdns_boolean_value);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.LENGTH_MEASURE' IN type_out) THEN
       RETURN(mdns_length_measure);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.PLANE_ANGLE_MEASURE' IN type_out) THEN
       RETURN(mdns_plane_angle_measure);
    END_IF;
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.VOLUME_MEASURE' IN type_out) THEN
       RETURN(mdns_volume_measure);
    END_IF;
    RETURN(mdns_others);
  END_FUNCTION;

  FUNCTION a3ms_validate_accuracy_types
    (aats:accuracy_associated_target_select;
     cr:A3m_equivalence_criterion_for_shape):LOGICAL;
    LOCAL
      aeaa : SET OF A3m_equivalence_accuracy_association;
      rp :  SET OF Representation;
    END_LOCAL;
    IF(SIZEOF(cr.accuracy_types) = 0) THEN
      RETURN(TRUE);
    END_IF;
     -- specific accuracy
    aeaa := bag_to_set(USEDIN(aats,
           'ANNOTATED_3D_MODEL_EQUIVALENCE_INSPECTION_RESULT_ARM.A3M_EQUIVALENCE_ACCURACY_ASSOCIATION.EQUIVALENCE_TARGET'));
    REPEAT i:= 1 TO SIZEOF(aeaa);
      IF(a3ms_get_accuracy_type(aeaa[i].specific_accuracy) IN cr.accuracy_types) THEN
		RETURN(TRUE);
      END_IF;
    END_REPEAT;
     -- global accuracy
    rp := bag_to_set(USEDIN(aats,
           'ANNOTATED_3D_MODEL_EQUIVALENCE_INSPECTION_RESULT_ARM.REPRESENTATION.ITEMS'));
    REPEAT i:= 1 TO SIZEOF(rp);
	  aeaa := bag_to_set(USEDIN(rp[i],
           'ANNOTATED_3D_MODEL_EQUIVALENCE_INSPECTION_RESULT_ARM.A3M_EQUIVALENCE_ACCURACY_ASSOCIATION.EQUIVALENCE_TARGET'));
	  REPEAT j:= 1 TO SIZEOF(aeaa);
        IF(a3ms_get_accuracy_type(aeaa[j].specific_accuracy) IN cr.accuracy_types) THEN
		  RETURN(TRUE);
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN(FALSE);
  END_FUNCTION;

  FUNCTION a3ms_validate_detected_difference_types
    (ei:A3m_equivalence_inspection_report;
     cr:A3m_equivalence_criterion_for_shape):LOGICAL;
    LOCAL
      aeiir : A3m_equivalence_inspection_instance_report;
      eiriwei : Equivalence_instance_report_item_with_notable_instances;
      addtn : a3ms_detected_difference_type_name;     
    END_LOCAL;
     -- A3m_equivalence_inspection_instance_report
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_INSPECTION_INSTANCE_REPORT' IN TYPEOF(ei)) THEN
      aeiir := ei;
      REPEAT i := 1 TO SIZEOF(aeiir.inspected_instances);
    --   >     Equivalence_notable_instance
        IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.EQUIVALENCE_INSTANCE_REPORT_ITEM_WITH_NOTABLE_INSTANCES'
           IN TYPEOF(aeiir.inspected_instances[i])) THEN
           eiriwei := aeiir.inspected_instances[i];
           REPEAT j := 1 TO SIZEOF(eiriwei.notable_instances);
			-- Special for Mismatch_of_point_cloud_and_related_geometry
			IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.MISMATCH_OF_POINT_CLOUD_AND_RELATED_GEOMETRY' IN TYPEOF(cr)) THEN
			-- comparing_elements check
			  addtn := a3ms_get_detected_difference_type(eiriwei.notable_instances[j].comparing_elements);
			  IF(a3ms_get_element_type(eiriwei.inspected_element.comparing_elements) = etns_connected_edge_set) THEN
                IF(addtn <> ddns_point_on_curve) THEN
                  RETURN(FALSE);
                END_IF;
              ELSE
			    IF(a3ms_get_element_type(eiriwei.inspected_element.comparing_elements) = etns_connected_face_set) THEN
                  IF(addtn <> ddns_point_on_surface) THEN
                    RETURN(FALSE);
                  END_IF;
                ELSE
			      IF(a3ms_get_element_type(eiriwei.inspected_element.comparing_elements) <> etns_external_representation_item) THEN
                 	RETURN(FALSE);
	              END_IF;
                END_IF;
              END_IF;
			-- compared_elements check
              IF(NOT(a3ms_get_detected_difference_type(
                       eiriwei.notable_instances[j].compared_elements)
                    IN cr.detected_difference_types)) THEN
			    RETURN(FALSE);
			  END_IF;             
            ELSE
              IF(NOT(a3ms_get_detected_difference_type(
                       eiriwei.notable_instances[j].comparing_elements)
                    IN cr.detected_difference_types)) THEN
			    RETURN(FALSE);
			  END_IF;     
              IF(NOT(a3ms_get_detected_difference_type(
                       eiriwei.notable_instances[j].compared_elements)
                    IN cr.detected_difference_types)) THEN
			    RETURN(FALSE);
			  END_IF;
			END_IF;  
           END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(TRUE);     
  END_FUNCTION;

  FUNCTION a3ms_validate_element_types
    (ei:A3m_equivalence_inspection_report;
     cr:A3m_equivalence_criterion_for_shape):LOGICAL;
    LOCAL
      aeiir : A3m_equivalence_inspection_instance_report;
      aeiiri : A3m_equivalence_inspection_instance_report_item;
      aeiep : A3m_equivalence_inspected_element_pair;
      compared_et:a3ms_element_type_name;
      comparing_et:a3ms_element_type_name;
    END_LOCAL;
    -- A3m_equivalence_inspection_instance_report
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_INSPECTION_INSTANCE_REPORT' IN TYPEOF(ei)) THEN
      aeiir := ei;
      REPEAT i := 1 TO SIZEOF(aeiir.inspected_instances);
    --   > A3m_equivalence_inspection_instance_report_item
        IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_INSPECTION_INSTANCE_REPORT_ITEM'
           IN TYPEOF(aeiir.inspected_instances[i])) THEN
           aeiiri := aeiir.inspected_instances[i];
           aeiep := aeiiri.inspected_element;
           compared_et := a3ms_get_element_type(aeiep.compared_elements);
           comparing_et := a3ms_get_element_type(aeiep.comparing_elements);
           IF((NOT(compared_et IN cr.compared_element_types) AND (compared_et <> etns_external_representation_item)) OR
              (NOT(comparing_et IN cr.comparing_element_types) AND (comparing_et <> etns_external_representation_item))) THEN
             RETURN(FALSE);
           END_IF;
           -- Special for MISMATCH_OF_POINT_CLOUD_AND_RELATED_GEOMETRY
           IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.MISMATCH_OF_POINT_CLOUD_AND_RELATED_GEOMETRY' IN TYPEOF(cr)) THEN
		   	 IF(((comparing_et <> etns_external_representation_item) AND (compared_et <> etns_external_representation_item)) AND
		   	    (compared_et = comparing_et)) THEN
               RETURN(FALSE);
             END_IF;
		   ELSE
		   	 IF(((comparing_et <> etns_external_representation_item) AND (compared_et <> etns_external_representation_item)) AND
		   	    (compared_et <> comparing_et)) THEN
               RETURN(FALSE);
             END_IF;
           END_IF;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(TRUE);
  END_FUNCTION;

  FUNCTION a3ms_validate_measured_type
    (ei:A3m_equivalence_inspection_report;
     cr:A3m_equivalence_criterion_for_shape):LOGICAL;
    LOCAL
      aeicr : A3m_equivalence_inspection_criterion_report;
      aeiir : A3m_equivalence_inspection_instance_report;
      aeiiri : A3m_equivalence_inspection_instance_report_item;
      amdtn : a3ms_measured_data_type_name;
      criwmv : Criterion_report_item_with_measured_value;
      eiriwei : Equivalence_instance_report_item_with_notable_instances;
    END_LOCAL;
    amdtn := cr.measured_data_type;
    -- A3m_equivalence_inspection_criterion_report
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_INSPECTION_CRITERION_REPORT' IN TYPEOF(ei)) THEN
      aeicr := ei;
      REPEAT i := 1 TO SIZEOF(aeicr.statistical_values);
    -- Criterion_report_item_with_measured_value.representative_measured_value
        IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.CRITERION_REPORT_ITEM_WITH_MEASURED_VALUE'
           IN TYPEOF(aeicr.statistical_values[i])) THEN
           criwmv := aeicr.statistical_values[i];
           IF(a3ms_get_measured_type(criwmv.representative_measured_value) <> amdtn) THEN
             RETURN(FALSE);
           END_IF;
        END_IF;
      END_REPEAT;
    END_IF;
    -- A3m_equivalence_inspection_instance_report
    IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_INSPECTION_INSTANCE_REPORT' IN TYPEOF(ei)) THEN
      aeiir := ei;
      REPEAT i := 1 TO SIZEOF(aeiir.inspected_instances);
    --   > A3m_equivalence_inspection_instance_report_item.measured_value_for_inspected_element
        IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.A3M_EQUIVALENCE_INSPECTION_INSTANCE_REPORT_ITEM'
           IN TYPEOF(aeiir.inspected_instances[i])) THEN
           aeiiri := aeiir.inspected_instances[i];
           IF(a3ms_get_measured_type(aeiiri.measured_value_for_inspected_element) <> amdtn) THEN
             RETURN(FALSE);
           END_IF;
        END_IF;
    --   >     Equivalence_notable_instance.measured_value
        IF('ANNOTATED_3D_MODEL_EQUIVALENCE_SHAPE_ARM.EQUIVALENCE_INSTANCE_REPORT_ITEM_WITH_NOTABLE_INSTANCES'
           IN TYPEOF(aeiir.inspected_instances[i])) THEN
           eiriwei := aeiir.inspected_instances[i];
           REPEAT j := 1 TO SIZEOF(eiriwei.notable_instances);
             IF(a3ms_get_measured_type(eiriwei.notable_instances[j].measured_value) <> amdtn) THEN
               RETURN(FALSE);
             END_IF;
           END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(TRUE);
  END_FUNCTION;

END_SCHEMA;
