<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-01-27T10:43:46" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="ap203_configuration_controlled_3d_design_of_mechanical_parts_and_assemblies_mim_lf schema_instance"/>

   <schema name="Configuration_control_3d_design_mim_lf">
      <constant name="deprecated_constructed_data_types" expression="['approved_item',&#10;    'certified_item', &#10;    'change_request_item', &#10;    'contracted_item', &#10;    'classified_item', &#10;    'date_time_item', &#10;    'person_organization_item', &#10;    'specified_item', &#10;    'start_request_item', &#10;    'work_item']">
         <aggregate type="SET" lower="0" upper="?"/>
         <builtintype type="STRING"/>
      </constant>
      <constant name="deprecated_entity_data_types" expression="['cc_design_approval',&#10;    'cc_design_certification', &#10;    'cc_design_contract', &#10;    'cc_design_date_and_time_assignment', &#10;    'cc_design_person_and_organization_assignment', &#10;    'cc_design_security_classification', &#10;    'cc_design_specification_reference', &#10;    'change', &#10;    'change_request', &#10;    'design_context', &#10;    'design_make_from_relationship', &#10;    'mechanical_context', &#10;    'start_request', &#10;    'start_work', &#10;    'supplied_part_relationship']">
         <aggregate type="SET" lower="0" upper="?"/>
         <builtintype type="STRING"/>
      </constant>
      <constant name="deprecated_interfaced_data_types" expression="['document_with_class',&#10;    'ordinal_date', &#10;    'product_definition_formation_with_specified_source', &#10;    'week_of_year_and_day_date']">
         <aggregate type="SET" lower="0" upper="?"/>
         <builtintype type="STRING"/>
      </constant>
      <constant name="dummy_gri" expression="representation_item('')||&#10;                                   geometric_representation_item()">
         <typename name="geometric_representation_item"/>
      </constant>
      <constant name="dummy_tri" expression="representation_item('')||&#10;                   topological_representation_item()">
         <typename name="topological_representation_item"/>
      </constant>
      <type name="action_items">
         <select selectitems="configuration_effectivity product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship"/>
      </type>
      <type name="action_request_item">
         <select selectitems="product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship property_definition"/>
      </type>
      <type name="ahead_or_behind">
         <enumeration items="ahead exact behind"/>
      </type>
      <type name="amount_of_substance_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="angle_relator">
         <enumeration items="equal large small"/>
      </type>
      <type name="approval_item">
         <select selectitems="action alternate_product_relationship applied_action_assignment assembly_component_usage_substitute certification configuration_effectivity contract document_file executed_action product product_definition product_definition_formation product_definition_relationship versioned_action_request"/>
      </type>
      <type name="approved_item">
         <select selectitems="certification change change_request configuration_effectivity configuration_item contract product security_classification start_request start_work"/>
      </type>
      <type name="area_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="area_or_view">
         <select selectitems="presentation_area presentation_view"/>
      </type>
      <type name="attribute_language_item">
         <select selectitems="alternate_product_relationship application_context applied_certification_assignment applied_document_reference applied_document_usage_constraint_assignment applied_external_identification_assignment applied_identification_assignment applied_organizational_project_assignment applied_security_classification_assignment approval approval_relationship approval_status assembly_component_usage_substitute attribute_value_assignment certification certification_type configuration_design configuration_item contract date_role date_time_role descriptive_representation_item document_relationship document_usage_role effectivity effectivity_relationship event_occurrence external_source general_property general_property_relationship geometric_representation_item geometric_tolerance identification_role make_from_usage_option mapped_item multi_language_attribute_assignment object_role organization_relationship organization_role organizational_project organizational_project_relationship organizational_project_role person_and_organization person_and_organization_role product product_category product_concept product_concept_relationship product_definition product_definition_context product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_shape product_related_product_category property_definition representation security_classification security_classification_assignment shape_aspect shape_aspect_relationship shape_representation time_interval_role topological_representation_item uncertainty_measure_with_unit uncertainty_qualifier"/>
      </type>
      <type name="attribute_type">
         <select selectitems="label text"/>
      </type>
      <type name="axis2_placement">
         <select selectitems="axis2_placement_2d axis2_placement_3d"/>
      </type>
      <type name="b_spline_curve_form">
         <enumeration items="polyline_form circular_arc elliptic_arc parabolic_arc hyperbolic_arc unspecified"/>
      </type>
      <type name="b_spline_surface_form">
         <enumeration items="plane_surf cylindrical_surf conical_surf spherical_surf toroidal_surf surf_of_revolution ruled_surf generalised_cone quadric_surf surf_of_linear_extrusion unspecified"/>
      </type>
      <type name="boolean_operand">
         <select selectitems="solid_model half_space_solid csg_primitive boolean_result"/>
      </type>
      <type name="boolean_operator">
         <enumeration items="union intersection difference"/>
      </type>
      <type name="box_characteristic_select">
         <select selectitems="box_height box_width box_slant_angle box_rotate_angle"/>
      </type>
      <type name="box_height">
         <typename name="positive_ratio_measure"/>
      </type>
      <type name="box_rotate_angle">
         <typename name="plane_angle_measure"/>
      </type>
      <type name="box_slant_angle">
         <typename name="plane_angle_measure"/>
      </type>
      <type name="box_width">
         <typename name="positive_ratio_measure"/>
      </type>
      <type name="celsius_temperature_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="central_or_parallel">
         <enumeration items="central parallel"/>
      </type>
      <type name="certification_item">
         <select selectitems="product_definition_formation_relationship"/>
      </type>
      <type name="certified_item">
         <select selectitems="supplied_part_relationship"/>
      </type>
      <type name="change_request_item">
         <select selectitems="product_definition_formation"/>
      </type>
      <type name="character_spacing_select">
         <select selectitems="length_measure ratio_measure measure_with_unit descriptive_measure"/>
      </type>
      <type name="character_style_select">
         <select selectitems="character_glyph_style_stroke character_glyph_style_outline text_style_for_defined_font"/>
      </type>
      <type name="characterized_action_definition">
         <select selectitems="action action_method action_relationship"/>
      </type>
      <type name="characterized_definition">
         <select selectitems="characterized_object characterized_product_definition shape_definition"/>
      </type>
      <type name="characterized_product_definition">
         <select selectitems="product_definition product_definition_relationship"/>
      </type>
      <type name="classification_item">
         <select selectitems="action action_directive action_method action_property action_relationship action_request_solution action_request_status address alternate_product_relationship applied_action_assignment applied_action_request_assignment applied_approval_assignment applied_certification_assignment applied_contract_assignment applied_date_and_time_assignment applied_date_assignment applied_document_reference applied_document_usage_constraint_assignment applied_effectivity_assignment applied_event_occurrence_assignment applied_external_identification_assignment applied_identification_assignment applied_organization_assignment applied_organizational_project_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval approval_person_organization approval_relationship approval_status assembly_component_usage_substitute calendar_date certification class configuration_item context_dependent_unit contract conversion_based_unit date_and_time date_and_time_assignment date_assignment derived_unit descriptive_representation_item directed_action document_file document_relationship effectivity event_occurrence executed_action general_property general_property_relationship group identification_assignment language measure_representation_item measure_with_unit multi_language_attribute_assignment named_unit organization organization_relationship organizational_address organizational_project organizational_project_relationship person person_and_organization_address product product_category product_concept product_definition product_definition_context product_definition_formation product_definition_formation_relationship product_definition_relationship property_definition property_definition_representation representation representation_context representation_item security_classification uncertainty_measure_with_unit versioned_action_request"/>
      </type>
      <type name="classified_item">
         <select selectitems="assembly_component_usage product_definition_formation"/>
      </type>
      <type name="compound_item_definition">
         <select selectitems="list_representation_item set_representation_item"/>
      </type>
      <type name="configuration_design_item">
         <select selectitems="product_definition product_definition_formation"/>
      </type>
      <type name="context_dependent_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="contract_item">
         <select selectitems="executed_action product_definition_formation"/>
      </type>
      <type name="contracted_item">
         <select selectitems="product_definition_formation"/>
      </type>
      <type name="count_measure">
         <builtintype type="NUMBER"/>
      </type>
      <type name="csg_primitive">
         <select selectitems="sphere block right_angular_wedge torus right_circular_cone right_circular_cylinder"/>
      </type>
      <type name="csg_select">
         <select selectitems="boolean_result csg_primitive"/>
      </type>
      <type name="curve_font_or_scaled_curve_font_select">
         <select selectitems="curve_style_font_select"/>
      </type>
      <type name="curve_on_surface">
         <select selectitems="pcurve surface_curve composite_curve_on_surface"/>
      </type>
      <type name="curve_or_annotation_curve_occurrence">
         <select selectitems="curve annotation_curve_occurrence"/>
      </type>
      <type name="curve_or_render">
         <select selectitems="curve_style"/>
      </type>
      <type name="curve_style_font_select">
         <select selectitems="curve_style_font pre_defined_curve_font externally_defined_curve_font"/>
      </type>
      <type name="date_and_time_item">
         <select selectitems="action applied_action_assignment applied_organization_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval_person_organization certification contract document_file event_occurrence executed_action organizational_project product_definition product_definition_formation product_definition_relationship security_classification versioned_action_request"/>
      </type>
      <type name="date_item">
         <select selectitems="action applied_action_assignment applied_organization_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval_person_organization certification contract document_file event_occurrence organizational_project product_definition product_definition_formation product_definition_relationship security_classification versioned_action_request"/>
      </type>
      <type name="date_time_item">
         <select selectitems="approval_person_organization certification change change_request contract product_definition security_classification start_request start_work"/>
      </type>
      <type name="date_time_or_event_occurrence">
         <select selectitems="date_time_select event_occurrence"/>
      </type>
      <type name="date_time_select">
         <select selectitems="date date_and_time local_time"/>
      </type>
      <type name="day_in_month_number">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="{1 &lt;= SELF &lt;= 31}"/>
      </type>
      <type name="day_in_week_number">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="{ 1 &lt;= SELF &lt;= 7 }"/>
      </type>
      <type name="day_in_year_number">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="{1 &lt;= SELF &lt;= 366}"/>
      </type>
      <type name="defined_glyph_select">
         <select selectitems="pre_defined_character_glyph externally_defined_character_glyph"/>
      </type>
      <type name="defined_symbol_select">
         <select selectitems="pre_defined_symbol externally_defined_symbol"/>
      </type>
      <type name="derived_property_select">
         <select selectitems="action_property property_definition"/>
      </type>
      <type name="description_attribute_select">
         <select selectitems="action_request_solution application_context approval_role configuration_design context_dependent_shape_representation date_role date_time_role effectivity external_source organization_role person_and_organization person_and_organization_role property_definition_representation representation"/>
      </type>
      <type name="descriptive_measure">
         <builtintype type="STRING"/>
      </type>
      <type name="dimension_count">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="SELF &gt; 0"/>
      </type>
      <type name="dimension_extent_usage">
         <enumeration items="origin target"/>
      </type>
      <type name="dimensional_characteristic">
         <select selectitems="dimensional_location dimensional_size"/>
      </type>
      <type name="direction_count_select">
         <select selectitems="u_direction_count v_direction_count"/>
      </type>
      <type name="document_reference_item">
         <select selectitems="action_method dimensional_size executed_action externally_defined_dimension_definition product product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship shape_aspect shape_aspect_relationship versioned_action_request"/>
      </type>
      <type name="draughting_callout_element">
         <select selectitems="annotation_text_occurrence annotation_symbol_occurrence annotation_curve_occurrence"/>
      </type>
      <type name="effectivity_item">
         <select selectitems="assembly_component_usage_substitute product product_definition product_definition_formation product_definition_relationship"/>
      </type>
      <type name="electric_current_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="event_occurrence_item">
         <select selectitems="organizational_project"/>
      </type>
      <type name="external_identification_item">
         <select selectitems="document_file product_definition"/>
      </type>
      <type name="fill_area_style_tile_shape_select">
         <select selectitems="fill_area_style_tile_curve_with_style fill_area_style_tile_coloured_region fill_area_style_tile_symbol_with_style pre_defined_tile externally_defined_tile"/>
      </type>
      <type name="fill_style_select">
         <select selectitems="fill_area_style_colour externally_defined_tile_style fill_area_style_tiles externally_defined_hatch_style fill_area_style_hatching"/>
      </type>
      <type name="font_select">
         <select selectitems="pre_defined_text_font externally_defined_text_font"/>
      </type>
      <type name="founded_item_select">
         <select selectitems="founded_item representation_item"/>
      </type>
      <type name="geometric_set_select">
         <select selectitems="point curve surface"/>
      </type>
      <type name="groupable_item">
         <select selectitems="geometric_representation_item mapped_item representation_relationship_with_transformation shape_aspect styled_item"/>
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GROUP' IN TYPEOF(SELF))"/>

      </type>
      <type name="hour_in_day">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="{ 0 &lt;= SELF &lt; 24 }"/>
      </type>
      <type name="id_attribute_select">
         <select selectitems="action address application_context group organizational_project product_category property_definition representation shape_aspect shape_aspect_relationship"/>
      </type>
      <type name="identification_item">
         <select selectitems="approval_status contract dimensional_size document_file draughting_model general_property mechanical_design_geometric_presentation_representation organization product product_definition product_definition_formation security_classification security_classification_level shape_aspect_relationship shape_representation"/>
      </type>
      <type name="identifier">
         <builtintype type="STRING"/>
      </type>
      <type name="invisibility_context">
         <select selectitems="presentation_representation presentation_set"/>
      </type>
      <type name="invisible_item">
         <select selectitems="styled_item presentation_layer_assignment representation"/>
      </type>
      <type name="knot_type">
         <enumeration items="uniform_knots quasi_uniform_knots piecewise_bezier_knots unspecified"/>
      </type>
      <type name="label">
         <builtintype type="STRING"/>
      </type>
      <type name="layered_item">
         <select selectitems="presentation_representation representation_item"/>
      </type>
      <type name="length_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="limit_condition">
         <enumeration items="maximum_material_condition least_material_condition regardless_of_feature_size"/>
      </type>
      <type name="list_of_reversible_topology_item">
         <aggregate type="LIST" lower="0" upper="?"/>
         <typename name="reversible_topology_item"/>
      </type>
      <type name="list_representation_item">
         <aggregate type="LIST" lower="1" upper="?"/>
         <typename name="representation_item"/>
      </type>
      <type name="luminous_intensity_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="marker_select">
         <select selectitems="marker_type pre_defined_marker"/>
      </type>
      <type name="marker_type">
         <enumeration items="dot x plus asterisk ring square triangle"/>
      </type>
      <type name="mass_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="measure_value">
         <select selectitems="amount_of_substance_measure area_measure celsius_temperature_measure context_dependent_measure count_measure descriptive_measure electric_current_measure length_measure luminous_intensity_measure mass_measure numeric_measure parameter_value plane_angle_measure positive_length_measure positive_plane_angle_measure positive_ratio_measure ratio_measure solid_angle_measure thermodynamic_temperature_measure time_measure volume_measure"/>
      </type>
      <type name="minute_in_hour">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="{ 0 &lt;= SELF &lt;= 59 }"/>
      </type>
      <type name="month_in_year_number">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="{ 1 &lt;= SELF &lt;= 12 }"/>
      </type>
      <type name="multi_language_attribute_item">
         <select selectitems="alternate_product_relationship application_context applied_certification_assignment applied_document_reference applied_document_usage_constraint_assignment applied_external_identification_assignment applied_identification_assignment applied_organizational_project_assignment approval approval_relationship approval_status assembly_component_usage_substitute attribute_value_assignment certification certification_type colour configuration_design configuration_item contract date_role date_time_role descriptive_representation_item document_relationship document_usage_role effectivity effectivity_relationship event_occurrence external_source general_property general_property_relationship geometric_representation_item geometric_tolerance identification_role make_from_usage_option mapped_item object_role organization_relationship organization_role organizational_project organizational_project_relationship organizational_project_role person_and_organization person_and_organization_role product product_category product_concept product_concept_relationship product_definition product_definition_context product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_shape product_related_product_category property_definition representation representation_relationship security_classification security_classification_assignment shape_aspect shape_aspect_relationship shape_representation time_interval_role topological_representation_item uncertainty_measure_with_unit"/>
      </type>
      <type name="name_attribute_select">
         <select selectitems="action_request_solution address configuration_design context_dependent_shape_representation derived_unit effectivity person_and_organization product_definition property_definition_representation"/>
      </type>
      <type name="name_item">
         <select selectitems="assembly_component_usage external_class_library"/>
      </type>
      <type name="null_style">
         <enumeration items="null"/>
      </type>
      <type name="numeric_measure">
         <builtintype type="NUMBER"/>
      </type>
      <type name="organization_item">
         <select selectitems="action alternate_product_relationship applied_action_assignment applied_identification_assignment applied_security_classification_assignment approval assembly_component_usage_substitute certification configuration_item contract document_file executed_action general_property organizational_project product product_definition product_definition_formation product_definition_formation_relationship property_definition security_classification shape_representation versioned_action_request"/>
      </type>
      <type name="parameter_value">
         <builtintype type="REAL"/>
      </type>
      <type name="pcurve_or_surface">
         <select selectitems="pcurve surface"/>
      </type>
      <type name="person_and_organization_item">
         <select selectitems="action alternate_product_relationship applied_action_assignment applied_identification_assignment applied_security_classification_assignment approval assembly_component_usage_substitute certification configuration_item contract document_file executed_action general_property organizational_project product product_definition product_definition_formation product_definition_formation_relationship property_definition security_classification shape_representation versioned_action_request"/>
      </type>
      <type name="person_organization_item">
         <select selectitems="change change_request configuration_item contract product product_definition product_definition_formation security_classification start_request start_work"/>
      </type>
      <type name="person_organization_select">
         <select selectitems="organization person person_and_organization"/>
      </type>
      <type name="plane_angle_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="positive_length_measure">
         <typename name="length_measure"/>
         <where label="WR1" expression="SELF &gt; 0.0"/>
      </type>
      <type name="positive_plane_angle_measure">
         <typename name="plane_angle_measure"/>
         <where label="WR1" expression="SELF &gt; 0.0"/>
      </type>
      <type name="positive_ratio_measure">
         <typename name="ratio_measure"/>
         <where label="WR1" expression="SELF &gt; 0.0"/>
      </type>
      <type name="preferred_surface_curve_representation">
         <enumeration items="curve_3d pcurve_s1 pcurve_s2"/>
      </type>
      <type name="presentable_text">
         <builtintype type="STRING"/>
      </type>
      <type name="presentation_size_assignment_select">
         <select selectitems="presentation_view presentation_area area_in_set"/>
      </type>
      <type name="presentation_style_select">
         <select selectitems="point_style curve_style surface_style_usage symbol_style fill_area_style text_style null_style"/>
      </type>
      <type name="product_or_formation_or_definition">
         <select selectitems="product product_definition_formation product_definition"/>
      </type>
      <type name="project_item">
         <select selectitems="executed_action product_concept"/>
      </type>
      <type name="ratio_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="represented_definition">
         <select selectitems="general_property property_definition shape_aspect shape_aspect_relationship"/>
      </type>
      <type name="reversible_topology">
         <select selectitems="reversible_topology_item list_of_reversible_topology_item set_of_reversible_topology_item"/>
      </type>
      <type name="reversible_topology_item">
         <select selectitems="edge path face face_bound closed_shell open_shell"/>
      </type>
      <type name="role_select">
         <select selectitems="action_assignment action_request_assignment approval_assignment approval_date_time certification_assignment contract_assignment document_reference effectivity_assignment group_assignment name_assignment security_classification_assignment"/>
      </type>
      <type name="second_in_minute">
         <builtintype type="REAL"/>
         <where label="WR1" expression="{ 0 &lt;= SELF &lt;= 60.0 }"/>
      </type>
      <type name="security_classification_item">
         <select selectitems="assembly_component_usage document_file product product_definition product_definition_formation product_definition_usage"/>
      </type>
      <type name="set_of_reversible_topology_item">
         <aggregate type="SET" lower="0" upper="?"/>
         <typename name="reversible_topology_item"/>
      </type>
      <type name="set_representation_item">
         <aggregate type="SET" lower="1" upper="?"/>
         <typename name="representation_item"/>
      </type>
      <type name="shape_definition">
         <select selectitems="product_definition_shape shape_aspect shape_aspect_relationship"/>
      </type>
      <type name="shell">
         <select selectitems="vertex_shell wire_shell open_shell closed_shell"/>
      </type>
      <type name="si_prefix">
         <enumeration items="exa peta tera giga mega kilo hecto deca deci centi milli micro nano pico femto atto"/>
      </type>
      <type name="si_unit_name">
         <enumeration items="metre gram second ampere kelvin mole candela radian steradian hertz newton pascal joule watt coulomb volt farad ohm siemens weber tesla henry degree_Celsius lumen lux becquerel gray sievert"/>
      </type>
      <type name="size_select">
         <select selectitems="positive_length_measure measure_with_unit descriptive_measure"/>
      </type>
      <type name="solid_angle_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="source">
         <enumeration items="made bought not_known"/>
      </type>
      <type name="source_item">
         <select selectitems="identifier"/>
      </type>
      <type name="specified_item">
         <select selectitems="product_definition shape_aspect"/>
      </type>
      <type name="style_context_select">
         <select selectitems="group presentation_layer_assignment representation representation_item presentation_set"/>
      </type>
      <type name="surface_side">
         <enumeration items="positive negative both"/>
      </type>
      <type name="surface_side_style_select">
         <select selectitems="surface_side_style"/>
      </type>
      <type name="surface_style_element_select">
         <select selectitems="surface_style_fill_area surface_style_boundary surface_style_silhouette surface_style_segmentation_curve surface_style_control_grid surface_style_parameter_line"/>
      </type>
      <type name="symbol_style_select">
         <select selectitems="symbol_colour"/>
      </type>
      <type name="text">
         <builtintype type="STRING"/>
      </type>
      <type name="text_alignment">
         <typename name="label"/>
      </type>
      <type name="text_delineation">
         <typename name="label"/>
      </type>
      <type name="text_or_character">
         <select selectitems="annotation_text annotation_text_character defined_character_glyph composite_text text_literal"/>
      </type>
      <type name="text_path">
         <enumeration items="left right up down"/>
      </type>
      <type name="thermodynamic_temperature_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="time_interval_item">
         <select selectitems="time_interval_based_effectivity"/>
      </type>
      <type name="time_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="tolerance_method_definition">
         <select selectitems="tolerance_value limits_and_fits"/>
      </type>
      <type name="transformation">
         <select selectitems="item_defined_transformation functionally_defined_transformation"/>
      </type>
      <type name="transition_code">
         <enumeration items="discontinuous continuous cont_same_gradient cont_same_gradient_same_curvature"/>
      </type>
      <type name="trimming_preference">
         <enumeration items="cartesian parameter unspecified"/>
      </type>
      <type name="trimming_select">
         <select selectitems="cartesian_point parameter_value"/>
      </type>
      <type name="u_direction_count">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="SELF &gt; 1"/>
      </type>
      <type name="unit">
         <select selectitems="derived_unit named_unit"/>
      </type>
      <type name="v_direction_count">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="SELF &gt; 1"/>
      </type>
      <type name="value_qualifier">
         <select selectitems="precision_qualifier type_qualifier uncertainty_qualifier"/>
      </type>
      <type name="vector_or_direction">
         <select selectitems="vector direction"/>
      </type>
      <type name="volume_measure">
         <builtintype type="REAL"/>
      </type>
      <type name="week_in_year_number">
         <builtintype type="INTEGER"/>
         <where label="WR1" expression="{ 1 &lt;= SELF &lt;= 53 }"/>
      </type>
      <type name="work_item">
         <select selectitems="product_definition_formation"/>
      </type>
      <type name="year_number">
         <builtintype type="INTEGER"/>
      </type>
      <entity name="action">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="chosen_method">
            <typename name="action_method"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="action_assignment" abstract.supertype="YES">
         <explicit name="assigned_action">
            <typename name="action"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="action_directive">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="analysis">
            <typename name="text"/>
         </explicit>
         <explicit name="comment">
            <typename name="text"/>
         </explicit>
         <explicit name="requests">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="versioned_action_request"/>
         </explicit>
      </entity>
      <entity name="action_method">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="consequence">
            <typename name="text"/>
         </explicit>
         <explicit name="purpose">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="action_property">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="definition">
            <typename name="characterized_action_definition"/>
         </explicit>
      </entity>
      <entity name="action_property_representation">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="property">
            <typename name="action_property"/>
         </explicit>
         <explicit name="representation">
            <typename name="representation"/>
         </explicit>
      </entity>
      <entity name="action_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_action">
            <typename name="action"/>
         </explicit>
         <explicit name="related_action">
            <typename name="action"/>
         </explicit>
      </entity>
      <entity name="action_request_assignment" abstract.supertype="YES">
         <explicit name="assigned_action_request">
            <typename name="versioned_action_request"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="action_request_solution">
         <explicit name="method">
            <typename name="action_method"/>
         </explicit>
         <explicit name="request">
            <typename name="versioned_action_request"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <derived name="name" expression="get_name_value (SELF)">
            <typename name="label"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="action_request_status">
         <explicit name="status">
            <typename name="label"/>
         </explicit>
         <explicit name="assigned_request">
            <typename name="versioned_action_request"/>
         </explicit>
      </entity>
      <entity name="action_status">
         <explicit name="status">
            <typename name="label"/>
         </explicit>
         <explicit name="assigned_action">
            <typename name="executed_action"/>
         </explicit>
      </entity>
      <entity name="address">
         <explicit name="internal_location" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="street_number" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="street" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="postal_box" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="town" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="region" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="postal_code" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="country" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="facsimile_number" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="telephone_number" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="electronic_mail_address" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="telex_number" optional="YES">
            <typename name="label"/>
         </explicit>
         <derived name="name" expression="get_name_value(SELF)">
            <typename name="label"/>
         </derived>
         <derived name="url" expression="get_id_value(SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(street) OR EXISTS(postal_box) OR EXISTS(town) OR EXISTS(region) OR EXISTS(postal_code) OR EXISTS(country) OR EXISTS(facsimile_number) OR EXISTS(telephone_number) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number)"/>
      </entity>
      <entity name="advanced_brep_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| NOT ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MANIFOLD_SOLID_BREP', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACETED_BREP', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D' ] * TYPEOF (it)) = 1) )) = 0"/>

         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MANIFOLD_SOLID_BREP', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' ] * TYPEOF (it)) = 1) )) &gt; 0"/>

         <where label="WR3" expression="SIZEOF ( &#10;QUERY ( msb &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MANIFOLD_SOLID_BREP' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( csh &lt;* msb_shells(msb)| NOT ( SIZEOF ( &#10;QUERY ( fcs &lt;* csh\connected_face_set.cfs_faces| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fcs)) )) = 0) )) = 0) )) = 0"/>

         <where label="WR4" expression="SIZEOF ( &#10;QUERY ( msb &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MANIFOLD_SOLID_BREP' IN TYPEOF (it)) )| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_CLOSED_SHELL' IN TYPEOF (msb\manifold_solid_brep.outer)) )) = 0"/>

         <where label="WR5" expression="SIZEOF ( &#10;QUERY ( brv &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BREP_WITH_VOIDS' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( csh &lt;* brv\brep_with_voids.voids| csh\oriented_closed_shell.orientation )) = 0) )) = 0"/>

         <where label="WR6" expression="SIZEOF ( &#10;QUERY ( mi &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (it)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_BREP_SHAPE_REPRESENTATION' IN TYPEOF (mi\mapped_item.mapping_source.mapped_representation)) )) = 0"/>

      </entity>
      <entity name="advanced_face" supertypes="face_surface">
         <where label="WR1" expression="SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ELEMENTARY_SURFACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_SURFACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SWEPT_SURFACE' ] * TYPEOF (face_geometry)) = 1"/>

         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( elp_fbnds &lt;* &#10;QUERY ( bnds &lt;* bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) )| NOT ( SIZEOF ( &#10;QUERY ( oe &lt;* elp_fbnds.bound\path.edge_list| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_CURVE' IN TYPEOF (oe\oriented_edge.edge_element)) )) = 0) )) = 0"/>

         <where label="WR3" expression="SIZEOF ( &#10;QUERY ( elp_fbnds &lt;* &#10;QUERY ( bnds &lt;* bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) )| NOT ( SIZEOF ( &#10;QUERY ( oe &lt;* elp_fbnds.bound\path.edge_list| NOT ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_CURVE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE' ] * TYPEOF (oe.edge_element\edge_curve.edge_geometry)) = 1) )) = 0) )) = 0"/>

         <where label="WR4" expression="SIZEOF ( &#10;QUERY ( elp_fbnds &lt;* &#10;QUERY ( bnds &lt;* bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) )| NOT ( SIZEOF ( &#10;QUERY ( oe &lt;* elp_fbnds.bound\path.edge_list| NOT ((('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (oe\edge.edge_start)) AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF (oe\edge.edge_start\vertex_point.vertex_geometry))) AND (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (oe\edge.edge_end)) AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF (oe\edge.edge_end\vertex_point.vertex_geometry)))) )) = 0) )) = 0"/>

         <where label="WR5" expression="SIZEOF ( &#10;QUERY ( elp_fbnds &lt;* &#10;QUERY ( bnds &lt;* bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) )| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_PATH' IN TYPEOF (elp_fbnds.bound)) )) = 0"/>

         <where label="WR6" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SWEPT_SURFACE' IN TYPEOF (face_geometry)) OR ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE' ] * TYPEOF (face_geometry\swept_surface.swept_curve)) = 1)"/>

         <where label="WR7" expression="SIZEOF ( &#10;QUERY ( vlp_fbnds &lt;* &#10;QUERY ( bnds &lt;* bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_LOOP' IN TYPEOF (bnds.bound)) )| NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (vlp_fbnds\face_bound.bound\vertex_loop.loop_vertex)) AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF (vlp_fbnds\face_bound.bound\vertex_loop.loop_vertex\vertex_point.vertex_geometry))) )) = 0"/>

         <where label="WR8" expression="SIZEOF ( &#10;QUERY ( bnd &lt;* bounds| NOT ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_LOOP' ] * TYPEOF (bnd.bound)) = 1) )) = 0"/>

         <where label="WR9" expression="SIZEOF ( &#10;QUERY ( elp_fbnds &lt;* &#10;QUERY ( bnds &lt;* bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) )| NOT ( SIZEOF ( &#10;QUERY ( oe &lt;* elp_fbnds.bound\path.edge_list| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_CURVE' IN TYPEOF (oe\oriented_edge.edge_element\edge_curve.edge_geometry)) AND NOT ( SIZEOF ( &#10;QUERY ( sc_ag &lt;* oe.edge_element\edge_curve.edge_geometry\surface_curve.associated_geometry| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF (sc_ag)) )) = 0) )) = 0) )) = 0"/>

         <where label="WR10" expression="(NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SWEPT_SURFACE' IN TYPEOF (face_geometry)) OR (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF (face_geometry\swept_surface.swept_curve)) OR ( SIZEOF (face_geometry\swept_surface.swept_curve\polyline.points) &gt;= 3))) AND ( SIZEOF ( &#10;QUERY ( elp_fbnds &lt;* &#10;QUERY ( bnds &lt;* bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) )| NOT ( SIZEOF ( &#10;QUERY ( oe &lt;* elp_fbnds.bound\path.edge_list| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF (oe\oriented_edge.edge_element\edge_curve.edge_geometry)) AND NOT ( SIZEOF (oe\oriented_edge.edge_element\edge_curve.edge_geometry\polyline.points) &gt;= 3) )) = 0) )) = 0)"/>

      </entity>
      <entity name="alternate_product_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="definition" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="alternate">
            <typename name="product"/>
         </explicit>
         <explicit name="base">
            <typename name="product"/>
         </explicit>
         <explicit name="basis">
            <typename name="text"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="alternate_product_relationship" attribute="alternate"/>
            <unique.attribute entity-ref="alternate_product_relationship" attribute="base"/>
         </unique>
         <where label="WR1" expression="alternate :&lt;&gt;: base"/>
      </entity>
      <entity name="amount_of_substance_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="amount_of_substance_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="angular_dimension" supertypes="dimension_curve_directed_callout"/>
      <entity name="angular_location" supertypes="dimensional_location">
         <explicit name="angle_selection">
            <typename name="angle_relator"/>
         </explicit>
      </entity>
      <entity name="angular_size" supertypes="dimensional_size">
         <explicit name="angle_selection">
            <typename name="angle_relator"/>
         </explicit>
      </entity>
      <entity name="angularity_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt; 3"/>
      </entity>
      <entity name="annotation_curve_occurrence" supertypes="annotation_occurrence">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE' IN TYPEOF (SELF\styled_item.item)"/>

      </entity>
      <entity name="annotation_fill_area" supertypes="geometric_representation_item">
         <explicit name="boundaries">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="curve"/>
         </explicit>
      </entity>
      <entity name="annotation_fill_area_occurrence" supertypes="annotation_occurrence">
         <explicit name="fill_style_target">
            <typename name="point"/>
         </explicit>
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_FILL_AREA' IN&#10;&#10;         TYPEOF (SELF.item)"/>

      </entity>
      <entity name="annotation_occurrence" supertypes="styled_item" super.expression="ONEOF (annotation_point_occurrence, annotation_curve_occurrence, annotation_fill_area_occurrence, annotation_text_occurrence, annotation_symbol_occurrence)">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN&#10;&#10;          TYPEOF (SELF)"/>

      </entity>
      <entity name="annotation_occurrence_associativity" supertypes="annotation_occurrence_relationship">
         <where label="WR1" expression="SIZEOF (TYPEOF (SELF.related_annotation_occurrence) *&#10;                ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE',&#10;                'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_CURVE',&#10;                'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_CURVE']) = 1"/>

      </entity>
      <entity name="annotation_occurrence_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_annotation_occurrence">
            <typename name="annotation_occurrence"/>
         </explicit>
         <explicit name="related_annotation_occurrence">
            <typename name="annotation_occurrence"/>
         </explicit>
      </entity>
      <entity name="annotation_point_occurrence" supertypes="annotation_occurrence">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT' IN TYPEOF (SELF\styled_item.item)"/>

      </entity>
      <entity name="annotation_subfigure_occurrence" supertypes="annotation_symbol_occurrence">
         <where label="WR1" expression="SIZEOF (QUERY (sty &lt;* SELF.styles |&#10;         NOT (SIZEOF (sty.styles) = 1)&#10;       )) = 0"/>
         <where label="WR2" expression="SIZEOF (QUERY (sty &lt;* SELF.styles |&#10;         NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.NULL_STYLE'&#10;               IN TYPEOF (sty.styles[1]))       ))=0"/>

         <where label="WR3" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL'&#10;           IN TYPEOF (SELF.item))"/>

         <where label="WR4" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_SUBFIGURE_REPRESENTATION'&#10;&#10;           IN TYPEOF&#10;           (SELF.item\mapped_item.mapping_source.mapped_representation))"/>

      </entity>
      <entity name="annotation_symbol" supertypes="mapped_item">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_REPRESENTATION_MAP' IN&#10;         TYPEOF (SELF\mapped_item.mapping_source)"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_TARGET' IN&#10;         TYPEOF (SELF\mapped_item.mapping_target)"/>

         <where label="WR3" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN&#10;&#10;         TYPEOF (SELF)"/>

      </entity>
      <entity name="annotation_symbol_occurrence" supertypes="annotation_occurrence">
         <where label="WR1" expression="SIZEOF(&#10;         ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL',&#10;          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEFINED_SYMBOL'] *&#10;&#10;         TYPEOF(SELF\styled_item.item)) &gt; 0"/>

      </entity>
      <entity name="annotation_table" supertypes="annotation_symbol">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TABLE_REPRESENTATION' IN&#10;&#10;         TYPEOF (SELF\mapped_item.mapping_source.mapped_representation)"/>

      </entity>
      <entity name="annotation_table_occurrence" supertypes="annotation_symbol_occurrence">
         <where label="WR1" expression="SIZEOF (&#10;         ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TABLE',&#10;          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEFINED_TABLE'] *&#10;&#10;         TYPEOF (SELF\styled_item.item)) &gt; 0"/>

      </entity>
      <entity name="annotation_text" supertypes="mapped_item">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT' IN&#10;       TYPEOF( SELF\mapped_item.mapping_target)"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_STRING_REPRESENTATION' IN&#10;       TYPEOF( SELF\mapped_item.mapping_source.mapped_representation)"/>

         <where label="WR3" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN&#10;&#10;       TYPEOF( SELF)"/>

      </entity>
      <entity name="annotation_text_character" supertypes="mapped_item">
         <explicit name="alignment">
            <typename name="text_alignment"/>
         </explicit>
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CHARACTER_GLYPH_SYMBOL' IN&#10;         TYPEOF (SELF\mapped_item.mapping_source.mapped_representation)"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT' IN&#10;         TYPEOF (SELF\mapped_item.mapping_target)"/>

         <where label="WR3" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM' IN&#10;&#10;         TYPEOF (SELF)"/>

      </entity>
      <entity name="annotation_text_occurrence" supertypes="annotation_occurrence">
         <where label="WR1" expression="SIZEOF (&#10;         ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL',&#10;          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT',&#10;          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_CHARACTER',&#10;          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEFINED_CHARACTER_GLYPH',&#10;          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'] *&#10;&#10;         TYPEOF (SELF\styled_item.item)) &gt; 0"/>

      </entity>
      <entity name="annotation_text_with_associated_curves" supertypes="annotation_text">
         <explicit name="associated_curves">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="curve"/>
         </explicit>
      </entity>
      <entity name="annotation_text_with_blanking_box" supertypes="annotation_text">
         <explicit name="blanking">
            <typename name="planar_box"/>
         </explicit>
      </entity>
      <entity name="annotation_text_with_delineation" supertypes="annotation_text">
         <explicit name="delineation">
            <typename name="text_delineation"/>
         </explicit>
      </entity>
      <entity name="annotation_text_with_extent" supertypes="annotation_text">
         <explicit name="extent">
            <typename name="planar_extent"/>
         </explicit>
      </entity>
      <entity name="apex" supertypes="derived_shape_aspect"/>
      <entity name="application_context">
         <explicit name="application">
            <typename name="label"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <inverse name="context_elements" entity="application_context_element" attribute="frame_of_reference">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
         </inverse>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="application_context_element" super.expression="ONEOF (product_concept_context, product_context, product_definition_context)">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="frame_of_reference">
            <typename name="application_context"/>
         </explicit>
      </entity>
      <entity name="application_context_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_context">
            <typename name="application_context"/>
         </explicit>
         <explicit name="related_context">
            <typename name="application_context"/>
         </explicit>
      </entity>
      <entity name="application_protocol_definition">
         <explicit name="status">
            <typename name="label"/>
         </explicit>
         <explicit name="application_interpreted_model_schema_name">
            <typename name="label"/>
         </explicit>
         <explicit name="application_protocol_year">
            <typename name="year_number"/>
         </explicit>
         <explicit name="application">
            <typename name="application_context"/>
         </explicit>
      </entity>
      <entity name="applied_action_assignment" supertypes="action_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="action_items"/>
         </explicit>
      </entity>
      <entity name="applied_action_request_assignment" supertypes="action_request_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="action_request_item"/>
         </explicit>
      </entity>
      <entity name="applied_approval_assignment" supertypes="approval_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="approval_item"/>
         </explicit>
      </entity>
      <entity name="applied_certification_assignment" supertypes="certification_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="certification_item"/>
         </explicit>
      </entity>
      <entity name="applied_classification_assignment" supertypes="classification_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="classification_item"/>
         </explicit>
      </entity>
      <entity name="applied_contract_assignment" supertypes="contract_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="contract_item"/>
         </explicit>
      </entity>
      <entity name="applied_date_and_time_assignment" supertypes="date_and_time_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="date_and_time_item"/>
         </explicit>
      </entity>
      <entity name="applied_date_assignment" supertypes="date_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="date_item"/>
         </explicit>
      </entity>
      <entity name="applied_document_reference" supertypes="document_reference">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="document_reference_item"/>
         </explicit>
      </entity>
      <entity name="applied_document_usage_constraint_assignment" supertypes="document_usage_constraint_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="document_reference_item"/>
         </explicit>
      </entity>
      <entity name="applied_effectivity_assignment" supertypes="effectivity_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="effectivity_item"/>
         </explicit>
      </entity>
      <entity name="applied_event_occurrence_assignment" supertypes="event_occurrence_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="event_occurrence_item"/>
         </explicit>
      </entity>
      <entity name="applied_external_identification_assignment" supertypes="external_identification_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="external_identification_item"/>
         </explicit>
      </entity>
      <entity name="applied_group_assignment" supertypes="group_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="groupable_item"/>
         </explicit>
      </entity>
      <entity name="applied_identification_assignment" supertypes="identification_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="identification_item"/>
         </explicit>
      </entity>
      <entity name="applied_name_assignment" supertypes="name_assignment">
         <explicit name="item">
            <typename name="name_item"/>
         </explicit>
      </entity>
      <entity name="applied_organization_assignment" supertypes="organization_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="organization_item"/>
         </explicit>
      </entity>
      <entity name="applied_organizational_project_assignment" supertypes="organizational_project_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="project_item"/>
         </explicit>
      </entity>
      <entity name="applied_person_and_organization_assignment" supertypes="person_and_organization_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="person_and_organization_item"/>
         </explicit>
      </entity>
      <entity name="applied_security_classification_assignment" supertypes="security_classification_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="security_classification_item"/>
         </explicit>
      </entity>
      <entity name="applied_time_interval_assignment" supertypes="time_interval_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="time_interval_item"/>
         </explicit>
      </entity>
      <entity name="approval">
         <explicit name="status">
            <typename name="approval_status"/>
         </explicit>
         <explicit name="level">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="approval_assignment" abstract.supertype="YES">
         <explicit name="assigned_approval">
            <typename name="approval"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="approval_date_time">
         <explicit name="date_time">
            <typename name="date_time_select"/>
         </explicit>
         <explicit name="dated_approval">
            <typename name="approval"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="approval_person_organization">
         <explicit name="person_organization">
            <typename name="person_organization_select"/>
         </explicit>
         <explicit name="authorized_approval">
            <typename name="approval"/>
         </explicit>
         <explicit name="role">
            <typename name="approval_role"/>
         </explicit>
      </entity>
      <entity name="approval_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_approval">
            <typename name="approval"/>
         </explicit>
         <explicit name="related_approval">
            <typename name="approval"/>
         </explicit>
      </entity>
      <entity name="approval_role">
         <explicit name="role">
            <typename name="label"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="approval_status">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="area_in_set">
         <explicit name="area">
            <typename name="presentation_area"/>
         </explicit>
         <explicit name="in_set">
            <typename name="presentation_set"/>
         </explicit>
      </entity>
      <entity name="area_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AREA_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="area_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 2.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="assembly_component_usage" supertypes="product_definition_usage" super.expression="ONEOF (next_assembly_usage_occurrence, specified_higher_usage_occurrence, promissory_usage_occurrence)">
         <explicit name="reference_designator" optional="YES">
            <typename name="identifier"/>
         </explicit>
      </entity>
      <entity name="assembly_component_usage_substitute">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="definition" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="base">
            <typename name="assembly_component_usage"/>
         </explicit>
         <explicit name="substitute">
            <typename name="assembly_component_usage"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="assembly_component_usage_substitute" attribute="base"/>
            <unique.attribute entity-ref="assembly_component_usage_substitute" attribute="substitute"/>
         </unique>
         <where label="WR1" expression="base.relating_product_definition :=:&#10;       substitute.relating_product_definition"/>
         <where label="WR2" expression="base :&lt;&gt;: substitute"/>
      </entity>
      <entity name="attribute_classification_assignment" abstract.supertype="YES">
         <explicit name="assigned_class">
            <typename name="group"/>
         </explicit>
         <explicit name="attribute_name">
            <typename name="label"/>
         </explicit>
         <explicit name="role">
            <typename name="classification_role"/>
         </explicit>
      </entity>
      <entity name="attribute_language_assignment" supertypes="attribute_classification_assignment">
         <explicit name="assigned_class">
            <typename name="language"/>
            <redeclaration entity-ref="attribute_classification_assignment"/>
         </explicit>
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="attribute_language_item"/>
         </explicit>
         <where label="WR1" expression="SELF\attribute_classification_assignment.role.name IN ['primary', 'translated']"/>
         <where label="WR2" expression="SELF\attribute_classification_assignment.attribute_name&lt;&gt; ''"/>
      </entity>
      <entity name="attribute_value_assignment" abstract.supertype="YES">
         <explicit name="attribute_name">
            <typename name="label"/>
         </explicit>
         <explicit name="attribute_value">
            <typename name="attribute_type"/>
         </explicit>
         <explicit name="role">
            <typename name="attribute_value_role"/>
         </explicit>
      </entity>
      <entity name="attribute_value_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="axis1_placement" supertypes="placement">
         <explicit name="axis" optional="YES">
            <typename name="direction"/>
         </explicit>
         <derived name="z" expression="NVL(normalise(axis), dummy_gri ||&#10;                                 direction([0.0,0.0,1.0]))">
            <typename name="direction"/>
         </derived>
         <where label="WR1" expression="SELF\geometric_representation_item.dim  = 3"/>
      </entity>
      <entity name="axis2_placement_2d" supertypes="placement">
         <explicit name="ref_direction" optional="YES">
            <typename name="direction"/>
         </explicit>
         <derived name="p" expression="build_2axes(ref_direction)">
            <aggregate type="LIST" lower="2" upper="2"/>
            <typename name="direction"/>
         </derived>
         <where label="WR1" expression="SELF\geometric_representation_item.dim = 2"/>
      </entity>
      <entity name="axis2_placement_3d" supertypes="placement">
         <explicit name="axis" optional="YES">
            <typename name="direction"/>
         </explicit>
         <explicit name="ref_direction" optional="YES">
            <typename name="direction"/>
         </explicit>
         <derived name="p" expression="build_axes(axis,ref_direction)">
            <aggregate type="LIST" lower="3" upper="3"/>
            <typename name="direction"/>
         </derived>
         <where label="WR1" expression="SELF\placement.location.dim = 3"/>
         <where label="WR2" expression="(NOT (EXISTS (axis))) OR (axis.dim = 3)"/>
         <where label="WR3" expression="(NOT (EXISTS (ref_direction))) OR (ref_direction.dim = 3)"/>
         <where label="WR4" expression="(NOT (EXISTS (axis))) OR (NOT (EXISTS (ref_direction))) OR&#10;          (cross_product(axis,ref_direction).magnitude &gt; 0.0)"/>
      </entity>
      <entity name="b_spline_curve" supertypes="bounded_curve" super.expression="ONEOF (uniform_curve, b_spline_curve_with_knots, quasi_uniform_curve, bezier_curve) ANDOR rational_b_spline_curve">
         <explicit name="degree">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="control_points_list">
            <aggregate type="LIST" lower="2" upper="?"/>
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="curve_form">
            <typename name="b_spline_curve_form"/>
         </explicit>
         <explicit name="closed_curve">
            <builtintype type="LOGICAL"/>
         </explicit>
         <explicit name="self_intersect">
            <builtintype type="LOGICAL"/>
         </explicit>
         <derived name="upper_index_on_control_points" expression="(SIZEOF(control_points_list) - 1)">
            <builtintype type="INTEGER"/>
         </derived>
         <derived name="control_points" expression="list_to_array(control_points_list,0,&#10;                                             upper_index_on_control_points)">
            <aggregate type="ARRAY" lower="0" upper="0"/>
            <typename name="cartesian_point"/>
         </derived>
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.UNIFORM_CURVE' IN TYPEOF(self)) OR&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.QUASI_UNIFORM_CURVE' IN TYPEOF(self)) OR&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BEZIER_CURVE' IN TYPEOF(self)) OR&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE_WITH_KNOTS' IN TYPEOF(self))"/>

      </entity>
      <entity name="b_spline_curve_with_knots" supertypes="b_spline_curve">
         <explicit name="knot_multiplicities">
            <aggregate type="LIST" lower="2" upper="?"/>
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="knots">
            <aggregate type="LIST" lower="2" upper="?"/>
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="knot_spec">
            <typename name="knot_type"/>
         </explicit>
         <derived name="upper_index_on_knots" expression="SIZEOF(knots)">
            <builtintype type="INTEGER"/>
         </derived>
         <where label="WR1" expression="constraints_param_b_spline(degree, upper_index_on_knots,&#10;                               upper_index_on_control_points,&#10;                               knot_multiplicities, knots)"/>
         <where label="WR2" expression="SIZEOF(knot_multiplicities) = upper_index_on_knots"/>
      </entity>
      <entity name="b_spline_surface" supertypes="bounded_surface" super.expression="ONEOF (b_spline_surface_with_knots, uniform_surface, quasi_uniform_surface, bezier_surface) ANDOR rational_b_spline_surface">
         <explicit name="u_degree">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="v_degree">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="control_points_list">
            <aggregate type="LIST" lower="2" upper="?"/>
            <aggregate type="LIST" lower="2" upper="?"/>
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="surface_form">
            <typename name="b_spline_surface_form"/>
         </explicit>
         <explicit name="u_closed">
            <builtintype type="LOGICAL"/>
         </explicit>
         <explicit name="v_closed">
            <builtintype type="LOGICAL"/>
         </explicit>
         <explicit name="self_intersect">
            <builtintype type="LOGICAL"/>
         </explicit>
         <derived name="u_upper" expression="SIZEOF(control_points_list) - 1">
            <builtintype type="INTEGER"/>
         </derived>
         <derived name="v_upper" expression="SIZEOF(control_points_list[1]) - 1">
            <builtintype type="INTEGER"/>
         </derived>
         <derived name="control_points" expression="make_array_of_array(control_points_list,&#10;                                              0,u_upper,0,v_upper)">
            <aggregate type="ARRAY" lower="0" upper="0"/>
            <aggregate type="ARRAY" lower="0" upper="0"/>
            <typename name="cartesian_point"/>
         </derived>
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.UNIFORM_SURFACE' IN TYPEOF(SELF)) OR&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.QUASI_UNIFORM_SURFACE' IN TYPEOF(SELF)) OR&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BEZIER_SURFACE' IN TYPEOF(SELF)) OR&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_SURFACE_WITH_KNOTS' IN TYPEOF(SELF))"/>

      </entity>
      <entity name="b_spline_surface_with_knots" supertypes="b_spline_surface">
         <explicit name="u_multiplicities">
            <aggregate type="LIST" lower="2" upper="?"/>
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="v_multiplicities">
            <aggregate type="LIST" lower="2" upper="?"/>
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="u_knots">
            <aggregate type="LIST" lower="2" upper="?"/>
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="v_knots">
            <aggregate type="LIST" lower="2" upper="?"/>
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="knot_spec">
            <typename name="knot_type"/>
         </explicit>
         <derived name="knot_u_upper" expression="SIZEOF(u_knots)">
            <builtintype type="INTEGER"/>
         </derived>
         <derived name="knot_v_upper" expression="SIZEOF(v_knots)">
            <builtintype type="INTEGER"/>
         </derived>
         <where label="WR1" expression="constraints_param_b_spline(SELF\b_spline_surface.u_degree,&#10;                   knot_u_upper, SELF\b_spline_surface.u_upper,&#10;                               u_multiplicities, u_knots)"/>
         <where label="WR2" expression="constraints_param_b_spline(SELF\b_spline_surface.v_degree,&#10;                   knot_v_upper, SELF\b_spline_surface.v_upper,&#10;                               v_multiplicities, v_knots)"/>
         <where label="WR3" expression="SIZEOF(u_multiplicities) = knot_u_upper"/>
         <where label="WR4" expression="SIZEOF(v_multiplicities) = knot_v_upper"/>
      </entity>
      <entity name="background_colour" supertypes="colour">
         <explicit name="presentation">
            <typename name="area_or_view"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="background_colour" attribute="presentation"/>
         </unique>
      </entity>
      <entity name="bezier_curve" supertypes="b_spline_curve"/>
      <entity name="bezier_surface" supertypes="b_spline_surface"/>
      <entity name="block" supertypes="geometric_representation_item">
         <explicit name="position">
            <typename name="axis2_placement_3d"/>
         </explicit>
         <explicit name="x">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="y">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="z">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="boolean_result" supertypes="geometric_representation_item">
         <explicit name="operator">
            <typename name="boolean_operator"/>
         </explicit>
         <explicit name="first_operand">
            <typename name="boolean_operand"/>
         </explicit>
         <explicit name="second_operand">
            <typename name="boolean_operand"/>
         </explicit>
      </entity>
      <entity name="boundary_curve" supertypes="composite_curve_on_surface">
         <where label="WR1" expression="SELF\composite_curve.closed_curve"/>
      </entity>
      <entity name="bounded_curve" supertypes="curve" super.expression="ONEOF (polyline, b_spline_curve, trimmed_curve, bounded_pcurve, bounded_surface_curve, composite_curve)"/>
      <entity name="bounded_pcurve" supertypes="pcurve bounded_curve">
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BOUNDED_CURVE' IN&#10;&#10;                   TYPEOF(SELF\pcurve.reference_to_curve.items[1]))"/>

      </entity>
      <entity name="bounded_surface" supertypes="surface" super.expression="ONEOF (b_spline_surface, rectangular_trimmed_surface, curve_bounded_surface, rectangular_composite_surface)"/>
      <entity name="bounded_surface_curve" supertypes="surface_curve bounded_curve">
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BOUNDED_CURVE' IN&#10;&#10;             TYPEOF(SELF\surface_curve.curve_3d))"/>

      </entity>
      <entity name="box_domain" supertypes="founded_item">
         <explicit name="corner">
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="xlength">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="ylength">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="zlength">
            <typename name="positive_length_measure"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(QUERY(item &lt;* USEDIN(SELF,'')|&#10;             NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BOXED_HALF_SPACE'&#10;&#10;                    IN TYPEOF(item)))) = 0"/>

      </entity>
      <entity name="boxed_half_space" supertypes="half_space_solid">
         <explicit name="enclosure">
            <typename name="box_domain"/>
         </explicit>
      </entity>
      <entity name="brep_with_voids" supertypes="manifold_solid_brep">
         <explicit name="voids">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="oriented_closed_shell"/>
         </explicit>
      </entity>
      <entity name="calendar_date" supertypes="date">
         <explicit name="day_component">
            <typename name="day_in_month_number"/>
         </explicit>
         <explicit name="month_component">
            <typename name="month_in_year_number"/>
         </explicit>
         <where label="WR1" expression="valid_calendar_date (SELF)"/>
      </entity>
      <entity name="camera_image" supertypes="mapped_item">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CAMERA_USAGE'&#10;       IN TYPEOF (SELF\mapped_item.mapping_source)"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLANAR_BOX'&#10;       IN TYPEOF (SELF\mapped_item.mapping_target)"/>

         <where label="WR3" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_ITEM'&#10;&#10;       IN TYPEOF (SELF)"/>

      </entity>
      <entity name="camera_image_3d_with_scale" supertypes="camera_image">
         <derived name="scale" expression="((SELF\mapped_item.mapping_target\&#10;         planar_extent.size_in_x) / (SELF\mapped_item.mapping_source.&#10;         mapping_origin\camera_model_d3.perspective_of_volume.view_window.&#10;         size_in_x))">
            <typename name="positive_ratio_measure"/>
         </derived>
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CAMERA_MODEL_D3'&#10;       IN TYPEOF (SELF\mapped_item.mapping_source.mapping_origin))"/>

         <where label="WR2" expression="aspect_ratio(SELF\mapped_item.mapping_target) =&#10;       aspect_ratio(SELF\mapped_item.mapping_source.mapping_origin\&#10;       camera_model_d3.perspective_of_volume.view_window)"/>
         <where label="WR3" expression="SELF\mapped_item.mapping_source.mapping_origin\camera_model_d3.&#10;       perspective_of_volume.front_plane_clipping&#10;       AND&#10;       SELF\mapped_item.mapping_source.mapping_origin\camera_model_d3.&#10;       perspective_of_volume.view_volume_sides_clipping"/>
         <where label="WR4" expression="(SELF\mapped_item.mapping_target\planar_extent.size_in_x &gt; 0)&#10;       AND&#10;       (SELF\mapped_item.mapping_target\planar_extent.size_in_y &gt; 0)"/>
         <where label="WR5" expression="(SELF\mapped_item.mapping_source.mapping_origin\camera_model_d3.&#10;       perspective_of_volume.view_window.size_in_x &gt; 0)&#10;       AND&#10;       (SELF\mapped_item.mapping_source.mapping_origin\camera_model_d3.&#10;       perspective_of_volume.view_window.size_in_y &gt; 0)"/>
         <where label="WR6" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;       'AXIS2_PLACEMENT_2D' IN TYPEOF (SELF\mapped_item.&#10;       mapping_target\planar_box.placement))&#10;       AND NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;       'AXIS2_PLACEMENT_3D' IN TYPEOF (SELF\mapped_item.&#10;       mapping_target\planar_box.placement))"/>

      </entity>
      <entity name="camera_model" supertypes="geometric_representation_item">
         <where label="WR1" expression="(SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                              'ITEM_DEFINED_TRANSFORMATION.' +&#10;                              'TRANSFORM_ITEM_1')) +&#10;        SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                              'REPRESENTATION_MAP.MAPPING_ORIGIN'))&#10;       ) &gt; 0"/>

         <where label="WR2" expression="SIZEOF(USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;&#10;                          'STYLED_ITEM.ITEM')) = 0"/>

      </entity>
      <entity name="camera_model_d3" supertypes="camera_model">
         <explicit name="view_reference_system">
            <typename name="axis2_placement_3d"/>
         </explicit>
         <explicit name="perspective_of_volume">
            <typename name="view_volume"/>
         </explicit>
         <where label="WR1" expression="(dot_product (SELF.view_reference_system.p[3],&#10;         SELF.perspective_of_volume.view_window.placement.p[3]) = 1.0)&#10;         AND&#10;       (SELF.view_reference_system.location.coordinates[3] =&#10;        SELF.perspective_of_volume.view_window.&#10;             placement.location.coordinates[3])"/>
         <where label="WR2" expression="SELF\geometric_representation_item.dim = 3"/>
      </entity>
      <entity name="camera_usage" supertypes="representation_map">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRESENTATION_REPRESENTATION'&#10;       IN TYPEOF(SELF\representation_map.mapped_representation))"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CAMERA_MODEL'&#10;&#10;       IN TYPEOF (SELF\representation_map.mapping_origin)"/>

      </entity>
      <entity name="cartesian_point" supertypes="point">
         <explicit name="coordinates">
            <aggregate type="LIST" lower="1" upper="3"/>
            <typename name="length_measure"/>
         </explicit>
      </entity>
      <entity name="cartesian_transformation_operator" supertypes="geometric_representation_item functionally_defined_transformation" super.expression="ONEOF (cartesian_transformation_operator_2d, cartesian_transformation_operator_3d)">
         <explicit name="axis1" optional="YES">
            <typename name="direction"/>
         </explicit>
         <explicit name="axis2" optional="YES">
            <typename name="direction"/>
         </explicit>
         <explicit name="local_origin">
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="scale" optional="YES">
            <builtintype type="REAL"/>
         </explicit>
         <derived name="scl" expression="NVL(scale, 1.0)">
            <builtintype type="REAL"/>
         </derived>
         <where label="WR1" expression="scl &gt; 0.0"/>
      </entity>
      <entity name="cartesian_transformation_operator_2d" supertypes="cartesian_transformation_operator">
         <derived name="u" expression="base_axis(2,SELF\cartesian_transformation_operator.axis1,&#10;                   SELF\cartesian_transformation_operator.axis2,?)">
            <aggregate type="LIST" lower="2" upper="2"/>
            <typename name="direction"/>
         </derived>
         <where label="WR1" expression="SELF\geometric_representation_item.dim = 2"/>
      </entity>
      <entity name="cartesian_transformation_operator_3d" supertypes="cartesian_transformation_operator">
         <explicit name="axis3" optional="YES">
            <typename name="direction"/>
         </explicit>
         <derived name="u" expression="base_axis(3,SELF\cartesian_transformation_operator.axis1,&#10;                        SELF\cartesian_transformation_operator.axis2,axis3)">
            <aggregate type="LIST" lower="3" upper="3"/>
            <typename name="direction"/>
         </derived>
         <where label="WR1" expression="SELF\geometric_representation_item.dim = 3"/>
      </entity>
      <entity name="cc_design_approval" supertypes="approval_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="approved_item"/>
         </explicit>
      </entity>
      <entity name="cc_design_certification" supertypes="certification_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="certified_item"/>
         </explicit>
      </entity>
      <entity name="cc_design_contract" supertypes="contract_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="contracted_item"/>
         </explicit>
      </entity>
      <entity name="cc_design_date_and_time_assignment" supertypes="date_and_time_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="date_time_item"/>
         </explicit>
      </entity>
      <entity name="cc_design_person_and_organization_assignment" supertypes="person_and_organization_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="person_organization_item"/>
         </explicit>
         <where label="WR1" expression="cc_design_person_and_organization_correlation(SELF)"/>
      </entity>
      <entity name="cc_design_security_classification" supertypes="security_classification_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="classified_item"/>
         </explicit>
      </entity>
      <entity name="cc_design_specification_reference" supertypes="document_reference">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="specified_item"/>
         </explicit>
      </entity>
      <entity name="celsius_temperature_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="centre_of_symmetry" supertypes="derived_shape_aspect">
         <where label="WR1" expression="SIZEOF&#10;        (QUERY(sadr&lt;*SELF\derived_shape_aspect.deriving_relationships|&#10;    NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMMETRIC_SHAPE_ASPECT'&#10;&#10;     IN TYPEOF&#10;     (sadr\shape_aspect_relationship.related_shape_aspect))))=0"/>

      </entity>
      <entity name="certification">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="purpose">
            <typename name="text"/>
         </explicit>
         <explicit name="kind">
            <typename name="certification_type"/>
         </explicit>
      </entity>
      <entity name="certification_assignment" abstract.supertype="YES">
         <explicit name="assigned_certification">
            <typename name="certification"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="certification_type">
         <explicit name="description">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="change" supertypes="action_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="work_item"/>
         </explicit>
      </entity>
      <entity name="change_request" supertypes="action_request_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="change_request_item"/>
         </explicit>
      </entity>
      <entity name="character_glyph_style_outline">
         <explicit name="outline_style">
            <typename name="curve_style"/>
         </explicit>
      </entity>
      <entity name="character_glyph_style_stroke">
         <explicit name="stroke_style">
            <typename name="curve_style"/>
         </explicit>
      </entity>
      <entity name="characterized_object">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="circle" supertypes="conic">
         <explicit name="radius">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="circular_runout_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 2"/>
      </entity>
      <entity name="class" supertypes="group"/>
      <entity name="class_by_extension" supertypes="class"/>
      <entity name="class_by_intension" supertypes="class"/>
      <entity name="classification_assignment" abstract.supertype="YES">
         <explicit name="assigned_class">
            <typename name="group"/>
         </explicit>
         <explicit name="role">
            <typename name="classification_role"/>
         </explicit>
      </entity>
      <entity name="classification_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="closed_shell" supertypes="connected_face_set"/>
      <entity name="coaxiality_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 2"/>
      </entity>
      <entity name="colour"/>
      <entity name="colour_rgb" supertypes="colour_specification">
         <explicit name="red">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="green">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="blue">
            <builtintype type="REAL"/>
         </explicit>
         <where label="WR1" expression="{0.0 &lt;= red &lt;= 1.0}"/>
         <where label="WR2" expression="{0.0 &lt;= green &lt;= 1.0}"/>
         <where label="WR3" expression="{0.0 &lt;= blue &lt;= 1.0}"/>
      </entity>
      <entity name="colour_specification" supertypes="colour">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="common_datum" supertypes="composite_shape_aspect datum">
         <where label="WR1" expression="SIZEOF (SELF.component_relationships) = 2"/>
         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( sar &lt;* SELF.component_relationships| NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DATUM' IN TYPEOF (sar.related_shape_aspect)) AND NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMMON_DATUM' IN TYPEOF (sar.related_shape_aspect))) )) = 0"/>

      </entity>
      <entity name="composite_curve" supertypes="bounded_curve">
         <explicit name="segments">
            <aggregate type="LIST" lower="1" upper="?"/>
            <typename name="composite_curve_segment"/>
         </explicit>
         <explicit name="self_intersect">
            <builtintype type="LOGICAL"/>
         </explicit>
         <derived name="n_segments" expression="SIZEOF(segments)">
            <builtintype type="INTEGER"/>
         </derived>
         <derived name="closed_curve" expression="segments[n_segments].transition &lt;&gt; discontinuous">
            <builtintype type="LOGICAL"/>
         </derived>
         <where label="WR1" expression="((NOT closed_curve) AND (SIZEOF(QUERY(temp &lt;* segments |&#10;                temp.transition = discontinuous)) = 1)) OR&#10;            ((closed_curve) AND (SIZEOF(QUERY(temp &lt;* segments | &#10;                temp.transition = discontinuous)) = 0))"/>
      </entity>
      <entity name="composite_curve_on_surface" supertypes="composite_curve" super.expression="boundary_curve">
         <derived name="basis_surface" expression="get_basis_surface(SELF)">
            <aggregate type="SET" lower="0" upper="2"/>
            <typename name="surface"/>
         </derived>
         <where label="WR1" expression="SIZEOF(basis_surface) &gt; 0"/>
         <where label="WR2" expression="constraints_composite_curve_on_surface(SELF)"/>
      </entity>
      <entity name="composite_curve_segment" supertypes="founded_item">
         <explicit name="transition">
            <typename name="transition_code"/>
         </explicit>
         <explicit name="same_sense">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <explicit name="parent_curve">
            <typename name="curve"/>
         </explicit>
         <inverse name="using_curves" entity="composite_curve" attribute="segments">
            <inverse.aggregate type="BAG" lower="1" upper="?"/>
         </inverse>
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BOUNDED_CURVE' IN TYPEOF(parent_curve))"/>

      </entity>
      <entity name="composite_shape_aspect" supertypes="shape_aspect">
         <inverse name="component_relationships" entity="shape_aspect_relationship" attribute="relating_shape_aspect">
            <inverse.aggregate type="SET" lower="2" upper="?"/>
         </inverse>
      </entity>
      <entity name="composite_text" supertypes="geometric_representation_item">
         <explicit name="collected_text">
            <aggregate type="SET" lower="2" upper="?"/>
            <typename name="text_or_character"/>
         </explicit>
         <where label="WR1" expression="acyclic_composite_text( SELF, SELF.collected_text)"/>
      </entity>
      <entity name="composite_text_with_associated_curves" supertypes="composite_text">
         <explicit name="associated_curves">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="curve"/>
         </explicit>
      </entity>
      <entity name="composite_text_with_blanking_box" supertypes="composite_text">
         <explicit name="blanking">
            <typename name="planar_box"/>
         </explicit>
      </entity>
      <entity name="composite_text_with_delineation" supertypes="composite_text">
         <explicit name="delineation">
            <typename name="text_delineation"/>
         </explicit>
      </entity>
      <entity name="composite_text_with_extent" supertypes="composite_text">
         <explicit name="extent">
            <typename name="planar_extent"/>
         </explicit>
      </entity>
      <entity name="compound_representation_item" supertypes="representation_item">
         <explicit name="item_element">
            <typename name="compound_item_definition"/>
         </explicit>
      </entity>
      <entity name="concentricity_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) = 1"/>
      </entity>
      <entity name="configuration_design">
         <explicit name="configuration">
            <typename name="configuration_item"/>
         </explicit>
         <explicit name="design">
            <typename name="configuration_design_item"/>
         </explicit>
         <derived name="name" expression="get_name_value (SELF)">
            <typename name="label"/>
         </derived>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <unique label="UR1">
            <unique.attribute entity-ref="configuration_design" attribute="configuration"/>
            <unique.attribute entity-ref="configuration_design" attribute="design"/>
         </unique>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                             'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;                             'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="configuration_effectivity" supertypes="product_definition_effectivity">
         <explicit name="configuration">
            <typename name="configuration_design"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="configuration_effectivity" attribute="configuration"/>
            <unique.attribute entity-ref="configuration_effectivity" attribute="usage"/>
            <unique.attribute entity-ref="configuration_effectivity" attribute="id"/>
         </unique>
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_DEFINITION_USAGE' IN&#10;&#10;        TYPEOF (SELF\product_definition_effectivity.usage)"/>

      </entity>
      <entity name="configuration_item">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="item_concept">
            <typename name="product_concept"/>
         </explicit>
         <explicit name="purpose" optional="YES">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="conic" supertypes="curve" super.expression="ONEOF (circle, ellipse, hyperbola, parabola)">
         <explicit name="position">
            <typename name="axis2_placement"/>
         </explicit>
      </entity>
      <entity name="conical_surface" supertypes="elementary_surface">
         <explicit name="radius">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="semi_angle">
            <typename name="plane_angle_measure"/>
         </explicit>
         <where label="WR1" expression="radius &gt;= 0.0"/>
      </entity>
      <entity name="connected_edge_set" supertypes="topological_representation_item">
         <explicit name="ces_edges">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="edge"/>
         </explicit>
      </entity>
      <entity name="connected_face_set" supertypes="topological_representation_item" super.expression="ONEOF (closed_shell, open_shell)">
         <explicit name="cfs_faces">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="face"/>
         </explicit>
      </entity>
      <entity name="constructive_geometry_representation" supertypes="representation">
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF.context_of_items)) AND ({2 &lt;= SELF.context_of_items\geometric_representation_context. coordinate_space_dimension &lt;= 3})"/>

         <where label="WR2" expression="SIZEOF( QUERY( cgr_i &lt;* SELF.items | SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLACEMENT', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE_SURFACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT'] * TYPEOF(cgr_i)) &lt;&gt; 1 )) = 0"/>

         <where label="WR3" expression="SIZEOF( USEDIN( SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP.REP_2') ) &gt; 0"/>

         <where label="WR4" expression="SIZEOF( USEDIN( SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'REPRESENTATION_MAP.MAPPED_REPRESENTATION') ) = 0"/>

      </entity>
      <entity name="constructive_geometry_representation_relationship" supertypes="representation_relationship">
         <where label="WR1" expression="(SELF.rep_1.context_of_items :=: SELF.rep_2.context_of_items) AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF.rep_1.context_of_items))"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONSTRUCTIVE_GEOMETRY_REPRESENTATION' IN TYPEOF(SELF.rep_2)"/>

         <where label="WR3" expression="SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_REPRESENTATION', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONSTRUCTIVE_GEOMETRY_REPRESENTATION'] * TYPEOF(SELF.rep_1)) = 1"/>

         <where label="WR4" expression="NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION' IN TYPEOF(SELF))"/>

      </entity>
      <entity name="context_dependent_invisibility" supertypes="invisibility">
         <explicit name="presentation_context">
            <typename name="invisibility_context"/>
         </explicit>
      </entity>
      <entity name="context_dependent_shape_representation">
         <explicit name="representation_relation">
            <typename name="shape_representation_relationship"/>
         </explicit>
         <explicit name="represented_product_relation">
            <typename name="product_definition_shape"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <derived name="name" expression="get_name_value (SELF)">
            <typename name="label"/>
         </derived>
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF (SELF.represented_product_relation.definition)"/>

         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

         <where label="WR3" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="context_dependent_unit" supertypes="named_unit">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="contract">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="purpose">
            <typename name="text"/>
         </explicit>
         <explicit name="kind">
            <typename name="contract_type"/>
         </explicit>
      </entity>
      <entity name="contract_assignment" abstract.supertype="YES">
         <explicit name="assigned_contract">
            <typename name="contract"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="contract_type">
         <explicit name="description">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="conversion_based_unit" supertypes="named_unit">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="conversion_factor">
            <typename name="measure_with_unit"/>
         </explicit>
      </entity>
      <entity name="coordinated_universal_time_offset">
         <explicit name="hour_offset">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="minute_offset" optional="YES">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="sense">
            <typename name="ahead_or_behind"/>
         </explicit>
         <derived name="actual_minute_offset" expression="NVL(minute_offset,0)">
            <builtintype type="INTEGER"/>
         </derived>
         <where label="WR1" expression="{ 0 &lt;= hour_offset &lt; 24 }"/>
         <where label="WR2" expression="{ 0 &lt;= actual_minute_offset &lt;= 59 }"/>
         <where label="WR3" expression="NOT (((hour_offset &lt;&gt; 0) OR (actual_minute_offset &lt;&gt;0)) AND (sense = exact))"/>
      </entity>
      <entity name="csg_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 3"/>
         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CSG_SOLID', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SOLID_REPLICA', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REVOLVED_FACE_SOLID', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EXTRUDED_FACE_SOLID' ] * TYPEOF (it)) &lt;&gt; 1) )) = 0"/>

         <where label="WR3" expression="SIZEOF ( &#10;QUERY ( mi &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (it)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CSG_SHAPE_REPRESENTATION' IN TYPEOF (mi\mapped_item.mapping_source.mapped_representation)) )) = 0"/>

         <where label="WR4" expression="SIZEOF ( &#10;QUERY ( sr &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SOLID_REPLICA' IN TYPEOF (it)) )| ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CSG_SOLID', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REVOLVED_FACE_SOLID', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EXTRUDED_FACE_SOLID' ] * TYPEOF (sr\solid_replica.parent_solid)) = 0) )) = 0"/>

         <where label="WR5" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D' IN TYPEOF (it)) )) &gt; 0"/>

      </entity>
      <entity name="csg_solid" supertypes="solid_model">
         <explicit name="tree_root_expression">
            <typename name="csg_select"/>
         </explicit>
      </entity>
      <entity name="curve" supertypes="geometric_representation_item" super.expression="ONEOF (line, conic, pcurve, surface_curve, offset_curve_2d, offset_curve_3d, curve_replica)"/>
      <entity name="curve_bounded_surface" supertypes="bounded_surface">
         <explicit name="basis_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="boundaries">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="boundary_curve"/>
         </explicit>
         <explicit name="implicit_outer">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <where label="WR1" expression="(NOT implicit_outer) OR&#10;         (SIZEOF (QUERY (temp &lt;* boundaries |&#10;           'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OUTER_BOUNDARY_CURVE' IN TYPEOF(temp))) = 0)"/>

         <where label="WR2" expression="(NOT(implicit_outer)) OR&#10;                ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BOUNDED_SURFACE' IN TYPEOF(basis_surface))"/>

         <where label="WR3" expression="SIZEOF(QUERY(temp &lt;* boundaries |&#10;                  'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OUTER_BOUNDARY_CURVE' IN&#10;&#10;                                         TYPEOF(temp))) &lt;= 1"/>

         <where label="WR4" expression="SIZEOF(QUERY(temp &lt;* boundaries |&#10;            (temp\composite_curve_on_surface.basis_surface [1] &lt;&gt;&#10;                                         SELF.basis_surface))) = 0"/>
      </entity>
      <entity name="curve_dimension" supertypes="dimension_curve_directed_callout"/>
      <entity name="curve_replica" supertypes="curve">
         <explicit name="parent_curve">
            <typename name="curve"/>
         </explicit>
         <explicit name="transformation">
            <typename name="cartesian_transformation_operator"/>
         </explicit>
         <where label="WR1" expression="transformation.dim = parent_curve.dim"/>
         <where label="WR2" expression="acyclic_curve_replica (SELF, parent_curve)"/>
      </entity>
      <entity name="curve_style">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="curve_font">
            <typename name="curve_font_or_scaled_curve_font_select"/>
         </explicit>
         <explicit name="curve_width">
            <typename name="size_select"/>
         </explicit>
         <explicit name="curve_colour">
            <typename name="colour"/>
         </explicit>
      </entity>
      <entity name="curve_style_font">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="pattern_list">
            <aggregate type="LIST" lower="1" upper="?"/>
            <typename name="curve_style_font_pattern"/>
         </explicit>
      </entity>
      <entity name="curve_style_font_pattern">
         <explicit name="visible_segment_length">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="invisible_segment_length">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="cylindrical_surface" supertypes="elementary_surface">
         <explicit name="radius">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="cylindricity_tolerance" supertypes="geometric_tolerance">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRIC_TOLERANCE_WITH_DATUM_REFERENCE' IN TYPEOF (SELF))"/>

      </entity>
      <entity name="date" super.expression="ONEOF (calendar_date, ordinal_date, week_of_year_and_day_date)">
         <explicit name="year_component">
            <typename name="year_number"/>
         </explicit>
      </entity>
      <entity name="date_and_time">
         <explicit name="date_component">
            <typename name="date"/>
         </explicit>
         <explicit name="time_component">
            <typename name="local_time"/>
         </explicit>
      </entity>
      <entity name="date_and_time_assignment" abstract.supertype="YES">
         <explicit name="assigned_date_and_time">
            <typename name="date_and_time"/>
         </explicit>
         <explicit name="role">
            <typename name="date_time_role"/>
         </explicit>
      </entity>
      <entity name="date_assignment" abstract.supertype="YES">
         <explicit name="assigned_date">
            <typename name="date"/>
         </explicit>
         <explicit name="role">
            <typename name="date_role"/>
         </explicit>
      </entity>
      <entity name="date_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="date_time_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="dated_effectivity" supertypes="effectivity">
         <explicit name="effectivity_end_date" optional="YES">
            <typename name="date_time_or_event_occurrence"/>
         </explicit>
         <explicit name="effectivity_start_date">
            <typename name="date_time_or_event_occurrence"/>
         </explicit>
      </entity>
      <entity name="datum" supertypes="shape_aspect">
         <explicit name="identification">
            <typename name="identifier"/>
         </explicit>
         <inverse name="established_by_relationships" entity="shape_aspect_relationship" attribute="related_shape_aspect">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
         </inverse>
         <where label="WR1" expression="SIZEOF (QUERY (x&lt;*SELF\datum.established_by_relationships |&#10;       SIZEOF (TYPEOF(x\shape_aspect_relationship.relating_shape_aspect)* &#10;       ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DATUM_FEATURE', &#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DATUM_TARGET']) &lt;&gt; 1))=0"/>

      </entity>
      <entity name="datum_feature" supertypes="shape_aspect">
         <inverse name="feature_basis_relationship" entity="shape_aspect_relationship" attribute="relating_shape_aspect"/>
         <where label="WR1" expression="SIZEOF (QUERY (sar&lt;* bag_to_set (USEDIN (SELF,&#10;     'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_ASPECT_RELATIONSHIP.'+&#10;       'RELATING_SHAPE_ASPECT'))&#10;       | NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DATUM' IN TYPEOF&#10;&#10;       (sar\shape_aspect_relationship.related_shape_aspect))))=0"/>

         <where label="WR2" expression="SELF\shape_aspect.product_definitional = TRUE"/>
      </entity>
      <entity name="datum_feature_callout" supertypes="draughting_callout"/>
      <entity name="datum_reference">
         <explicit name="precedence">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="referenced_datum">
            <typename name="datum"/>
         </explicit>
         <where label="WR1" expression="precedence &gt; 0"/>
      </entity>
      <entity name="datum_target" supertypes="shape_aspect">
         <explicit name="target_id">
            <typename name="identifier"/>
         </explicit>
         <inverse name="target_basis_relationship" entity="shape_aspect_relationship" attribute="relating_shape_aspect"/>
         <where label="WR1" expression="SIZEOF (QUERY (sar&lt;* bag_to_set (USEDIN (SELF,&#10;     'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_ASPECT_RELATIONSHIP.' +&#10;       'RELATING_SHAPE_ASPECT'))&#10;      | NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DATUM' IN TYPEOF &#10;&#10;      (sar\shape_aspect_relationship.related_shape_aspect))))=0"/>

         <where label="WR2" expression="SELF\shape_aspect.product_definitional = TRUE"/>
      </entity>
      <entity name="datum_target_callout" supertypes="draughting_callout"/>
      <entity name="default_tolerance_table" supertypes="representation">
         <where label="WR1" expression="SIZEOF( QUERY( i &lt;* SELF.items | NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEFAULT_TOLERANCE_TABLE_CELL' IN TYPEOF(i)) )) = 0"/>

         <where label="WR2" expression="(SIZEOF( QUERY( rr &lt;* USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP.REP_1') | rr.name &lt; 'general tolerance definition' )) = 0) AND (SIZEOF( QUERY( rr &lt;* USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP.REP_1') | (rr.name = 'general tolerance definition') AND (rr.rep_2.name &lt; 'default tolerance') )) = 0) AND (SIZEOF( USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP.REP_2') ) = 0)"/>

      </entity>
      <entity name="default_tolerance_table_cell" supertypes="compound_representation_item">
         <where label="WR1" expression="SIZEOF(QUERY( x &lt;* USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'REPRESENTATION.ITEMS') | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DEFAULT_TOLERANCE_TABLE' IN TYPEOF(x)))=1"/>

         <where label="WR2" expression="default_tolerance_table_cell_wr2(SELF\compound_representation_item.item_element)"/>
         <where label="WR3" expression="default_tolerance_table_cell_wr3(SELF\compound_representation_item.item_element)"/>
         <where label="WR4" expression="default_tolerance_table_cell_wr4(SELF\compound_representation_item.item_element)"/>
         <where label="WR5" expression="default_tolerance_table_cell_wr5(SELF\compound_representation_item.item_element)"/>
      </entity>
      <entity name="defined_character_glyph" supertypes="geometric_representation_item">
         <explicit name="definition">
            <typename name="defined_glyph_select"/>
         </explicit>
         <explicit name="placement">
            <typename name="axis2_placement"/>
         </explicit>
      </entity>
      <entity name="defined_symbol" supertypes="geometric_representation_item">
         <explicit name="definition">
            <typename name="defined_symbol_select"/>
         </explicit>
         <explicit name="target">
            <typename name="symbol_target"/>
         </explicit>
      </entity>
      <entity name="defined_table" supertypes="defined_symbol"/>
      <entity name="definitional_representation" supertypes="representation">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PARAMETRIC_REPRESENTATION_CONTEXT' IN&#10;&#10;        TYPEOF (SELF\representation.context_of_items )"/>

      </entity>
      <entity name="degenerate_pcurve" supertypes="point">
         <explicit name="basis_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="reference_to_curve">
            <typename name="definitional_representation"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(reference_to_curve\representation.items) = 1"/>
         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE' IN TYPEOF&#10;&#10;                    (reference_to_curve\representation.items[1])"/>

         <where label="WR3" expression="reference_to_curve\representation.&#10;                   items[1]\geometric_representation_item.dim =2"/>
      </entity>
      <entity name="degenerate_toroidal_surface" supertypes="toroidal_surface">
         <explicit name="select_outer">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <where label="WR1" expression="major_radius &lt;   minor_radius"/>
      </entity>
      <entity name="derived_shape_aspect" supertypes="shape_aspect" super.expression="ONEOF (apex, centre_of_symmetry, geometric_alignment, geometric_intersection, parallel_offset, perpendicular_to, extension, tangent)">
         <inverse name="deriving_relationships" entity="shape_aspect_relationship" attribute="relating_shape_aspect">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
         </inverse>
         <where label="WR1" expression="SIZEOF (QUERY (dr &lt;*&#10;          SELF\derived_shape_aspect.deriving_relationships |&#10;          NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;               'SHAPE_ASPECT_DERIVING_RELATIONSHIP'&#10;          IN TYPEOF (dr)))) = 0"/>

      </entity>
      <entity name="derived_unit">
         <explicit name="elements">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="derived_unit_element"/>
         </explicit>
         <derived name="name" expression="get_name_value (SELF)">
            <typename name="label"/>
         </derived>
         <where label="WR1" expression="(SIZEOF (elements) &gt; 1) OR ((SIZEOF (elements) = 1) AND (elements[1].exponent &lt;&gt; 1.0))"/>
         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="derived_unit_element">
         <explicit name="unit">
            <typename name="named_unit"/>
         </explicit>
         <explicit name="exponent">
            <builtintype type="REAL"/>
         </explicit>
      </entity>
      <entity name="description_attribute">
         <explicit name="attribute_value">
            <typename name="text"/>
         </explicit>
         <explicit name="described_item">
            <typename name="description_attribute_select"/>
         </explicit>
      </entity>
      <entity name="descriptive_representation_item" supertypes="representation_item">
         <explicit name="description">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="design_context" supertypes="product_definition_context">
         <where label="WR1" expression="SELF.life_cycle_stage = 'design'"/>
      </entity>
      <entity name="design_make_from_relationship" supertypes="product_definition_relationship"/>
      <entity name="diameter_dimension" supertypes="dimension_curve_directed_callout"/>
      <entity name="dimension_callout_component_relationship" supertypes="draughting_callout_relationship">
         <where label="WR1" expression="SELF.name IN ['prefix', 'suffix']"/>
         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STRUCTURED_DIMENSION_CALLOUT'&#10;           IN TYPEOF (SELF.relating_draughting_callout)"/>

         <where label="WR3" expression="SIZEOF (TYPEOF (SELF.related_draughting_callout) *&#10;       ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_DIRECTED_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_DIRECTED_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIMENSION_CURVE_DIRECTED_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STRUCTURED_DIMENSION_CALLOUT']) = 0"/>

         <where label="WR4" expression="SELF.related_draughting_callout.contents *&#10;       SELF.relating_draughting_callout.contents =&#10;       SELF.related_draughting_callout.contents"/>
         <where label="WR5" expression="((SELF.name = 'prefix') AND&#10;       (SIZEOF (QUERY (ato &lt;* QUERY (con &lt;*&#10;                 SELF.related_draughting_callout.contents |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF(con))) |&#10;         NOT (ato.name = 'prefix text')&#10;       )) = 0))"/>

         <where label="WR6" expression="((SELF.name = 'suffix') AND&#10;       (SIZEOF (QUERY (ato &lt;* QUERY (con &lt;*&#10;                 SELF.related_draughting_callout.contents |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;&#10;             IN TYPEOF(con))) |&#10;         NOT (ato.name = 'suffix text')&#10;       )) = 0))"/>

      </entity>
      <entity name="dimension_callout_relationship" supertypes="draughting_callout_relationship">
         <where label="WR1" expression="SELF.name IN ['primary', 'secondary']"/>
         <where label="WR2" expression="SIZEOF (TYPEOF (SELF.relating_draughting_callout) * &#10;       ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANGULAR_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIAMETER_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_DIRECTED_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINEAR_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORDINATE_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RADIUS_DIMENSION'])&gt;=1"/>

         <where label="WR3" expression="SIZEOF (TYPEOF (SELF.related_draughting_callout) *&#10;       ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIMENSION_CURVE_DIRECTED_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_DIRECTED_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_DIRECTED_CALLOUT']) = 0"/>

         <where label="WR4" expression="SELF.related_draughting_callout.contents *&#10;       SELF.relating_draughting_callout.contents =&#10;       SELF.related_draughting_callout.contents"/>
      </entity>
      <entity name="dimension_curve" supertypes="annotation_curve_occurrence">
         <where label="wr1" expression="(SIZEOF(&#10;          QUERY(dct &lt;* USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                'TERMINATOR_SYMBOL.ANNOTATED_CURVE')&#10;               | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;                  'DIMENSION_CURVE_TERMINATOR' IN TYPEOF(dct))&#10;                  ))&#10;          ) &lt;= 2)"/>

         <where label="wr2" expression="SIZEOF(&#10;            QUERY( dcdc &lt;* USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                   'DRAUGHTING_CALLOUT.CONTENTS') |&#10;                   ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;                    'DIMENSION_CURVE_DIRECTED_CALLOUT' IN TYPEOF(dcdc)))&#10;       )&gt;= 1"/>

         <where label="wr3" expression="(SIZEOF(&#10;            QUERY(dct1 &lt;* USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                  'TERMINATOR_SYMBOL.ANNOTATED_CURVE') &#10;               | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;                  'DIMENSION_CURVE_TERMINATOR' IN TYPEOF(dct1)) &#10;                  AND (dct1.role = origin)))&#10;        ) &lt;= 1)&#10;     AND &#10;        (SIZEOF(&#10;            QUERY (dct2 &lt;* USEDIN(SELF,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;                   'TERMINATOR_SYMBOL.ANNOTATED_CURVE') &#10;                 | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;&#10;                   'DIMENSION_CURVE_TERMINATOR' IN TYPEOF(dct2))&#10;                   AND (dct2.role = target)))&#10;       ) &lt;= 1)"/>

      </entity>
      <entity name="dimension_curve_directed_callout" supertypes="draughting_callout">
         <where label="WR1" expression="SIZEOF(QUERY(d_c&lt;*SELF\draughting_callout.contents | &#10;      'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIMENSION_CURVE' IN (TYPEOF(d_c))))=1"/>

         <where label="WR2" expression="SIZEOF(SELF\draughting_callout.contents) &gt;= 2"/>
      </entity>
      <entity name="dimension_curve_terminator" supertypes="terminator_symbol">
         <explicit name="role">
            <typename name="dimension_extent_usage"/>
         </explicit>
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIMENSION_CURVE' IN TYPEOF&#10;&#10;       (SELF\terminator_symbol.annotated_curve)"/>

      </entity>
      <entity name="dimension_pair" supertypes="draughting_callout_relationship">
         <where label="WR1" expression="SELF.name IN ['chained', 'parallel']"/>
         <where label="WR2" expression="SIZEOF (TYPEOF (SELF.relating_draughting_callout) *&#10;       ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANGULAR_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIAMETER_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINEAR_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORDINATE_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RADIUS_DIMENSION'])=1"/>

         <where label="WR3" expression="SIZEOF (TYPEOF (SELF.related_draughting_callout) *&#10;       ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANGULAR_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIAMETER_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINEAR_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORDINATE_DIMENSION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RADIUS_DIMENSION'])=1"/>

      </entity>
      <entity name="dimension_related_tolerance_zone_element">
         <explicit name="related_dimension">
            <typename name="dimensional_location"/>
         </explicit>
         <explicit name="related_element">
            <typename name="tolerance_zone_definition"/>
         </explicit>
      </entity>
      <entity name="dimension_text_associativity" supertypes="text_literal mapped_item">
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_DIMENSION_REPRESENTATION'&#10;          IN TYPEOF (SELF\mapped_item.&#10;                          mapping_source.mapped_representation))"/>

         <where label="WR2" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT'&#10;          IN TYPEOF (SELF\mapped_item.mapping_target))"/>

         <where label="WR3" expression="SIZEOF (QUERY (ato &lt;* QUERY (si &lt;* &#10;                USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM.ITEM') |&#10;                  ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;                    IN TYPEOF(si))) |&#10;                NOT (SIZEOF( QUERY (dc &lt;*&#10;                   USEDIN (ato, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                                 'DRAUGHTING_CALLOUT.CONTENTS') |&#10;                     ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT'&#10;&#10;                   IN TYPEOF (dc)))&#10;                  * [SELF\mapped_item.mapping_target]) = 1)&#10;                )) = 0"/>

      </entity>
      <entity name="dimensional_characteristic_representation">
         <explicit name="dimension">
            <typename name="dimensional_characteristic"/>
         </explicit>
         <explicit name="representation">
            <typename name="shape_dimension_representation"/>
         </explicit>
      </entity>
      <entity name="dimensional_exponents">
         <explicit name="length_exponent">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="mass_exponent">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="time_exponent">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="electric_current_exponent">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="thermodynamic_temperature_exponent">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="amount_of_substance_exponent">
            <builtintype type="REAL"/>
         </explicit>
         <explicit name="luminous_intensity_exponent">
            <builtintype type="REAL"/>
         </explicit>
      </entity>
      <entity name="dimensional_location" supertypes="shape_aspect_relationship" super.expression="ONEOF (angular_location, dimensional_location_with_path)"/>
      <entity name="dimensional_location_with_path" supertypes="dimensional_location">
         <explicit name="path">
            <typename name="shape_aspect"/>
         </explicit>
      </entity>
      <entity name="dimensional_size" super.expression="ONEOF (angular_size, dimensional_size_with_path)">
         <explicit name="applies_to">
            <typename name="shape_aspect"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <where label="WR1" expression="applies_to.product_definitional = TRUE"/>
      </entity>
      <entity name="dimensional_size_with_path" supertypes="dimensional_size">
         <explicit name="path">
            <typename name="shape_aspect"/>
         </explicit>
      </entity>
      <entity name="directed_action" supertypes="executed_action">
         <explicit name="directive">
            <typename name="action_directive"/>
         </explicit>
      </entity>
      <entity name="directed_dimensional_location" supertypes="dimensional_location"/>
      <entity name="direction" supertypes="geometric_representation_item">
         <explicit name="direction_ratios">
            <aggregate type="LIST" lower="2" upper="3"/>
            <builtintype type="REAL"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(QUERY(tmp &lt;* direction_ratios | tmp &lt;&gt; 0.0)) &gt; 0"/>
      </entity>
      <entity name="document">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="kind">
            <typename name="document_type"/>
         </explicit>
         <inverse name="representation_types" entity="document_representation_type" attribute="represented_document">
            <inverse.aggregate type="SET" lower="0" upper="?"/>
         </inverse>
      </entity>
      <entity name="document_file" supertypes="document characterized_object">
         <where label="WR1" expression="SELF\characterized_object.name = ''"/>
         <where label="WR2" expression="NOT EXISTS(SELF\characterized_object.description)"/>
         <where label="WR3" expression="SIZEOF( QUERY( drt &lt;* SELF\document.representation_types |&#10;               drt.name IN ['digital','physical'])) = 1"/>
      </entity>
      <entity name="document_product_association">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_document">
            <typename name="document"/>
         </explicit>
         <explicit name="related_product">
            <typename name="product_or_formation_or_definition"/>
         </explicit>
      </entity>
      <entity name="document_product_equivalence" supertypes="document_product_association">
         <where label="WR1" expression="SELF\document_product_association.name = 'equivalence'"/>
         <where label="WR2" expression="NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT' IN TYPEOF(SELF\document_product_association.related_product)) OR ((SELF\document_product_association.relating_document.kind. product_data_type = 'configuration controlled document') AND (SIZEOF( QUERY( prpc &lt;* USEDIN(SELF\document_product_association.related_product,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document' )) = 1))"/>

         <where label="WR3" expression="NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_DEFINITION_FORMATION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document version') AND (SIZEOF( QUERY( prpc &lt;* USEDIN(SELF.related_product\product_definition_formation.of_product, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document')) = 1))"/>

         <where label="WR4" expression="NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document definition') AND (SIZEOF( QUERY( prpc &lt;* USEDIN(SELF\document_product_association.related_product\product_definition.formation.of_product, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document' )) = 1))"/>

      </entity>
      <entity name="document_reference" abstract.supertype="YES">
         <explicit name="assigned_document">
            <typename name="document"/>
         </explicit>
         <explicit name="source">
            <typename name="label"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="document_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_document">
            <typename name="document"/>
         </explicit>
         <explicit name="related_document">
            <typename name="document"/>
         </explicit>
      </entity>
      <entity name="document_representation_type">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="represented_document">
            <typename name="document"/>
         </explicit>
      </entity>
      <entity name="document_type">
         <explicit name="product_data_type">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="document_usage_constraint">
         <explicit name="source">
            <typename name="document"/>
         </explicit>
         <explicit name="subject_element">
            <typename name="label"/>
         </explicit>
         <explicit name="subject_element_value">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="document_usage_constraint_assignment" abstract.supertype="YES">
         <explicit name="assigned_document_usage">
            <typename name="document_usage_constraint"/>
         </explicit>
         <explicit name="role">
            <typename name="document_usage_role"/>
         </explicit>
      </entity>
      <entity name="document_usage_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="document_with_class" supertypes="document">
         <explicit name="class">
            <typename name="identifier"/>
         </explicit>
      </entity>
      <entity name="draughting_annotation_occurrence" supertypes="annotation_occurrence">
         <where label="WR1" expression="(NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_CURVE_OCCURRENCE'&#10;            IN TYPEOF (SELF))) OR&#10;    (SIZEOF (QUERY (sty &lt;* SELF.styles |&#10;       NOT ((SIZEOF (sty.styles) = 1)&#10;         AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;                 IN TYPEOF (sty.styles[1]))) )) = 0)"/>

         <where label="WR2" expression="(NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE'&#10;            IN TYPEOF (SELF))) OR    (SIZEOF (QUERY (sty &lt;* SELF.styles |&#10;      NOT ((SIZEOF (sty.styles) = 1)&#10;        AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FILL_AREA_STYLE'&#10;                IN TYPEOF (sty.styles[1]))) )) = 0)"/>

         <where label="WR3" expression="(NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE'&#10;            IN TYPEOF (SELF))) OR    (SIZEOF (QUERY (bound &lt;*&#10;                     SELF.item\annotation_fill_area.boundaries |&#10;       NOT (SIZEOF (QUERY (si &lt;*&#10;                   USEDIN (bound, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                                  'STYLED_ITEM.ITEM') |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;             'ANNOTATION_CURVE_OCCURRENCE' IN TYPEOF (si)))) &gt; 0))) = 0)"/>

         <where label="WR4" expression="(NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE'&#10;            IN TYPEOF (SELF))) OR    (SIZEOF (QUERY (sty &lt;* SELF.styles |&#10;       NOT ((SIZEOF (sty.styles) = 1)           AND&#10;            (SIZEOF (TYPEOF (sty.styles[1]) *&#10;                ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_STYLE',&#10;                 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.NULL_STYLE']) = 1)) )) = 0)"/>

         <where label="WR5" expression="(NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE'&#10;             IN TYPEOF (SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL'&#10;             IN TYPEOF(SELF.item)))) OR&#10;         (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                   'DRAUGHTING_SYMBOL_REPRESENTATION',&#10;                  'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                  'DRAUGHTING_SUBFIGURE_REPRESENTATION'] *&#10;          TYPEOF (SELF.item\mapped_item.mapping_source.&#10;                  mapped_representation)) = 1)"/>

         <where label="WR6" expression="(NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;            IN TYPEOF (SELF))) OR&#10;    (SIZEOF (QUERY (sty &lt;* SELF.styles |&#10;       NOT ((SIZEOF (sty.styles) = 1)&#10;        AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_STYLE'&#10;                IN TYPEOF (sty.styles[1]))) )) = 0)"/>

         <where label="WR7" expression="(('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (SELF))) OR&#10;         (SIZEOF (TYPEOF(SELF.item) *&#10;             ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT',&#10;              'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL']) = 1)"/>

         <where label="WR8" expression="(NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'&#10;             IN TYPEOF (SELF.item)))) OR    (SIZEOF (QUERY (tl &lt;*&#10;                   SELF.item\composite_text.collected_text |&#10;             NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL' &#10;             IN TYPEOF (tl)) )) = 0)"/>

         <where label="WR9" expression="(NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL'&#10;             IN TYPEOF (SELF.item)))) OR (SELF.item\text_literal.alignment &#10;             IN ['baseline left', 'baseline centre', 'baseline right'])"/>

         <where label="WR10" expression="(NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'&#10;             IN TYPEOF (SELF.item)))) OR&#10;         (SIZEOF (QUERY (tl &lt;* QUERY (text &lt;* SELF.&#10;                  item\composite_text.collected_text&#10;             |('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL' IN TYPEOF(text))) |&#10;          NOT (tl\text_literal.alignment IN&#10;         ['baseline left', 'baseline centre', 'baseline right']) )) = 0)"/>

         <where label="WR11" expression="NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF(SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'&#10;             IN TYPEOF (SELF.item))) OR check_text_alignment(SELF.item)"/>

         <where label="WR12" expression="NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF(SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'&#10;             IN TYPEOF (SELF.item))) OR check_text_font(SELF.item)"/>

         <where label="WR13" expression="(NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF(SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'&#10;               IN TYPEOF (SELF.item)))) OR&#10;         (SIZEOF (QUERY (tl &lt;* QUERY (text &lt;*&#10;            SELF.item\composite_text.collected_text |&#10;            ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL' IN TYPEOF (text))) |&#10;             NOT (SIZEOF (TYPEOF(tl) *&#10;                  ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                   'TEXT_LITERAL_WITH_BLANKING_BOX',&#10;                   'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                   'TEXT_LITERAL_WITH_ASSOCIATED_CURVES']) = 0) )) = 0)"/>

         <where label="WR14" expression="(NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL_WITH_ASSOCIATED_CURVES'&#10;             IN TYPEOF (SELF.item)))) OR&#10;    (SIZEOF (QUERY (crv &lt;*&#10;                   SELF.item\text_literal_with_associated_curves.&#10;                   associated_curves |&#10;      NOT (SIZEOF (QUERY (si &lt;*  USEDIN (crv, &#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM.ITEM') |&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_CURVE_OCCURRENCE'&#10;            IN TYPEOF (si)) )) &gt; 0) )) = 0)"/>

         <where label="WR15" expression="(NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (SELF)) AND&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT_WITH_ASSOCIATED_CURVES'&#10;             IN TYPEOF (SELF.item)))) OR&#10;          (SIZEOF (QUERY (crv &lt;*&#10;                SELF.item\composite_text_with_associated_curves.&#10;                associated_curves |&#10;           NOT (SIZEOF (QUERY (si &lt;*  USEDIN (crv,&#10;                'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM.ITEM') |&#10;               ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_CURVE_OCCURRENCE'&#10;           IN TYPEOF (si)) )) &gt; 0) )) = 0)"/>

         <where label="WR16" expression="SIZEOF (QUERY (cs &lt;* QUERY (sty &lt;* SELF.styles |&#10;      ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE' IN TYPEOF (sty.styles[1])))&#10;      | NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LENGTH_MEASURE_WITH_UNIT'&#10;        IN TYPEOF (cs.styles[1]\curve_style.curve_width)) AND&#10;       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POSITIVE_LENGTH_MEASURE'&#10;        IN TYPEOF (cs.styles[1]\curve_style.&#10;        curve_width\measure_with_unit.value_component))))) = 0"/>

         <where label="WR17" expression="SIZEOF (QUERY (fas &lt;* QUERY (sty &lt;* SELF.styles |&#10;      ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FILL_AREA_STYLE'&#10;          IN TYPEOF (sty.styles[1]))) |&#10;      NOT ((SIZEOF (QUERY (fs &lt;* fas.styles[1]\fill_area_style.fill_styles&#10;                    | ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FILL_AREA_STYLE_TILES'&#10;                       IN TYPEOF (fs)))) &lt;= 1)&#10;       AND (SIZEOF (QUERY (fst &lt;* QUERY (fs &lt;*&#10;                           fas.styles[1]\fill_area_style.fill_styles |&#10;              ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FILL_AREA_STYLE_TILES'&#10;                  IN TYPEOF (fs))) |&#10;                 NOT (SIZEOF (fst\fill_area_style_tiles.tiles) = 1)&#10;           )) = 0))&#10;    )) = 0"/>

         <where label="WR18" expression="SIZEOF (QUERY (fas &lt;* QUERY (sty &lt;* SELF.styles |&#10;           ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FILL_AREA_STYLE' &#10;            IN TYPEOF (sty.styles[1]))) |&#10;             NOT (SIZEOF (QUERY (fsh &lt;* QUERY (fs &lt;*&#10;                          fas.styles[1]\fill_area_style.fill_styles |&#10;             ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FILL_AREA_STYLE_HATCHING'&#10;               IN TYPEOF (fs))) |&#10;        NOT (fsh\fill_area_style_hatching.point_of_reference_hatch_line :=:&#10;             fsh\fill_area_style_hatching.pattern_start)  )) = 0)  )) = 0"/>

         <where label="WR19" expression="SIZEOF (QUERY (ts &lt;* QUERY (sty &lt;* SELF.styles |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_STYLE' &#10;         IN TYPEOF(sty.styles[1]))) |&#10;             NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                  'TEXT_STYLE_WITH_BOX_CHARACTERISTICS'&#10;             IN TYPEOF (ts.styles[1])))) = 0"/>

         <where label="WR20" expression="SIZEOF (QUERY (ts &lt;* QUERY (sty &lt;* SELF.styles |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_STYLE_WITH_BOX_CHARACTERISTICS'&#10;&#10;             IN TYPEOF (sty.styles[1]))) |&#10;           NOT (SIZEOF (ts.styles[1]\text_style_with_box_characteristics.&#10;                characteristics) = 4) )) = 0"/>

      </entity>
      <entity name="draughting_callout" supertypes="geometric_representation_item">
         <explicit name="contents">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="draughting_callout_element"/>
         </explicit>
      </entity>
      <entity name="draughting_callout_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_draughting_callout">
            <typename name="draughting_callout"/>
         </explicit>
         <explicit name="related_draughting_callout">
            <typename name="draughting_callout"/>
         </explicit>
      </entity>
      <entity name="draughting_elements" supertypes="draughting_callout">
         <where label="WR1" expression="SIZEOF (QUERY (l_c &lt;* QUERY (con &lt;* SELF.contents |&#10;              ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_CURVE' IN TYPEOF(con))) |&#10;              NOT (SIZEOF (QUERY (ldc &lt;* USEDIN (l_c,&#10;               'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DRAUGHTING_CALLOUT.CONTENTS') |&#10;              ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_DIRECTED_CALLOUT'&#10;              IN TYPEOF (ldc)))) &lt;= 1)))=0"/>

         <where label="WR2" expression="NOT    ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIMENSION_CURVE_DIRECTED_CALLOUT'&#10;              IN TYPEOF(SELF)) OR&#10;              (SIZEOF (QUERY (con &lt;* SELF.contents |&#10;              ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_CURVE' IN&#10;               TYPEOF (con)))) &lt;= 2)"/>

         <where label="WR3" expression="SIZEOF (QUERY (rc &lt;* USEDIN (SELF,&#10;              'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT_' +&#10;              'RELATIONSHIP.RELATING_DRAUGHTING_CALLOUT') |&#10;              ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;               'DIMENSION_CALLOUT_RELATIONSHIP' IN TYPEOF (rc)) AND&#10;              (rc.name = 'primary') )) &lt;= 1"/>

         <where label="WR4" expression="SIZEOF (QUERY (rc &lt;* USEDIN (SELF,&#10;              'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT_' +&#10;              'RELATIONSHIP.RELATING_DRAUGHTING_CALLOUT') |&#10;               ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                'DIMENSION_CALLOUT_RELATIONSHIP' IN TYPEOF (rc)) AND&#10;                (rc.name = 'secondary') )) &lt;= 1"/>

         <where label="WR5" expression="SIZEOF (QUERY (sec &lt;* QUERY (rc &lt;* USEDIN (SELF,&#10;               'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT_' +&#10;               'RELATIONSHIP.RELATING_DRAUGHTING_CALLOUT') |&#10;               ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                'DIMENSION_CALLOUT_RELATIONSHIP' IN TYPEOF (rc)) AND         &#10;                (rc.name = 'secondary') ) |&#10;         NOT (SIZEOF (QUERY (prim &lt;* USEDIN (SELF,&#10;               'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT_' +&#10;               'RELATIONSHIP.RELATING_DRAUGHTING_CALLOUT') |&#10;               ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;                'DIMENSION_CALLOUT_RELATIONSHIP' IN TYPEOF (prim)) AND         &#10;                (prim.name = 'primary') )) = 1))) = 0"/>

      </entity>
      <entity name="draughting_model" supertypes="representation">
         <unique label="UR1">
            <unique.attribute entity-ref="draughting_model" attribute="name"/>
         </unique>
         <where label="WR1" expression="SIZEOF (QUERY (it &lt;* SELF.items |&#10;                 NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM',&#10;                               'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM',&#10;                               'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT',&#10;                               'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CAMERA_MODEL'] *&#10;                      TYPEOF (it)) = 1&#10;               ))) = 0"/>

         <where label="WR2" expression="SIZEOF (QUERY (mi &lt;* QUERY (it &lt;* SELF.items |&#10;                 ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF(it))) |&#10;                 NOT (&#10;                   SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_REPRESENTATION',&#10;                            'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_MODEL'] *&#10;                      TYPEOF (mi\mapped_item.mapping_source.&#10;                              mapped_representation)) = 1&#10;               ))) = 0"/>

         <where label="WR3" expression="SIZEOF (QUERY (smi &lt;* QUERY (si &lt;* QUERY (it &lt;* SELF.items |&#10;                 ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM' IN TYPEOF(it))) |&#10;                 ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN&#10;                     TYPEOF(si\styled_item.item))) |&#10;                 (NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_REPRESENTATION' IN&#10;                          TYPEOF(smi\styled_item.item\mapped_item.&#10;                                 mapping_source.mapped_representation))&#10;                     AND&#10;                      (SIZEOF (QUERY (sty &lt;* smi\styled_item.styles |&#10;                        (NOT (SIZEOF (QUERY (psa &lt;* sty.styles |&#10;                               (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;&#10;                                       IN TYPEOF(psa))))) = 1&#10;                     )))) = 1)))&#10;               )) = 0"/>

      </entity>
      <entity name="draughting_pre_defined_colour" supertypes="pre_defined_colour">
         <where label="WR1" expression="SELF.name IN&#10;      ['red',&#10;       'green',&#10;       'blue',&#10;       'yellow',&#10;       'magenta',&#10;       'cyan',&#10;       'black',&#10;       'white']"/>
      </entity>
      <entity name="draughting_pre_defined_curve_font" supertypes="pre_defined_curve_font">
         <where label="WR1" expression="SELF.name IN&#10;       ['continuous',&#10;        'chain',&#10;        'chain double dash',&#10;        'dashed',&#10;        'dotted']"/>
      </entity>
      <entity name="draughting_subfigure_representation" supertypes="symbol_representation">
         <where label="WR1" expression="SIZEOF (QUERY (item &lt;* SELF\representation.items |&#10;         NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_OCCURRENCE',&#10;              'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT',&#10;              'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT']&#10;               * TYPEOF (item)) = 1))) = 0"/>

         <where label="WR2" expression="SIZEOF (QUERY (item &lt;* SELF\representation.items |&#10;         SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_OCCURRENCE',&#10;                  'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_CALLOUT'] *&#10;           TYPEOF (item)) = 1)) &gt;= 1"/>

         <where label="WR3" expression="SIZEOF (QUERY (srm &lt;* QUERY (rm &lt;*&#10;          USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                        'REPRESENTATION_MAP.MAPPED_REPRESENTATION') |&#10;          ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_REPRESENTATION_MAP'&#10;             IN TYPEOF(rm))) | &#10;            NOT (SIZEOF (QUERY (a_s &lt;* QUERY (mi &lt;* srm.map_usage |&#10;            ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL' IN TYPEOF(mi)))&#10;          | NOT (SIZEOF (QUERY (aso &lt;*&#10;            USEDIN (a_s, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + &#10;                         'STYLED_ITEM.ITEM') |&#10;          NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SUBFIGURE_OCCURRENCE'&#10;&#10;            IN TYPEOF(aso)))) = 0))) = 0))) &gt; 0"/>

         <where label="WR4" expression="NOT (acyclic_mapped_item_usage (SELF))"/>
         <where label="WR5" expression="SIZEOF (SELF.context_of_items.representations_in_context) = 1"/>
      </entity>
      <entity name="draughting_symbol_representation" supertypes="symbol_representation">
         <unique label="UR1">
            <unique.attribute entity-ref="draughting_symbol_representation" attribute="name"/>
         </unique>
         <where label="WR1" expression="SIZEOF (QUERY (item &lt;* SELF\representation.items |&#10;         NOT (SIZEOF (TYPEOF (item) *&#10;            ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_CURVE_OCCURRENCE',&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE',&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE',&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE',&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT']) = 1)&#10;       )) = 0"/>

         <where label="WR2" expression="SIZEOF (QUERY (item &lt;* SELF\representation.items |&#10;         (SIZEOF (TYPEOF (item) *&#10;            ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_CURVE_OCCURRENCE',&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE',&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_FILL_AREA_OCCURRENCE',&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE']) = 1)&#10;       )) &gt;= 1"/>

         <where label="WR3" expression="SIZEOF (QUERY (item &lt;* SELF\representation.items |&#10;         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SUBFIGURE_OCCURRENCE'&#10;          IN TYPEOF (item))) = 0"/>

         <where label="WR4" expression="SIZEOF (QUERY (srm &lt;* QUERY (rm &lt;*&#10;          USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                        'REPRESENTATION_MAP.MAPPED_REPRESENTATION') |&#10;          ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_REPRESENTATION_MAP'&#10;             IN TYPEOF(rm))) |&#10;         NOT (SIZEOF (QUERY (a_s &lt;* QUERY (mi &lt;* srm.map_usage |&#10;           ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL' IN TYPEOF(mi))) |&#10;         NOT (SIZEOF (QUERY(aso &lt;*&#10;             USEDIN(a_s, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                         'STYLED_ITEM.ITEM') |&#10;             NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_SYMBOL_OCCURRENCE'&#10;&#10;                  IN TYPEOF(aso))&#10;          )) = 0) )) = 0) )) &gt; 0"/>

         <where label="WR5" expression="NOT (acyclic_mapped_item_usage (SELF))"/>
         <where label="WR6" expression="SIZEOF (SELF.context_of_items.representations_in_context) = 1"/>
      </entity>
      <entity name="draughting_text_literal_with_delineation" supertypes="text_literal_with_delineation">
         <where label="WR1" expression="SELF.delineation IN ['underline', 'overline']"/>
      </entity>
      <entity name="edge" supertypes="topological_representation_item" super.expression="ONEOF (edge_curve, oriented_edge)">
         <explicit name="edge_start">
            <typename name="vertex"/>
         </explicit>
         <explicit name="edge_end">
            <typename name="vertex"/>
         </explicit>
      </entity>
      <entity name="edge_based_wireframe_model" supertypes="geometric_representation_item">
         <explicit name="ebwm_boundary">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="connected_edge_set"/>
         </explicit>
      </entity>
      <entity name="edge_based_wireframe_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| NOT ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_BASED_WIREFRAME_MODEL', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D' ] * TYPEOF (it)) = 1) )) = 0"/>

         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_BASED_WIREFRAME_MODEL', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' ] * TYPEOF (it)) = 1) )) &gt;= 1"/>

         <where label="WR3" expression="SIZEOF ( &#10;QUERY ( ebwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( eb &lt;* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT ( SIZEOF ( &#10;QUERY ( edges &lt;* eb.ces_edges| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_CURVE' IN TYPEOF (edges)) )) = 0) )) = 0) )) = 0"/>

         <where label="WR4" expression="SIZEOF ( &#10;QUERY ( ebwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( eb &lt;* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT ( SIZEOF ( &#10;QUERY ( pline_edges &lt;* &#10;QUERY ( edges &lt;* eb.ces_edges| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF (edges\edge_curve.edge_geometry)) )| NOT ( SIZEOF (pline_edges\edge_curve.edge_geometry\polyline.points) &gt; 2) )) = 0) )) = 0) )) = 0"/>

         <where label="WR5" expression="SIZEOF ( &#10;QUERY ( ebwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( eb &lt;* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT ( SIZEOF ( &#10;QUERY ( edges &lt;* eb.ces_edges| NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (edges.edge_start)) AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (edges.edge_end))) )) = 0) )) = 0) )) = 0"/>

         <where label="WR6" expression="SIZEOF ( &#10;QUERY ( ebwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( eb &lt;* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT ( SIZEOF ( &#10;QUERY ( edges &lt;* eb.ces_edges| NOT valid_wireframe_edge_curve(edges\edge_curve.edge_geometry) )) = 0) )) = 0) )) = 0"/>

         <where label="WR7" expression="SIZEOF ( &#10;QUERY ( ebwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( eb &lt;* ebwm\edge_based_wireframe_model.ebwm_boundary| NOT ( SIZEOF ( &#10;QUERY ( edges &lt;* eb.ces_edges| NOT (valid_wireframe_vertex_point(edges.edge_start\vertex_point.vertex_geometry) AND valid_wireframe_vertex_point(edges.edge_end\vertex_point.vertex_geometry)) )) = 0) )) = 0) )) = 0"/>

         <where label="WR8" expression="SIZEOF ( &#10;QUERY ( mi &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (it)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'EDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION' IN TYPEOF (mi\mapped_item.mapping_source.mapped_representation)) )) = 0"/>

         <where label="WR9" expression="SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 3"/>
      </entity>
      <entity name="edge_curve" supertypes="edge geometric_representation_item">
         <explicit name="edge_geometry">
            <typename name="curve"/>
         </explicit>
         <explicit name="same_sense">
            <builtintype type="BOOLEAN"/>
         </explicit>
      </entity>
      <entity name="edge_loop" supertypes="loop path">
         <derived name="ne" expression="SIZEOF(SELF\path.edge_list)">
            <builtintype type="INTEGER"/>
         </derived>
         <where label="WR1" expression="(SELF\path.edge_list[1].edge_start) :=:&#10;        (SELF\path.edge_list[ne].edge_end)"/>
      </entity>
      <entity name="effectivity" super.expression="ONEOF (serial_numbered_effectivity, dated_effectivity, lot_effectivity, time_interval_based_effectivity)">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <derived name="name" expression="get_name_value(SELF)">
            <typename name="label"/>
         </derived>
         <derived name="description" expression="get_description_value(SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

         <where label="WR2" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="effectivity_assignment" abstract.supertype="YES">
         <explicit name="assigned_effectivity">
            <typename name="effectivity"/>
         </explicit>
         <derived name="role" expression="get_role(SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="effectivity_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="related_effectivity">
            <typename name="effectivity"/>
         </explicit>
         <explicit name="relating_effectivity">
            <typename name="effectivity"/>
         </explicit>
      </entity>
      <entity name="electric_current_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="electric_current_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 1.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="elementary_surface" supertypes="surface" super.expression="ONEOF (plane, cylindrical_surface, conical_surface, spherical_surface, toroidal_surface)">
         <explicit name="position">
            <typename name="axis2_placement_3d"/>
         </explicit>
      </entity>
      <entity name="ellipse" supertypes="conic">
         <explicit name="semi_axis_1">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="semi_axis_2">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="evaluated_degenerate_pcurve" supertypes="degenerate_pcurve">
         <explicit name="equivalent_point">
            <typename name="cartesian_point"/>
         </explicit>
      </entity>
      <entity name="event_occurrence">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="event_occurrence_assignment" abstract.supertype="YES">
         <explicit name="assigned_event_occurrence">
            <typename name="event_occurrence"/>
         </explicit>
         <explicit name="role">
            <typename name="event_occurrence_role"/>
         </explicit>
      </entity>
      <entity name="event_occurrence_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_event">
            <typename name="event_occurrence"/>
         </explicit>
         <explicit name="related_event">
            <typename name="event_occurrence"/>
         </explicit>
      </entity>
      <entity name="event_occurrence_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="executed_action" supertypes="action"/>
      <entity name="extension" supertypes="derived_shape_aspect">
         <where label="WR1" expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1"/>
      </entity>
      <entity name="external_class_library" supertypes="external_source"/>
      <entity name="external_identification_assignment" abstract.supertype="YES" supertypes="identification_assignment">
         <explicit name="source">
            <typename name="external_source"/>
         </explicit>
      </entity>
      <entity name="external_source">
         <explicit name="source_id">
            <typename name="source_item"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="externally_defined_character_glyph" supertypes="externally_defined_item"/>
      <entity name="externally_defined_class" supertypes="class externally_defined_item"/>
      <entity name="externally_defined_colour" supertypes="colour_specification externally_defined_item"/>
      <entity name="externally_defined_curve_font" supertypes="externally_defined_item"/>
      <entity name="externally_defined_dimension_definition" supertypes="dimensional_size externally_defined_item">
         <where label="WR1" expression="(SELF\externally_defined_item.item_id = 'external size dimension') AND (SELF\externally_defined_item.source.source_id = 'external size dimension specification')"/>
         <where label="WR2" expression="1 &gt;= SIZEOF(QUERY ( adr &lt;* USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.APPLIED_DOCUMENT_REFERENCE.ITEMS')| (adr.assigned_document.description = 'external size dimension specification') ))"/>

      </entity>
      <entity name="externally_defined_hatch_style" supertypes="externally_defined_item geometric_representation_item"/>
      <entity name="externally_defined_item">
         <explicit name="item_id">
            <typename name="source_item"/>
         </explicit>
         <explicit name="source">
            <typename name="external_source"/>
         </explicit>
      </entity>
      <entity name="externally_defined_marker" supertypes="externally_defined_symbol pre_defined_marker"/>
      <entity name="externally_defined_symbol" supertypes="externally_defined_item"/>
      <entity name="externally_defined_terminator_symbol" supertypes="externally_defined_symbol"/>
      <entity name="externally_defined_text_font" supertypes="externally_defined_item"/>
      <entity name="externally_defined_tile" supertypes="externally_defined_item"/>
      <entity name="externally_defined_tile_style" supertypes="externally_defined_item geometric_representation_item"/>
      <entity name="extruded_face_solid" supertypes="swept_face_solid">
         <explicit name="extruded_direction">
            <typename name="direction"/>
         </explicit>
         <explicit name="depth">
            <typename name="positive_length_measure"/>
         </explicit>
         <where label="WR1" expression="dot_product(&#10;        (SELF\swept_face_solid.swept_face.face_geometry\&#10;        elementary_surface.position.p[3]), extruded_direction) &lt;&gt; 0.0"/>
      </entity>
      <entity name="face" supertypes="topological_representation_item" super.expression="ONEOF (face_surface, oriented_face)">
         <explicit name="bounds">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="face_bound"/>
         </explicit>
         <where label="WR1" expression="NOT (mixed_loop_type_set(list_to_set(list_face_loops(SELF))))"/>
         <where label="WR2" expression="SIZEOF(QUERY(temp &lt;* bounds | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE_OUTER_BOUND' IN&#10;&#10;                                               TYPEOF(temp))) &lt;= 1"/>

      </entity>
      <entity name="face_bound" supertypes="topological_representation_item">
         <explicit name="bound">
            <typename name="loop"/>
         </explicit>
         <explicit name="orientation">
            <builtintype type="BOOLEAN"/>
         </explicit>
      </entity>
      <entity name="face_outer_bound" supertypes="face_bound"/>
      <entity name="face_surface" supertypes="face geometric_representation_item">
         <explicit name="face_geometry">
            <typename name="surface"/>
         </explicit>
         <explicit name="same_sense">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_SURFACE' IN TYPEOF(face_geometry))"/>

      </entity>
      <entity name="faceted_brep" supertypes="manifold_solid_brep"/>
      <entity name="faceted_brep_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF ( &#10;QUERY ( it &lt;* items| NOT ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACETED_BREP', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D' ] * TYPEOF (it)) = 1) )) = 0"/>

         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( it &lt;* items| ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACETED_BREP', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' ] * TYPEOF (it)) = 1) )) &gt; 0"/>

         <where label="WR3" expression="SIZEOF ( &#10;QUERY ( fbrep &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACETED_BREP' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( csh &lt;* msb_shells(fbrep)| NOT ( SIZEOF ( &#10;QUERY ( fcs &lt;* csh\connected_face_set.cfs_faces| NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE_SURFACE' IN TYPEOF (fcs)) AND (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLANE' IN TYPEOF (fcs\face_surface.face_geometry)) AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF (fcs\face_surface.face_geometry\elementary_surface.position.location)))) )) = 0) )) = 0) )) = 0"/>

         <where label="WR4" expression="SIZEOF ( &#10;QUERY ( fbrep &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACETED_BREP' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( csh &lt;* msb_shells(fbrep)| NOT ( SIZEOF ( &#10;QUERY ( fcs &lt;* csh\connected_face_set.cfs_faces| NOT ( SIZEOF ( &#10;QUERY ( bnds &lt;* fcs.bounds| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE_OUTER_BOUND' IN TYPEOF (bnds)) )) = 1) )) = 0) )) = 0) )) = 0"/>

         <where label="WR5" expression="SIZEOF ( &#10;QUERY ( msb &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MANIFOLD_SOLID_BREP' IN TYPEOF (it)) )| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_CLOSED_SHELL' IN TYPEOF (msb\manifold_solid_brep.outer)) )) = 0"/>

         <where label="WR6" expression="SIZEOF ( &#10;QUERY ( brv &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BREP_WITH_VOIDS' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( csh &lt;* brv\brep_with_voids.voids| csh\oriented_closed_shell.orientation )) = 0) )) = 0"/>

         <where label="WR7" expression="SIZEOF ( &#10;QUERY ( mi &lt;* &#10;QUERY ( it &lt;* items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (it)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACETED_BREP_SHAPE_REPRESENTATION' IN TYPEOF (mi\mapped_item.mapping_source.mapped_representation)) )) = 0"/>

      </entity>
      <entity name="fill_area_style">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="fill_styles">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="fill_style_select"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(QUERY(fill_style &lt;* SELF.fill_styles |&#10;         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;&#10;         'FILL_AREA_STYLE_COLOUR' IN&#10;         TYPEOF(fill_style)&#10;         )) &lt;= 1"/>

      </entity>
      <entity name="fill_area_style_colour">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="fill_colour">
            <typename name="colour"/>
         </explicit>
      </entity>
      <entity name="fill_area_style_hatching" supertypes="geometric_representation_item">
         <explicit name="hatch_line_appearance">
            <typename name="curve_style"/>
         </explicit>
         <explicit name="start_of_next_hatch_line">
            <typename name="one_direction_repeat_factor"/>
         </explicit>
         <explicit name="point_of_reference_hatch_line">
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="pattern_start">
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="hatch_line_angle">
            <typename name="plane_angle_measure"/>
         </explicit>
      </entity>
      <entity name="fill_area_style_tile_coloured_region" supertypes="geometric_representation_item">
         <explicit name="closed_curve">
            <typename name="curve_or_annotation_curve_occurrence"/>
         </explicit>
         <explicit name="region_colour">
            <typename name="colour"/>
         </explicit>
      </entity>
      <entity name="fill_area_style_tile_curve_with_style" supertypes="geometric_representation_item">
         <explicit name="styled_curve">
            <typename name="annotation_curve_occurrence"/>
         </explicit>
      </entity>
      <entity name="fill_area_style_tile_symbol_with_style" supertypes="geometric_representation_item">
         <explicit name="symbol">
            <typename name="annotation_symbol_occurrence"/>
         </explicit>
      </entity>
      <entity name="fill_area_style_tiles" supertypes="geometric_representation_item">
         <explicit name="tiling_pattern">
            <typename name="two_direction_repeat_factor"/>
         </explicit>
         <explicit name="tiles">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="fill_area_style_tile_shape_select"/>
         </explicit>
         <explicit name="tiling_scale">
            <typename name="positive_ratio_measure"/>
         </explicit>
      </entity>
      <entity name="flatness_tolerance" supertypes="geometric_tolerance">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRIC_TOLERANCE_WITH_DATUM_REFERENCE' IN TYPEOF (SELF))"/>

      </entity>
      <entity name="founded_item"/>
      <entity name="functionally_defined_transformation">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="general_property">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="general_property_association">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="base_definition">
            <typename name="general_property"/>
         </explicit>
         <explicit name="derived_definition">
            <typename name="derived_property_select"/>
         </explicit>
         <where label="WR1" expression="SIZEOF( USEDIN( derived_definition, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GENERAL_PROPERTY_ASSOCIATION.' + 'DERIVED_DEFINITION')) = 1"/>

         <where label="WR2" expression="derived_definition.name = base_definition.name"/>
      </entity>
      <entity name="general_property_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_property">
            <typename name="general_property"/>
         </explicit>
         <explicit name="related_property">
            <typename name="general_property"/>
         </explicit>
      </entity>
      <entity name="geometric_alignment" supertypes="derived_shape_aspect">
         <where label="WR1" expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)&gt; 1"/>
      </entity>
      <entity name="geometric_curve_set" supertypes="geometric_set">
         <where label="WR1" expression="SIZEOF(QUERY(temp &lt;* SELF\geometric_set.elements |&#10;                            'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE' IN TYPEOF(temp))) = 0"/>

      </entity>
      <entity name="geometric_intersection" supertypes="derived_shape_aspect">
         <where label="WR1" expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)&gt; 1"/>
      </entity>
      <entity name="geometric_representation_context" supertypes="representation_context">
         <explicit name="coordinate_space_dimension">
            <typename name="dimension_count"/>
         </explicit>
      </entity>
      <entity name="geometric_representation_item" supertypes="representation_item" super.expression="ONEOF (point, direction, vector, placement, cartesian_transformation_operator, curve, surface, edge_curve, face_surface, poly_loop, vertex_point, solid_model, boolean_result, sphere, right_circular_cone, right_circular_cylinder, torus, block, right_angular_wedge, half_space_solid, shell_based_surface_model, shell_based_wireframe_model, edge_based_wireframe_model, geometric_set)">
         <derived name="dim" expression="dimension_of(SELF)">
            <typename name="dimension_count"/>
         </derived>
         <where label="WR1" expression="SIZEOF (QUERY (using_rep &lt;* using_representations (SELF) |&#10;      NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN&#10;&#10;      TYPEOF (using_rep.context_of_items)))) = 0"/>

      </entity>
      <entity name="geometric_set" supertypes="geometric_representation_item">
         <explicit name="elements">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="geometric_set_select"/>
         </explicit>
      </entity>
      <entity name="geometric_tolerance">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="magnitude">
            <typename name="measure_with_unit"/>
         </explicit>
         <explicit name="toleranced_shape_aspect">
            <typename name="shape_aspect"/>
         </explicit>
         <where label="WR1" expression="('NUMBER' IN TYPEOF&#10;       (magnitude\measure_with_unit.value_component)) AND&#10;       (magnitude\measure_with_unit.value_component &gt;= 0.0)"/>
      </entity>
      <entity name="geometric_tolerance_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_geometric_tolerance">
            <typename name="geometric_tolerance"/>
         </explicit>
         <explicit name="related_geometric_tolerance">
            <typename name="geometric_tolerance"/>
         </explicit>
      </entity>
      <entity name="geometric_tolerance_with_datum_reference" supertypes="geometric_tolerance">
         <explicit name="datum_system">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="datum_reference"/>
         </explicit>
      </entity>
      <entity name="geometric_tolerance_with_defined_unit" supertypes="geometric_tolerance">
         <explicit name="unit_size">
            <typename name="measure_with_unit"/>
         </explicit>
         <where label="WR1" expression="('NUMBER' IN TYPEOF&#10;       (unit_size\measure_with_unit.value_component)) AND&#10;       (unit_size\measure_with_unit.value_component &gt; 0.0)"/>
      </entity>
      <entity name="geometrical_tolerance_callout" supertypes="draughting_callout"/>
      <entity name="geometrically_bounded_surface_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF(QUERY(it &lt;* SELF.items | NOT (SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_SET', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D'] * TYPEOF(it)) = 1))) = 0"/>

         <where label="WR2" expression="SIZEOF(QUERY(it &lt;* SELF.items | SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_SET', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'] * TYPEOF(it)) = 1)) &gt; 0"/>

         <where label="WR3" expression="SIZEOF(QUERY(mi &lt;* QUERY(it &lt;* SELF.items | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF(it)) | NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION' IN TYPEOF(mi\mapped_item.mapping_source.mapped_representation)) AND (SIZEOF(QUERY(mr_it &lt;* mi\mapped_item.mapping_source.mapped_representation.items | ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_SET' IN TYPEOF(mr_it)))) &gt; 0)))) = 0"/>

         <where label="WR4" expression="SIZEOF(QUERY(gs &lt;* QUERY(it &lt;* SELF.items | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_SET' IN TYPEOF(it)) | NOT (SIZEOF(QUERY(pnt &lt;* QUERY(gsel &lt;* gs\geometric_set.elements | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT' IN TYPEOF(gsel)) | NOT (gbsf_check_point(pnt)))) = 0))) = 0"/>

         <where label="WR5" expression="SIZEOF(QUERY(gs &lt;* QUERY(it &lt;* SELF.items | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_SET' IN TYPEOF(it)) | NOT (SIZEOF(QUERY(cv &lt;* QUERY(gsel &lt;* gs\geometric_set.elements | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE' IN TYPEOF(gsel)) | NOT (gbsf_check_curve(cv)))) = 0))) = 0"/>

         <where label="WR6" expression="SIZEOF(QUERY(gs &lt;* QUERY(it &lt;* SELF.items | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_SET' IN TYPEOF(it)) | NOT (SIZEOF(QUERY(sf &lt;* QUERY(gsel &lt;* gs\geometric_set.elements | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE' IN TYPEOF(gsel)) | NOT (gbsf_check_surface(sf)))) = 0))) = 0"/>

         <where label="WR7" expression="SIZEOF(QUERY(gs &lt;* QUERY(it &lt;* SELF.items | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_SET' IN TYPEOF(it)) | SIZEOF(QUERY(gsel &lt;* gs\geometric_set.elements | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE' IN TYPEOF(gsel))) &gt; 0)) &gt; 0"/>

      </entity>
      <entity name="geometrically_bounded_wireframe_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| NOT ( SIZEOF ( TYPEOF (it) * [ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_CURVE_SET', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' ]) = 1) )) = 0"/>

         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| ( SIZEOF ( TYPEOF (it) * [ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_CURVE_SET', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' ]) = 1) )) &gt;= 1"/>

         <where label="WR3" expression="SIZEOF ( &#10;QUERY ( gcs &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_CURVE_SET' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( crv &lt;* &#10;QUERY ( elem &lt;* gcs\geometric_set.elements| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE' IN TYPEOF (elem)) )| NOT valid_geometrically_bounded_wf_curve(crv) )) = 0) )) = 0"/>

         <where label="WR4" expression="SIZEOF ( &#10;QUERY ( gcs &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_CURVE_SET' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( pnts &lt;* &#10;QUERY ( elem &lt;* gcs\geometric_set.elements| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT' IN TYPEOF (elem)) )| NOT valid_geometrically_bounded_wf_point(pnts) )) = 0) )) = 0"/>

         <where label="WR5" expression="SIZEOF ( &#10;QUERY ( gcs &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_CURVE_SET' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( cnc &lt;* &#10;QUERY ( elem &lt;* gcs\geometric_set.elements| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC' IN TYPEOF (elem)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D' IN TYPEOF (cnc\conic.position)) )) = 0) )) = 0"/>

         <where label="WR6" expression="SIZEOF ( &#10;QUERY ( gcs &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_CURVE_SET' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( pline &lt;* &#10;QUERY ( elem &lt;* gcs\geometric_set.elements| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF (elem)) )| NOT ( SIZEOF (pline\polyline.points) &gt; 2) )) = 0) )) = 0"/>

         <where label="WR7" expression="SIZEOF ( &#10;QUERY ( mi &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (it)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION' IN TYPEOF (mi\mapped_item.mapping_source.mapped_representation)) )) = 0"/>

      </entity>
      <entity name="global_uncertainty_assigned_context" supertypes="representation_context">
         <explicit name="uncertainty">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="uncertainty_measure_with_unit"/>
         </explicit>
      </entity>
      <entity name="global_unit_assigned_context" supertypes="representation_context">
         <explicit name="units">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="unit"/>
         </explicit>
      </entity>
      <entity name="group">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="group_assignment" abstract.supertype="YES">
         <explicit name="assigned_group">
            <typename name="group"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="group_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_group">
            <typename name="group"/>
         </explicit>
         <explicit name="related_group">
            <typename name="group"/>
         </explicit>
      </entity>
      <entity name="half_space_solid" supertypes="geometric_representation_item">
         <explicit name="base_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="agreement_flag">
            <builtintype type="BOOLEAN"/>
         </explicit>
      </entity>
      <entity name="hyperbola" supertypes="conic">
         <explicit name="semi_axis">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="semi_imag_axis">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="id_attribute">
         <explicit name="attribute_value">
            <typename name="identifier"/>
         </explicit>
         <explicit name="identified_item">
            <typename name="id_attribute_select"/>
         </explicit>
      </entity>
      <entity name="identification_assignment" abstract.supertype="YES">
         <explicit name="assigned_id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="role">
            <typename name="identification_role"/>
         </explicit>
      </entity>
      <entity name="identification_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="intersection_curve" supertypes="surface_curve">
         <where label="WR1" expression="SIZEOF(SELF\surface_curve.associated_geometry) = 2"/>
         <where label="WR2" expression="associated_surface(SELF\surface_curve.associated_geometry[1]) &lt;&gt;&#10;             associated_surface(SELF\surface_curve.associated_geometry[2])"/>
      </entity>
      <entity name="invisibility">
         <explicit name="invisible_items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="invisible_item"/>
         </explicit>
      </entity>
      <entity name="item_defined_transformation">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="transform_item_1">
            <typename name="representation_item"/>
         </explicit>
         <explicit name="transform_item_2">
            <typename name="representation_item"/>
         </explicit>
      </entity>
      <entity name="language" supertypes="group">
         <where label="WR1" expression="SELF\group.name &lt;&gt; ''"/>
      </entity>
      <entity name="leader_curve" supertypes="annotation_curve_occurrence">
         <where label="WR1" expression="SIZEOF( &#10;          QUERY(ldc &lt;* USEDIN( SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                       'DRAUGHTING_CALLOUT.CONTENTS')&#10;                   |   'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;                       'LEADER_DIRECTED_CALLOUT'  IN TYPEOF(ldc))) &gt;= 1"/>

      </entity>
      <entity name="leader_directed_callout" supertypes="draughting_callout">
         <where label="WR1" expression="SIZEOF (QUERY (l_1 &lt;* SELF\draughting_callout.contents |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_CURVE' IN (TYPEOF(l_1)))) &gt;= 1"/>

         <where label="WR2" expression="SIZEOF(SELF\draughting_callout.contents) &gt;=2"/>
      </entity>
      <entity name="leader_directed_dimension" supertypes="leader_directed_callout">
         <where label="WR1" expression="SIZEOF (QUERY (con &lt;* SELF.contents |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_CURVE' IN TYPEOF (con)))=1"/>

      </entity>
      <entity name="leader_terminator" supertypes="terminator_symbol">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_CURVE' IN TYPEOF&#10;&#10;       (SELF\terminator_symbol.annotated_curve)"/>

      </entity>
      <entity name="length_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LENGTH_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="length_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 1.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="limits_and_fits">
         <explicit name="form_variance">
            <typename name="label"/>
         </explicit>
         <explicit name="zone_variance">
            <typename name="label"/>
         </explicit>
         <explicit name="grade">
            <typename name="label"/>
         </explicit>
         <explicit name="source">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="line" supertypes="curve">
         <explicit name="pnt">
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="dir">
            <typename name="vector"/>
         </explicit>
         <where label="WR1" expression="dir.dim  = pnt.dim"/>
      </entity>
      <entity name="line_profile_tolerance" supertypes="geometric_tolerance">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRIC_TOLERANCE_WITH_DATUM_REFERENCE' IN TYPEOF (SELF)) OR ( SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 3)"/>

         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( sar &lt;* USEDIN (SELF\geometric_tolerance.toleranced_shape_aspect, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT')| (sar.name IN [ 'affected plane association', 'resulting intersection curve association' ]) )) = 1"/>

      </entity>
      <entity name="linear_dimension" supertypes="dimension_curve_directed_callout"/>
      <entity name="local_time">
         <explicit name="hour_component">
            <typename name="hour_in_day"/>
         </explicit>
         <explicit name="minute_component" optional="YES">
            <typename name="minute_in_hour"/>
         </explicit>
         <explicit name="second_component" optional="YES">
            <typename name="second_in_minute"/>
         </explicit>
         <explicit name="zone">
            <typename name="coordinated_universal_time_offset"/>
         </explicit>
         <where label="WR1" expression="valid_time (SELF)"/>
      </entity>
      <entity name="loop" supertypes="topological_representation_item" super.expression="ONEOF (vertex_loop, edge_loop, poly_loop)"/>
      <entity name="lot_effectivity" supertypes="effectivity">
         <explicit name="effectivity_lot_id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="effectivity_lot_size">
            <typename name="measure_with_unit"/>
         </explicit>
      </entity>
      <entity name="luminous_intensity_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="luminous_intensity_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 1.0)"/>
      </entity>
      <entity name="make_from_usage_option" supertypes="product_definition_usage">
         <explicit name="ranking">
            <builtintype type="INTEGER"/>
         </explicit>
         <explicit name="ranking_rationale">
            <typename name="text"/>
         </explicit>
         <explicit name="quantity">
            <typename name="measure_with_unit"/>
         </explicit>
         <where label="WR1" expression="(NOT ('NUMBER' IN TYPEOF(quantity.value_component)))&#10;       OR (quantity.value_component &gt; 0)"/>
      </entity>
      <entity name="manifold_solid_brep" supertypes="solid_model">
         <explicit name="outer">
            <typename name="closed_shell"/>
         </explicit>
      </entity>
      <entity name="manifold_surface_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF (QUERY (it &lt;* SELF.items |&#10;       NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D'] * TYPEOF (it)) = 1))) = 0"/>

         <where label="WR2" expression="SIZEOF (QUERY (it &lt;* SELF.items |&#10;       SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'] * TYPEOF (it)) = 1)) &gt; 0"/>

         <where label="WR3" expression="SIZEOF (QUERY (mi &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (it)) |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MANIFOLD_SURFACE_SHAPE_REPRESENTATION'&#10;       IN TYPEOF (mi\mapped_item.mapping_source.mapped_representation))&#10;       AND&#10;       (SIZEOF(QUERY (mr_it &lt;*&#10;       mi\mapped_item.mapping_source.mapped_representation.items |&#10;       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL'&#10;       IN TYPEOF (mr_it)))) &gt; 0 )))) = 0"/>

         <where label="WR4" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (sh &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OPEN_SHELL',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_CLOSED_SHELL',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CLOSED_SHELL']&#10;       * TYPEOF (sh)) = 1))) = 0))) = 0"/>

         <where label="WR5" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE_SURFACE' IN TYPEOF (fa)) )) = 0)))&#10;       = 0))) = 0"/>

         <where label="WR6" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (msf_surface_check(fa\face_surface.face_geometry))))) = 0))) &#10;       = 0))) = 0"/>

         <where label="WR7" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (bnds &lt;* fa.bounds |&#10;       NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_LOOP']&#10;       * TYPEOF (bnds.bound)) = 1))) = 0)))) = 0))) = 0))) = 0"/>

         <where label="WR8" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items|&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* fa.bounds |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) |&#10;       NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds\path.edge_list |&#10;       NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_CURVE' IN TYPEOF &#10;       (oe.edge_element)))) = 0))) = 0)))) = 0))) = 0))) = 0"/>

         <where label="WR9" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* fa.bounds |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) |&#10;       NOT (SIZEOF (QUERY (oe_cv &lt;* QUERY (oe &lt;* &#10;       elp_fbnds\path.edge_list |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_CURVE' IN TYPEOF (oe.edge_element)) |&#10;       NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_CURVE_3D',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_CURVE'] * &#10;       TYPEOF (oe_cv.edge_element\edge_curve.edge_geometry)) &#10;       = 1))) = 0))) = 0)))) = 0))) = 0))) = 0"/>

         <where label="WR10" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* fa.bounds |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) |&#10;       NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds\path.edge_list |&#10;       NOT (msf_curve_check (oe.edge_element\edge_curve.edge_geometry)))) &#10;       = 0))) = 0)))) = 0))) = 0))) = 0"/>

         <where label="WR11" expression="SIZEOF (QUERY(sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* fa.bounds |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) |&#10;       NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds\path.edge_list|&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF&#10;       (oe.edge_element.edge_start))&#10;       AND&#10;       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN&#10;       TYPEOF (oe.edge_element.edge_end))))) &#10;       = 0))) = 0)))) = 0))) = 0))) = 0"/>

         <where label="WR12" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;*&#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* fa.bounds |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)) |&#10;       NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds\path.edge_list |&#10;       NOT ((SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEGENERATE_PCURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_CURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_SURFACE'] * TYPEOF&#10;       (oe.edge_element.edge_start\vertex_point.vertex_geometry)) = 1)&#10;       AND&#10;       (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEGENERATE_PCURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_CURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_SURFACE'] * TYPEOF&#10;       (oe.edge_element.edge_end\vertex_point.vertex_geometry)) = 1&#10;       )))) = 0))) = 0)))) = 0))) = 0))) = 0"/>

         <where label="WR13" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;* &#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (vlp_fbnds &lt;* QUERY (bnds &lt;* fa.bounds |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_LOOP' IN TYPEOF (bnds.bound)) |&#10;       NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF&#10;       (vlp_fbnds\vertex_loop.loop_vertex)))) = 0)))) = 0))) &#10;       = 0))) = 0"/>

         <where label="WR14" expression="SIZEOF (QUERY (sbsm &lt;* QUERY (it &lt;* SELF.items |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_SURFACE_MODEL' IN TYPEOF (it)) |&#10;       NOT (SIZEOF (QUERY (cfs &lt;* &#10;       sbsm\shell_based_surface_model.sbsm_boundary |&#10;       NOT (SIZEOF (QUERY (fa &lt;* cfs\connected_face_set.cfs_faces |&#10;       NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ADVANCED_FACE' IN TYPEOF (fa))&#10;       OR&#10;       (SIZEOF (QUERY (vlp_fbnds &lt;* QUERY (bnds &lt;* fa.bounds |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_LOOP' IN TYPEOF (bnds.bound)) |&#10;       NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEGENERATE_PCURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_CURVE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_SURFACE'] * TYPEOF&#10;&#10;       (vlp_fbnds\vertex_loop.loop_vertex\vertex_point.vertex_geometry)) &#10;       = 1))) = 0)))) = 0))) = 0))) = 0"/>

      </entity>
      <entity name="mapped_item" supertypes="representation_item">
         <explicit name="mapping_source">
            <typename name="representation_map"/>
         </explicit>
         <explicit name="mapping_target">
            <typename name="representation_item"/>
         </explicit>
         <where label="WR1" expression="acyclic_mapped_representation(using_representations(SELF), [SELF])"/>
      </entity>
      <entity name="mass_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MASS_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="mass_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 1.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="measure_qualification">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="qualified_measure">
            <typename name="measure_with_unit"/>
         </explicit>
         <explicit name="qualifiers">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="value_qualifier"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(QUERY(temp &lt;* qualifiers |&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRECISION_QUALIFIER'&#10;&#10;             IN TYPEOF(temp))) &lt; 2"/>

      </entity>
      <entity name="measure_representation_item" supertypes="representation_item measure_with_unit"/>
      <entity name="measure_with_unit" super.expression="ONEOF (length_measure_with_unit, mass_measure_with_unit, time_measure_with_unit, electric_current_measure_with_unit, thermodynamic_temperature_measure_with_unit, celsius_temperature_measure_with_unit, amount_of_substance_measure_with_unit, luminous_intensity_measure_with_unit, plane_angle_measure_with_unit, solid_angle_measure_with_unit, area_measure_with_unit, volume_measure_with_unit, ratio_measure_with_unit)">
         <explicit name="value_component">
            <typename name="measure_value"/>
         </explicit>
         <explicit name="unit_component">
            <typename name="unit"/>
         </explicit>
         <where label="WR1" expression="valid_units (SELF)"/>
      </entity>
      <entity name="mechanical_context" supertypes="product_context">
         <where label="WR1" expression="SELF.discipline_type = 'mechanical'"/>
      </entity>
      <entity name="mechanical_design_geometric_presentation_area" supertypes="presentation_area">
         <where label="WR1" expression="SIZEOF(QUERY(it1 &lt;* SELF.items |&#10;        NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT'&#10;        IN TYPEOF(it1))&#10;        OR&#10;        (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'&#10;        IN TYPEOF(it1)) AND&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRESENTATION_VIEW'&#10;        IN TYPEOF&#10;        (it1\mapped_item.mapping_source.mapped_representation)))))) = 0"/>

         <where label="WR2" expression="SIZEOF(QUERY(pv &lt;* QUERY(mi1 &lt;* QUERY(it1 &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'&#10;        IN TYPEOF(it1)) |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRESENTATION_VIEW'&#10;        IN TYPEOF&#10;        (mi1\mapped_item.mapping_source.mapped_representation)) |&#10;        -- search in all presentation_views for axis2_placements and&#10;        -- mapped_items and for the subtype of mapped_item&#10;        -- camera_image_3d_with_scale; the latter shall reference&#10;        -- a mechanical_design_geometric_presentation_representation;&#10;        -- the supertype mapped_item shall reference presentation_view.&#10;        NOT (SIZEOF(QUERY(it2 &lt;* pv\mapped_item.mapping_source.&#10;        mapped_representation\representation.items |&#10;        NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT'&#10;        IN TYPEOF(it2))&#10;        OR&#10;        (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'&#10;        IN TYPEOF(it2)) AND NOT&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'CAMERA_IMAGE_3D_WITH_SCALE' IN TYPEOF(it2))) AND NOT (&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRESENTATION_VIEW'&#10;        IN TYPEOF&#10;        (it2\mapped_item.mapping_source.mapped_representation)))&#10;        OR&#10;        (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'CAMERA_IMAGE_3D_WITH_SCALE' IN TYPEOF(it2))&#10;        AND NOT (&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'MECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION'&#10;        IN TYPEOF (it2\mapped_item.mapping_source.mapped_representation) ))&#10;        ))) = 0))) = 0"/>

         <where label="WR3" expression="(SIZEOF(QUERY(ps &lt;* USEDIN (SELF\presentation_area,&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'PRESENTATION_SIZE.UNIT') | ((ps.size\planar_extent.size_in_x &lt;= 0)&#10;        OR&#10;        (ps.size\planar_extent.size_in_y &lt;= 0)))) = 0)&#10;        AND&#10;        (SIZEOF(QUERY(ais &lt;* USEDIN (SELF\presentation_area,&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'AREA_IN_SET.AREA') |&#10;        (SIZEOF(QUERY(ps &lt;* USEDIN (ais, &#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'PRESENTATION_SIZE.UNIT') |&#10;        ((ps.size\planar_extent.size_in_x &lt;= 0)&#10;        OR&#10;        (ps.size\planar_extent.size_in_y &lt;= 0)))) &gt; 0))) = 0)"/>

         <where label="WR4" expression="(SIZEOF(QUERY(ps &lt;* USEDIN (SELF\presentation_area,&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'PRESENTATION_SIZE.UNIT') | &#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'AXIS2_PLACEMENT_2D' IN TYPEOF (ps.size.placement)))) = 1)&#10;        AND&#10;        (SIZEOF(QUERY(ps &lt;* USEDIN (SELF\presentation_area,&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'PRESENTATION_SIZE.UNIT') | &#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'AXIS2_PLACEMENT_3D' IN TYPEOF (ps.size.placement)))) = 0)&#10;        OR&#10;        ((SIZEOF(QUERY(ais &lt;* USEDIN (SELF\presentation_area,&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'AREA_IN_SET.AREA') |&#10;        (SIZEOF(QUERY(ps &lt;* USEDIN (ais, &#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'PRESENTATION_SIZE.UNIT') |&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'AXIS2_PLACEMENT_2D' IN TYPEOF (ps.size.placement)))) = 1))) = 1)&#10;        AND&#10;        (SIZEOF(QUERY(ais &lt;* USEDIN (SELF\presentation_area,&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'AREA_IN_SET.AREA') |&#10;        (SIZEOF(QUERY(ps &lt;* USEDIN (ais, &#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'PRESENTATION_SIZE.UNIT') |&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;        'AXIS2_PLACEMENT_3D' IN TYPEOF (ps.size.placement)))) = 0))) = 1))"/>

      </entity>
      <entity name="mechanical_design_geometric_presentation_representation" supertypes="representation">
         <where label="WR1" expression="SIZEOF(QUERY(it &lt;* SELF.items |&#10;        NOT (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CAMERA_MODEL_D3']&#10;        * TYPEOF(it)) = 1))) = 0"/>

         <where label="WR2" expression="SIZEOF(QUERY(mi &lt;* QUERY(it &lt;* SELF.items |&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'&#10;        IN TYPEOF(it))) | NOT (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SHAPE_REPRESENTATION',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'MECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION']&#10;        * TYPEOF(mi\mapped_item.mapping_source.mapped_representation))&#10;        = 1))) = 0"/>

         <where label="WR3" expression="SIZEOF(QUERY(smi &lt;* QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it))) |&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'&#10;        IN TYPEOF(si\styled_item.item))) | NOT (&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SHAPE_REPRESENTATION' IN TYPEOF (smi\styled_item.&#10;        item\mapped_item.mapping_source.mapped_representation))) )) = 0"/>

         <where label="WR4" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(pss &lt;* psa.styles | NOT (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_STYLE',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE']&#10;        * TYPEOF(pss)) = 1))) = 0))) = 0))) = 0"/>

         <where label="WR5" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) |&#10;        NOT (SIZEOF(QUERY(psbc &lt;* QUERY(psa &lt;* si\styled_item.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'PRESENTATION_STYLE_BY_CONTEXT' IN TYPEOF(psa)) | NOT (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'REPRESENTATION_ITEM',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REPRESENTATION']&#10;        * TYPEOF(psbc\presentation_style_by_context.style_context))&#10;        = 1))) = 0))) = 0"/>

         <where label="WR6" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ps &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_STYLE'&#10;        IN TYPEOF(pss)) | NOT&#10;        (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'POSITIVE_LENGTH_MEASURE' IN TYPEOF (ps\point_style.marker_size))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COLOUR_RGB',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_COLOUR']&#10;        * TYPEOF(ps\point_style.marker_colour))&#10;        = 1)))) = 0))) = 0))) = 0"/>

         <where label="WR7" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(cs &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;        IN TYPEOF(pss)) | NOT((SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COLOUR_RGB',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_COLOUR']&#10;        * TYPEOF(cs\curve_style.curve_colour)) = 1)&#10;        AND&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'POSITIVE_LENGTH_MEASURE' IN TYPEOF (cs\curve_style.curve_width))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE_FONT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_CURVE_FONT']&#10;        * TYPEOF(cs\curve_style.curve_font)) = 1)))) = 0))) = 0))) = 0"/>

         <where label="WR8" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ssu &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE'&#10;        IN TYPEOF(pss)) |&#10;        NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_SIDE_STYLE' IN TYPEOF&#10;        (ssu\surface_style_usage.style)))) = 0))) = 0))) = 0"/>

         <where label="WR9" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ssu &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE'&#10;        IN TYPEOF(pss)) | NOT (SIZEOF(QUERY(sses &lt;*&#10;        ssu\surface_style_usage.style\surface_side_style.styles |&#10;        NOT (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_PARAMETER_LINE',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_CONTROL_GRID',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_SILHOUETTE',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_SEGMENTATION_CURVE',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_FILL_AREA',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_BOUNDARY']&#10;        * TYPEOF(sses)) = 1))) = 0))) = 0))) = 0))) = 0"/>

         <where label="WR10" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ssu &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE'&#10;        IN TYPEOF(pss)) | NOT (SIZEOF(QUERY(sspl &lt;* QUERY(sses &lt;*&#10;        ssu\surface_style_usage.style\surface_side_style.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_PARAMETER_LINE' IN TYPEOF(sses)) |&#10;        NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;        IN TYPEOF&#10;        (sspl\surface_style_parameter_line.style_of_parameter_lines))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COLOUR_RGB',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_COLOUR']&#10;        * TYPEOF(sspl\surface_style_parameter_line.&#10;        style_of_parameter_lines\curve_style.curve_colour)) = 1)&#10;        AND (&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'POSITIVE_LENGTH_MEASURE' IN TYPEOF&#10;        (sspl\surface_style_parameter_line.&#10;        style_of_parameter_lines\curve_style.curve_width))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE_FONT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;        'DRAUGHTING_PRE_DEFINED_CURVE_FONT']&#10;        * TYPEOF(sspl\surface_style_parameter_line.&#10;        style_of_parameter_lines\curve_style.curve_font)) = 1))))&#10;        = 0))) = 0))) = 0))) = 0"/>

         <where label="WR11" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ssu &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE'&#10;        IN TYPEOF(pss)) | NOT (SIZEOF(QUERY(sscg &lt;* QUERY(sses &lt;*&#10;        ssu\surface_style_usage.style\surface_side_style.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_CONTROL_GRID' IN TYPEOF(sses)) |&#10;        NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;        IN TYPEOF (sscg\surface_style_control_grid.style_of_control_grid))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COLOUR_RGB',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_COLOUR']&#10;        * TYPEOF(sscg\surface_style_control_grid.&#10;        style_of_control_grid\curve_style.curve_colour)) = 1)&#10;        AND&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'POSITIVE_LENGTH_MEASURE' IN TYPEOF &#10;        (sscg\surface_style_control_grid.&#10;        style_of_control_grid\curve_style.curve_width))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE_FONT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_CURVE_FONT']&#10;        * TYPEOF(sscg\surface_style_control_grid.&#10;        style_of_control_grid\curve_style.curve_font)) = 1))))&#10;        = 0))) = 0))) = 0))) = 0"/>

         <where label="WR12" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) |&#10;        NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ssu &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE'&#10;        IN TYPEOF(pss)) | NOT (SIZEOF(QUERY(sssh &lt;* QUERY(sses &lt;*&#10;        ssu\surface_style_usage.style\surface_side_style.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_SILHOUETTE' IN TYPEOF(sses)) |&#10;        NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;        IN TYPEOF (sssh\surface_style_silhouette.style_of_silhouette))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COLOUR_RGB',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_COLOUR']&#10;        * TYPEOF(sssh\surface_style_silhouette.&#10;        style_of_silhouette\curve_style.curve_colour)) = 1)&#10;        AND&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'POSITIVE_LENGTH_MEASURE' IN TYPEOF&#10;        (sssh\surface_style_silhouette.style_of_silhouette\curve_style.&#10;        curve_width))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE_FONT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_CURVE_FONT']&#10;        * TYPEOF(sssh\surface_style_silhouette.&#10;        style_of_silhouette\curve_style.curve_font)) = 1))))&#10;        = 0))) = 0))) = 0))) = 0"/>

         <where label="WR13" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ssu &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE'&#10;        IN TYPEOF(pss)) | NOT (SIZEOF(QUERY(sssc &lt;* QUERY(sses &lt;*&#10;        ssu\surface_style_usage.style\surface_side_style.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_SEGMENTATION_CURVE' IN TYPEOF(sses)) |&#10;        NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;        IN TYPEOF&#10;        (sssc\surface_style_segmentation_curve.style_of_segmentation_curve))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COLOUR_RGB',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_COLOUR']&#10;        * TYPEOF(sssc\surface_style_segmentation_curve.&#10;        style_of_segmentation_curve\curve_style.curve_colour)) = 1)&#10;        AND&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'POSITIVE_LENGTH_MEASURE' IN TYPEOF&#10;        (sssc\surface_style_segmentation_curve.&#10;        style_of_segmentation_curve\curve_style.curve_width))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE_FONT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_CURVE_FONT']&#10;        * TYPEOF(sssc\surface_style_segmentation_curve.&#10;        style_of_segmentation_curve\curve_style.curve_font)) = 1))))&#10;        = 0))) = 0))) = 0))) = 0"/>

         <where label="WR14" expression="SIZEOF(QUERY(si &lt;* QUERY(it &lt;* SELF.items |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM'&#10;        IN TYPEOF(it)) | NOT (SIZEOF(QUERY(psa &lt;* si\styled_item.styles |&#10;        NOT (SIZEOF(QUERY(ssu &lt;* QUERY(pss &lt;* psa.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE'&#10;        IN TYPEOF(pss)) | NOT (SIZEOF(QUERY(ssbd &lt;* QUERY(sses &lt;*&#10;        ssu\surface_style_usage.style\surface_side_style.styles |&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'SURFACE_STYLE_BOUNDARY' IN TYPEOF(sses)) |&#10;        NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE'&#10;        IN TYPEOF (ssbd\surface_style_boundary.style_of_boundary))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COLOUR_RGB',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'DRAUGHTING_PRE_DEFINED_COLOUR']&#10;        * TYPEOF(ssbd\surface_style_boundary.&#10;        style_of_boundary\curve_style.curve_colour)) = 1)&#10;        AND&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;        'POSITIVE_LENGTH_MEASURE' IN TYPEOF (ssbd\surface_style_boundary.&#10;        style_of_boundary\curve_style.curve_width))&#10;        AND (SIZEOF(&#10;        ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE_FONT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;        'DRAUGHTING_PRE_DEFINED_CURVE_FONT']&#10;        * TYPEOF(ssbd\surface_style_boundary.&#10;        style_of_boundary\curve_style.curve_font)) = 1)))) = 0)))&#10;        = 0))) = 0))) = 0"/>

      </entity>
      <entity name="modified_geometric_tolerance" supertypes="geometric_tolerance">
         <explicit name="modifier">
            <typename name="limit_condition"/>
         </explicit>
      </entity>
      <entity name="multi_language_attribute_assignment" supertypes="attribute_value_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="multi_language_attribute_item"/>
         </explicit>
         <derived name="translation_language" expression="language_indication[1]\attribute_classification_assignment.assigned_class">
            <typename name="language"/>
         </derived>
         <inverse name="language_indication" entity="attribute_language_assignment" attribute="items">
            <inverse.aggregate type="SET" lower="1" upper="1"/>
         </inverse>
         <where label="WR1" expression="(SELF\attribute_value_assignment.role.name = 'alternate language')"/>
         <where label="WR2" expression="SIZEOF( QUERY( ala &lt;* language_indication |  &#10;   (ala\attribute_classification_assignment.attribute_name = 'attribute_value') AND &#10;   (ala\attribute_classification_assignment.role.name='translated') )) = 1"/>
         <where label="WR3" expression="SELF\attribute_value_assignment.attribute_name &lt;&gt; ''"/>
         <where label="WR4" expression="SIZEOF(QUERY(ci &lt;* items |&#10;SIZEOF(QUERY(ata &lt;* USEDIN(ci, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS') |&#10;(ata\attribute_value_assignment.attribute_name = SELF\attribute_value_assignment.attribute_name) AND &#10;(ata.translation_language :=: translation_language) ))&gt;1 )) =0"/>

         <where label="WR5" expression="SIZEOF(QUERY(ci &lt;* items |&#10;SIZEOF(QUERY(ata &lt;* USEDIN(ci, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS') |&#10;&#10; (ata\attribute_classification_assignment.role.name='primary') AND&#10; (ata\attribute_classification_assignment.attribute_name= SELF\attribute_value_assignment.attribute_name) AND &#10; (ata\attribute_classification_assignment.assigned_class :=: translation_language) ))&gt;0 )) =0"/>

      </entity>
      <entity name="name_assignment" abstract.supertype="YES">
         <explicit name="assigned_name">
            <typename name="label"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="name_attribute">
         <explicit name="attribute_value">
            <typename name="label"/>
         </explicit>
         <explicit name="named_item">
            <typename name="name_attribute_select"/>
         </explicit>
      </entity>
      <entity name="named_unit" super.expression="ONEOF (si_unit, conversion_based_unit, context_dependent_unit) ANDOR ONEOF (length_unit, mass_unit, time_unit, electric_current_unit, thermodynamic_temperature_unit, amount_of_substance_unit, luminous_intensity_unit, plane_angle_unit, solid_angle_unit, area_unit, volume_unit, ratio_unit)">
         <explicit name="dimensions">
            <typename name="dimensional_exponents"/>
         </explicit>
      </entity>
      <entity name="next_assembly_usage_occurrence" supertypes="assembly_component_usage"/>
      <entity name="object_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="offset_curve_2d" supertypes="curve">
         <explicit name="basis_curve">
            <typename name="curve"/>
         </explicit>
         <explicit name="distance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="self_intersect">
            <builtintype type="LOGICAL"/>
         </explicit>
         <where label="WR1" expression="basis_curve.dim = 2"/>
      </entity>
      <entity name="offset_curve_3d" supertypes="curve">
         <explicit name="basis_curve">
            <typename name="curve"/>
         </explicit>
         <explicit name="distance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="self_intersect">
            <builtintype type="LOGICAL"/>
         </explicit>
         <explicit name="ref_direction">
            <typename name="direction"/>
         </explicit>
         <where label="WR1" expression="(basis_curve.dim = 3) AND (ref_direction.dim = 3)"/>
      </entity>
      <entity name="offset_surface" supertypes="surface">
         <explicit name="basis_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="distance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="self_intersect">
            <builtintype type="LOGICAL"/>
         </explicit>
      </entity>
      <entity name="one_direction_repeat_factor" supertypes="geometric_representation_item">
         <explicit name="repeat_factor">
            <typename name="vector"/>
         </explicit>
      </entity>
      <entity name="open_shell" supertypes="connected_face_set"/>
      <entity name="ordinal_date" supertypes="date">
         <explicit name="day_component">
            <typename name="day_in_year_number"/>
         </explicit>
         <where label="WR1" expression="(NOT leap_year(SELF.year_component) AND { 1 &lt;= day_component &lt;= 365 }) OR (leap_year(SELF.year_component) AND { 1 &lt;= day_component &lt;= 366 })"/>
      </entity>
      <entity name="ordinate_dimension" supertypes="projection_directed_callout"/>
      <entity name="organization">
         <explicit name="id" optional="YES">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="organization_assignment" abstract.supertype="YES">
         <explicit name="assigned_organization">
            <typename name="organization"/>
         </explicit>
         <explicit name="role">
            <typename name="organization_role"/>
         </explicit>
      </entity>
      <entity name="organization_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_organization">
            <typename name="organization"/>
         </explicit>
         <explicit name="related_organization">
            <typename name="organization"/>
         </explicit>
      </entity>
      <entity name="organization_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <derived name="description" expression="get_description_value(SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="organizational_address" supertypes="address">
         <explicit name="organizations">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="organization"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="organizational_project">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="responsible_organizations">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="organization"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="organizational_project_assignment" abstract.supertype="YES">
         <explicit name="assigned_organizational_project">
            <typename name="organizational_project"/>
         </explicit>
         <explicit name="role">
            <typename name="organizational_project_role"/>
         </explicit>
      </entity>
      <entity name="organizational_project_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_organizational_project">
            <typename name="organizational_project"/>
         </explicit>
         <explicit name="related_organizational_project">
            <typename name="organizational_project"/>
         </explicit>
      </entity>
      <entity name="organizational_project_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="oriented_closed_shell" supertypes="closed_shell">
         <explicit name="closed_shell_element">
            <typename name="closed_shell"/>
         </explicit>
         <explicit name="orientation">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <derived name="cfs_faces" expression="conditional_reverse(SELF.orientation,&#10;                                   SELF.closed_shell_element.cfs_faces)">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="face"/>
            <redeclaration entity-ref="connected_face_set"/>
         </derived>
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_CLOSED_SHELL' &#10;&#10;                IN TYPEOF (SELF.closed_shell_element))"/>

      </entity>
      <entity name="oriented_edge" supertypes="edge">
         <explicit name="edge_element">
            <typename name="edge"/>
         </explicit>
         <explicit name="orientation">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <derived name="edge_start" expression="boolean_choose (SELF.orientation,&#10;                                            SELF.edge_element.edge_start,&#10;                                            SELF.edge_element.edge_end)">
            <typename name="vertex"/>
            <redeclaration entity-ref="edge"/>
         </derived>
         <derived name="edge_end" expression="boolean_choose (SELF.orientation,&#10;                                            SELF.edge_element.edge_end,&#10;                                            SELF.edge_element.edge_start)">
            <typename name="vertex"/>
            <redeclaration entity-ref="edge"/>
         </derived>
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_EDGE' IN TYPEOF (SELF.edge_element))"/>

      </entity>
      <entity name="oriented_face" supertypes="face">
         <explicit name="face_element">
            <typename name="face"/>
         </explicit>
         <explicit name="orientation">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <derived name="bounds" expression="conditional_reverse(SELF.orientation,SELF.face_element.bounds)">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="face_bound"/>
            <redeclaration entity-ref="face"/>
         </derived>
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_FACE' IN TYPEOF (SELF.face_element))"/>

      </entity>
      <entity name="oriented_open_shell" supertypes="open_shell">
         <explicit name="open_shell_element">
            <typename name="open_shell"/>
         </explicit>
         <explicit name="orientation">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <derived name="cfs_faces" expression="conditional_reverse(SELF.orientation,&#10;                                      SELF.open_shell_element.cfs_faces)">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="face"/>
            <redeclaration entity-ref="connected_face_set"/>
         </derived>
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_OPEN_SHELL' &#10;&#10;                IN TYPEOF (SELF.open_shell_element))"/>

      </entity>
      <entity name="oriented_path" supertypes="path">
         <explicit name="path_element">
            <typename name="path"/>
         </explicit>
         <explicit name="orientation">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <derived name="edge_list" expression="conditional_reverse(SELF.orientation,&#10;                                         SELF.path_element.edge_list)">
            <aggregate type="LIST" unique="YES" lower="1" upper="?"/>
            <typename name="oriented_edge"/>
            <redeclaration entity-ref="path"/>
         </derived>
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_PATH' IN TYPEOF (SELF.path_element))"/>

      </entity>
      <entity name="oriented_surface" supertypes="surface">
         <explicit name="orientation">
            <builtintype type="BOOLEAN"/>
         </explicit>
      </entity>
      <entity name="outer_boundary_curve" supertypes="boundary_curve"/>
      <entity name="over_riding_styled_item" supertypes="styled_item">
         <explicit name="over_ridden_style">
            <typename name="styled_item"/>
         </explicit>
      </entity>
      <entity name="parabola" supertypes="conic">
         <explicit name="focal_dist">
            <typename name="length_measure"/>
         </explicit>
         <where label="WR1" expression="focal_dist &lt;&gt; 0.0"/>
      </entity>
      <entity name="parallel_offset" supertypes="derived_shape_aspect">
         <explicit name="offset">
            <typename name="measure_with_unit"/>
         </explicit>
         <where label="WR1" expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1"/>
      </entity>
      <entity name="parallelism_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt; 3"/>
      </entity>
      <entity name="parametric_representation_context" supertypes="representation_context"/>
      <entity name="path" supertypes="topological_representation_item" super.expression="ONEOF (edge_loop, oriented_path)">
         <explicit name="edge_list">
            <aggregate type="LIST" unique="YES" lower="1" upper="?"/>
            <typename name="oriented_edge"/>
         </explicit>
         <where label="WR1" expression="path_head_to_tail(SELF)"/>
      </entity>
      <entity name="pcurve" supertypes="curve">
         <explicit name="basis_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="reference_to_curve">
            <typename name="definitional_representation"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(reference_to_curve\representation.items) = 1"/>
         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE' IN TYPEOF&#10;&#10;                    (reference_to_curve\representation.items[1])"/>

         <where label="WR3" expression="reference_to_curve\representation.items[1]\&#10;                               geometric_representation_item.dim =2"/>
      </entity>
      <entity name="perpendicular_to" supertypes="derived_shape_aspect">
         <where label="WR1" expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1"/>
      </entity>
      <entity name="perpendicularity_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 3"/>
      </entity>
      <entity name="person">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="last_name" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="first_name" optional="YES">
            <typename name="label"/>
         </explicit>
         <explicit name="middle_names" optional="YES">
            <aggregate type="LIST" lower="1" upper="?"/>
            <typename name="label"/>
         </explicit>
         <explicit name="prefix_titles" optional="YES">
            <aggregate type="LIST" lower="1" upper="?"/>
            <typename name="label"/>
         </explicit>
         <explicit name="suffix_titles" optional="YES">
            <aggregate type="LIST" lower="1" upper="?"/>
            <typename name="label"/>
         </explicit>
         <where label="WR1" expression="EXISTS(last_name) OR EXISTS(first_name)"/>
      </entity>
      <entity name="person_and_organization">
         <explicit name="the_person">
            <typename name="person"/>
         </explicit>
         <explicit name="the_organization">
            <typename name="organization"/>
         </explicit>
         <derived name="name" expression="get_name_value (SELF)">
            <typename name="label"/>
         </derived>
         <derived name="description" expression="get_description_value(SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="person_and_organization_address" supertypes="organizational_address personal_address">
         <explicit name="organizations">
            <aggregate type="SET" lower="1" upper="1"/>
            <typename name="organization"/>
            <redeclaration entity-ref="organizational_address"/>
         </explicit>
         <explicit name="people">
            <aggregate type="SET" lower="1" upper="1"/>
            <typename name="person"/>
            <redeclaration entity-ref="personal_address"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(QUERY(pao &lt;* USEDIN (SELF\personal_address.people[1], 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PERSON_AND_ORGANIZATION.THE_PERSON') | pao.the_organization :=: SELF\organizational_address.organizations[1])) = 1"/>

      </entity>
      <entity name="person_and_organization_assignment" abstract.supertype="YES">
         <explicit name="assigned_person_and_organization">
            <typename name="person_and_organization"/>
         </explicit>
         <explicit name="role">
            <typename name="person_and_organization_role"/>
         </explicit>
      </entity>
      <entity name="person_and_organization_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="personal_address" supertypes="address">
         <explicit name="people">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="person"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="placed_datum_target_feature" supertypes="datum_target">
         <derived name="representation_associations" expression="get_shape_aspect_property_definition_representations(SELF)">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="property_definition_representation"/>
         </derived>
         <where label="WR1" expression="SELF.description IN ['point','line','rectangle','circle', 'circular line']"/>
         <where label="WR2" expression="SIZEOF (QUERY (pdr &lt;* representation_associations | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_REPRESENTATION_WITH_PARAMETERS' IN TYPEOF (pdr.used_representation) )) = 1"/>

         <where label="WR3" expression="valid_datum_target_parameters(SELF)"/>
      </entity>
      <entity name="placement" supertypes="geometric_representation_item" super.expression="ONEOF (axis1_placement, axis2_placement_2d, axis2_placement_3d)">
         <explicit name="location">
            <typename name="cartesian_point"/>
         </explicit>
      </entity>
      <entity name="planar_box" supertypes="planar_extent">
         <explicit name="placement">
            <typename name="axis2_placement"/>
         </explicit>
      </entity>
      <entity name="planar_extent" supertypes="geometric_representation_item">
         <explicit name="size_in_x">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="size_in_y">
            <typename name="length_measure"/>
         </explicit>
      </entity>
      <entity name="plane" supertypes="elementary_surface"/>
      <entity name="plane_angle_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLANE_ANGLE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="plane_angle_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="plus_minus_tolerance">
         <explicit name="range">
            <typename name="tolerance_method_definition"/>
         </explicit>
         <explicit name="toleranced_dimension">
            <typename name="dimensional_characteristic"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="plus_minus_tolerance" attribute="toleranced_dimension"/>
         </unique>
      </entity>
      <entity name="point" supertypes="geometric_representation_item" super.expression="ONEOF (cartesian_point, point_on_curve, point_on_surface, point_replica, degenerate_pcurve)"/>
      <entity name="point_on_curve" supertypes="point">
         <explicit name="basis_curve">
            <typename name="curve"/>
         </explicit>
         <explicit name="point_parameter">
            <typename name="parameter_value"/>
         </explicit>
      </entity>
      <entity name="point_on_surface" supertypes="point">
         <explicit name="basis_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="point_parameter_u">
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="point_parameter_v">
            <typename name="parameter_value"/>
         </explicit>
      </entity>
      <entity name="point_replica" supertypes="point">
         <explicit name="parent_pt">
            <typename name="point"/>
         </explicit>
         <explicit name="transformation">
            <typename name="cartesian_transformation_operator"/>
         </explicit>
         <where label="WR1" expression="transformation.dim = parent_pt.dim"/>
         <where label="WR2" expression="acyclic_point_replica (SELF,parent_pt)"/>
      </entity>
      <entity name="point_style">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="marker">
            <typename name="marker_select"/>
         </explicit>
         <explicit name="marker_size">
            <typename name="size_select"/>
         </explicit>
         <explicit name="marker_colour">
            <typename name="colour"/>
         </explicit>
      </entity>
      <entity name="poly_loop" supertypes="loop geometric_representation_item">
         <explicit name="polygon">
            <aggregate type="LIST" unique="YES" lower="3" upper="?"/>
            <typename name="cartesian_point"/>
         </explicit>
      </entity>
      <entity name="polyline" supertypes="bounded_curve">
         <explicit name="points">
            <aggregate type="LIST" lower="2" upper="?"/>
            <typename name="cartesian_point"/>
         </explicit>
      </entity>
      <entity name="position_tolerance" supertypes="geometric_tolerance">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRIC_TOLERANCE_WITH_DATUM_REFERENCE' IN TYPEOF (SELF)) OR ( SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 3)"/>

      </entity>
      <entity name="pre_defined_character_glyph" supertypes="pre_defined_item"/>
      <entity name="pre_defined_colour" supertypes="pre_defined_item colour"/>
      <entity name="pre_defined_curve_font" supertypes="pre_defined_item"/>
      <entity name="pre_defined_item">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="pre_defined_marker" supertypes="pre_defined_item"/>
      <entity name="pre_defined_symbol" supertypes="pre_defined_item"/>
      <entity name="pre_defined_terminator_symbol" supertypes="pre_defined_symbol">
         <where label="WR1" expression="SELF.name IN ['blanked arrow', 'blanked box', 'blanked dot', 'dimension origin', 'filled arrow', 'filled box', 'filled dot', 'integral symbol', 'open arrow', 'slash', 'unfilled arrow']"/>
      </entity>
      <entity name="pre_defined_text_font" supertypes="pre_defined_item"/>
      <entity name="pre_defined_tile" supertypes="pre_defined_item"/>
      <entity name="precision_qualifier">
         <explicit name="precision_value">
            <builtintype type="INTEGER"/>
         </explicit>
      </entity>
      <entity name="presentation_area" supertypes="presentation_representation">
         <where label="WR1" expression="((SIZEOF (QUERY (ais &lt;* USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                                             'AREA_IN_SET.AREA') | &#10;           SIZEOF (USEDIN (ais, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                                'PRESENTATION_SIZE.UNIT')) =1)) &gt; 0) OR&#10;         (SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;                                'PRESENTATION_SIZE.UNIT')) =1))"/>

      </entity>
      <entity name="presentation_layer_assignment">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
         <explicit name="assigned_items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="layered_item"/>
         </explicit>
      </entity>
      <entity name="presentation_representation" supertypes="representation">
         <where label="WR1" expression="SELF\representation.&#10;            context_of_items\geometric_representation_context.&#10;            coordinate_space_dimension = 2"/>
         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT'&#10;&#10;       IN TYPEOF (SELF\representation.context_of_items)"/>

      </entity>
      <entity name="presentation_set">
         <inverse name="areas" entity="area_in_set" attribute="in_set">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
         </inverse>
      </entity>
      <entity name="presentation_size">
         <explicit name="unit">
            <typename name="presentation_size_assignment_select"/>
         </explicit>
         <explicit name="size">
            <typename name="planar_box"/>
         </explicit>
         <where label="WR1" expression="(('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRESENTATION_REPRESENTATION'&#10;         IN TYPEOF (SELF.unit)) AND&#10;         item_in_context (SELF.size, &#10;                          SELF.unit\representation.context_of_items)&#10;       )&#10;            OR&#10;       (&#10;        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AREA_IN_SET'&#10;&#10;          IN TYPEOF (SELF.unit)) AND&#10;        (SIZEOF (QUERY ( ais &lt;* SELF.unit\area_in_set.in_set.areas |&#10;                NOT item_in_context (SELF.size, ais.area\representation.&#10;                                                context_of_items) )) = 0)&#10;       )"/>

      </entity>
      <entity name="presentation_style_assignment">
         <explicit name="styles">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="presentation_style_select"/>
         </explicit>
         <where label="WR1" expression="SIZEOF (QUERY (style1 &lt;* SELF.styles |&#10;         NOT (SIZEOF (QUERY (style2 &lt;* (SELF.styles - style1) |&#10;           NOT ((TYPEOF (style1) &lt;&gt; TYPEOF (style2)) OR&#10;             (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                       'SURFACE_STYLE_USAGE',&#10;                       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;                       'EXTERNALLY_DEFINED_STYLE'] *&#10;                     TYPEOF (style1)) = 1)&#10;           ))) = 0&#10;         ))) = 0"/>

         <where label="WR2" expression="SIZEOF (QUERY (style1 &lt;* SELF.styles |&#10;         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_STYLE_USAGE' IN&#10;&#10;         TYPEOF(style1)&#10;         )) &lt;= 2"/>

      </entity>
      <entity name="presentation_style_by_context" supertypes="presentation_style_assignment">
         <explicit name="style_context">
            <typename name="style_context_select"/>
         </explicit>
      </entity>
      <entity name="presentation_view" supertypes="presentation_representation"/>
      <entity name="product">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="frame_of_reference">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="product_context"/>
         </explicit>
      </entity>
      <entity name="product_category">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="product_category_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="category">
            <typename name="product_category"/>
         </explicit>
         <explicit name="sub_category">
            <typename name="product_category"/>
         </explicit>
         <where label="WR1" expression="acyclic_product_category_relationship (SELF, [SELF.sub_category])"/>
      </entity>
      <entity name="product_concept">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="market_context">
            <typename name="product_concept_context"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="product_concept" attribute="id"/>
         </unique>
      </entity>
      <entity name="product_concept_context" supertypes="application_context_element">
         <explicit name="market_segment_type">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="product_concept_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_product_concept">
            <typename name="product_concept"/>
         </explicit>
         <explicit name="related_product_concept">
            <typename name="product_concept"/>
         </explicit>
      </entity>
      <entity name="product_context" supertypes="application_context_element">
         <explicit name="discipline_type">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="product_definition">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="formation">
            <typename name="product_definition_formation"/>
         </explicit>
         <explicit name="frame_of_reference">
            <typename name="product_definition_context"/>
         </explicit>
         <derived name="name" expression="get_name_value (SELF)">
            <typename name="label"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="product_definition_context" supertypes="application_context_element">
         <explicit name="life_cycle_stage">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="product_definition_context_association">
         <explicit name="definition">
            <typename name="product_definition"/>
         </explicit>
         <explicit name="frame_of_reference">
            <typename name="product_definition_context"/>
         </explicit>
         <explicit name="role">
            <typename name="product_definition_context_role"/>
         </explicit>
      </entity>
      <entity name="product_definition_context_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="product_definition_effectivity" supertypes="effectivity">
         <explicit name="usage">
            <typename name="product_definition_relationship"/>
         </explicit>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY')) = 0"/>

      </entity>
      <entity name="product_definition_formation">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="of_product">
            <typename name="product"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="product_definition_formation" attribute="id"/>
            <unique.attribute entity-ref="product_definition_formation" attribute="of_product"/>
         </unique>
      </entity>
      <entity name="product_definition_formation_relationship">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_product_definition_formation">
            <typename name="product_definition_formation"/>
         </explicit>
         <explicit name="related_product_definition_formation">
            <typename name="product_definition_formation"/>
         </explicit>
      </entity>
      <entity name="product_definition_formation_with_specified_source" supertypes="product_definition_formation">
         <explicit name="make_or_buy">
            <typename name="source"/>
         </explicit>
      </entity>
      <entity name="product_definition_relationship">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_product_definition">
            <typename name="product_definition"/>
         </explicit>
         <explicit name="related_product_definition">
            <typename name="product_definition"/>
         </explicit>
      </entity>
      <entity name="product_definition_shape" supertypes="property_definition">
         <unique label="UR1">
            <unique.attribute entity-ref="product_definition_shape" attribute="definition"/>
         </unique>
         <where label="WR1" expression="SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CHARACTERIZED_PRODUCT_DEFINITION', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CHARACTERIZED_OBJECT'] * TYPEOF(SELF\property_definition.definition)) &gt; 0"/>

      </entity>
      <entity name="product_definition_usage" supertypes="product_definition_relationship" super.expression="ONEOF (make_from_usage_option, assembly_component_usage)">
         <unique label="UR1">
            <unique.attribute entity-ref="product_definition_usage" attribute="id"/>
            <unique.attribute entity-ref="product_definition_usage" attribute="relating_product_definition"/>
            <unique.attribute entity-ref="product_definition_usage" attribute="related_product_definition"/>
         </unique>
         <where label="WR1" expression="acyclic_product_definition_relationship&#10;         (SELF,&#10;         [SELF\product_definition_relationship.related_product_definition],&#10;         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_DEFINITION_USAGE')"/>

      </entity>
      <entity name="product_definition_with_associated_documents" supertypes="product_definition">
         <explicit name="documentation_ids">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="document"/>
         </explicit>
      </entity>
      <entity name="product_related_product_category" supertypes="product_category">
         <explicit name="products">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="product"/>
         </explicit>
      </entity>
      <entity name="projected_zone_definition" supertypes="tolerance_zone_definition">
         <explicit name="projection_end">
            <typename name="shape_aspect"/>
         </explicit>
         <explicit name="projected_length">
            <typename name="measure_with_unit"/>
         </explicit>
         <where label="WR1" expression="('NUMBER' IN TYPEOF&#10;       (projected_length\measure_with_unit.value_component)) AND&#10;       (projected_length\measure_with_unit.value_component &gt; 0.0)"/>
         <where label="WR2" expression="(derive_dimensional_exponents&#10;       (projected_length\measure_with_unit.unit_component)=&#10;        dimensional_exponents(1,0,0,0,0,0,0))"/>
      </entity>
      <entity name="projection_curve" supertypes="annotation_curve_occurrence"/>
      <entity name="projection_directed_callout" supertypes="draughting_callout">
         <where label="WR1" expression="SIZEOF(QUERY(p_1&lt;*SELF\draughting_callout.contents | &#10;      'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_CURVE' IN (TYPEOF(p_1))))=1"/>

         <where label="WR2" expression="SIZEOF(SELF\draughting_callout.contents) &gt;=2"/>
      </entity>
      <entity name="promissory_usage_occurrence" supertypes="assembly_component_usage"/>
      <entity name="property_definition">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="definition">
            <typename name="characterized_definition"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="property_definition_representation">
         <explicit name="definition">
            <typename name="represented_definition"/>
         </explicit>
         <explicit name="used_representation">
            <typename name="representation"/>
         </explicit>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <derived name="name" expression="get_name_value (SELF)">
            <typename name="label"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1"/>

         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="qualified_representation_item" supertypes="representation_item">
         <explicit name="qualifiers">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="value_qualifier"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(QUERY(temp &lt;* qualifiers |&#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRECISION_QUALIFIER'&#10;&#10;             IN TYPEOF(temp))) &lt; 2"/>

      </entity>
      <entity name="quantified_assembly_component_usage" supertypes="assembly_component_usage">
         <explicit name="quantity">
            <typename name="measure_with_unit"/>
         </explicit>
         <where label="WR1" expression="(NOT ('NUMBER' IN TYPEOF(quantity.value_component)))&#10;       OR (quantity.value_component &gt; 0)"/>
      </entity>
      <entity name="quasi_uniform_curve" supertypes="b_spline_curve"/>
      <entity name="quasi_uniform_surface" supertypes="b_spline_surface"/>
      <entity name="radius_dimension" supertypes="dimension_curve_directed_callout">
         <where label="WR1" expression="SIZEOF (QUERY (con &lt;* SELF.contents |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_CURVE' IN TYPEOF (con)))&lt;=1"/>

      </entity>
      <entity name="ratio_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RATIO_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="ratio_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="rational_b_spline_curve" supertypes="b_spline_curve">
         <explicit name="weights_data">
            <aggregate type="LIST" lower="2" upper="?"/>
            <builtintype type="REAL"/>
         </explicit>
         <derived name="weights" expression="list_to_array(weights_data,0,&#10;                                      upper_index_on_control_points)">
            <aggregate type="ARRAY" lower="0" upper="0"/>
            <builtintype type="REAL"/>
         </derived>
         <where label="WR1" expression="SIZEOF(weights_data) = SIZEOF(SELF\b_spline_curve.&#10;                                           control_points_list)"/>
         <where label="WR2" expression="curve_weights_positive(SELF)"/>
      </entity>
      <entity name="rational_b_spline_surface" supertypes="b_spline_surface">
         <explicit name="weights_data">
            <aggregate type="LIST" lower="2" upper="?"/>
            <aggregate type="LIST" lower="2" upper="?"/>
            <builtintype type="REAL"/>
         </explicit>
         <derived name="weights" expression="make_array_of_array(weights_data,0,u_upper,0,v_upper)">
            <aggregate type="ARRAY" lower="0" upper="0"/>
            <aggregate type="ARRAY" lower="0" upper="0"/>
            <builtintype type="REAL"/>
         </derived>
         <where label="WR1" expression="(SIZEOF(weights_data) =&#10;                     SIZEOF(SELF\b_spline_surface.control_points_list))&#10;           AND (SIZEOF(weights_data[1]) =&#10;                  SIZEOF(SELF\b_spline_surface.control_points_list[1]))"/>
         <where label="WR2" expression="surface_weights_positive(SELF)"/>
      </entity>
      <entity name="rectangular_composite_surface" supertypes="bounded_surface">
         <explicit name="segments">
            <aggregate type="LIST" lower="1" upper="?"/>
            <aggregate type="LIST" lower="1" upper="?"/>
            <typename name="surface_patch"/>
         </explicit>
         <derived name="n_u" expression="SIZEOF(segments)">
            <builtintype type="INTEGER"/>
         </derived>
         <derived name="n_v" expression="SIZEOF(segments[1])">
            <builtintype type="INTEGER"/>
         </derived>
         <where label="WR1" expression="SIZEOF(QUERY (s &lt;* segments | n_v &lt;&gt; SIZEOF (s))) = 0"/>
         <where label="WR2" expression="constraints_rectangular_composite_surface(SELF)"/>
      </entity>
      <entity name="rectangular_trimmed_surface" supertypes="bounded_surface">
         <explicit name="basis_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="u1">
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="u2">
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="v1">
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="v2">
            <typename name="parameter_value"/>
         </explicit>
         <explicit name="usense">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <explicit name="vsense">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <where label="WR1" expression="u1 &lt;&gt; u2"/>
         <where label="WR2" expression="v1 &lt;&gt; v2"/>
         <where label="WR3" expression="(('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ELEMENTARY_SURFACE' IN TYPEOF(basis_surface))&#10;       AND  (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLANE' IN TYPEOF(basis_surface)))) OR&#10;      ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_OF_REVOLUTION' IN TYPEOF(basis_surface))&#10;          OR (usense = (u2 &gt; u1))"/>

         <where label="WR4" expression="(('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SPHERICAL_SURFACE' IN TYPEOF(basis_surface))&#10;          OR&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TOROIDAL_SURFACE' IN TYPEOF(basis_surface)))&#10;&#10;          OR (vsense = (v2 &gt; v1))"/>

      </entity>
      <entity name="referenced_modified_datum" supertypes="datum_reference">
         <explicit name="modifier">
            <typename name="limit_condition"/>
         </explicit>
      </entity>
      <entity name="relative_event_occurrence" supertypes="event_occurrence">
         <explicit name="base_event">
            <typename name="event_occurrence"/>
         </explicit>
         <explicit name="offset">
            <typename name="time_measure_with_unit"/>
         </explicit>
      </entity>
      <entity name="reparametrised_composite_curve_segment" supertypes="composite_curve_segment">
         <explicit name="param_length">
            <typename name="parameter_value"/>
         </explicit>
         <where label="WR1" expression="param_length &gt; 0.0"/>
      </entity>
      <entity name="representation">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="representation_item"/>
         </explicit>
         <explicit name="context_of_items">
            <typename name="representation_context"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <derived name="description" expression="get_description_value (SELF)">
            <typename name="text"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                             'ID_ATTRIBUTE.IDENTIFIED_ITEM'))&#10;       &lt;= 1"/>

         <where label="WR2" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;                             'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))&#10;       &lt;= 1"/>

      </entity>
      <entity name="representation_context">
         <explicit name="context_identifier">
            <typename name="identifier"/>
         </explicit>
         <explicit name="context_type">
            <typename name="text"/>
         </explicit>
         <inverse name="representations_in_context" entity="representation" attribute="context_of_items">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
         </inverse>
      </entity>
      <entity name="representation_item">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(using_representations(SELF)) &gt; 0"/>
      </entity>
      <entity name="representation_map">
         <explicit name="mapping_origin">
            <typename name="representation_item"/>
         </explicit>
         <explicit name="mapped_representation">
            <typename name="representation"/>
         </explicit>
         <inverse name="map_usage" entity="mapped_item" attribute="mapping_source">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
         </inverse>
         <where label="WR1" expression="item_in_context(SELF.mapping_origin,&#10;       SELF.mapped_representation.context_of_items)"/>
      </entity>
      <entity name="representation_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="rep_1">
            <typename name="representation"/>
         </explicit>
         <explicit name="rep_2">
            <typename name="representation"/>
         </explicit>
      </entity>
      <entity name="representation_relationship_with_transformation" supertypes="representation_relationship">
         <explicit name="transformation_operator">
            <typename name="transformation"/>
         </explicit>
         <where label="WR1" expression="SELF\representation_relationship.rep_1.context_of_items&#10;   :&lt;&gt;: SELF\representation_relationship.rep_2.context_of_items"/>
      </entity>
      <entity name="revolved_face_solid" supertypes="swept_face_solid">
         <explicit name="axis">
            <typename name="axis1_placement"/>
         </explicit>
         <explicit name="angle">
            <typename name="plane_angle_measure"/>
         </explicit>
         <derived name="axis_line" expression="representation_item('')||&#10;                    geometric_representation_item()|| curve()||&#10;                    line(axis.location, representation_item('')||&#10;                    geometric_representation_item()||&#10;                    vector(axis.z, 1.0))">
            <typename name="line"/>
         </derived>
      </entity>
      <entity name="right_angular_wedge" supertypes="geometric_representation_item">
         <explicit name="position">
            <typename name="axis2_placement_3d"/>
         </explicit>
         <explicit name="x">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="y">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="z">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="ltx">
            <typename name="length_measure"/>
         </explicit>
         <where label="WR1" expression="((0.0 &lt;= ltx) AND (ltx &lt; x))"/>
      </entity>
      <entity name="right_circular_cone" supertypes="geometric_representation_item">
         <explicit name="position">
            <typename name="axis1_placement"/>
         </explicit>
         <explicit name="height">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="radius">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="semi_angle">
            <typename name="plane_angle_measure"/>
         </explicit>
         <where label="WR1" expression="radius &gt;= 0.0"/>
      </entity>
      <entity name="right_circular_cylinder" supertypes="geometric_representation_item">
         <explicit name="position">
            <typename name="axis1_placement"/>
         </explicit>
         <explicit name="height">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="radius">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="role_association">
         <explicit name="role">
            <typename name="object_role"/>
         </explicit>
         <explicit name="item_with_role">
            <typename name="role_select"/>
         </explicit>
      </entity>
      <entity name="roundness_tolerance" supertypes="geometric_tolerance">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRIC_TOLERANCE_WITH_DATUM_REFERENCE' IN TYPEOF (SELF))"/>

      </entity>
      <entity name="runout_zone_definition" supertypes="tolerance_zone_definition">
         <explicit name="orientation">
            <typename name="runout_zone_orientation"/>
         </explicit>
      </entity>
      <entity name="runout_zone_orientation">
         <explicit name="angle">
            <typename name="measure_with_unit"/>
         </explicit>
      </entity>
      <entity name="runout_zone_orientation_reference_direction" supertypes="runout_zone_orientation">
         <explicit name="orientation_defining_relationship">
            <typename name="shape_aspect_relationship"/>
         </explicit>
      </entity>
      <entity name="seam_curve" supertypes="surface_curve">
         <where label="WR1" expression="SIZEOF(SELF\surface_curve.associated_geometry) = 2"/>
         <where label="WR2" expression="associated_surface(SELF\surface_curve.associated_geometry[1]) =&#10;           associated_surface(SELF\surface_curve.associated_geometry[2])"/>
         <where label="WR3" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN&#10;           TYPEOF(SELF\surface_curve.associated_geometry[1])"/>

         <where label="WR4" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN&#10;&#10;            TYPEOF(SELF\surface_curve.associated_geometry[2])"/>

      </entity>
      <entity name="security_classification">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="purpose">
            <typename name="text"/>
         </explicit>
         <explicit name="security_level">
            <typename name="security_classification_level"/>
         </explicit>
      </entity>
      <entity name="security_classification_assignment" abstract.supertype="YES">
         <explicit name="assigned_security_classification">
            <typename name="security_classification"/>
         </explicit>
         <derived name="role" expression="get_role (SELF)">
            <typename name="object_role"/>
         </derived>
         <where label="WR1" expression="SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1"/>

      </entity>
      <entity name="security_classification_level">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="serial_numbered_effectivity" supertypes="effectivity">
         <explicit name="effectivity_start_id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="effectivity_end_id" optional="YES">
            <typename name="identifier"/>
         </explicit>
      </entity>
      <entity name="shape_aspect">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="of_shape">
            <typename name="product_definition_shape"/>
         </explicit>
         <explicit name="product_definitional">
            <builtintype type="LOGICAL"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="shape_aspect_associativity" supertypes="shape_aspect_relationship">
         <where label="WR1" expression="SELF.relating_shape_aspect.product_definitional"/>
         <where label="WR2" expression="NOT (SELF.related_shape_aspect.product_definitional)"/>
         <where label="WR3" expression="SIZEOF (QUERY (pd &lt;* USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                 'PROPERTY_DEFINITION.DEFINITION') |&#10;          NOT (SIZEOF (QUERY (sdr &lt;* QUERY (pdr &lt;* USEDIN (pd,&#10;                          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                          'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |&#10;               ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_DEFINITION_REPRESENTATION'&#10;                   IN TYPEOF (pdr))) |&#10;            NOT (SIZEOF (QUERY (it &lt;* sdr.used_representation.items |&#10;              NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE' IN TYPEOF(it))&#10;              AND&#10;              (SIZEOF (QUERY (aco &lt;* USEDIN (it,&#10;                          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STYLED_ITEM.ITEM') |&#10;               SIZEOF (TYPEOF (aco) * &#10;                     ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_CURVE',&#10;                      'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_CURVE']) = 1)) +&#10;               SIZEOF (USEDIN (it, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                      'ANNOTATION_FILL_AREA.BOUNDARIES')) &gt;= 1)&#10;            )) = 1) &#10;          )) = 0)&#10;        )) = 0"/>

         <where label="WR4" expression="SIZEOF (QUERY (pd &lt;* USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                 'PROPERTY_DEFINITION.DEFINITION') |&#10;          NOT (SIZEOF (QUERY (sdr &lt;* QUERY (pdr &lt;* USEDIN (pd,&#10;                          'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                          'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |&#10;               ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_DEFINITION_REPRESENTATION'&#10;&#10;                   IN TYPEOF (pdr))) |&#10;            NOT (check_associative_shape_aspects(sdr))&#10;          )) = 0)&#10;        )) = 0"/>

      </entity>
      <entity name="shape_aspect_deriving_relationship" supertypes="shape_aspect_relationship">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DERIVED_SHAPE_ASPECT' IN&#10;&#10;TYPEOF&#10;            (SELF\SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT)"/>

      </entity>
      <entity name="shape_aspect_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_shape_aspect">
            <typename name="shape_aspect"/>
         </explicit>
         <explicit name="related_shape_aspect">
            <typename name="shape_aspect"/>
         </explicit>
         <derived name="id" expression="get_id_value (SELF)">
            <typename name="identifier"/>
         </derived>
         <where label="WR1" expression="SIZEOF (USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1"/>

      </entity>
      <entity name="shape_definition_representation" supertypes="property_definition_representation">
         <where label="WR1" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_DEFINITION_SHAPE' IN TYPEOF (SELF.definition)) OR ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_DEFINITION' IN TYPEOF (SELF.definition.definition))"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_REPRESENTATION' IN TYPEOF(SELF.used_representation)"/>

      </entity>
      <entity name="shape_dimension_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF (QUERY (temp &lt;* SELF\representation.items | &#10;    NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' &#10;&#10;        IN TYPEOF (temp)))) = 0"/>

         <where label="WR2" expression="SIZEOF (SELF\representation.items) &lt;= 3"/>
         <where label="WR3" expression="SIZEOF (QUERY (pos_mri &lt;* QUERY (real_mri &lt;*&#10;        SELF\representation.items | 'REAL' IN TYPEOF&#10;        (real_mri\measure_with_unit.value_component) ) |        &#10;     NOT  (pos_mri\measure_with_unit.value_component &gt; 0.0 ))) = 0"/>
      </entity>
      <entity name="shape_representation" supertypes="representation"/>
      <entity name="shape_representation_relationship" supertypes="representation_relationship">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_REPRESENTATION' IN (TYPEOF(SELF\representation_relationship.rep_1) + TYPEOF(SELF\representation_relationship.rep_2))"/>

      </entity>
      <entity name="shape_representation_with_parameters" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF( QUERY( i &lt;* SELF.items | SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLACEMENT', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM'] * TYPEOF(i)) = 1 )) = SIZEOF(SELF.items)"/>

      </entity>
      <entity name="shell_based_surface_model" supertypes="geometric_representation_item">
         <explicit name="sbsm_boundary">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="shell"/>
         </explicit>
         <where label="WR1" expression="constraints_geometry_shell_based_surface_model(SELF)"/>
      </entity>
      <entity name="shell_based_wireframe_model" supertypes="geometric_representation_item">
         <explicit name="sbwm_boundary">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="shell"/>
         </explicit>
         <where label="WR1" expression="constraints_geometry_shell_based_wireframe_model(SELF)"/>
      </entity>
      <entity name="shell_based_wireframe_shape_representation" supertypes="shape_representation">
         <where label="WR1" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| NOT ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT_3D' ] * TYPEOF (it)) = 1) )) = 0"/>

         <where label="WR2" expression="SIZEOF ( &#10;QUERY ( it &lt;* SELF.items| ( SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' ] * TYPEOF (it)) = 1) )) &gt;= 1"/>

         <where label="WR3" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( ws &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN TYPEOF (sb)) )| NOT ( SIZEOF ( &#10;QUERY ( eloop &lt;* &#10;QUERY ( wsb &lt;* ws\wire_shell.wire_shell_extent| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (wsb)) )| NOT ( SIZEOF ( &#10;QUERY ( el &lt;* eloop\path.edge_list| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_CURVE' IN TYPEOF (el.edge_element)) )) = 0) )) = 0) )) = 0) )) = 0"/>

         <where label="WR4" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( ws &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN TYPEOF (sb)) )| NOT ( SIZEOF ( &#10;QUERY ( eloop &lt;* &#10;QUERY ( wsb &lt;* ws\wire_shell.wire_shell_extent| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (wsb)) )| NOT ( SIZEOF ( &#10;QUERY ( pline_el &lt;* &#10;QUERY ( el &lt;* eloop\path.edge_list| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF (el.edge_element\edge_curve.edge_geometry)) )| NOT ( SIZEOF (pline_el.edge_element\edge_curve.edge_geometry\polyline.points) &gt; 2) )) = 0) )) = 0) )) = 0) )) = 0"/>

         <where label="WR5" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( ws &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN TYPEOF (sb)) )| NOT ( SIZEOF ( &#10;QUERY ( eloop &lt;* &#10;QUERY ( wsb &lt;* ws\wire_shell.wire_shell_extent| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (wsb)) )| NOT ( SIZEOF ( &#10;QUERY ( el &lt;* eloop\path.edge_list| NOT valid_wireframe_edge_curve(el.edge_element\edge_curve.edge_geometry) )) = 0) )) = 0) )) = 0) )) = 0"/>

         <where label="WR6" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( ws &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN TYPEOF (sb)) )| NOT ( SIZEOF ( &#10;QUERY ( eloop &lt;* &#10;QUERY ( wsb &lt;* ws\wire_shell.wire_shell_extent| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (wsb)) )| NOT ( SIZEOF ( &#10;QUERY ( el &lt;* eloop\path.edge_list| NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (el.edge_element.edge_start)) AND ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (el.edge_element.edge_end))) )) = 0) )) = 0) )) = 0) )) = 0"/>

         <where label="WR7" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( ws &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN TYPEOF (sb)) )| NOT ( SIZEOF ( &#10;QUERY ( eloop &lt;* &#10;QUERY ( wsb &lt;* ws\wire_shell.wire_shell_extent| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE_LOOP' IN TYPEOF (wsb)) )| NOT ( SIZEOF ( &#10;QUERY ( el &lt;* eloop\path.edge_list| NOT (valid_wireframe_vertex_point(el.edge_element.edge_start\vertex_point.vertex_geometry) AND valid_wireframe_vertex_point(el.edge_element.edge_end\vertex_point.vertex_geometry)) )) = 0) )) = 0) )) = 0) )) = 0"/>

         <where label="WR8" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( ws &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN TYPEOF (sb)) )| NOT ( SIZEOF ( &#10;QUERY ( vloop &lt;* &#10;QUERY ( wsb &lt;* ws\wire_shell.wire_shell_extent| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_LOOP' IN TYPEOF (wsb)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (vloop\vertex_loop.loop_vertex)) )) = 0) )) = 0) )) = 0"/>

         <where label="WR9" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( ws &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN TYPEOF (sb)) )| NOT ( SIZEOF ( &#10;QUERY ( vloop &lt;* &#10;QUERY ( wsb &lt;* ws\wire_shell.wire_shell_extent| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_LOOP' IN TYPEOF (wsb)) )| NOT valid_wireframe_vertex_point(vloop\vertex_loop.loop_vertex\vertex_point.vertex_geometry) )) = 0) )) = 0) )) = 0"/>

         <where label="WR10" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( vs &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_SHELL' IN TYPEOF (sb)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_POINT' IN TYPEOF (vs\vertex_shell.vertex_shell_extent.loop_vertex)) )) = 0) )) = 0"/>

         <where label="WR11" expression="SIZEOF ( &#10;QUERY ( sbwm &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL_BASED_WIREFRAME_MODEL' IN TYPEOF (it)) )| NOT ( SIZEOF ( &#10;QUERY ( vs &lt;* &#10;QUERY ( sb &lt;* sbwm\shell_based_wireframe_model.sbwm_boundary| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_SHELL' IN TYPEOF (sb)) )| NOT valid_wireframe_vertex_point(vs\vertex_shell.vertex_shell_extent.loop_vertex\vertex_point.vertex_geometry) )) = 0) )) = 0"/>

         <where label="WR12" expression="SIZEOF ( &#10;QUERY ( mi &lt;* &#10;QUERY ( it &lt;* SELF.items| ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (it)) )| NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'SHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION' IN TYPEOF (mi\mapped_item.mapping_source.mapped_representation)) )) = 0"/>

         <where label="WR13" expression="SELF.context_of_items\geometric_representation_context.coordinate_space_dimension = 3"/>
      </entity>
      <entity name="si_unit" supertypes="named_unit">
         <explicit name="prefix" optional="YES">
            <typename name="si_prefix"/>
         </explicit>
         <explicit name="name">
            <typename name="si_unit_name"/>
         </explicit>
         <derived name="dimensions" expression="dimensions_for_si_unit (name)">
            <typename name="dimensional_exponents"/>
            <redeclaration entity-ref="named_unit"/>
         </derived>
      </entity>
      <entity name="solid_angle_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SOLID_ANGLE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="solid_angle_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="solid_model" supertypes="geometric_representation_item" super.expression="ONEOF (csg_solid, manifold_solid_brep, swept_face_solid, solid_replica)"/>
      <entity name="solid_replica" supertypes="solid_model">
         <explicit name="parent_solid">
            <typename name="solid_model"/>
         </explicit>
         <explicit name="transformation">
            <typename name="cartesian_transformation_operator_3d"/>
         </explicit>
         <where label="WR1" expression="acyclic_solid_replica(SELF, parent_solid)"/>
         <where label="WR2" expression="parent_solid\geometric_representation_item.dim = 3"/>
      </entity>
      <entity name="specified_higher_usage_occurrence" supertypes="assembly_component_usage">
         <explicit name="upper_usage">
            <typename name="assembly_component_usage"/>
         </explicit>
         <explicit name="next_usage">
            <typename name="next_assembly_usage_occurrence"/>
         </explicit>
         <unique label="UR1">
            <unique.attribute entity-ref="specified_higher_usage_occurrence" attribute="upper_usage"/>
            <unique.attribute entity-ref="specified_higher_usage_occurrence" attribute="next_usage"/>
         </unique>
         <where label="WR1" expression="SELF :&lt;&gt;: upper_usage"/>
         <where label="WR2" expression="SELF\product_definition_relationship.relating_product_definition&#10;       :=: upper_usage.relating_product_definition"/>
         <where label="WR3" expression="SELF\product_definition_relationship.related_product_definition&#10;       :=: next_usage.related_product_definition"/>
         <where label="WR4" expression="(upper_usage.related_product_definition :=:&#10;       next_usage.relating_product_definition) OR&#10;       (SIZEOF (QUERY (pdr &lt;* USEDIN (upper_usage.related_product_definition,&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.' +&#10;       'RELATED_PRODUCT_DEFINITION') |&#10;        pdr.relating_product_definition :=: &#10;        next_usage.relating_product_definition)) = 1)"/>

         <where label="WR5" expression="SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE',&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SPECIFIED_HIGHER_USAGE_OCCURRENCE']&#10;&#10;       * TYPEOF(upper_usage)) = 1"/>

      </entity>
      <entity name="sphere" supertypes="geometric_representation_item">
         <explicit name="radius">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="centre">
            <typename name="point"/>
         </explicit>
      </entity>
      <entity name="spherical_surface" supertypes="elementary_surface">
         <explicit name="radius">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="standard_uncertainty" supertypes="uncertainty_qualifier">
         <explicit name="uncertainty_value">
            <builtintype type="REAL"/>
         </explicit>
      </entity>
      <entity name="start_request" supertypes="action_request_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="change_request_item"/>
         </explicit>
      </entity>
      <entity name="start_work" supertypes="action_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="work_item"/>
         </explicit>
      </entity>
      <entity name="straightness_tolerance" supertypes="geometric_tolerance">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRIC_TOLERANCE_WITH_DATUM_REFERENCE' IN TYPEOF (SELF))"/>

      </entity>
      <entity name="structured_dimension_callout" supertypes="draughting_callout">
         <where label="WR1" expression="SIZEOF (TYPEOF (SELF) *&#10;       ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DATUM_FEATURE_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DATUM_TARGET_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GEOMETRICAL_TOLERANCE_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LEADER_DIRECTED_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROJECTION_DIRECTED_CALLOUT',&#10;        'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIMENSION_CURVE_DIRECTED_CALLOUT']) = 0"/>

         <where label="WR2" expression="SIZEOF (QUERY (ato &lt;* QUERY (con &lt;* SELF.contents |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (con))) |&#10;         NOT (ato.name IN&#10;             ['dimension value', 'tolerance value', 'unit text',&#10;              'prefix text', 'suffix text']))) = 0"/>

         <where label="WR3" expression="SIZEOF (QUERY (ato &lt;* QUERY (con &lt;* SELF.contents |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF (con))) |&#10;         (ato.name = 'dimension value')&#10;       )) &gt;= 1"/>

         <where label="WR4" expression="SIZEOF (QUERY (dcr &lt;* USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;         'DRAUGHTING_CALLOUT_RELATIONSHIP.' +&#10;         'RELATING_DRAUGHTING_CALLOUT') |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;          'DIMENSION_CALLOUT_COMPONENT_RELATIONSHIP' IN TYPEOF (dcr)) AND &#10;         (dcr.name = 'prefix') )) &lt;= 1"/>

         <where label="WR5" expression="SIZEOF (QUERY (dcr &lt;* USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;         'DRAUGHTING_CALLOUT_RELATIONSHIP.' +&#10;         'RELATING_DRAUGHTING_CALLOUT') |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;          'DIMENSION_CALLOUT_COMPONENT_RELATIONSHIP' IN TYPEOF (dcr)) AND &#10;         (dcr.name = 'suffix') )) &lt;= 1"/>

         <where label="WR6" expression="NOT((SIZEOF (QUERY (ato &lt;* QUERY (con &lt;* SELF.contents |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF(con)) ) |&#10;         (ato.name = 'prefix text')&#10;       )) &gt; 0)) OR&#10;       (SIZEOF (QUERY (dcr &lt;* USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                               'DRAUGHTING_CALLOUT_RELATIONSHIP.' +&#10;                               'RELATING_DRAUGHTING_CALLOUT') |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;          'DIMENSION_CALLOUT_COMPONENT_RELATIONSHIP' IN TYPEOF (dcr)) AND  &#10;         (dcr.name = 'prefix') )) = 1)"/>

         <where label="WR7" expression="NOT(SIZEOF (QUERY (ato &lt;* QUERY (con &lt;* SELF.contents |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;             IN TYPEOF(con))) |&#10;         (ato.name = 'suffix text')&#10;       )) &gt; 0) OR&#10;       (SIZEOF (QUERY (dcr &lt;* USEDIN (SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;                               'DRAUGHTING_CALLOUT_RELATIONSHIP.' +&#10;                               'RELATING_DRAUGHTING_CALLOUT') |&#10;         ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;          'DIMENSION_CALLOUT_COMPONENT_RELATIONSHIP' IN TYPEOF (dcr)) AND    &#10;            (dcr.name = 'suffix') )) = 1)"/>

      </entity>
      <entity name="styled_item" supertypes="representation_item">
         <explicit name="styles">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="presentation_style_assignment"/>
         </explicit>
         <explicit name="item">
            <typename name="representation_item"/>
         </explicit>
         <where label="WR1" expression="(SIZEOF(SELF.styles) = 1)&#10;               XOR&#10;       (SIZEOF(QUERY(pres_style &lt;* SELF.styles |&#10;         NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +&#10;&#10;              'PRESENTATION_STYLE_BY_CONTEXT' IN&#10;         TYPEOF(pres_style))&#10;         )) = 0)"/>

      </entity>
      <entity name="supplied_part_relationship" supertypes="product_definition_relationship"/>
      <entity name="surface" supertypes="geometric_representation_item" super.expression="ONEOF (elementary_surface, swept_surface, bounded_surface, offset_surface, surface_replica)"/>
      <entity name="surface_curve" supertypes="curve" super.expression="ONEOF (intersection_curve, seam_curve) ANDOR bounded_surface_curve">
         <explicit name="curve_3d">
            <typename name="curve"/>
         </explicit>
         <explicit name="associated_geometry">
            <aggregate type="LIST" lower="1" upper="2"/>
            <typename name="pcurve_or_surface"/>
         </explicit>
         <explicit name="master_representation">
            <typename name="preferred_surface_curve_representation"/>
         </explicit>
         <derived name="basis_surface" expression="get_basis_surface(SELF)">
            <aggregate type="SET" lower="1" upper="2"/>
            <typename name="surface"/>
         </derived>
         <where label="WR1" expression="curve_3d.dim = 3"/>
         <where label="WR2" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF(associated_geometry[1])) OR&#10;                        (master_representation &lt;&gt; pcurve_s1)"/>

         <where label="WR3" expression="('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF(associated_geometry[2])) OR&#10;                        (master_representation &lt;&gt; pcurve_s2)"/>

         <where label="WR4" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF(curve_3d))"/>

      </entity>
      <entity name="surface_of_linear_extrusion" supertypes="swept_surface">
         <explicit name="extrusion_axis">
            <typename name="vector"/>
         </explicit>
      </entity>
      <entity name="surface_of_revolution" supertypes="swept_surface">
         <explicit name="axis_position">
            <typename name="axis1_placement"/>
         </explicit>
         <derived name="axis_line" expression="representation_item('')||&#10;                     geometric_representation_item()|| curve()||&#10;                     line(axis_position.location, representation_item('')||&#10;                     geometric_representation_item()||&#10;                     vector(axis_position.z, 1.0))">
            <typename name="line"/>
         </derived>
      </entity>
      <entity name="surface_patch" supertypes="founded_item">
         <explicit name="parent_surface">
            <typename name="bounded_surface"/>
         </explicit>
         <explicit name="u_transition">
            <typename name="transition_code"/>
         </explicit>
         <explicit name="v_transition">
            <typename name="transition_code"/>
         </explicit>
         <explicit name="u_sense">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <explicit name="v_sense">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <inverse name="using_surfaces" entity="rectangular_composite_surface" attribute="segments">
            <inverse.aggregate type="BAG" lower="1" upper="?"/>
         </inverse>
         <where label="WR1" expression="(NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_BOUNDED_SURFACE' &#10;&#10;                 IN TYPEOF(parent_surface)))"/>

      </entity>
      <entity name="surface_profile_tolerance" supertypes="geometric_tolerance">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'GEOMETRIC_TOLERANCE_WITH_DATUM_REFERENCE' IN TYPEOF (SELF)) OR ( SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 3)"/>

      </entity>
      <entity name="surface_replica" supertypes="surface">
         <explicit name="parent_surface">
            <typename name="surface"/>
         </explicit>
         <explicit name="transformation">
            <typename name="cartesian_transformation_operator_3d"/>
         </explicit>
         <where label="WR1" expression="acyclic_surface_replica(SELF, parent_surface)"/>
      </entity>
      <entity name="surface_side_style">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="styles">
            <aggregate type="SET" lower="1" upper="7"/>
            <typename name="surface_style_element_select"/>
         </explicit>
         <where label="WR1" expression="SIZEOF(QUERY( style1 &lt;* SELF.styles |&#10;         SIZEOF(QUERY( style2 &lt;* SELF.styles - style1 |&#10;           TYPEOF(style1) = TYPEOF(style2)&#10;           )) &gt; 0&#10;         )) = 0"/>
      </entity>
      <entity name="surface_style_boundary">
         <explicit name="style_of_boundary">
            <typename name="curve_or_render"/>
         </explicit>
      </entity>
      <entity name="surface_style_control_grid">
         <explicit name="style_of_control_grid">
            <typename name="curve_or_render"/>
         </explicit>
      </entity>
      <entity name="surface_style_fill_area">
         <explicit name="fill_area">
            <typename name="fill_area_style"/>
         </explicit>
      </entity>
      <entity name="surface_style_parameter_line">
         <explicit name="style_of_parameter_lines">
            <typename name="curve_or_render"/>
         </explicit>
         <explicit name="direction_counts">
            <aggregate type="SET" lower="1" upper="2"/>
            <typename name="direction_count_select"/>
         </explicit>
         <where label="WR1" expression="(HIINDEX(SELF.direction_counts) = 1)&#10;                        XOR&#10;       (TYPEOF(SELF.direction_counts[1]) &lt;&gt;&#10;          TYPEOF(SELF.direction_counts[2]))"/>
      </entity>
      <entity name="surface_style_segmentation_curve">
         <explicit name="style_of_segmentation_curve">
            <typename name="curve_or_render"/>
         </explicit>
      </entity>
      <entity name="surface_style_silhouette">
         <explicit name="style_of_silhouette">
            <typename name="curve_or_render"/>
         </explicit>
      </entity>
      <entity name="surface_style_usage">
         <explicit name="side">
            <typename name="surface_side"/>
         </explicit>
         <explicit name="style">
            <typename name="surface_side_style_select"/>
         </explicit>
      </entity>
      <entity name="swept_face_solid" supertypes="solid_model" super.expression="ONEOF (extruded_face_solid, revolved_face_solid)">
         <explicit name="swept_face">
            <typename name="face_surface"/>
         </explicit>
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLANE' IN TYPEOF(swept_face.face_geometry)"/>

      </entity>
      <entity name="swept_surface" supertypes="surface" super.expression="ONEOF (surface_of_linear_extrusion, surface_of_revolution)">
         <explicit name="swept_curve">
            <typename name="curve"/>
         </explicit>
      </entity>
      <entity name="symbol_colour">
         <explicit name="colour_of_symbol">
            <typename name="colour"/>
         </explicit>
      </entity>
      <entity name="symbol_representation" supertypes="representation"/>
      <entity name="symbol_representation_map" supertypes="representation_map">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_REPRESENTATION' IN&#10;         TYPEOF (SELF\representation_map.mapped_representation)"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT' IN&#10;&#10;         TYPEOF (SELF\representation_map.mapping_origin)"/>

      </entity>
      <entity name="symbol_representation_relationship" supertypes="representation_relationship_with_transformation">
         <where label="WR1" expression="acyclic_symbol_representation_relationship (SELF,&#10;                                                   [SELF\representation_relationship.&#10;                                                         rep_2])"/>
         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_REPRESENTATION' IN&#10;         TYPEOF (SELF\representation_relationship.rep_1)"/>

         <where label="WR3" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMBOL_REPRESENTATION'IN&#10;&#10;          TYPEOF (SELF\representation_relationship.rep_2)"/>

      </entity>
      <entity name="symbol_representation_with_blanking_box" supertypes="symbol_representation">
         <explicit name="blanking">
            <typename name="planar_box"/>
         </explicit>
         <where label="WR1" expression="item_in_context (SELF.blanking, SELF\representation.context_of_items)"/>
      </entity>
      <entity name="symbol_style">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="style_of_symbol">
            <typename name="symbol_style_select"/>
         </explicit>
      </entity>
      <entity name="symbol_target" supertypes="geometric_representation_item">
         <explicit name="placement">
            <typename name="axis2_placement"/>
         </explicit>
         <explicit name="x_scale">
            <typename name="positive_ratio_measure"/>
         </explicit>
         <explicit name="y_scale">
            <typename name="positive_ratio_measure"/>
         </explicit>
      </entity>
      <entity name="symmetric_shape_aspect" supertypes="shape_aspect">
         <inverse name="basis_relationships" entity="shape_aspect_relationship" attribute="relating_shape_aspect">
            <inverse.aggregate type="SET" lower="1" upper="?"/>
         </inverse>
         <where label="WR1" expression="SIZEOF (QUERY (x&lt;*SELF\symmetric_shape_aspect.basis_relationships |&#10;       'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CENTRE_OF_SYMMETRY' IN TYPEOF &#10;&#10;       (x\shape_aspect_relationship.related_shape_aspect)))&gt;=1"/>

      </entity>
      <entity name="symmetry_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 3"/>
      </entity>
      <entity name="table_record_field_representation" supertypes="symbol_representation">
         <where label="WR1" expression="(SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+ &#10;                            'REPRESENTATION_RELATIONSHIP.REP_2')) &gt; 0) &#10;                        OR &#10;       (SIZEOF(QUERY( map_item &lt;* USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+ &#10;                                               'REPRESENTATION_MAP.'+ &#10;                                               'MAPPED_REPRESENTATION') | &#10;         SIZEOF(QUERY( mi &lt;* USEDIN(map_item, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;                                              'MAPPED_ITEM.'+&#10;                                              'MAPPING_SOURCE') |   &#10;                                         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;&#10;                                           'TABLE_RECORD_REPRESENTATION' IN &#10;             TYPEOF (using_representations (mi)) )) &gt; 0))  &#10;                    &gt; 0)"/>

      </entity>
      <entity name="table_record_field_representation_with_clipping_box" supertypes="table_record_field_representation">
         <explicit name="clipping_box">
            <typename name="planar_box"/>
         </explicit>
         <where label="WR1" expression="item_in_context (SELF.clipping_box, &#10;                         SELF\representation.context_of_items)"/>
      </entity>
      <entity name="table_record_representation" supertypes="symbol_representation">
         <where label="WR1" expression="(SIZEOF(USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+ &#10;                            'REPRESENTATION_RELATIONSHIP.REP_2')) &gt; 0) &#10;                        OR &#10;       (SIZEOF(QUERY( map_item &lt;* USEDIN(SELF, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+ &#10;                                               'REPRESENTATION_MAP.'+ &#10;                                               'MAPPED_REPRESENTATION') | &#10;         SIZEOF(QUERY( mi &lt;* USEDIN(map_item, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;                                              'MAPPED_ITEM.'+&#10;                                              'MAPPING_SOURCE') |   &#10;                                              'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+&#10;&#10;                                              'TABLE_REPRESENTATION' IN &#10;             TYPEOF (using_representations (mi)) )) &gt; 0))  &#10;                    &gt; 0)"/>

      </entity>
      <entity name="table_representation" supertypes="symbol_representation"/>
      <entity name="table_representation_relationship" supertypes="symbol_representation_relationship">
         <where label="WR1" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TABLE_RECORD_REPRESENTATION' IN&#10;            TYPEOF (SELF\representation_relationship.rep_1))   &#10;         XOR&#10;       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TABLE_RECORD_FIELD_REPRESENTATION' IN&#10;         TYPEOF (SELF\representation_relationship.rep_2))"/>

         <where label="WR2" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TABLE_REPRESENTATION' IN&#10;             TYPEOF (SELF\representation_relationship.rep_1))   &#10;         XOR&#10;       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TABLE_RECORD_REPRESENTATION' IN&#10;         TYPEOF (SELF\representation_relationship.rep_2))"/>

         <where label="WR3" expression="NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TABLE_RECORD_FIELD_REPRESENTATION' IN&#10;            TYPEOF (SELF\representation_relationship.rep_1)) &#10;         XOR&#10;       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TABLE_RECORD_FIELD_REPRESENTATION' IN&#10;&#10;         TYPEOF (SELF\representation_relationship.rep_2))"/>

      </entity>
      <entity name="table_text_relationship" supertypes="annotation_occurrence_relationship">
         <explicit name="field">
            <typename name="table_record_field_representation"/>
         </explicit>
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TABLE_OCCURRENCE'&#10;       IN TYPEOF (SELF\annotation_occurrence_relationship.&#10;                  relating_annotation_occurrence)"/>

         <where label="WR2" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TABLE'&#10;       IN TYPEOF (SELF\annotation_occurrence_relationship.&#10;                  relating_annotation_occurrence\styled_item.item)"/>

         <where label="WR3" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_OCCURRENCE'&#10;&#10;       IN TYPEOF (SELF\annotation_occurrence_relationship.&#10;                  related_annotation_occurrence)"/>

         <where label="WR4" expression="field_in_table (SELF.field,&#10;                       SELF\annotation_occurrence_relationship.&#10;                       relating_annotation_occurrence)"/>
      </entity>
      <entity name="tangent" supertypes="derived_shape_aspect">
         <where label="WR1" expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1"/>
      </entity>
      <entity name="terminator_symbol" supertypes="annotation_symbol_occurrence">
         <explicit name="annotated_curve">
            <typename name="annotation_curve_occurrence"/>
         </explicit>
      </entity>
      <entity name="text_literal" supertypes="geometric_representation_item">
         <explicit name="literal">
            <typename name="presentable_text"/>
         </explicit>
         <explicit name="placement">
            <typename name="axis2_placement"/>
         </explicit>
         <explicit name="alignment">
            <typename name="text_alignment"/>
         </explicit>
         <explicit name="path">
            <typename name="text_path"/>
         </explicit>
         <explicit name="font">
            <typename name="font_select"/>
         </explicit>
      </entity>
      <entity name="text_literal_with_associated_curves" supertypes="text_literal">
         <explicit name="associated_curves">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="curve"/>
         </explicit>
      </entity>
      <entity name="text_literal_with_blanking_box" supertypes="text_literal">
         <explicit name="blanking">
            <typename name="planar_box"/>
         </explicit>
      </entity>
      <entity name="text_literal_with_delineation" supertypes="text_literal">
         <explicit name="delineation">
            <typename name="text_delineation"/>
         </explicit>
      </entity>
      <entity name="text_literal_with_extent" supertypes="text_literal">
         <explicit name="extent">
            <typename name="planar_extent"/>
         </explicit>
      </entity>
      <entity name="text_string_representation" supertypes="representation">
         <where label="WR1" expression="SIZEOF (&#10;         QUERY (item &lt;* SELF\representation.items |&#10;           SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL',&#10;                    'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT',&#10;                    'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_CHARACTER',&#10;                    'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEFINED_CHARACTER_GLYPH',&#10;                    'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT',&#10;                    'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT'] * TYPEOF (item)) = 0&#10;         )) = 0"/>

         <where label="WR2" expression="SIZEOF (&#10;         QUERY (item &lt;* SELF\representation.items |&#10;           NOT (SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL',&#10;                         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT',&#10;                         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT_CHARACTER',&#10;                         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEFINED_CHARACTER_GLYPH',&#10;                         'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'] *&#10;                 TYPEOF (item)) = 0)&#10;         )) &gt;= 1"/>

         <where label="WR3" expression="SIZEOF (&#10;         QUERY (a2p &lt;* &#10;           QUERY (item &lt;* SELF\representation.items | &#10;             'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AXIS2_PLACEMENT' IN TYPEOF (item)) |&#10;           NOT ((SIZEOF (&#10;             QUERY (at &lt;* &#10;               QUERY (item &lt;* SELF\representation.items | &#10;                  'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + &#10;                  'ANNOTATION_TEXT' IN TYPEOF (item)) | &#10;               (at\mapped_item.mapping_target :=: a2p))) &gt;= 1) OR&#10;           (SIZEOF (&#10;             QUERY (atc &lt;* &#10;               QUERY (item &lt;* SELF\representation.items |&#10;                 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + &#10;&#10;                 'ANNOTATION_TEXT_CHARACTER' IN TYPEOF (item)) | &#10;               (atc\mapped_item.mapping_target :=: a2p))) &gt;= 1)&#10;          ))) = 0"/>

      </entity>
      <entity name="text_style">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="character_appearance">
            <typename name="character_style_select"/>
         </explicit>
      </entity>
      <entity name="text_style_for_defined_font">
         <explicit name="text_colour">
            <typename name="colour"/>
         </explicit>
      </entity>
      <entity name="text_style_with_box_characteristics" supertypes="text_style">
         <explicit name="characteristics">
            <aggregate type="SET" lower="1" upper="4"/>
            <typename name="box_characteristic_select"/>
         </explicit>
         <where label="WR1" expression="SIZEOF( QUERY( c1 &lt;* SELF.characteristics |&#10;         SIZEOF( QUERY( c2 &lt;* SELF.characteristics - c1 |&#10;           TYPEOF (c1) = TYPEOF (c2)&#10;           )) &gt; 0&#10;       )) = 0"/>
      </entity>
      <entity name="text_style_with_mirror" supertypes="text_style">
         <explicit name="mirror_placement">
            <typename name="axis2_placement"/>
         </explicit>
      </entity>
      <entity name="text_style_with_spacing" supertypes="text_style">
         <explicit name="character_spacing">
            <typename name="character_spacing_select"/>
         </explicit>
      </entity>
      <entity name="thermodynamic_temperature_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="thermodynamic_temperature_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="time_interval">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="time_interval_assignment" abstract.supertype="YES">
         <explicit name="assigned_time_interval">
            <typename name="time_interval"/>
         </explicit>
         <explicit name="role">
            <typename name="time_interval_role"/>
         </explicit>
      </entity>
      <entity name="time_interval_based_effectivity" supertypes="effectivity">
         <explicit name="effectivity_period">
            <typename name="time_interval"/>
         </explicit>
      </entity>
      <entity name="time_interval_relationship">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <explicit name="relating_time_interval">
            <typename name="time_interval"/>
         </explicit>
         <explicit name="related_time_interval">
            <typename name="time_interval"/>
         </explicit>
      </entity>
      <entity name="time_interval_role">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="time_interval_with_bounds" supertypes="time_interval">
         <explicit name="primary_bound" optional="YES">
            <typename name="date_time_or_event_occurrence"/>
         </explicit>
         <explicit name="secondary_bound" optional="YES">
            <typename name="date_time_or_event_occurrence"/>
         </explicit>
         <explicit name="duration" optional="YES">
            <typename name="time_measure_with_unit"/>
         </explicit>
         <where label="WR1" expression="NOT (EXISTS(secondary_bound) AND EXISTS(duration))"/>
         <where label="WR2" expression="EXISTS(primary_bound) OR EXISTS(secondary_bound)"/>
      </entity>
      <entity name="time_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TIME_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="time_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 1.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)"/>
      </entity>
      <entity name="tolerance_value">
         <explicit name="lower_bound">
            <typename name="measure_with_unit"/>
         </explicit>
         <explicit name="upper_bound">
            <typename name="measure_with_unit"/>
         </explicit>
         <where label="WR1" expression="upper_bound\measure_with_unit.value_component &gt;&#10;        lower_bound\measure_with_unit.value_component"/>
         <where label="WR2" expression="upper_bound\measure_with_unit.unit_component =&#10;        lower_bound\measure_with_unit.unit_component"/>
      </entity>
      <entity name="tolerance_zone" supertypes="shape_aspect">
         <explicit name="defining_tolerance">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="geometric_tolerance"/>
         </explicit>
         <explicit name="form">
            <typename name="tolerance_zone_form"/>
         </explicit>
      </entity>
      <entity name="tolerance_zone_definition" super.expression="ONEOF (projected_zone_definition, runout_zone_definition)">
         <explicit name="zone">
            <typename name="tolerance_zone"/>
         </explicit>
         <explicit name="boundaries">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="shape_aspect"/>
         </explicit>
      </entity>
      <entity name="tolerance_zone_form">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="topological_representation_item" supertypes="representation_item" super.expression="ONEOF (vertex, edge, face_bound, face, vertex_shell, wire_shell, connected_edge_set, connected_face_set, (loop ANDOR path))"/>
      <entity name="toroidal_surface" supertypes="elementary_surface">
         <explicit name="major_radius">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="minor_radius">
            <typename name="positive_length_measure"/>
         </explicit>
      </entity>
      <entity name="torus" supertypes="geometric_representation_item">
         <explicit name="position">
            <typename name="axis1_placement"/>
         </explicit>
         <explicit name="major_radius">
            <typename name="positive_length_measure"/>
         </explicit>
         <explicit name="minor_radius">
            <typename name="positive_length_measure"/>
         </explicit>
         <where label="WR1" expression="major_radius &gt; minor_radius"/>
      </entity>
      <entity name="total_runout_tolerance" supertypes="geometric_tolerance_with_datum_reference">
         <where label="WR1" expression="SIZEOF (SELF\geometric_tolerance_with_datum_reference.datum_system) &lt;= 2"/>
      </entity>
      <entity name="trimmed_curve" supertypes="bounded_curve">
         <explicit name="basis_curve">
            <typename name="curve"/>
         </explicit>
         <explicit name="trim_1">
            <aggregate type="SET" lower="1" upper="2"/>
            <typename name="trimming_select"/>
         </explicit>
         <explicit name="trim_2">
            <aggregate type="SET" lower="1" upper="2"/>
            <typename name="trimming_select"/>
         </explicit>
         <explicit name="sense_agreement">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <explicit name="master_representation">
            <typename name="trimming_preference"/>
         </explicit>
         <where label="WR1" expression="(HIINDEX(trim_1) = 1) OR (TYPEOF(trim_1[1]) &lt;&gt; TYPEOF(trim_1[2]))"/>
         <where label="WR2" expression="(HIINDEX(trim_2) = 1) OR (TYPEOF(trim_2[1]) &lt;&gt; TYPEOF(trim_2[2]))"/>
      </entity>
      <entity name="two_direction_repeat_factor" supertypes="one_direction_repeat_factor">
         <explicit name="second_repeat_factor">
            <typename name="vector"/>
         </explicit>
      </entity>
      <entity name="type_qualifier">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
      </entity>
      <entity name="uncertainty_assigned_representation" supertypes="representation">
         <explicit name="uncertainty">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="uncertainty_measure_with_unit"/>
         </explicit>
      </entity>
      <entity name="uncertainty_measure_with_unit" supertypes="measure_with_unit">
         <explicit name="name">
            <typename name="label"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
         <where label="WR1" expression="valid_measure_value (SELF\measure_with_unit.value_component)"/>
      </entity>
      <entity name="uncertainty_qualifier">
         <explicit name="measure_name">
            <typename name="label"/>
         </explicit>
         <explicit name="description">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="uniform_curve" supertypes="b_spline_curve"/>
      <entity name="uniform_surface" supertypes="b_spline_surface"/>
      <entity name="user_defined_curve_font" supertypes="curve_style_font mapped_item"/>
      <entity name="user_defined_marker" supertypes="mapped_item pre_defined_marker"/>
      <entity name="user_defined_terminator_symbol" supertypes="mapped_item pre_defined_symbol"/>
      <entity name="value_range" supertypes="compound_representation_item">
         <where label="WR1" expression="( 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+ 'SET_REPRESENTATION_ITEM' IN TYPEOF ( item_element ) ) AND value_range_wr1 ( item_element )"/>

         <where label="WR2" expression="value_range_wr2 ( item_element )"/>
         <where label="WR3" expression="value_range_wr3 ( item_element )"/>
      </entity>
      <entity name="value_representation_item" supertypes="representation_item">
         <explicit name="value_component">
            <typename name="measure_value"/>
         </explicit>
         <where label="WR1" expression="SIZEOF (QUERY (rep &lt;* using_representations (SELF) |&#10;       NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.GLOBAL_UNIT_ASSIGNED_CONTEXT'&#10;&#10;       IN TYPEOF (rep.context_of_items)&#10;       ))) = 0"/>

      </entity>
      <entity name="vector" supertypes="geometric_representation_item">
         <explicit name="orientation">
            <typename name="direction"/>
         </explicit>
         <explicit name="magnitude">
            <typename name="length_measure"/>
         </explicit>
         <where label="WR1" expression="magnitude &gt;= 0.0"/>
      </entity>
      <entity name="vector_style" supertypes="curve_style pre_defined_terminator_symbol"/>
      <entity name="versioned_action_request">
         <explicit name="id">
            <typename name="identifier"/>
         </explicit>
         <explicit name="version">
            <typename name="label"/>
         </explicit>
         <explicit name="purpose">
            <typename name="text"/>
         </explicit>
         <explicit name="description" optional="YES">
            <typename name="text"/>
         </explicit>
      </entity>
      <entity name="vertex" supertypes="topological_representation_item"/>
      <entity name="vertex_loop" supertypes="loop">
         <explicit name="loop_vertex">
            <typename name="vertex"/>
         </explicit>
      </entity>
      <entity name="vertex_point" supertypes="vertex geometric_representation_item">
         <explicit name="vertex_geometry">
            <typename name="point"/>
         </explicit>
      </entity>
      <entity name="vertex_shell" supertypes="topological_representation_item">
         <explicit name="vertex_shell_extent">
            <typename name="vertex_loop"/>
         </explicit>
      </entity>
      <entity name="view_volume" supertypes="founded_item">
         <explicit name="projection_type">
            <typename name="central_or_parallel"/>
         </explicit>
         <explicit name="projection_point">
            <typename name="cartesian_point"/>
         </explicit>
         <explicit name="view_plane_distance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="front_plane_distance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="front_plane_clipping">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <explicit name="back_plane_distance">
            <typename name="length_measure"/>
         </explicit>
         <explicit name="back_plane_clipping">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <explicit name="view_volume_sides_clipping">
            <builtintype type="BOOLEAN"/>
         </explicit>
         <explicit name="view_window">
            <typename name="planar_box"/>
         </explicit>
      </entity>
      <entity name="volume_measure_with_unit" supertypes="measure_with_unit">
         <where label="WR1" expression="'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VOLUME_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)"/>

      </entity>
      <entity name="volume_unit" supertypes="named_unit">
         <where label="WR1" expression="(SELF\named_unit.dimensions.length_exponent = 3.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)"/>
      </entity>
      <entity name="week_of_year_and_day_date" supertypes="date">
         <explicit name="week_component">
            <typename name="week_in_year_number"/>
         </explicit>
         <explicit name="day_component" optional="YES">
            <typename name="day_in_week_number"/>
         </explicit>
      </entity>
      <entity name="wire_shell" supertypes="topological_representation_item">
         <explicit name="wire_shell_extent">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="loop"/>
         </explicit>
         <where label="WR1" expression="NOT mixed_loop_type_set(wire_shell_extent)"/>
      </entity>
      <rule name="compatible_dimension" appliesto="cartesian_point direction representation_context geometric_representation_context">
         <where label="WR1" expression="SIZEOF(QUERY(x &lt;* cartesian_point| SIZEOF(QUERY&#10;       (y &lt;* geometric_representation_context | item_in_context(x,y) AND&#10;       (HIINDEX(x.coordinates) &lt;&gt; y.coordinate_space_dimension))) &gt; 0 )) =0"/>
         <where label="WR2" expression="SIZEOF(QUERY(x &lt;* direction | SIZEOF( QUERY&#10;       (y &lt;* geometric_representation_context | item_in_context(x,y) AND&#10;       (HIINDEX(x.direction_ratios) &lt;&gt; y.coordinate_space_dimension)))&#10;       &gt; 0 )) = 0"/>
      </rule>
      <rule name="consistent_uncertainty" appliesto="global_uncertainty_assigned_context qualified_representation_item uncertainty_assigned_representation">
         <where label="WR1" expression="SIZEOF ( QUERY ( guac &lt;* global_uncertainty_assigned_context | &#10;    SIZEOF ( QUERY ( u1 &lt;* guac.uncertainty | &#10;	SIZEOF ( QUERY ( u2 &lt;* guac.uncertainty | u2.name =  u1.name ) ) &gt;1 ) ) &gt;0 ) ) =  0"/>
         <where label="WR2" expression="SIZEOF ( QUERY ( uar &lt;* uncertainty_assigned_representation | &#10;	SIZEOF ( QUERY ( u1&lt;* uar.uncertainty | &#10;	SIZEOF ( QUERY ( u2 &lt;* uar.uncertainty | u2.name =  u1.name ) ) &gt;1 ) ) &gt;0 ) ) =  0"/>
         <where label="WR3" expression="SIZEOF ( QUERY ( qri &lt;* qualified_representation_item |&#10;     SIZEOF ( QUERY ( u1 &lt;* qri.qualifiers |&#10;     ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF' + '.UNCERTAINTY_QUALIFIER' IN TYPEOF ( u1 ) ) AND &#10;	( SIZEOF ( QUERY ( u2 &lt;* qri.qualifiers |&#10;     ( 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF' + '.UNCERTAINTY_QUALIFIER' IN TYPEOF ( u2 ) ) AND &#10;&#10;	( u2\uncertainty_qualifier.measure_name =  u1\uncertainty_qualifier.measure_name ) )&#10;     ) &gt;1 ) ) ) &gt;0 ) ) =  0"/>

      </rule>
      <rule name="restrict_language_assignment_per_attribute" appliesto="attribute_language_assignment">
         <where label="WR1" expression="SIZEOF ( QUERY ( ala1 &lt;* attribute_language_assignment |&#10;	SIZEOF(QUERY( it &lt;* ala1.items |&#10;	   SIZEOF ( QUERY ( ala2 &lt;* USEDIN ( it ,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS' ) | &#10;&#10;		( ala1\attribute_classification_assignment.attribute_name = ala2\attribute_classification_assignment.attribute_name ) AND &#10;		( ala1\attribute_classification_assignment.assigned_class :=: ala2\attribute_classification_assignment.assigned_class )&#10;		 )) &gt;1 &#10;	   )) &gt;0 &#10;	)) =0"/>

      </rule>
      <rule name="styled_curve" appliesto="styled_item">
         <where label="WR1" expression="SIZEOF( QUERY( si &lt;* styled_item | ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE' IN TYPEOF (si.item)) AND (SIZEOF (QUERY (psa &lt;* si.styles | (SIZEOF (QUERY (cs &lt;* psa.styles | ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_STYLE' IN TYPEOF (cs)) )) &gt; 0) )) &lt;&gt; 1) )) = 0"/>

      </rule>
      <rule name="subtype_exclusiveness_geometric_tolerance" appliesto="geometric_tolerance">
         <where label="WR1" expression="SIZEOF(QUERY (gt &lt;* geometric_tolerance | NOT (type_check_function(gt, ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANGULARITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CIRCULAR_RUNOUT_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COAXIALITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONCENTRICITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CYLINDRICITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FLATNESS_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE_PROFILE_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PARALLELISM_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PERPENDICULARITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POSITION_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ROUNDNESS_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STRAIGHTNESS_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_PROFILE_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMMETRY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TOTAL_RUNOUT_TOLERANCE'] , 3)))) = 0"/>

      </rule>
      <rule name="subtype_exclusiveness_representation_item" appliesto="representation_item">
         <where label="WR1" expression="SIZEOF(QUERY (cri &lt;* representation_item | NOT (type_check_function(cri,['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM','AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VALUE_REPRESENTATION_ITEM','AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOUND_REPRESENTATION_ITEM'] , 3)))) = 0"/>

      </rule>
      <rule name="subtype_mandatory_geometric_tolerance" appliesto="geometric_tolerance">
         <where label="WR1" expression="SIZEOF(QUERY (gt &lt;* geometric_tolerance | NOT (type_check_function(gt, ['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANGULARITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CIRCULAR_RUNOUT_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COAXIALITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONCENTRICITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CYLINDRICITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FLATNESS_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE_PROFILE_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PARALLELISM_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PERPENDICULARITY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POSITION_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ROUNDNESS_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.STRAIGHTNESS_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_PROFILE_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SYMMETRY_TOLERANCE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TOTAL_RUNOUT_TOLERANCE'] , 0)))) = 0"/>

      </rule>
      <rule name="text_font_usage" appliesto="externally_defined_text_font pre_defined_text_font">
         <where label="WR1" expression="SIZEOF (QUERY (pdtf &lt;* pre_defined_text_font | SIZEOF (USEDIN (pdtf, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL.FONT')) = 0 )) = 0"/>

         <where label="WR2" expression="SIZEOF (QUERY (edtf &lt;* externally_defined_text_font | SIZEOF (USEDIN (edtf, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TEXT_LITERAL.FONT')) = 0 )) = 0"/>

      </rule>
      <rule name="validate_dependently_instantiable_entity_data_types" appliesto="application_context_element area_in_set attribute_value_role bounded_curve bounded_surface camera_image camera_model_d3 cartesian_transformation_operator classification_role connected_edge_set contract_type document_type document_usage_constraint event_occurrence_role local_time loop one_direction_repeat_factor oriented_face oriented_open_shell oriented_path planar_box pre_defined_item presentation_set product_definition_context_role product_definition_effectivity runout_zone_orientation solid_model swept_face_solid tolerance_zone_form two_direction_repeat_factor vertex view_volume">
         <algorithm>LOCAL
  number_of_input_instances : INTEGER;
  previous_in_chain : LIST OF GENERIC := [];
  set_of_input_types : SET OF STRING := [];
  all_instances : SET OF GENERIC := [];
END_LOCAL;

  all_instances := application_context_element + area_in_set + attribute_value_role + bounded_curve + bounded_surface + camera_image + camera_model_d3 + cartesian_transformation_operator + classification_role + connected_edge_set + contract_type + document_type + document_usage_constraint + event_occurrence_role + local_time + loop + one_direction_repeat_factor + oriented_face + oriented_open_shell + oriented_path + planar_box + pre_defined_item + presentation_set + product_definition_context_role + product_definition_effectivity + runout_zone_orientation + solid_model + swept_face_solid + tolerance_zone_form + two_direction_repeat_factor + vertex + view_volume;--&lt;make a union of all implicit populations of the FOR-clause&gt;
number_of_input_instances := SIZEOF(all_instances);
(* Collect all type strings of all FOR instances into one set. *)
REPEAT i:=1 TO number_of_input_instances;
  set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
END_REPEAT;</algorithm>
         <where label="WR1" expression="dependently_instantiated(all_instances, set_of_input_types,&#10;                                previous_in_chain)"/>
      </rule>
      <function name="acyclic_composite_text">
         <parameter name="start_composite">
            <typename name="composite_text"/>
         </parameter>
         <parameter name="child_text">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="text_or_character"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
   i : INTEGER;
   local_composite_text : SET [0:?] OF composite_text;
   local_annotation_text : SET [0:?] OF annotation_text;
   local_children : SET [0:?] OF text_or_character;
  END_LOCAL;

  local_composite_text := QUERY (child &lt;* child_text |
                          ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'

                           IN TYPEOF (child)));

  IF (SIZEOF (local_composite_text) &gt; 0) THEN
    REPEAT i := 1 TO HIINDEX (local_composite_text);
      IF (start_composite :=: local_composite_text[i]) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;

  local_children := child_text;

  IF (SIZEOF (local_composite_text)) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX (local_composite_text);
      local_children := local_children +
                        local_composite_text[i].collected_text;
    END_REPEAT;
  END_IF;


  local_annotation_text := QUERY (child &lt;* child_text |
                          ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT'

                           IN TYPEOF (child)));

  IF (SIZEOF (local_annotation_text) &gt; 0) THEN
    REPEAT i := 1 TO HIINDEX (local_annotation_text);
      local_children := local_children +
      QUERY (item &lt;* local_annotation_text[i]\mapped_item.
                     mapping_source.mapped_representation.items |
        SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ANNOTATION_TEXT',

                'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_TEXT'] *


                TYPEOF(item)) &gt; 0);
    END_REPEAT;
  END_IF;

  IF (local_children :&lt;&gt;: child_text) THEN
    RETURN (acyclic_composite_text (start_composite, local_children));
  ELSE
    RETURN (TRUE);
  END_IF;</algorithm>
      </function>
      <function name="acyclic_curve_replica">
         <parameter name="rep">
            <typename name="curve_replica"/>
         </parameter>
         <parameter name="parent">
            <typename name="curve"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA') IN TYPEOF(parent)) THEN


      RETURN (TRUE);
   END_IF;
 (* Return TRUE if the parent is not of type curve_replica *)
   IF (parent :=: rep) THEN
      RETURN (FALSE);
  (* Return FALSE if the parent is the same curve_replica, otherwise,
   call function again with the parents own parent_curve.     *)
    ELSE
    RETURN(acyclic_curve_replica(rep,
               parent\curve_replica.parent_curve));
    END_IF;</algorithm>
      </function>
      <function name="acyclic_mapped_item_usage">
         <parameter name="rep">
            <typename name="representation"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    items : SET OF representation_item;
  END_LOCAL;

  items := QUERY (item &lt;* rep.items |
           'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN TYPEOF (item));


  IF SIZEOF (items) = 0
  THEN 
    RETURN (FALSE);
  ELSE 
    REPEAT i := 1 TO HIINDEX (items);
      IF items[i]\mapped_item.mapping_source.mapped_representation :=: rep
      THEN 
        RETURN (TRUE);
      ELSE 
        RETURN (acyclic_mapped_item_usage(items[i]\
                  mapped_item.mapping_source.mapped_representation));
      END_IF;
    END_REPEAT;
  RETURN (FALSE);
  END_IF;</algorithm>
      </function>
      <function name="acyclic_mapped_representation">
         <parameter name="parent_set">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="representation"/>
         </parameter>
         <parameter name="children_set">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="representation_item"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    x,y : SET OF representation_item;
  END_LOCAL;
  -- Determine the subset of children_set that are mapped_items
  x := QUERY(z &lt;* children_set | 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM'

       IN TYPEOF(z));
  -- Determine that the subset has elements
  IF SIZEOF(x) &gt; 0 THEN
    -- Check each element of the set
    REPEAT i := 1 TO HIINDEX(x);
      -- If the selected element maps a representation in the
      -- parent_set, then return false
      IF x[i]\mapped_item.mapping_source.mapped_representation
        IN parent_set THEN
        RETURN (FALSE);
      END_IF;
      -- Recursive check of the items of mapped_representation
      IF NOT acyclic_mapped_representation
        (parent_set +
        x[i]\mapped_item.mapping_source.mapped_representation,
        x[i]\mapped_item.mapping_source.mapped_representation.items) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  -- Determine the subset of children_set that are not
  -- mapped_items
  x := children_set - x;
  -- Determine that the subset has elements
  IF SIZEOF(x) &gt; 0 THEN
    -- For each element of the set:
    REPEAT i := 1 TO HIINDEX(x);
      -- Determine the set of representation_items referenced
      y := QUERY(z &lt;* bag_to_set( USEDIN(x[i], '')) |
           'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z));


      -- Recursively check for an offending mapped_item
      -- Return false for any errors encountered
      IF NOT acyclic_mapped_representation(parent_set, y) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  -- Return true when all elements are checked and
  -- no error conditions found
  RETURN (TRUE);</algorithm>
      </function>
      <function name="acyclic_point_replica">
         <parameter name="rep">
            <typename name="point_replica"/>
         </parameter>
         <parameter name="parent">
            <typename name="point"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_REPLICA') IN TYPEOF(parent)) THEN


      RETURN (TRUE);
   END_IF;
 (* Return TRUE if the parent is not of type point_replica *)
   IF (parent :=: rep) THEN
      RETURN (FALSE);
  (* Return FALSE if the parent is the same point_replica, otherwise,
   call function again with the parents own parent_pt.     *)
    ELSE RETURN(acyclic_point_replica(rep, parent\point_replica.parent_pt));
    END_IF;</algorithm>
      </function>
      <function name="acyclic_product_category_relationship">
         <parameter name="relation">
            <typename name="product_category_relationship"/>
         </parameter>
         <parameter name="children">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="product_category"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
      x : SET OF product_category_relationship;
      local_children : SET OF product_category;
    END_LOCAL;

    REPEAT i := 1 TO HIINDEX(children);
      IF relation.category :=: children[i] THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    x := bag_to_set(USEDIN(relation.category, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY'));


    local_children := children + relation.category;
    IF SIZEOF(x) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(x);
        IF NOT acyclic_product_category_relationship(x[i], local_children) THEN
          RETURN (FALSE);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN (TRUE);</algorithm>
      </function>
      <function name="acyclic_product_definition_relationship">
         <parameter name="relation">
            <typename name="product_definition_relationship"/>
         </parameter>
         <parameter name="relatives">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="product_definition"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
      x : SET OF product_definition_relationship;
    END_LOCAL;

    IF relation.relating_product_definition IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.relating_product_definition, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'PRODUCT_DEFINITION_RELATIONSHIP.' + 'RELATED_PRODUCT_DEFINITION')) | specific_relation IN TYPEOF(pd));


    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_product_definition_relationship(x[i], relatives + relation.relating_product_definition, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
RETURN (TRUE);</algorithm>
      </function>
      <function name="acyclic_solid_replica">
         <parameter name="rep">
            <typename name="solid_replica"/>
         </parameter>
         <parameter name="parent">
            <typename name="solid_model"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SOLID_REPLICA') IN TYPEOF(parent)) THEN


      RETURN (TRUE);
   END_IF;
 (* Return TRUE if the parent is not of type solid_replica. *)
   IF (parent :=: rep) THEN
      RETURN (FALSE);
  (* Return FALSE if the parent is the same solid_replica, otherwise,
   call function again with the parents own parent_solid.     *)
    ELSE RETURN(acyclic_solid_replica(rep,
                      parent\solid_replica.parent_solid));
    END_IF;</algorithm>
      </function>
      <function name="acyclic_surface_replica">
         <parameter name="rep">
            <typename name="surface_replica"/>
         </parameter>
         <parameter name="parent">
            <typename name="surface"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_REPLICA') IN TYPEOF(parent)) THEN


      RETURN (TRUE);
   END_IF;
 (* Return TRUE if the parent is not of type surface_replica *)
   IF (parent :=: rep) THEN
      RETURN (FALSE);
  (* Return FALSE if the parent is the same surface_replica, otherwise,
   call function again with the parents own parent_surface.     *)
    ELSE RETURN(acyclic_surface_replica(rep,
                   parent\surface_replica.parent_surface));
    END_IF;</algorithm>
      </function>
      <function name="acyclic_symbol_representation_relationship">
         <parameter name="relation">
            <typename name="symbol_representation_relationship"/>
         </parameter>
         <parameter name="children">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="symbol_representation"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    x : SET OF symbol_representation_relationship;
    local_children : SET OF symbol_representation;
  END_LOCAL;
 
  REPEAT i:=1 TO HIINDEX(children);
    IF relation\representation_relationship.rep_1 :=: children[i] THEN
      RETURN(FALSE);
    END_IF;
  END_REPEAT;
 
  x := bag_to_set (USEDIN ( relation\representation_relationship.rep_1,
                'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+


                'REPRESENTATION_RELATIONSHIP.'+ 'REP_2'));
  local_children := children + relation\representation_relationship.rep_1;
 
  IF SIZEOF (x) &gt; 0 THEN
    REPEAT i:=1 TO HIINDEX (x);
      IF NOT acyclic_symbol_representation_relationship(x[i] , 
                                                local_children) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
 
  RETURN (TRUE);</algorithm>
      </function>
      <function name="aspect_ratio">
         <parameter name="p">
            <typename name="planar_box"/>
         </parameter>
         <typename name="positive_ratio_measure"/>
         <algorithm>IF (p.size_in_x &gt; 0.) AND (p.size_in_y &gt; 0.) THEN
      RETURN (p.size_in_x / p.size_in_y);
   ELSE
      RETURN (?);
   END_IF;</algorithm>
      </function>
      <function name="associated_surface">
         <parameter name="arg">
            <typename name="pcurve_or_surface"/>
         </parameter>
         <typename name="surface"/>
         <algorithm>LOCAL
     surf : surface;
   END_LOCAL;
   
   IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF(arg) THEN


     surf := arg.basis_surface;
   ELSE
     surf := arg;
   END_IF;
   RETURN(surf);</algorithm>
      </function>
      <function name="bag_to_set">
         <parameter name="the_bag">
            <aggregate type="BAG" lower="0" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <builtintype type="GENERIC"/>
         <algorithm>LOCAL
      the_set : SET OF GENERIC:intype := [];
    END_LOCAL;

    IF SIZEOF(the_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN (the_set);</algorithm>
      </function>
      <function name="base_axis">
         <parameter name="dim">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="axis1">
            <typename name="direction"/>
         </parameter>
         <parameter name="axis2">
            <typename name="direction"/>
         </parameter>
         <parameter name="axis3">
            <typename name="direction"/>
         </parameter>
         <aggregate type="LIST" lower="2" upper="3"/>
         <typename name="direction"/>
         <algorithm>LOCAL
    u      : LIST [2:3] OF direction;
    factor : REAL;
    d1, d2 : direction;
  END_LOCAL;
  
  IF (dim = 3) THEN
    d1 := NVL(normalise(axis3),  dummy_gri || direction([0.0,0.0,1.0]));
    d2 := first_proj_axis(d1,axis1);
    u := [d2, second_proj_axis(d1,d2,axis2), d1];
  ELSE
     IF EXISTS(axis1) THEN
      d1 := normalise(axis1);
      u := [d1, orthogonal_complement(d1)];
      IF EXISTS(axis2) THEN
        factor := dot_product(axis2,u[2]);
        IF (factor &lt; 0.0) THEN
          u[2].direction_ratios[1] := -u[2].direction_ratios[1];
          u[2].direction_ratios[2] := -u[2].direction_ratios[2];
        END_IF;
      END_IF;
    ELSE
      IF EXISTS(axis2) THEN
        d1 := normalise(axis2);
        u := [orthogonal_complement(d1), d1]; 
        u[1].direction_ratios[1] := -u[1].direction_ratios[1];
        u[1].direction_ratios[2] := -u[1].direction_ratios[2];
      ELSE
        u := [dummy_gri || direction([1.0, 0.0]), dummy_gri ||
                                                direction([0.0, 1.0])];
      END_IF;
    END_IF;
  END_IF;
  RETURN(u);</algorithm>
      </function>
      <function name="boolean_choose">
         <parameter name="b">
            <builtintype type="BOOLEAN"/>
         </parameter>
         <parameter name="choice1">
            <builtintype type="GENERIC" typelabel="item"/>
         </parameter>
         <parameter name="choice2">
            <builtintype type="GENERIC" typelabel="item"/>
         </parameter>
         <builtintype type="GENERIC" typelabel="item"/>
         <algorithm>IF b THEN
       RETURN (choice1);
     ELSE
       RETURN (choice2);
     END_IF;</algorithm>
      </function>
      <function name="build_2axes">
         <parameter name="ref_direction">
            <typename name="direction"/>
         </parameter>
         <aggregate type="LIST" lower="2" upper="2"/>
         <typename name="direction"/>
         <algorithm>LOCAL
     d : direction := NVL(normalise(ref_direction),
                          dummy_gri || direction([1.0,0.0]));
   END_LOCAL;

   RETURN([d, orthogonal_complement(d)]);</algorithm>
      </function>
      <function name="build_axes">
         <parameter name="axis">
            <typename name="direction"/>
         </parameter>
         <parameter name="ref_direction">
            <typename name="direction"/>
         </parameter>
         <aggregate type="LIST" lower="3" upper="3"/>
         <typename name="direction"/>
         <algorithm>LOCAL
     d1, d2 : direction;
   END_LOCAL;
  d1 := NVL(normalise(axis), dummy_gri || direction([0.0,0.0,1.0]));
  d2 := first_proj_axis(d1, ref_direction);
  RETURN([d2, normalise(cross_product(d1,d2)).orientation, d1]);</algorithm>
      </function>
      <function name="cc_design_person_and_organization_correlation">
         <parameter name="e">
            <typename name="cc_design_person_and_organization_assignment"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    po_role : STRING;
  END_LOCAL;
    po_role := e\person_and_organization_assignment.role.name;
  CASE po_role OF
    'request_recipient'      : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 SIZEOF(['CONFIG_CONTROL_DESIGN.' +
                                 'CHANGE_REQUEST',
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'START_REQUEST'] *
                                 TYPEOF (x)) = 1))
                                 THEN RETURN(FALSE);
                               END_IF;
    'initiator'              : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 SIZEOF(['CONFIG_CONTROL_DESIGN.' +
                                 'CHANGE_REQUEST',
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'START_REQUEST',
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'START_WORK',
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'CHANGE'] *
                                 TYPEOF (x)) = 1))
                                 THEN RETURN(FALSE);
                               END_IF;
    'creator'                : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 SIZEOF (['CONFIG_CONTROL_DESIGN.' +
                                 'PRODUCT_DEFINITION_FORMATION',
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'PRODUCT_DEFINITION'] *
                                 TYPEOF (x)) = 1))
                                 THEN RETURN (FALSE);
                               END_IF;
    'part_supplier'          : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'PRODUCT_DEFINITION_FORMATION'
                                 IN TYPEOF (x)))
                                 THEN RETURN(FALSE);
                               END_IF;
    'design_supplier'        : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'PRODUCT_DEFINITION_FORMATION'
                                 IN TYPEOF (x)))
                                 THEN RETURN(FALSE);
                               END_IF;
    'design_owner'           : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 'CONFIG_CONTROL_DESIGN.PRODUCT'
                                 IN TYPEOF (x)))
                                 THEN RETURN(FALSE);
                               END_IF;
    'configuration_manager'  : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'CONFIGURATION_ITEM'
                                 IN TYPEOF (x)))
                                 THEN RETURN(FALSE);
                               END_IF;
    'contractor'             : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 'CONFIG_CONTROL_DESIGN.CONTRACT'
                                 IN TYPEOF (x)))
                                 THEN RETURN(FALSE);
                               END_IF;
    'classification_officer' : IF SIZEOF (e.items) &lt;&gt;
                                 SIZEOF (QUERY (x &lt;* e.items |
                                 'CONFIG_CONTROL_DESIGN.' +
                                 'SECURITY_CLASSIFICATION'
                                 IN TYPEOF (x))) THEN
                                 RETURN(FALSE);
                               END_IF;
    OTHERWISE : RETURN(TRUE);
  END_CASE;
  RETURN (TRUE);</algorithm>
      </function>
      <function name="check_associative_shape_aspects">
         <parameter name="sdr">
            <typename name="shape_definition_representation"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    sr1, sr2 : SET OF representation;
    dm, pv   : SET OF representation;
  END_LOCAL;

  -- Check if the representation contains only two items
  IF (SIZEOF (sdr.used_representation.items) &lt;&gt; 2) THEN
     RETURN (FALSE);
  END_IF;

  -- Find the representations that use each item
  sr1 := using_representations(sdr.used_representation.items[1]);
  sr2 := using_representations(sdr.used_representation.items[2]);

  -- Find the representations in which item 1 representations are mapped
  REPEAT i := 1 TO HIINDEX(sr1);
    dm := representations_mapped_into(sr1[i]);
    REPEAT j := 1 TO HIINDEX(dm);
      IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_MODEL' IN TYPEOF(dm[j]))

      THEN
        IF (dm[j] IN sr2) THEN RETURN (TRUE);
        END_IF;
        -- Find the views that the draughting model is mapped into
        pv := representations_mapped_into(dm[j]);
        REPEAT k := 1 TO HIINDEX(pv);
          IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRESENTATION_VIEW' IN TYPEOF(pv[k]))

          THEN
            IF (pv[k] IN sr2) THEN RETURN (TRUE);
            END_IF;
          END_IF;
        END_REPEAT;
      END_IF;
    END_REPEAT;
  END_REPEAT;

  -- Find the representations in which item 2 representations are mapped
  REPEAT i := 1 TO HIINDEX(sr2);
    dm := representations_mapped_into(sr2[i]);
    REPEAT j := 1 TO HIINDEX(dm);
      IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DRAUGHTING_MODEL' IN TYPEOF(dm[j]))

      THEN
        IF (dm[j] IN sr1) THEN RETURN (TRUE);
        END_IF;
        -- Find the views that the draughting model is mapped into
        pv := representations_mapped_into(dm[j]);
        REPEAT k := 1 TO HIINDEX(pv);
          IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PRESENTATION_VIEW' IN TYPEOF(pv[k]))


          THEN
            IF (pv[k] IN sr1) THEN RETURN (TRUE);
            END_IF;
          END_IF;
        END_REPEAT;
      END_IF;
    END_REPEAT;
  END_REPEAT;
  RETURN(FALSE);</algorithm>
      </function>
      <function name="check_text_alignment">
         <parameter name="ct">
            <typename name="composite_text"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    a : SET OF text_alignment := [];
  END_LOCAL;

  -- create a set of all the alignments
  REPEAT i := 1 TO HIINDEX (ct.collected_text);
    a := a + [ct.collected_text[i]\text_literal.alignment];
  END_REPEAT;

  -- if there is more than one element in the set
  -- then not all alignments were the same
  RETURN (SIZEOF(a) = 1);</algorithm>
      </function>
      <function name="check_text_font">
         <parameter name="ct">
            <typename name="composite_text"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    f : SET OF font_select := [];
  END_LOCAL;

  -- build a set of all the fonts
  REPEAT i := 1 TO HIINDEX (ct.collected_text);
    f := f + [ct.collected_text[i]\text_literal.font];
  END_REPEAT;

  -- if there is more than one element in the set
  -- then not all fonts were the same
  RETURN (SIZEOF(f) &lt;= 1);</algorithm>
      </function>
      <function name="closed_shell_reversed">
         <parameter name="a_shell">
            <typename name="closed_shell"/>
         </parameter>
         <typename name="oriented_closed_shell"/>
         <algorithm>LOCAL
    the_reverse : oriented_closed_shell;
  END_LOCAL;
   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_CLOSED_SHELL' IN TYPEOF (a_shell) ) THEN


      the_reverse := dummy_tri ||
                    connected_face_set (
                       a_shell\connected_face_set.cfs_faces) ||
                    closed_shell () || oriented_closed_shell(
                     a_shell\oriented_closed_shell.closed_shell_element,
                       NOT(a_shell\oriented_closed_shell.orientation));
   ELSE
      the_reverse := dummy_tri ||
               connected_face_set (
                 a_shell\connected_face_set.cfs_faces) ||
               closed_shell () || oriented_closed_shell (a_shell, FALSE);
   END_IF;
   RETURN (the_reverse);</algorithm>
      </function>
      <function name="conditional_reverse">
         <parameter name="p">
            <builtintype type="BOOLEAN"/>
         </parameter>
         <parameter name="an_item">
            <typename name="reversible_topology"/>
         </parameter>
         <typename name="reversible_topology"/>
         <algorithm>IF p THEN
     RETURN (an_item);
   ELSE
     RETURN (topology_reversed (an_item));
   END_IF;</algorithm>
      </function>
      <function name="constraints_composite_curve_on_surface">
         <parameter name="c">
            <typename name="composite_curve_on_surface"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
     n_segments : INTEGER := SIZEOF(c.segments);
   END_LOCAL;
        
   REPEAT k := 1 TO n_segments;
     IF (NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN 

           TYPEOF(c\composite_curve.segments[k].parent_curve))) AND
        (NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_CURVE' IN 

           TYPEOF(c\composite_curve.segments[k].parent_curve))) AND
        (NOT('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_CURVE_ON_SURFACE' IN


           TYPEOF(c\composite_curve.segments[k].parent_curve)))  THEN
       RETURN (FALSE);
     END_IF;
   END_REPEAT;
   RETURN(TRUE);</algorithm>
      </function>
      <function name="constraints_geometry_shell_based_surface_model">
         <parameter name="m">
            <typename name="shell_based_surface_model"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
     result : BOOLEAN := TRUE;
   END_LOCAL;
   
   REPEAT j := 1 TO SIZEOF(m.sbsm_boundary);
     IF (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OPEN_SHELL' IN

                     TYPEOF(m.sbsm_boundary[j])) AND
        (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CLOSED_SHELL' IN


           TYPEOF(m.sbsm_boundary[j]))))
     THEN
       result := FALSE;
       RETURN(result);
       (* A surface model is composed of OPEN_ and CLOSED_SHELLs. *)
     END_IF;
   END_REPEAT;
   RETURN(result);</algorithm>
      </function>
      <function name="constraints_geometry_shell_based_wireframe_model">
         <parameter name="m">
            <typename name="shell_based_wireframe_model"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
     result : BOOLEAN := TRUE;
   END_LOCAL;

   REPEAT j := 1 TO SIZEOF(m.sbwm_boundary);
     IF (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.WIRE_SHELL' IN

                    TYPEOF(m.sbwm_boundary[j])) AND
        (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VERTEX_SHELL' IN


                      TYPEOF(m.sbwm_boundary[j]))))
     THEN
       result := FALSE;
       RETURN(result);
       (* A wireframe model is composed of WIRE_ and VERTEX_SHELLs *)
     END_IF;
   END_REPEAT;
   RETURN(result);</algorithm>
      </function>
      <function name="constraints_param_b_spline">
         <parameter name="degree">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="up_knots">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="up_cp">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="knot_mult">
            <aggregate type="LIST" lower="0" upper="?"/>
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="knots">
            <aggregate type="LIST" lower="0" upper="?"/>
            <typename name="parameter_value"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
     result  : BOOLEAN := TRUE;
     k, sum  : INTEGER;
   END_LOCAL;
   
   (* Find sum of knot multiplicities. *)
   sum := knot_mult[1];
   
   REPEAT i := 2 TO up_knots;
     sum := sum + knot_mult[i];
   END_REPEAT;
   
   (* Check limits holding for all B-spline parametrisations *)
   IF (degree &lt; 1) OR (up_knots &lt; 2) OR (up_cp &lt; degree) OR
         (sum &lt;&gt; (degree + up_cp + 2)) THEN
     result := FALSE;
     RETURN(result);
   END_IF;
   
   k := knot_mult[1];
   
   IF (k &lt; 1) OR (k &gt; degree + 1) THEN
     result := FALSE;
     RETURN(result);
   END_IF;
      
   REPEAT i := 2 TO up_knots;
     IF (knot_mult[i] &lt; 1) OR (knots[i] &lt;= knots[i-1]) THEN
       result := FALSE;
       RETURN(result);
     END_IF;
        
     k := knot_mult[i];
     
     IF (i &lt; up_knots) AND (k &gt; degree) THEN
       result := FALSE;
       RETURN(result);
     END_IF;
        
     IF (i = up_knots) AND (k &gt; degree + 1) THEN
       result := FALSE;
       RETURN(result);
     END_IF;
   END_REPEAT;
   RETURN(result);</algorithm>
      </function>
      <function name="constraints_rectangular_composite_surface">
         <parameter name="s">
            <typename name="rectangular_composite_surface"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>REPEAT i := 1 TO s.n_u;
       REPEAT j := 1 TO s.n_v;
         IF NOT (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_SURFACE' IN TYPEOF

                    (s.segments[i][j].parent_surface)) OR
                 ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RECTANGULAR_TRIMMED_SURFACE' IN TYPEOF


                    (s.segments[i][j].parent_surface))) THEN
           RETURN(FALSE);
       END_IF;
     END_REPEAT;
   END_REPEAT;

   (* Check the transition codes, omitting the last row or column *)
   REPEAT i := 1 TO s.n_u-1;
     REPEAT j := 1 TO s.n_v;
       IF s.segments[i][j].u_transition = discontinuous THEN
         RETURN(FALSE);
       END_IF;
     END_REPEAT;
   END_REPEAT;
   
   REPEAT i := 1 TO s.n_u;
     REPEAT j := 1 TO s.n_v-1;
       IF s.segments[i][j].v_transition = discontinuous THEN
         RETURN(FALSE);
       END_IF;
     END_REPEAT;
   END_REPEAT;
   RETURN(TRUE);</algorithm>
      </function>
      <function name="cross_product">
         <parameter name="arg1">
            <typename name="direction"/>
         </parameter>
         <parameter name="arg2">
            <typename name="direction"/>
         </parameter>
         <typename name="vector"/>
         <algorithm>LOCAL
    mag    : REAL;
    res    : direction;
    v1,v2  : LIST[3:3] OF REAL;
    result : vector;
  END_LOCAL;
  
  IF ( NOT EXISTS (arg1) OR (arg1.dim = 2)) OR
     ( NOT EXISTS (arg2) OR (arg2.dim = 2)) THEN
    RETURN(?);
  ELSE
    BEGIN
      v1  := normalise(arg1).direction_ratios;
      v2  := normalise(arg2).direction_ratios;
      res := dummy_gri || direction([(v1[2]*v2[3] - v1[3]*v2[2]),
            (v1[3]*v2[1] - v1[1]*v2[3]), (v1[1]*v2[2] - v1[2]*v2[1])]);
      mag := 0.0;
      REPEAT i := 1 TO 3;
        mag := mag + res.direction_ratios[i]*res.direction_ratios[i];
      END_REPEAT;
      IF (mag &gt; 0.0) THEN
        result := dummy_gri || vector(res, SQRT(mag));
      ELSE
        result := dummy_gri || vector(arg1, 0.0);
      END_IF;
      RETURN(result);
    END;
  END_IF;</algorithm>
      </function>
      <function name="curve_weights_positive">
         <parameter name="b">
            <typename name="rational_b_spline_curve"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
     result : BOOLEAN := TRUE;
   END_LOCAL;

   REPEAT i := 0 TO b.upper_index_on_control_points;
     IF b.weights[i] &lt;= 0.0  THEN
       result := FALSE;
       RETURN(result);
     END_IF;
   END_REPEAT;
   RETURN(result);</algorithm>
      </function>
      <function name="default_tolerance_table_cell_wr2">
         <parameter name="agg">
            <typename name="compound_item_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>BEGIN 
IF SIZEOF(agg) &lt;= 5 THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END;</algorithm>
      </function>
      <function name="default_tolerance_table_cell_wr3">
         <parameter name="agg">
            <typename name="compound_item_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>BEGIN 
IF (SIZEOF(QUERY ( i &lt;* agg | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) 

  AND (i\representation_item.name = 'significant number of digits')) )) = 1) OR 
((SIZEOF(QUERY ( i &lt;* agg | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 

  (i\representation_item.name = 'lower limit')) )) = 1) AND 
(SIZEOF( QUERY ( i &lt;* agg | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 


  (i\representation_item.name = 'upper limit')) )) = 1)) THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END;</algorithm>
      </function>
      <function name="default_tolerance_table_cell_wr4">
         <parameter name="agg">
            <typename name="compound_item_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>BEGIN 
IF (SIZEOF(QUERY ( i &lt;* agg | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 

  (i\representation_item.name = 'plus minus tolerance value')) )) = 1) OR 
((SIZEOF(QUERY ( i &lt;* agg | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND (

  i\representation_item.name = 'lower tolerance value')) )) = 1) AND 
(SIZEOF( QUERY ( i &lt;* agg | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND (


  i\representation_item.name = 'upper tolerance value')) )) = 1)) THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END;</algorithm>
      </function>
      <function name="default_tolerance_table_cell_wr5">
         <parameter name="agg">
            <typename name="compound_item_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>BEGIN 
IF (SIZEOF(QUERY ( i &lt;* agg | ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(i)) )) &lt;= 1) AND 

(SIZEOF(QUERY ( i &lt;* agg | ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(i)) )) = 

  SIZEOF(QUERY ( i &lt;* agg | (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND 


  (i\representation_item.name = 'cell description'))) )) 
THEN 
  RETURN(TRUE); 
ELSE 
  RETURN(FALSE); 
END_IF; 
END;</algorithm>
      </function>
      <function name="dependently_instantiated">
         <parameter name="set_of_input_instances">
            <aggregate type="SET" lower="0" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <parameter name="set_of_input_types">
            <aggregate type="SET" lower="0" upper="?"/>
            <builtintype type="STRING"/>
         </parameter>
         <parameter name="previous_in_chain">
            <aggregate type="LIST" lower="0" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
  number_of_input_instances     : INTEGER;
  number_of_referring_instances : INTEGER;
  bag_of_referring_instances    : BAG OF GENERIC:igen := [];
  dependently_instantiated_flag : BOOLEAN;
  previous_in_chain_plus        : LIST OF GENERIC:cgen := [];
  result                        : BOOLEAN := true;
  set_of_types                  : SET OF STRING := [];
END_LOCAL;

IF EXISTS(set_of_input_instances) THEN
  number_of_input_instances := SIZEOF(set_of_input_instances);
  (* Add the declared type of bag_of_referring_instances to the set of
     types of the REFERENCEd instances for the subset comparison later.
   *)
  set_of_input_types := set_of_input_types + 'GENERIC';
  REPEAT i:=1 TO number_of_input_instances;
    (* Determine all references to the current input instance. *)
    bag_of_referring_instances := USEDIN (set_of_input_instances[i] , '');
    IF EXISTS(bag_of_referring_instances) THEN
      number_of_referring_instances := SIZEOF(bag_of_referring_instances);
      dependently_instantiated_flag := false;
      REPEAT j:=1 TO number_of_referring_instances;
        (* Determine the type strings of the current referencing instance.
         *)
        set_of_types := TYPEOF(bag_of_referring_instances[j]);
        (* If the referencing instance is of one of the types of the
           only dependently instantiable select items, the current input
           instance may still be invalidly instantiated.
           Otherwise it is OK, and the next input instance is tested.
         *)
        IF set_of_types &lt;= set_of_input_types THEN -- subset operator
          (* The referring instance is of one of the restricted types.
             However, it may itself be referred to by a valid instance;
             then also the current instance would be valid.
             Thus, call this function recursively with the referring
             instance as input.
             To avoid an infinite loop in case a set of instances
             reference each other in a closed loop, test first whether
             the current referencing instance is in the list of
             previously processed chain members.
           *)
          IF NOT (bag_of_referring_instances[j] IN previous_in_chain) THEN
            previous_in_chain_plus := previous_in_chain +
            set_of_input_instances[i];
            IF dependently_instantiated([bag_of_referring_instances[j]],
              set_of_input_types,
              previous_in_chain_plus) THEN
              dependently_instantiated_flag := true;
              ESCAPE; -- dependently instantiated; next input instance
            ELSE
              (* Not dependently instantiated: go to next referring
              instance. *)
              SKIP;
            END_IF;
          END_IF;
        ELSE
          dependently_instantiated_flag := true;
          ESCAPE; -- dependently instantiated; take next input instance
        END_IF;
      END_REPEAT;
      IF NOT dependently_instantiated_flag THEN
        RETURN(false);
      END_IF;
    ELSE
      RETURN(false); -- not referenced at all =&gt; invalidly instantiated
    END_IF;
  END_REPEAT;
ELSE
  RETURN(false); -- no input
END_IF;

RETURN(true);</algorithm>
      </function>
      <function name="derive_dimensional_exponents">
         <parameter name="x">
            <typename name="unit"/>
         </parameter>
         <typename name="dimensional_exponents"/>
         <algorithm>LOCAL
    result : dimensional_exponents := dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
  END_LOCAL;

  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DERIVED_UNIT' IN TYPEOF(x) THEN


    REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
      result.length_exponent := result.length_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.length_exponent);
      result.mass_exponent := result.mass_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.mass_exponent);
      result.time_exponent := result.time_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.time_exponent);
      result.electric_current_exponent := result.electric_current_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.electric_current_exponent);
      result.thermodynamic_temperature_exponent := result.thermodynamic_temperature_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.thermodynamic_temperature_exponent);
      result.amount_of_substance_exponent := result.amount_of_substance_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.amount_of_substance_exponent);
      result.luminous_intensity_exponent := result.luminous_intensity_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.luminous_intensity_exponent);
    END_REPEAT;
  ELSE
    result := x.dimensions;
  END_IF;
  RETURN (result);</algorithm>
      </function>
      <function name="dimension_of">
         <parameter name="item">
            <typename name="geometric_representation_item"/>
         </parameter>
         <typename name="dimension_count"/>
         <algorithm>LOCAL
    x   : SET OF representation;
    y   : representation_context;
    dim : dimension_count;
  END_LOCAL;
  -- For cartesian_point, direction, or vector dimension is determined by
  -- counting components.
    IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF(item) THEN

       dim := SIZEOF(item\cartesian_point.coordinates);
       RETURN(dim);
    END_IF;
    IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DIRECTION' IN TYPEOF(item) THEN

       dim := SIZEOF(item\direction.direction_ratios);
       RETURN(dim);
    END_IF;
    IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VECTOR' IN TYPEOF(item) THEN


       dim := SIZEOF(item\vector.orientation\direction.direction_ratios);
       RETURN(dim);
    END_IF;
  -- For all other types of geometric_representation_item dim is obtained
  -- via context.
  -- Find the set of representation in which the item is used. 

  x := using_representations(item);

  -- Determines the dimension_count of the 
  -- geometric_representation_context. Note that the 
  -- RULE compatible_dimension ensures that the context_of_items
  -- is of type geometric_representation_context and has
  -- the same dimension_count for all values of x.
  -- The SET x is non-empty since this is required by WR1 of
  -- representation_item.
    y := x[1].context_of_items;
    dim := y\geometric_representation_context.coordinate_space_dimension;
    RETURN (dim);</algorithm>
      </function>
      <function name="dimensions_for_si_unit">
         <parameter name="n">
            <typename name="si_unit_name"/>
         </parameter>
         <typename name="dimensional_exponents"/>
         <algorithm>CASE n OF
    metre          : RETURN (dimensional_exponents
                          (1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    gram           : RETURN (dimensional_exponents
                         (0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    second         : RETURN (dimensional_exponents
                         (0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0));
    ampere         : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0));
    kelvin         : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
    mole           : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));
    candela        : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
    radian         : RETURN (dimensional_exponents
                           (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    steradian      : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
    hertz          : RETURN (dimensional_exponents
                         (0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
    newton         : RETURN (dimensional_exponents
                         (1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    pascal         : RETURN (dimensional_exponents
                         (-1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    joule          : RETURN (dimensional_exponents
                         (2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    watt           : RETURN (dimensional_exponents
                         (2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0));
    coulomb        : RETURN (dimensional_exponents
                         (0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0));
    volt           : RETURN (dimensional_exponents
                         (2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0));
    farad          : RETURN (dimensional_exponents
                         (-2.0, -1.0, 4.0, 1.0, 0.0, 0.0, 0.0));
    ohm            : RETURN (dimensional_exponents
                         (2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0));
    siemens        : RETURN (dimensional_exponents
                         (-2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0));
    weber          : RETURN (dimensional_exponents
                         (2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
    tesla          : RETURN (dimensional_exponents
                         (0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
    henry          : RETURN (dimensional_exponents
                         (2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0));
    degree_Celsius : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
    lumen          : RETURN (dimensional_exponents
                         (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
    lux            : RETURN (dimensional_exponents
                         (-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
    becquerel      : RETURN (dimensional_exponents
                         (0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
    gray           : RETURN (dimensional_exponents
                         (2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    sievert        : RETURN (dimensional_exponents
                         (2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
    OTHERWISE      : RETURN (?);
  END_CASE;</algorithm>
      </function>
      <function name="dot_product">
         <parameter name="arg1">
            <typename name="direction"/>
         </parameter>
         <parameter name="arg2">
            <typename name="direction"/>
         </parameter>
         <builtintype type="REAL"/>
         <algorithm>LOCAL
     scalar : REAL;
     vec1, vec2: direction;
     ndim : INTEGER;
   END_LOCAL;
   
   IF NOT EXISTS (arg1) OR NOT EXISTS (arg2) THEN
     scalar := ?;
     (* When function is called with invalid data an indeterminate result
     is returned *)
   ELSE
     IF (arg1.dim &lt;&gt; arg2.dim) THEN
       scalar := ?;
     (* When function is called with invalid data an indeterminate result
     is returned *)
     ELSE
       BEGIN
         vec1   := normalise(arg1);
         vec2   := normalise(arg2);
         ndim   := arg1.dim;
         scalar := 0.0;
         REPEAT  i := 1 TO ndim;
           scalar := scalar +
                       vec1.direction_ratios[i]*vec2.direction_ratios[i];
         END_REPEAT;
       END;
     END_IF;
   END_IF;
   RETURN (scalar);</algorithm>
      </function>
      <function name="edge_reversed">
         <parameter name="an_edge">
            <typename name="edge"/>
         </parameter>
         <typename name="oriented_edge"/>
         <algorithm>LOCAL
     the_reverse : oriented_edge;
   END_LOCAL;

   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_EDGE' IN TYPEOF (an_edge) ) THEN


     the_reverse  := dummy_tri ||
             edge(an_edge.edge_end, an_edge.edge_start) ||
             oriented_edge(an_edge\oriented_edge.edge_element,
                        NOT (an_edge\oriented_edge.orientation)) ;
   ELSE
     the_reverse := dummy_tri ||
             edge(an_edge.edge_end, an_edge.edge_start) ||
             oriented_edge(an_edge, FALSE);
   END_IF;
   RETURN (the_reverse);</algorithm>
      </function>
      <function name="face_bound_reversed">
         <parameter name="a_face_bound">
            <typename name="face_bound"/>
         </parameter>
         <typename name="face_bound"/>
         <algorithm>LOCAL
     the_reverse : face_bound ;
   END_LOCAL;
   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE_OUTER_BOUND' IN TYPEOF (a_face_bound) ) THEN


     the_reverse := dummy_tri ||
                      face_bound(a_face_bound\face_bound.bound,
                           NOT (a_face_bound\face_bound.orientation))
                            || face_outer_bound() ;
   ELSE
     the_reverse := dummy_tri ||
         face_bound(a_face_bound.bound, NOT(a_face_bound.orientation));
   END_IF;
  RETURN (the_reverse);</algorithm>
      </function>
      <function name="face_reversed">
         <parameter name="a_face">
            <typename name="face"/>
         </parameter>
         <typename name="oriented_face"/>
         <algorithm>LOCAL
     the_reverse : oriented_face ;
   END_LOCAL;
   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_FACE' IN TYPEOF (a_face) ) THEN


     the_reverse := dummy_tri ||
       face(set_of_topology_reversed(a_face.bounds)) ||
          oriented_face(a_face\oriented_face.face_element,
                           NOT (a_face\oriented_face.orientation)) ;
   ELSE
     the_reverse := dummy_tri ||
       face(set_of_topology_reversed(a_face.bounds)) ||
                               oriented_face(a_face, FALSE) ;
   END_IF;
      RETURN (the_reverse);</algorithm>
      </function>
      <function name="field_in_table">
         <parameter name="field">
            <typename name="table_record_field_representation"/>
         </parameter>
         <parameter name="table">
            <typename name="annotation_table_occurrence"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    table_rep : table_representation;
    symbol_rep_rel_set : SET OF symbol_representation_relationship;
    mapped_item_set : SET OF mapped_item;
    table_record_rep_set : SET OF table_record_representation := [];
  END_LOCAL;
 
  table_rep := table\styled_item.item\mapped_item.mapping_source.
    mapped_representation;
  mapped_item_set := QUERY(item &lt;* table_rep.items |
                       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN

                        TYPEOF(item))
                                 AND
                       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+

                        'TABLE_RECORD_REPRESENTATION' IN
                         TYPEOF(item\mapped_item.mapping_source.
                                    mapped_representation ))
                     );
 
  REPEAT i := 1 TO HIINDEX(mapped_item_set);
    table_record_rep_set := table_record_rep_set +
           mapped_item_set[i].mapping_source.mapped_representation;
  END_REPEAT;
 
  symbol_rep_rel_set := bag_to_set (USEDIN(table_rep, 
                               'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+

                               'REPRESENTATION_RELATIONSHIP.REP_1'));
 
  REPEAT i := 1 TO HIINDEX(symbol_rep_rel_set);
     table_record_rep_set := table_record_rep_set +
              symbol_rep_rel_set[i]\representation_relationship.rep_2;
  END_REPEAT;
 
  IF SIZEOF(QUERY( table_record_rep &lt;* table_record_rep_set |
--              (SIZEOF(QUERY( symbol_rep_rel &lt;* USEDIN(table_record_rep,
--                            'PRESENTATION_DEFINITION_SCHEMA.'+
--                            'SYMBOL_REPRESENTATION_RELATIONSHIP.REP_1') |
--                       symbol_rep_rel\representation_relationship.rep_2 :=: field
              (SIZEOF(QUERY( rep_rel &lt;* USEDIN(table_record_rep,
                            'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.'+

                            'REPRESENTATION_RELATIONSHIP.REP_1') |
                       ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +

                       'SYMBOL_REPRESENTATION_RELATIONSHIP' IN TYPEOF(rep_rel)) AND  
                       (rep_rel.rep_2 :=: field)
                       )) &gt; 0)
                       OR
              (SIZEOF(QUERY(item &lt;* table_record_rep.items |
                        ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MAPPED_ITEM' IN


                         TYPEOF(item))
                                 AND
                        (field :=: item\mapped_item.mapping_source.
                                    mapped_representation )
                         )) &gt; 0)
             )) = 0 THEN
    RETURN(FALSE);
  END_IF;
 
  RETURN(TRUE);</algorithm>
      </function>
      <function name="first_proj_axis">
         <parameter name="z_axis">
            <typename name="direction"/>
         </parameter>
         <parameter name="arg">
            <typename name="direction"/>
         </parameter>
         <typename name="direction"/>
         <algorithm>LOCAL
    x_axis : direction;
    v      : direction;
    z      : direction;
    x_vec  : vector;
  END_LOCAL;
  
  IF (NOT EXISTS(z_axis)) THEN
    RETURN (?) ;
  ELSE
    z := normalise(z_axis);
    IF NOT EXISTS(arg) THEN
      IF ((z.direction_ratios &lt;&gt; [1.0,0.0,0.0]) AND
          (z.direction_ratios &lt;&gt; [-1.0,0.0,0.0]))  THEN
        v :=  dummy_gri || direction([1.0,0.0,0.0]);
      ELSE
        v := dummy_gri || direction([0.0,1.0,0.0]);
      END_IF;
    ELSE
      IF  (arg.dim &lt;&gt; 3) THEN
        RETURN (?) ;
      END_IF;
      IF ((cross_product(arg,z).magnitude) = 0.0) THEN
        RETURN (?);
      ELSE
        v := normalise(arg);
      END_IF;
    END_IF;
    x_vec := scalar_times_vector(dot_product(v, z), z);
    x_axis := vector_difference(v, x_vec).orientation;
    x_axis := normalise(x_axis);
  END_IF;
  RETURN(x_axis);</algorithm>
      </function>
      <function name="gbsf_check_curve">
         <parameter name="cv">
            <typename name="representation_item"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BOUNDED_CURVE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_CURVE_3D'] * TYPEOF(cv)) &gt; 1 THEN

    RETURN (FALSE);
  END_IF;
  IF SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CIRCLE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ELLIPSE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TRIMMED_CURVE'] * TYPEOF(cv)) = 1 THEN

    RETURN (TRUE);
  ELSE
    IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE' IN TYPEOF(cv)) AND (cv\b_spline_curve.self_intersect = FALSE) OR (cv\b_spline_curve.self_intersect = UNKNOWN)) THEN

      RETURN (TRUE);
    ELSE
      IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_CURVE' IN TYPEOF(cv)) AND (cv\composite_curve.self_intersect = FALSE) OR (cv\composite_curve.self_intersect = UNKNOWN)) THEN

        RETURN (SIZEOF(QUERY(seg &lt;* cv\composite_curve.segments | NOT (gbsf_check_curve(seg.parent_curve)))) = 0);
      ELSE
        IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA' IN TYPEOF(cv) THEN

          RETURN (gbsf_check_curve(cv\curve_replica.parent_curve));
        ELSE
          IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_CURVE_3D' IN TYPEOF(cv)) AND ((cv\offset_curve_3d.self_intersect = FALSE) OR (cv\offset_curve_3d.self_intersect = UNKNOWN)) AND (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF(cv\offset_curve_3d.basis_curve)))) THEN

            RETURN (gbsf_check_curve(cv\offset_curve_3d.basis_curve));
          ELSE
            IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF(cv) THEN

              RETURN ((gbsf_check_curve(cv\pcurve.reference_to_curve\representation.items[1])) AND (gbsf_check_surface(cv\pcurve.basis_surface)));
            ELSE
              IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF(cv) THEN

                IF (SIZEOF(cv\polyline.points) &gt;= 3) THEN
                  RETURN (TRUE);
                END_IF;
              ELSE
                IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_CURVE' IN TYPEOF(cv) THEN

                  IF gbsf_check_curve(cv\surface_curve.curve_3d) THEN
                    REPEAT i := 1 TO SIZEOF(cv\surface_curve.associated_geometry);
                      IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE' IN TYPEOF(cv\surface_curve.associated_geometry[i]) THEN

                        IF NOT gbsf_check_surface(cv\surface_curve.associated_geometry[i]) THEN
                          RETURN (FALSE);
                        END_IF;
                      ELSE
                        IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF(cv\surface_curve.associated_geometry[i]) THEN


                          IF NOT gbsf_check_curve(cv\surface_curve.associated_geometry[i]) THEN
                            RETURN (FALSE);
                          END_IF;
                        END_IF;
                      END_IF;
                    END_REPEAT;
                    RETURN (TRUE);
                  END_IF;
                END_IF;
              END_IF;
            END_IF;
          END_IF;
        END_IF;
      END_IF;
    END_IF;
  END_IF;
  RETURN (FALSE);</algorithm>
      </function>
      <function name="gbsf_check_point">
         <parameter name="pnt">
            <typename name="point"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF(pnt) THEN

    RETURN (TRUE);
  ELSE
    IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_CURVE' IN TYPEOF(pnt) THEN

      RETURN (gbsf_check_curve(pnt\point_on_curve.basis_curve));
    ELSE
      IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_SURFACE' IN TYPEOF(pnt) THEN

        RETURN (gbsf_check_surface(pnt\point_on_surface.basis_surface));
      ELSE
        IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.DEGENERATE_PCURVE' IN TYPEOF(pnt) THEN


          RETURN ((gbsf_check_curve(pnt\degenerate_pcurve.reference_to_curve\representation.items[1])) AND (gbsf_check_surface(pnt\degenerate_pcurve.basis_surface)));
        END_IF;
      END_IF;
    END_IF;
  END_IF;
  RETURN (FALSE);</algorithm>
      </function>
      <function name="gbsf_check_surface">
         <parameter name="sf">
            <typename name="surface"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_SURFACE' IN TYPEOF(sf)) AND (sf\b_spline_surface.self_intersect = FALSE) OR (sf\b_spline_surface.self_intersect = UNKNOWN)) THEN

    RETURN (TRUE);
  ELSE
    IF SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SPHERICAL_SURFACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TOROIDAL_SURFACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_BOUNDED_SURFACE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RECTANGULAR_TRIMMED_SURFACE'] * TYPEOF(sf)) = 1 THEN

      RETURN (TRUE);
    ELSE
      IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_SURFACE' IN TYPEOF(sf)) AND (sf\offset_surface.self_intersect = FALSE) OR (sf\offset_surface.self_intersect = UNKNOWN)) THEN

        RETURN (gbsf_check_surface(sf\offset_surface.basis_surface));
      ELSE
        IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RECTANGULAR_COMPOSITE_SURFACE' IN TYPEOF(sf) THEN

          REPEAT i := 1 TO SIZEOF(sf\rectangular_composite_surface.segments);
            REPEAT j := 1 TO SIZEOF(sf\rectangular_composite_surface.segments[i]);
              IF NOT (gbsf_check_surface(sf\rectangular_composite_surface.segments[i][j].parent_surface)) THEN
                RETURN (FALSE);
              END_IF;
            END_REPEAT;
          END_REPEAT;
          RETURN (TRUE);
        ELSE
          IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_REPLICA' IN TYPEOF(sf) THEN

            RETURN (gbsf_check_surface(sf\surface_replica.parent_surface));
          ELSE
            IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_OF_REVOLUTION' IN TYPEOF(sf) THEN


              RETURN (gbsf_check_curve(sf\swept_surface.swept_curve));
            END_IF;
          END_IF;
        END_IF;
      END_IF;
    END_IF;
  END_IF;
  RETURN (FALSE);</algorithm>
      </function>
      <function name="get_basis_surface">
         <parameter name="c">
            <typename name="curve_on_surface"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="2"/>
         <typename name="surface"/>
         <algorithm>LOCAL
    surfs  : SET[0:2] OF surface;
    n      : INTEGER;
  END_LOCAL;
  surfs := [];
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF (c) THEN

    surfs := [c\pcurve.basis_surface];
  ELSE
    IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_CURVE' IN TYPEOF (c) THEN

      n := SIZEOF(c\surface_curve.associated_geometry);
      REPEAT i := 1 TO n;
      surfs := surfs +
                associated_surface(c\surface_curve.associated_geometry[i]);
      END_REPEAT;
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_CURVE_ON_SURFACE' IN TYPEOF (c) THEN


   (* For a composite_curve_on_surface the basis_surface is the intersection
    of the basis_surfaces of all the segments. *)
     n := SIZEOF(c\composite_curve.segments);
     surfs := get_basis_surface(
                     c\composite_curve.segments[1].parent_curve);
     IF n &gt; 1 THEN
       REPEAT i := 2 TO n;
         surfs := surfs * get_basis_surface(
                  c\composite_curve.segments[i].parent_curve);
       END_REPEAT;
     END_IF;

  END_IF;
  RETURN(surfs);</algorithm>
      </function>
      <function name="get_description_value">
         <parameter name="obj">
            <typename name="description_attribute_select"/>
         </parameter>
         <typename name="text"/>
         <algorithm>LOCAL
    description_bag : BAG OF description_attribute := (USEDIN(obj, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.' + 'DESCRIBED_ITEM'));


  END_LOCAL;

  IF SIZEOF(description_bag) = 1 THEN
    RETURN (description_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;</algorithm>
      </function>
      <function name="get_id_value">
         <parameter name="obj">
            <typename name="id_attribute_select"/>
         </parameter>
         <typename name="identifier"/>
         <algorithm>LOCAL
      id_bag : BAG OF id_attribute := (USEDIN(obj, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ID_ATTRIBUTE.' + 'IDENTIFIED_ITEM'));


END_LOCAL;
IF SIZEOF(id_bag) = 1 THEN
      RETURN (id_bag[1].attribute_value);
ELSE
      RETURN (?);
END_IF;</algorithm>
      </function>
      <function name="get_name_value">
         <parameter name="obj">
            <typename name="name_attribute_select"/>
         </parameter>
         <typename name="label"/>
         <algorithm>LOCAL
    name_bag : BAG OF name_attribute := (USEDIN(obj, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'NAME_ATTRIBUTE.' + 'NAMED_ITEM'));


  END_LOCAL;

  IF SIZEOF(name_bag) = 1 THEN
    RETURN (name_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;</algorithm>
      </function>
      <function name="get_role">
         <parameter name="obj">
            <typename name="role_select"/>
         </parameter>
         <typename name="object_role"/>
         <algorithm>LOCAL
    role_bag : BAG OF role_association := (USEDIN(obj, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'ROLE_ASSOCIATION.' + 'ITEM_WITH_ROLE'));


  END_LOCAL;

  IF SIZEOF(role_bag) = 1 THEN
    RETURN (role_bag[1].role);
  ELSE
    RETURN (?);
  END_IF;</algorithm>
      </function>
      <function name="get_shape_aspect_property_definition_representations">
         <parameter name="s_a_instance">
            <typename name="shape_aspect"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <typename name="property_definition_representation"/>
         <algorithm>LOCAL
pd_set : SET OF property_definition := [];
pdr_set : SET OF property_definition_representation := [] ;
END_LOCAL;
pd_set := bag_to_set(USEDIN(s_a_instance, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PROPERTY_DEFINITION.DEFINITION'));

IF (SIZEOF(pd_set) &lt; 1) THEN
RETURN (pdr_set);
END_IF;
REPEAT i := 1 TO HIINDEX(pd_set);
pdr_set := pdr_set + (QUERY(pdr &lt;* USEDIN(pd_set[i], 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' + 'PROPERTY_DEFINITION_REPRESENTATION.' + 'DEFINITION') |

'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_DEFINITION_REPRESENTATION' IN TYPEOF(pdr)));


END_REPEAT;
RETURN (pdr_set);</algorithm>
      </function>
      <function name="item_in_context">
         <parameter name="item">
            <typename name="representation_item"/>
         </parameter>
         <parameter name="cntxt">
            <typename name="representation_context"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    y : BAG OF representation_item;
  END_LOCAL;
  -- If there is one or more representation using both the item
  -- and cntxt return true.
  IF SIZEOF(USEDIN(item,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REPRESENTATION.ITEMS')

    * cntxt.representations_in_context) &gt; 0 THEN
    RETURN (TRUE);
    -- Determine the bag of representation_items that reference
    -- item
    ELSE y := QUERY(z &lt;* USEDIN (item , '') |
           'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z));


      -- Ensure that the bag is not empty
      IF SIZEOF(y) &gt; 0 THEN
      -- For each element in the bag
      REPEAT i := 1 TO HIINDEX(y);
        -- Check to see it is an item in the input cntxt.
        IF item_in_context(y[i], cntxt) THEN
          RETURN (TRUE);
        END_IF;
      END_REPEAT;
    END_IF;
  END_IF;
  -- Return false when all possible branches have been checked
  -- with no success.
  RETURN (FALSE);</algorithm>
      </function>
      <function name="leap_year">
         <parameter name="year">
            <typename name="year_number"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF ((((year MOD 4) = 0) AND ((year MOD 100) &lt;&gt; 0)) OR ((year MOD 400) = 0)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;</algorithm>
      </function>
      <function name="list_face_loops">
         <parameter name="f">
            <typename name="face"/>
         </parameter>
         <aggregate type="LIST" lower="0" upper="?"/>
         <typename name="loop"/>
         <algorithm>LOCAL
     loops : LIST[0:?] OF loop := [];
   END_LOCAL;
   
   REPEAT i := 1 TO SIZEOF(f.bounds);
     loops := loops +(f.bounds[i].bound);
   END_REPEAT;
      
   RETURN(loops);</algorithm>
      </function>
      <function name="list_of_topology_reversed">
         <parameter name="a_list">
            <typename name="list_of_reversible_topology_item"/>
         </parameter>
         <typename name="list_of_reversible_topology_item"/>
         <algorithm>LOCAL
     the_reverse : list_of_reversible_topology_item;
   END_LOCAL;
    
   the_reverse := [];
   REPEAT i := 1 TO SIZEOF (a_list);
     the_reverse := topology_reversed (a_list [i]) + the_reverse;
   END_REPEAT;
  
   RETURN (the_reverse);</algorithm>
      </function>
      <function name="list_to_array">
         <parameter name="lis">
            <aggregate type="LIST" lower="0" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <parameter name="low">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="u">
            <builtintype type="INTEGER"/>
         </parameter>
         <aggregate type="ARRAY" lower="0" upper="0"/>
         <builtintype type="GENERIC"/>
         <algorithm>LOCAL
     n   : INTEGER;
     res : ARRAY [low:u] OF GENERIC : T;
   END_LOCAL;
      
   n := SIZEOF(lis);
   IF (n &lt;&gt; (u-low +1)) THEN
     RETURN(?);
   ELSE
     res := [lis[1] : n];
     REPEAT i := 2 TO n;
       res[low+i-1] := lis[i];
     END_REPEAT;
     RETURN(res);
   END_IF;</algorithm>
      </function>
      <function name="list_to_set">
         <parameter name="l">
            <aggregate type="LIST" lower="0" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <builtintype type="GENERIC"/>
         <algorithm>LOCAL
     s : SET OF GENERIC:T := [];
   END_LOCAL;
      
   REPEAT i := 1 TO SIZEOF(l);
     s := s + l[i];
   END_REPEAT;
   
   RETURN(s);</algorithm>
      </function>
      <function name="make_array_of_array">
         <parameter name="lis">
            <aggregate type="LIST" lower="1" upper="?"/>
            <aggregate type="LIST" lower="1" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <parameter name="low1">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="u1">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="low2">
            <builtintype type="INTEGER"/>
         </parameter>
         <parameter name="u2">
            <builtintype type="INTEGER"/>
         </parameter>
         <aggregate type="ARRAY" lower="0" upper="0"/>
         <aggregate type="ARRAY" lower="0" upper="0"/>
         <builtintype type="GENERIC"/>
         <algorithm>LOCAL
     res   : ARRAY[low1:u1] OF ARRAY [low2:u2] OF GENERIC : T;
   END_LOCAL;

(* Check input dimensions for consistency *)
   IF (u1-low1+1) &lt;&gt; SIZEOF(lis) THEN
     RETURN (?);
   END_IF;
   IF (u2 - low2 + 1 ) &lt;&gt; SIZEOF(lis[1]) THEN
     RETURN (?) ;
   END_IF;
(* Initialise res with values from lis[1] *)
   res := [list_to_array(lis[1], low2, u2) : (u1-low1 + 1)];
   REPEAT i := 2 TO HIINDEX(lis);
     IF (u2-low2+1) &lt;&gt; SIZEOF(lis[i]) THEN
       RETURN (?);
     END_IF;     
     res[low1+i-1] := list_to_array(lis[i], low2, u2);
   END_REPEAT; 
   
   RETURN (res);</algorithm>
      </function>
      <function name="mixed_loop_type_set">
         <parameter name="l">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="loop"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
      poly_loop_type: LOGICAL;
    END_LOCAL;
    IF(SIZEOF(l) &lt;= 1) THEN
      RETURN(FALSE);
    END_IF;
    poly_loop_type := ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLY_LOOP' IN TYPEOF(l[1]));

    REPEAT i := 2 TO SIZEOF(l);
      IF(('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLY_LOOP' IN TYPEOF(l[i])) &lt;&gt; poly_loop_type)


          THEN
          RETURN(TRUE);
       END_IF;
    END_REPEAT;
    RETURN(FALSE);</algorithm>
      </function>
      <function name="msb_shells">
         <parameter name="brep">
            <typename name="manifold_solid_brep"/>
         </parameter>
         <aggregate type="SET" lower="1" upper="?"/>
         <typename name="closed_shell"/>
         <algorithm>IF SIZEOF (QUERY (msbtype &lt;* TYPEOF (brep) |
       msbtype LIKE '*BREP_WITH_VOIDS')) &gt;= 1 THEN
       RETURN (brep\brep_with_voids.voids + brep.outer);
     ELSE
       RETURN([brep.outer]);
     END_IF;</algorithm>
      </function>
      <function name="msf_curve_check">
         <parameter name="cv">
            <typename name="representation_item"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.BOUNDED_CURVE',

  'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC',

  'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE',

  'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_CURVE_3D'] * TYPEOF(cv)) &gt; 1 THEN

  RETURN(FALSE);
END_IF;

(* b_spline_curves shall not self-intersect
 *)
IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE' IN TYPEOF (cv)) AND

  (cv\b_spline_curve.self_intersect = FALSE)OR
  (cv\b_spline_curve.self_intersect = UNKNOWN)) THEN
  RETURN(TRUE);
ELSE

  (* conics and lines are valid curve types
   *)
  IF SIZEOF (['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE'] 

    * TYPEOF (cv)) = 1 THEN
    RETURN(TRUE);
  ELSE

    (* a curve_replica shall reference a valid curve
     *)
    IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA' IN TYPEOF(cv) THEN

      RETURN (msf_curve_check(cv\curve_replica.parent_curve)); 
    ELSE 
 
      (* an offset_curve_3d shall not self-intersect and
         shall reference a valid curve; a polyline is not a
         valid basis_curve
       *)
      IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_CURVE_3D' IN TYPEOF (cv))

        AND
        ((cv\offset_curve_3d.self_intersect = FALSE) OR
        (cv\offset_curve_3d.self_intersect = UNKNOWN))
        AND
        (NOT ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF

        (cv\offset_curve_3d.basis_curve)))) THEN
        RETURN (msf_curve_check(cv\offset_curve_3d.basis_curve)); 
      ELSE 
 
        (* a pcurve shall reference a valid curve and a valid
           basis_surface
         *)
        IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF(cv) THEN 

          RETURN ((msf_curve_check
          (cv\pcurve.reference_to_curve\representation.items[1])) AND
          (msf_surface_check(cv\pcurve.basis_surface)));
        ELSE 
 
          (* a surface_curve references a curve_3d and one or
             two pcurves or one or two surfaces or one of
             each; all of these references shall be valid
           *)
          IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_CURVE' IN TYPEOF(cv) THEN 


            (* if the curve reference is correct, check also the rest
             *)
            IF msf_curve_check(cv\surface_curve.curve_3d) THEN
              REPEAT i := 1 TO SIZEOF
              (cv\surface_curve.associated_geometry);

                (* do for one or two associated_geometrys:
                 *)
                IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE' IN 

                  TYPEOF (cv\surface_curve.associated_geometry[i]) THEN  
                  IF NOT msf_surface_check
                    (cv\surface_curve.associated_geometry[i]) THEN  
                    RETURN(FALSE);  
                  END_IF;  
                ELSE  
                  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PCURVE' IN TYPEOF 

                    (cv\surface_curve.associated_geometry[i]) THEN  
                    IF NOT msf_curve_check
                      (cv\surface_curve.associated_geometry[i]) THEN 
                      RETURN(FALSE);  
                    END_IF;  
                  END_IF;  
                END_IF; 
              END_REPEAT;  
              RETURN(TRUE);
            END_IF; 
          ELSE

            (* a polyline shall have at least 3 points
             *)
            IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' IN TYPEOF(cv) THEN


              IF (SIZEOF (cv\polyline.points) &gt;= 3) THEN RETURN (TRUE);
              END_IF;
            END_IF;
          END_IF; 
        END_IF; 
      END_IF; 
    END_IF; 
  END_IF; 
END_IF; 
(* FALSE is returned if the input parameter cv is not a valid curve.
 *)
RETURN (FALSE);</algorithm>
      </function>
      <function name="msf_surface_check">
         <parameter name="surf">
            <typename name="surface"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ELEMENTARY_SURFACE' IN TYPEOF(surf) THEN

    RETURN(TRUE);
  ELSE 

    (* a swept_surface shall have a valid sweeping curve
     *)
    IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SWEPT_SURFACE' IN TYPEOF (surf) THEN 

      RETURN (msf_curve_check(surf\swept_surface.swept_curve));  
    ELSE 
 
      (* an offset_surface shall not self-intersect and shall
         reference a valid surface
       *)
      IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_SURFACE' IN TYPEOF (surf)) AND

        (surf\offset_surface.self_intersect = FALSE) OR 
        (surf\offset_surface.self_intersect = UNKNOWN)) THEN
        RETURN (msf_surface_check(surf\offset_surface.basis_surface));
      ELSE 
 
        (* a surface_replica shall have a valid parent surface
         *)
        IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SURFACE_REPLICA' IN TYPEOF(surf) THEN 

          RETURN(msf_surface_check(surf\surface_replica.parent_surface)); 
        ELSE

          (* a b_spline_surface shall not self-intersect
           *)
          IF (('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_SURFACE' IN TYPEOF(surf)) AND


            (surf\b_spline_surface.self_intersect = FALSE) OR
            (surf\b_spline_surface.self_intersect = UNKNOWN)) THEN
            RETURN(TRUE);
          END_IF;
        END_IF; 
      END_IF; 
    END_IF; 
  END_IF; 
  RETURN(FALSE);</algorithm>
      </function>
      <function name="normalise">
         <parameter name="arg">
            <typename name="vector_or_direction"/>
         </parameter>
         <typename name="vector_or_direction"/>
         <algorithm>LOCAL
     ndim   : INTEGER;
     v      : direction;
     result : vector_or_direction;
     vec    : vector;
     mag    : REAL;
   END_LOCAL;
   
   IF NOT EXISTS (arg) THEN
     result := ?;
 (* When function is called with invalid data a NULL result is returned *)
   ELSE
     ndim := arg.dim;
     IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VECTOR' IN TYPEOF(arg) THEN

       BEGIN
             v := dummy_gri || direction(arg.orientation.direction_ratios);
         IF arg.magnitude = 0.0 THEN
           RETURN(?);
         ELSE
          vec := dummy_gri || vector (v, 1.0);
         END_IF;
       END;
     ELSE
       v := dummy_gri || direction (arg.direction_ratios);
     END_IF;
     mag := 0.0;
     REPEAT  i := 1 TO ndim;
       mag := mag + v.direction_ratios[i]*v.direction_ratios[i];
     END_REPEAT;
     IF mag &gt; 0.0 THEN
       mag := SQRT(mag);
       REPEAT  i := 1 TO ndim;
         v.direction_ratios[i] := v.direction_ratios[i]/mag;
       END_REPEAT;
       IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VECTOR' IN TYPEOF(arg) THEN


         vec.orientation := v;
         result := vec;
       ELSE
         result := v;
       END_IF;
     ELSE
       RETURN(?);
     END_IF;
   END_IF;
   RETURN (result);</algorithm>
      </function>
      <function name="open_shell_reversed">
         <parameter name="a_shell">
            <typename name="open_shell"/>
         </parameter>
         <typename name="oriented_open_shell"/>
         <algorithm>LOCAL
     the_reverse : oriented_open_shell;
   END_LOCAL;
   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_OPEN_SHELL' IN TYPEOF (a_shell) ) THEN


     the_reverse := dummy_tri ||
                  connected_face_set (
                      a_shell\connected_face_set.cfs_faces) ||
                  open_shell () || oriented_open_shell(
                    a_shell\oriented_open_shell.open_shell_element,
                      (NOT (a_shell\oriented_open_shell.orientation)));
   ELSE
     the_reverse := dummy_tri ||
                 connected_face_set (
                     a_shell\connected_face_set.cfs_faces) ||
                 open_shell () ||  oriented_open_shell (a_shell, FALSE);
   END_IF;
   RETURN (the_reverse);</algorithm>
      </function>
      <function name="orthogonal_complement">
         <parameter name="vec">
            <typename name="direction"/>
         </parameter>
         <typename name="direction"/>
         <algorithm>LOCAL
     result :  direction ;
   END_LOCAL;

   IF (vec.dim &lt;&gt; 2) OR NOT EXISTS (vec) THEN
     RETURN(?);
   ELSE
     result := dummy_gri || direction([-vec.direction_ratios[2],
                                          vec.direction_ratios[1]]);
     RETURN(result);
   END_IF;</algorithm>
      </function>
      <function name="path_head_to_tail">
         <parameter name="a_path">
            <typename name="path"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>LOCAL
     n : INTEGER;
     p : LOGICAL := TRUE;
   END_LOCAL;
     
     n := SIZEOF (a_path.edge_list);
     REPEAT i := 2 TO n;
       p := p AND (a_path.edge_list[i-1].edge_end :=:
                   a_path.edge_list[i].edge_start);
     END_REPEAT;
     
     RETURN (p);</algorithm>
      </function>
      <function name="path_reversed">
         <parameter name="a_path">
            <typename name="path"/>
         </parameter>
         <typename name="oriented_path"/>
         <algorithm>LOCAL
    the_reverse : oriented_path ;
  END_LOCAL;
  IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ORIENTED_PATH' IN TYPEOF (a_path) ) THEN


    the_reverse := dummy_tri ||
       path(list_of_topology_reversed (a_path.edge_list)) ||
          oriented_path(a_path\oriented_path.path_element,
                          NOT(a_path\oriented_path.orientation)) ;
  ELSE
    the_reverse := dummy_tri ||
                   path(list_of_topology_reversed (a_path.edge_list)) ||
                       oriented_path(a_path, FALSE);
  END_IF;

  RETURN (the_reverse);</algorithm>
      </function>
      <function name="representations_mapped_into">
         <parameter name="rep">
            <typename name="representation"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <typename name="representation"/>
         <algorithm>LOCAL
    results : SET OF representation := [];
    rm      : SET OF representation_map;
    mi      : SET OF mapped_item := [];
  END_LOCAL;

  -- Find set of representation_maps which specify the representation
  rm := bag_to_set(USEDIN(rep, 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +

                    'REPRESENTATION_MAP.MAPPED_REPRESENTATION'));
  -- Find the set of mapped_items that use each representation_map
  REPEAT i := 1 TO HIINDEX(rm);
    mi := mi + rm[i].map_usage;
  END_REPEAT;
  -- Find the set of representations that use each mapped_item
  REPEAT j := 1 TO HIINDEX(mi);
    results := results + USEDIN(mi[j],'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.' +


                                      'REPRESENTATION.ITEMS');
  END_REPEAT;
  RETURN(results);</algorithm>
      </function>
      <function name="scalar_times_vector">
         <parameter name="scalar">
            <builtintype type="REAL"/>
         </parameter>
         <parameter name="vec">
            <typename name="vector_or_direction"/>
         </parameter>
         <typename name="vector"/>
         <algorithm>LOCAL
     v      : direction;
     mag    : REAL;
     result : vector;
   END_LOCAL;

   IF NOT EXISTS (scalar) OR NOT EXISTS (vec) THEN
     RETURN (?) ;
    ELSE
     IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VECTOR' IN TYPEOF (vec) THEN


       v   := dummy_gri || direction(vec.orientation.direction_ratios);
       mag := scalar * vec.magnitude;
     ELSE
       v   := dummy_gri || direction(vec.direction_ratios);
       mag := scalar;
     END_IF;
     IF (mag &lt; 0.0 ) THEN
       REPEAT i := 1 TO SIZEOF(v.direction_ratios);
         v.direction_ratios[i] := -v.direction_ratios[i];
       END_REPEAT;
       mag := -mag;
     END_IF;
     result := dummy_gri || vector(normalise(v), mag);
   END_IF;
   RETURN (result);</algorithm>
      </function>
      <function name="second_proj_axis">
         <parameter name="z_axis">
            <typename name="direction"/>
         </parameter>
         <parameter name="x_axis">
            <typename name="direction"/>
         </parameter>
         <parameter name="arg">
            <typename name="direction"/>
         </parameter>
         <typename name="direction"/>
         <algorithm>LOCAL
     y_axis : vector;
     v      : direction;
     temp   : vector;
   END_LOCAL;
   
   IF NOT EXISTS(arg) THEN
     v := dummy_gri || direction([0.0,1.0,0.0]);
   ELSE
     v := arg;
   END_IF;
   
   temp   := scalar_times_vector(dot_product(v, z_axis), z_axis);
   y_axis := vector_difference(v, temp);
   temp   := scalar_times_vector(dot_product(v, x_axis), x_axis);
   y_axis := vector_difference(y_axis, temp);
   y_axis := normalise(y_axis);
   RETURN(y_axis.orientation);</algorithm>
      </function>
      <function name="set_of_topology_reversed">
         <parameter name="a_set">
            <typename name="set_of_reversible_topology_item"/>
         </parameter>
         <typename name="set_of_reversible_topology_item"/>
         <algorithm>LOCAL
     the_reverse : set_of_reversible_topology_item;
   END_LOCAL;
   
   the_reverse := [];
   REPEAT i := 1 TO SIZEOF (a_set);
     the_reverse := the_reverse + topology_reversed (a_set [i]);
   END_REPEAT;
   
   RETURN (the_reverse);</algorithm>
      </function>
      <function name="shell_reversed">
         <parameter name="a_shell">
            <typename name="shell"/>
         </parameter>
         <typename name="shell"/>
         <algorithm>IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OPEN_SHELL' IN TYPEOF (a_shell) ) THEN

     RETURN (open_shell_reversed (a_shell));
   ELSE
     IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CLOSED_SHELL' IN TYPEOF (a_shell) ) THEN


       RETURN (closed_shell_reversed (a_shell));
     ELSE
       RETURN (?);
     END_IF;
   END_IF;</algorithm>
      </function>
      <function name="surface_weights_positive">
         <parameter name="b">
            <typename name="rational_b_spline_surface"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
     result        : BOOLEAN := TRUE;
   END_LOCAL;
   
   REPEAT i := 0 TO b.u_upper;
     REPEAT j := 0 TO b.v_upper;
       IF (b.weights[i][j] &lt;= 0.0)  THEN
         result := FALSE;
         RETURN(result);
       END_IF;
     END_REPEAT;
   END_REPEAT;
   RETURN(result);</algorithm>
      </function>
      <function name="topology_reversed">
         <parameter name="an_item">
            <typename name="reversible_topology"/>
         </parameter>
         <typename name="reversible_topology"/>
         <algorithm>IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.EDGE' IN TYPEOF (an_item)) THEN

     RETURN (edge_reversed (an_item));
   END_IF;

   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PATH' IN TYPEOF (an_item)) THEN

     RETURN (path_reversed (an_item));
   END_IF;

   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE_BOUND' IN TYPEOF (an_item)) THEN

     RETURN (face_bound_reversed (an_item));
   END_IF;
  
   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FACE' IN TYPEOF (an_item)) THEN

     RETURN (face_reversed (an_item));
   END_IF;

   IF ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHELL' IN TYPEOF (an_item)) THEN


     RETURN (shell_reversed (an_item));
   END_IF;

   IF ('SET' IN TYPEOF (an_item)) THEN
     RETURN (set_of_topology_reversed (an_item));
   END_IF;

   IF ('LIST' IN TYPEOF (an_item)) THEN
     RETURN (list_of_topology_reversed (an_item));
   END_IF;

   RETURN (?);</algorithm>
      </function>
      <function name="type_check_function">
         <parameter name="the_type">
            <builtintype type="GENERIC"/>
         </parameter>
         <parameter name="sub_names">
            <aggregate type="SET" lower="0" upper="?"/>
            <builtintype type="STRING"/>
         </parameter>
         <parameter name="criterion">
            <builtintype type="INTEGER"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>IF (( NOT EXISTS ( the_type ) ) OR (NOT ({0&lt;= criterion &lt;=3})) OR
(SIZEOF ( sub_names ) = 0 ) ) THEN RETURN (UNKNOWN);
ELSE
  CASE criterion OF
       0: RETURN (SIZEOF ( sub_names * TYPEOF (the_type) ) &gt; 0);
       1: RETURN (SIZEOF ( sub_names * TYPEOF (the_type) ) = 0);
       2: RETURN (SIZEOF ( sub_names * TYPEOF (the_type) ) = 1);
       3: RETURN (SIZEOF ( sub_names * TYPEOF (the_type) ) &lt;= 1);
  END_CASE;
END_IF;</algorithm>
      </function>
      <function name="using_items">
         <parameter name="item">
            <typename name="founded_item_select"/>
         </parameter>
         <parameter name="checked_items">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="founded_item_select"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <typename name="founded_item_select"/>
         <algorithm>LOCAL
    new_check_items    : SET OF founded_item_select;
    result_items       : SET OF founded_item_select;
    next_items         : SET OF founded_item_select;
  END_LOCAL;
  result_items := [];
  new_check_items := checked_items + item;
  -- Find the set of representation_items or founded_items
  -- in which item is used directly.
  next_items := QUERY(z &lt;* bag_to_set( USEDIN(item , '')) |
    ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z)) OR

    ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.FOUNDED_ITEM'        IN TYPEOF(z)));


  -- If the set of next_items is not empty;
  IF SIZEOF(next_items) &gt; 0 THEN
    -- For each element in the set, find the using_items recursively
    REPEAT i := 1 TO HIINDEX(next_items);
      -- Check for loop in data model, i.e. one of the next_items
      -- occurred earlier in the set of check_items;
      IF NOT(next_items[i] IN new_check_items) THEN
        result_items := result_items + next_items[i] +
                        using_items(next_items[i],new_check_items);
      END_IF;
    END_REPEAT;
  END_IF;
  -- return the set of representation_items or founded_items
  -- in which the input item is used directly and indirectly.
  RETURN (result_items);</algorithm>
      </function>
      <function name="using_representations">
         <parameter name="item">
            <typename name="founded_item_select"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <typename name="representation"/>
         <algorithm>LOCAL
    results            : SET OF representation;
    result_bag         : BAG OF representation;
    intermediate_items : SET OF founded_item_select;
  END_LOCAL;
  -- Find the representations in which the item is used and add to the
  -- results set.
  results := [];
  result_bag :=
USEDIN(item,'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REPRESENTATION.ITEMS');

  IF SIZEOF(result_bag) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(result_bag);
      results := results + result_bag[i];
    END_REPEAT;
  END_IF;
  -- Find all representation_items or founded_items
  -- by which item is referenced directly or indirectly.
  intermediate_items := using_items(item,[]);
  -- If the set of intermediate items is not empty;
  IF SIZEOF(intermediate_items) &gt; 0 THEN
    -- For each element in the set, add the
    -- representations of that element.
    REPEAT i := 1 TO HIINDEX(intermediate_items);
      result_bag := USEDIN(intermediate_items[i],
                    'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.REPRESENTATION.ITEMS');


      IF SIZEOF(result_bag) &gt; 0 THEN
        REPEAT j := 1 TO HIINDEX(result_bag);
          results := results + result_bag[j];
        END_REPEAT;
      END_IF;
    END_REPEAT;
  END_IF;
  -- Return the set of representation in which the input item is
  -- used directly and indirectly (through intervening
  -- representation_items or founded items).
  RETURN (results);</algorithm>
      </function>
      <function name="valid_calendar_date">
         <parameter name="date">
            <typename name="calendar_date"/>
         </parameter>
         <builtintype type="LOGICAL"/>
         <algorithm>CASE date.month_component OF
    1  : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
    2  : BEGIN
           IF (leap_year(date.year_component)) THEN
             RETURN({ 1 &lt;= date.day_component &lt;= 29 });
           ELSE
             RETURN({ 1 &lt;= date.day_component &lt;= 28 });
           END_IF;
         END;
    3  : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
    4  : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
    5  : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
    6  : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
    7  : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
    8  : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
    9  : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
    10 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
    11 : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
    12 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
  END_CASE;
  RETURN (FALSE);</algorithm>
      </function>
      <function name="valid_datum_target_parameters">
         <parameter name="pdf">
            <typename name="placed_datum_target_feature"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL

rep_set : SET OF representation := [] ;

parameter_representations: SET OF representation;
END_LOCAL;


REPEAT i := 1 TO HIINDEX(pdf.representation_associations);
rep_set := rep_set + pdf.representation_associations[i].used_representation;
END_REPEAT;
 
parameter_representations := QUERY(rep &lt;* rep_set |
('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SHAPE_REPRESENTATION_WITH_PARAMETERS' IN

TYPEOF(rep)));


IF (SIZEOF( QUERY( srwp &lt;* parameter_representations |
          (SIZEOF( QUERY( i &lt;* srwp.items |
          (i.name='orientation') AND
          ('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLACEMENT' IN TYPEOF(i)))) = 1))) &lt;&gt; 1) THEN

   RETURN(FALSE);
END_IF;

CASE pdf\shape_aspect.description OF
'point': RETURN(SIZEOF(QUERY( srwp &lt;* parameter_representations |
              (SIZEOF(srwp.items) = 1))) = 1);

'circle': RETURN((SIZEOF( QUERY( srwp &lt;* parameter_representations |
              (SIZEOF(srwp.items) = 2))) = 1) AND
             (SIZEOF( QUERY( srwp &lt;* parameter_representations |
              (SIZEOF( QUERY( i &lt;* srwp.items |
                (i.name='target diameter') AND
                (SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM',

		   'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)

                 ) = 2) )) = 1))) = 1));

'line': RETURN(SIZEOF( QUERY( srwp &lt;* parameter_representations |
              (SIZEOF( QUERY( i &lt;* srwp.items |
                (i.name='target length') AND
                (SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM',

		'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)

                 ) = 2) )) = 1))) = 1);

'rectangle': RETURN((SIZEOF( QUERY( srwp &lt;* parameter_representations |
              (SIZEOF(srwp.items)= 3))) = 1) AND
             (SIZEOF( QUERY( srwp &lt;* parameter_representations |
              (SIZEOF( QUERY( i &lt;* srwp.items |
                (i.name='target length') AND
                (SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM',

		'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)

                 ) = 2))) = 1))) = 1) AND
              (SIZEOF( QUERY( srwp &lt;* parameter_representations |
               (SIZEOF( QUERY( i &lt;* srwp.items |
                 (i.name='target width') AND
                 (SIZEOF(['AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM',

 		'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LENGTH_MEASURE_WITH_UNIT']*TYPEOF(i)


                  ) = 2))) = 1) )) = 1));
OTHERWISE : RETURN(FALSE);
END_CASE;</algorithm>
      </function>
      <function name="valid_geometrically_bounded_wf_curve">
         <parameter name="crv">
            <typename name="curve"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ELLIPSE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CIRCLE' ] * TYPEOF (crv)) = 1 THEN 

 RETURN (TRUE);
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TRIMMED_CURVE' IN TYPEOF (crv) THEN 

 IF SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PARABOLA', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.HYPERBOLA' ] * TYPEOF (crv\trimmed_curve.basis_curve)) = 1 THEN 

 RETURN (TRUE);
 ELSE 
 RETURN (valid_geometrically_bounded_wf_curve(crv\trimmed_curve.basis_curve));
 END_IF ;
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_CURVE_3D' IN TYPEOF (crv) THEN 

 RETURN (valid_geometrically_bounded_wf_curve(crv\offset_curve_3d.basis_curve));
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA' IN TYPEOF (crv) THEN 

 RETURN (valid_geometrically_bounded_wf_curve(crv\curve_replica.parent_curve));
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.COMPOSITE_CURVE' IN TYPEOF (crv) THEN 


 RETURN ( SIZEOF ( 
QUERY ( ccs &lt;* crv\composite_curve.segments| NOT valid_geometrically_bounded_wf_curve(ccs.parent_curve) )) = 0);
 END_IF ;
 END_IF ;
 END_IF ;
 END_IF ;
 END_IF ;
 RETURN (FALSE);</algorithm>
      </function>
      <function name="valid_geometrically_bounded_wf_point">
         <parameter name="pnt">
            <typename name="point"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF (pnt) THEN 

 RETURN (TRUE);
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_ON_CURVE' IN TYPEOF (pnt) THEN 

 RETURN (valid_geometrically_bounded_wf_curve(pnt\point_on_curve.basis_curve));
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_REPLICA' IN TYPEOF (pnt) THEN 


 RETURN (valid_geometrically_bounded_wf_point(pnt\point_replica.parent_pt));
 END_IF ;
 END_IF ;
 END_IF ;
 RETURN (FALSE);</algorithm>
      </function>
      <function name="valid_measure_value">
         <parameter name="m">
            <typename name="measure_value"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF ('REAL' IN TYPEOF (m)) THEN
  RETURN (m &gt; 0.0);
  ELSE
    IF ('INTEGER' IN TYPEOF (m)) THEN
    RETURN (m &gt; 0);
    ELSE
      RETURN (TRUE);
    END_IF;
  END_IF;</algorithm>
      </function>
      <function name="valid_time">
         <parameter name="time">
            <typename name="local_time"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF EXISTS(time.second_component) THEN
    RETURN (EXISTS(time.minute_component));
  ELSE
    RETURN (TRUE);
  END_IF;</algorithm>
      </function>
      <function name="valid_units">
         <parameter name="m">
            <typename name="measure_with_unit"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LENGTH_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MASS_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.TIME_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.ELECTRIC_CURRENT_MEASURE' 

  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE'

  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CELSIUS_TEMPERATURE_MEASURE'

  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE' 

  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LUMINOUS_INTENSITY_MEASURE' 

  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.PLANE_ANGLE_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.SOLID_ANGLE_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.AREA_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VOLUME_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.RATIO_MEASURE' IN TYPEOF ( m.value_component ) THEN

    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POSITIVE_LENGTH_MEASURE' 

  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE' 


  IN TYPEOF ( m.value_component ) THEN
    IF derive_dimensional_exponents ( m.unit_component ) &lt;&gt;
       dimensional_exponents ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  RETURN (TRUE);</algorithm>
      </function>
      <function name="valid_wireframe_edge_curve">
         <parameter name="crv">
            <typename name="curve"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF SIZEOF ([ 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.LINE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CONIC', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.B_SPLINE_CURVE', 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POLYLINE' ] * TYPEOF (crv)) = 1 THEN 

 RETURN (TRUE);
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CURVE_REPLICA' IN TYPEOF (crv) THEN 

 RETURN (valid_wireframe_edge_curve(crv\curve_replica.parent_curve));
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.OFFSET_CURVE_3D' IN TYPEOF (crv) THEN 


 RETURN (valid_wireframe_edge_curve(crv\offset_curve_3d.basis_curve));
 END_IF ;
 END_IF ;
 END_IF ;
 RETURN (FALSE);</algorithm>
      </function>
      <function name="valid_wireframe_vertex_point">
         <parameter name="pnt">
            <typename name="point"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.CARTESIAN_POINT' IN TYPEOF (pnt) THEN 

 RETURN (TRUE);
 ELSE 
 IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.POINT_REPLICA' IN TYPEOF (pnt) THEN 


 RETURN (valid_wireframe_vertex_point(pnt\point_replica.parent_pt));
 END_IF ;
 END_IF ;
 RETURN (FALSE);</algorithm>
      </function>
      <function name="value_range_wr1">
         <parameter name="agg">
            <typename name="compound_item_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>BEGIN
IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY (i1 &lt;* agg | (
'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF

(i1)))) = 2) OR
(SIZEOF(QUERY (i2 &lt;* agg | (
'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VALUE_REPRESENTATION_ITEM' IN TYPEOF


(i2)))) = 2)) THEN
RETURN(TRUE);
ELSE
RETURN(FALSE);
END_IF;
END;</algorithm>
      </function>
      <function name="value_range_wr2">
         <parameter name="agg">
            <typename name="compound_item_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>BEGIN
IF (SIZEOF(QUERY (i &lt;* agg | (i.name = 'upper limit'))) = 1)
AND (SIZEOF(QUERY (i &lt;* agg | (i.name = 'lower limit'))) = 1)
THEN
RETURN(TRUE);
ELSE
RETURN(FALSE);
END_IF;
END;</algorithm>
      </function>
      <function name="value_range_wr3">
         <parameter name="agg">
            <typename name="compound_item_definition"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>BEGIN
IF (SIZEOF(QUERY(i1 &lt;* agg |
('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i1)) AND

(SIZEOF (QUERY (i2 &lt;* agg |
('AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i2)) AND


(i1 :&lt;&gt;: i2) AND (i1\measure_with_unit.unit_component :=: i2\measure_with_unit.unit_component))) = 1))) = 2)
THEN
RETURN (TRUE);
ELSE
RETURN (FALSE);
END_IF;
END;</algorithm>
      </function>
      <function name="vector_difference">
         <parameter name="arg1">
            <typename name="vector_or_direction"/>
         </parameter>
         <parameter name="arg2">
            <typename name="vector_or_direction"/>
         </parameter>
         <typename name="vector"/>
         <algorithm>LOCAL
     result          : vector;
     res, vec1, vec2 : direction;
     mag, mag1, mag2 : REAL;
     ndim            : INTEGER;
   END_LOCAL;

   IF ((NOT EXISTS (arg1)) OR (NOT EXISTS (arg2))) OR (arg1.dim &lt;&gt; arg2.dim)
       THEN
     RETURN (?) ;
    ELSE
     BEGIN
       IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VECTOR' IN TYPEOF(arg1) THEN

         mag1 := arg1.magnitude;
         vec1 := arg1.orientation;
       ELSE
         mag1 := 1.0;
         vec1 := arg1;
       END_IF;
       IF 'AP203_CONFIGURATION_CONTROLLED_3D_DESIGN_OF_MECHANICAL_PARTS_AND_ASSEMBLIES_MIM_LF.VECTOR' IN TYPEOF(arg2) THEN


         mag2 := arg2.magnitude;
         vec2 := arg2.orientation;
       ELSE
         mag2 := 1.0;
         vec2 := arg2;
       END_IF;
       vec1 := normalise (vec1);
       vec2 := normalise (vec2);
       ndim := SIZEOF(vec1.direction_ratios);
       mag := 0.0;
       res := dummy_gri || direction(vec1.direction_ratios);
       REPEAT i := 1 TO ndim;
         res.direction_ratios[i] := mag1*vec1.direction_ratios[i] +
                                     mag2*vec2.direction_ratios[i];
         mag := mag + (res.direction_ratios[i]*res.direction_ratios[i]);
       END_REPEAT;
       IF (mag &gt; 0.0 ) THEN
       result := dummy_gri || vector( res, SQRT(mag));
       ELSE
         result := dummy_gri || vector( vec1,  0.0);
       END_IF;
     END;
   END_IF;
   RETURN (result);</algorithm>
      </function>
   </schema>
</express>
