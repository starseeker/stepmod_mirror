
(*
   $Id: arm.exp,v 1.4 2009/01/22 14:30:30 darla Exp $
   WG12N2615 - ISO/CD-TS - 10303-403 ap209_multidisciplinary_analysis_and_design - EXPRESS ARM LF*)

SCHEMA Ap209_multidisciplinary_analysis_and_design_arm_LF;



(*
USE FROM Ap203_configuration_controlled_3d_design_of_mechanical_parts_and_assemblies_arm;


USE FROM Analysis_assignment_arm;
USE FROM Analysis_characterized_arm;
USE FROM Analysis_identification_arm;
USE FROM Analysis_product_relationships_arm;


USE FROM Analysis_arm;
USE FROM Analysis_representation_arm;
USE FROM Cfd_model_arm;
USE FROM Finite_elements_arm;
USE FROM Mesh_connectivity_arm;
USE FROM Mesh_topology_arm;
USE FROM Product_analysis_arm;


USE FROM Analysis_shape_arm;
USE FROM Finite_element_shape_arm;


USE FROM Cfd_specified_general_property_arm;
USE FROM Fea_definition_relationships_arm;
USE FROM Fea_material_aspects_arm;


USE FROM Cfd_equations_arm;
USE FROM Cfd_results_arm;
USE FROM Finite_element_analysis_arm;
USE FROM Mesh_function_arm;
*)

CONSTANT

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_approval_types : SET OF STRING := [
 'disposition',
 'equipment order',
 'planning'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_activity_relationship_types : SET OF STRING := [
 'alternative',
 'decomposition',
 'derivation',
 'exclusiveness',
 'precedence',
 'sequence',
 'simultaneity'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_security_classification_types : SET OF STRING := [
 'unclassified',
 'classified',
 'proprietary',
 'confidential',
 'secret',
 'top secret'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_address_assignment_types : SET OF STRING := [
 'delivery address',
 'postal address',
 'visitor address'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_organization_or_person_in_organization_assignment_types : SET OF STRING := [
 'author',
 'classification officer',
 'creator',
 'custodian',
 'customer',
 'design supplier',
 'editor',
 'id owner',
 'location',
 'manufacturer',
 'owner',
 'read access',
 'supplier',
 'wholesaler',
 'write access',
 'organization in contract'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_approval_status_types : SET OF STRING := [
 'approved',
 'disapproved',
 'withdrawn',
 'not yet approved']	;

(* Implicit interfaced from: Picture_representation_arm *)
    pre_defined_picture_representation_types : SET [0:?] OF STRING := [ 'JPEG', 'PNG', 'TIFF', 'BMP', 'GIF']; 

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_date_or_date_time_assignment_types : SET OF STRING := [
 'creation',
 'installation',
 'production',
 'registration',
 'update',
 'planned',
 'actual',
 'start date',
 'end date',
 'release date',
 'request date'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_work_request_types : SET OF STRING := [
 'change of standard',
 'cost reduction',
 'customer rejection',
 'customer request',
 'durability improvement',
 'government regulation',
 'production alignment',
 'procurement alignment',
 'production relief',
 'production requirement',
 'quality improvement',
 'security reason',
 'standardization',
 'supplier request',
 'technical improvement',
 'tool improvement'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_work_request_status_types : SET OF STRING := [
 'in work',
 'issued',
 'proposed',
 'resolved'];
(* REFERENCE FROM (Qualified_measure_arm); *)
    pre_defined_type_qualifiers : SET OF STRING := ['minimum', 'maximum',
    'nominal', 'specified', 'typical', 'calculated', 'designed', 'estimated',
    'measured', 'required', 'set point',
    'basic', 'lower deviation', 'upper deviation'];

(* Implicit interfaced from: Chemical_substance_arm *)
  chemical_elements : LIST OF STRING := [
      'HYDROGEN',
      'HELIUM',
      'LITHIUM',
      'BERYLLIUM',
      'BORON',
      'CARBON',
      'NITROGEN',
      'OXYGEN',
      'FLUORINE',
      'NEON',
      'SODIUM',
      'MAGNESIUM',
      'ALUMINIUM',
      'SILICON',
      'PHOSPHORUS',
      'SULPHUR',
      'CHLORINE',
      'ARGON',
      'POTASSIUM',
      'CALCIUM',
      'SCANDIUM',
      'TITANIUM',
      'VANADIUM',
      'CHROMIUM',
      'MANGANESE',
      'IRON',
      'COBALT',
      'NICKEL',
      'COPPER',
      'ZINC',
      'GALLIUM',
      'GERMANIUM',
      'ARSENIC',
      'SELENIUM',
      'BROMINE',
      'KRYPTON',
      'RUBIDIUM',
      'STRONTIUM',
      'YTTRIUM',
      'ZIRCONIUM',
      'NIOBIUM',
      'MOLYBDENUM',
      'TECHNETIUM',
      'RUTHENIUM',
      'RHODIUM',
      'PALLADIUM',
      'SILVER',
      'CADMIUM',
      'INDIUM',
      'TIN',
      'ANTIMONY',
      'TELLURIUM',
      'IODINE',
      'XENON',
      'CAESIUM',
      'BARIUM',
      'LANTHANUM',
      'CERIUM',
      'PRASEODYMIUM',
      'NEODYMIUM',
      'PROMETHIUM',
      'SAMARIUM',
      'EUROPIUM',
      'GADOLINIUM',
      'TERBIUM',
      'DYSPROSIUM',
      'HOLMIUM',
      'ERBIUM',
      'THULIUM',
      'YTTERBIUM',
      'LUTETIUM',
      'HAFNIUM',
      'TANTALUM',
      'TUNGSTEN',
      'RHENIUM',
      'OSMIUM',
      'IRIDIUM',
      'PLATINUM',
      'GOLD',
      'MERCURY',
      'THALLIUM',
      'LEAD',
      'BISMUTH',
      'POLONIUM',
      'ASTATINE',
      'RADON',
      'FRANCIUM',
      'RADIUM',
      'ACTINIUM',
      'THORIUM',
      'PROTACTINIUM',
      'URANIUM',
      'NEPTUNIUM',
      'PLUTONIUM',
      'AMERICIUM',
      'CURIUM',
      'BERKELIUM',
      'CALIFORNIUM',
      'EINSTEINIUM',
      'FERMIUM',
      'MENDELEVIUM',
      'NOBELIUM',
      'LAWRENCIUM',
      'RUTHERFORDIUM',
      'DUBNIUM',
      'SEABORGIUM',
      'BOHRIUM',
      'HASSIUM',
      'MEITNERIUM',
      'DARMSTADTIUM',
      'ROENTGENIUM'];

END_CONSTANT;

(* Pruned unused type: pdpdms_external_identification_item  *)


(* Pruned unused type: appearance_context_203e2  *)


(* Pruned unused type: approval_item_203e2  *)


(* Pruned unused type: contract_item_203e2  *)


(* Pruned unused type: documented_element_select_203e2  *)


(* Pruned unused type: effectivity_item_203e2  *)


(* Pruned unused type: groupable_item_203e2  *)


(* Pruned unused type: identification_item_203e2  *)


(* Pruned unused type: organization_or_person_in_organization_item_203e2  *)


(* Pruned unused type: ply_laminate_shape_203e2  *)


(* Pruned unused type: presentation_association_select_203e2  *)


(* Pruned unused type: presented_model_select_203e2  *)


(* Pruned unused type: security_classification_item_203e2  *)


(* Pruned unused type: string_select_203e2  *)


(* Pruned unused type: time_interval_item_203e2  *)


(* Pruned unused type: text_or_composite_text_203e2  *)


(* Pruned unused type: text_string_representation_item_select_203e2  *)

(* USED FROM (Analysis_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE analysed_item = SELECT (
   Product_version);
END_TYPE;

(* USED FROM (Analysis_characterized_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE analysis_approval_item = approval_item;
WHERE
  wr1 : NOT ('ANALYSIS_CHARACTERIZED_ARM.ACTIVITY' IN TYPEOF(SELF));
  wr2 : NOT ('ANALYSIS_CHARACTERIZED_ARM.ALTERNATE_PART_RELATIONSHIP' IN TYPEOF(SELF));
  wr3 : NOT ('ANALYSIS_CHARACTERIZED_ARM.APPLIED_ACTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr4 : NOT ('ANALYSIS_CHARACTERIZED_ARM.APPLIED_INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr5 : NOT ('ANALYSIS_CHARACTERIZED_ARM.ASSEMBLY_RELATIONSHIP_SUBSTITUTION' IN TYPEOF(SELF));
  wr6 : NOT ('ANALYSIS_CHARACTERIZED_ARM.CERTIFICATION' IN TYPEOF(SELF));
  wr7 : NOT ('ANALYSIS_CHARACTERIZED_ARM.CONTRACT' IN TYPEOF(SELF));
  wr8 : NOT ('ANALYSIS_CHARACTERIZED_ARM.DIGITAL_DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr9 : NOT ('ANALYSIS_CHARACTERIZED_ARM.DOCUMENT' IN TYPEOF(SELF));
  wr10 : NOT ('ANALYSIS_CHARACTERIZED_ARM.DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr11 : NOT ('ANALYSIS_CHARACTERIZED_ARM.DOCUMENT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr12 : NOT ('ANALYSIS_CHARACTERIZED_ARM.DOCUMENT_VERSION' IN TYPEOF(SELF));
  wr13 : NOT ('ANALYSIS_CHARACTERIZED_ARM.EFFECTIVITY' IN TYPEOF(SELF));
  wr14 : NOT ('ANALYSIS_CHARACTERIZED_ARM.FILE' IN TYPEOF(SELF));
  wr15 : NOT ('ANALYSIS_CHARACTERIZED_ARM.GROUP' IN TYPEOF(SELF));
  wr16 : NOT ('ANALYSIS_CHARACTERIZED_ARM.GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr17 : NOT ('ANALYSIS_CHARACTERIZED_ARM.INDEPENDENT_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr18 : NOT ('ANALYSIS_CHARACTERIZED_ARM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr19 : NOT ('ANALYSIS_CHARACTERIZED_ARM.ITEM_USAGE_EFFECTIVITY' IN TYPEOF(SELF));
  wr20 : NOT ('ANALYSIS_CHARACTERIZED_ARM.PART_VERSION' IN TYPEOF(SELF));
  wr21 : NOT ('ANALYSIS_CHARACTERIZED_ARM.PART_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr22 : NOT ('ANALYSIS_CHARACTERIZED_ARM.PHYSICAL_DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr23 : NOT ('ANALYSIS_CHARACTERIZED_ARM.PRODUCT_CONFIGURATION' IN TYPEOF(SELF));
  wr24 : NOT ('ANALYSIS_CHARACTERIZED_ARM.PRODUCT_VERSION' IN TYPEOF(SELF));
  wr25 : NOT ('ANALYSIS_CHARACTERIZED_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr26 : NOT ('ANALYSIS_CHARACTERIZED_ARM.REQUIREMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr27 : NOT ('ANALYSIS_CHARACTERIZED_ARM.SECURITY_CLASSIFICATION' IN TYPEOF(SELF));
  wr28 : NOT ('ANALYSIS_CHARACTERIZED_ARM.STOCK_MATERIAL' IN TYPEOF(SELF));
  wr29 : NOT ('ANALYSIS_CHARACTERIZED_ARM.SUPPLIED_PART_RELATIONSHIP' IN TYPEOF(SELF));
  wr30 : NOT ('ANALYSIS_CHARACTERIZED_ARM.WORK_ORDER' IN TYPEOF(SELF));
  wr31 : NOT ('ANALYSIS_CHARACTERIZED_ARM.WORK_REQUEST' IN TYPEOF(SELF));
END_TYPE;


(* Pruned unused type: analysis_classification_item  *)


(* Pruned unused type: analysis_contract_item  *)


(* Pruned unused type: analysis_date_or_date_time_item  *)


(* Pruned unused type: analysis_organization_or_person_in_organization_item  *)


(* Pruned unused type: analysis_security_classification_item  *)


(* Pruned unused type: analysis_identification_item  *)

(* USED FROM (Cfd_model_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE coordinate_data_name = ENUMERATION OF (
   coordinate_eta,
   coordinate_normal,
   coordinate_phi,
   coordinate_r,
   coordinate_tangential,
   coordinate_theta,
   coordinate_transform,
   coordinate_x,
   coordinate_xi,
   coordinate_y,
   coordinate_z,
   coordinate_zeta);
END_TYPE;

(* USED FROM (Finite_elements_arm); *)
TYPE definition_element = SELECT 
  (Curve_element,
   Shape_element,
   Surface_element,
   Volume_element);
END_TYPE;
(* USED FROM (Finite_elements_arm); *)
TYPE element_property_select = SELECT 
  (Curve_property,
   Surface_property);
END_TYPE;
(* USED FROM (Finite_elements_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE fe_model_approval_item = analysis_approval_item;
WHERE
  wr1 : NOT ('FINITE_ELEMENTS_ARM.ACTIVITY' IN TYPEOF(SELF));
  wr2 : NOT ('FINITE_ELEMENTS_ARM.ALTERNATE_PART_RELATIONSHIP' IN TYPEOF(SELF));
  wr3 : NOT ('FINITE_ELEMENTS_ARM.APPLIED_ACTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr4 : NOT ('FINITE_ELEMENTS_ARM.APPLIED_INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr5 : NOT ('FINITE_ELEMENTS_ARM.ASSEMBLY_RELATIONSHIP_SUBSTITUTION' IN TYPEOF(SELF));
  wr6 : NOT ('FINITE_ELEMENTS_ARM.CERTIFICATION' IN TYPEOF(SELF));
  wr7 : NOT ('FINITE_ELEMENTS_ARM.CONTRACT' IN TYPEOF(SELF));
  wr8 : NOT ('FINITE_ELEMENTS_ARM.DIGITAL_DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr9 : NOT ('FINITE_ELEMENTS_ARM.DOCUMENT' IN TYPEOF(SELF));
  wr10 : NOT ('FINITE_ELEMENTS_ARM.DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr11 : NOT ('FINITE_ELEMENTS_ARM.DOCUMENT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr12 : NOT ('FINITE_ELEMENTS_ARM.DOCUMENT_VERSION' IN TYPEOF(SELF));
  wr13 : NOT ('FINITE_ELEMENTS_ARM.EFFECTIVITY' IN TYPEOF(SELF));
  wr14 : NOT ('FINITE_ELEMENTS_ARM.FE_ANALYSIS' IN TYPEOF(SELF));
  wr15 : NOT ('FINITE_ELEMENTS_ARM.FE_ANALYSIS_RESULTS' IN TYPEOF(SELF));
  wr16 : NOT ('FINITE_ELEMENTS_ARM.FILE' IN TYPEOF(SELF));
  wr17 : NOT ('FINITE_ELEMENTS_ARM.GROUP' IN TYPEOF(SELF));
  wr18 : NOT ('FINITE_ELEMENTS_ARM.GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr19 : NOT ('FINITE_ELEMENTS_ARM.INDEPENDENT_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr20 : NOT ('FINITE_ELEMENTS_ARM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr21 : NOT ('FINITE_ELEMENTS_ARM.ITEM_USAGE_EFFECTIVITY' IN TYPEOF(SELF));
  wr22 : NOT ('FINITE_ELEMENTS_ARM.PART_VERSION' IN TYPEOF(SELF));
  wr23 : NOT ('FINITE_ELEMENTS_ARM.PART_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr24 : NOT ('FINITE_ELEMENTS_ARM.PHYSICAL_DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr25 : NOT ('FINITE_ELEMENTS_ARM.PRODUCT_CONFIGURATION' IN TYPEOF(SELF));
  wr26 : NOT ('FINITE_ELEMENTS_ARM.PRODUCT_VERSION' IN TYPEOF(SELF));
  wr27 : NOT ('FINITE_ELEMENTS_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr28 : NOT ('FINITE_ELEMENTS_ARM.REQUIREMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr29 : NOT ('FINITE_ELEMENTS_ARM.SECURITY_CLASSIFICATION' IN TYPEOF(SELF));
  wr30 : NOT ('FINITE_ELEMENTS_ARM.STOCK_MATERIAL' IN TYPEOF(SELF));
  wr31 : NOT ('FINITE_ELEMENTS_ARM.SUPPLIED_PART_RELATIONSHIP' IN TYPEOF(SELF));
  wr32 : NOT ('FINITE_ELEMENTS_ARM.WORK_ORDER' IN TYPEOF(SELF));
  wr33 : NOT ('FINITE_ELEMENTS_ARM.WORK_REQUEST' IN TYPEOF(SELF));
END_TYPE;

(* USED FROM (Mesh_connectivity_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mismatched_region_type = ENUMERATION OF (
   abutting,
   overset);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE cell_shape = SELECT (
   cell_shape_0d,
   cell_shape_1d,
   cell_shape_2d,
   cell_shape_3d);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_0d = ENUMERATION OF (
   single);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_1d = ENUMERATION OF (
   line);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_2d = ENUMERATION OF (
   polygon,
   quadrilateral,
   triangle);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_3d = ENUMERATION OF (
   hexahedron,
   pyramid,
   tetrahedron,
   wedge);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
TYPE element_order = ENUMERATION OF 
  (linear,
   quadratic,
   cubic);
END_TYPE;
(* USED FROM (Mesh_topology_arm); *)
TYPE indices_group = SELECT 
  (Indices_list,
   Indices_range);
END_TYPE;
(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mesh_location = ENUMERATION OF (
   application_defined,
   cell_center,
   edge_center,
   face_center,
   iface_center,
   jface_center,
   kface_center,
   unspecified,
   vertices);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mesh_maths_space_type = ENUMERATION OF (
   cells,
   vertices);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE structured_mesh_type = ENUMERATION OF (
   pentahedral,
   pyramidal,
   rectangular,
   tetrahedral);
END_TYPE;


(* Pruned unused type: cross_section_shape_select  *)

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE choose_general_property_identifier = SELECT (
   defined_data_name,
   External_item_identification);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE choose_geometry_location = SELECT (
   External_geometric_model,
   Geometric_model);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE choose_representation_context_identifier = SELECT (
   defined_data_class,
   External_item_identification);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE defined_data_class = ENUMERATION OF (
   application_defined,
   dimensional,
   dimensionless_constant,
   dimensionless_parameter,
   normalise_by_unknown_dimensional,
   normalised_by_dimensional,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE defined_data_name = SELECT (
   coordinate_data_name,
   fd_defined_data_name);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE fd_defined_data_name = SELECT (
   fd_nondimensional_parameter_name,
   flow_solution_data_name,
   force_moment_data_name,
   gas_model_data_name,
   riemann_1d_data_name,
   thermal_conductivity_model_data_name,
   turbulence_closure_data_name,
   turbulence_model_data_name,
   viscosity_model_data_name);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE fd_nondimensional_parameter_name = ENUMERATION OF (
   coef_pressure,
   coef_pressure_dynamic,
   coef_pressure_reference,
   coef_skin_friction_x,
   coef_skin_friction_y,
   coef_skin_friction_z,
   length_reference,
   Mach,
   Mach_velocity,
   Mach_velocity_sound,
   Prandtl,
   Prandtl_specific_heat_pressure,
   Prandtl_thermal_conductivity,
   Prandtl_viscosity_molecular,
   Reynolds,
   Reynolds_length,
   Reynolds_velocity,
   Reynolds_viscosity_kinematic,
   specific_heat_ratio,
   specific_heat_ratio_pressure,
   specific_heat_ratio_volume);
END_TYPE;


(* Pruned unused type: mbna_property_distribution_select  *)


(* Pruned unused type: mbna_value_context_select  *)


(* Pruned unused type: property_distribution_select  *)


(* Pruned unused type: value_context_select  *)

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE discretised_action_model_select = SELECT (
   Fe_analysis_control_step,
   Model_action_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE discretised_product_model_select = SELECT (
   Fea_model,
   Model_product_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE discretised_state_model_select = SELECT (
   Fe_analysis_state,
   Model_state_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE idealised_action_select = SELECT (
   Activity,
   Physical_action_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE idealised_product_select = SELECT (
   Physical_product_domain,
   Product_view_definition);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE idealised_state_select = SELECT (
   Physical_state_domain,
   State_definition);
END_TYPE;

(* USED FROM (Fea_material_aspects_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE composite_structure_select = SELECT (
   Composite_assembly_sequence_definition,
   Laminate_table,
   Ply_laminate_sequence_definition);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE fd_behaviour_models = SELECT (
   Gas_model,
   Turbulence_closure,
   Turbulence_model,
   Viscosity_model);
END_TYPE;


(* Pruned unused type: fd_governing_equation_type  *)

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE force_moment_data_name = ENUMERATION OF (
   coef_drag,
   coef_length,
   coef_lift,
   coef_moment_area,
   coef_moment_eta,
   coef_moment_phi,
   coef_moment_pressure_dynamic,
   coef_moment_r,
   coef_moment_theta,
   coef_moment_x,
   coef_moment_xi,
   coef_moment_y,
   coef_moment_z,
   coef_moment_zeta,
   drag,
   force_phi,
   force_r,
   force_theta,
   force_x,
   force_y,
   force_z,
   lift,
   moment_center_x,
   moment_center_y,
   moment_center_z,
   moment_eta,
   moment_phi,
   moment_r,
   moment_theta,
   moment_x,
   moment_xi,
   moment_y,
   moment_z,
   moment_zeta);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE gas_model_data_name = ENUMERATION OF (
   ideal_gas_constant,
   specific_heat_pressure,
   specific_heat_ratio,
   specific_heat_volume);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE gas_model_type = ENUMERATION OF (
   application_defined,
   ideal,
   unspecified,
   Van_der_Waals);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mbna_behaviour_models = SELECT (
   Thermal_conductivity_model);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This ENUMERATION set has been expanded for EXPRESS E1 layout. *)
TYPE mbna_governing_equation_type = ENUMERATION OF (
   application_defined,
   Euler,
   full_potential,
   NS_laminar,
   NS_laminar_incompressible,
   NS_turbulent,
   NS_turbulent_incompressible,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE thermal_conductivity_model_data_name = ENUMERATION OF (
   constant_Prandtl,
   power_law_exponent,
   Sutherland_constant_conductivity,
   temperature_reference,
   thermal_conductivity_reference);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE thermal_conductivity_model_type = ENUMERATION OF (
   application_defined,
   constant_Prandtl,
   independent,
   power_law,
   Sutherland_law,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_closure_data_name = ENUMERATION OF (
   eddy_viscosity,
   Prandtl_turbulent);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_closure_type = ENUMERATION OF (
   application_defined,
   eddy_viscosity,
   Reynolds_stress,
   Reynolds_stress_algebraic,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_model_data_name = ENUMERATION OF (
   turbulent_BB_Reynolds,
   turbulent_dissipation,
   turbulent_dissipation_rate,
   turbulent_distance,
   turbulent_energy_kinetic,
   turbulent_SA_cb1,
   turbulent_SA_cb2,
   turbulent_SA_chi,
   turbulent_SA_ct1,
   turbulent_SA_ct2,
   turbulent_SA_ct3,
   turbulent_SA_ct4,
   turbulent_SA_cv1,
   turbulent_SA_cw1,
   turbulent_SA_cw2,
   turbulent_SA_cw3,
   turbulent_SA_kappa,
   turbulent_SA_nu_tilde,
   turbulent_SA_sigma);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_model_type = ENUMERATION OF (
   algebraic_Baldwin_Lomax,
   algebraic_Cebeci_Smith,
   application_defined,
   half_equation_Johnson_King,
   one_equation_Baldwin_Barth,
   one_equation_Spalart_Allmaras,
   two_equation_Jones_Launder,
   two_equation_Menter_SST,
   two_equation_Wilcox,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE viscosity_model_data_name = ENUMERATION OF (
   Sutherland_constant_viscosity,
   viscosity_molecular_reference);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE viscosity_model_type = ENUMERATION OF (
   application_defined,
   constant_viscosity,
   power_law,
   Sutherland_law,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_results_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE flow_solution_data_name = ENUMERATION OF (
   density,
   density_stagnation,
   energy_internal,
   energy_kinetic,
   energy_stagnation,
   energy_stagnation_density,
   enthalpy,
   enthalpy_stagnation,
   entropy,
   entropy_approx,
   ideal_gas_constant,
   mass_flow,
   momentum_magnitude,
   momentum_x,
   momentum_y,
   momentum_z,
   potential,
   pressure,
   pressure_dynamic,
   pressure_stagnation,
   Reynolds_stress_xx,
   Reynolds_stress_xy,
   Reynolds_stress_xz,
   Reynolds_stress_yy,
   Reynolds_stress_yz,
   Reynolds_stress_zz,
   skin_friction_magnitude,
   skin_friction_x,
   skin_friction_y,
   skin_friction_z,
   specific_heat_pressure,
   specific_heat_volume,
   stream_function,
   temperature,
   temperature_stagnation,
   thermal_conductivity,
   velocity_angle_x,
   velocity_angle_y,
   velocity_angle_z,
   velocity_magnitude,
   velocity_normal,
   velocity_phi,
   velocity_r,
   velocity_sound,
   velocity_sound_stagnation,
   velocity_tangential,
   velocity_theta,
   velocity_unit_vector_x,
   velocity_unit_vector_y,
   velocity_unit_vector_z,
   velocity_x,
   velocity_y,
   velocity_z,
   viscosity_eddy,
   viscosity_kinematic,
   viscosity_molecular,
   vorticity_magnitude,
   vorticity_x,
   vorticity_y,
   vorticity_z);
END_TYPE;

(* USED FROM (Finite_element_analysis_arm); *)
TYPE constraint_definition_reference = SELECT 
  (Detailed_geometric_model_element,
   Fea_group,
   Node);
END_TYPE;
(* USED FROM (Finite_element_analysis_arm); *)
TYPE definition_reference = SELECT 
  (Detailed_geometric_model_element,
   Element,
   Fea_group,
   Node);
END_TYPE;
(* USED FROM (Finite_element_analysis_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE fe_analysis_approval_item = analysis_approval_item;
WHERE
  wr1 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.ACTIVITY' IN TYPEOF(SELF));
  wr2 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.ALTERNATE_PART_RELATIONSHIP' IN TYPEOF(SELF));
  wr3 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.APPLIED_ACTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr4 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.APPLIED_INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr5 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.ASSEMBLY_RELATIONSHIP_SUBSTITUTION' IN TYPEOF(SELF));
  wr6 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.CERTIFICATION' IN TYPEOF(SELF));
  wr7 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.CONTRACT' IN TYPEOF(SELF));
  wr8 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.DIGITAL_DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr9 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.DOCUMENT' IN TYPEOF(SELF));
  wr10 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr11 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.DOCUMENT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr12 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.DOCUMENT_VERSION' IN TYPEOF(SELF));
  wr13 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.EFFECTIVITY' IN TYPEOF(SELF));
  wr14 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.FEA_MODEL' IN TYPEOF(SELF));
  wr15 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.FILE' IN TYPEOF(SELF));
  wr16 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.GROUP' IN TYPEOF(SELF));
  wr17 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr18 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.INDEPENDENT_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr19 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr20 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.ITEM_USAGE_EFFECTIVITY' IN TYPEOF(SELF));
  wr21 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.PART_VERSION' IN TYPEOF(SELF));
  wr22 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.PART_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr23 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.PHYSICAL_DOCUMENT_DEFINITION' IN TYPEOF(SELF));
  wr24 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.PRODUCT_CONFIGURATION' IN TYPEOF(SELF));
  wr25 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.PRODUCT_VERSION' IN TYPEOF(SELF));
  wr26 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr27 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.REQUIREMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr28 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.SECURITY_CLASSIFICATION' IN TYPEOF(SELF));
  wr29 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.STOCK_MATERIAL' IN TYPEOF(SELF));
  wr30 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.SUPPLIED_PART_RELATIONSHIP' IN TYPEOF(SELF));
  wr31 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.WORK_ORDER' IN TYPEOF(SELF));
  wr32 : NOT ('FINITE_ELEMENT_ANALYSIS_ARM.WORK_REQUEST' IN TYPEOF(SELF));
END_TYPE;


(* Pruned unused type: cs_material_item_select  *)

(* USED FROM (Chemical_substance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE substance_composition_basis = ENUMERATION OF (
   ATOMS,
   MASS,
   MOLES,
   VOLUME);
END_TYPE;


(* Pruned unused type: compma_material_item_select  *)

(* USED FROM (Default_tolerance_arm); *)
TYPE cell_entry_select = SELECT
   (Plus_minus_toleranced_datum, 
    Upper_lower_toleranced_datum);
END_TYPE; 
(* USED FROM (Default_tolerance_arm); *)
TYPE default_context_select = SELECT
   (Item_shape);
END_TYPE; 
(* USED FROM (Default_tolerance_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE default_setting_select = SELECT (
   General_tolerances);
END_TYPE;

(* USED FROM (Default_tolerance_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE general_tolerance_table_select = SELECT (
   General_tolerance_table);
END_TYPE;

(* USED FROM (Default_tolerance_arm); *)
TYPE limit_select = SELECT
   (Significant_number_of_digits, 
    Upper_lower_limit);
END_TYPE; 

(* Pruned unused type: design_activity_method_item  *)


(* Pruned unused type: design_approval_item  *)


(* Pruned unused type: design_pdm_affected_item_select  *)


(* Pruned unused type: design_pdm_assigned_name_select  *)


(* Pruned unused type: design_pdm_certification_item  *)


(* Pruned unused type: design_pdm_classification_item  *)


(* Pruned unused type: design_pdm_classified_attribute_select  *)


(* Pruned unused type: design_pdm_contract_item  *)


(* Pruned unused type: design_pdm_date_or_date_time_item  *)


(* Pruned unused type: design_pdm_documented_element_select  *)


(* Pruned unused type: design_pdm_groupable_item  *)


(* Pruned unused type: design_pdm_identification_item  *)


(* Pruned unused type: design_pdm_information_usage_right_item  *)


(* Pruned unused type: design_pdm_material_item_select  *)


(* Pruned unused type: design_pdm_organization_or_person_in_organization_item  *)


(* Pruned unused type: design_pdm_requirement_assignment_item  *)


(* Pruned unused type: design_pdm_requirement_source_item  *)


(* Pruned unused type: design_pdm_security_classification_item  *)


(* Pruned unused type: design_pdm_string_select  *)


(* Pruned unused type: dimension_tolerance_document_element_select  *)

(* USED FROM (Dimension_tolerance_arm); *)
TYPE dimension_value_select = SELECT
   (Dimension_value_with_limitation, 
    Numerical_item_with_unit, 
    Tolerance_range, 
    Value_limit);
END_TYPE; 
(* USED FROM (Dimension_tolerance_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE element_with_dimension_select = SELECT (
   Shape_element);
END_TYPE;

(* USED FROM (Dimension_tolerance_arm); *)
TYPE limitation_definition_select = SELECT
   (Limits_and_fits, 
    Plus_minus_bounds);
END_TYPE; 
(* USED FROM (Dimension_tolerance_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE placed_element_select = SELECT (
   constructive_element_select,
   Derived_geometry,
   element_with_dimension_select);
END_TYPE;


(* Pruned unused type: dd_view_element_select  *)

(* USED FROM (Drawing_definition_arm); *)
  TYPE draughting_titled_item = SELECT 
    (Drawing,
     Drawing_sheet);
  END_TYPE;
(* USED FROM (Geometric_validation_property_representation_arm); *)
TYPE point_or_measure = SELECT (Cartesian_point, Measure_item);
END_TYPE;
(* USED FROM (Manifold_subsurface_arm); *)
  TYPE open_shell_or_subsurface = SELECT
    (Manifold_surface_shape_representation,
     Manifold_subsurface_model);
  END_TYPE;

(* Pruned unused type: mdprwd_draughting_model_element_select  *)

(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mdprwd_element_select = SELECT (
   Axis_placement,
   Camera_model_d3);
END_TYPE;

(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mechanical_design_and_draughting_relationship_select = SELECT (
   Draughting_model,
   Geometric_model,
   Mechanical_design_presentation_representation_with_draughting,
   Mechanical_design_shaded_styled_model,
   Mechanical_representation_styled_model);
END_TYPE;

(* USED FROM (Modified_swept_solid_arm); *)
  TYPE trim_intent = ENUMERATION OF
    (blind,
     through_all,
     up_to_next,
     unspecified);
  END_TYPE;
(* USED FROM (Modified_swept_solid_arm); *)
  TYPE trim_select = SELECT
    (length_measure,
     plane_angle_measure,
     Advanced_face,
     Detailed_geometric_model_element);
  END_TYPE;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  TYPE component_class_for_assembly = SELECT 
    (Composite_assembly,
     Filament_laminate,
     Ply,
     Ply_laminate,
     Processed_core);
  END_TYPE;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  TYPE thickness_laminate_table_component = SELECT 
    (Filament_laminate,
     Ply,
     Processed_core);
  END_TYPE;
(* USED FROM (Picture_representation_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE picture_representation_element_select = SELECT (
   Axis_placement_2d,
   Styled_element);
END_TYPE;


(* Pruned unused type: pr_external_identification_item  *)

(* USED FROM (Planned_characteristic_arm); *)
  TYPE evaluation_result_value = ENUMERATION OF
    (pass,
     fail,
     undefined);
  END_TYPE;
(* USED FROM (Planned_characteristic_arm); *)
  TYPE evaluation_type = ENUMERATION OF
    (not_evaluatable,
     invalid,
     valid,
     to_be_evaluated);
  END_TYPE;
(* USED FROM (Ply_orientation_specification_arm); *)
  TYPE angle_select = SELECT 
    (Axis_placement_3d,
     Curve,
     Direction,
     Point_path);
  END_TYPE;

(* Pruned unused type: sf_property_assignment_select  *)

(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE blend_end_condition = SELECT
    (Edge_curve,
    Point_on_curve,
    Vertex);
  END_TYPE;
(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE blend_radius_variation = ENUMERATION OF
    (linear,
     cubic,
     unspecified);
  END_TYPE;
(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE sculpting_surface = SELECT
    (Advanced_face,
     Advanced_open_shell,
     Surface);
  END_TYPE;
(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE solid_with_placed_feature = SELECT
    (Solid_with_depression,
    Solid_with_protrusion,
    Solid_with_circular_pattern,
    Solid_with_rectangular_pattern);
  END_TYPE;
(* USED FROM (Surface_conditions_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE measuring_gauge_select = SELECT (
   Part_view_definition);
END_TYPE;


(* Pruned unused type: sf_material_item_select  *)

(* USED FROM (Surface_conditions_arm); *)
  TYPE shaped_element_select = SELECT
    (Shape_element,Item_shape);
  END_TYPE;
(* USED FROM (Surface_conditions_arm); *)
  TYPE texture_select = SELECT
    (Surface_texture);
  END_TYPE;

(* Pruned unused type: tr_font_select  *)

(* USED FROM (Approval_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE approval_item = SELECT (
   Activity,
   Alternate_part_relationship,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_information_usage_right,
   Assembly_relationship_substitution,
   Certification,
   Contract,
   Digital_document_definition,
   Document,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Effectivity,
   Fe_analysis,
   Fe_analysis_results,
   Fea_model,
   File,
   Group,
   Group_relationship,
   Independent_property_relationship,
   Information_usage_right,
   Item_usage_effectivity,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Requirement_assignment,
   Security_classification,
   Stock_material,
   Supplied_part_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Classification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classification_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Activity_relationship,
   Address,
   Address_assignment,
   Affected_items_assignment,
   Alternate_product_relationship,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Approval,
   Approval_assignment,
   Approval_relationship,
   Approval_status,
   Approving_person_organization,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Attribute_translation_assignment,
   Calendar_date,
   Certification,
   Certification_assignment,
   Characterizable_object,
   Class,
   classified_element_select,
   Context_dependent_unit,
   Contract,
   Contract_assignment,
   Conversion_based_unit,
   Date_or_date_time_assignment,
   Date_time,
   Derived_unit,
   Digital_document_definition,
   Digital_file,
   Directed_activity,
   Document_assignment,
   Effectivity,
   Event,
   Event_assignment,
   External_source_identification,
   File,
   File_relationship,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Language,
   Numerical_item_with_unit,
   Organization,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Part_view_definition,
   Person,
   Product,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   Representation,
   Representation_context,
   Representation_item,
   Security_classification,
   Security_classification_assignment,
   State_definition,
   State_definition_relationship,
   String_representation_item,
   Uncertainty_with_unit,
   Value_with_unit,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request,
   Work_request_status);
END_TYPE;

(* USED FROM (Contract_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE contract_item = SELECT (
   Activity,
   Analysis_version,
   Document_version,
   Information_usage_right,
   organization_or_person_in_organization_select,
   Part_version,
   Product_version,
   Work_order);
END_TYPE;

(* USED FROM (Date_time_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE date_or_date_time_item = SELECT (
   Activity,
   Analysis_discipline_definition,
   Applied_activity_assignment,
   Certification,
   Contract,
   Digital_document_definition,
   Digital_file,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Hardcopy,
   Information_usage_right,
   Organization_or_person_in_organization_assignment,
   Physical_document_definition,
   Product_view_definition,
   Security_classification,
   Security_classification_assignment,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Person_organization_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE organization_or_person_in_organization_item = SELECT (
   Activity,
   Alias_identification,
   Alternate_part_relationship,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_independent_property,
   Approval,
   Assembly_relationship_substitution,
   Certification,
   Classification_assignment,
   Classification_association,
   Contract,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_definition,
   Document_version,
   File,
   Geometric_model,
   Hardcopy,
   Identification_assignment,
   Independent_property,
   Information_usage_right,
   Part,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product_configuration,
   Product_version_relationship,
   Project,
   Rule_action,
   Security_classification,
   Security_classification_assignment,
   Supplied_part_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Security_classification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE security_classification_item = SELECT (
   Analysis_version,
   Assembly_component_relationship,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_definition,
   Document_version,
   File,
   Hardcopy,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product_version,
   Product_view_definition,
   Promissory_usage,
   View_definition_usage);
END_TYPE;

(* USED FROM (Identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE identification_item = SELECT (
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Approval_status,
   Contract,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_definition,
   Document_version,
   Geometric_model,
   Group,
   Group_relationship,
   Hardcopy,
   Independent_property,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Material_identification,
   Organization,
   Part,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product,
   product_class,
   Product_concept,
   Product_configuration,
   Product_version,
   Requirement,
   Requirement_version,
   Requirement_view_definition,
   Rule_set,
   Security_classification,
   Shape_element_relationship,
   State_definition,
   State_definition_relationship);
END_TYPE;


(* Pruned unused type: fd_bc_type_simple  *)

(* USED FROM (Cfd_conditions_arm); *)
TYPE ijk_minmax = ENUMERATION OF 
  (i_min,
   j_min,
   k_min,
   i_max,
   j_max,
   k_max);
END_TYPE;
(* USED FROM (Cfd_conditions_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mbna_bc_type = SELECT (
   mbna_bc_type_compound,
   mbna_bc_type_simple);
END_TYPE;

(* USED FROM (Cfd_conditions_arm); *)
(* This ENUMERATION set has been expanded for EXPRESS E1 layout. *)
TYPE mbna_bc_type_compound = ENUMERATION OF (
   application_defined,
   bc_farfield,
   bc_inflow,
   bc_outflow,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_conditions_arm); *)
(* This ENUMERATION set has been expanded for EXPRESS E1 layout. *)
TYPE mbna_bc_type_simple = ENUMERATION OF (
   application_defined,
   bc_axissymmetric_wedge,
   bc_degenerate_line,
   bc_degenerate_point,
   bc_Dirichlet,
   bc_extrapolate,
   bc_general,
   bc_inflow_subsonic,
   bc_inflow_supersonic,
   bc_Neumann,
   bc_outflow_subsonic,
   bc_outflow_supersonic,
   bc_symmetry_plane,
   bc_symmetry_polar,
   bc_tunnel_inflow,
   bc_tunnel_outflow,
   bc_wall,
   bc_wall_inviscid,
   bc_wall_viscous,
   bc_wall_viscous_heat_flux,
   bc_wall_viscous_isothermal,
   unspecified);
END_TYPE;


(* Pruned unused type: md_bc_type_compound  *)

(* USED FROM (Cfd_conditions_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE riemann_1d_data_name = ENUMERATION OF (
   characteristic_acoustic_minus,
   characteristic_acoustic_plus,
   characteristic_entropy,
   characteristic_vorticity1,
   characteristic_vorticity2,
   Riemann_invariant_minus,
   Riemann_invariant_plus);
END_TYPE;

(* USED FROM (Elemental_geometric_shape_arm); *)
  TYPE cartesian_transformation = SELECT (
    Cartesian_transformation_2d, 
	Cartesian_transformation_3d);
  END_TYPE;
(* USED FROM (Elemental_geometric_shape_arm); *)
  TYPE geometric_mapping_target = SELECT (
    Axis_placement, 
    cartesian_transformation);
  END_TYPE;
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE described_element_select = SELECT (
    View_definition_usage,
    Product_occurrence_definition_relationship);
  END_TYPE;  
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE geometric_item_specific_usage_select = SELECT (
    Shape_element,
    Shape_element_relationship);
  END_TYPE;  
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shape_dependent_select = SELECT
    (Item_shape, 
     Shape_element);
  END_TYPE; 
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shape_model = SELECT
    (External_geometric_model, 
     Geometric_model);
  END_TYPE; 
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shape_select = SELECT
    (Item_shape, 
     Shape_element, 
     Shape_element_relationship);
  END_TYPE; 
(* USED FROM (Shape_property_assignment_arm); *)
  TYPE shapeable_item = SELECT
    (Characterizable_object,
     Product_occurrence_definition_relationship, 
     Product_view_definition, 
     View_definition_usage);
  END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE any_number_value = NUMBER;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE any_string_value = STRING;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE length_measure = REAL;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE measure_value = SELECT (
   any_number_value,
   any_string_value,
   length_measure,
   plane_angle_measure);
END_TYPE;

(* USED FROM (Value_with_unit_arm); *)
TYPE plane_angle_measure = REAL;
END_TYPE; 

(* Pruned unused type: maths_value_including_maths_space  *)

(* USED FROM (Activity_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_item = SELECT (
   Assembly_component_relationship,
   Item_usage_effectivity,
   Product_version,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

(* USED FROM (External_item_identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE external_identification_item = SELECT (
   Document_definition,
   Externally_defined_activity_relationship,
   Externally_defined_address_assignment,
   Externally_defined_approval,
   Externally_defined_approval_status,
   Externally_defined_date_or_date_time_assignment,
   Externally_defined_organization_or_person_in_organization_assignment,
   Externally_defined_picture_representation_item,
   Externally_defined_security_classification,
   Externally_defined_work_request,
   Externally_defined_work_request_status,
   File,
   User_defined_library_or_dictionary);
END_TYPE;

(* USED FROM (Process_property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE characterized_activity_definition = SELECT (
   Activity,
   Activity_method);
END_TYPE;

(* USED FROM (Property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE property_assignment_select = SELECT (
   Breakdown_element_realization,
   Breakdown_element_usage,
   Characterizable_object,
   Document_definition,
   File,
   Part_view_definition,
   Product_view_definition,
   Shape_element,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE represented_definition = SELECT (
   Assigned_property,
   Independent_property);
END_TYPE;

(* USED FROM (Resource_property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
(* NOTE: Empty SELECT set! *)
(* TYPE characterized_resource_select = SELECT (); END_TYPE; *) 


(* Pruned unused type: state_definition_activity_item  *)


(* Pruned unused type: state_definition_classification_item  *)


(* Pruned unused type: state_definition_identification_item  *)


(* Pruned unused type: document_location_select  *)

(* USED FROM (Generic_material_aspects_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE material_item_select = SELECT (
   Anisotropic_material,
   Braided_assembly,
   Coating_layer,
   Isotropic_material,
   Laminate_table,
   Part_view_definition,
   Substance_view_definition,
   Woven_assembly);
END_TYPE;

(* USED FROM (Generic_material_aspects_arm); *)
  TYPE material_property_select = SELECT (Material_property, General_material_property);
  END_TYPE;
(* USED FROM (Generic_material_aspects_arm); *)
  TYPE dependent_or_independent_property_representation = SELECT(
    Independent_property_representation,
    Property_representation);
  END_TYPE;
(* USED FROM (Stock_material_arm); *)
  TYPE ply_stock_material = SELECT 
    (Discontinuous_fiber_assembly,
     Filament_assembly,
     Isotropic_material);
  END_TYPE;

(* Pruned unused type: sma_approval_item  *)


(* Pruned unused type: classification_item_extended  *)

(* USED FROM (Classification_with_attributes_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE classified_element_select = SELECT (
   Product,
   Product_version,
   Product_view_definition);
END_TYPE;

(* USED FROM (Classification_with_attributes_arm); *)
TYPE external_class_select = SELECT(Plib_class_reference, External_class);
END_TYPE;

(* Pruned unused type: definable_objects  *)

(* USED FROM (Information_rights_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE information_usage_right_item = SELECT (
   certification_item,
   Characterizable_object,
   classification_item,
   documented_element_select,
   identification_item,
   Organization,
   Person_in_organization,
   Product_version,
   requirement_assignment_item,
   Work_order);
END_TYPE;


(* Pruned unused type: right_approval_item  *)


(* Pruned unused type: right_contract_item  *)


(* Pruned unused type: right_date_item  *)


(* Pruned unused type: right_person_organization_item  *)


(* Pruned unused type: effectivity_item_for_replacement  *)


(* Pruned unused type: alias_identification_item_203e2  *)


(* Pruned unused type: pdm_activity_item  *)


(* Pruned unused type: pdm_affected_item_select  *)


(* Pruned unused type: pdm_approval_item  *)


(* Pruned unused type: pdm_certification_item  *)


(* Pruned unused type: pdm_classification_item  *)


(* Pruned unused type: pdm_date_or_date_time_item  *)


(* Pruned unused type: pdm_documented_element_select  *)


(* Pruned unused type: pdm_effectivity_item  *)


(* Pruned unused type: pdm_event_item  *)


(* Pruned unused type: pdm_external_class_assigned_name_select  *)


(* Pruned unused type: pdm_identification_item  *)


(* Pruned unused type: pdm_organization_or_person_in_organization_item  *)


(* Pruned unused type: pdm_project_item  *)


(* Pruned unused type: pdm_security_classification_item  *)


(* Pruned unused type: pdm_string_select  *)


(* Pruned unused type: pdm_time_interval_item  *)

(* USED FROM (Requirement_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_assignment_item = SELECT (
   Product,
   Product_class,
   Product_configuration,
   Product_version,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Requirement_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE requirement_satisfaction_item = SELECT (
   requirement_assignment_item);
END_TYPE;

(* USED FROM (Requirement_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_source_item = SELECT (
   Characterizable_object,
   Group,
   Group_relationship,
   Product,
   Product_version,
   Product_view_definition,
   Shape_element,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Specification_control_arm); *)
  TYPE breakdown_element_select = SELECT (
	Functional_element_definition,
	Physical_element_definition);
  END_TYPE;
(* USED FROM (Specification_control_arm); *)
  TYPE constraint_context_select = SELECT (Product_class);
  END_TYPE;

(* Pruned unused type: effectivity_specification_for_replacement  *)

(* USED FROM (Specification_control_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE instance_usage_context_select = SELECT (
   Collected_item_association,
   Solution_element);
END_TYPE;


(* Pruned unused type: sc_configured_element  *)

(* USED FROM (Activity_method_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_method_item = SELECT (
   Document,
   Document_version);
END_TYPE;

(* USED FROM (Attribute_classification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classified_attribute_select = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Activity_property_representation,
   Activity_relationship,
   Address_assignment,
   Affected_items_assignment,
   Alternate_part_relationship,
   Applied_activity_assignment,
   Approval,
   Approval_assignment,
   Approval_relationship,
   Approval_status,
   Approving_person_organization,
   Assigned_property,
   Certification,
   Certification_assignment,
   Context_dependent_unit,
   Contract,
   Date_or_date_time_assignment,
   Descriptive_document_property,
   Digital_file,
   Document_assignment,
   Document_definition_relationship,
   Document_location_identification,
   Document_property_representation,
   Effectivity,
   Effectivity_assignment,
   Event_assignment,
   Event_relationship,
   External_item_identification,
   External_source_identification,
   File_location_identification,
   File_relationship,
   Group,
   Group_relationship,
   Hardcopy,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Language,
   Market,
   Numerical_document_property,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Part_view_definition,
   Partial_document_assignment,
   Person_in_organization,
   Product,
   Product_concept,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project_assignment,
   Project_relationship,
   Property_representation,
   Representation,
   Representation_context,
   Representation_item,
   Security_classification,
   Time_interval_relationship,
   Uncertainty_with_unit,
   Unit,
   Value_with_unit,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request,
   Work_request_status);
END_TYPE;

(* USED FROM (Associative_draughting_elements_arm); *)
  TYPE annotation_occurrence_associativity_item = SELECT
    (Fill_area,
     Leader,
     Projection_curve);
  END_TYPE;
(* USED FROM (Associative_draughting_elements_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE draughting_model_element_select = SELECT (
   Annotation_element,
   Axis_placement,
   Camera_model_d3,
   Draughting_callout,
   Styled_model_replication);
END_TYPE;

(* USED FROM (Associative_draughting_elements_arm); *)
  TYPE draughting_model_item_association_select = SELECT
    (Annotation_element,
     Draughting_callout);
  END_TYPE;
(* USED FROM (Draughting_element_arm); *)
  TYPE annotation_plane_element = SELECT
   (Draughting_callout,
    Styled_element);
  END_TYPE;

(* Pruned unused type: de_appearance_select  *)

(* USED FROM (Draughting_element_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE draughting_callout_content_select = SELECT (
   Annotation_subfigure,
   Annotation_symbol,
   Generic_annotation_curve,
   Text);
END_TYPE;

(* USED FROM (Draughting_element_arm); *)
  TYPE plane_or_planar_box = SELECT(
    Planar_box,
    Plane);
  END_TYPE; 

(* Pruned unused type: da_draughting_callout_content_select  *)

(* USED FROM (Draughting_annotation_arm); *)
  TYPE symbol_definition_select = SELECT
    (Dimension_symbol, 
     General_symbol, 
     Geometric_tolerance_symbol, 
     Marker, 
     Surface_condition_symbol, 
     Terminator);
  END_TYPE; 
(* USED FROM (Draughting_element_specialisations_arm); *)
  TYPE chained_or_parallel = ENUMERATION OF
    (chained,
     parallel);
  END_TYPE;
(* USED FROM (Draughting_element_specialisations_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE dimension_callout_select = SELECT (
   Text);
END_TYPE;

(* USED FROM (Draughting_element_specialisations_arm); *)
  TYPE dimension_type = ENUMERATION OF 
    (angular,
     curve,
     diameter,
     leader_directed,
     linear,
     ordinate,
     radius);
  END_TYPE;
(* USED FROM (Draughting_element_specialisations_arm); *)
  TYPE primary_or_secondary = ENUMERATION OF
    (primary,
     secondary);
  END_TYPE;
(* USED FROM (Construction_geometry_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE constructive_element_select = SELECT (
   Axis_placement,
   Curve,
   point_select,
   Surface);
END_TYPE;

(* USED FROM (Construction_geometry_arm); *)
  TYPE constructive_geometry_select = SELECT
    (Constructive_geometry, 
     Geometric_model);
  END_TYPE; 

(* Pruned unused type: closed_curve  *)

(* USED FROM (Basic_geometry_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE point_select = SELECT (
   Cartesian_point,
   Point_on_curve,
   Point_on_surface);
END_TYPE;

(* USED FROM (Document_assignment_arm); *)
TYPE assigned_document_select = SELECT 
  (Document,
   Document_definition,
   Document_version,
   File);
END_TYPE;
(* USED FROM (Document_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE documented_element_select = SELECT (
   Activity,
   Activity_method,
   Class_with_attributes,
   External_item_identification,
   Externally_defined_size_dimension,
   Group,
   Group_relationship,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Material_identification,
   Part,
   Part_version,
   Part_view_definition,
   Product,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Property_value_representation,
   Representation_item,
   Rule_set,
   Shape_element,
   Shape_element_relationship,
   View_definition_relationship,
   Work_request);
END_TYPE;


(* Pruned unused type: area_select  *)

(* USED FROM (Presentation_hierarchy_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE presentation_association_select = SELECT (
   Activity,
   Activity_method,
   Activity_relationship,
   Design_constraint_definition,
   Product_concept,
   Product_version,
   Product_view_definition,
   Specification,
   Specification_category,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Presentation_hierarchy_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE view_area_element_select = SELECT (
   Axis_placement_2d,
   Styled_element,
   View_area_replication);
END_TYPE;

(* USED FROM (Presentation_hierarchy_arm); *)
  TYPE view_area_relation_type = ENUMERATION OF
    (copy,
     derivation,
     hierarchy,
     substitution,
     unspecified);
  END_TYPE;
(* USED FROM (Presentation_hierarchy_arm); *)
  TYPE view_area_replication_model = SELECT 
    (View_area, View); 
  END_TYPE;
(* USED FROM (Presentation_hierarchy_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE view_element_select = SELECT (
   Axis_placement_2d,
   Camera_image_2d_with_scale,
   Model_image_3d,
   Styled_element);
END_TYPE;

(* USED FROM (Presentation_hierarchy_arm); *)
  TYPE view_relation_type = ENUMERATION OF
    (dependency,
     unspecified);
  END_TYPE;

(* Pruned unused type: el_external_identification_item  *)

(* USED FROM (Camera_view_3d_arm); *)
  TYPE clipping_mode = ENUMERATION OF
    (union, intersection);
  END_TYPE;
(* USED FROM (Camera_view_3d_arm); *)
  TYPE light_type = ENUMERATION OF
    (ambient, directional, spot, positional);
  END_TYPE;
(* USED FROM (Camera_view_3d_arm); *)
  TYPE clipping_element = SELECT 
    (Plane, Clipping_operator);
  END_TYPE;

(* Pruned unused type: cv3_view_element_select  *)

(* USED FROM (Camera_view_3d_arm); *)
  TYPE view_projection_type = ENUMERATION OF 
    (central,
     parallel);
  END_TYPE; 

(* Pruned unused type: sal_appearance_context  *)


(* Pruned unused type: sal_appearance_select  *)


(* Pruned unused type: sal_overriding_style_context  *)

(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE boundary_class_zone = SELECT 
    (Boundary_curve_representation,
     Loop);
  END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE composite_assembly_shape = SELECT 
    (Advanced_brep_shape_representation,
     Edge_based_wireframe_shape_representation,
     Faceted_brep_shape_representation,
     Geometrically_bounded_surface_shape_representation,
     Geometrically_bounded_wireframe_shape_representation,
     Manifold_surface_shape_representation,
     Shell_based_wireframe_shape_representation,
     Three_d_geometry_set);
  END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE core_shape = SELECT 
    (Advanced_brep_shape_representation,
     Beveled_sheet_representation,
     Faceted_brep_shape_representation);
  END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE ply_laminate_shape = SELECT (
   Advanced_brep_shape_representation,
   Composite_sheet_representation,
   Csg_model,
   Curve_swept_solid,
   Elementary_brep_shape_representation,
   Faceted_brep_shape_representation,
   Three_d_geometry_set);
END_TYPE;

(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE ply_piece_shape = SELECT 
    (Ply_shape);
  END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE projection_method = ENUMERATION OF 
    (projection_reference,
     surface_normal);
  END_TYPE;

(* Pruned unused type: pr_identification_item  *)


(* Pruned unused type: pr_organization_or_person_in_organization_item  *)

(* USED FROM (Production_rule_arm); *)
TYPE clause_select = SELECT (Simple_clause, Complex_clause);
END_TYPE;
(* USED FROM (Production_rule_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE constants = SELECT (
   any_number_value,
   any_string_value,
   Logical_representation_item);
END_TYPE;

(* USED FROM (Production_rule_arm); *)
TYPE function_symbol = SELECT (any_string_value, built_in_functions);
END_TYPE;
(* USED FROM (Production_rule_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE built_in_functions = ENUMERATION OF (
   attr_val);
END_TYPE;

(* USED FROM (Production_rule_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE expression_syntax = ENUMERATION OF (
   express);
END_TYPE;


(* Pruned unused type: pr_documented_element_select  *)

(* USED FROM (Production_rule_arm); *)
TYPE predicate_symbol = STRING;
END_TYPE;
(* USED FROM (Production_rule_arm); *)
TYPE scope_select = SELECT (Rule_definition, Rule_set, Rule_set_group);
END_TYPE;
(* USED FROM (Production_rule_arm); *)
TYPE term_select = SELECT (Symbol, constants, Func, Scalar_variable, Row_value, Row_variable); 
END_TYPE;
(* USED FROM (Contextual_shape_positioning_arm); *)
  TYPE template_instance = SELECT
    (Geometric_placement_operation, 
     Geometric_model_relationship_with_transformation);
  END_TYPE; 
(* USED FROM (Contextual_shape_positioning_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE template_definition_select = SELECT (
   Geometric_model);
END_TYPE;

(* USED FROM (Procedural_solid_model_arm); *)
  TYPE solid_select = SELECT
    (Modified_solid,
     Detailed_geometric_model_element);
  END_TYPE;
(* USED FROM (Procedural_shape_model_arm); *)
  TYPE shape_model_element = SELECT
    (Detailed_topological_model_element,
     Detailed_geometric_model_element);
  END_TYPE;
(* USED FROM (Text_appearance_arm); *)
  TYPE composite_text_element_select = SELECT
    (Composite_presentable_text, 
     Text_literal);
  END_TYPE; 
(* USED FROM (Text_appearance_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE font_select = SELECT (
   Draughting_pre_defined_text_font,
   Externally_defined_text_font,
   Text_font);
END_TYPE;

(* USED FROM (Text_appearance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE text_alignment = ENUMERATION OF (
   bottom_centre,
   bottom_left,
   bottom_right,
   centre_centre,
   centre_left,
   centre_right,
   top_centre,
   top_left,
   top_right);
END_TYPE;

(* USED FROM (Text_appearance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE text_delineation = ENUMERATION OF (
   overline,
   underline);
END_TYPE;

(* USED FROM (Text_appearance_arm); *)
  TYPE text_path = ENUMERATION OF(
    left,
    right,
    up,
    down);
  END_TYPE;
(* USED FROM (Person_organization_arm); *)
TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE date_or_date_time_select = SELECT
   (Calendar_date, 
    Date_time);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE year_number = INTEGER;
END_TYPE; 

(* Pruned unused type: located_select  *)


(* Pruned unused type: maths_atom  *)


(* Pruned unused type: maths_boolean  *)


(* Pruned unused type: maths_integer  *)


(* Pruned unused type: maths_complex  *)


(* Pruned unused type: maths_real  *)


(* Pruned unused type: maths_tuple  *)


(* Pruned unused type: maths_value  *)

(* USED FROM (Foundation_state_definition_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
(* NOTE: Empty SELECT set! *)
(* TYPE state_definition_of_item = SELECT (); END_TYPE; *) 


(* Pruned unused type: sd_documented_element_select  *)


(* Pruned unused type: characteristic  *)

(* USED FROM (Characteristic_arm); *)
  TYPE characteristic_data_table_cell = SELECT ( 
    Null_representation_item, 
    String_representation_item, 
    Numerical_item_with_unit, 
    Value_list, 
    Value_set); 
  END_TYPE; 

(* Pruned unused type: c_documented_element_select  *)

(* USED FROM (Characteristic_arm); *)
  TYPE range_class = ENUMERATION OF
    (closed,
     lower_open,
     upper_open,
     open);
  END_TYPE;

(* Pruned unused type: scalar_or_coordinated_characteristics  *)

(* USED FROM (Extended_date_arm); *)
  TYPE date_select = SELECT ( 
    Calendar_date, 
    Year_month, 
    Date,
    Ordinal_date, 
    Week_of_year_and_day_date);
  END_TYPE; 
(* USED FROM (Extended_date_arm); *)
  TYPE day_in_year_number = INTEGER;
    WHERE
      WR1: {1 <= SELF <= 366};
  END_TYPE; 
(* USED FROM (Extended_date_arm); *)
  TYPE day_in_week_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 7 };
  END_TYPE; 
(* USED FROM (Extended_date_arm); *)
  TYPE extended_date_time_select = SELECT (
    date_or_date_time_select, 
    date_select);  
  END_TYPE;
(* USED FROM (Extended_date_arm); *)
  TYPE week_in_year_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 53 };
  END_TYPE; 

(* Pruned unused type: external_property_select  *)

(* USED FROM (Configuration_item_arm); *)
TYPE version_or_definition = SELECT
   (Product_version, 
    Product_view_definition);
END_TYPE; 
(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_select = SELECT(
    String_representation_item, 
    Included_text_block,
    Structured_text_composition);
END_TYPE; 
(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_list = LIST[1:?] OF
string_representation_item_select;
END_TYPE;
(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_set = SET[1:?] OF string_representation_item_select;
END_TYPE;
(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_list_or_set =
 SELECT(string_representation_item_list, string_representation_item_set); 
END_TYPE;
(* USED FROM (Qualified_measure_arm); *)
  TYPE value_qualifier = SELECT
    (Precision_qualifier,
     Type_qualifier,
     Uncertainty_qualifier);
  END_TYPE;

(* Pruned unused type: external_class_assigned_name_select  *)

(* USED FROM (Name_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE assigned_name_select = SELECT (
   External_class_library,
   Group,
   Group_relationship,
   Product,
   Product_view_definition);
END_TYPE;


(* Pruned unused type: mri_alias_identification_item  *)


(* Pruned unused type: mri_approval_item  *)


(* Pruned unused type: mri_date_or_date_time_item  *)


(* Pruned unused type: mri_identification_item  *)


(* Pruned unused type: mri_organization_or_person_in_organization_item  *)


(* Pruned unused type: mri_string_select  *)

(* USED FROM (Effectivity_application_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE effectivity_item = SELECT (
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Configuration,
   Document,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Part,
   Part_definition_relationship,
   Part_version,
   Part_view_definition,
   Product_version,
   Product_view_definition,
   Replaced_usage_relationship,
   View_definition_relationship);
END_TYPE;


(* Pruned unused type: ps_product_property_assignment  *)

(* USED FROM (Work_request_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE affected_item_select = SELECT (
   Assembly_component_relationship,
   Assigned_property,
   Product_version,
   Product_view_definition,
   View_definition_relationship,
   Work_request);
END_TYPE;

(* USED FROM (Configuration_effectivity_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE item_usage_relationship_item = SELECT (
   Assembly_component_relationship,
   View_definition_usage);
END_TYPE;


(* Pruned unused type: document_management_alias_identification_item  *)


(* Pruned unused type: document_management_approval_item  *)


(* Pruned unused type: document_management_contract_item  *)


(* Pruned unused type: document_management_date_or_date_time_item  *)


(* Pruned unused type: document_management_identification_item  *)


(* Pruned unused type: document_management_person_and_organization_item  *)


(* Pruned unused type: document_management_security_classification_item  *)


(* Pruned unused type: document_management_string_select  *)

(* USED FROM (Document_properties_arm); *)
TYPE descriptive_or_numerical = SELECT
   (Descriptive_document_property, 
    Numerical_document_property);
END_TYPE; 
(* USED FROM (Document_properties_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE document_property_item = property_assignment_select;
WHERE
  wr1 : NOT ('DOCUMENT_PROPERTIES_ARM.BREAKDOWN_ELEMENT_REALIZATION' IN TYPEOF(SELF));
  wr2 : NOT ('DOCUMENT_PROPERTIES_ARM.BREAKDOWN_ELEMENT_USAGE' IN TYPEOF(SELF));
  wr3 : NOT ('DOCUMENT_PROPERTIES_ARM.CHARACTERIZABLE_OBJECT' IN TYPEOF(SELF));
  wr4 : NOT ('DOCUMENT_PROPERTIES_ARM.PART_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr5 : NOT ('DOCUMENT_PROPERTIES_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr6 : NOT ('DOCUMENT_PROPERTIES_ARM.SHAPE_ELEMENT' IN TYPEOF(SELF));
  wr7 : NOT ('DOCUMENT_PROPERTIES_ARM.VIEW_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
END_TYPE;


(* Pruned unused type: idrm_marked_item  *)


(* Pruned unused type: product_property_assignment  *)

(* USED FROM (Time_interval_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE time_interval_item = SELECT (
   Activity,
   Time_interval_effectivity);
END_TYPE;


(* Pruned unused type: requirement_view_definition_identification_item  *)


(* Pruned unused type: requirement_identification_and_version_identification_item  *)

(* USED FROM (Alternative_solution_arm); *)
  TYPE complex_product_select = SELECT
    (Alternative_solution, Functional_element_definition, Physical_element_definition);
  END_TYPE;
(* USED FROM (Product_occurrence_arm); *)
TYPE part_occurrence_select = SELECT 
 (Part_occurrence);
END_TYPE;

(* Pruned unused type: function_occurrence_select  *)


(* Pruned unused type: breakdown_element_realization_property_assignment_select  *)

(* USED FROM (Product_breakdown_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE breakdown_item = SELECT (
   Breakdown_element_definition,
   Breakdown_element_usage);
END_TYPE;

(* USED FROM (Product_breakdown_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE product_item = SELECT (
   Product_view_definition,
   View_definition_usage);
END_TYPE;

(* USED FROM (Generic_product_occurrence_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE extended_value_with_unit = SELECT (
   Value_limit,
   Value_range,
   Value_with_unit);
END_TYPE;

(* USED FROM (Specification_based_configuration_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE configured_item_select = SELECT (
   Alternative_solution);
END_TYPE;

(* USED FROM (Specification_based_configuration_arm); *)
TYPE configuration_kind = ENUMERATION OF (usage, design);
END_TYPE;
(* USED FROM (Specification_based_configuration_arm); *)
TYPE configuration_inheritance_types = ENUMERATION OF (exception_case, full_inheritance, no_inheritance);
END_TYPE;
(* USED FROM (Specification_based_configuration_arm); *)
TYPE configured_specification_select = SELECT(Class_condition_association, Class_specification_association);
END_TYPE;

(* Pruned unused type: effectivity_for_configuration  *)

(* USED FROM (Product_class_arm); *)
TYPE expression_operator = ENUMERATION OF (or_operator, and_operator, oneof_operator, not_operator);
END_TYPE;
(* USED FROM (Product_class_arm); *)
TYPE specification_operand_select = SELECT
		(Specification_expression, Specification);
END_TYPE;

(* Pruned unused type: id_for_class  *)


(* Pruned unused type: specification_for_category  *)

(* USED FROM (Group_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE groupable_item = SELECT (
   Detailed_geometric_model_element,
   Detailed_topological_model_element,
   Geometric_model_relationship_with_transformation,
   Geometric_placement_operation,
   Group_relationship,
   Shape_element,
   Styled_element);
   WHERE
  WR1: NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GROUP' IN TYPEOF(SELF));
END_TYPE; 

(* Pruned unused type: at_appearance_select  *)

(* USED FROM (Associative_text_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE text_or_composite_text = SELECT (
   Annotation_text,
   Annotation_text_character,
   Composite_presentable_text,
   Defined_character_glyph,
   Text_literal);
END_TYPE;

(* USED FROM (Associative_text_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE text_string_representation_item_select = SELECT (
   Annotation_text,
   Annotation_text_character,
   Composite_presentable_text,
   Text_literal);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE appearance_context = SELECT (
   Geometric_model_relationship,
   Group,
   Layer,
   Representation,
   Visual_appearance);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE appearance_select = SELECT (
   Curve_appearance,
   Hatch_style,
   Point_appearance,
   Solid_fill_area_style,
   Text_style,
   Tile_style);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
  TYPE context_dependent_appearance_assignment_set = SET [2:?] OF Context_dependent_appearance_assignment; 
  END_TYPE;
(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE overriding_style_context = SELECT (
   Detailed_geometric_model_element,
   Geometric_model_relationship,
   Layer,
   Styled_model);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE presented_model_select = SELECT (
   External_geometric_model,
   Styled_model);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
  TYPE styled_element_appearance = SELECT (
    Appearance_assignment, 
    context_dependent_appearance_assignment_set);
  END_TYPE;

(* Pruned unused type: fill_area_style_select  *)

(* USED FROM (General_surface_appearance_arm); *)
  TYPE surface_side = ENUMERATION OF
    (positive,
     negative,
     both);
  END_TYPE;
(* USED FROM (Layer_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE structuring_method_select = SELECT (
   Group,
   Layer);
END_TYPE;

(* USED FROM (Alias_identification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE alias_identification_item = identification_item;
WHERE
  wr1 : NOT ('ALIAS_IDENTIFICATION_ARM.ANALYSIS' IN TYPEOF(SELF));
  wr2 : NOT ('ALIAS_IDENTIFICATION_ARM.ANALYSIS_DISCIPLINE_DEFINITION' IN TYPEOF(SELF));
  wr3 : NOT ('ALIAS_IDENTIFICATION_ARM.ANALYSIS_VERSION' IN TYPEOF(SELF));
  wr4 : NOT ('ALIAS_IDENTIFICATION_ARM.GROUP' IN TYPEOF(SELF));
  wr5 : NOT ('ALIAS_IDENTIFICATION_ARM.GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr6 : NOT ('ALIAS_IDENTIFICATION_ARM.INFORMATION_RIGHT' IN TYPEOF(SELF));
  wr7 : NOT ('ALIAS_IDENTIFICATION_ARM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr8 : NOT ('ALIAS_IDENTIFICATION_ARM.INFORMATION_USAGE_RIGHT_RELATIONSHIP' IN TYPEOF(SELF));
  wr9 : NOT ('ALIAS_IDENTIFICATION_ARM.MATERIAL_IDENTIFICATION' IN TYPEOF(SELF));
  wr10 : NOT ('ALIAS_IDENTIFICATION_ARM.PRODUCT' IN TYPEOF(SELF));
  wr11 : NOT ('ALIAS_IDENTIFICATION_ARM.PRODUCT_CLASS' IN TYPEOF(SELF));
  wr12 : NOT ('ALIAS_IDENTIFICATION_ARM.PRODUCT_CONCEPT' IN TYPEOF(SELF));
  wr13 : NOT ('ALIAS_IDENTIFICATION_ARM.PRODUCT_CONFIGURATION' IN TYPEOF(SELF));
  wr14 : NOT ('ALIAS_IDENTIFICATION_ARM.PRODUCT_VERSION' IN TYPEOF(SELF));
  wr15 : NOT ('ALIAS_IDENTIFICATION_ARM.REQUIREMENT' IN TYPEOF(SELF));
  wr16 : NOT ('ALIAS_IDENTIFICATION_ARM.REQUIREMENT_VERSION' IN TYPEOF(SELF));
  wr17 : NOT ('ALIAS_IDENTIFICATION_ARM.REQUIREMENT_VIEW_DEFINITION' IN TYPEOF(SELF));
  wr18 : NOT ('ALIAS_IDENTIFICATION_ARM.RULE_SET' IN TYPEOF(SELF));
  wr19 : NOT ('ALIAS_IDENTIFICATION_ARM.SHAPE_ELEMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr20 : NOT ('ALIAS_IDENTIFICATION_ARM.STATE_DEFINITION' IN TYPEOF(SELF));
  wr21 : NOT ('ALIAS_IDENTIFICATION_ARM.STATE_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
END_TYPE;

(* USED FROM (Certification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE certification_item = SELECT (
   Alternate_product_relationship,
   Product_version,
   Product_version_relationship);
END_TYPE;

(* USED FROM (Multi_linguism_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE string_select = SELECT (
   Alias_identification,
   Alternate_part_relationship,
   Applied_independent_property,
   Approval,
   Approval_relationship,
   Approval_status,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Certification,
   Certification_assignment,
   Contract,
   Date_or_date_time_assignment,
   Detailed_geometric_model_element,
   Digital_document_definition,
   Document,
   Document_assignment,
   Document_definition_relationship,
   Document_version,
   Effectivity,
   Effectivity_relationship,
   Event,
   External_geometric_model,
   External_item_identification,
   External_source_identification,
   File_relationship,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Item_shape,
   Make_from_relationship,
   Organization_relationship,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   Representation,
   Security_classification_assignment,
   Shape_element,
   Shape_element_relationship,
   String_representation_item,
   Uncertainty_with_unit,
   View_definition_context,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Project_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE project_item = SELECT (
   Activity,
   Product_concept);
END_TYPE;

(* USED FROM (Event_arm); *)
TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 

(* Pruned unused type: spr_documented_element_select  *)


(* Pruned unused type: spr_organization_or_person_in_organization_item  *)


(* Pruned unused type: spr_product_property_assignment  *)

(* USED FROM (Event_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE event_item = SELECT (
   Project);
END_TYPE;

(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_list
    SUBTYPE OF (Measure_item);
      values : LIST[1:?] OF Measure_item;
  END_ENTITY;
(* USED FROM (Analysis_assignment_arm); *)
ENTITY Analysis_design_version_relationship
  SUBTYPE OF (Analysis_assignment);
  SELF\Analysis_assignment.applied_to : Product_version;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis
SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_discipline_definition
SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Analysis_version;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Analysis;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_version_sequence
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Analysis_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_version_relationship.related_version : Analysis_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : ANALYSIS_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : ANALYSIS_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Analysis_product_relationships_arm); *)
ENTITY Idealisation_relationship;
  id : STRING;
  name : STRING;
  description : STRING;
  idealised : Product_view_definition;
  idealisation : Temporal_spatial_domain;
END_ENTITY;
(* USED FROM (Analysis_product_relationships_arm); *)
ENTITY Analysis_view_relationship;
  id : STRING;
  name : STRING;
  description : STRING;
  viewed : Temporal_spatial_domain;
  view : Numerical_model;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Behavioural_decomposition_of_numerical_model;
  parts : SET [2 : ?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_action_domain
SUBTYPE OF (Numerical_model);
  initial : Model_state_domain;
  final : Model_state_domain;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_product_domain
SUBTYPE OF (Numerical_model);
  temporal_parts : SET [0 : ?] OF Model_action_domain;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_product_domain_with_mesh
SUBTYPE OF (Model_product_domain);
  model_mesh : Mesh;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_property_distribution;
  creating_software : STRING;
  domain : Numerical_model;
  range : Independent_property;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_state_domain
SUBTYPE OF (Numerical_model);
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Numerical_model;
  id : STRING;
  name : STRING;
  description : STRING;
  creating_software : STRING;
  intended_analysis_code : SET [1 : ?] OF STRING;
  analysis_type : STRING;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Simulation_run;
  id : STRING;
  name : STRING;
  description : STRING;
  simulated : Numerical_model;
  results : SET [0: ?] OF Model_property_distribution;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Spatial_decomposition_of_numerical_model;
  parts : SET [2 : ?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Temporal_decomposition_of_model_action;
  parts : LIST [2 : ?] OF Model_action_domain;
  whole : Model_action_domain;
END_ENTITY;
(* USED FROM (Analysis_representation_arm); *)
ENTITY Analysis_model
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Analysis_representation_context;
END_ENTITY;
(* USED FROM (Analysis_representation_arm); *)
ENTITY Analysis_representation_context
  SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Fd_step
SUBTYPE OF (Mbna_step);
  SELF\Mbna_step.zones : LIST [0 : ?] OF Fd_zone;
  SELF\Mbna_step.equations : SET [0 : ?] OF Flow_equation_set; -- LK: added "SET [0 : ?] OF"
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Fd_zone
SUBTYPE OF (Mbna_zone);
  SELF\Mbna_zone.equations : SET [0 : ?] OF Flow_equation_set;
  SELF\Mbna_zone.conditions : SET [0 : ?] OF Fd_zone_bc;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Grid_coordinates
SUBTYPE OF (Model_property_distribution);
  SELF\Model_property_distribution.domain : Model_product_domain_with_mesh;
  SELF\Model_property_distribution.range : Specified_general_property;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Grid_coordinates_with_rind
SUBTYPE OF (Grid_coordinates);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_model;
  equations : SET [0 : ?] OF Mbna_equation_set;
  data : SET [0 : ?] OF Mbna_integral_data;
  steps : LIST [0 : ?] OF Fd_step;
(*
INVERSE
  history : SET [0 : ?] OF Mbna_history FOR ;
*)
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_step;
  data : SET [0 : ?] OF Mbna_integral_data;
  equations : SET [0 : ?] OF Mbna_equation_set;
  families : SET [0 : ?] OF Mbna_family;
  refstate : SET [0 : ?] OF Mbna_reference_state;
  zones : LIST [0 : ?] OF Mbna_zone;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_structured_zone
SUBTYPE OF (Mbna_zone);
  SELF\Model_product_domain_with_mesh.model_mesh : Structured_mesh;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_unstructured_zone
SUBTYPE OF (Mbna_zone);
  SELF\Model_product_domain_with_mesh.model_mesh : Unstructured_mesh;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_zone
  SUPERTYPE OF (ONEOF (
               MBNA_STRUCTURED_ZONE,
               MBNA_UNSTRUCTURED_ZONE) ) 
    
SUBTYPE OF (Model_product_domain_with_mesh);
  cell_dimension : INTEGER;
  conditions : SET [0 : ?] OF Mbna_zone_bc;
  equations : SET [0 : ?] OF Mbna_equation_set;
  families : SET [0 : ?] OF Mbna_family;
  global_data : SET [0 : ?] OF Mbna_integral_data;
  grid_connectivity : OPTIONAL Multiple_mesh_block;
  nindices : INTEGER;
  physical_dimension : INTEGER;
  rstate : SET [0 : ?] OF Mbna_reference_state;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Curve_element
SUBTYPE OF (Element);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Curve_property;
  defined_elements : SET [1 : ?] OF Curve_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Curve_section_properties;
  property : Curve_property;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Damping_matrix
SUBTYPE OF (Matrix);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Directionally_explicit_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element
SUPERTYPE OF (ONEOF (
              VOLUME_ELEMENT,
              SURFACE_ELEMENT,
              SUBSTRUCTURE_ELEMENT,
              CURVE_ELEMENT,
              POINT_ELEMENT,
              DIRECTIONALLY_EXPLICIT_ELEMENT,
              EXPLICIT_ELEMENT));
  description : OPTIONAL Element_description;
  element_identification : STRING;
  model_ref : Fea_model;
  node_list : LIST [1 : ?] OF Node;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_description;
  description : STRING;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_property_geometric_relationship;
  geometry_ref : Detailed_geometric_model_element;
  section_ref : element_property_select;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_shape_aspect;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_shape_relationship;
  element_aspect : Element_shape_aspect;
  element_reference : Element;
  role : STRING;
  shape : Detailed_geometric_model_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Explicit_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_model;
  analysis_type : STRING;
  cae_filename : OPTIONAL STRING;
  creating_software : STRING;
  definition : Analysis_discipline_definition;
  description : Fea_model_description;
  identification : STRING;
  intended_analysis_code : STRING;
  approved_by : OPTIONAL fe_model_approval_item;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_model_description;
  description : STRING;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_group;
  description : STRING;
  elements : OPTIONAL SET [1 : ?] OF Element;
  group_identification : STRING;
  nodes : OPTIONAL SET [1 : ?] OF Node;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_group_relationship;
  relating_group : Fea_group; -- LK: was Group;
  related_group : Fea_group; -- LK: was Group;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Mass_matrix
SUBTYPE OF (Matrix);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Matrix
SUPERTYPE OF (ONEOF (
              MASS_MATRIX,
              STIFFNESS_MATRIX,
              DAMPING_MATRIX));
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Nodal_results_coordinate_system;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Node;
  description : OPTIONAL Node_description;
  location : Detailed_geometric_model_element;
  model_ref : Fea_model;
  node_identification : STRING;
  results_coordinate_space : OPTIONAL Nodal_results_coordinate_system;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Node_description;
  description : STRING;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Node_shape_relationship;
  node_reference : Node;
  role : STRING;
  shape : Detailed_geometric_model_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Point_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Stiffness_matrix
SUBTYPE OF (Matrix);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Substructure_element
SUBTYPE OF (Element);
  substructure_model_ref : Fea_model;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Substructure_node_relationship;
  relating_node : Node;
  related_node : Node;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Surface_element
SUBTYPE OF (Element);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Surface_property;
  defined_elements : SET [1 : ?] OF Surface_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Surface_thickness;
  property : Surface_property;
  thickness : length_measure;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Volume_element
SUBTYPE OF (Element);
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Listed_real_data;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Matched_mesh_connection
SUBTYPE OF (Mesh_connectivity);
  range : Indices_range;
  donor : Structured_mesh;
  donor_range : Indices_range;
  transform : ARRAY [1 : index_count] OF INTEGER;
  SELF\Mesh_connectivity.current : Structured_mesh;
WHERE
    wr1: current :<>: donor;
    wr2: donor.index_count = index_count;
    wr3: range.nindices = index_count;
    wr4: donor_range.nindices = index_count;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mesh_connectivity  SUPERTYPE OF (ONEOF (
               MATCHED_MESH_CONNECTION,
               MISMATCHED_MESH_CONNECTION) ) ;
  id : STRING;
  name : STRING;
  description : STRING;
  current : Mesh;
DERIVE
  index_count : INTEGER := current.index_count;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mesh_overset_hole
SUBTYPE OF (Mismatched_mesh_connection);
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mismatched_donor_mesh  SUPERTYPE OF (ONEOF (
               STRUCTURED_DONOR_MESH,
               UNSTRUCTURED_DONOR_MESH) ) ;
INVERSE
  connect : Mismatched_mesh_region FOR donor;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mismatched_mesh_connection
  SUPERTYPE OF (ONEOF (
               MISMATCHED_MESH_REGION,
               MESH_OVERSET_HOLE) ) 
    
SUBTYPE OF (Mesh_connectivity);
  points : indices_group;
  gridloc : mesh_location;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mismatched_mesh_region
SUBTYPE OF (Mismatched_mesh_connection);
  donor : Mismatched_donor_mesh;
  kind : mismatched_region_type;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Multiple_mesh_block;
  id : STRING;
  name : STRING;
  description : STRING;
  connectivities : LIST [0 : ?] OF Mesh_connectivity;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Structured_donor_mesh
SUBTYPE OF (Mismatched_donor_mesh);
  donor : Structured_mesh;
  points : Listed_real_data;
  vsize : INTEGER;
DERIVE
  index_count : INTEGER := donor.index_count;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Unstructured_donor_mesh
SUBTYPE OF (Mismatched_donor_mesh);
  donor : Unstructured_mesh;
  cells : indices_group;
  interpolant : Property_distribution_description;
  vsize : INTEGER;
DERIVE
  cell_dim : INTEGER := donor.cell_count;
  index_count : INTEGER := donor.index_count;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Array_based_unstructured_mesh
SUBTYPE OF (Unstructured_mesh);
  cells : ARRAY [1 : cell_count] OF Vertex_defined_cell;
WHERE
    wr1: SELF\mesh.index_count = 1;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Array_based_unstructured_mesh_and_vertices
SUBTYPE OF (Array_based_unstructured_mesh);
  vertex_count : INTEGER;
  vertices : ARRAY [1 : vertex_count] OF UNIQUE Vertex;
WHERE
    wr1: all_mesh_vertices(SELF);
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Cell_of_structured_mesh
SUBTYPE OF (Topological_region);
  the_mesh : Structured_mesh;
  cell_identifier : ARRAY [1 : index_count] OF INTEGER;
DERIVE
  index_count : INTEGER := the_mesh\mesh.index_count;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Composition_of_structured_mesh;
  part : Structured_mesh;
  whole : Structured_mesh;
  lower_vertex : ARRAY [1 : whole_indices] OF INTEGER;
  lower_face : ARRAY [1 : whole_indices] OF OPTIONAL BOOLEAN;
  used_indices : ARRAY [1 : part_indices] OF INTEGER;
  used_senses : ARRAY [1 : part_indices] OF BOOLEAN;
DERIVE
  part_indices : INTEGER := part\mesh.index_count;
  whole_indices : INTEGER := whole\mesh.index_count;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Explicit_unstructured_mesh
SUBTYPE OF (Unstructured_mesh);
  explicit_model : Fea_model;
  cells : ARRAY [1 : cell_count] OF UNIQUE element;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Explicitly_defined_cell_patch
SUBTYPE OF (Patch);
  cells : LIST [1 : ?] OF Vertex_defined_cell;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Explicitly_defined_vertex_patch
SUBTYPE OF (Patch);
  vertices : LIST [1 : ?] OF Vertex;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Indices_list;
  nindices : INTEGER;
  indices : LIST [1 : ?] OF ARRAY [1 : nindices] OF INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Indices_range;
  nindices : INTEGER;
  start : ARRAY [1 : nindices] OF INTEGER;
  finish : ARRAY [1 : nindices] OF INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Mesh
  SUPERTYPE OF (ONEOF (
               PATCH,
               STRUCTURED_MESH,
               UNSTRUCTURED_MESH) ) 
    
SUBTYPE OF (Topological_representation_item);
  description : STRING;
  index_count : INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Mesh_derived_maths_space
SUBTYPE OF (Maths_space);
  id : STRING;
  name : STRING;
  description : STRING;
  the_mesh : Mesh;
  kind : mesh_maths_space_type;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Patch

    
SUBTYPE OF (Mesh);
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Product_of_mesh;
  operands : LIST [2 : 2] OF Mesh;
  product : Mesh;
WHERE
    wr1: (this_schema + '.STRUCTURED_MESH' IN TYPEOF(operands[1])) AND (this_schema + '.STRUCTURED_MESH' IN TYPEOF(operands[2])) AND (this_schema + '.STRUCTURED_MESH' IN TYPEOF(product));
    wr2: operands[1].index_count = 1;
    wr3: operands[1].index_count + operands[2].index_count = product.index_count;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Property_distribution_description;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Rind;
  index_count : INTEGER;
  planes : ARRAY [1 : 2 * index_count] OF INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Structured_mesh
SUBTYPE OF (Mesh);
  vertex_counts : ARRAY [1 : SELF\mesh.index_count] OF INTEGER;
  kind : structured_mesh_type;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Structured_mesh_with_rind
SUBTYPE OF (Structured_mesh);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Topological_region
  SUPERTYPE OF (ONEOF (
               CELL_OF_STRUCTURED_MESH,
               VERTEX_DEFINED_CELL) ) 
    
SUBTYPE OF (Topological_representation_item);
  description : STRING;
  dimension : INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Topological_region_with_boundary
SUBTYPE OF (Topological_region);
  boundary : SET [1 : ?] OF Topological_representation_item;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Topological_representation_item
SUBTYPE OF (Detailed_topological_model_element);
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Unstructured_mesh
  SUPERTYPE OF (ONEOF (
               ARRAY_BASED_UNSTRUCTURED_MESH,
               EXPLICIT_UNSTRUCTURED_MESH) ) 
    
SUBTYPE OF (Mesh);
  cell_count : INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Vertex_defined_cell
SUBTYPE OF (Topological_region);
  shape : cell_shape;
  order : element_order;
  vertices : ARRAY [1 : vn_count] OF OPTIONAL Vertex;
DERIVE
  bound_count : INTEGER := cell_counts(SELF)[1];
  edge_node_count : INTEGER := cell_counts(SELF)[2];
  opt_node_count : INTEGER := cell_counts(SELF)[3];
  required_count : INTEGER := bound_count + edge_node_count;
  vn_count : INTEGER := required_count + opt_node_count;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Vertex_range_defined_patch
SUBTYPE OF (Patch);
  base_mesh : Structured_mesh;
  range : Indices_range;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Behavioural_decomposition_of_temporal_spatial_domain;
  parts : SET [2 : ?] OF Temporal_spatial_domain;
  whole : Temporal_spatial_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Domain_property;
  domain : Temporal_spatial_domain;
  property_type : Independent_property;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Physical_action_domain
SUBTYPE OF (Temporal_spatial_domain);
  initial : Physical_state_domain;
  final : Physical_state_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Physical_product_domain
SUBTYPE OF (Temporal_spatial_domain);
  temporal_parts : SET [0: ?] OF Physical_action_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Physical_state_domain
SUBTYPE OF (Temporal_spatial_domain);
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Spatial_decomposition_of_temporal_spatial_domain;
  parts : SET [2 : ?] OF Temporal_spatial_domain;
  whole : Temporal_spatial_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Temporal_decomposition_of_action_domain;
  parts : LIST [2 : ?] OF Physical_action_domain;
  whole : Physical_action_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Temporal_spatial_domain;
  id : STRING;
  name : STRING;
  description : STRING;
END_ENTITY;
(* USED FROM (Analysis_shape_arm); *)
ENTITY Idealized_analysis_shape
SUBTYPE OF (Shape_description_association);
  analysis_view : Analysis_discipline_definition;
  basis : Nominal_design_shape;
  defining_shape : shape_model;
END_ENTITY;
(* USED FROM (Analysis_shape_arm); *)
ENTITY Nominal_design_shape
SUBTYPE OF (Shape_description_association);
  defining_shape : shape_model;
  design_view : Product_view_definition;
END_ENTITY;
(* USED FROM (Finite_element_shape_arm); *)
ENTITY Node_shape
SUBTYPE OF (Shape_description_association);
  analysis_view : Analysis_discipline_definition;
  defining_shape : Point_model;
END_ENTITY;
(* USED FROM (Finite_element_shape_arm); *)
ENTITY Point_model
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Cfd_specified_general_property_arm); *)
ENTITY Geometry_reference;
  description : STRING;
  data : choose_geometry_location;
END_ENTITY;
(* USED FROM (Cfd_specified_general_property_arm); *)
ENTITY Specified_general_property
SUBTYPE OF (Independent_property);
  name_specifier : choose_general_property_identifier;
END_ENTITY;
(* USED FROM (Cfd_specified_general_property_arm); *)
ENTITY Specified_representation_context
SUBTYPE OF (Representation_context);
  class_specifier : choose_representation_context_identifier;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Action_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_action_model_select;
  idealised_action : idealised_action_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Element_topological_relationship;
  element_ref : element;
  item : Detailed_topological_model_element;
  aspect : Element_shape_aspect;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_beam_section_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Independent_property;
  idealising : Curve_section_properties;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_model_topological_relationship;
  item : Detailed_topological_model_element;
  model_ref : Fea_model;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_shell_section_distribution_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Assigned_property;
  idealising : Surface_property;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_shell_section_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Independent_property;
  idealising : Surface_property;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Node_topological_relationship;
  item : Detailed_topological_model_element;
  node_ref : Node;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Product_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_product_model_select;
  idealised_product : idealised_product_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_discretised_action_model;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF discretised_action_model_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_discretised_state_model;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF discretised_state_model_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_idealised_action;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF idealised_action_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_idealised_state;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF idealised_state_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY State_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_state_model_select;
  idealised_state : idealised_state_select;
END_ENTITY;
(* USED FROM (Fea_material_aspects_arm); *)
ENTITY Fea_material_definition;
  description : STRING;
  elements : SET [0 : ?] OF definition_element;
  material_identification : STRING;
END_ENTITY;
(* USED FROM (Fea_material_aspects_arm); *)
ENTITY Fea_material_property
SUBTYPE OF (Material_property_value_representation);
  property_use : Fea_material_definition;
  composite_structure : OPTIONAL composite_structure_select;
END_ENTITY;
(* USED FROM (Fea_material_aspects_arm); *)
ENTITY Fea_material_specification
SUBTYPE OF (Document_definition);
  specification_use : Fea_material_definition;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Fd_diffusion_equation
SUBTYPE OF (Fd_governing_equation);
  diffusion_model : Fd_diffusion_model;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Fd_diffusion_model;
  terms : ARRAY [1 : diff] OF BOOLEAN;
  diff : INTEGER;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Fd_governing_equation
SUBTYPE OF (Mbna_governing_equation);
 (*
  SELF\Mbna_governing_equation.equation_type : fd_governing_equation_type;
*)
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Flow_equation_set
SUBTYPE OF (Mbna_equation_set);
  SELF\Mbna_equation_set.equations : Fd_governing_equation;
  fd_models : SET [0 : ?] OF fd_behaviour_models;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Gas_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : gas_model_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_behaviour_model
  SUPERTYPE OF (ONEOF (
               THERMAL_CONDUCTIVITY_MODEL,
               GAS_MODEL,
               TURBULENCE_CLOSURE,
               TURBULENCE_MODEL,
               VISCOSITY_MODEL) ) 
    
SUBTYPE OF (Mbna_equation);
(*
INVERSE
  data : SET [0 : ?] OF Model_property_distribution FOR ;
*)
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_equation
  SUPERTYPE OF (ONEOF (
               MBNA_EQUATION_SET,
               MBNA_GOVERNING_EQUATION,
               MBNA_BEHAVIOUR_MODEL) ) 
    
SUBTYPE OF (Model_product_domain);
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_equation_set
SUBTYPE OF (Mbna_equation);
  dimension : INTEGER;
  equations : Mbna_governing_equation;
  mbna_models : SET [0 : ?] OF mbna_behaviour_models;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_governing_equation
SUBTYPE OF (Mbna_equation);
  equation_type : mbna_governing_equation_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Thermal_conductivity_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : thermal_conductivity_model_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Turbulence_closure
SUBTYPE OF (Mbna_behaviour_model);
  closure_type : turbulence_closure_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Turbulence_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : turbulence_model_type;
  diffusion_model : OPTIONAL Fd_diffusion_model;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Viscosity_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : viscosity_model_type;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_discrete_data
SUBTYPE OF (Mbna_result);
  gridloc : mesh_location;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_discrete_data_with_rind
SUBTYPE OF (Mbna_discrete_data);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_history
SUBTYPE OF (Mbna_result);
  notes : LIST [0 : ?] OF STRING;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_result
  SUPERTYPE OF (ONEOF (
               MBNA_SOLUTION,
               MBNA_HISTORY,
               MBNA_DISCRETE_DATA) ) 
    
SUBTYPE OF (Model_property_distribution);
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_solution
SUBTYPE OF (Mbna_result);
  gridloc : mesh_location;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_solution_with_rind
SUBTYPE OF (Mbna_solution);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Analysis_message
SUBTYPE OF (Fe_analysis_state_definition);
  message_level : STRING;
  quality : STRING;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Analysis_report_representation
SUPERTYPE OF (
              GRAPHICAL_REPRESENTATION
              ANDOR 
              TABULAR_REPRESENTATION);
  control : OPTIONAL Fe_analysis;
  model_ref : Fea_model;
  result : OPTIONAL Fe_analysis_results;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Calculated_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Constraint
SUPERTYPE OF (ONEOF (
              SINGLE_POINT_CONSTRAINT,
              LINEAR_CONSTRAINT_EQUATION,
              NODAL_DEGREE_OF_FREEDOM_REDUCTION));
  identification : STRING;
  steps : SET [1 : ?] OF Fe_analysis_control_step;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Element_field_variable_definition
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Element_nodal_freedom_actions
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis;
  approved_by : OPTIONAL Fe_analysis_approval_item;
  intended_analysis_code : STRING;
  model_ref : Fea_model;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_control_step
SUPERTYPE OF (ONEOF (
              MODES_AND_FREQUENCIES_CONTROL_STEP,
              STATIC_CONTROL_STEP));
  analysis : Fe_analysis;
  identification : STRING;
  initial_input_state : Fe_analysis_state;
  sequence : INTEGER;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_results;
  approved_by : OPTIONAL Fe_analysis_approval_item;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_results_step
SUPERTYPE OF (ONEOF (
              MODES_AND_FREQUENCIES_RESULTS_STEP,
              STATIC_RESULTS_STEP));
  control : Fe_analysis_control_step;
  result : Fe_analysis_results;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_state
SUPERTYPE OF (ONEOF (
              CALCULATED_STATE,
              LINEARLY_SUPERIMPOSED_STATE,
              OUTPUT_REQUEST_STATE,
              SPECIFIED_STATE));
  definitions : SET [1 : ?] OF Fe_analysis_state_definition;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_state_definition
SUPERTYPE OF (ONEOF (
              ANALYSIS_MESSAGE,
              ELEMENT_FIELD_VARIABLE_DEFINITION,
              ELEMENT_NODAL_FREEDOM_ACTIONS,
              LINEAR_CONSTRAINT_EQUATION_VALUE,
              NODAL_FREEDOM_DEFINITIONS,
              SINGLE_POINT_CONSTRAINT_VALUES));
  ref : Definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Graphical_representation
SUBTYPE OF (Analysis_report_representation);
  graphical_filename : STRING;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Linear_constraint_equation
SUBTYPE OF (Constraint);
  freedoms_and_coefficients_nodes : SET [1 : ?] OF Constraint_definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Linear_constraint_equation_value
SUBTYPE OF (Fe_analysis_state_definition);
  equation : Linear_constraint_equation;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Linearly_superimposed_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Modes_and_frequencies_control_step
SUBTYPE OF (Fe_analysis_control_step);
  final_input_state : Fe_analysis_state;
  frequency_range : LIST [1 : 2] OF REAL;
  number_of_modes : INTEGER;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Modes_and_frequencies_results_step
SUBTYPE OF (Fe_analysis_results_step);
  resulting_states : SET [1 : ?] OF Calculated_state;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Nodal_degree_of_freedom_reduction
SUBTYPE OF (Constraint);
  node : Constraint_definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Nodal_freedom_definitions
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Output_request_state
SUBTYPE OF (Fe_analysis_state);
  steps : SET [1 : ?] OF Fe_analysis_control_step;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Single_point_constraint
SUBTYPE OF (Constraint);
  required_node : Constraint_definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Single_point_constraint_values
SUBTYPE OF (Fe_analysis_state_definition);
  element : Single_point_constraint;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Specified_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Static_control_step
SUBTYPE OF (Fe_analysis_control_step);
  final_input_state : Fe_analysis_state;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Static_results_step
SUBTYPE OF (Fe_analysis_results_step);
  resulting_state : Calculated_state;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Tabular_representation
SUBTYPE OF (Analysis_report_representation);
  tabular_filename : STRING;
END_ENTITY;
(* USED FROM (Mesh_function_arm); *)
ENTITY Mesh_function;
  mesh : Mesh;
  basis : LIST [0 : ?] OF Mesh_function_basis;
  uniform : BOOLEAN;
  vertex_values : BOOLEAN;
END_ENTITY;
(* USED FROM (Mesh_function_arm); *)
ENTITY Mesh_function_basis;
  cell_topological_dimension : INTEGER;
  value_array_dimension : INTEGER;
  value_array_order : ARRAY [1 : value_array_dimension] OF INTEGER;
END_ENTITY;
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Chemical_compound 
    SUBTYPE OF (Substance); 
    DERIVE
  	  id_owner: SET[0:?] OF Organization_or_person_in_organization_assignment :=
        QUERY(temp <* bag_to_set(USEDIN(SELF,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
        'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS')) |
                         (temp.role = 'id owner') );
    WHERE 
      WR1 : EXISTS (id_owner) AND (SIZEOF(id_owner) = 1);
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Chemical_element 
    SUBTYPE OF (Substance); 
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Physical_particle
    SUBTYPE OF (Substance);
  END_ENTITY;
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Raw_material_definition_relationship
    SUBTYPE OF (View_definition_usage);
   	  SELF\View_definition_relationship.relating_view : Part_view_definition;  -- application : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\View_definition_relationship.related_view : Substance_view_definition;  -- definition : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      application : PART_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      definition : SUBSTANCE_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
  WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance
    SUPERTYPE OF (ONEOF (
              CHEMICAL_ELEMENT,
              CHEMICAL_COMPOUND,
              PHYSICAL_PARTICLE))
  SUBTYPE OF (Product);    
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance_composition_relationship 
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.related_view : Substance_view_definition;  -- constituent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\View_definition_relationship.relating_view : Substance_view_definition;  -- whole : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      composition_basis                                                  : Substance_composition_basis;

      determination_method                                               : STRING; 

      amount 															 : Value_with_unit; 
    DERIVE
      constituent : SUBSTANCE_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      whole : SUBSTANCE_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
 WHERE
      WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_UNIT' IN TYPEOF(amount.unit);      
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance_version 
    SUBTYPE OF (Product_version); 
    SELF\Product_version.of_product : Substance; 
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance_view_definition 
    SUBTYPE OF (Product_view_definition); 
    SELF\Product_view_definition.defined_version : Substance_version; 
  END_ENTITY; 
(* USED FROM (Composite_material_aspects_arm); *)
  ENTITY Composite_material_identification
    SUBTYPE OF (Material_identification);
      SELF\Material_identification.items : SET [1 : ?] OF material_item_select;  -- composite_items : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause

      (* removed : SELF\Material_identification.composite_material_name :  STRING *)
    DERIVE
      composite_items :  SET[1:?] OF MATERIAL_ITEM_SELECT := SELF\Material_identification.items;  -- ITEMS : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      composite_material_name : STRING := SELF\Material_identification.material_name;  -- MATERIAL_NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Compound_shape_representation_arm); *)
  ENTITY Compound_shape_representation
    SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_3d_arm); *)
ENTITY Csg_model
  SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Constructive_solid_geometry_3d_arm); *)
ENTITY Csg_primitive
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Curve_swept_solid_arm); *)
ENTITY Curve_swept_solid
   SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Default_setting_association;
  default_value : SET[0:?] OF default_setting_select;
  default_context : default_context_select;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY General_tolerance_table;
  tolerance_type : STRING;
INVERSE
  cell : SET[1:?] OF Tolerance_table_cell FOR tolerance_table;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY General_tolerances;
  table_definition : general_tolerance_table_select;
  tolerance_class : STRING;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Plus_minus_toleranced_datum;
  tolerance_value : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Significant_number_of_digits;
  number_of_digits : STRING;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Tolerance_table_cell;
  cell_value : cell_entry_select;
  description : STRING;
  limit : limit_select;
  tolerance_class : STRING;
  tolerance_table : General_tolerance_table;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Upper_lower_limit;
  upper_limit : Numerical_item_with_unit;
  lower_limit : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Upper_lower_toleranced_datum;
  lower_tolerance_value : Numerical_item_with_unit;
  upper_tolerance_value : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Dimension_and_tolerance_callouts_arm); *)
  ENTITY Associated_dimension_text
    SUBTYPE OF (Dimension_text);
      is_displaying : Geometric_dimension;
  END_ENTITY;
(* USED FROM (Dimension_and_tolerance_callouts_arm); *)
  ENTITY Dimension_curve_terminator_to_projection_curve_associativity
    SUBTYPE OF(Annotation_occurrence_associativity);
      SELF\Annotation_occurrence_associativity.relating_element : Dimension_curve_terminator;
      SELF\Annotation_occurrence_associativity.related_element  : Projection_curve;
  END_ENTITY;
(* USED FROM (Dimension_and_tolerance_callouts_arm); *)
  ENTITY Dimensioning_standard
    SUBTYPE OF (Document_assignment);
  END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Angular_location_dimension
  SUBTYPE OF (Location_dimension);
  orientation : Axis_placement;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Angular_size_dimension
  SUBTYPE OF (Size_dimension);
  full : BOOLEAN;
  major_angle : BOOLEAN;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Curved_distance_dimension
  SUBTYPE OF (Location_dimension);
  used_path : Measurement_path;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Curved_size_dimension
  SUBTYPE OF (Size_dimension);
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Diameter_size_dimension
  SUBTYPE OF (Size_dimension);
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Dimension_value_with_limitation;
  defined_by : limitation_definition_select;
  limited_value : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Externally_defined_size_dimension
  SUBTYPE OF (Size_dimension);
  name : STRING;
  used_path : OPTIONAL Measurement_path;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Geometric_dimension
   ABSTRACT SUPERTYPE OF (ONEOF (
                        LOCATION_DIMENSION,
                        SIZE_DIMENSION));
  id : STRING;
  dimension_value : dimension_value_select;
  notes : SET[0:?] OF STRING;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Height_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Length_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Limits_and_fits;
  deviation : STRING;
  fitting_type : OPTIONAL STRING;
  grade : STRING;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Linear_distance_dimension
  SUBTYPE OF (Location_dimension);
  orientation : OPTIONAL Axis_placement;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Location_dimension
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ANGULAR_LOCATION_DIMENSION,
                        CURVED_DISTANCE_DIMENSION,
                        LINEAR_DISTANCE_DIMENSION))
  SUBTYPE OF (Geometric_dimension);
  description : OPTIONAL STRING;
  directed : OPTIONAL BOOLEAN;
  origin : placed_element_select;
  target : placed_element_select;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Plus_minus_bounds;
  lower_bound : Value_with_unit;
  significant_digits : OPTIONAL INTEGER;
  upper_bound : Value_with_unit;
  value_determination : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Radial_size_dimension
  SUBTYPE OF (Size_dimension);
  radius_type : STRING;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Size_dimension
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ANGULAR_SIZE_DIMENSION,
                        CURVED_SIZE_DIMENSION,
                        DIAMETER_SIZE_DIMENSION,
                        EXTERNALLY_DEFINED_SIZE_DIMENSION,
                        HEIGHT_SIZE_DIMENSION,
                        LENGTH_SIZE_DIMENSION,
                        RADIAL_SIZE_DIMENSION,
                        THICKNESS_SIZE_DIMENSION,
                        WIDTH_SIZE_DIMENSION))
  SUBTYPE OF (Geometric_dimension);
  envelope_principle : OPTIONAL BOOLEAN;
  is_applied_to : element_with_dimension_select;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Thickness_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Tolerance_range;
  lower_range : Numerical_item_with_unit;
  significant_digits : OPTIONAL INTEGER;
  upper_range : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Width_size_dimension
  SUBTYPE OF (Size_dimension);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Camera_image_2d_with_scale
    SUBTYPE OF (Detailed_geometric_model_element);
      is_displaying : presented_model_select;
      source        : Camera_model_d2;
      target        : Planar_box;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Camera_model_d2
    SUBTYPE OF (Detailed_geometric_model_element);
      view_window          : Planar_box;
      view_window_clipping : BOOLEAN;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Draughting_title;
    contents : STRING;
    items    : SET [1:?] OF draughting_titled_item;
    language : STRING;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_definition; 
    drawing_number : STRING;
    drawing_type   : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing
    SUBTYPE OF (Presentation_set);
      revision_identifier : STRING;
      drawing_identifier  : Drawing_definition;
      intended_scale      : OPTIONAL STRING;
    UNIQUE
      UR1: revision_identifier, drawing_identifier;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_sequence; 
      predecessor : Drawing;
      successor   : Drawing;
    WHERE
      WR1: predecessor :<>: successor;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_sheet
    SUBTYPE OF (View_area);
      revision_identifier : STRING;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_sheet_sequence 
    SUBTYPE OF (View_area_relationship);
      SELF\View_area_relationship.relating : Drawing_sheet;
      SELF\View_area_relationship.related  : Drawing_sheet;
  WHERE
    WR1: SELF\View_area_relationship.relating :<>: SELF\View_area_relationship.related;
  END_ENTITY;
(* USED FROM (Elementary_boundary_representation_arm); *)
  ENTITY Elementary_brep_shape_representation
	SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (External_currency_arm); *)
  ENTITY External_currency
    SUBTYPE OF (Currency, External_context_dependent_unit);
  END_ENTITY;
(* USED FROM (External_representation_item_arm); *)
  ENTITY External_representation_item
    SUBTYPE OF (Representation_item);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;
(* USED FROM (External_representation_item_arm); *)
  ENTITY External_string_representation_item
    SUBTYPE OF (External_representation_item);
  END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Angularity_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Circular_runout_tolerance
  SUBTYPE OF (Geometric_tolerance);
  angle : OPTIONAL REAL;
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Coaxiality_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Common_datum
  SUBTYPE OF (Datum);
  made_up_by : SET[2:?] OF Single_datum;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Concentricity_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Cylindricity_tolerance
  SUBTYPE OF (Geometric_tolerance);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_defined_by_derived_shape
  SUBTYPE OF (Derived_geometry, Single_datum);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_defined_by_feature
  SUBTYPE OF (Single_datum);
  defined_by : Shape_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_defined_by_targets
  SUBTYPE OF (Single_datum);
  defined_by : SET[1:?] OF Datum_target;
  rule_description : STRING;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_reference;
  precedence : INTEGER;
  referenced_datum : Datum;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_target;
  id : STRING;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Flatness_tolerance
  SUBTYPE OF (Geometric_tolerance);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Geometric_tolerance
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ANGULARITY_TOLERANCE,
                        CIRCULAR_RUNOUT_TOLERANCE,
                        COAXIALITY_TOLERANCE,
                        CONCENTRICITY_TOLERANCE,
                        CYLINDRICITY_TOLERANCE,
                        FLATNESS_TOLERANCE,
                        LINE_PROFILE_TOLERANCE,
                        PARALLELISM_TOLERANCE,
                        PERPENDICULARITY_TOLERANCE,
                        POSITION_TOLERANCE,
                        ROUNDNESS_TOLERANCE,
                        STRAIGHTNESS_TOLERANCE,
                        SURFACE_PROFILE_TOLERANCE,
                        SYMMETRY_TOLERANCE,
                        TOTAL_RUNOUT_TOLERANCE));
  name : OPTIONAL STRING;
  applied_to : Shape_element;
  modification : OPTIONAL Tolerance_condition;
  qualifying_note : OPTIONAL STRING;
  segment_size : OPTIONAL Value_with_unit;
  significant_digits : OPTIONAL INTEGER;
  tolerance_value : Value_with_unit;
  value_determination : OPTIONAL STRING;
WHERE
  WR1: (NOT (EXISTS(segment_size))) OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE' IN TYPEOF(segment_size.value_component));
  WR2: (NOT (EXISTS(tolerance_value))) OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE' IN TYPEOF(tolerance_value.value_component));
  WR3: (NOT (EXISTS(significant_digits))) OR (significant_digits > 0);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Geometric_tolerance_relationship;
  relation_type : STRING;
  relating : Geometric_tolerance;
  related : Geometric_tolerance;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Line_profile_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[0:3] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Parallelism_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Perpendicularity_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[1:3] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Placed_target
   ABSTRACT SUPERTYPE OF (ONEOF (
                        TARGET_CIRCLE,
                        TARGET_POINT,
                        TARGET_RECTANGLE,
                        TARGET_STRAIGHT_LINE))
  SUBTYPE OF (Datum_target);
  defined_in : Geometric_coordinate_space;
  parameter_reference : Axis_placement;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Position_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[0:3] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Projection
  SUBTYPE OF (Tolerance_zone_definition);
  projection_end : Shape_element;
  projection_length : Value_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Roundness_tolerance
  SUBTYPE OF (Geometric_tolerance);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Single_datum
  SUBTYPE OF (Datum);
  datum_name : STRING;
  modification : OPTIONAL Tolerance_condition;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Straightness_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Surface_profile_tolerance
  SUBTYPE OF (Geometric_tolerance);
  reference_datum : SET[0:3] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Symmetry_tolerance
  SUBTYPE OF (Geometric_tolerance);
  affected_plane : OPTIONAL Axis_placement;
  reference_datum : SET[1:3] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_area
  SUBTYPE OF (Datum_target);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_circle
  SUBTYPE OF (Placed_target);
  diameter : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_point
  SUBTYPE OF (Placed_target);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_rectangle
  SUBTYPE OF (Placed_target);
  target_length : Numerical_item_with_unit;
  target_width : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_straight_line
  SUBTYPE OF (Placed_target);
  target_length : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Tolerance_condition;
  condition : STRING;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Tolerance_zone;
  form_type : STRING;
  zone_for : SET[1:?] OF Geometric_tolerance;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Tolerance_zone_definition;
  defining : Tolerance_zone;
  first_element : Shape_element;
  second_element : OPTIONAL Shape_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Total_runout_tolerance
  SUBTYPE OF (Geometric_tolerance);
  angle : REAL;
  reference_datum : SET[1:2] OF Datum_reference;
END_ENTITY;
(* USED FROM (Geometric_validation_property_representation_arm); *)
ENTITY Geometric_validation_property;
  property_representation: Representation;
  property_value  : point_or_measure;
  validated_model : Geometric_model;
WHERE
WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERICAL_REPRESENTATION_CONTEXT' IN TYPEOF(property_representation\Representation.context_of_items) ;
WR2: property_representation.name IN ['centroid', 'volume', 'surface area'];
WR3: property_value in property_representation\Representation.items;
END_ENTITY;
(* USED FROM (Inertia_characteristics_arm); *)
ENTITY Centre_of_mass
SUBTYPE OF (Shape_dependent_property_representation);
WHERE
WR1: SIZEOF(SELF\Shape_dependent_property_representation.property_representation.items)=1;
WR2: SIZEOF(QUERY (it <* SELF\Shape_dependent_property_representation.property_representation.items |
   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.CARTESIAN_POINT' IN TYPEOF(it) ))=1;
WR3: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.GEOMETRIC_COORDINATE_SPACE' IN 
	TYPEOF(SELF\Shape_dependent_property_representation.property_representation.context_of_items);
END_ENTITY;
(* USED FROM (Inertia_characteristics_arm); *)
ENTITY Inertia_matrix_item
SUBTYPE OF (Representation_item);
  inertia_values : ARRAY[1:6] OF REAL;
  common_unit: Unit;
END_ENTITY;
(* USED FROM (Inertia_characteristics_arm); *)
ENTITY Moments_of_inertia
SUBTYPE OF (Shape_dependent_property_representation);
WHERE
WR1: SIZEOF(QUERY (it <* SELF\Shape_dependent_property_representation.property_representation.items |
   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.AXIS_PLACEMENT'IN TYPEOF(it) ))=1;
WR2: SIZEOF(QUERY (it <* SELF\Shape_dependent_property_representation.property_representation.items |
   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.INERTIA_MATRIX_ITEM' IN TYPEOF(it) ))=1;
WR3: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.GEOMETRIC_COORDINATE_SPACE' IN 
	TYPEOF(SELF\Shape_dependent_property_representation.property_representation.context_of_items);
END_ENTITY;
(* USED FROM (Manifold_subsurface_arm); *)
  ENTITY Manifold_subsurface_model
    SUBTYPE OF (Geometric_model);
      parent_surface : open_shell_or_subsurface;
    WHERE
      WR1 : SELF :<>: parent_surface;
      WR2 : SELF\Geometric_model.context_of_items :=: parent_surface\Geometric_model.context_of_items;
  END_ENTITY;
(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
  ENTITY Mechanical_design_and_draughting_relationship
    SUBTYPE OF(Definitional_representation_relationship); 
      SELF\representation_relationship.rep_1 : mechanical_design_and_draughting_relationship_select; 
      SELF\representation_relationship.rep_2 : mechanical_design_and_draughting_relationship_select; 
    WHERE    
      WR1: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'DRAUGHTING_MODEL' IN TYPEOF(rep_2)) OR 
        (SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'DRAUGHTING_MODEL', 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
      WR2: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_REPRESENTATION_STYLED_MODEL' IN TYPEOF(rep_2)) 
        OR (SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_REPRESENTATION_STYLED_MODEL', 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
      WR3: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_DESIGN_SHADED_STYLED_MODEL' IN TYPEOF(rep_2)) 
        OR (SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_DESIGN_SHADED_STYLED_MODEL',
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
  END_ENTITY;  
(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
  ENTITY Mechanical_design_presentation_representation_with_draughting
    SUBTYPE OF (Styled_model); 
      SELF\Representation.items : SET [1:?] OF mdprwd_element_select; 
    WHERE 
      WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 3;
  END_ENTITY; 
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Extruded_solid_with_draft_angle
    SUBTYPE OF (Extruded_solid_with_trim_conditions);
      draft_angle : plane_angle_measure;
  END_ENTITY;
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Extruded_solid_with_multiple_draft_angles
    SUBTYPE OF (Extruded_solid_with_trim_conditions);
      draft_edges  : LIST[2:?] OF SET[1:?] OF edge_curve;
      draft_angles : LIST[2:?] OF plane_angle_measure;
    WHERE
      WR1: SIZEOF(draft_edges) = SIZEOF(draft_angles);
      WR2: SIZEOF(QUERY(q <* draft_angles | q = 0)) = 0;
  END_ENTITY;
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Extruded_solid_with_trim_conditions
    SUPERTYPE OF (ONEOF (
              EXTRUDED_SOLID_WITH_DRAFT_ANGLE,
              EXTRUDED_SOLID_WITH_MULTIPLE_DRAFT_ANGLES))
  SUBTYPE OF (Extruded_solid);
      start_condition        : trim_select;
      end_condition          : trim_select;
      start_condition_intent : trim_intent; 
      end_condition_intent   : trim_intent; 
  END_ENTITY;
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Solid_of_revolution_with_trim_conditions
    SUBTYPE OF (Solid_of_revolution);
      start_condition : trim_select;
      end_condition   : trim_select;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Composite_assembly
    SUBTYPE OF (Constituent_part);
      layup_part : Composite_assembly_table;
      shape      : OPTIONAL composite_assembly_shape;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Composite_assembly_sequence_definition;
    components_in_sequence : BAG [1:?] OF component_class_for_assembly;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Composite_assembly_table
    SUBTYPE OF (Part_laminate_table);
      sequence_groups : LIST [2:?] OF Composite_assembly_sequence_definition;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Constituent_part
    SUPERTYPE OF (ONEOF (
              PLY,
              PLY_PIECE,
              PLY_LAMINATE,
              FILAMENT_LAMINATE,
              PROCESSED_CORE,
              COMPOSITE_ASSEMBLY))
  SUBTYPE OF (Part_view_definition);
      SELF\Product_view_definition.id : STRING;               -- constituent_part_identification : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      weight                                                                   : OPTIONAL Mass_data_element;  
    DERIVE
      constituent_part_identification : STRING := SELF\Product_view_definition.id;  -- ID : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Edge_zone_shape
    SUBTYPE OF (Zone_structural_makeup_shape_representation);
      boundary : boundary_class_zone;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Filament_laminate
    SUBTYPE OF (Constituent_part);
      made_from : Filament_assembly;
      shape     : OPTIONAL Filament_laminate_shape;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Filament_laminate_shape;
    cross_section : Shape_description_association;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Laminate_table
    SUPERTYPE OF (ONEOF (
              PART_LAMINATE_TABLE,
              ZONE_STRUCTURAL_MAKEUP))
  SUBTYPE OF (Part_view_definition);
      basis             : Reinforcement_orientation_basis;
      resulting_surface : OPTIONAL Surface;
      base_surface      : OPTIONAL Surface_with_direction;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Part_laminate_table
    SUPERTYPE OF (ONEOF (
              COMPOSITE_ASSEMBLY_TABLE,
              PLY_LAMINATE_TABLE))
  SUBTYPE OF (Laminate_table);
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Percentage_laminate_table
    SUBTYPE OF (Zone_structural_makeup);
      table_components : SET [1:?] OF Percentage_ply;
      total_thickness  : Length_data_element;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Percentage_ply;
    strength_orientation  : OPTIONAL Ply_orientation_angle;
    material              : Stock_material;
    makeup_and_properties : OPTIONAL Zone_structural_makeup;
    volume_percent        : Ratio_data_element;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply
    SUBTYPE OF (Constituent_part);
      constituents         : OPTIONAL LIST [1:?] OF Ply_piece;
      ply_thickness        : Length_data_element;
      material_orientation : Direction_of_fiber_orientation_within_a_ply;
      material_type        : ply_stock_material;
      shape                : OPTIONAL Ply_shape;
    DERIVE
      material_orientation_angle : Ply_orientation_angle := material_orientation.orientations[1]; 
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_laminate
    SUBTYPE OF (Constituent_part);
      shape     : OPTIONAL ply_laminate_shape;
      ply_table : Ply_laminate_table;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_laminate_sequence_definition;
    plies_in_sequence : SET [1:?] OF Ply;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_laminate_table
    SUBTYPE OF (Part_laminate_table);
      sequence : LIST [2:?] OF Ply_laminate_sequence_definition;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_piece
    SUBTYPE OF (Constituent_part);
      shape        : OPTIONAL ply_piece_shape;
      warp_surface : LOGICAL;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Point_zone_shape
    SUBTYPE OF (Zone_structural_makeup_shape_representation);
      location : point_select;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Processed_core
    SUBTYPE OF (Constituent_part);
      added_material           : OPTIONAL LIST [0:?] OF Ply;
      cell_direction           : Direction_of_fiber_orientation_within_a_ply;
      made_from_stock          : Stock_core;
      made_from_processed_core : OPTIONAL SET [1:?] OF Processed_core;
      shape                    : OPTIONAL core_shape;
    DERIVE
      cell_orientation_angle   : Ply_orientation_angle := cell_direction.orientations[1]; 
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Smeared_material
    SUBTYPE OF (Zone_structural_makeup);
      total_thickness : Length_data_element;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Surface_with_direction;
    defining_surface   : Surface;
    material_direction : Direction;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Thickness_laminate_table
    SUBTYPE OF (Zone_structural_makeup);
      table_components : LIST [2:?] OF thickness_laminate_table_component;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Zone_structural_makeup
    SUPERTYPE OF (ONEOF ((
              SMEARED_MATERIAL
              AND 
              THICKNESS_LAMINATE_TABLE),(
              SMEARED_MATERIAL
              AND 
              PERCENTAGE_LAMINATE_TABLE),
              THICKNESS_LAMINATE_TABLE,
              PERCENTAGE_LAMINATE_TABLE,
              SMEARED_MATERIAL))
  SUBTYPE OF (Laminate_table);
      boundary : OPTIONAL Zone_structural_makeup_shape_representation;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Zone_structural_makeup_shape_representation
    SUPERTYPE OF (ONEOF (
              POINT_ZONE_SHAPE,
              EDGE_ZONE_SHAPE));
  END_ENTITY;
(* USED FROM (Picture_representation_arm); *)
  ENTITY Externally_defined_picture_representation_item 
    SUBTYPE OF (Picture_representation_item); 
    INVERSE 
      source : External_source_identification FOR item; 
    WHERE 
      WR1: NOT (SELF\Representation_item.name IN pre_defined_picture_representation_types); 
  END_ENTITY; 
(* USED FROM (Picture_representation_arm); *)
  ENTITY Picture_representation 
    SUBTYPE OF (View_area); 
      SELF\Representation.items : SET[1:?] OF picture_representation_element_select;
    WHERE
      WR1: SIZEOF(QUERY(item <* items | 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STYLED_ELEMENT' IN TYPEOF(item))) = 1;
      WR2: SIZEOF (QUERY (se <* QUERY (item <* SELF.items 
                   | ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STYLED_ELEMENT' IN TYPEOF (item))) 
         | NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PICTURE_REPRESENTATION_ITEM' 
                IN TYPEOF (se\Styled_element.element)) )) = 0;
  END_ENTITY; 
(* USED FROM (Picture_representation_arm); *)
  ENTITY Picture_representation_item 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXTERNALLY_DEFINED_PICTURE_REPRESENTATION_ITEM,
                        PREDEFINED_PICTURE_REPRESENTATION_ITEM))
  SUBTYPE OF (Bytes_representation_item);
  END_ENTITY; 
(* USED FROM (Picture_representation_arm); *)
  ENTITY Predefined_picture_representation_item 
    SUBTYPE OF (Picture_representation_item); 
    WHERE 
      WR1: SELF\Representation_item.name IN pre_defined_picture_representation_types; 
  END_ENTITY; 
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Evaluated_characteristic
    SUPERTYPE OF (
              RULE_BASED_EVALUATED_CHARACTERISTIC);
      planned_product_data          : Planned_characteristic;
      product_data_status           : evaluation_type;
      product_characterization_data : OPTIONAL SET[1:?] OF Property_value_representation;
      evaluation_result             : evaluation_result_value;
  END_ENTITY;
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Evaluation_view_definition
    SUBTYPE OF (Product_view_definition);
      evaluated_product_definition : Product_view_definition;
      evaluation_data              : SET[1:?] OF Evaluated_characteristic;
    WHERE
      WR1 : TYPEOF(SELF) <> TYPEOF(evaluated_product_definition);
  END_ENTITY;
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Planned_characteristic;
      reference_requirement              : Requirement_assignment;
      planned_coordinated_characteristic : Property_value_representation;
  END_ENTITY;
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Rule_based_evaluated_characteristic
    SUBTYPE OF (Evaluated_characteristic);
      evaluating_rule : Rule_definition;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Direction_of_fiber_orientation_within_a_ply
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space; 
      SELF\Representation.items            : SET[1:?] OF angle_select;
    INVERSE 
      orientations : SET[1:1] OF Ply_orientation_angle FOR rep_1;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Draped_orientation_angle
    SUBTYPE OF (Ply_orientation_angle);
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Laid_orientation_angle
    SUBTYPE OF (Ply_orientation_angle);
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Ply_orientation_angle 
    SUPERTYPE OF (ONEOF (
              DRAPED_ORIENTATION_ANGLE,
              LAID_ORIENTATION_ANGLE))
  SUBTYPE OF (Representation_relationship);  
      angle_reference                        : angle_select; 
      SELF\Representation_relationship.rep_1 : Direction_of_fiber_orientation_within_a_ply;
      SELF\Representation_relationship.rep_2 : Reinforcement_orientation_basis; 
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Point_and_vector
    SUBTYPE OF (Detailed_geometric_model_element);
      location : point_select;
      vector : LIST [1:2] OF Direction;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Point_path
    SUBTYPE OF (Detailed_geometric_model_element);
      directions : LIST [1:?] OF Point_and_vector;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Reinforcement_orientation_basis
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space; 
      SELF\Representation.items            : SET [1:1] OF Axis_placement_3d; 
    DERIVE
      basis_location : Cartesian_point := SELF\Representation.items[1]\Axis_placement.origin;
      orientation    : Direction       := SELF\Representation.items[1]\Axis_placement.x_axis;
    INVERSE 
      tables       : SET[1:?] OF Laminate_table FOR basis; 
      orientations : SET[1:?] OF Ply_orientation_angle FOR rep_2;
  END_ENTITY;
(* USED FROM (Representation_with_uncertainty_arm); *)
ENTITY Representation_item_with_uncertainty
  SUBTYPE OF (Representation_item);
  uncertainty : SET[1:?] OF Uncertainty_value;
END_ENTITY;
(* USED FROM (Representation_with_uncertainty_arm); *)
ENTITY Representation_with_uncertainty
  SUBTYPE OF (Representation);
  uncertainty : SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;
(* USED FROM (Representation_with_uncertainty_arm); *)
ENTITY Uncertainty_value;
  name : STRING;
  description : OPTIONAL STRING;
  uncertainty : STRING;
END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
  ENTITY Shape_feature_definition
    SUBTYPE OF (Characterizable_object);
    DERIVE
      feature_model : SET [1:?] OF Geometric_model := get_geometric_model(of_shape); 
    INVERSE
      of_shape : Item_shape FOR described_element;
    WHERE
      WR1: EXISTS(feature_model);
  END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
ENTITY Shape_feature_occurrence 
   ABSTRACT SUPERTYPE OF (ONEOF (
                        INSTANCED_FEATURE,
                        PLACED_FEATURE))
  SUBTYPE OF (Shape_element);
END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
ENTITY Instanced_feature  
  SUBTYPE OF (Shape_feature_occurrence, Shape_feature_definition);
END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
ENTITY Placed_feature  
  SUBTYPE OF (Shape_feature_occurrence);
   definition : Shape_feature_definition;
END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Advanced_open_shell
    SUBTYPE OF (Detailed_topological_model_element);    
      shell_faces : SET [1:?] OF Advanced_face;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Complex_deleted_face_solid
    SUBTYPE OF (Deleted_face_solid);
      thickened_face_list :  LIST [1:?] OF SET[1:?] OF Advanced_face;
      thickness_list      :  LIST [1:?] OF length_measure;
    WHERE
      WR1: SIZEOF(thickened_face_list) = SIZEOF(thickness_list);
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Conical_stepped_hole_transition
    SUBTYPE OF (Detailed_geometric_model_element);
      apex_angle         : plane_angle_measure;
      cone_base_radius   : length_measure;    
      transition_number  : INTEGER;
    WHERE
      WR1 : transition_number > 0;
      WR2 : cone_base_radius  > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Deleted_face_solid
    SUPERTYPE OF (ONEOF (
              DELETED_FACE_SOLID_WITH_OFFSETS,
              COMPLEX_DELETED_FACE_SOLID))
  SUBTYPE OF (Modified_solid);
      deleted_faces : SET [1:?] OF Advanced_face;
      thickness     : length_measure;
    WHERE
      WR1 : thickness <> 0.0;
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Deleted_face_solid_with_offsets
    SUBTYPE OF (Deleted_face_solid);
      thickness2 : length_measure;
    WHERE
      WR1: thickness2 <> 0.0;
      WR2: SELF\Deleted_face_solid.thickness <> thickness2;
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Path_modified_solid
    SUBTYPE OF (Solid_with_edge_modification);
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Path_modified_solid_with_end_conditions
    SUBTYPE OF (Path_modified_solid);
      end_conditions :  LIST [2:2] OF blend_end_condition; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Sculptured_solid
    SUBTYPE OF (Modified_solid);
      cutting_surface : sculpting_surface;
      positive_side   : BOOLEAN;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Sculptured_solid_with_selection
    SUBTYPE OF (Sculptured_solid);
      retained_part : Detailed_topological_model_element;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_angled_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      offset_distance             : length_measure;
      left_offset                 : BOOLEAN;
      offset_angle                : plane_angle_measure;
    WHERE
      WR1: offset_distance > 0.0;   
      WR2: offset_angle > 0.0; 
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_circular_pattern
    SUBTYPE OF (Modified_solid);
      location : Axis_placement;
      replicated_element : solid_with_placed_feature;
      replicate_count  : INTEGER;
      angular_spacing  : plane_angle_measure;
      radial_alignment : BOOLEAN;
      reference_point  : Cartesian_point;
    WHERE
     WR1 : replicate_count > 0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_circular_pocket
    SUBTYPE OF (Solid_with_pocket);
      pocket_radius      : length_measure; 
    WHERE 
      WR1: SELF\Solid_with_pocket.floor_blend_radius <= pocket_radius;
      WR2: pocket_radius > 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_circular_protrusion
    SUBTYPE OF (Solid_with_protrusion);
      radius : length_measure;
    WHERE
      WR1: radius >= 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_conical_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      semi_apex_angle : plane_angle_measure;
      tip_radius      : length_measure;
    WHERE
      WR1 : tip_radius < 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
      WR2 : tip_radius >= 0.0;
      WR3 : semi_apex_angle > 0.0;  
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_curved_slot
    SUBTYPE OF (Solid_with_slot);
     slot_centreline : Detailed_geometric_model_element;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_depression
     ABSTRACT SUPERTYPE OF (
                        SOLID_WITH_THROUGH_DEPRESSION
                        ANDOR (ONEOF (
                        SOLID_WITH_STEPPED_ROUND_HOLE,
                        SOLID_WITH_POCKET,
                        SOLID_WITH_SLOT,
                        SOLID_WITH_GROOVE)))
  SUBTYPE OF (Modified_Solid);
      location : Axis_placement; 
      depth    : length_measure;
    WHERE
      WR1 : depth > 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_double_offset_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      left_offset_distance  : length_measure;  
      right_offset_distance : length_measure;
    WHERE
      WR1: left_offset_distance > 0.0;   
      WR2: right_offset_distance > 0.0; 
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_edge_modification
    SUPERTYPE OF (
              PATH_MODIFIED_SOLID
              ANDOR (ONEOF (
              SOLID_WITH_FIXED_RADIUS_EDGE_BLEND,
              SOLID_WITH_SIMPLE_CHAMFER,
              SOLID_WITH_DOUBLE_OFFSET_CHAMFER,
              SOLID_WITH_ANGLED_CHAMFER)))
  SUBTYPE OF (Modified_solid);    
      blended_edges : LIST [1:?] OF Edge;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_fixed_radius_edge_blend
    SUBTYPE OF (Solid_with_edge_modification);
      radius : length_measure;
    WHERE
      WR1: radius > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_flat_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      fillet_radius : length_measure;
    WHERE
      WR1 : fillet_radius < 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
      WR2 : fillet_radius  >= 0.0;    
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_general_pocket  
    SUBTYPE OF (Solid_with_pocket);
      profile            : Detailed_geometric_model_element;
      reference_point    : Cartesian_point;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_general_protrusion
    SUBTYPE OF (Solid_with_protrusion);
    profile         : Detailed_geometric_model_element;
    reference_point : Cartesian_point;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_groove
    SUBTYPE OF (Solid_with_depression);
      groove_radius       : length_measure;
      groove_width        : length_measure;
      draft_angle         : plane_angle_measure;
      floor_fillet_radius : length_measure;
      external_groove     : BOOLEAN;
    WHERE
      WR1: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION' 
          IN TYPEOF(SELF));
      WR2: groove_radius > 0.0; 
      WR3: groove_width > 0.0;       
      WR4: floor_fillet_radius >= 0.0;
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_incomplete_circular_pattern
    SUBTYPE OF (Solid_with_circular_pattern);
      omitted_instances : SET[1:?] OF INTEGER;
    WHERE
      WR1: SIZEOF(omitted_instances) <
           SELF\Solid_with_circular_pattern.replicate_count;
      WR2: SIZEOF(QUERY(q <* omitted_instances | q > 
           SELF\Solid_with_circular_pattern.replicate_count)) = 0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_incomplete_rectangular_pattern
    SUBTYPE OF (Solid_with_rectangular_pattern);
      omitted_instances : SET[1:?] OF LIST [1:2] OF INTEGER;
    WHERE
      WR1: NOT([1,1] IN omitted_instances);
      WR2: SIZEOF(omitted_instances) <
            ((SELF\Solid_with_rectangular_pattern.row_count *
               SELF\Solid_with_rectangular_pattern.column_count) - 1);
      WR3: SIZEOF(QUERY(q <* omitted_instances |   
             ((q[1] > SELF\Solid_with_rectangular_pattern.row_count) OR
              (q[2] > SELF\Solid_with_rectangular_pattern.column_count)))) = 0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_offset_faces
    SUBTYPE OF (Modified_solid);
      offset_faces : LIST [1:?] OF SET[1:?] OF Advanced_face;
      offset_distances : LIST [1:?] OF length_measure;
    WHERE
      WR1: SIZEOF(offset_faces) = SIZEOF(offset_distances); 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_pocket
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SOLID_WITH_RECTANGULAR_POCKET,
                        SOLID_WITH_CIRCULAR_POCKET,
                        SOLID_WITH_GENERAL_POCKET))
  SUBTYPE OF (Solid_with_depression);
      floor_blend_radius : length_measure;
      draft_angle        : plane_angle_measure;
    WHERE
      WR1 : floor_blend_radius >= 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_protrusion
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SOLID_WITH_CIRCULAR_PROTRUSION,
                        SOLID_WITH_RECTANGULAR_PROTRUSION,
                        SOLID_WITH_GENERAL_PROTRUSION))
  SUBTYPE OF (Modified_solid);
      location : Axis_placement; 
      height      : length_measure;
      draft_angle : plane_angle_measure;
    WHERE
      WR1: height > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_rectangular_pattern
    SUBTYPE OF (Modified_solid);
      location : Axis_placement; 
      replicated_element : solid_with_placed_feature;
      row_count      : INTEGER;
      column_count   : INTEGER;
      row_spacing    : length_measure;
      column_spacing : length_measure; 
    WHERE
      WR1 : (row_count * column_count) > 1;
      WR2 : row_spacing > 0.0;
      WR3 : column_spacing > 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_rectangular_pocket
    SUBTYPE OF (Solid_with_pocket);
      pocket_length      : length_measure;
      pocket_width       : length_measure;
      corner_radius      : length_measure;
    WHERE
      WR1: (corner_radius < pocket_width/2) 
        AND (corner_radius < pocket_length/2);
      WR2: pocket_length > 0.0;
      WR3: pocket_width > 0.0;
      WR4: corner_radius >= 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_rectangular_protrusion
    SUBTYPE OF (Solid_with_protrusion);
    protrusion_length : length_measure;
    width             : length_measure;
    corner_radius     : length_measure;
  WHERE
    WR1: (corner_radius <= width/2) 
           AND (corner_radius <= protrusion_length/2);
    WR2: protrusion_length > 0.0; 
    WR3: width > 0.0; 
    WR4: corner_radius >= 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_simple_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      offset_distance : length_measure;
    WHERE
      WR1: offset_distance > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_slot
     ABSTRACT SUPERTYPE OF ((ONEOF (
                        SOLID_WITH_TRAPEZOIDAL_SLOT,
                        SOLID_WITH_TEE_SLOT))
                        AND (ONEOF (
                        SOLID_WITH_STRAIGHT_SLOT,
                        SOLID_WITH_CURVED_SLOT)))
  SUBTYPE OF (Solid_with_depression);
      slot_width     : length_measure;
      closed_ends    : LIST[2:2] OF LOGICAL;
      end_exit_faces : LIST[2:2] OF SET[0:?] OF Advanced_face;
  WHERE
    WR1: NOT(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION' 
          IN TYPEOF(SELF)) AND (closed_ends = [FALSE,FALSE]));
    WR2: NOT(((closed_ends[1] = TRUE) AND (SIZEOF(end_exit_faces[1]) <> 0))
        OR ((closed_ends[2] = TRUE) AND (SIZEOF(end_exit_faces[2]) <> 0)));
    WR3 : slot_width > 0.0;       
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_spherical_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      sphere_radius : length_measure;
    WHERE
      WR1 : sphere_radius >= 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_stepped_round_hole
    SUPERTYPE OF (
              SOLID_WITH_STEPPED_ROUND_HOLE_AND_CONICAL_TRANSITIONS
              ANDOR ONEOF (
              SOLID_WITH_FLAT_BOTTOM_HOLE,
              SOLID_WITH_CONICAL_BOTTOM_HOLE,
              SOLID_WITH_SPHERICAL_BOTTOM_HOLE))
  SUBTYPE OF (Solid_with_depression);
      segments           : INTEGER;
      segment_radii      : LIST[1:segments] OF length_measure;
      segment_depths     : LIST[1:segments] OF length_measure;
    DERIVE
      SELF\Solid_with_depression.depth : length_measure := calculate_depth(SELF);
    WHERE
      WR1: NOT (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION'
        IN TYPEOF(SELF)) AND (SIZEOF(TYPEOF(SELF) *
        ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_FLAT_BOTTOM_HOLE',
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_CONICAL_BOTTOM_HOLE',
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_SPHERICAL_BOTTOM_HOLE']) 
        <> 0)); 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_stepped_round_hole_and_conical_transitions
    SUBTYPE OF (Solid_with_stepped_round_hole);
      conical_transitions : SET[1:?] OF Conical_stepped_hole_transition; 
    WHERE
      WR1: SIZEOF (conical_transitions) <= 
         (SELF\Solid_with_stepped_round_hole.segments + 1);
      WR2: ('SOLID_SHAPE_ELEMENT_SCHEMA.SOLID_WITH_THROUGH_DEPRESSION'
         IN TYPEOF(SELF)) XOR (SIZEOF(conical_transitions) <= 
         SELF\Solid_with_stepped_round_hole.segments);
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_straight_slot
    SUBTYPE OF (Solid_with_slot);
      slot_length : length_measure;
    WHERE
      WR1: slot_length > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_tee_slot
    SUBTYPE OF (Solid_with_slot);
      tee_section_width  : length_measure;
      collar_depth       : length_measure;
    WHERE
      WR1: collar_depth < SELF\Solid_with_depression.depth;
      WR2: tee_section_width > SELF\solid_with_slot.slot_width; 
      WR3: tee_section_width > 0.0;       
      WR4: collar_depth > 0.0;       
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_through_depression
    SUBTYPE OF (Solid_with_depression);
      exit_faces : SET[1:?] OF Advanced_face;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_trapezoidal_slot
    SUBTYPE OF (Solid_with_slot);
      draft_angle         : plane_angle_measure;
      floor_fillet_radius : length_measure;
    WHERE
      WR1: floor_fillet_radius >= 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_variable_radius_edge_blend
    SUBTYPE OF (Path_modified_solid);
      interpolation_points : LIST [2:?] OF Cartesian_point;
      radii                : LIST [2:?] OF length_measure;
      variations           : LIST [2:?] OF blend_radius_variation; 
    WHERE
      WR1: SIZEOF(blended_edges) = SIZEOF(radii);
      WR2: SIZEOF(variations) = SIZEOF(interpolation_points) - 1;
      WR3: SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_FIXED_RADIUS_EDGE_BLEND',
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_SIMPLE_CHAMFER',
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_DOUBLE_OFFSET_CHAMFER',
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_ANGLED_CHAMFER'] * TYPEOF(SELF)) = 0;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Coating_layer
    SUBTYPE OF (Shape_element);
    INVERSE
      thickness : SET[0:1] OF Thickness_size_dimension FOR is_applied_to;
    WHERE
      WR1: SIZEOF(USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MATERIAL_IDENTIFICATION.ITEMS'))=1;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Contact_ratio
   SUBTYPE OF (Surface_condition);
     ratio_value     : Measure_item;
     measuring_gauge : measuring_gauge_select;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Extended_visual_appearance
    SUBTYPE OF (Visual_appearance);
      opacity          : OPTIONAL Measure_item;
      orientation      : OPTIONAL Angle_data_element;
      refraction_index : OPTIONAL Measure_item;  
      texture_map      : Digital_file;  
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Hardness
    SUBTYPE OF (Surface_condition);
      description           : OPTIONAL STRING;      
      depth                 : OPTIONAL Measure_item;      
      environment_condition : SET[0:?] OF STRING;
      hardness_value        : Measure_item;
      measuring_method      : STRING;      
      measuring_position    : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Surface_condition
     ABSTRACT SUPERTYPE OF (ONEOF (
                        CONTACT_RATIO,
                        HARDNESS,
                        TACTILE_APPEARANCE,
                        TREATMENT_RESULT,
                        VISUAL_APPEARANCE,
                        SURFACE_TEXTURE));
      value_determination : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Surface_condition_association;
    describing_surface_condition : Surface_condition;
    described_element            : shaped_element_select;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Surface_texture
    SUBTYPE OF (Surface_condition);
      measuring_method    : STRING;
      measuring_direction : OPTIONAL Measurement_path;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Surface_texture_parameter;
    parameter_value   : Measure_item;
    parameter_name    : STRING;
    described_texture : texture_select;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Tactile_appearance
    SUBTYPE OF (Surface_condition);
      id          : OPTIONAL STRING;
      name        : OPTIONAL STRING;
      depth       : OPTIONAL Measure_item;
      description : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Treatment_result
    SUBTYPE OF (Surface_condition);
      id          : OPTIONAL STRING;
      name        : OPTIONAL STRING;
      description : STRING;
      purpose     : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Visual_appearance
    SUBTYPE OF (Surface_condition);
      id           : OPTIONAL STRING;
      colour_id    : STRING;
      name         : OPTIONAL STRING;
      colour_name  : OPTIONAL STRING;
      lustre       : STRING;
      transparency : OPTIONAL STRING;
      pattern      : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Annotation_text_character 
    SUBTYPE OF (Detailed_geometric_model_element);
    replicated_model : Character_glyph_symbol; 
    source           : Axis_placement;
    target           : Axis_placement;
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Character_glyph_font_usage; 
    character : Character_glyph_symbol;
    font      : Text_font;
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Character_glyph_symbol
    SUBTYPE OF (Representation);
      SELF\Representation.name : STRING (1) FIXED;            -- character : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      character : STRING := SELF\Representation.name;         -- NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY; 
(* USED FROM (Text_representation_arm); *)
  ENTITY Text_font; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    glyphs: SET [1:?] OF Character_glyph_font_usage FOR font;
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Text_font_family; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    fonts: SET [1:?] OF Text_font_in_family FOR family;
  END_ENTITY; 
(* USED FROM (Text_representation_arm); *)
  ENTITY Text_font_in_family;
    font   : Text_font;
    family : Text_font_family;
  END_ENTITY;
(* USED FROM (Thickened_face_solid_arm); *)
  ENTITY Solid_model_element
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Thickened_face_solid_arm); *)
  ENTITY Thickened_face_solid_model_element
    SUBTYPE OF (Solid_model_element);
      base_face        : Advanced_face;
      base_thickness   : length_measure;       
      top_thickness    : length_measure;
  END_ENTITY;
(* USED FROM (Wireframe_2d_arm); *)
ENTITY Geometrically_bounded_2d_wireframe_shape_representation
  SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_APPROVAL,
               EXTERNALLY_DEFINED_APPROVAL) ) ;
  status : Approval_status;
  purpose : STRING;
  planned_date : OPTIONAL date_or_date_time_select;
  actual_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval_assignment;
  assigned_approval : Approval;
  items : SET[1:?] OF approval_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_approval : Approval;
  related_approval : Approval;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval_status  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_APPROVAL_STATUS,
               EXTERNALLY_DEFINED_APPROVAL_STATUS) ) ;
  status_name : STRING;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approving_person_organization;
  person_organization : organization_or_person_in_organization_select;
  approval_date : OPTIONAL date_or_date_time_select;
  authorized_approval : Approval;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Classification_assignment_arm); *)
ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract;
  id : STRING;
  purpose : STRING;
  kind : STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract_assignment;
  assigned_contract : Contract;
  items : SET[1:?] OF contract_item;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract_relationship;
  relating_contract : Contract;
  related_contract : Contract;
END_ENTITY;
(* USED FROM (Date_time_assignment_arm); *)
ENTITY Date_or_date_time_assignment  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_DATE_OR_DATE_TIME_ASSIGNMENT,
               EXTERNALLY_DEFINED_DATE_OR_DATE_TIME_ASSIGNMENT) ) ;
  assigned_date : date_or_date_time_select;
  role          : STRING;
  items         : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
(* USED FROM (Person_organization_assignment_arm); *)
ENTITY Organization_or_person_in_organization_assignment  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT,
               EXTERNALLY_DEFINED_ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT) ) ;
  assigned_entity : organization_or_person_in_organization_select;
  role            : STRING;
  items           : SET [1:?] OF organization_or_person_in_organization_item;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_SECURITY_CLASSIFICATION,
               EXTERNALLY_DEFINED_SECURITY_CLASSIFICATION) ) ;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification_assignment;
  classification : Security_classification;
  items : SET[1:?] OF security_classification_item;
END_ENTITY;
(* USED FROM (Identification_assignment_arm); *)
ENTITY Identification_assignment;
  identifier  : STRING;
  role        : STRING;
  description : OPTIONAL STRING;
  items       : SET [1:?] OF identification_item;
END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Product_version_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_version : Product_version;
  related_version : Product_version;
WHERE
  WR1: relating_version :<>: related_version;
  WR2: EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Supplied_part_relationship
  SUBTYPE OF (Product_version_relationship);
WHERE
  WR1: SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property  SUPERTYPE OF ( ( ONEOF (
               CHARACTERISTIC_DATA_TABLE_HEADER,
               CHARACTERISTIC_DATA_COLUMN_HEADER) )ANDOR( ONEOF (
               PLIB_PROPERTY_REFERENCE,
               EXTERNAL_LIBRARY_PROPERTY) )  ) ;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation;
  id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_context;
  id : STRING;
  kind : STRING;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_item
    ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        STYLED_ELEMENT,
                        STYLED_MODEL_REPLICATION) )ANDOR( (ONEOF (
                        CHARACTERISTIC_DATA_TABLE,
                        CHARACTERISTIC_DATA_TABLE_ROW)) )ANDOR( (ONEOF (
                        BOOLEAN_REPRESENTATION_ITEM,
                        COMPOUND_REPRESENTATION_ITEM,
                        DATE_TIME_REPRESENTATION_ITEM,
                        INTEGER_REPRESENTATION_ITEM,
                        LOGICAL_REPRESENTATION_ITEM,
                        RATIONAL_REPRESENTATION_ITEM,
                        REAL_REPRESENTATION_ITEM)) )  ) ;
  name : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY String_representation_item
    SUPERTYPE OF (ONEOF (
               TAGGED_TEXT_ITEM,
               UNIFORM_RESOURCE_IDENTIFIER) ) 
      SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Elements_bc
SUBTYPE OF (Mbna_bc);
  elements : LIST [0 : ?] OF Vertex_defined_cell;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Fd_bc
SUBTYPE OF (Mbna_bc);
  SELF\Mbna_bc.datasets : SET [0 : ?] OF Fd_bc_dataset;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Fd_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  (* SELF\Mbna_bc_dataset.the_type : Fd_bc_type_simple;*)
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Fd_zone_bc
SUBTYPE OF (Mbna_zone_bc);
  SELF\Mbna_zone_bc.conditions : SET [0 : ?] OF Fd_bc;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Indexed_elements_bc
SUBTYPE OF (Mbna_bc);
  element_indices : indices_group;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Indexed_points_bc
SUBTYPE OF (Mbna_bc);
  point_indices : indices_group;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc
  SUPERTYPE OF (ONEOF (
               ELEMENTS_BC,
               INDEXED_ELEMENTS_BC,
               INDEXED_POINTS_BC) ) 
    
SUBTYPE OF (Mbna_condition);
  datasets : SET [0 : ?] OF Mbna_bc_dataset;
  family : SET [0 : ?] OF Mbna_family;
  inward_normal_index : OPTIONAL Ijk_minmax;
  inward_normal_list : OPTIONAL Ijk_minmax;
  rstate : SET [0 : ?] OF Mbna_reference_state;
  the_type : mbna_bc_type;
  gridloc : mesh_location;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_data

    
SUBTYPE OF (Mbna_condition);
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_data_global
SUBTYPE OF (Mbna_bc_data);
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_data_local
SUBTYPE OF (Mbna_bc_data);
(*
INVERSE
  data : SET [0 : ?] OF Model_property_distribution FOR ;
*)
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_dataset
  SUPERTYPE OF (ONEOF (
               MBNA_DIRICHLET_BC_DATASET,
               MBNA_NEUMANN_BC_DATASET) ) 
    
SUBTYPE OF (Mbna_condition);
  gridloc : mesh_location;
  rstate : SET [0 : ?] OF Mbna_reference_state;
  the_type : mbna_bc_type_simple;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_condition
  SUPERTYPE OF (ONEOF (
               MBNA_ZONE_BC,
               MBNA_BC,
               MBNA_BC_DATASET,
               MBNA_BC_DATA,
               MBNA_REFERENCE_STATE,
               MBNA_INTEGRAL_DATA) ) 
    
SUBTYPE OF (Model_state_domain);
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_dirichlet_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  data : Mbna_bc_data;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_family;
  description : STRING;
  id : STRING;
  conditions : SET [0 : ?] OF mbna_bc_type;
  geometry : SET [0 : ?] OF Geometry_reference;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_integral_data
SUBTYPE OF (Mbna_condition);
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_neumann_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  data : Mbna_bc_data;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_reference_state
SUBTYPE OF (Mbna_condition);
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_zone_bc
SUBTYPE OF (Mbna_condition);
  conditions : SET [0 : ?] OF Mbna_bc;
  rstate : SET [0 : ?] OF Mbna_reference_state;
END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement
    SUPERTYPE OF (ONEOF (
              AXIS_PLACEMENT_2D,
              AXIS_PLACEMENT_3D))
  SUBTYPE OF (Detailed_geometric_model_element);
      origin : Cartesian_point;
      x_axis : Direction;
      y_axis : Direction;
    DERIVE
      dim: INTEGER := SIZEOF(origin.coordinates);
    WHERE
      WR1: dim >1;
      WR2: dim = SIZEOF(x_axis.coordinates);
      WR3: dim = SIZEOF(y_axis.coordinates);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_2d
    SUBTYPE OF (Axis_placement);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_3d
    SUBTYPE OF (Axis_placement);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_mapping;
      source : Axis_placement;
      target : Axis_placement;
    WHERE
      WR1: source\Axis_placement.dim = target\Axis_placement.dim;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_point
    SUBTYPE OF (Detailed_geometric_model_element);
      coordinates : LIST[1:3] OF length_measure;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_transformation_2d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:2] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=2;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=2;
      WR3: SIZEOF(translation.coordinates)=2;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_transformation_3d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:3] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=3;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=3;
      WR3: SIZEOF(multiplication_matrix[3]\Direction.coordinates)=3;
      WR4: SIZEOF(translation.coordinates)=3;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Detailed_geometric_model_element
      ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        CARTESIAN_POINT,
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D) )ANDOR( ONEOF (
                        CARTESIAN_POINT,
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        CURVE,
                        POINT_ON_CURVE,
                        POINT_ON_SURFACE,
                        SURFACE) )ANDOR( ONEOF (
                        CLIPPING_OPERATOR,
                        MODEL_IMAGE_3D,
                        LIGHT_SOURCE,
                        CAMERA_MODEL_D3) )ANDOR( ONEOF (
                        COMPOSITE_PRESENTABLE_TEXT,
                        TEXT_LITERAL) )ANDOR( ONEOF (
                        CAMERA_MODEL_D2,
                        CAMERA_IMAGE_2D_WITH_SCALE) )ANDOR( ONEOF (
                        POINT_AND_VECTOR,
                        POINT_PATH) )ANDOR( ONEOF (
                        ADVANCED_FACE,
                        AXIS_PLACEMENT,
                        CARTESIAN_POINT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        DIRECTION,
                        SOLID_MODEL_ELEMENT) )ANDOR( ONEOF (
                        CARTESIAN_POINT,
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        CURVE,
                        GEOMETRIC_MODEL_ELEMENT_RELATIONSHIP,
                        POINT_ON_CURVE,
                        POINT_ON_SURFACE,
                        SURFACE,
                        VECTOR) )  ) 
  SUBTYPE OF (Representation_item);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Direction
    SUBTYPE OF (Detailed_geometric_model_element);
      coordinates : LIST[2:3] OF length_measure;  
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_coordinate_space
    SUBTYPE OF (Numerical_representation_context);
      dimension_count : INTEGER;
    WHERE
      WR1: dimension_count >0;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_model
    SUBTYPE OF (Representation);
      version_id                           : OPTIONAL STRING;
      model_extent                         : OPTIONAL length_measure;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items            : SET[1:?] OF Detailed_geometric_model_element;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Contextual_item_shape
    SUBTYPE OF (Item_shape);
      SELF\Item_shape.described_element : described_element_select;
    DERIVE
      shaped_product : Product_view_definition := spa_get_definition(SELF);
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Geometric_item_specific_usage;
      name            : STRING;
      description     : OPTIONAL STRING;
      definition      : geometric_item_specific_usage_select;
      identified_item : Detailed_geometric_model_element;
      used_model      : shape_model;      
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Item_shape;
    id                : OPTIONAL STRING;
    description       : OPTIONAL STRING;
    described_element : shapeable_item;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_dependent_property_representation;
    characteristic_type     : STRING;
    description             : OPTIONAL STRING;
    described_element       : shape_dependent_select;
    property_representation : Representation;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_description_association;
    represented_characteristic : shape_select;
    representation             : shape_model;
    role                       : OPTIONAL STRING;
    description                : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_element;
      id               : OPTIONAL STRING;
      element_name     : OPTIONAL STRING;
      description      : OPTIONAL STRING;
      containing_shape : Item_shape;
    WHERE
      WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
  END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
  ENTITY Shape_element_relationship;
      relation_type : OPTIONAL STRING;
      description   : OPTIONAL STRING;
      relating      : Shape_element;
      related       : Shape_element;
    WHERE
      WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
  END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit
  SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Unit
  SUPERTYPE OF (ONEOF (
              AMOUNT_OF_SUBSTANCE_UNIT,
              ELECTRIC_CURRENT_UNIT,
              LENGTH_UNIT,
              LUMINOUS_INTENSITY_UNIT,
              MASS_UNIT,
              PLANE_ANGLE_UNIT,
              RATIO_UNIT,
              SOLID_ANGLE_UNIT,
              THERMODYNAMIC_TEMPERATURE_UNIT,
              TIME_UNIT));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Value_with_unit  SUPERTYPE OF (ONEOF (
               ACCELERATION_DATA_ELEMENT,
               ABSORBED_DOSE_DATA_ELEMENT,
               RADIOACTIVITY_DATA_ELEMENT,
               AMOUNT_OF_SUBSTANCE_DATA_ELEMENT,
               ANGLE_DATA_ELEMENT,
               AREA_DATA_ELEMENT,
               CAPACITANCE_DATA_ELEMENT,
               CELSIUS_TEMPERATURE_DATA_ELEMENT,
               CONDUCTANCE_DATA_ELEMENT,
               DIELECTRIC_CONSTANT_DATA_ELEMENT,
               DOSE_EQUIVALENT_DATA_ELEMENT,
               ELECTRIC_CHARGE_DATA_ELEMENT,
               ELECTRIC_CURRENT_DATA_ELEMENT,
               ELECTRIC_POTENTIAL_DATA_ELEMENT,
               ENERGY_DATA_ELEMENT,
               FORCE_DATA_ELEMENT,
               FREQUENCY_DATA_ELEMENT,
               ILLUMINANCE_DATA_ELEMENT,
               INDUCTANCE_DATA_ELEMENT,
               LENGTH_DATA_ELEMENT,
               LOSS_TANGENT_DATA_ELEMENT,
               LUMINOUS_FLUX_DATA_ELEMENT,
               LUMINOUS_INTENSITY_DATA_ELEMENT,
               MAGNETIC_FLUX_DATA_ELEMENT,
               MAGNETIC_FLUX_DENSITY_DATA_ELEMENT,
               MASS_DATA_ELEMENT,
               POWER_DATA_ELEMENT,
               PRESSURE_DATA_ELEMENT,
               RATIO_DATA_ELEMENT,
               RESISTANCE_DATA_ELEMENT,
               SCATTERING_PARAMETER_DATA_ELEMENT,
               SOLID_ANGLE_DATA_ELEMENT,
               THERMAL_RESISTANCE_DATA_ELEMENT,
               THERMODYNAMIC_TEMPERATURE_DATA_ELEMENT,
               VELOCITY_DATA_ELEMENT,
               VOLUME_DATA_ELEMENT) ) ;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
  ENTITY Edge
    SUBTYPE OF (Detailed_topological_model_element);
      start_vertex : Vertex;
      end_vertex   : Vertex;
  END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
  ENTITY Edge_curve
    SUBTYPE OF (Detailed_geometric_model_element, Edge);
      edge_geometry : Curve;
      same_sense    : BOOLEAN;
  END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
  ENTITY Vertex
    SUBTYPE OF (Detailed_topological_model_element);
  END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
  ENTITY Vertex_point
    SUBTYPE OF (Detailed_geometric_model_element, Vertex);
      vertex_position : Cartesian_point;
  END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Detailed_topological_model_element
   ABSTRACT SUPERTYPE
  SUBTYPE OF (Representation_item);
END_ENTITY;
(* USED FROM (Maths_space_arm); *)
ENTITY Maths_space;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_relationship  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_ACTIVITY_RELATIONSHIP,
               EXTERNALLY_DEFINED_ACTIVITY_RELATIONSHIP) ) ;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Activity_method_arm); *)
ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (External_item_identification_assignment_arm); *)
ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;
(* USED FROM (External_item_identification_assignment_arm); *)
ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (External_model_arm); *)
ENTITY External_geometric_model
SUBTYPE OF (Geometric_model);
   SELF\Representation.items: SET[1:1] OF Axis_placement;
   external_file: Digital_file;
WHERE
WR1: SELF\Representation.context_of_items.dimension_count = 3;
WR2: SELF\Representation.context_of_items.kind = 'external';
END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Activity_property;
    name              : STRING;
    description       : STRING;
    described_element : characterized_activity_definition;
  END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Activity_property_representation;
    description : OPTIONAL STRING;
    property    : Activity_property;
    rep         : Representation;
    role        : STRING;
  END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Applied_independent_activity_property
    SUBTYPE OF (Activity_property);
      base_element_property : Independent_property;
    DERIVE
      SELF\Activity_property.name : STRING := base_element_property.property_type;
  END_ENTITY;
(* USED FROM (Product_view_definition_relationship_arm); *)
ENTITY View_definition_relationship;
  id : OPTIONAL STRING;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_view : Product_view_definition;
  related_view : Product_view_definition;
END_ENTITY;
(* USED FROM (Product_view_definition_relationship_arm); *)
ENTITY View_definition_usage
  SUBTYPE OF (View_definition_relationship);
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Applied_independent_property
  SUBTYPE OF (Assigned_property);
  base_independent_property : Independent_property;
DERIVE
  SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Assigned_property;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Property_definition_representation
   ABSTRACT SUPERTYPE;
    description : OPTIONAL STRING;
    definition : represented_definition;
    rep : Representation;
    role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Assigned_property;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : ASSIGNED_PROPERTY := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
(*ENTITY Applied_independent_resource_property
  SUBTYPE OF (Resource_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;*)
(* USED FROM (Resource_property_assignment_arm); *)
(*ENTITY Resource_property;
  name : STRING;
  description : STRING;
  described_element : characterized_resource_select;
END_ENTITY;*)
(* USED FROM (Resource_property_assignment_arm); *)
(*ENTITY Resource_property_representation;
  description : OPTIONAL STRING;
  property : Resource_property;
  rep : Representation;
  role : STRING;
END_ENTITY;*)
(* USED FROM (State_definition_arm); *)
ENTITY And_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY Or_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY Sequence_of_state_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.successor :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.predecessor :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      predecessor :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_cause_effect_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.effect :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.cause :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      cause :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      effect :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_complement_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.universe :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.set_1 :   SET[1:?] OF STATE_DEFINITION *)
  set_2 : SET[1:?] OF State_definition;
    DERIVE
      set_1 :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      universe :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_proper_subset_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.proper_subset :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.proper_superset :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      proper_subset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      proper_superset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_subset_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.superset :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.subset :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      subset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      superset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_symptom_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.symptom_effect :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.symptom_cause :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      symptom_cause :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      symptom_effect :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY Xor_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Digital_document_definition
  SUBTYPE OF (Document_definition);
  files : SET[0:?] OF Digital_file;
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Document_definition
  SUPERTYPE OF (ONEOF (
              DIGITAL_DOCUMENT_DEFINITION,
              PHYSICAL_DOCUMENT_DEFINITION))
  SUBTYPE OF (Product_view_definition);

  (* removed : SELF\Product_view_definition.description :  STRING *)
  SELF\Product_view_definition.defined_version : Document_version;  -- associated_document_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      associated_document_version : DOCUMENT_VERSION := SELF\Product_view_definition.defined_version;  -- DEFINED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      description : STRING := SELF\Product_view_definition.name;  -- NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Document_location_identification
  SUBTYPE OF (External_source_identification);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DOCUMENT_DEFINITION' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Physical_document_definition
  SUBTYPE OF (Document_definition);
  components : SET[0:?] OF Hardcopy;
END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Applied_independent_material_property SUBTYPE OF
    (Material_property, Applied_independent_property);
     SELF\Applied_independent_property.base_independent_property: General_material_property;
  END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Data_environment;
  environment_name : STRING;
  description : OPTIONAL STRING;
  environment_characterization: SET[1:?] OF dependent_or_independent_property_representation;
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_identification;
  material_name : STRING;
  items : SET[1:?] OF material_item_select;
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_property
  SUBTYPE OF (Assigned_property);
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_property_association;
  described_material : Material_identification;
  associated_property_value : Material_property_value_representation;
  definitional : OPTIONAL BOOLEAN;
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_property_value_representation
  SUBTYPE OF (Property_definition_representation);
    environment_condition                                               : Data_environment;

    SELF\Property_definition_representation.definition : material_property_select;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : MATERIAL_PROPERTY_SELECT := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY General_material_property
  SUBTYPE OF (Independent_property);
  WHERE
    WR1:  SIZEOF(QUERY( aip <* USEDIN(SELF,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.APPLIED_INDEPENDENT_PROPERTY.'+
                     'BASE_INDEPENDENT_PROPERTY') |
               NOT
			('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.APPLIED_INDEPENDENT_MATERIAL_PROPERTY' IN
                    TYPEOF(aip)))) = 0;
 END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Anisotropic_material
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Braided_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Discontinuous_fiber_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Filament_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Isotropic_material
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Material_direction;
    material_orientation : Direction;
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Stock_core
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Stock_material 
    SUPERTYPE OF (ONEOF (
              ANISOTROPIC_MATERIAL,
              BRAIDED_ASSEMBLY,
              DISCONTINUOUS_FIBER_ASSEMBLY,
              FILAMENT_ASSEMBLY,
              ISOTROPIC_MATERIAL,
              STOCK_CORE,
              WOVEN_ASSEMBLY))
  SUBTYPE OF (Part_view_definition);
      property                                     : Material_property_value_representation;
      reference_direction                          : OPTIONAL Material_direction;
      specified_material                           : Material_specification;
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Woven_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Binary_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operands: LIST [2:2] OF Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Environment;
	syntactic_representation: Generic_variable;
	semantics: Variable_semantics;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        SIMPLE_GENERIC_EXPRESSION,
                        UNARY_GENERIC_EXPRESSION,
                        BINARY_GENERIC_EXPRESSION,
                        MULTIPLE_ARITY_GENERIC_EXPRESSION));
WHERE 
WR1: Is_Acyclic(SELF);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_literal
 ABSTRACT SUPERTYPE

SUBTYPE OF (Simple_generic_expression);
END_ENTITY; 
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_variable
 ABSTRACT SUPERTYPE OF (
                        VARIABLE)

SUBTYPE OF (Simple_generic_expression);
INVERSE
	interpretation : Environment FOR syntactic_representation;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Multiple_arity_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operands: LIST [2:?] OF Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Simple_generic_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERIC_LITERAL,
                        GENERIC_VARIABLE))

SUBTYPE OF (Generic_expression);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Unary_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operand: Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Variable
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_variable);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Variable_semantics
 ABSTRACT SUPERTYPE;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Assembly_component_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (
                        NEXT_ASSEMBLY_USAGE,
                        PROMISSORY_USAGE,
                        COMPONENT_UPPER_LEVEL_IDENTIFICATION) ) 
  SUBTYPE OF (Product_occurrence_definition_relationship);
  location_indicator : OPTIONAL STRING;
  quantity : OPTIONAL Value_with_unit;
WHERE
  WR1: NOT(EXISTS(quantity)) OR ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Component_upper_level_identification
  SUBTYPE OF (Assembly_component_relationship);
  upper_assembly_relationship : Assembly_component_relationship;
  sub_assembly_relationship : Next_assembly_usage;
UNIQUE
  UR1: upper_assembly_relationship, sub_assembly_relationship;
WHERE
  WR1: SELF :<>: upper_assembly_relationship;
  WR2: SELF\Product_occurrence_definition_relationship.relating_view :=: upper_assembly_relationship\Product_occurrence_definition_relationship.relating_view;
  WR3: SELF\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.related_view;
  WR4: (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view) OR (SIZEOF (QUERY (pdr <* USEDIN (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view , 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW') | pdr.relating_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view)) = 1);
  WR5: SIZEOF (['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE', 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Next_assembly_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Product_occurrence_definition_relationship
   ABSTRACT SUPERTYPE;
  relating_view : Product_view_definition;
  related_view : Product_view_definition;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Promissory_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;
(* USED FROM (Part_view_definition_arm); *)
ENTITY Part_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Part_version;
END_ENTITY;
(* USED FROM (Edge_based_wireframe_arm); *)
ENTITY Edge_based_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Non_manifold_surface_arm); *)
  ENTITY Non_manifold_shape_representation
    SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Measure_item
    ABSTRACT SUPERTYPE OF (ONEOF (
                        MEASURE_ITEM_WITH_PRECISION,
                        NUMERICAL_ITEM_WITH_GLOBAL_UNIT,
                        NUMERICAL_ITEM_WITH_UNIT,
                        VALUE_LIST,
                        VALUE_RANGE,
                        VALUE_RANGE_WITH_GLOBAL_UNIT,
                        VALUE_SET,
                        VALUE_WITH_TOLERANCES) ) 
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))>0;
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Numerical_item_with_global_unit
  SUBTYPE OF (Measure_item);
  value_component : measure_value;
WHERE
  WR1: SIZEOF(QUERY(pvr <* QUERY ( r <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS')| 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROPERTY_VALUE_REPRESENTATION' IN TYPEOF(r)) | EXISTS(pvr.context_of_items.units) )) > 0;
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Numerical_item_with_unit
  SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Property_value_representation
    SUPERTYPE OF (ONEOF (
               RANGE_CHARACTERISTIC,
               TOLERANCE_CHARACTERISTIC) ) 
      SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Class_with_attributes
SUBTYPE OF (Class);
  version_id: OPTIONAL STRING;
  used_classification_system: OPTIONAL Classification_system;
INVERSE
  characterization_attributes: SET[0:?] OF Classification_attribute FOR characterized_class;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Class_hierarchy;
  super_class: Class_with_attributes;
  sub_class: Class_with_attributes;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Classification_association
SUBTYPE OF (Classification_assignment);
   SELF\Classification_assignment.assigned_class: Class_with_attributes;
   definitional: LOGICAL;
WHERE
WR1: NOT(definitional = TRUE) OR
       (SIZEOF(QUERY(it<* SELF\Classification_assignment.items | 
                 NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DEFINABLE_OBJECTS' IN TYPEOF(it)) )) = 0);
WR2: SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLASSIFIED_ELEMENT_SELECT' IN TYPEOF(it)) )) =0;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Classification_attribute;
   id: STRING;
   name: OPTIONAL STRING;
   description: OPTIONAL STRING;
   allowed_values: OPTIONAL SET[1:?] OF Measure_item;
   characterized_class: Class_with_attributes;
   attribute_definition: Independent_property;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Classification_system;
  id: STRING;
  description: OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY External_class_with_attributes
SUBTYPE OF (Class_with_attributes);
  source: external_class_select;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class
  SUPERTYPE OF (ONEOF (
              CLASS_BY_EXTENSION,
              CLASS_BY_INTENSION));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Measure_item_with_precision
    SUBTYPE OF (Measure_item);
      significant_digits : INTEGER;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_limit
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
    WHERE
      WR1:SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;   
(* USED FROM (Analysis_assignment_arm); *)
ENTITY Analysis_assignment;
  analysis : Analysis_version;
  applied_to : analysed_item;
END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_range
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_unit;
      upper_limit : Numerical_item_with_unit;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_range_with_global_unit
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_global_unit;
      upper_limit : Numerical_item_with_global_unit;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_set
    SUBTYPE OF (Measure_item);
      values : SET[1:?] OF Measure_item;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_with_tolerances
    SUBTYPE OF (Measure_item);
      item_value : Numerical_item_with_unit;
      lower_limit : REAL;
      upper_limit : REAL;
  END_ENTITY;
(* USED FROM (Plib_class_reference_arm); *)
  ENTITY Plib_class_reference;
    code         : STRING;
    supplier_bsu : STRING;
    version      : STRING;
  END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Applied_information_usage_right;
  item : SET[1:?] OF information_usage_right_item;
  right_applied : Information_usage_right;
END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_right;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  restriction : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_usage_right;
  id : STRING;
  name : STRING;
  comment : OPTIONAL STRING;
  grants_right : SET[1:?] OF Information_right;
END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_usage_right_relationship;
  relating : Information_usage_right;
  related : Information_usage_right;
  relation_type : STRING;
END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Assembled_part_association
    SUBTYPE OF (Assembly_component_relationship, Part_occurrence_definition_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Assembly_definition;
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Assembly_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Effectivity_controlled_assembly_definition
    SUBTYPE OF (Assembly_definition);
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Geometrical_relationship
    SUBTYPE OF (Part_definition_relationship);
      definition_placement: Geometric_model_relationship_with_transformation;
    DERIVE
      SELF\View_definition_relationship.relation_type : STRING := 'geometrical relationship';
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Part_definition_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Part_view_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_activity_relationship
    SUBTYPE OF (Activity_relationship);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_security_classification
    SUBTYPE OF (Security_classification);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Security_classification.classification_level IN Pre_defined_security_classification_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_address_assignment
    SUBTYPE OF (Address_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: (EXISTS(SELF\Address_assignment.address_type)) AND
        (NOT (SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types));
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF (Organization_or_person_in_organization_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_approval_status
    SUBTYPE OF (Approval_status);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Approval_status.status_name IN Pre_defined_approval_status_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_approval
    SUBTYPE OF (Approval);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Approval.purpose IN Pre_defined_approval_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_date_or_date_time_assignment
    SUBTYPE OF (Date_or_date_time_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_work_request
    SUBTYPE OF (Work_request);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Work_request.purpose IN Pre_defined_work_request_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_work_request_status
    SUBTYPE OF (Work_request_status);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Work_request_status.status IN Pre_defined_work_request_status_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Person_in_organization_relationship;
    description   : OPTIONAL STRING; 
    relating      : Person_in_organization;
    related       : Person_in_organization;
    relation_type : STRING;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_activity_relationship
    SUBTYPE OF (Activity_relationship);
    WHERE
      WR1: SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_security_classification
    SUBTYPE OF (Security_classification);
    WHERE
      WR1: SELF\Security_classification.classification_level IN Pre_defined_security_classification_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_address_assignment
    SUBTYPE OF (Address_assignment);
    WHERE
      WR1: SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF (Organization_or_person_in_organization_assignment);
    WHERE
      WR1: SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types; 
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_approval_status
    SUBTYPE OF (Approval_status);
    WHERE
      WR1: SELF\Approval_status.status_name IN Pre_defined_approval_status_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_approval
    SUBTYPE OF (Approval);
    WHERE
      WR1: SELF\Approval.purpose IN Pre_defined_approval_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_date_or_date_time_assignment
    SUBTYPE OF (Date_or_date_time_assignment);
    WHERE
      WR1: SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_work_request
    SUBTYPE OF (Work_request);
    WHERE
      WR1: SELF\Work_request.purpose IN Pre_defined_work_request_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_work_request_status
    SUBTYPE OF (Work_request_status);
    WHERE
      WR1: SELF\Work_request_status.status IN Pre_defined_work_request_status_types;
  END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
ENTITY Requirement_assignment;
  id : STRING;
  description : OPTIONAL STRING;
  assigned_requirement : Requirement_view_definition;
  assigned_to : requirement_assignment_item;
END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
ENTITY Requirement_satisfied_by;
  id : STRING;
  description : OPTIONAL STRING;
  satisfied_by : requirement_satisfaction_item;
  satisfied_requirement : Requirement_view_definition;
  related_assignment : OPTIONAL Requirement_assignment;
END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
ENTITY Requirement_source;
  id : STRING;
  description : OPTIONAL STRING;
  source : requirement_source_item;
  sourced_requirement : Requirement_view_definition;
END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Requirement_collection_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);

  (* removed : SELF\Requirement_view_definition_relationship.collection :  View_definition_relationship.relating_view *)

  (* removed : SELF\Requirement_view_definition_relationship.member :  View_definition_relationship.related_view *)
    DERIVE
      collection : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.primary;  -- PRIMARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      member : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.secondary;  -- SECONDARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Requirement_view_definition_relationship
  SUPERTYPE OF (ONEOF (
              REQUIREMENT_COLLECTION_RELATIONSHIP,
              TRACING_RELATIONSHIP))
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view : Requirement_view_definition;  -- primary : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\View_definition_relationship.related_view : Requirement_view_definition;  -- secondary : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      primary : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      secondary : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

WHERE
  WR1: primary :<>: secondary;
END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Tracing_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);

  (* removed : SELF\Requirement_view_definition_relationship.traces_from :  View_definition_relationship.relating_view *)

  (* removed : SELF\Requirement_view_definition_relationship.traces_to :  View_definition_relationship.related_view *)
    DERIVE
      traces_from : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.primary;  -- PRIMARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      traces_to : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.secondary;  -- SECONDARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Breakdown_node_relationship;
      description   : OPTIONAL STRING;
      relating      : complex_product_select;
      related       : breakdown_element_select;
      relation_type : STRING;  
    WHERE
      WR1: (NOT (relation_type IN ['functionality', 'realization'])) OR
	    (TYPEOF(related) <> TYPEOF(relating));
      WR2: (NOT (relation_type IN ['decomposition', 'specialization', 'occurrence'])) OR
	    (aggregate1_in_aggregate2(TYPEOF(related),TYPEOF(relating)) OR aggregate1_in_aggregate2(TYPEOF(relating),TYPEOF(related)) ) ;
      WR3: (NOT (relation_type IN ['occurrence'])) OR 
	    ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PHYSICAL_ELEMENT_DEFINITION' IN TYPEOF(relating));
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Class_breakdown_association;
    description       : OPTIONAL STRING;
    considered_class  : Product_class;
    breakdown_element : breakdown_element_select;
    relation_type     : STRING;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Complex_node_relationship;
      description   : OPTIONAL STRING;
      relating      : complex_product_select;
      related       : complex_product_select;
      relation_type : STRING;  
    WHERE
      WR1: (aggregate1_in_aggregate2(TYPEOF(related),TYPEOF(relating)) OR aggregate1_in_aggregate2(TYPEOF(relating),TYPEOF(related)) ) ;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Design_constraint_association;
    name                  : OPTIONAL STRING;	
    constrained_object    : complex_product_select;
    constraint_definition : Design_constraint_definition;  
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Design_constraint_context_association;
    constraint_definition : Design_constraint_definition;
    constraint_context    : constraint_context_select;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Design_constraint_definition
    SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Requirement_version;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Design_constraint_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Design_constraint_definition;
      SELF\View_definition_relationship.related_view  : Design_constraint_definition;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Part_function_association
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Functional_element_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Part_occurrence_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : part_occurrence_select;
      SELF\View_definition_relationship.related_view  : part_occurrence_select;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Replaced_usage_relationship
    SUBTYPE OF (Part_occurrence_relationship);
      usage_context : instance_usage_context_select;
    DERIVE
      SELF\View_definition_relationship.relation_type : STRING := 'usage replacement';
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Specification_category_breakdown_influence;
    influencing_category      : Class_category_association;
    influenced_breakdown_node : breakdown_element_select;
  END_ENTITY;
(* USED FROM (Test_select_product_arm); *)
  ENTITY Test_select_product
    SUBTYPE OF (Alternate_product_relationship);
  WHERE
    WR1: NOT EXISTS (SELF\Alternate_product_relationship.criteria);
  END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Attribute_classification_arm); *)
ENTITY Attribute_classification;
  allowed_value : Class;
  attribute_name : STRING;
  classified_entity : SET[1:?] OF classified_attribute_select;
END_ENTITY;
(* USED FROM (Associative_draughting_elements_arm); *)
  ENTITY Annotation_occurrence_associativity;
    relating_element : Annotation_element;
    related_element  : annotation_occurrence_associativity_item;
  END_ENTITY;
(* USED FROM (Associative_draughting_elements_arm); *)
  ENTITY Draughting_model
    SUBTYPE OF (Styled_model);
      SELF\Representation.items : SET[1:?] OF draughting_model_element_select;
  UNIQUE
    UR1:  SELF\Representation.name;
  END_ENTITY;
(* USED FROM (Associative_draughting_elements_arm); *)
  ENTITY Draughting_model_item_association;
    name            : STRING;
    definition      : shape_select;
    identified_item : draughting_model_item_association_select;
    used_model      : Draughting_model;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Annotation_fill_area 
    SUBTYPE OF (Detailed_geometric_model_element); 
      boundaries : SET [1:?] OF Curve; 
  END_ENTITY; 
(* USED FROM (Draughting_element_arm); *)
  ENTITY Annotation_plane
    SUBTYPE OF (Annotation_element);
      elements : OPTIONAL SET[1:?] OF annotation_plane_element;
      SELF\Styled_element.element : plane_or_planar_box;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Dimension_curve 
    SUBTYPE OF (Annotation_curve);
      terminator : SET[0:2] OF Terminator;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Dimension_curve_directed_callout
    SUBTYPE OF (Draughting_callout);
      dimension_curve : Dimension_curve;
    WHERE
      WR1: dimension_curve IN SELF\Draughting_callout.contents;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Draughting_callout 
    SUPERTYPE OF (ONEOF (
              DIMENSION_CURVE_DIRECTED_CALLOUT,
              LEADER_DIRECTED_CALLOUT,
              PROJECTION_DIRECTED_CALLOUT))
  SUBTYPE OF (Representation_item);
      contents : LIST [1:?] OF draughting_callout_content_select;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Fill_area 
    SUBTYPE OF (Annotation_element);
      SELF\Styled_element.element : Annotation_fill_area;
      reference_point             : point_select;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Generic_annotation_curve
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Leader 
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Leader_directed_callout
    SUBTYPE OF (Draughting_callout);
      leader : Leader;
    WHERE
      WR1: leader IN SELF\Draughting_callout.contents;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Projection_curve 
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Projection_directed_callout
    SUBTYPE OF (Draughting_callout);
      projection_curve : Projection_curve;
    WHERE
      WR1: projection_curve IN SELF\Draughting_callout.contents;
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Annotation_subfigure
    SUBTYPE OF (Annotation_element);
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Annotation_symbol
    SUBTYPE OF (Annotation_element);
      symbol_definition : symbol_definition_select;
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Dimension_curve_terminator
    SUBTYPE OF (Terminator_symbol);
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Dimension_symbol; 
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Draughting_annotation_occurrence 
    SUBTYPE OF (Representation);
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY General_symbol 
    SUBTYPE of (Representation);
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Geometric_tolerance_symbol; 
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Surface_condition_symbol; 
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Terminator_symbol
    SUBTYPE OF (Annotation_symbol);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Datum_feature_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Datum_target_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension
     ABSTRACT SUPERTYPE OF (
                        DIMENSION_CALLOUT
                        ANDOR 
                        DIMENSION_VALUE)
  SUBTYPE OF (Draughting_element);
      id                : STRING;
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_callout 
    SUBTYPE OF (Dimension);
    callout_element : SET [1:?] OF dimension_callout_select;
    dimension_type  : SET [1:?] OF dimension_type;
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_callout_relationship;
      relating_draughting_callout : Dimension_callout;  
      related_draughting_callout  : Dimension_value;
      relation_type               : primary_or_secondary;
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_prefix
    SUBTYPE OF (Draughting_element);
      prefix : Dimension_text;
    INVERSE
      parent : Structured_dimension_callout FOR prefix;
    WHERE
      WR1: prefix IN SELF\Draughting_callout.contents;
      WR2: prefix\Representation_item.name = 'prefix text';            
  END_ENTITY;    
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_sequence_pair; 
    allignment  : chained_or_parallel;
	predecessor : Dimension_callout;
	successor   : Dimension_callout;
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_suffix
    SUBTYPE OF (Draughting_element);
      suffix : Dimension_text;
    INVERSE
      parent : Structured_dimension_callout FOR suffix;
    WHERE
      WR1: suffix IN SELF\Draughting_callout.contents;
      WR2: suffix\Representation_item.name = 'suffix text';      
  END_ENTITY;    
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_value
    SUBTYPE OF (Dimension);
      dimension_value : Dimension_text;
    WHERE
      WR1: dimension_value IN SELF\Draughting_callout.contents;
      WR2: dimension_value\Representation_item.name = 'dimension value';
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Draughting_element
    SUPERTYPE OF (ONEOF (
              DATUM_FEATURE_CALLOUT,
              DATUM_TARGET_CALLOUT,
              DIMENSION,
              DIMENSION_PREFIX,
              DIMENSION_SUFFIX,
              GEOMETRIC_TOLERANCE_CALLOUT,
              SURFACE_CONDITION_CALLOUT))
  SUBTYPE OF(Draughting_callout);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Geometric_tolerance_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Structured_dimension_callout
    SUBTYPE OF (Dimension_value);
      prefix          : OPTIONAL Dimension_prefix;
      suffix          : OPTIONAL Dimension_suffix;
      tolerance_value : OPTIONAL Dimension_text;
      unit_text       : OPTIONAL Dimension_text;
    WHERE
      WR1: tolerance_value IN SELF\Draughting_callout.contents;
      WR2: NOT EXISTS(tolerance_value) OR (tolerance_value\Representation_item.name = 'tolerance value');
      WR3: unit_text IN SELF\Draughting_callout.contents;
      WR4: NOT EXISTS(unit_text) OR (unit_text\Representation_item.name = 'unit text');
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Surface_condition_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Construction_geometry_arm); *)
  ENTITY Constructive_geometry
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items : SET [1:?] OF constructive_element_select;
  END_ENTITY;
(* USED FROM (Construction_geometry_arm); *)
  ENTITY Constructive_geometry_association;
      auxiliary_geometry : Constructive_geometry;
      base_geometry      : constructive_geometry_select;
      description        : STRING;
    WHERE
      WR1: auxiliary_geometry\Representation.context_of_items :=: base_geometry\Representation.context_of_items;
  END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
  ENTITY Circle
    SUBTYPE OF (Curve);
  END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
  ENTITY Closed_composite_curve
    SUBTYPE OF (Composite_curve);
  END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
  ENTITY Composite_curve
    SUBTYPE OF (Curve);
      curve_segment : LIST[1:?] OF UNIQUE Composite_curve_segment;
  END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
  ENTITY Composite_curve_segment;
      segment_curve : Curve;
    INVERSE
      using_curves : SET[1:?] OF composite_curve FOR curve_segment;
  END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
	ENTITY Measurement_path;
	          defined_by : Curve;
	          defined_in : Geometric_coordinate_space;
	END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
	ENTITY Trimmed_curve
	  SUBTYPE OF (Curve);
	    start_point : Cartesian_point;
	    end_point : Cartesian_point;
	END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Curve
    SUPERTYPE OF (ONEOF (
               COMPOSITE_CURVE,
               TRIMMED_CURVE) ) 
      SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Line
  SUBTYPE OF (Curve);
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Plane
  SUBTYPE OF (Surface);
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Point_on_curve
  SUBTYPE OF (Detailed_geometric_model_element);
  supporting_curve : Curve;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Point_on_surface
  SUBTYPE OF (Detailed_geometric_model_element);
  supporting_surface : Surface;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Surface
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Derived_geometry;
  derived_from : SET[1:?] OF Shape_element;
  geometry : constructive_element_select;
  role : STRING;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Derived_shape_element
  SUBTYPE OF (Shape_element);
  derived_from : SET[1:?] OF Shape_element;

  SELF\Shape_element.description : STRING;                    -- role : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      role : STRING := SELF\Shape_element.description;        -- DESCRIPTION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Offset_shape_element
  SUBTYPE OF (Derived_shape_element);
  offset : Value_with_unit;
END_ENTITY;
(* USED FROM (Document_assignment_arm); *)
ENTITY Document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : documented_element_select;
  role : STRING;
END_ENTITY;
(* USED FROM (Document_assignment_arm); *)
ENTITY Partial_document_assignment
SUBTYPE OF (Document_assignment);
  document_portion : STRING;
END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY Presentation_set;
    areas : SET[1:?] OF View_area; 
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY Presentation_set_assignment; 
    associated_presentation : Presentation_set;
    is_describing           : presentation_association_select;
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View 
    SUBTYPE OF (Styled_model); 
      SELF\Representation.items : SET [1:?] OF view_element_select; 
  WHERE 
    WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;      
  END_ENTITY;   
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area
    SUBTYPE OF (Styled_model); 
      size : Planar_box;  
      SELF\Representation.items : SET [1:?] OF view_area_element_select; 
    WHERE 
      WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;
  END_ENTITY; 
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area_assignment;
    associated_view_area : View_area;
    is_describing        : presentation_association_select;
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area_relationship;
    relation_type : view_area_relation_type;
    description   : OPTIONAL STRING;
    relating      : View_area;
    related       : View_area;
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area_replication 
    SUBTYPE OF (Styled_model_replication); 
      SELF\Styled_model_replication.replicated_model : view_area_replication_model; 
  END_ENTITY; 
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_relationship;
    relation_type : view_relation_type;
    description   : OPTIONAL STRING;
    relating      : View;
    related       : View;
  END_ENTITY;
(* USED FROM (Currency_arm); *)
  ENTITY Currency
      ABSTRACT SUPERTYPE OF ((ONEOF (
                        EXTERNAL_CURRENCY,
                        ISO4217_CURRENCY)) ) 
  SUBTYPE OF (Unit);
  END_ENTITY;
(* USED FROM (Currency_arm); *)
  ENTITY Currency_value 
    SUBTYPE OF (Value_with_unit); 
      SELF\Value_with_unit.unit : Currency;
  END_ENTITY; 
(* USED FROM (Currency_arm); *)
  ENTITY Iso4217_currency 
    SUBTYPE OF (Currency);
  END_ENTITY; 
(* USED FROM (External_unit_arm); *)
  ENTITY External_context_dependent_unit
    SUBTYPE OF (Context_dependent_unit);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;
(* USED FROM (External_unit_arm); *)
  ENTITY External_conversion_based_unit
    SUBTYPE OF (Conversion_based_unit);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;
(* USED FROM (External_library_arm); *)
  ENTITY Iso15926_4_rdl
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Known_source 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        ISO15926_4_RDL,
                        OTD_CATALOGUE,
                        OTD_DICTIONARY,
                        PLIB_DICTIONARY,
                        PLIB_LIBRARY))
  SUBTYPE OF (External_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Otd_catalogue 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Otd_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Plib_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Plib_library 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY User_defined_library_or_dictionary 
    SUBTYPE OF (External_source); 
    INVERSE
      source : External_source_identification FOR item;
  END_ENTITY;
(* USED FROM (External_source_arm); *)
  ENTITY External_source  SUPERTYPE OF ((ONEOF (
               KNOWN_SOURCE,
               USER_DEFINED_LIBRARY_OR_DICTIONARY)) ) ; 
    id          : STRING;
    description : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Manifold_surface_arm); *)
  ENTITY Manifold_surface_shape_representation
    SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Manifold_surface_arm); *)
  ENTITY Shell_based_surface_model
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Mechanical_design_geometric_presentation_arm); *)
  ENTITY Mechanical_design_view_area 
    SUBTYPE OF (View_area);
  END_ENTITY;
(* USED FROM (Mechanical_design_geometric_presentation_arm); *)
  ENTITY Mechanical_representation_styled_model  
    SUBTYPE OF (Styled_model);
  END_ENTITY;
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Camera_model_d3
    SUBTYPE OF (Detailed_geometric_model_element);
      clipping : OPTIONAL Clipping_operator; 
      hidden_element_appearance : OPTIONAL Appearance_assignment; 
      hidden_line_removal : OPTIONAL BOOLEAN; 
      sources : OPTIONAL SET[1:?] OF Light_source;      
      view_projection : view_projection_type; 
      view_window : Planar_box; 
    WHERE
      WR1: NOT EXISTS(hidden_element_appearance) OR EXISTS(hidden_line_removal);
  END_ENTITY;   
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Clipping_operator
    SUBTYPE OF (Detailed_geometric_model_element);
      elements : SET [1:?] OF clipping_element;
      operator : clipping_mode;
  END_ENTITY;
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Light_source
    SUBTYPE OF (Detailed_geometric_model_element);
      colour : OPTIONAL Colour;
      light_type : light_type;
  END_ENTITY;
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Model_image_3d
    SUBTYPE OF (Detailed_geometric_model_element);
       is_displaying : presented_model_select; 
       source : Camera_model_d3;
       target : Planar_box;
  END_ENTITY;   
(* USED FROM (Colour_arm); *)
ENTITY Colour;
  name : STRING;
END_ENTITY;
(* USED FROM (Colour_arm); *)
ENTITY Externally_defined_colour
  SUBTYPE OF (Colour);
  source : STRING;
END_ENTITY;
(* USED FROM (Colour_arm); *)
ENTITY Pre_defined_colour
  SUBTYPE OF (Colour);
WHERE
  WR1: SELF.name IN ['red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'black', 'white'];
END_ENTITY;
(* USED FROM (Colour_arm); *)
ENTITY User_defined_colour
  SUBTYPE OF (Colour);
  red : REAL;
  green : REAL;
  blue : REAL;
WHERE
  WR1: {0.0 <= red <= 1.0};
  WR2: {0.0 <= green <= 1.0};
  WR3: {0.0 <= blue <= 1.0};
END_ENTITY;
(* USED FROM (Shape_appearance_layers_arm); *)
  ENTITY Solid_fill_area_style;
    fill_colour : Colour; 
  END_ENTITY;  
(* USED FROM (Mechanical_design_shaded_presentation_arm); *)
  ENTITY Mechanical_design_shaded_presentation_area   
    SUBTYPE OF (View_area);
  END_ENTITY;
(* USED FROM (Mechanical_design_shaded_presentation_arm); *)
  ENTITY Mechanical_design_shaded_styled_model  
    SUBTYPE OF (Styled_model);
  END_ENTITY;
(* USED FROM (Mechanical_design_shaded_presentation_arm); *)
  ENTITY Surface_style_rendering 
    SUBTYPE OF (Surface_appearance_element); 
      assigned_colour : Colour;
  END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Axis1_placement
    SUBTYPE OF (Detailed_geometric_model_element);
      axis     : Direction;
      position : Cartesian_point;
  END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Extruded_solid
    SUBTYPE OF (Swept_solid);
      depth              : length_measure;
      extruded_direction : Direction;
  END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Solid_of_revolution
    SUBTYPE OF (Swept_solid);
      angle : plane_angle_measure;
      axis  : Axis1_placement;
  END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Swept_solid
    SUPERTYPE OF (ONEOF (
              EXTRUDED_SOLID,
              SOLID_OF_REVOLUTION))
  SUBTYPE OF (Detailed_geometric_model_element);
      swept_face : Advanced_face;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Beveled_sheet_representation
    SUBTYPE OF (Constituent_shape_representation);
      bevel_angle             : Angle_data_element;
      boundary_surface        : Composite_sheet_representation;
      vertical_profile_height : Length_data_element;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Boundary_curve_representation;
    bounds : SET [1:?] OF Curve;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Composite_sheet_representation
    SUPERTYPE OF (ONEOF (
              FACE_BASED_SHEET_REPRESENTATION,
              GEOMETRIC_SHEET_REPRESENTATION))
  SUBTYPE OF (Constituent_shape_representation);
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Constituent_shape_representation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        THREE_D_GEOMETRY_SET,
                        COMPOSITE_SHEET_REPRESENTATION,
                        BEVELED_SHEET_REPRESENTATION))
  SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Face_based_sheet_representation
    SUBTYPE OF (Composite_sheet_representation);
      face_surface : Surface;
      inner_bounds : OPTIONAL SET [1:?] OF Loop;
      outer_bound  : Loop;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Flat_pattern_ply_shape
    SUBTYPE OF (Ply_shape);
      wrapup_origin_on_flat_pattern : Cartesian_point;
      wrapup_origin_on_surface      : Cartesian_point;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Geometric_sheet_representation
    SUBTYPE OF (Composite_sheet_representation);
      basis_surface : Surface;
      cutouts       : OPTIONAL SET [1:?] OF Boundary_curve_representation;
      outer_edge    : Boundary_curve_representation;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Laid_ply_shape
    SUBTYPE OF (Ply_shape);
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Loop
    SUBTYPE OF (Detailed_topological_model_element);
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Ply_shape
    SUPERTYPE OF (ONEOF (
              PROJECTED_PLY_SHAPE,
              LAID_PLY_SHAPE,
              FLAT_PATTERN_PLY_SHAPE));
      defining_model : Composite_sheet_representation;
      basis : OPTIONAL Ply_shape;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Projected_ply_shape
    SUPERTYPE OF (ONEOF (
              VIEW_PLY_SHAPE,
              SURFACE_PLY_SHAPE))
  SUBTYPE OF (Ply_shape);
      method               : projection_method;
      projection_direction : OPTIONAL Direction;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Surface_ply_shape
    SUBTYPE OF (Projected_ply_shape);
      offset       : Length_data_element;
      surface_role : STRING;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Three_d_geometry_set
    SUBTYPE OF (Constituent_shape_representation);
      basis_role        : STRING;
      basis_surface     : Surface;
      defining_boundary : SET [1:?] OF Curve;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY View_ply_shape
    SUBTYPE OF (Projected_ply_shape);
  END_ENTITY;
(* USED FROM (Advanced_boundary_representation_arm); *)
  ENTITY Advanced_brep_shape_representation
	SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Faceted_boundary_representation_arm); *)
ENTITY Faceted_brep_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Topologically_bounded_surface_arm); *)
ENTITY Advanced_face
SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Geometrically_bounded_surface_arm); *)
ENTITY Geometrically_bounded_surface_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Geometrically_bounded_wireframe_arm); *)
ENTITY Geometrically_bounded_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Shell_based_wireframe_arm); *)
ENTITY Shell_based_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
ENTITY Absorbed_dose_data_element
  SUBTYPE OF (Value_with_unit);
END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Radioactivity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Acceleration_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Amount_of_substance_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Area_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Capacitance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Celsius_temperature_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Conductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Dielectric_constant_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Dose_equivalent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Electric_charge_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Electric_current_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Electric_potential_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Energy_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Force_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Frequency_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Illuminance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Inductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Length_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
      WR1 : SELF\Value_with_unit.value_component >= 0.0;
	  WR2 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Loss_tangent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Luminous_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Luminous_intensity_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Magnetic_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Magnetic_flux_density_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Mass_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MASS_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Power_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Pressure_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Ratio_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Scattering_parameter_data_element
    SUBTYPE OF (Value_with_unit);
      angle : REAL;

      SELF\Value_with_unit.value_component : any_number_value;  -- radius : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      radius : ANY_NUMBER_VALUE := SELF\Value_with_unit.value_component;  -- VALUE_COMPONENT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
 WHERE
      WR1 : radius >= 0;
      WR2 : {0 <= angle < 2*PI};
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Solid_angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Thermal_resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Thermodynamic_temperature_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Velocity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Volume_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Binary_representation_arm); *)
  ENTITY Binary_representation_item 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 
(* USED FROM (Binary_representation_arm); *)
  ENTITY Bytes_representation_item 
    SUBTYPE OF (Binary_representation_item); 
  END_ENTITY; 
(* USED FROM (Production_rule_arm); *)
ENTITY Abstract_variable
   ABSTRACT SUPERTYPE OF (ONEOF (
                        SCALAR_VARIABLE,
                        ROW_VARIABLE));
  name : STRING;
  scope : scope_select;
 UNIQUE 
  UR1 : name, scope;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Atomic_formula
   ABSTRACT SUPERTYPE OF (ONEOF (
                        RULE_CONDITION,
                        GROUND_FACT));
  predicate_symbol : predicate_symbol;  
  terms : LIST OF term_select;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Attribute_assertion
  SUBTYPE OF (Fact_type);
   entity_type : STRING;
   attribute : STRING;
END_ENTITY; 
(* USED FROM (Production_rule_arm); *)
ENTITY Back_chaining_rule
  SUBTYPE OF (Rule_definition);
  head : Rule_condition;
  body : LIST OF Rule_condition;
 WHERE
  WR1: SELF.head.positive = TRUE;
  WR2:  local_vars_of(SELF.head) <= local_vars_of(SELF.body);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Complex_clause
   ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPLEX_CONJUNCTIVE_CLAUSE,
                        COMPLEX_DISJUNCTIVE_CLAUSE));
  clauses : LIST [2:?] OF clause_select;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Complex_conjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Complex_disjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Entity_assertion
  SUBTYPE OF (Fact_type);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Enum_reference_prefix;
 prefix : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Extent;
  variable_id : OPTIONAL STRING;
  source : STRING;
  query_expression : STRING;
  syntax : OPTIONAL expression_syntax;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Fact_type
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ENTITY_ASSERTION,
                        ATTRIBUTE_ASSERTION));
   source : Extent;
   predicate_symbol : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Forward_chaining_rule
  SUBTYPE OF (Rule_definition);
  premise : clause_Select; 
  conclusion : Literal_conjunction;
  WHERE
  WR1:  local_vars_of(SELF.conclusion) <= local_vars_of(SELF.premise);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Func;
 func_sym : function_symbol;
 terms : LIST OF term_select;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Global_assignment;
  variable : Abstract_variable;
  val : term_select;
 WHERE
  WR1: NOT(contains_variable(SELF.val));
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Ground_fact
 SUBTYPE OF (Atomic_formula);
 WHERE
  WR1: SIZEOF(QUERY(r <* SELF\Atomic_formula.terms | contains_variable(r))) = 0;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Literal_conjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Literal_disjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Row_value;
  values : LIST OF term_select;
 WHERE
  WR1: SIZEOF(QUERY(v <* SELF.values | contains_variable(v))) = 0;
  WR2: SIZEOF(QUERY(v <* SELF.values | 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ROW_VALUE' IN TYPEOF(v))) = 0;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Row_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_action
    ABSTRACT SUPERTYPE OF (ONEOF (
                        RULE_SUBMISSION,
                        RULE_ADOPTION,
                        RULE_REJECTION,
                        RULE_SUPERSEDENCE,
                        RULE_CREATION,
                        RULE_EXPIRATION,
                        RULE_CHANGE_REQUEST,
                        RULE_REQUEST,
                        RULE_MODIFICATION));
   subject_rule : Rule_version;
DERIVE
   subject_action_assignment : SET[0:?] OF Organization_or_person_in_organization_assignment := 
         bag_to_set(QUERY(temp <* USEDIN ( SELF , 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 
                                       'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS' ) 
                    | ( temp.role = 'subject action assignment')));
  UNIQUE
   UR1: SELF\Rule_action.subject_rule, SELF\Rule_action.subject_action_assignment;
  WHERE
   WR1: EXISTS (subject_action_assignment) AND (SIZEOF(subject_action_assignment) = 1 );
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_adoption
   SUBTYPE OF (Rule_action);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_change_request
   SUBTYPE OF (Rule_action);
   change_reason : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_condition
 SUBTYPE OF (Atomic_formula);
  positive : BOOLEAN;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_creation
    SUBTYPE OF (Rule_action);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_definition
   ABSTRACT SUPERTYPE OF (ONEOF (
                        FORWARD_CHAINING_RULE,
                        BACK_CHAINING_RULE))
  SUBTYPE OF (Rule_software_definition);
END_ENTITY; 
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_expiration
   SUBTYPE OF (Rule_action);
   expiration_rationale : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_justification
   SUBTYPE OF (Rule_action);
   justified_action : Rule_action;
   justification_rationale : STRING;
WHERE
   WR1: SELF <> justified_action ;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_modification
   SUBTYPE OF (Rule_action);
   modification_rationale : Rule_change_request;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_priority;
   priority : INTEGER;
   prioritized_rule : Rule_definition;
WHERE
   WR1: priority >= 0 ;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_product
   SUBTYPE OF (Software);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_rejection
   SUBTYPE OF (Rule_action);
   rejection_reason : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_request
   SUBTYPE OF (Rule_action);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_set
   SUBTYPE OF (Rule_software_definition);
   conflict_resolution_strategy : OPTIONAL STRING;
   rule_member : SET[1:?] OF Rule_priority;
 DERIVE  
   engine: SET[1:1] OF Document_definition :=
		get_document_definition(SELF, 'engine', 
		'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LANGUAGE_REFERENCE_MANUAL');
 INVERSE
   purpose : Identification_assignment FOR items;
 WHERE
   WR1: purpose.role = 'purpose' ;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_set_group
  SUBTYPE OF (Rule_software_definition);
  elements : SET[2:?] OF Rule_set;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_software_definition
   SUPERTYPE OF (ONEOF (
              RULE_DEFINITION,
              RULE_SET_GROUP,
              RULE_SET))
  SUBTYPE OF (Software_definition);
   SELF\Product_view_definition.defined_version : Rule_version;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_submission
   SUBTYPE OF (Rule_action);
   submission_rationale : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_supersedence
   SUBTYPE OF (Rule_action);
   superseded_rule : Rule_version;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_version
   SUBTYPE OF (Software_version);
   SELF\Product_version.of_product : Rule_product;
INVERSE
   management_action : SET[1:?] OF Rule_action FOR subject_rule;
   product_definition : SET[1:?] OF Rule_software_definition FOR defined_version;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Scalar_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Simple_clause
   ABSTRACT SUPERTYPE OF (ONEOF (
                        LITERAL_CONJUNCTION,
                        LITERAL_DISJUNCTION));
  formulas : LIST [1:?] OF Rule_condition;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Symbol
  SUBTYPE OF(Representation_item);
 UNIQUE
  UR1 : SELF\Representation_item.name;
END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Contextual_shape_representation;
      contextual_shape          : Contextual_item_shape;
      representing_relationship : Geometric_model_relationship;
    DERIVE
      context_representation    : Geometric_model := representing_relationship.rep_2 ;
      positioned_representation : Geometric_model := representing_relationship.rep_1 ;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_composition_with_operator_transformation
    SUBTYPE OF (Geometric_relationship_with_operator_transformation,
      Definitional_representation_relationship);
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_composition_with_placement_transformation
    SUBTYPE OF (Geometric_relationship_with_placement_transformation,
      Definitional_representation_relationship);
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_placement
    SUBTYPE OF (Geometric_placement_operation);
      target : Axis_placement;
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_placement_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET[1:1] OF Geometric_placement_operation;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_placement_operation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GEOMETRIC_PLACEMENT,
                        GEOMETRIC_OPERATOR_TRANSFORMATION))
  SUBTYPE OF (Detailed_geometric_model_element);
      source : Axis_placement;  
      template_definition : template_definition_select;
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_model_relationship_with_transformation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GEOMETRIC_RELATIONSHIP_WITH_PLACEMENT_TRANSFORMATION,
                        GEOMETRIC_RELATIONSHIP_WITH_OPERATOR_TRANSFORMATION))
  SUBTYPE OF (Geometric_model_relationship);
    WHERE  
      WR1: rep_1.context_of_items :<>: rep_2.context_of_items;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_operator_transformation
    SUBTYPE OF (Geometric_placement_operation);
      target : cartesian_transformation;
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_relationship_with_operator_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: cartesian_transformation;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_relationship_with_placement_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: Axis_placement_mapping;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Shape_placement_association
    SUBTYPE OF (Shape_description_association);
      SELF\Shape_description_association.representation             : Geometric_placement_model;
      SELF\Shape_description_association.represented_characteristic : Contextual_item_shape;
END_ENTITY;
(* USED FROM (Geometric_model_relationship_arm); *)
ENTITY Definitional_representation_relationship
  SUBTYPE OF (Representation_relationship);
    WHERE
      WR1: acyclic_representation_relationship(SELF,
        [SELF\representation_relationship.rep_2],
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
        'REPRESENTATION');
END_ENTITY;  
(* USED FROM (Geometric_model_relationship_arm); *)
ENTITY Geometric_model_relationship
 SUBTYPE OF (Representation_relationship);
    SELF\Representation_relationship.rep_1 : Geometric_model;
    SELF\Representation_relationship.rep_2 : Geometric_model;
  WHERE
    WR1 : rep_1 <> rep_2;
END_ENTITY;
(* USED FROM (Procedural_solid_model_arm); *)
  ENTITY Modified_solid
    SUBTYPE OF (Detailed_geometric_model_element);
      rationale  : STRING;
      base_solid : solid_select;
  END_ENTITY;
(* USED FROM (Procedural_solid_model_arm); *)
  ENTITY Procedural_solid_representation_sequence
    SUBTYPE OF (Procedural_shape_representation_sequence);
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Explicit_procedural_shape_representation_relationship
    SUBTYPE OF (Representation_relationship);
      SELF\Representation_relationship.rep_1 : Procedural_shape_representation; 
      SELF\Representation_relationship.rep_2 : Geometric_model; 
    WHERE
      WR1 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROCEDURAL_SHAPE_REPRESENTATION' 
           in TYPEOF(rep_2));
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Explicit_procedural_geometric_representation_item_relationship;
      relating_item : Procedural_shape_representation_sequence; 
      related_item  : Detailed_geometric_model_element;
    WHERE
      WR1 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROCEDURAL_SHAPE_REPRESENTATION_SEQUENCE' 
            IN TYPEOF(related_item)); 
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Indirectly_selected_shape_elements
    SUBTYPE OF (User_selected_shape_elements);
      indirectly_selected_items : SET[1:?] OF shape_model_element;
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Procedural_shape_representation
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items: SET[1:?] OF Procedural_shape_representation_sequence;
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Procedural_shape_representation_sequence
    SUBTYPE OF (Detailed_geometric_model_element);
      elements            : LIST [1:?] OF shape_model_element;
      suppressed_elements : SET[0:?] OF shape_model_element;
      rationale           : STRING;
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY User_selected_shape_elements
    SUBTYPE OF(Representation_item);
      selected_items : SET[1:?] OF shape_model_element; 
  END_ENTITY;
(* USED FROM (Independent_property_representation_arm); *)
ENTITY Independent_property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Independent_property;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : INDEPENDENT_PROPERTY := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Part_and_version_identification_arm); *)
ENTITY Part
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Part_and_version_identification_arm); *)
ENTITY Part_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Part;
END_ENTITY;
(* USED FROM (Product_identification_arm); *)
ENTITY Product;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_version_arm); *)
ENTITY Product_version  SUPERTYPE OF (ONEOF (
               DOCUMENT_VERSION,
               PART_VERSION) ) ;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Composite_presentable_text
    SUBTYPE OF (Detailed_geometric_model_element);
      collected_text : LIST[2:?] OF composite_text_element_select;
  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Draughting_pre_defined_text_font;
  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Externally_defined_text_font;
    name : STRING;
  END_ENTITY; 
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal
    SUPERTYPE OF (
              TEXT_LITERAL_WITH_EXTENT
              ANDOR 
              TEXT_LITERAL_WITH_DELINEATION
              ANDOR 
              TEXT_LITERAL_WITH_ASSOCIATED_CURVES
              ANDOR 
              TEXT_LITERAL_WITH_BLANKING_BOX)
  SUBTYPE OF (Detailed_geometric_model_element);
      alignment : text_alignment;
      font : font_select;
      literal : STRING;
      path : text_path;
      placement : Axis_placement;
  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_associated_curves
    SUBTYPE OF (Text_literal);
      associated_curves : SET [1:?] OF Curve;
  END_ENTITY;  
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_blanking_box
    SUBTYPE OF (Text_literal);
  END_ENTITY;  
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_delineation
    SUBTYPE OF (Text_literal);
      delineation: text_delineation;
  END_ENTITY;  
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_extent
    SUBTYPE OF (Text_literal);
      width : length_measure; 
      height : length_measure;
  END_ENTITY;  
(* USED FROM (Person_organization_arm); *)
ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Address_assignment  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_ADDRESS_ASSIGNMENT,
               EXTERNALLY_DEFINED_ADDRESS_ASSIGNMENT) ) ;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Date_time;
  date_component : Calendar_date;
  time_component : Local_time;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : Time_offset;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;
(* USED FROM (Characterizable_object_arm); *)
ENTITY Characterizable_object;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY Digital_file
SUBTYPE OF (File);
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY File
 ABSTRACT SUPERTYPE OF (ONEOF (
                        DIGITAL_FILE,
                        HARDCOPY));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY Hardcopy
SUBTYPE OF (File);
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY File_location_identification
SUBTYPE OF (External_item_identification);
WHERE
WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FILE' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
(*ENTITY Applied_state_definition_assignment;
  described_state_definition : State_definition;
  assigned_to : state_definition_of_item;
  role : State_definition_role;
END_ENTITY;*)
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY Composition_of_state_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.whole :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.part :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      part :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      whole :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : SET[1:?] OF State_definition;
  related : SET[1:?] OF State_definition;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_transition_definition
SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.end_state :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.start_state :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      end_state :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      start_state :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Document_and_version_identification_arm); *)
ENTITY Document
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Document_and_version_identification_arm); *)
ENTITY Document_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Document;
END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Design_specification
    SUPERTYPE OF (
              INTERFACE_SPECIFICATION_DOCUMENT_DEFINITION)
  SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Fabrication_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Interface_specification_document_definition
    SUBTYPE OF (Design_specification);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Language_reference_manual
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Material_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Partial_document_with_structured_text_representation_assignment
    SUBTYPE OF(Partial_document_assignment);
      structured_portion : string_representation_item_select;
    UNIQUE
      UR1: SELF\Partial_document_assignment.document_portion,
      SELF\Document_assignment.assigned_document;
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Process_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Specification_allocation
  	SUBTYPE OF (Document_assignment);
      SELF\Document_assignment.assigned_document : Specification_definition;  -- allocated_specification : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      allocated_specification : SPECIFICATION_DEFINITION := SELF\Document_assignment.assigned_document;  -- ASSIGNED_DOCUMENT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Specification_definition
  	SUPERTYPE OF (ONEOF (
              DESIGN_SPECIFICATION,
              PROCESS_SPECIFICATION,
              MATERIAL_SPECIFICATION,
              TEST_SPECIFICATION,
              LANGUAGE_REFERENCE_MANUAL))
  SUBTYPE OF (Document_definition);
	DERIVE
  		source: SET[0:?] OF Organization_or_person_in_organization_assignment :=
         bag_to_set(QUERY(temp <* USEDIN(SELF,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS') |
                         (temp.role = 'document source') ));
	WHERE
      WR1: EXISTS (source) AND (SIZEOF(source) = 1);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Surface_finish_specification
    SUBTYPE OF (Material_specification);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Test_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table
    SUBTYPE OF (Representation_item);
      property_value : LIST[1:?] OF Characteristic_data_table_row;
    WHERE
      WR1: SIZEOF(QUERY( pv <* property_value |
                  NOT (SIZEOF(pv.cell) = SIZEOF(property_value[1].cell))
                  )) = 0;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_representation
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[1:1] OF Characteristic_data_table;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_row
    SUBTYPE OF (Representation_item);
      cell : LIST [1:?] OF characteristic_data_table_cell;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_column_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      table_header_usage : Characteristic_data_table_header_decomposition FOR related;  
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      column : SET [2:?] OF Characteristic_data_table_header_decomposition FOR relating;    
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_column_header_link
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating : Characteristic_data_column_header;  -- precedent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\Independent_property_relationship.related : Characteristic_data_column_header;  -- subsequent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'sequence'; 
      precedent : CHARACTERISTIC_DATA_COLUMN_HEADER := SELF\Independent_property_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      subsequent : CHARACTERISTIC_DATA_COLUMN_HEADER := SELF\Independent_property_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
  WHERE
      WR1: subsequent <> precedent;
  END_ENTITY; 
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_header_decomposition
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating : Characteristic_data_table_header;
      SELF\Independent_property_relationship.related : Characteristic_data_column_header;
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'decomposition';
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Externally_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
      external_source : External_source;
    WHERE
      WR1: NOT(name IN pre_defined_type_qualifiers);
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Length_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Maximum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'maximum';      
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Minimum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'minimum';      
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Nominal_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: SELF\Representation.items[1]\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'nominal';
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Null_representation_item 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 
(* USED FROM (Characteristic_arm); *)
  ENTITY Plus_minus_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_with_tolerances;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Range_characteristic
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
      range_type				: range_class;
    WHERE
      WR1 : TYPEOF(SELF\Representation.items[1]) =
          TYPEOF(SELF\Representation.items[2]);
      WR2 : TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit) =
          TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
      WR3 : valid_range(SELF\Representation.items[1],
                      SELF\Representation.items[2]);          
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Statistical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [2:?] OF Numerical_item_with_unit;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Symmetrical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items |
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_DATA_ELEMENT' IN TYPEOF(ri))) = 1;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Text_representation_item
  	SUBTYPE OF (String_representation_item);
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Tolerance_characteristic
     ABSTRACT SUPERTYPE OF ((ONEOF (
                        MINIMUM_TOLERANCE_CHARACTERISTIC,
                        STATISTICAL_TOLERANCE_CHARACTERISTIC,
                        SYMMETRICAL_TOLERANCE_CHARACTERISTIC,
                        MAXIMUM_TOLERANCE_CHARACTERISTIC,
                        PLUS_MINUS_TOLERANCE_CHARACTERISTIC,
                        NOMINAL_TOLERANCE_CHARACTERISTIC))
                        ANDOR 
                        LENGTH_TOLERANCE_CHARACTERISTIC)
  SUBTYPE OF (Property_value_representation);
    WHERE
      WR1: SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
      WR2 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Boolean_representation_item
    SUBTYPE OF (Representation_item);
      the_value : BOOLEAN;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Compound_representation_item 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SEQUENCE_REPRESENTATION_ITEM,
                        SET_REPRESENTATION_ITEM))
  SUBTYPE OF (Representation_item); 
  END_ENTITY; 
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Date_time_representation_item
    SUBTYPE OF (Representation_item);
      the_value : extended_date_time_select;
  END_ENTITY; 
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Integer_representation_item
    SUBTYPE OF (Representation_item);
      the_value : INTEGER;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Logical_representation_item
    SUBTYPE OF (Representation_item);
      the_value : LOGICAL;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Rational_representation_item
    SUBTYPE OF (Representation_item);
      numerator   : INTEGER;
      denominator : INTEGER;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Real_representation_item
    SUBTYPE OF (Representation_item);
      the_value   : REAL;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Sequence_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : LIST OF Representation_item;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Set_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : SET OF Representation_item;
  END_ENTITY;
(* USED FROM (Extended_date_arm); *)
  ENTITY Year_month;
    month_component : month_in_year_number; 
    year_component  : year_number; 
  END_ENTITY;  
(* USED FROM (Extended_date_arm); *)
  ENTITY Date;
    year_component  : year_number; 
  END_ENTITY;  
(* USED FROM (Extended_date_arm); *)
  ENTITY Ordinal_date;
      day_component  : day_in_year_number;   
      year_component : year_number; 
    WHERE 
      WR1:  ( NOT leap_year ( SELF  . year_component ) AND  { 1 <= day_component <= 365 } ) OR 
        ( leap_year ( SELF . year_component ) AND { 1 <= day_component <= 366 } ) ;  
  END_ENTITY; 
(* USED FROM (Extended_date_arm); *)
  ENTITY Week_of_year_and_day_date;
    day_component  : OPTIONAL day_in_week_number;   
    year_component : year_number; 
    week_component : week_in_year_number; 
  END_ENTITY; 
(* USED FROM (External_properties_arm); *)
  ENTITY External_library_property
    SUBTYPE OF (Independent_property);
      external_id  : STRING;    
      source       : External_source;
    DERIVE
      library_type : STRING := source.id;
  END_ENTITY;
(* USED FROM (External_properties_arm); *)
  ENTITY Plib_property_reference
    SUBTYPE OF (Independent_property);
      code       : STRING;
      version    : STRING;
      name_scope : Plib_class_reference;
  END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Item_design_association;
  configuration : Product_configuration;
  design : version_or_definition;
UNIQUE
  UR1: configuration, design;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : Product_concept;
INVERSE
  corresponding_design : SET[0:1] OF Item_design_association FOR configuration;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration_hierarchical_relationship
  SUBTYPE OF (Product_configuration_relationship);

  (* removed : SELF\Product_configuration_relationship.child :  PRODUCT_CONFIGURATION *)

  (* removed : SELF\Product_configuration_relationship.parent :  PRODUCT_CONFIGURATION *)
    DERIVE
      child : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.related_product_configuration;  -- RELATED_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      parent : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.relating_product_configuration;  -- RELATING_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration_relationship
  SUPERTYPE OF (ONEOF (
              PRODUCT_CONFIGURATION_HIERARCHICAL_RELATIONSHIP,
              PRODUCT_CONFIGURATION_REVISION_SEQUENCE));
  relating_product_configuration : Product_configuration;
  related_product_configuration : Product_configuration;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration_revision_sequence
  SUBTYPE OF (Product_configuration_relationship);

  (* removed : SELF\Product_configuration_relationship.predecessor :  PRODUCT_CONFIGURATION *)

  (* removed : SELF\Product_configuration_relationship.successor :  PRODUCT_CONFIGURATION *)
    DERIVE
      predecessor : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.relating_product_configuration;  -- RELATING_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.related_product_configuration;  -- RELATED_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_concept_identification_arm); *)
ENTITY Market;
  name                      : STRING;
  market_segment_type       : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_concept_identification_arm); *)
ENTITY Product_concept;
  id                        : STRING;
  name                      : STRING;
  description               : OPTIONAL STRING;
  target_market             : OPTIONAL Market;
UNIQUE
  UR1: id;
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Included_text_block
  SUBTYPE OF (Representation_item);
  source : Structured_text_representation;
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
 ENTITY Structured_text_composition
   SUBTYPE OF (Representation_item);
  content: string_representation_item_list_or_set;
 END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Structured_text_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET [1:1] OF string_representation_item_select; 
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Tagged_text_item
  SUBTYPE OF (String_representation_item);
WHERE
  WR1: SIZEOF (QUERY (using_rep <* USEDIN(SELF,
       'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS') |
  NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.TAGGED_TEXT_FORMAT' IN
  TYPEOF (using_rep.context_of_items))
       )) = 0;
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Tagged_text_format
  SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Uniform_resource_identifier
  SUBTYPE OF (String_representation_item);
END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Expanded_uncertainty
    SUBTYPE OF (Standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Measure_qualification;
      name              : STRING; 
      description       : STRING; 
      qualified_measure : Value_with_unit;
      qualifiers        : SET[1:?] OF value_qualifier;
    WHERE
      WR1 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'NUMERICAL_ITEM_WITH_UNIT' IN TYPEOF(qualified_measure));
      WR2 : SIZEOF(QUERY(temp <* qualifiers | 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRECISION_QUALIFIER' IN TYPEOF(temp))) < 2;      
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Precision_qualifier;
    precision_value : INTEGER;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Pre_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
    WHERE
      WR1: SELF\Type_qualifier.name IN pre_defined_type_qualifiers;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualified_numerical_item_with_unit 
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item); 
  END_ENTITY; 
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualified_representation_item 
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Representation_item); 
       qualifiers : SET [1:?] OF value_qualifier; 
    WHERE 
      WR1: SIZEOF(QUERY(temp <* qualifiers | 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRECISION_QUALIFIER' 
        IN TYPEOF(temp))) < 2; 
  END_ENTITY; 
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualitative_uncertainty
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : STRING; 
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Standard_uncertainty
    SUPERTYPE OF (
              EXPANDED_UNCERTAINTY)
  SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Type_qualifier
      ABSTRACT SUPERTYPE OF ( ( 
                        PRE_DEFINED_TYPE_QUALIFIER )ANDOR( ONEOF (
                        EXTERNALLY_DEFINED_TYPE_QUALIFIER,
                        PRE_DEFINED_TYPE_QUALIFIER) )  ) ;
    name : STRING;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Uncertainty_qualifier
    SUPERTYPE OF (ONEOF (
              STANDARD_UNCERTAINTY,
              QUALITATIVE_UNCERTAINTY));
      measure_name : STRING; 
      description  : STRING; 
  END_ENTITY;
(* USED FROM (External_class_arm); *)
  ENTITY External_class
    SUBTYPE OF (Class);
      external_source : External_class_library;
  END_ENTITY;
(* USED FROM (External_class_arm); *)
  ENTITY External_class_library
    SUBTYPE OF (External_source);
  END_ENTITY;
(* USED FROM (Name_assignment_arm); *)
ENTITY Name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;
(* USED FROM (Effectivity_application_arm); *)
ENTITY Effectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Dated_effectivity
  SUBTYPE OF (Effectivity);
  start_bound : date_or_event;
  end_bound   : OPTIONAL date_or_event;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Effectivity
  SUPERTYPE OF (ONEOF (
              SERIAL_EFFECTIVITY,
              DATED_EFFECTIVITY,
              LOT_EFFECTIVITY,
              TIME_INTERVAL_EFFECTIVITY));
  id             : STRING;
  name           : STRING;
  description    : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Effectivity_relationship;
  relation_type : STRING;
  description   : OPTIONAL STRING;
  relating_effectivity  : Effectivity;
  related_effectivity  : Effectivity;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Lot_effectivity
  SUBTYPE OF (Effectivity);
  lot_id    : STRING;
  lot_size  : Value_with_unit;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Serial_effectivity
  SUBTYPE OF (Effectivity);
  start_id : STRING;
  end_id   : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Time_interval_effectivity
  SUBTYPE OF (Effectivity);
  effectivity_period : Time_interval;
END_ENTITY;   
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : Time_interval;
  related_time_interval : Time_interval;
END_ENTITY;
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval_with_bounds
  SUBTYPE OF (Time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL Duration;
WHERE
  WR1: NOT (EXISTS (secondary_bound) AND EXISTS (duration_from_primary_bound));
  WR2: EXISTS (primary_bound) OR EXISTS (secondary_bound);
END_ENTITY;
(* USED FROM (Part_occurrence_arm); *)
  ENTITY Definition_based_part_occurrence
    SUBTYPE OF (Definition_based_product_occurrence, Part_occurrence);
      SELF\Definition_based_product_occurrence.derived_from : Part_view_definition;
  END_ENTITY;
(* USED FROM (Part_occurrence_arm); *)
  ENTITY Part_occurrence
     ABSTRACT SUPERTYPE
 SUBTYPE OF (Product_occurrence);
      SELF\Product_view_definition.defined_version : Part_version;
  END_ENTITY;
(* USED FROM (Part_occurrence_arm); *)
  ENTITY Part_occurrence_definition_relationship
    SUBTYPE OF (Product_occurrence_definition_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Part_view_definition;
      SELF\Product_occurrence_definition_relationship.related_view  : Part_occurrence;
    DERIVE
      id : STRING := SELF\Product_occurrence_definition_relationship.related_view\Product_view_definition.id;
  END_ENTITY;
(* USED FROM (Part_occurrence_arm); *)
  ENTITY Specification_based_part_occurrence
    SUBTYPE OF (Specification_based_product_occurrence, Part_occurrence);
  END_ENTITY;
(* USED FROM (Product_structure_arm); *)
ENTITY Alternate_part_relationship
  SUBTYPE OF (Alternate_product_relationship);
  SELF\Alternate_product_relationship.alternate_product : Part;
  SELF\Alternate_product_relationship.base_product : Part;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Activity_method_assignment;
  relation_type : STRING;
  assigned_method : Activity_method;
  associated_request : Work_request;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Affected_items_assignment;
  assigned_work_request : Work_request;
  items : SET[1:?] OF affected_item_select;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_WORK_REQUEST,
               EXTERNALLY_DEFINED_WORK_REQUEST) ) ;
  request_id : STRING;
  version_id : STRING;
  description : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request_status  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_WORK_REQUEST_STATUS,
               EXTERNALLY_DEFINED_WORK_REQUEST_STATUS) ) ;
  status : STRING;
  work_request : Work_request;
END_ENTITY;
(* USED FROM (Configuration_effectivity_arm); *)
ENTITY Item_usage_effectivity;
  effectivity_domain : Effectivity;
  item_usage_relationship : item_usage_relationship_item;
  resolved_configuration : Item_design_association;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Assigned_document_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : document_property_item;
DERIVE
  SELF\Assigned_property.name : STRING := 'document property';
WHERE
  WR1: SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DOCUMENT_DEFINITION', 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FILE']*TYPEOF(SELF\Assigned_property.described_element)) = 1;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Descriptive_document_property
  SUBTYPE OF (String_representation_item);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Document_property_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF descriptive_or_numerical;
WHERE
  WR1: SIZEOF(QUERY( pr <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROPERTY_DEFINITION_REPRESENTATION.REP') | 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSIGNED_PROPERTY' IN TYPEOF (pr\Property_representation.property)))> 0;
  WR2: SELF\Representation.context_of_items.kind = 'document parameters';
  WR3: SIZEOF(QUERY(it1 <* SELF\Representation.items | SIZEOF(QUERY(it2 <* SELF\Representation.items | it1.name = it2.name)) > 1 ))= 0;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Numerical_document_property
  SUBTYPE OF (Numerical_item_with_unit);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;
(* USED FROM (Document_structure_arm); *)
ENTITY Document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : Document_definition;
  related_document_definition : Document_definition;
WHERE
  WR1: relating_document_definition :<>: related_document_definition;
END_ENTITY;
(* USED FROM (Document_structure_arm); *)
ENTITY File_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : File;
  related_document_file : File;
WHERE
  WR1: relating_document_file:<>: related_document_file;
END_ENTITY;
(* USED FROM (Incomplete_data_reference_mechanism_arm); *)
  ENTITY Incomplete_reference_marking
    SUBTYPE OF (Classification_assignment);
    WHERE
      WR1: SIZEOF(QUERY(item <* SELF\Classification_assignment.items |  NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.IDRM_MARKED_ITEM' IN TYPEOF(item)))) = 0;
      WR2: SELF\Classification_assignment.assigned_class.id = 'reference';
  END_ENTITY;
(* USED FROM (Time_interval_assignment_arm); *)
ENTITY Time_interval_assignment;
  assigned_time_interval : Time_interval;
  role : Time_interval_role;
  items : SET[1:?] OF time_interval_item;
END_ENTITY;
(* USED FROM (Time_interval_assignment_arm); *)
ENTITY Time_interval_role;
  name : STRING;
  description : STRING;
END_ENTITY;
(* USED FROM (Work_order_arm); *)
ENTITY Directed_activity
  SUBTYPE OF (Activity);
  directive : Work_order;
END_ENTITY;
(* USED FROM (Work_order_arm); *)
ENTITY Work_order;
  name : STRING;
  description : OPTIONAL STRING;
  in_response_to : SET[0:?] OF Work_request;
END_ENTITY;
(* USED FROM (Requirement_view_definition_arm); *)
ENTITY Requirement_view_definition
  SUBTYPE OF (Product_view_definition);
    SELF\Product_view_definition.defined_version : Requirement_version;
END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
ENTITY Requirement
SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
ENTITY Requirement_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Requirement;
END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
ENTITY Requirement_version_relationship
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Requirement_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_version_relationship.related_version : Requirement_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : REQUIREMENT_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : REQUIREMENT_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Alternative_solution;
    id : STRING;
    version_id : OPTIONAL STRING;
    base_element : complex_product_select;
  END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Solution_element;
    resolved_requirement: complex_product_select;
    element: part_occurrence_select;
    description : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Supplier_solution
    SUBTYPE OF (Alternative_solution);
      supplier : Organization;
      probability_rate : OPTIONAL REAL;
    DERIVE
      actual_rate : REAL := NVL(probability_rate, 1.0);
    WHERE
      WR1: { 0.0 <= actual_rate <= 1.0 };
  END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Technical_solution
    SUBTYPE OF (Alternative_solution);
      description : STRING;
  END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
ENTITY Definition_based_function_occurrence
  SUBTYPE OF (Definition_based_product_occurrence);
  SELF\Definition_based_product_occurrence.derived_from :
Functional_element_definition;
END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
ENTITY Specification_based_function_occurrence
  SUBTYPE OF (Specification_based_product_occurrence, Single_instance);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FUNCTIONAL_ELEMENT_VERSION' IN
TYPEOF(SELF\Product_view_definition.defined_version);
END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown
    SUBTYPE OF (Breakdown);
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown_context
    SUBTYPE OF (Breakdown_context);
      SELF\Breakdown_context.breakdown         : Physical_breakdown_version;
      SELF\Breakdown_context.breakdown_element : Physical_element_definition;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown_version
    SUBTYPE OF (Breakdown_version);
      SELF\Breakdown_version.of_product : Physical_breakdown;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element
    SUBTYPE OF (Breakdown_element);
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_definition
    SUBTYPE OF (Breakdown_element_definition);
      SELF\Breakdown_element_definition.defined_version : Physical_element_version;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_usage
    SUBTYPE OF (Breakdown_element_usage);
      SELF\View_definition_relationship.relating_view : Physical_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\View_definition_relationship.related_view : Physical_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_version
    SUBTYPE OF (Breakdown_element_version);
      SELF\Breakdown_element_version.of_product : Physical_element;
  END_ENTITY;
(* USED FROM (Part_collection_arm); *)
  ENTITY Collected_item_association
    SUBTYPE OF (Part_occurrence_definition_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Collection_definition;
    WHERE
      WR1: NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(SELF));
  END_ENTITY;
(* USED FROM (Part_collection_arm); *)
  ENTITY Collection_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;
(* USED FROM (Product_placement_arm); *)
ENTITY Occurrence_placement
 ABSTRACT SUPERTYPE OF (ONEOF (
                        PART_OCCURRENCE_PLACEMENT,
                        PHYSICAL_ELEMENT_PLACEMENT));
  reference_physical_element: Physical_element_definition;
  reference_geometric_space : Geometric_model;
  positioned_representation : template_instance;
END_ENTITY;
(* USED FROM (Product_placement_arm); *)
ENTITY Part_occurrence_placement
SUBTYPE OF(Occurrence_placement);
  placed_part_occurrence: Single_instance;
END_ENTITY;
(* USED FROM (Product_placement_arm); *)
ENTITY Physical_element_placement
SUBTYPE OF(Occurrence_placement);
  placed_physical_element: Physical_element_definition;
WHERE
WR1: placed_physical_element\Product_view_definition.defined_version :<>: 
	SELF\Occurrence_placement.reference_physical_element\Product_view_definition.defined_version;
END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown
    SUBTYPE OF (Product);
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_context;
    id                : STRING;
    name              : STRING;
    description       : OPTIONAL STRING;
    breakdown         : Breakdown_version;
    breakdown_element : Breakdown_element_definition;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element
    SUBTYPE OF (Product);
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_definition
    SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Breakdown_element_version;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_realization
    SUBTYPE OF (Product_definition_element_relationship);
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_usage
    SUBTYPE OF (View_definition_usage);
      name : STRING;

      SELF\View_definition_relationship.relating_view : Breakdown_element_definition;  -- parent_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\View_definition_relationship.related_view : Breakdown_element_definition;  -- child_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      child_element : BREAKDOWN_ELEMENT_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      parent_element : BREAKDOWN_ELEMENT_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown_element;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_of;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : Breakdown_version;
    of_view     : Product_view_definition;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown;
    INVERSE
      breakdown_of : SET[1:?] OF Breakdown_of FOR breakdown;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Product_definition_element_relationship;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : breakdown_item;
    product     : product_item;
  END_ENTITY;
(* USED FROM (Generic_product_occurrence_arm); *)
  ENTITY Definition_based_product_occurrence
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Product_occurrence);
      derived_from: Product_view_definition;
    WHERE
      WR1: SELF\Product_view_definition.defined_version = derived_from.defined_version;
  END_ENTITY;
(* USED FROM (Generic_product_occurrence_arm); *)
  ENTITY Product_occurrence
     ABSTRACT SUPERTYPE OF (ONEOF (
                        PRODUCT_OCCURRENCE_WITH_QUANTITY,
                        SINGLE_INSTANCE)
                        AND (ONEOF (
                        DEFINITION_BASED_PRODUCT_OCCURRENCE,
                        SPECIFICATION_BASED_PRODUCT_OCCURRENCE)))
  SUBTYPE OF (Product_view_definition);
    INVERSE
      occurrence_contexts : SET [0:?] OF Product_occurrence_definition_relationship FOR related_view;
      view_definition_contexts : SET [0:?] OF View_definition_relationship FOR related_view;
    WHERE
      WR1: SIZEOF(occurrence_contexts) + SIZEOF(view_definition_contexts) >= 1;
      WR2: NOT EXISTS(SELF\Product_view_definition.additional_characterization);
      WR3: SIZEOF(QUERY( oc <* occurrence_contexts |
            NOT( NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(oc)) OR
                 NOT EXISTS(oc\Assembly_component_relationship.quantity))
               )) = 0;
  END_ENTITY;
(* USED FROM (Generic_product_occurrence_arm); *)
  ENTITY Product_occurrence_with_quantity
     ABSTRACT SUPERTYPE OF (ONEOF (
                        QUANTIFIED_INSTANCE,
                        SELECTED_INSTANCE))
  SUBTYPE OF (Product_occurrence);
      occurrence_quantity : OPTIONAL extended_value_with_unit;
  END_ENTITY;
(* USED FROM (Generic_product_occurrence_arm); *)
  ENTITY Quantified_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      SELF\Product_occurrence_with_quantity.occurrence_quantity : Value_with_unit;
  END_ENTITY;
(* USED FROM (Generic_product_occurrence_arm); *)
  ENTITY Selected_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      quantity_criterion : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Generic_product_occurrence_arm); *)
  ENTITY Single_instance
    SUBTYPE OF (Product_occurrence);
  END_ENTITY;
(* USED FROM (Generic_product_occurrence_arm); *)
  ENTITY Specification_based_product_occurrence
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Product_occurrence);
      SELF\Product_view_definition.defined_version : Specification_based_product_version;
  END_ENTITY;
(* USED FROM (Specified_product_arm); *)
  ENTITY Product_specification
    SUBTYPE OF (Product_configuration);
      version_id                              : OPTIONAL STRING;
      SELF\Product_configuration.item_context : Product_class;
      defining_specifications                 : SET [0:?] OF Specification;
  END_ENTITY;
(* USED FROM (Specified_product_arm); *)
  ENTITY Specification_based_product_version
    SUBTYPE OF (Product_version);
    INVERSE
      specification_source : Item_design_association FOR design;
    WHERE
      WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_SPECIFICATION' IN TYPEOF(specification_source.configuration);
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_breakdown
    SUBTYPE OF (Breakdown);
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_breakdown_context
    SUBTYPE OF (Breakdown_context);
      SELF\Breakdown_context.breakdown : Functional_breakdown_version;
      SELF\Breakdown_context.breakdown_element : Functional_element_definition;
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_breakdown_version
    SUBTYPE OF (Breakdown_version);
    SELF\Breakdown_version.of_product : Functional_breakdown;
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element
    SUBTYPE OF (Breakdown_element);
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element_definition
    SUBTYPE OF (Breakdown_element_definition);
      SELF\Breakdown_element_definition.defined_version : Functional_element_version;
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element_usage
    SUBTYPE OF (Breakdown_element_usage);
      SELF\View_definition_relationship.relating_view : Functional_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\View_definition_relationship.related_view : Functional_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element_version
    SUBTYPE OF (Breakdown_element_version);
      SELF\Breakdown_element_version.of_product : Functional_element;
  END_ENTITY;
(* USED FROM (Specification_based_configuration_arm); *)
ENTITY Configuration;
  configured_element : configured_item_select;
  is_solution_for : configured_specification_select;
  configuration_type : configuration_kind;
  inheritance_type : configuration_inheritance_types;
WHERE
WR1: consistent_configuration_type(SELF);
END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_category_association;
  associated_product_class : Product_class;
  mandatory : BOOLEAN;
  associated_category : Specification_category;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_condition_association;
  condition_type : STRING;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_condition : Specification_expression;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_inclusion_association;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_inclusion : Specification_inclusion;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_specification_association;
  associated_product_class : Product_class;
  association_type : STRING;
  associated_specification : Specification;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
ENTITY Product_class
  SUBTYPE OF (Product_concept);
  version_id : OPTIONAL STRING;
  level_type : OPTIONAL STRING;
WHERE
WR1: NOT EXISTS(SELF\Product_concept.target_market);
END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Product_class_relationship;
  description : OPTIONAL STRING;
  relating : Product_class;
  related : Product_class;
  relation_type : STRING;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification;
  id : STRING;
  version_id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  category : Specification_category;
  package : BOOLEAN;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_category;
  id : STRING;
  description : STRING;
  implicit_exclusive_condition : BOOLEAN;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_category_hierarchy;
  sub_category : Specification_category;
  super_category : Specification_category;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_expression;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  operation : expression_operator;
  operand : SET[1:?] OF specification_operand_select;
 WHERE
 WR1: (operation <> not_operator) OR (SIZEOF(operand)=1); 
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_inclusion;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  if_condition : specification_operand_select;
  included_specification : specification_operand_select;
 END_ENTITY;
(* USED FROM (Group_arm); *)
ENTITY Group;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  elements : SET[0:?] OF groupable_item;
  membership_meaning : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Group_arm); *)
ENTITY Group_relationship;
  description : OPTIONAL STRING;
  relation_type : STRING;
  relating_group : Group;
  related_group : Group;
END_ENTITY;
(* USED FROM (Product_replacement_arm); *)
ENTITY Alternate_product_relationship;
   name : OPTIONAL STRING;
   description : OPTIONAL STRING;
   alternate_product : Product;
   base_product : Product;
   criteria : OPTIONAL STRING;
UNIQUE
   UR1: alternate_product , base_product ;
WHERE
   WR1: alternate_product  :<>: base_product ;
   WR2: EXISTS(criteria) OR (TYPEOF(SELF\Alternate_product_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_replacement_arm); *)
ENTITY Assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship        : Assembly_component_relationship;
  substitute_relationship  : Assembly_component_relationship;
UNIQUE
  UR1 : base_relationship, substitute_relationship;
WHERE
  WR1: base_relationship.relating_view :=: substitute_relationship.relating_view;
  WR2: base_relationship :<>: substitute_relationship;
END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Annotation_curve
      ABSTRACT SUPERTYPE OF ((ONEOF (
                        LEADER,
                        PROJECTION_CURVE,
                        DIMENSION_CURVE)
                        ANDOR (
                        GENERIC_ANNOTATION_CURVE)) ) 
  SUBTYPE OF (Annotation_element);
      annotation_curve_type       : OPTIONAL STRING;
      SELF\Styled_element.element : Curve;
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Annotation_element 
      SUPERTYPE OF ( ( ONEOF (
               TEXT,
               ANNOTATION_CURVE) )ANDOR( ONEOF (
               ANNOTATION_SUBFIGURE,
               ANNOTATION_SYMBOL,
               FILL_AREA) )  ) 
  SUBTYPE OF (Detailed_geometric_model_element, Styled_element);
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Annotation_text
    SUBTYPE OF (Detailed_geometric_model_element);
      replicated_model : Text_string_representation;
      source           : Axis_placement;
      target           : Axis_placement;
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Defined_character_glyph
    SUBTYPE OF (Detailed_geometric_model_element);
      placement : Axis_placement;
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Dimension_text
    SUBTYPE OF (Text);
    WHERE
      WR1: name IN ['dimension value', 'tolerance value', 'unit text', 'prefix text', 'suffix text'];
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Text 
    SUBTYPE OF (Annotation_element);
      SELF\Styled_element.element : text_or_composite_text;   -- text : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      text : TEXT_OR_COMPOSITE_TEXT := SELF\Styled_element.element;  -- ELEMENT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Text_string_representation
    SUBTYPE OF (Styled_model);
    SELF\Representation.items : SET [1:1] OF text_string_representation_item_select;
  END_ENTITY; 
(* USED FROM (Associative_text_arm); *)
  ENTITY Text_style;  
    font_size_scale  : REAL; 
    mirror_placement : OPTIONAL Axis_placement;
    text_colour      : Colour; 
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Appearance_assignment;
    appearance_components : SET[1:?] OF appearance_select;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Context_dependent_appearance_assignment
    SUBTYPE OF (Appearance_assignment);
      context_definition : appearance_context;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Context_dependent_over_riding_styled_element
    SUBTYPE OF (Over_riding_styled_element);
      context_definition : LIST [1:?] OF overriding_style_context;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Over_riding_styled_element
    SUBTYPE OF (Styled_element);
      over_ridden_element : Styled_element;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Planar_box
    SUBTYPE OF (Detailed_geometric_model_element);
      size_in_x : length_measure;
      size_in_y : length_measure;
      placement : Axis_placement; 
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Styled_element
    SUBTYPE OF (Representation_item);
      appearance : styled_element_appearance;
      element : Detailed_geometric_model_element;
      invisible : BOOLEAN;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Styled_model
      ABSTRACT SUPERTYPE OF (ONEOF (
                        VIEW,
                        VIEW_AREA) ) 
  SUBTYPE OF (Representation);
      version_id : OPTIONAL STRING;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
    DERIVE
      styled_geometry : SET[0:?] OF Geometric_model := 
      bag_to_set(QUERY (r <* (USEDIN(SELF\Representation.context_of_items,
	 	'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 
	 	'REPRESENTATION.' + 'CONTEXT_OF_ITEMS')) | 
	 	'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GEOMETRIC_MODEL' IN TYPEOF(r)));
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Styled_model_replication 
    SUBTYPE OF (Representation_item); 
      replicated_model : Styled_model; 
      source : Axis_placement; 
      target : geometric_mapping_target; 
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Externally_defined_marker
    SUBTYPE OF (Marker);
      marker_reference : STRING;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Externally_defined_terminator
    SUBTYPE OF (Terminator);
      terminator_reference : STRING;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Marker;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Point_appearance;
    marker : Marker;
    colour : Colour;
    size : REAL;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Predefined_marker
    SUBTYPE OF (Marker);
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Predefined_terminator
    SUBTYPE OF (Terminator);
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Terminator;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY User_defined_marker
    SUBTYPE OF (Marker);
      symbol : Geometric_model;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY User_defined_terminator
    SUBTYPE OF (Terminator);
      symbol : Geometric_model;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Vector_appearance
    SUBTYPE OF (Curve_appearance);
      terminator_type : Terminator;
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Curve_appearance;
    colour : Colour;
    font   : Curve_font;
    width  : REAL;
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Curve_font
    SUPERTYPE OF (ONEOF (
              EXTERNALLY_DEFINED_CURVE_FONT,
              PREDEFINED_CURVE_FONT,
              USER_DEFINED_CURVE_FONT));
      curve_font_name : STRING;
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Curve_font_pattern;
    on_segment : REAL;
    off_segment : REAL;
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Externally_defined_curve_font
    SUBTYPE OF (Curve_font);
      curve_font_reference : STRING;
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Predefined_curve_font
    SUBTYPE OF (Curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous', 'chain', 'chain double dash', 'dashed', 'dotted'];
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Solid_curve_font
    SUBTYPE OF (Predefined_curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous'];
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY User_defined_curve_font
    SUBTYPE OF (Curve_font);
      pattern        : SET[1:?] OF Curve_font_pattern;
      segment_symbol : Geometric_model;
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Externally_defined_hatch_style
    SUBTYPE OF (Hatch_style); 
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Externally_defined_tile_style
    SUBTYPE OF (Tile_style); 
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Hatch_style
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXTERNALLY_DEFINED_HATCH_STYLE,
                        USER_DEFINED_HATCH_STYLE))
  SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Tile_style
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXTERNALLY_DEFINED_TILE_STYLE,
                        USER_DEFINED_TILE_STYLE))

	SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY User_defined_hatch_style
    SUBTYPE OF (Hatch_style);
      hatch_line_appearance         : Curve_appearance;
      start_of_next_hatch_line      : Vector;
      point_of_reference_hatch_line : Cartesian_point;
      pattern_start                 : Cartesian_point;
      hatch_line_angle              : Angle_data_element;
    WHERE
     WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_CURVE_FONT' IN TYPEOF(SELF.hatch_line_appearance.font);
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY User_defined_tile_style
    SUBTYPE OF (Tile_style);
      first_direction_repeat_factor  : Vector;
      second_direction_repeat_factor : Vector;
      tiling_scale                   : INTEGER;
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Detailed_geometric_model_element_relationship;
    item_1: Detailed_geometric_model_element;
    item_2: Detailed_geometric_model_element;
   WHERE 
    WR1: item_1 <> item_2;
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Geometric_model_element_relationship
    SUBTYPE OF (Detailed_geometric_model_element_relationship, Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Vector
    SUBTYPE OF (Detailed_geometric_model_element);
      orientation: Direction;
      magnitude: length_measure;
    WHERE
      WR1 : magnitude >= 0.0 ;
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Boundary_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Control_grid_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Parameter_line_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
      number_of_u_curves : INTEGER;
      number_of_v_curves : INTEGER;
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Segmentation_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Silhouette_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_appearance;
    side   : surface_side;    
    styles : SET[1:7] OF Surface_appearance_element;
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_appearance_element
      ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        SURFACE_RELATED_CURVE_APPEARANCE,
                        SURFACE_COLOUR) )ANDOR( ONEOF (
                        SURFACE_COLOUR,
                        SURFACE_RELATED_CURVE_APPEARANCE,
                        SURFACE_STYLE_RENDERING) )  ) ; 
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_colour 
    SUBTYPE OF (Surface_appearance_element);
      assigned_colour : Colour;
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_related_curve_appearance 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        BOUNDARY_CURVE_APPEARANCE,
                        CONTROL_GRID_APPEARANCE,
                        PARAMETER_LINE_APPEARANCE,
                        SEGMENTATION_CURVE_APPEARANCE,
                        SILHOUETTE_CURVE_APPEARANCE))

	SUBTYPE OF (Surface_appearance_element);
      style : Curve_appearance;
  END_ENTITY;
(* USED FROM (Layer_assignment_arm); *)
  ENTITY Layer;
    id               : STRING;
    description      : STRING;
    layered_elements : SET[1:?] OF Representation_item;
  END_ENTITY;
(* USED FROM (Layer_assignment_arm); *)
  ENTITY Structuring_method_hierarchy;
    relating : structuring_method_select;
    related  : Group;
  END_ENTITY;
(* USED FROM (Software_arm); *)
  ENTITY Software 
    SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY;
(* USED FROM (Software_arm); *)
  ENTITY Software_definition 
    SUBTYPE OF (Information_definition);
    SELF\Product_view_definition.defined_version : Software_version;
  END_ENTITY;
(* USED FROM (Software_arm); *)
  ENTITY Software_version
    SUBTYPE OF (Information_version);
    SELF\Product_version.of_product : Software;
  END_ENTITY;
(* USED FROM (Alias_identification_arm); *)
  ENTITY Alias_identification
    SUBTYPE OF (Identification_assignment);
      SELF\Identification_assignment.items : SET [1:?] OF alias_identification_item;
    DERIVE
      SELF\Identification_assignment.role : STRING := 'alias';
  END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification;
  name : STRING;
  description : OPTIONAL STRING;
  kind : STRING;
END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification_assignment;
  assigned_certification : Certification;
  items : SET[1:?] OF certification_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
UNIQUE
  UR1: language_code;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language_indication;
   considered_instance: string_select;
   considered_attribute: STRING;
   used_language:  Language;
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Attribute_translation_assignment;
   considered_instance: string_select;
   considered_attribute: STRING;
   translation_text : STRING;
   translation_language: Language;
UNIQUE
  UR1: considered_instance, considered_attribute, translation_language;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET[0:?] OF Organization;
  planned_start_date : OPTIONAL date_or_event;
  planned_end_date : OPTIONAL date_or_event;
  actual_start_date : OPTIONAL date_or_date_time_select;
  actual_end_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_assignment;
  assigned_project : Project;
  role : STRING;
  items : SET[1:?] OF project_item;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : Project;
  related_project : Project;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  actual_start_date : OPTIONAL date_or_date_time_select;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_event : Event;
  related_event : Event;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Relative_event
  SUBTYPE OF (Event);
  base_event : Event;
  offset : Duration;
END_ENTITY;
(* USED FROM (Part_definition_relationship_arm); *)
ENTITY Make_from_relationship
  SUBTYPE OF (View_definition_usage);
  SELF\View_definition_relationship.relating_view: Part_view_definition;
  SELF\View_definition_relationship.related_view: Part_view_definition;
  quantity  : OPTIONAL Value_with_unit;
  priority  : OPTIONAL INTEGER;
WHERE
WR1: SELF\View_definition_relationship.relating_view :<>: 
  SELF\View_definition_relationship.related_view ;
WR2: NOT(EXISTS(quantity)) XOR 
	((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;
(* USED FROM (Information_product_arm); *)
ENTITY Information_product
   ABSTRACT SUPERTYPE
 	SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Information_product_arm); *)
ENTITY Information_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Information_product;
END_ENTITY;
(* USED FROM (Information_product_arm); *)
ENTITY Information_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Information_version;
END_ENTITY;
(* USED FROM (Event_assignment_arm); *)
ENTITY Event_assignment;
  assigned_event : Event;
  items : SET[1:?] OF event_item;
  role : STRING;
END_ENTITY;

(* Implicit interfaced from: Specification_control_arm *)
  FUNCTION aggregate1_in_aggregate2 (agg1, agg2: AGGREGATE OF GENERIC): LOGICAL;
    RETURN(SIZEOF(QUERY (ele <* agg1 | VALUE_IN(agg2, ele)))= SIZEOF(agg1));
  END_FUNCTION;

(* Implicit interfaced from: Mesh_topology_arm *)
  FUNCTION this_schema: STRING;
    RETURN ('MESH_TOPOLOGY_SCHEMA');
  END_FUNCTION;

(* Implicit interfaced from: Mesh_topology_arm *)
  FUNCTION cell_counts (arg : vertex_defined_cell): ARRAY[1:3] OF INTEGER;
    LOCAL
      om1 : INTEGER := 0;
      om1sq : INTEGER := om1 * om1; -- KAH Fix power of two 
      vts : INTEGER; -- (order - 1) squared
      eds : INTEGER; -- number of bounding vertices
      qf : INTEGER := 0; -- number of edges
      tf : INTEGER := 0; -- number of quadrilateral faces
      result : ARRAY[1:3] OF INTEGER := [0, 0, 0]; -- number of triangular faces
    END_LOCAL;

    CASE arg.order OF
      arg.order.linear:
        om1 := 0;
      arg.order.quadratic:
        om1 := 1;
      arg.order.cubic:
        om1 := 2;
      OTHERWISE:
        RETURN (result);
    END_CASE;
    om1sq := om1 * om1;
    CASE arg.shape OF
      single:
        BEGIN
          vts := 1;
          eds := 0;
          qf := 0;
          tf := 0;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := 0;
        END;
      line:
        BEGIN
          vts := 2;
          eds := 1;
          qf := 0;
          tf := 0;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := 0;
        END;
      quadrilateral:
        BEGIN
          vts := 4;
          eds := 4;
          qf := 1;
          tf := 0;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := om1sq * qf;
        END;
      triangle:
        BEGIN
          vts := 3;
          eds := 3;
          qf := 0;
          tf := 1;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := (om1 - 1) * tf;
          CASE arg.order OF
            arg.order.linear:
              result[3] := 0;
          END_CASE;
        END;
      polygon:
        BEGIN
          result[2] := 0;
          result[3] := 0;
        END;
      hexahedron:
        BEGIN
          vts := 8;
          eds := 12;
          qf := 6;
          tf := 0;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := om1sq * (qf + om1);
        END;
      wedge:
        BEGIN
          vts := 6;
          eds := 9;
          qf := 3;
          tf := 2;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := om1sq * qf + om1 * tf;
        END;
      tetrahedron:
        BEGIN
          vts := 4;
          eds := 6;
          qf := 0;
          tf := 4;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := (om1 - 1) * tf;
          CASE arg.order OF
            arg.order.linear:
              result[3] := 0;
          END_CASE;
        END;
      pyramid:
        BEGIN
          vts := 5;
          eds := 8;
          qf := 1;
          tf := 4;
          result[1] := vts;
          result[2] := om1 * eds;
          result[3] := om1sq * qf + (om1 - 1) * tf;
          CASE arg.order OF
            arg.order.linear:
              result[3] := 0;
          END_CASE;
        END;
    END_CASE;
    RETURN (result);
  END_FUNCTION;
(* REFERENCE FROM (Characterizable_object_arm); *)
  FUNCTION bag_to_set(
    the_bag : BAG OF GENERIC : intype
  ) : SET OF GENERIC : intype;

    LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);
  END_FUNCTION;

(* Implicit interfaced from: Shape_feature_arm *)
 FUNCTION get_geometric_model(input : Item_shape) : SET OF Geometric_model;
 LOCAL
  sda : SET OF Shape_description_association := [];
  gm : SET OF Geometric_model := [];
 END_LOCAL;
 
  sda := bag_to_set(USEDIN(input,
	 	'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 
	 	'SHAPE_DESCRIPTION_ASSOCIATION.' + 'REPRESENTED_CHARACTERISTIC'));
 
 REPEAT i := 1 to SIZEOF(sda) BY 1;
  gm := gm + sda[i].representation;
 END_REPEAT;
 RETURN(gm);
END_FUNCTION;

(* Implicit interfaced from: Solid_with_local_modification_arm *)
  FUNCTION calculate_depth (swsrh : Solid_with_stepped_round_hole) 
                              : length_measure;
    LOCAL
      i  : INTEGER;
      td : length_measure := 0;
    END_LOCAL;
    REPEAT i := 1 TO swsrh.segments;
      td := td + swsrh.segment_depths[i];
    END_REPEAT;
    RETURN(td); 
  END_FUNCTION;

(* Implicit interfaced from: Shape_property_assignment_arm *)
  FUNCTION spa_get_definition ( input : Contextual_item_shape ): Product_view_definition;
    IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VIEW_DEFINITION_USAGE'
      IN TYPEOF(input\Item_shape.described_element))
      THEN
        RETURN(input\Item_shape.described_element\View_definition_relationship.related_view);
    END_IF;
    IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP' IN
        TYPEOF(input\Item_shape.described_element))
      THEN
        RETURN(input\Item_shape.described_element\Product_occurrence_definition_relationship.related_view);
    END_IF;    
    RETURN(?);
  END_FUNCTION;

(* Implicit interfaced from: Generic_expression_arm *)
FUNCTION Is_Acyclic (arg: Generic_expression): BOOLEAN;
RETURN (Acyclic (arg, []));
END_FUNCTION ; 

(* Implicit interfaced from: Generic_expression_arm *)
FUNCTION Acyclic (arg1: Generic_expression; 
			arg2: SET OF Generic_expression): BOOLEAN;
LOCAL
	result: BOOLEAN;
END_LOCAL;

IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIMPLE_GENERIC_EXPRESSION'
	IN TYPEOF (arg1)) 
THEN
	RETURN (TRUE);
END_IF;

IF arg1 IN arg2 
THEN 
	RETURN (FALSE);
END_IF;

IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.UNARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Unary_generic_expression.operand,arg2+[arg1]));
END_IF;

IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BINARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Binary_generic_expression.operands[1],arg2+[arg1])
	AND
	Acyclic(arg1\Binary_generic_expression.operands[2],arg2+[arg1]));
END_IF;

IF 
'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	result := TRUE;
	REPEAT i := 1 TO 
			SIZEOF (arg1\Multiple_arity_generic_expression.operands);
		result := result AND
		Acyclic(arg1\Multiple_arity_generic_expression.operands[i], arg2+[arg1]);
	END_REPEAT;

	RETURN (result);
END_IF;

END_FUNCTION; 

(* Implicit interfaced from: Mesh_topology_arm *)
  FUNCTION all_mesh_vertices (arg : array_based_unstructured_mesh_and_vertices): BOOLEAN;
    LOCAL
      vertex_set : SET OF Vertex := [];
      cell : vertex_defined_cell;
    END_LOCAL;

    REPEAT i := 1 TO arg.cell_count;
      cell := arg.cells[i];
      REPEAT j := 1 TO cell.vn_count;
        vertex_set := vertex_set + cell.vertices[j];
      END_REPEAT;
    END_REPEAT;
    IF (SIZEOF(vertex_set) <> arg.index_count) THEN
      RETURN (FALSE);
    END_IF;
    REPEAT i := 1 TO arg.index_count;
      IF ( NOT (arg.vertices[i] IN vertex_set)) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;

(* Implicit interfaced from: Production_rule_arm *)
FUNCTION local_vars_of (thing : GENERIC) : SET [0:?] OF Scalar_variable;
  LOCAL
    accum : SET [0:?] OF Scalar_variable := [];
  END_LOCAL;
  RETURN (local_vars_aux(thing, accum));
END_FUNCTION;

(* Implicit interfaced from: Production_rule_arm *)
FUNCTION local_vars_aux (thing : GENERIC; accum : SET [0:?] OF Scalar_variable) 
                                                : SET [0:?] OF Scalar_variable;
  LOCAL i,j,k : INTEGER; END_LOCAL;
  IF (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ABSTRACT_VARIABLE' IN TYPEOF(thing)) AND 
      ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RULE_DEFINITION' IN (TYPEOF(thing.scope))))
   THEN accum := accum + thing;
   ELSE IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RULE_CONDITION' IN TYPEOF(thing))
        THEN REPEAT i := 1 TO HIINDEX(thing\Atomic_formula.terms);
                accum := local_vars_aux(thing\Atomic_formula.terms[i],accum);
             END_REPEAT;
        ELSE IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIMPLE_CLAUSE' IN TYPEOF(thing))
             THEN REPEAT j := 1 TO HIINDEX(thing.formulas);
                        accum := local_vars_aux(thing.formulas[j],accum);
                  END_REPEAT;
             ELSE IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPLEX_CLAUSE' IN TYPEOF(thing))
                  THEN REPEAT k := 1 TO HIINDEX(thing.clauses);
                        accum := local_vars_aux(thing.clauses[k],accum);
                       END_REPEAT;
                  END_IF;
             END_IF;
        END_IF;
  END_IF;
  RETURN(accum);
END_FUNCTION;

(* Implicit interfaced from: Production_rule_arm *)
FUNCTION contains_variable (x : Term_select) : BOOLEAN;
  IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ABSTRACT_VARIABLE' IN TYPEOF(x)) THEN RETURN (TRUE);
      ELSE IF (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FUNC' IN TYPEOF(X)) AND
              (SIZEOF(QUERY(y <* x.terms | contains_variable(y))) > 0)) 
              THEN RETURN (TRUE);
              ELSE RETURN (FALSE);
           END_IF;
  END_IF;
END_FUNCTION;
(* REFERENCE FROM (Specification_document_arm); *)
  FUNCTION get_document_definition(
      input : documented_element_select;
      role : STRING;
      type_name : STRING) : SET OF Document_definition; 
    LOCAL
      dd : SET[0:?] OF Document_definition := [];  --this gives us access to the information base
      da : SET[0:?] OF Document_assignment :=[];
    END_LOCAL;
    da := bag_to_set(QUERY(dr <* USEDIN (input, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
	  'DOCUMENT_ASSIGNMENT.IS_ASSIGNED_TO') | (dr.role = role)));
    -- iterate over da
    REPEAT i := 1 to SIZEOF(da) by 1;
      IF(type_name IN TYPEOF (da[i].assigned_document))THEN
        dd := dd + da[i].assigned_document;
      END_IF;
    END_REPEAT;
    RETURN(dd);
  END_FUNCTION;

(* Implicit interfaced from: Geometric_model_relationship_arm *)
FUNCTION acyclic_representation_relationship
  (relation : representation_relationship; relatives : SET[1:?] OF representation; specific_relation : STRING) : BOOLEAN; 
  LOCAL
    x : SET OF representation_relationship;
  END_LOCAL;

  IF relation.rep_1 IN relatives THEN
    RETURN (FALSE);
  END_IF;
  x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

(* Implicit interfaced from: Characteristic_arm *)
  FUNCTION valid_range(input1 : Numerical_item_with_unit;
                       input2 : Numerical_item_with_unit) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION; 

(* Implicit interfaced from: Extended_date_arm *)
  FUNCTION leap_year
    (year : year_number) : BOOLEAN;
      IF ( ( ( ( year MOD  4 ) = 0 ) AND 
        ( ( year MOD  100 ) <> 0 ) ) OR ( ( year MOD 400 ) = 0 ) ) 
        THEN 
          RETURN  ( TRUE ) ; 
        ELSE 
          RETURN ( FALSE ) ; 
      END_IF ; 
  END_FUNCTION;

(* Implicit interfaced from: Specification_based_configuration_arm *)
FUNCTION consistent_configuration_type(config: Configuration): BOOLEAN;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLASS_CONDITION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(config.is_solution_for\Class_condition_association.condition_type ='part usage');
  ELSE
    RETURN(config.is_solution_for\Class_condition_association.condition_type ='design case');
  END_IF;
END_IF;

IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLASS_SPECIFICATION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(config.is_solution_for\Class_specification_association.association_type ='part usage');
  ELSE 
    RETURN(config.is_solution_for\Class_specification_association.association_type ='design case');
  END_IF;
END_IF;

RETURN(FALSE);
END_FUNCTION;

(* Implicit interfaced from: Specification_based_configuration_arm *)
FUNCTION type_of_set(items: SET OF GENERIC       ): SET OF STRING;
LOCAL
  result: SET OF STRING:= [];
END_LOCAL;

REPEAT i:=1 TO HIINDEX(items);
  result := result + TYPEOF(items[i]);
END_REPEAT;
RETURN(result);
END_FUNCTION;

(* Implicit interfaced from: Chemical_substance_arm *)
  RULE chemical_element_constraint FOR (Product);
    WHERE
      WR1: SIZEOF ( QUERY ( p <* Product | 
               (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE' IN TYPEOF (p) ) AND ((p\Product.name) IN chemical_elements) ) 
                OR
               (NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE' IN TYPEOF (p) ) AND NOT((p\Product.name) IN chemical_elements) ))) =
        SIZEOF ( Product);
  END_RULE; 

(* Implicit interfaced from: Production_rule_arm *)
RULE max_one_entity_prefix FOR (Enum_reference_prefix);
 WHERE
   WR1: SIZEOF(QUERY(x <* Enum_reference_prefix | TRUE)) <= 1;
END_RULE;

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_requirement_id FOR
      (Requirement);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Requirement | SIZEOF(QUERY (p2 <* Requirement | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE product_occurrence_usage FOR
      (Product_occurrence);
    WHERE
      WR1: SIZEOF(QUERY( po <* Product_occurrence |
      NOT (
      (SIZEOF(USEDIN(po,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW')) +
        SIZEOF(USEDIN(po,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP.PRODUCT'))) > 0
        )
        )) = 0;
  END_RULE;

(* Implicit interfaced from: Chemical_substance_arm *)
  RULE substance_view_definition_constraint FOR (Product_view_definition);
    WHERE
      WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
  END_RULE; 

(* Implicit interfaced from: Ap203_configuration_controlled_3d_design_of_mechanical_parts_and_assemblies_arm *)
  RULE shape_requires_product_view FOR 
      (Item_shape);
    WHERE
      WR1: SIZEOF(QUERY(is <* Item_shape | NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.PRODUCT_VIEW_DEFINITION' IN TYPEOF(is.described_element)))) = 0;
  END_RULE; 

(* Implicit interfaced from: Document_and_version_identification_arm *)
RULE document_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT_VERSION' IN TYPEOF ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT' IN TYPEOF ( pv.of_product) ) ) ) = 0 ;
END_RULE; 

(* Implicit interfaced from: Document_definition_arm *)
RULE document_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( dd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT_DEFINITION' IN TYPEOF (dd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT_VERSION' IN TYPEOF ( dd.defined_version) ) ) ) =0;
END_RULE; 

(* Implicit interfaced from: Ap203_configuration_controlled_3d_design_of_mechanical_parts_and_assemblies_arm *)
  RULE addresses_are_assigned FOR 
      (Address);
    WHERE
      WR1: SIZEOF(QUERY(a <* Address | SIZEOF(USEDIN(a, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.ADDRESS_ASSIGNMENT.ASSIGNED_ADDRESS')) = 0)) = 0;
  END_RULE; 

(* Implicit interfaced from: Ap203_configuration_controlled_3d_design_of_mechanical_parts_and_assemblies_arm *)
  RULE person_requires_person_and_organization FOR 
      (Person);
    WHERE
      WR1: SIZEOF(QUERY(p <* Person | SIZEOF(USEDIN(p, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.PERSON_IN_ORGANIZATION.CONCERNED_PERSON')) = 0)) = 0;
  END_RULE; 

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_document_id FOR
      (Document);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Document | SIZEOF(QUERY (p2 <* Document | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_part_id FOR
      (Part);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Part | SIZEOF(QUERY (p2 <* Part | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

(* Implicit interfaced from: Item_definition_structure_arm *)
  RULE definition_replacement_requires_effectivity_assignment FOR 
      (Part_definition_relationship);
    WHERE 
      WR1: SIZEOF( QUERY( pdr <* Part_definition_relationship | 
        (pdr\View_definition_relationship.relation_type = 'definition replacement') AND 
        (SIZEOF( USEDIN(pdr,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EFFECTIVITY_ASSIGNMENT.ITEMS') ) = 0) ))
	     = 0; 
  END_RULE; 

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_product_version_id FOR
      (Product);
    WHERE
      WR1:  SIZEOF(QUERY (p <* Product | 
       (SIZEOF (QUERY (pv1 <*
       USEDIN(p,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VERSION.OF_PRODUCT') |  
       (SIZEOF (QUERY (pv2 <*
       USEDIN(p,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VERSION.OF_PRODUCT')
       |  pv1.id = pv2.id)) > 1)
       )) > 0)
       )) = 0;  
  END_RULE;

(* Implicit interfaced from: Chemical_substance_arm *)
  RULE substance_version_constraint FOR (Product_version);
    WHERE
      WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
  END_RULE; 

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_product_view_definition_id FOR
      (Product_version);
    WHERE
      WR1:  SIZEOF(QUERY (pv <* Product_version | 
        (SIZEOF (QUERY (pvd1 <*
        USEDIN(pv,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION') |  
        (SIZEOF (QUERY (pvd2 <*
        USEDIN(pv,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION')
        |  pvd1.id = pvd2.id)) > 1)
        )) > 0)
        )) = 0;  
  END_RULE;

(* Implicit interfaced from: Production_rule_arm *)
RULE rule_version_constraint FOR (Product_version);
WHERE
   WR1: SIZEOF (QUERY(pv <* Product_version | (NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_VERSION' IN TYPEOF(pv))) 
                      AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_PRODUCT' IN TYPEOF(pv.of_product)))) = 0 ;
END_RULE;

(* Implicit interfaced from: Specification_based_configuration_arm *)
RULE restrict_to_dated_effectivity FOR (Effectivity_assignment);
LOCAL
  ndea_set : SET OF Effectivity_assignment := [];
END_LOCAL;
  ndea_set := QUERY(ea <* Effectivity_assignment | 
	NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DATED_EFFECTIVITY' IN TYPEOF(ea.assigned_effectivity)));
WHERE
  WR1: SIZEOF(QUERY(ea <* ndea_set | 
		(SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONFIGURATION']*type_of_set(ea.items))>0) )) =0;
END_RULE;

(* Implicit interfaced from: Part_view_definition_arm *)
RULE part_view_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'PART_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Production_rule_arm *)
RULE rule_software_definition_constraint FOR (Product_view_definition);
WHERE
   WR1: SIZEOF (QUERY ( pvd <* Product_view_definition | ( NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_SOFTWARE_DEFINITION' 
                       IN TYPEOF(pvd))) 
                       AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_VERSION' IN TYPEOF (pvd . defined_version)))) = 0 ;
END_RULE; 

(* Implicit interfaced from: Item_definition_structure_arm *)
  RULE mandatory_part_occurrence_definition_relationship FOR (Assembly_component_relationship);
    LOCAL
      assemblies_of_parts: SET OF Assembly_component_relationship := [];
    END_LOCAL;
    WHERE
      WR1: SIZEOF(QUERY(ar <* assemblies_of_parts | 
	    NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLED_PART_ASSOCIATION' IN TYPEOF(ar)) ))= 0;
  END_RULE;

(* Implicit interfaced from: Software_arm *)
RULE software_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Software_arm *)
RULE software_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Information_product_arm *)
RULE Information_product_version_constraint FOR
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT (
  'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'INFORMATION_VERSION' IN TYPEOF
  ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'INFORMATION_PRODUCT' IN TYPEOF (
pv.of_product) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_approval_subtypes FOR APPROVAL; *)

(* Implicit interfaced from: Cfd_model_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_zone FOR MBNA_ZONE; *)

(* Implicit interfaced from: Mesh_connectivity_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mesh_connectivity FOR MESH_CONNECTIVITY; *)

(* Implicit interfaced from: Mesh_connectivity_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mismatched_donor_mesh FOR MISMATCHED_DONOR_MESH; *)

(* Implicit interfaced from: Mesh_connectivity_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mismatched_mesh_connection FOR MISMATCHED_MESH_CONNECTION; *)

(* Implicit interfaced from: Mesh_topology_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mesh FOR MESH; *)

(* Implicit interfaced from: Mesh_topology_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_patch FOR PATCH; *)

(* Implicit interfaced from: Mesh_topology_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_topological_region FOR TOPOLOGICAL_REGION; *)

(* Implicit interfaced from: Mesh_topology_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_unstructured_mesh FOR UNSTRUCTURED_MESH; *)

(* Implicit interfaced from: Product_analysis_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_temporal_spatial_domain FOR TEMPORAL_SPATIAL_DOMAIN; *)

(* Implicit interfaced from: Cfd_equations_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_behaviour_model FOR MBNA_BEHAVIOUR_MODEL; *)

(* Implicit interfaced from: Cfd_equations_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_equation FOR MBNA_EQUATION; *)

(* Implicit interfaced from: Cfd_results_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_result FOR MBNA_RESULT; *)

(* Implicit interfaced from: Cfd_conditions_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_bc FOR MBNA_BC; *)

(* Implicit interfaced from: Cfd_conditions_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_bc_data FOR MBNA_BC_DATA; *)

(* Implicit interfaced from: Cfd_conditions_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_bc_dataset FOR MBNA_BC_DATASET; *)

(* Implicit interfaced from: Cfd_conditions_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_mbna_condition FOR MBNA_CONDITION; *)

(* Implicit interfaced from: Assembly_structure_arm *)
(* E2: SUBTYPE_CONSTRAINT assembly_component_relationship_constraint FOR ASSEMBLY_COMPONENT_RELATIONSHIP; *)
-- generated from SUBTYPE_CONSTRAINT assembly_component_relationship_constraint

RULE total_over_assembly_component_relationship_constraint FOR( ASSEMBLY_COMPONENT_RELATIONSHIP);
WHERE
  wr1 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['Ap209_multidisciplinary_analysis_and_design_arm.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(p) ) = 0)) = 0;
  wr2 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['Ap209_multidisciplinary_analysis_and_design_arm.NEXT_ASSEMBLY_USAGE'] * TYPEOF(p) ) = 0)) = 0;
  wr3 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['Ap209_multidisciplinary_analysis_and_design_arm.PROMISSORY_USAGE'] * TYPEOF(p) ) = 0)) = 0;
END_RULE;

(* Implicit interfaced from: Basic_curve_arm *)
(* E2: SUBTYPE_CONSTRAINT curve_subtypes FOR CURVE; *)

(* Implicit interfaced from: External_currency_arm *)
(* E2: SUBTYPE_CONSTRAINT currency_subtypes FOR CURRENCY; *)

(* Implicit interfaced from: External_library_arm *)
(* E2: SUBTYPE_CONSTRAINT external_source_subtypes FOR EXTERNAL_SOURCE; *)

(* Implicit interfaced from: Ap203_configuration_controlled_3d_design_of_mechanical_parts_and_assemblies_arm *)
(* E2: SUBTYPE_CONSTRAINT exclusive_product_versions_203e2 FOR PRODUCT_VERSION; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_work_request_subtypes FOR WORK_REQUEST; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_work_request_status_subtypes FOR WORK_REQUEST_STATUS; *)

(* Implicit interfaced from: Draughting_element_arm *)
(* E2: SUBTYPE_CONSTRAINT annotation_curve_subtypes FOR ANNOTATION_CURVE; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_activity_relationship_subtypes FOR ACTIVITY_RELATIONSHIP; *)

(* Implicit interfaced from: Analysis_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_numerical_model FOR NUMERICAL_MODEL; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_approval_status_subtypes FOR APPROVAL_STATUS; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_date_or_date_time_assignment_subtypes FOR DATE_OR_DATE_TIME_ASSIGNMENT; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_security_classification_subtypes FOR SECURITY_CLASSIFICATION; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT type_qualifier_subtypes FOR TYPE_QUALIFIER; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT independent_property_subtypes FOR INDEPENDENT_PROPERTY; *)

(* Implicit interfaced from: External_properties_arm *)
(* E2: SUBTYPE_CONSTRAINT plib_or_external FOR INDEPENDENT_PROPERTY; *)

(* Implicit interfaced from: Extended_measure_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_measure_items FOR MEASURE_ITEM; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT exclusive_property_value_representation_characteristic FOR PROPERTY_VALUE_REPRESENTATION; *)

(* Implicit interfaced from: Draughting_annotation_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_annotation_elements FOR ANNOTATION_ELEMENT; *)

(* Implicit interfaced from: Presentation_hierarchy_arm *)
(* E2: SUBTYPE_CONSTRAINT ph_styled_model_subtypes FOR STYLED_MODEL; *)

(* Implicit interfaced from: Mechanical_design_shaded_presentation_arm *)
(* E2: SUBTYPE_CONSTRAINT mdsp_surface_appearance_element_subtypes FOR SURFACE_APPEARANCE_ELEMENT; *)

(* Implicit interfaced from: Basic_geometry_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_geometry_items FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Value_with_unit_extension_arm *)
(* E2: SUBTYPE_CONSTRAINT value_with_unit_subtypes FOR VALUE_WITH_UNIT; *)

(* Implicit interfaced from: Camera_view_3d_arm *)
(* E2: SUBTYPE_CONSTRAINT cv3d_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Text_appearance_arm *)
(* E2: SUBTYPE_CONSTRAINT ta_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Drawing_definition_arm *)
(* E2: SUBTYPE_CONSTRAINT dd_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Ply_orientation_specification_arm *)
(* E2: SUBTYPE_CONSTRAINT pos_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Thickened_face_solid_arm *)
(* E2: SUBTYPE_CONSTRAINT tbsa_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Appearance_assignment_arm *)
(* E2: SUBTYPE_CONSTRAINT aa_representation_item_subtypes FOR REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT c_representation_item_subtypes FOR REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Basic_data_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT representation_item_subtypes FOR REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Tagged_text_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT ttr_string_representation_item_subtypes FOR STRING_REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_organization_or_person_in_organization_assignment_subtypes FOR ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_address_assignment_subtypes FOR ADDRESS_ASSIGNMENT; *)

(* Implicit interfaced from: Extended_basic_geometry_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_extended_geometry_items FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)


END_SCHEMA;

