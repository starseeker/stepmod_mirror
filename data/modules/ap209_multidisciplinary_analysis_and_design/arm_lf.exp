(*
$Id: arm_lf.exp,v 1.6 2010/07/16 15:04:34 darla Exp $
WG12N2615 - ISO/CD - 10303-409 ap209_multidisciplinary_analysis_and_design - EXPRESS ARM LF
*)

(* ===================================================================================== *)
(* Long form schema generated by The EXPRESS Data Manager  compiler version 9.8.2B 20100602*)
(* Wed Oct 10 21:09:05 2012                                                                *)
(* The schema is converted from ISO10303 P11-2003 to ISO10303 P11-1994                     *)
(* ===================================================================================== *)

SCHEMA Ap209_multidisciplinary_analysis_and_design_arm_LF;



(*
USE FROM Ap242_managed_model_based_3d_engineering_arm;


USE FROM Analysis_assignment_arm;
USE FROM Analysis_characterized_arm;
USE FROM Analysis_identification_arm;
USE FROM Analysis_product_relationships_arm;


USE FROM Analysis_arm;
USE FROM Analysis_representation_arm;
USE FROM Cfd_model_arm;
USE FROM Finite_elements_arm;
USE FROM Mesh_connectivity_arm;
USE FROM Mesh_topology_arm;
USE FROM Product_analysis_arm;


USE FROM Analysis_shape_arm;
USE FROM Finite_element_shape_arm;


USE FROM Cfd_specified_general_property_arm;
USE FROM Fea_definition_relationships_arm;
USE FROM Fea_material_aspects_arm;


USE FROM Cfd_equations_arm;
USE FROM Cfd_results_arm;
USE FROM Finite_element_analysis_arm;
USE FROM Mesh_function_arm;

USE FROM Collection_identification_and_version_arm;    
USE FROM Part_view_definition_arm;
*)

CONSTANT

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_approval_status_types : SET OF STRING := [
 'approved',
 'disapproved',
 'withdrawn',
 'not yet approved']	;

(* Implicit interfaced from: Qualified_measure_arm *)
    pre_defined_type_qualifiers : SET OF STRING := ['minimum', 'maximum',
    'nominal', 'specified', 'typical', 'calculated', 'designed', 'estimated',
    'measured', 'required', 'set point',
    'basic', 'lower deviation', 'upper deviation'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_activity_relationship_types : SET OF STRING := [
 'alternative',
 'decomposition',
 'derivation',
 'exclusiveness',
 'precedence',
 'sequence',
 'simultaneity'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_security_classification_types : SET OF STRING := [
 'unclassified',
 'classified',
 'proprietary',
 'confidential',
 'secret',
 'top secret'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_address_assignment_types : SET OF STRING := [
 'delivery address',
 'postal address',
 'visitor address'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_organization_or_person_in_organization_assignment_types : SET OF STRING := [
 'author',
 'classification officer',
 'creator',
 'custodian',
 'customer',
 'design supplier',
 'editor',
 'id owner',
 'location',
 'manufacturer',
 'owner',
 'read access',
 'supplier',
 'wholesaler',
 'write access',
 'organization in contract'];

(* Implicit interfaced from: Picture_representation_arm *)
    pre_defined_picture_representation_types : SET [0:?] OF STRING := [ 'JPEG', 'PNG', 'TIFF', 'BMP', 'GIF']; 

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_approval_types : SET OF STRING := [
 'disposition',
 'equipment order',
 'planning'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_date_or_date_time_assignment_types : SET OF STRING := [
 'creation',
 'installation',
 'production',
 'registration',
 'update',
 'planned',
 'actual',
 'start date',
 'end date',
 'release date',
 'request date'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_work_request_types : SET OF STRING := [
 'change of standard',
 'cost reduction',
 'customer rejection',
 'customer request',
 'durability improvement',
 'government regulation',
 'production alignment',
 'procurement alignment',
 'production relief',
 'production requirement',
 'quality improvement',
 'security reason',
 'standardization',
 'supplier request',
 'technical improvement',
 'tool improvement'];

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
  Pre_defined_work_request_status_types : SET OF STRING := [
 'in work',
 'issued',
 'proposed',
 'resolved'];

(* Implicit interfaced from: Chemical_substance_arm *)
  chemical_elements : LIST OF STRING := [
      'HYDROGEN',
      'HELIUM',
      'LITHIUM',
      'BERYLLIUM',
      'BORON',
      'CARBON',
      'NITROGEN',
      'OXYGEN',
      'FLUORINE',
      'NEON',
      'SODIUM',
      'MAGNESIUM',
      'ALUMINIUM',
      'SILICON',
      'PHOSPHORUS',
      'SULPHUR',
      'CHLORINE',
      'ARGON',
      'POTASSIUM',
      'CALCIUM',
      'SCANDIUM',
      'TITANIUM',
      'VANADIUM',
      'CHROMIUM',
      'MANGANESE',
      'IRON',
      'COBALT',
      'NICKEL',
      'COPPER',
      'ZINC',
      'GALLIUM',
      'GERMANIUM',
      'ARSENIC',
      'SELENIUM',
      'BROMINE',
      'KRYPTON',
      'RUBIDIUM',
      'STRONTIUM',
      'YTTRIUM',
      'ZIRCONIUM',
      'NIOBIUM',
      'MOLYBDENUM',
      'TECHNETIUM',
      'RUTHENIUM',
      'RHODIUM',
      'PALLADIUM',
      'SILVER',
      'CADMIUM',
      'INDIUM',
      'TIN',
      'ANTIMONY',
      'TELLURIUM',
      'IODINE',
      'XENON',
      'CAESIUM',
      'BARIUM',
      'LANTHANUM',
      'CERIUM',
      'PRASEODYMIUM',
      'NEODYMIUM',
      'PROMETHIUM',
      'SAMARIUM',
      'EUROPIUM',
      'GADOLINIUM',
      'TERBIUM',
      'DYSPROSIUM',
      'HOLMIUM',
      'ERBIUM',
      'THULIUM',
      'YTTERBIUM',
      'LUTETIUM',
      'HAFNIUM',
      'TANTALUM',
      'TUNGSTEN',
      'RHENIUM',
      'OSMIUM',
      'IRIDIUM',
      'PLATINUM',
      'GOLD',
      'MERCURY',
      'THALLIUM',
      'LEAD',
      'BISMUTH',
      'POLONIUM',
      'ASTATINE',
      'RADON',
      'FRANCIUM',
      'RADIUM',
      'ACTINIUM',
      'THORIUM',
      'PROTACTINIUM',
      'URANIUM',
      'NEPTUNIUM',
      'PLUTONIUM',
      'AMERICIUM',
      'CURIUM',
      'BERKELIUM',
      'CALIFORNIUM',
      'EINSTEINIUM',
      'FERMIUM',
      'MENDELEVIUM',
      'NOBELIUM',
      'LAWRENCIUM',
      'RUTHERFORDIUM',
      'DUBNIUM',
      'SEABORGIUM',
      'BOHRIUM',
      'HASSIUM',
      'MEITNERIUM',
      'DARMSTADTIUM',
      'ROENTGENIUM'];

END_CONSTANT;
(* USED FROM (Elemental_geometric_shape_arm); *)
  TYPE cartesian_transformation = SELECT (
    Cartesian_transformation_2d, 
 Cartesian_transformation_3d);
  END_TYPE;
(* USED FROM (Ap242_managed_model_based_3d_engineering_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE general_organizational_data_select = SELECT (
   Activity,
   Activity_method_assignment,
   Alternate_part_relationship,
   Applied_activity_assignment,
   Applied_independent_activity_property,
   Applied_independent_property,
   Approval_status,
   Assembly_relationship_substitution,
   Assigned_document_property,
   Breakdown_element_definition,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Breakdown_node_relationship,
   Certification,
   Class,
   Class_breakdown_association,
   Class_category_association,
   Class_condition_association,
   Class_inclusion_association,
   Class_specification_association,
   Classification_association,
   Classification_system,
   Complex_node_relationship,
   Configuration,
   Contract,
   Design_constraint_definition,
   Document,
   Document_definition,
   Document_version,
   Drawing,
   Drawing_sheet,
   File,
   Geometric_model,
   Independent_property,
   Item_usage_effectivity,
   Material_identification,
   Organization,
   Organization_relationship,
   Part,
   Part_definition_relationship,
   Part_occurrence_relationship,
   Part_version,
   Part_view_definition,
   Person_in_organization,
   Person_in_organization_relationship,
   Process_operation_definition,
   Process_operation_occurrence,
   Process_operation_resource_assignment,
   Process_plan,
   Product_as_individual_assembly,
   Product_as_individual_test_result,
   Product_as_individual_view,
   Product_class,
   Product_configuration,
   Product_occurrence,
   Product_occurrence_definition_relationship,
   Product_version_relationship,
   Project,
   Security_classification,
   Specification,
   Specification_category,
   Specification_expression,
   Specification_inclusion,
   Styled_model,
   Supplier_solution,
   Technical_solution,
   View_area,
   Work_order,
   Work_request);
END_TYPE;


(* Pruned unused type: configured_item_select_242  *)


(* Pruned unused type: property_assignment_select_242  *)


(* Pruned unused type: organization_or_person_in_organization_item_242  *)


(* Pruned unused type: date_or_date_time_item_242  *)


(* Pruned unused type: time_interval_item_242  *)


(* Pruned unused type: resource_definition_select_242  *)


(* Pruned unused type: process_operation_input_or_output_select_242  *)


(* Pruned unused type: item_usage_relationship_item_242  *)


(* Pruned unused type: representation_proxy_select_242  *)


(* Pruned unused type: change_management_object_242  *)


(* Pruned unused type: change_relationship_select_242  *)


(* Pruned unused type: alias_identification_item_242  *)


(* Pruned unused type: appearance_context_242  *)


(* Pruned unused type: approval_item_242  *)


(* Pruned unused type: contract_item_242  *)


(* Pruned unused type: documented_element_select_242  *)


(* Pruned unused type: effectivity_item_242  *)


(* Pruned unused type: groupable_item_242  *)


(* Pruned unused type: identification_item_242  *)


(* Pruned unused type: ply_laminate_shape_242  *)


(* Pruned unused type: presentation_association_select_242  *)


(* Pruned unused type: presented_model_select_242  *)


(* Pruned unused type: security_classification_item_242  *)


(* Pruned unused type: string_select_242  *)


(* Pruned unused type: text_or_composite_text_242  *)


(* Pruned unused type: text_string_representation_item_select_242  *)

(* USED FROM (Analysis_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE analysed_item = SELECT (
   Product_version);
END_TYPE;


(* Pruned unused type: analysis_identification_item  *)


(* Pruned unused type: analysis_approval_item  *)


(* Pruned unused type: analysis_classification_item  *)


(* Pruned unused type: analysis_contract_item  *)


(* Pruned unused type: analysis_date_or_date_time_item  *)


(* Pruned unused type: analysis_organization_or_person_in_organization_item  *)


(* Pruned unused type: analysis_security_classification_item  *)

(* USED FROM (Approval_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE approval_item = SELECT (
   Activity,
   Alternate_part_relationship,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_information_usage_right,
   Assembly_relationship_substitution,
   Certification,
   Contract,
   Digital_document_definition,
   Document,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Effectivity,
   Fe_analysis,
   Fe_analysis_results,
   Fea_model,
   File,
   Frozen_assignment,
   Group,
   Group_relationship,
   Independent_property_relationship,
   Information_usage_right,
   Item_usage_effectivity,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product_configuration,
   Product_version,
   Product_view_definition,
   Requirement_assignment,
   Security_classification,
   Stock_material,
   Supplied_part_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Classification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classification_item = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Activity_relationship,
   Address,
   Address_assignment,
   Affected_items_assignment,
   Alternate_product_relationship,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Applied_state_definition_assignment,
   Approval,
   Approval_assignment,
   Approval_relationship,
   Approval_status,
   Approving_person_organization,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Attribute_translation_assignment,
   Calendar_date,
   Certification,
   Certification_assignment,
   Characterizable_object,
   Class,
   classified_element_select,
   Context_dependent_unit,
   Contract,
   Contract_assignment,
   Conversion_based_unit,
   Date_or_date_time_assignment,
   Date_time,
   Derived_unit,
   Digital_document_definition,
   Digital_file,
   Directed_activity,
   Document_assignment,
   Effectivity,
   Event,
   Event_assignment,
   External_source_identification,
   File,
   File_relationship,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Language,
   Numerical_item_with_unit,
   Organization,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Part_view_definition,
   Person,
   Product,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   Representation,
   Representation_context,
   Representation_item,
   Security_classification,
   Security_classification_assignment,
   State_definition,
   State_definition_relationship,
   String_representation_item,
   Uncertainty_with_unit,
   Value_with_unit,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request,
   Work_request_status);
END_TYPE;

(* USED FROM (Contract_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE contract_item = SELECT (
   Activity,
   Analysis_version,
   Document_version,
   Information_usage_right,
   organization_or_person_in_organization_select,
   Part_version,
   Product_version,
   Work_order);
END_TYPE;

(* USED FROM (Date_time_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE date_or_date_time_item = SELECT (
   Activity,
   Analysis_discipline_definition,
   Applied_activity_assignment,
   Certification,
   Contract,
   Data_quality_definition,
   Digital_document_definition,
   Digital_file,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   general_organizational_data_select,
   Hardcopy,
   Information_usage_right,
   Organization_or_person_in_organization_assignment,
   Physical_document_definition,
   Product_view_definition,
   Security_classification,
   Security_classification_assignment,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Person_organization_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE organization_or_person_in_organization_item = SELECT (
   Activity,
   Alias_identification,
   Alternate_part_relationship,
   Analysis,
   Analysis_discipline_definition,
   Analysis_version,
   Applied_activity_assignment,
   Approval,
   Classification_assignment,
   Classification_association,
   Contract,
   Data_quality_definition,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_definition,
   Document_version,
   general_organizational_data_select,
   Hardcopy,
   Identification_assignment,
   Information_usage_right,
   Part,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product_configuration,
   Rule_action,
   Security_classification,
   Security_classification_assignment,
   Supplied_part_relationship,
   Work_order,
   Work_request);
END_TYPE;

(* USED FROM (Security_classification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE security_classification_item = SELECT (
   Analysis_version,
   Assembly_component_relationship,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_definition,
   Document_version,
   File,
   Hardcopy,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product_version,
   Product_view_definition,
   Promissory_usage,
   View_definition_usage);
END_TYPE;

(* USED FROM (Identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE identification_item = SELECT (
   Analysis,
   Analysis_version,
   Approval_status,
   Contract,
   Digital_document_definition,
   Digital_file,
   Document,
   Document_definition,
   Document_version,
   Geometric_model,
   Group,
   Group_relationship,
   Hardcopy,
   Independent_property,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Material_identification,
   Organization,
   Part,
   Part_version,
   Part_view_definition,
   Physical_document_definition,
   Product,
   Product_as_individual,
   Product_as_individual_version,
   product_class,
   Product_concept,
   Product_configuration,
   Product_version,
   Requirement,
   Requirement_version,
   Rule_set,
   Security_classification,
   Shape_element_relationship,
   State_definition,
   State_definition_relationship);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE cell_shape = SELECT (
   cell_shape_0d,
   cell_shape_1d,
   cell_shape_2d,
   cell_shape_3d);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_0d = ENUMERATION OF (
   single);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_1d = ENUMERATION OF (
   line);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_2d = ENUMERATION OF (
   quadrilateral,
   triangle);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE cell_shape_3d = ENUMERATION OF (
   hexahedron,
   pyramid,
   tetrahedron,
   wedge);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
TYPE element_order = ENUMERATION OF 
  (linear,
   quadratic,
   cubic);
END_TYPE;
(* USED FROM (Mesh_topology_arm); *)
TYPE indices_group = SELECT
     (indices_list,
      indices_range);
END_TYPE;
(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mesh_location = ENUMERATION OF (
   application_defined,
   cell_centre,
   edge_centre,
   face_centre,
   iface_centre,
   jface_centre,
   kface_centre,
   unspecified,
   vertices);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mesh_maths_space_type = ENUMERATION OF (
   cells,
   vertices);
END_TYPE;

(* USED FROM (Mesh_topology_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE structured_mesh_type = ENUMERATION OF (
   pentahedral,
   pyramidal,
   rectangular,
   tetrahedral);
END_TYPE;

(* USED FROM (Cfd_model_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE coordinate_data_name = ENUMERATION OF (
   coordinate_eta,
   coordinate_normal,
   coordinate_phi,
   coordinate_r,
   coordinate_tangential,
   coordinate_theta,
   coordinate_transform,
   coordinate_x,
   coordinate_xi,
   coordinate_y,
   coordinate_z,
   coordinate_zeta);
END_TYPE;

(* USED FROM (Finite_elements_arm); *)
TYPE definition_element = SELECT 
  (Curve_element,
   Shape_element,
   Surface_element,
   Volume_element);
END_TYPE;
(* USED FROM (Finite_elements_arm); *)
TYPE element_property_select = SELECT 
  (Curve_property,
   Surface_property);
END_TYPE;

(* Pruned unused type: fe_model_approval_item  *)

(* USED FROM (Mesh_connectivity_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE property_distribution_select = SELECT (
   Model_property_distribution);
END_TYPE;

(* USED FROM (Mesh_connectivity_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mismatched_region_type = ENUMERATION OF (
   abutting,
   overset);
END_TYPE;


(* Pruned unused type: cross_section_shape_select  *)


(* Pruned unused type: spa_property_assignment_select  *)

(* USED FROM (Shape_property_assignment_arm); *)
TYPE chained_geometric_model_link = SELECT (
    Geometric_placement_operation,
    Geometric_coordinate_space,
    Geometric_model_relationship);
END_TYPE;
(* USED FROM (Shape_property_assignment_arm); *)
TYPE described_element_select = SELECT (
  View_definition_relationship,
  Product_occurrence_definition_relationship);
END_TYPE;  
(* USED FROM (Shape_property_assignment_arm); *)
TYPE shape_element_or_relationship_select = SELECT (
  Shape_element,
  Shape_element_relationship);
END_TYPE;  
(* USED FROM (Shape_property_assignment_arm); *)
TYPE geometric_item_specific_usage_select = SELECT (
  Shape_element, 
  Shape_element_relationship);
END_TYPE; 

(* Pruned unused type: spa_represented_definition  *)

(* USED FROM (Shape_property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE assigned_shape_property_select = SELECT (
   Item_shape,
   Shape_element,
   Shape_element_relationship);
END_TYPE;

(* USED FROM (Shape_property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE shape_model = SELECT (
   Constructive_geometry,
   External_geometric_model,
   Geometric_model);
END_TYPE;

(* USED FROM (Shape_property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE shapeable_item = SELECT (
   Characterizable_object,
   Product_occurrence_definition_relationship,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE choose_general_property_identifier = SELECT (
   defined_data_name,
   External_item_identification);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE choose_geometry_location = SELECT (
   External_geometric_model,
   Geometric_model);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE choose_representation_context_identifier = SELECT (
   defined_data_class,
   External_item_identification);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE defined_data_class = ENUMERATION OF (
   application_defined,
   dimensional,
   dimensionless_constant,
   dimensionless_parameter,
   normalise_by_unknown_dimensional,
   normalised_by_dimensional,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE defined_data_name = SELECT (
   coordinate_data_name,
   fd_defined_data_name);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE fd_defined_data_name = SELECT (
   fd_nondimensional_parameter_name,
   flow_solution_data_name,
   force_moment_data_name,
   gas_model_data_name,
   riemann_1d_data_name,
   thermal_conductivity_model_data_name,
   turbulence_closure_data_name,
   turbulence_model_data_name,
   viscosity_model_data_name);
END_TYPE;

(* USED FROM (Cfd_specified_general_property_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE fd_nondimensional_parameter_name = ENUMERATION OF (
   coef_pressure,
   coef_pressure_dynamic,
   coef_pressure_reference,
   coef_skin_friction_x,
   coef_skin_friction_y,
   coef_skin_friction_z,
   length_reference,
   Mach,
   Mach_velocity,
   Mach_velocity_sound,
   Prandtl,
   Prandtl_specific_heat_pressure,
   Prandtl_thermal_conductivity,
   Prandtl_viscosity_molecular,
   Reynolds,
   Reynolds_length,
   Reynolds_velocity,
   Reynolds_viscosity_kinematic,
   specific_heat_ratio,
   specific_heat_ratio_pressure,
   specific_heat_ratio_volume);
END_TYPE;


(* Pruned unused type: mbna_property_distribution_select  *)


(* Pruned unused type: value_context_select  *)

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE discretised_action_model_select = SELECT (
   Fe_analysis_control_step,
   Model_action_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE discretised_product_model_select = SELECT (
   Fea_model,
   Model_product_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE discretised_state_model_select = SELECT (
   Fe_analysis_state,
   Model_state_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE idealised_action_select = SELECT (
   Activity,
   Physical_action_domain);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE idealised_product_select = SELECT (
   Physical_product_domain,
   Product_view_definition);
END_TYPE;

(* USED FROM (Fea_definition_relationships_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE idealised_state_select = SELECT (
   Physical_state_domain,
   State_definition);
END_TYPE;

(* USED FROM (Fea_material_aspects_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE composite_structure_select = SELECT (
   Composite_assembly_sequence_definition,
   Laminate_table,
   Ply_laminate_sequence_definition);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE fd_behaviour_models = SELECT (
   Gas_model,
   Turbulence_closure,
   Turbulence_model,
   Viscosity_model);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This ENUMERATION set has been expanded for EXPRESS E1 layout. *)
TYPE fd_governing_equation_type = mbna_governing_equation_type;
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE force_moment_data_name = ENUMERATION OF (
   coef_drag,
   coef_length,
   coef_lift,
   coef_moment_area,
   coef_moment_eta,
   coef_moment_phi,
   coef_moment_pressure_dynamic,
   coef_moment_r,
   coef_moment_theta,
   coef_moment_x,
   coef_moment_xi,
   coef_moment_y,
   coef_moment_z,
   coef_moment_zeta,
   drag,
   force_phi,
   force_r,
   force_theta,
   force_x,
   force_y,
   force_z,
   lift,
   moment_center_x,
   moment_center_y,
   moment_center_z,
   moment_eta,
   moment_phi,
   moment_r,
   moment_theta,
   moment_x,
   moment_xi,
   moment_y,
   moment_z,
   moment_zeta);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE gas_model_data_name = ENUMERATION OF (
   ideal_gas_constant,
   specific_heat_pressure,
   specific_heat_ratio,
   specific_heat_volume);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE gas_model_type = ENUMERATION OF (
   application_defined,
   ideal,
   unspecified,
   Van_der_Waals);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mbna_behaviour_models = SELECT (
   Thermal_conductivity_model);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This ENUMERATION set has been expanded for EXPRESS E1 layout. *)
TYPE mbna_governing_equation_type = ENUMERATION OF (
   application_defined,
   Euler,
   full_potential,
   NS_laminar,
   NS_laminar_incompressible,
   NS_turbulent,
   NS_turbulent_incompressible,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE thermal_conductivity_model_data_name = ENUMERATION OF (
   constant_Prandtl,
   power_law_exponent,
   Sutherland_constant_conductivity,
   temperature_reference,
   thermal_conductivity_reference);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE thermal_conductivity_model_type = ENUMERATION OF (
   application_defined,
   constant_Prandtl,
   independent,
   power_law,
   Sutherland_law,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_closure_data_name = ENUMERATION OF (
   eddy_viscosity,
   Prandtl_turbulent);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_closure_type = ENUMERATION OF (
   application_defined,
   eddy_viscosity,
   Reynolds_stress,
   Reynolds_stress_algebraic,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_model_data_name = ENUMERATION OF (
   turbulent_BB_Reynolds,
   turbulent_dissipation,
   turbulent_dissipation_rate,
   turbulent_distance,
   turbulent_energy_kinetic,
   turbulent_SA_cb1,
   turbulent_SA_cb2,
   turbulent_SA_chi,
   turbulent_SA_ct1,
   turbulent_SA_ct2,
   turbulent_SA_ct3,
   turbulent_SA_ct4,
   turbulent_SA_cv1,
   turbulent_SA_cw1,
   turbulent_SA_cw2,
   turbulent_SA_cw3,
   turbulent_SA_kappa,
   turbulent_SA_nu_tilde,
   turbulent_SA_sigma);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE turbulence_model_type = ENUMERATION OF (
   algebraic_Baldwin_Lomax,
   algebraic_Cebeci_Smith,
   application_defined,
   half_equation_Johnson_King,
   one_equation_Baldwin_Barth,
   one_equation_Spalart_Allmaras,
   two_equation_Jones_Launder,
   two_equation_Menter_SST,
   two_equation_Wilcox,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE viscosity_model_data_name = ENUMERATION OF (
   Sutherland_constant_viscosity,
   viscosity_molecular_reference);
END_TYPE;

(* USED FROM (Cfd_equations_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE viscosity_model_type = ENUMERATION OF (
   application_defined,
   constant_viscosity,
   power_law,
   Sutherland_law,
   unspecified);
END_TYPE;


(* Pruned unused type: cfdr_property_distribution_select  *)

(* USED FROM (Cfd_results_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE flow_solution_data_name = ENUMERATION OF (
   density,
   density_stagnation,
   energy_internal,
   energy_kinetic,
   energy_stagnation,
   energy_stagnation_density,
   enthalpy,
   enthalpy_stagnation,
   entropy,
   entropy_approx,
   ideal_gas_constant,
   mass_flow,
   momentum_magnitude,
   momentum_x,
   momentum_y,
   momentum_z,
   potential,
   pressure,
   pressure_dynamic,
   pressure_stagnation,
   Reynolds_stress_xx,
   Reynolds_stress_xy,
   Reynolds_stress_xz,
   Reynolds_stress_yy,
   Reynolds_stress_yz,
   Reynolds_stress_zz,
   skin_friction_magnitude,
   skin_friction_x,
   skin_friction_y,
   skin_friction_z,
   specific_heat_pressure,
   specific_heat_volume,
   stream_function,
   temperature,
   temperature_stagnation,
   thermal_conductivity,
   velocity_angle_x,
   velocity_angle_y,
   velocity_angle_z,
   velocity_magnitude,
   velocity_normal,
   velocity_phi,
   velocity_r,
   velocity_sound,
   velocity_sound_stagnation,
   velocity_tangential,
   velocity_theta,
   velocity_unit_vector_x,
   velocity_unit_vector_y,
   velocity_unit_vector_z,
   velocity_x,
   velocity_y,
   velocity_z,
   viscosity_eddy,
   viscosity_kinematic,
   viscosity_molecular,
   vorticity_magnitude,
   vorticity_x,
   vorticity_y,
   vorticity_z);
END_TYPE;

(* USED FROM (Finite_element_analysis_arm); *)
TYPE constraint_definition_reference = SELECT 
  (Detailed_geometric_model_element,
   Fea_group,
   Node);
END_TYPE;
(* USED FROM (Finite_element_analysis_arm); *)
TYPE definition_reference = SELECT 
  (Detailed_geometric_model_element,
   Element,
   Fea_group,
   Node);
END_TYPE;

(* Pruned unused type: fe_analysis_approval_item  *)

(* USED FROM (Collection_identification_and_version_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
(* NOTE: Empty SELECT set! *)
(* TYPE collection_assignment_select = SELECT (); END_TYPE; *) 

(* USED FROM (Collection_identification_and_version_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
(* NOTE: Empty SELECT set! *)
(* TYPE collection_member_select = SELECT (); END_TYPE; *) 

(* USED FROM (Mating_structure_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mating_type = ENUMERATION OF (
   bolted_joint,
   brazing,
   clasping,
   clinching,
   clipping,
   doweling,
   flanging,
   foam_injection,
   friction_welding,
   gluing,
   laser_welding,
   press_fit,
   riveting,
   sewing,
   soldering,
   spot_welding,
   stapling,
   welding);
END_TYPE;

(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE b_spline_or_composite_curve_select = SELECT
    (B_spline_curve,
     Composite_curve);
  END_TYPE;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE b_spline_or_rectangular_composite_surface_select = SELECT
    (B_spline_surface,
     Rectangular_composite_surface);
  END_TYPE;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE boolean_value = BOOLEAN;
  END_TYPE;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE closed_or_open_shell_select = SELECT
    (Closed_shell,
     Open_shell);
  END_TYPE;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE inspected_shape_element_select = inspected_element_select;
END_TYPE;

(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE location_of_extreme_value_select = SELECT
    (B_spline_curve_knot_locator,
     B_spline_curve_segment,
     B_spline_surface_knot_locator,
     B_spline_surface_patch,
     B_spline_surface_strip,
     Boundary_curve_of_b_spline_or_rectangular_composite_surface,
     Composite_curve_transition_locator,
     Face_bound,
     inspected_shape_element_select,
     Oriented_edge,
     Point_on_edge_curve,
     Point_on_face_surface,
     Rectangular_composite_surface_transition_locator);
  END_TYPE;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE measured_value_select = SELECT
    (boolean_value,
     measure_value,
     Plane_angle_and_length_pair,
     Plane_angle_and_ratio_pair);
  END_TYPE;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE surface_boundary_type = ENUMERATION OF
    (u_parameter_min,
     v_parameter_min,
     u_parameter_max,
     v_parameter_max);
  END_TYPE;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  TYPE u_or_v_parameter = ENUMERATION OF
    (u_parameter,
     v_parameter);
  END_TYPE;
(* USED FROM (Externally_conditioned_data_quality_inspection_result_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE inspected_ecdq_element_select = inspected_element_select;
END_TYPE;

(* USED FROM (Geometric_constraints_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE axial_geometry_element = SELECT (
   Circle,
   Circular_cone,
   Circular_cylinder,
   Conical_surface,
   Cylindrical_surface,
   Line,
   Plane,
   Point,
   Solid_of_revolution,
   Sphere,
   Spherical_surface,
   Surface_of_revolution,
   Toroidal_surface,
   Torus);
END_TYPE;

(* USED FROM (Geometric_constraints_arm); *)
TYPE curve_or_surface = SELECT
  (Curve,
   Surface);
END_TYPE;
(* USED FROM (Geometric_constraints_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE geometric_constraint_element = SELECT (
   Curve,
   Direction,
   Point,
   Surface);
END_TYPE;

(* USED FROM (Geometric_constraints_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE linear_geometry_element = SELECT (
   Direction,
   Line,
   Plane);
END_TYPE;

(* USED FROM (Geometric_constraints_arm); *)
TYPE parallel_offset_type = ENUMERATION OF
  (curve_2d_offset,
   curve_3d_offset,
   surface_offset);
END_TYPE;
(* USED FROM (Geometric_constraints_arm); *)
TYPE point_curve_or_surface = SELECT
  (Curve,
   Point,
   Surface);
END_TYPE;
(* USED FROM (Geometric_constraints_arm); *)
TYPE radial_geometry_element = SELECT
  (Circle,
   Cylindrical_surface,
   Conical_surface,
   Spherical_surface,
   Circular_cylinder,
   Circular_cone,
   Sphere);
END_TYPE;
(* USED FROM (Geometric_constraints_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE swept_surface_or_solid = SELECT (
   Swept_solid,
   Swept_surface);
END_TYPE;

(* USED FROM (Geometric_constraints_arm); *)
TYPE tangent_contact_type = ENUMERATION OF
  (point_contact,
   curve_contact,
   surface_contact);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE angle_or_directed_taper = SELECT( Angle_taper, Directed_taper);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE compound_feature_select = SELECT (
  Machining_feature,
  Transition_feature);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE end_type_select = SELECT(Complete_circular_path_feature_component, General_path_feature_component);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE hole_bottom_condition_select = SELECT(Blind_bottom_condition, Through_bottom_condition);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE manufacturing_group_select = SELECT(Manufacturing_feature, Manufacturing_feature_group);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE pocket_bottom_condition_select = SELECT (
  Pocket_bottom_condition,
  Through_pocket_bottom_condition);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE profile_select = SELECT(Profile_floor, Through_profile_floor);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE replicate_base_select = SELECT(Machining_feature, Replicate_feature);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE taper_select = SELECT( Angle_taper, Diameter_taper, Directed_taper);
END_TYPE;
(* USED FROM (Machining_features_arm); *)
TYPE volume_select = SELECT(Protrusion, Boss);
END_TYPE;
(* USED FROM (Form_feature_in_panel_arm); *)
TYPE angle_reference_enumeration = ENUMERATION OF 
   (profile_normal,
    punch_direction,
    surface_normal);
 END_TYPE; 
(* USED FROM (Form_feature_in_panel_arm); *)
TYPE compound_in_panel_select = SELECT
    (Process_feature_in_panel, 
    Transition_feature);
 END_TYPE; 
(* USED FROM (Form_feature_in_panel_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE form_feature_in_panel_type = ENUMERATION OF (
   boss,
   pocket,
   stairstep);
END_TYPE;

(* USED FROM (Form_feature_in_panel_arm); *)
TYPE general_end_select = SELECT
    (Connected_face_set, 
    Surface);
 END_TYPE; 
(* USED FROM (Form_feature_in_panel_arm); *)
TYPE profile_or_angle_select = SELECT
    (Closed_profile_usage, 
    Directed_angle);
 END_TYPE; 
(* USED FROM (Form_feature_in_panel_arm); *)
TYPE starting_or_ending = ENUMERATION OF 
   (ending,
    starting);
 END_TYPE; 
(* USED FROM (Form_feature_in_panel_arm); *)
TYPE straight_or_tapered = ENUMERATION OF 
   (straight,
    tapered);
 END_TYPE; 
(* USED FROM (Kinematic_analysis_control_and_result_arm); *)
TYPE kinematic_analysis_definition = SELECT
  (Interpolated_configuration_sequence,
   Prescribed_path);
END_TYPE;
(* USED FROM (Kinematic_analysis_control_and_result_arm); *)
TYPE kinematic_result = SELECT
  (Interpolated_configuration_sequence,
   Resulting_path);
END_TYPE;
(* USED FROM (Process_plan_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE process_operation_input_or_output_select = SELECT (
   Assembly_component_relationship,
   Mated_part_relationship,
   Part_view_definition,
   Product_occurrence);
END_TYPE;

(* USED FROM (Process_plan_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE resource_definition_select = SELECT (
   Breakdown_element_definition,
   Part_view_definition,
   Product_as_individual_view,
   Product_occurrence,
   Resource_requirement_type);
END_TYPE;

(* USED FROM (Process_plan_arm); *)
TYPE process_state_relationship_direction = ENUMERATION OF (
  bidirectional_process_state_relationship,
  unidirectional_process_state_relationship);
END_TYPE;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  TYPE extend_or_chord_2_extend_or_truncate_or_round = ENUMERATION OF
    (truncate,
     chord_2_extend,
     round,
     extend);
  END_TYPE;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
 TYPE extend_or_truncate = ENUMERATION OF
    (truncate,
     extend);
  END_TYPE;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  TYPE primitive_or_boolean_result_2d = SELECT (
    Primitive_2d, 
    Boolean_result_2d);
  END_TYPE;    
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  TYPE square_or_round = ENUMERATION OF
    (square,
     round);
  END_TYPE;

(* Pruned unused type: paiaata_activity_item  *)


(* Pruned unused type: cr_property_assignment_select  *)

(* USED FROM (Characterized_representation_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE chained_representation_link = SELECT (
   Geometric_placement_operation,
   Representation_context,
   Representation_relationship);
END_TYPE;


(* Pruned unused type: cs_material_item_select  *)

(* USED FROM (Chemical_substance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE substance_composition_basis = ENUMERATION OF (
   ATOMS,
   MASS,
   MOLES,
   VOLUME);
END_TYPE;


(* Pruned unused type: compma_material_item_select  *)

(* USED FROM (Default_tolerance_arm); *)
TYPE cell_entry_select = SELECT
   (Plus_minus_toleranced_datum, 
    Upper_lower_toleranced_datum);
END_TYPE; 
(* USED FROM (Default_tolerance_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE general_tolerance_table_select = SELECT (
   File,
   General_tolerance_table);
END_TYPE;

(* USED FROM (Default_tolerance_arm); *)
TYPE limit_select = SELECT
   (Number_of_decimal_places,
    Significant_number_of_digits, 
    Upper_lower_limit);
END_TYPE; 

(* Pruned unused type: design_activity_method_item  *)


(* Pruned unused type: design_pdm_breakdown_of_target  *)


(* Pruned unused type: design_pdm_approval_item  *)


(* Pruned unused type: design_pdm_affected_item_select  *)


(* Pruned unused type: design_pdm_assigned_name_select  *)


(* Pruned unused type: design_pdm_certification_item  *)


(* Pruned unused type: design_pdm_classification_item  *)


(* Pruned unused type: design_pdm_classified_attribute_select  *)


(* Pruned unused type: design_pdm_contract_item  *)


(* Pruned unused type: design_pdm_date_or_date_time_item  *)


(* Pruned unused type: design_pdm_documented_element_select  *)


(* Pruned unused type: design_pdm_groupable_item  *)


(* Pruned unused type: design_pdm_identification_item  *)


(* Pruned unused type: design_pdm_information_usage_right_item  *)


(* Pruned unused type: design_pdm_material_item_select  *)


(* Pruned unused type: design_pdm_organization_or_person_in_organization_item  *)


(* Pruned unused type: design_pdm_requirement_assignment_item  *)


(* Pruned unused type: design_pdm_requirement_source_item  *)


(* Pruned unused type: design_pdm_security_classification_item  *)


(* Pruned unused type: design_pdm_string_select  *)

(* USED FROM (Design_product_data_management_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE document_category = ENUMERATION OF (
   catalogue,
   manual,
   specification);
END_TYPE;

(* USED FROM (Design_product_data_management_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE part_category = ENUMERATION OF (
   application_control,
   assembly,
   boxed,
   collection,
   completely_knocked_down,
   continuous,
   detail,
   discrete,
   in_process,
   inseparable_assembly,
   prototype,
   raw_material,
   raw_material_by_area,
   raw_material_by_length,
   raw_material_by_volume,
   regulated,
   safety,
   service,
   tool);
END_TYPE;

(* USED FROM (Design_product_data_management_arm); *)
TYPE period_or_date_or_event_select = SELECT (
  date_or_event,
  Duration);
END_TYPE;

(* Pruned unused type: datc_draughting_model_item_definition  *)

(* USED FROM (Dimension_tolerance_arm); *)
TYPE adjoining_or_centred = ENUMERATION OF ( 
  adjoining,
  centred);
END_TYPE;
(* USED FROM (Dimension_tolerance_arm); *)
TYPE angle_relator = ENUMERATION OF 
   (equal,
    large,
    small);
END_TYPE; 
(* USED FROM (Dimension_tolerance_arm); *)
TYPE dimension_value_select = SELECT
   (Dimension_value_with_limitation, 
    Numerical_item_with_unit, 
    Tolerance_range, 
    Value_limit);
END_TYPE; 
(* USED FROM (Dimension_tolerance_arm); *)
TYPE diameter_qualifier_enumeration = ENUMERATION OF (
  centre_outer,
  centre_inner,
  outer_centre,
  outer_outer,
  outer_inner,
  inner_centre,
  inner_outer,
  inner_inner);
END_TYPE;
(* USED FROM (Dimension_tolerance_arm); *)
TYPE diameter_type = ENUMERATION OF (
   circular_or_cylindrical_diameter,
   spherical_diameter,
   toroidal_minor_diameter,
   toroidal_major_diameter,
   toroidal_high_major_diameter,
   toroidal_low_major_diameter);
END_TYPE;
(* USED FROM (Dimension_tolerance_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE dimension_target = SELECT (
   Coating_layer,
   Datum_reference_compartment,
   Nominal_3d_feature);
END_TYPE;

(* USED FROM (Dimension_tolerance_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE edge_of_undefined_shape_size_element = SELECT (
   Nominal_3D_edge);
END_TYPE;

(* USED FROM (Dimension_tolerance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE geometric_dimension_modifier = ENUMERATION OF (
   any_cross_section,
   any_part_of_the_feature,
   area_diameter_calculated_size,
   average_rank_order_size,
   circumference_diameter_calculated_size,
   common_tolerance,
   continuous_feature,
   controlled_radius,
   free_state_condition,
   least_square_association_criteria,
   local_size_defined_by_a_sphere,
   maximum_inscribed_association_criteria,
   maximum_rank_order_size,
   median_rank_order_size,
   mid_range_rank_order_size,
   minimum_circumscribed_association_criteria,
   minimum_rank_order_size,
   range_rank_order_size,
   specific_fixed_cross_section,
   square,
   statistical,
   two_point_size,
   volume_diameter_calculated_size);
END_TYPE;

(* USED FROM (Dimension_tolerance_arm); *)
TYPE limitation_definition_select = SELECT
   (Limits_and_fits, 
    Plus_minus_bounds);
END_TYPE; 
(* USED FROM (Dimension_tolerance_arm); *)
TYPE radial_type = ENUMERATION OF (
   circular_or_cylindrical_radius,
   spherical_radius,
   toroidal_minor_radius,
   toroidal_major_radius,
   toroidal_high_major_radius,
   toroidal_low_major_radius);
END_TYPE;
(* USED FROM (Dimension_tolerance_arm); *)
TYPE tolerance_principle_type = ENUMERATION OF (
  envelope_requirement, 
  independency, 
  default);
END_TYPE;
(* USED FROM (Dimension_tolerance_arm); *)
TYPE undefined_edge_shape_enumeration_direction = ENUMERATION OF ( 
  true_neighbor,               
  false_neighbor,
  both_neighbors);
END_TYPE;

(* Pruned unused type: dd_view_element_select  *)

(* USED FROM (Drawing_definition_arm); *)
  TYPE draughting_titled_item = SELECT 
    (Drawing,
     Drawing_sheet);
  END_TYPE;
(* USED FROM (Geometric_tolerance_arm); *)
TYPE directed_or_oriented_geometric_tolerance_select = SELECT
    (Line_profile_tolerance, 
    Parallelism_tolerance, 
    Perpendicularity_tolerance, 
    Position_tolerance, 
    Straightness_tolerance, 
    Symmetry_tolerance);
END_TYPE; 
(* USED FROM (Geometric_tolerance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE area_unit_type = ENUMERATION OF (
   circular,
   rectangular,
   square);
END_TYPE;

(* USED FROM (Geometric_tolerance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE collection_plane_orientation = ENUMERATION OF (
   parallel,
   perpendicular);
END_TYPE;

(* USED FROM (Geometric_tolerance_arm); *)
TYPE common_datum_list = LIST[1:?] OF Datum_reference_element;
END_TYPE; 
(* USED FROM (Geometric_tolerance_arm); *)
TYPE datum_or_common_datum = SELECT
    (common_datum_list, 
    Datum);
END_TYPE; 
(* USED FROM (Geometric_tolerance_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE datum_reference_modifier = SELECT (
   Datum_reference_modifier_with_value,
   simple_datum_reference_modifier);
END_TYPE;

(* USED FROM (Geometric_tolerance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE datum_reference_modifier_type = ENUMERATION OF (
   circular_or_cylindrical,
   distance,
   projected,
   spherical);
END_TYPE;

(* USED FROM (Geometric_tolerance_arm); *)
TYPE directed_tolerance_zone_type = ENUMERATION OF
   (perpendicular, 
    parallel, 
    including);
END_TYPE;
(* USED FROM (Geometric_tolerance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE geometric_tolerance_modifier = ENUMERATION OF (
   any_cross_section,
   common_zone,
   each_radial_element,
   free_state,
   least_material_requirement,
   line_element,
   major_diameter,
   maximum_material_requirement,
   minor_diameter,
   not_convex,
   pitch_diameter,
   reciprocity_requirement,
   separate_requirement,
   statistical_tolerance,
   tangent_plane);
END_TYPE;

(* USED FROM (Geometric_tolerance_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE geometric_tolerance_target = SELECT (
   Dimensional_location,
   Dimensional_size,
   Nominal_3d_feature);
END_TYPE;

(* USED FROM (Geometric_tolerance_arm); *)
TYPE oriented_tolerance_zone_type = ENUMERATION OF
   (perpendicular, 
    parallel, 
    angular);
END_TYPE;
(* USED FROM (Geometric_tolerance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE simple_datum_reference_modifier = ENUMERATION OF (
   any_cross_section,
   any_longitudinal_section,
   basic,
   contacting_feature,
   degree_of_freedom_constraint_u,
   degree_of_freedom_constraint_v,
   degree_of_freedom_constraint_w,
   degree_of_freedom_constraint_x,
   degree_of_freedom_constraint_y,
   degree_of_freedom_constraint_z,
   distance_variable,
   free_state,
   least_material_requirement,
   line,
   major_diameter,
   maximum_material_requirement,
   minor_diameter,
   orientation,
   pitch_diameter,
   plane,
   point,
   translation);
END_TYPE;

(* USED FROM (Geometric_tolerance_arm); *)
TYPE tolerance_zone_target = SELECT
    (Dimensional_location, 
    Dimensional_size, 
    General_datum_reference, 
    Geometric_tolerance);
END_TYPE; 
(* USED FROM (Geometric_tolerance_arm); *)
TYPE tolerance_zone_type = ENUMERATION OF 
   (within_a_circle,
    between_two_concentric_circles,
    between_two_equidistant_curves,
    within_a_cylinder,
    between_two_coaxial_cylinders,
    between_two_equidistant_surfaces,
    non_uniform,
    cylindrical_or_circular,
    spherical,
    not_known);
END_TYPE; 
(* USED FROM (Geometric_validation_property_representation_arm); *)
TYPE point_or_measure = SELECT (Cartesian_point, Measure_item);
END_TYPE;
(* USED FROM (Manifold_subsurface_arm); *)
  TYPE manifold_subsurface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Connected_face_set);
  END_TYPE;
(* USED FROM (Manifold_subsurface_arm); *)
  TYPE open_shell_or_subsurface = SELECT
    (Manifold_surface_shape_representation,
     Manifold_subsurface_model);
  END_TYPE;

(* Pruned unused type: mdprwd_draughting_model_element_select  *)

(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mdprwd_element_select = SELECT (
   Axis_placement,
   Camera_model_d3);
END_TYPE;

(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mechanical_design_and_draughting_relationship_select = SELECT (
   Draughting_model,
   Geometric_model,
   Mechanical_design_presentation_representation_with_draughting,
   Mechanical_design_shaded_styled_model,
   Mechanical_representation_styled_model);
END_TYPE;

(* USED FROM (Modified_swept_solid_arm); *)
  TYPE trim_intent = ENUMERATION OF
    (blind,
     through_all,
     up_to_next,
     unspecified);
  END_TYPE;
(* USED FROM (Modified_swept_solid_arm); *)
  TYPE trim_select = SELECT
    (length_measure,
     plane_angle_measure,
     Advanced_face,
     Detailed_geometric_model_element);
  END_TYPE;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  TYPE component_class_for_assembly = SELECT 
    (Composite_assembly,
     Filament_laminate,
     Part_view_definition,     
     Ply,
     Ply_laminate,
     Processed_core);
  END_TYPE;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
 TYPE filament_assembly_material = SELECT 
    (Braided_assembly,
     Filament_laminate,
     Woven_assembly);
  END_TYPE;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  TYPE thickness_laminate_table_component = SELECT 
    (Filament_laminate,
     Ply,
     Processed_core);
  END_TYPE;
(* USED FROM (Picture_representation_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE picture_representation_element_select = SELECT (
   Axis_placement_2d,
   Styled_element);
END_TYPE;


(* Pruned unused type: pr_external_identification_item  *)

(* USED FROM (Planned_characteristic_arm); *)
  TYPE evaluation_result_value = ENUMERATION OF
    (pass,
     fail,
     undefined);
  END_TYPE;
(* USED FROM (Planned_characteristic_arm); *)
  TYPE evaluation_type = ENUMERATION OF
    (not_evaluatable,
     invalid,
     valid,
     to_be_evaluated);
  END_TYPE;
(* USED FROM (Planned_characteristic_arm); *)
  TYPE evaluation_activity_select = SELECT 
     (Activity,
      Process_operation_occurrence);
  END_TYPE;  

(* Pruned unused type: pc_groupable_item  *)

(* USED FROM (Ply_orientation_specification_arm); *)
  TYPE angle_select = SELECT 
    (Axis_placement_3d,
     Curve,
     Direction,
     Point_path);
  END_TYPE;

(* Pruned unused type: sf_shapeable_item  *)


(* Pruned unused type: sf_property_assignment_select  *)

(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE blend_end_condition = SELECT
    (Edge_curve,
    Point_on_curve,
    Vertex);
  END_TYPE;
(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE blend_radius_variation = ENUMERATION OF
    (linear,
     cubic,
     unspecified);
  END_TYPE;
(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE sculpting_surface = SELECT
    (Advanced_face,
     Advanced_open_shell,
     Surface);
  END_TYPE;
(* USED FROM (Solid_with_local_modification_arm); *)
  TYPE solid_with_placed_feature = SELECT
    (Solid_with_depression,
    Solid_with_protrusion,
    Solid_with_circular_pattern,
    Solid_with_rectangular_pattern);
  END_TYPE;

(* Pruned unused type: sc_dimension_target  *)

(* USED FROM (Surface_conditions_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE measuring_gauge_select = SELECT (
   Part_view_definition);
END_TYPE;


(* Pruned unused type: sf_material_item_select  *)

(* USED FROM (Surface_conditions_arm); *)
  TYPE shaped_element_select = SELECT
    (Shape_element, Item_shape);
  END_TYPE;
(* USED FROM (Surface_conditions_arm); *)
  TYPE measure_qualification_or_value_with_unit = SELECT (Measure_qualification, Value_with_unit); 
  END_TYPE;

(* Pruned unused type: tr_text_or_composite_text  *)


(* Pruned unused type: tr_composite_text_element_select  *)


(* Pruned unused type: tr_font_select  *)

(* USED FROM (Text_representation_arm); *)
  TYPE label1 = label;
   WHERE
    WR1 : LENGTH(SELF) = 1; 
  END_TYPE;
(* USED FROM (Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm); *)
TYPE nominal_3d_integral_feature_geometry = SELECT (
  Advanced_face, 
  Edge_curve,
  Vertex_point, 
  Connected_face_set,
  Edge_loop);
END_TYPE;
(* USED FROM (Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm); *)
TYPE nominal_3d_derived_feature_geometry = SELECT (
  Curve,
  Point,
  Surface);
END_TYPE;

(* Pruned unused type: mb3gdtsr_geometric_tolerance_target  *)


(* Pruned unused type: mb3gdtsr_dimension_target  *)


(* Pruned unused type: mb3gdtsr_edge_of_undefined_shape_size_element  *)


(* Pruned unused type: dm_approval_item  *)

(* USED FROM (Change_management_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE change_management_object = SELECT (
   Activity,
   Activity_relationship,
   Alternate_product_relationship,
   Assembly_bond_definition,
   Assembly_component_placement_link,
   Certification,
   Composite_curve_segment,
   Identification_assignment,
   Product_occurrence_definition_relationship,
   Representation,
   Representation_context,
   Representation_item);
END_TYPE;

(* USED FROM (Change_management_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE change_relationship_select = SELECT (
   process_operation_occurrence_relationship,
   Process_plan_relationship,
   Product_version_relationship,
   replaced_usage_relationship,
   shape_element_relationship);
END_TYPE;

(* USED FROM (Sketch_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE planar_curve_select = SELECT (
   Conic,
   Line);
END_TYPE;

(* USED FROM (Sketch_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE sketch_basis_select = SELECT (
   Advanced_face,
   planar_curve_select);
END_TYPE;

(* USED FROM (Sketch_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE sketch_element_select = SELECT (
   Curve,
   Point);
   WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DETAILED_GEOMETRIC_MODEL_ELEMENT' IN TYPEOF(SELF);
END_TYPE;
(* USED FROM (Sketch_arm); *)
TYPE sketch_type_select = SELECT
  (Sketch_2d_representation,
   Positioned_sketch,
   Subsketch);
END_TYPE;
(* USED FROM (Sketch_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE surface_or_solid_model = SELECT (
   Solid_model);
END_TYPE;

(* USED FROM (Sketch_arm); *)
TYPE curves_or_area = ENUMERATION OF
  (curves, area);
END_TYPE;
(* USED FROM (Tessellated_geometry_arm); *)
TYPE edge_or_curve = SELECT
  (Edge,
   Curve);
END_TYPE;
(* USED FROM (Tessellated_geometry_arm); *)
TYPE face_or_surface = SELECT
  (Face,
   Surface);
END_TYPE;  
(* USED FROM (Tessellated_geometry_arm); *)
TYPE path_or_composite_curve = SELECT
 (Path,
  Composite_curve);
END_TYPE;  
(* USED FROM (Tessellated_geometry_arm); *)
TYPE tessellated_edge_or_vertex = SELECT
   (Tessellated_edge,
    Tessellated_vertex);
END_TYPE;

(* Pruned unused type: tg_draughting_callout_content_select  *)

(* USED FROM (Edge_shape_feature_arm); *)
  TYPE board_side = ENUMERATION OF (primary, secondary); 
  END_TYPE;
(* USED FROM (Point_direction_model_arm); *)
TYPE point_or_point_direction_sequence = SELECT (
  Point_direction_sequence,
  Point_sequence);
END_TYPE;  
(* USED FROM (Point_direction_model_arm); *)
TYPE point_or_point_direction = SELECT (
  Point,
  Point_direction);
END_TYPE;  
(* USED FROM (Numerical_interface_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE property_variable_rep_select = SELECT (
   Dimensional_size,
   Property_value_representation);
END_TYPE;

(* USED FROM (Numerical_interface_arm); *)
TYPE expression_extension_select = SELECT (
      String_expression,
      Numeric_expression);
END_TYPE; 
(* USED FROM (Person_organization_arm); *)
TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE date_or_date_time_select = SELECT (
   Calendar_date,
   Date,
   Date_time,
   Ordinal_date,
   Week_of_year_and_day_date,
   Year_month);
END_TYPE;

(* USED FROM (Date_time_arm); *)
TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 
(* USED FROM (Date_time_arm); *)
TYPE year_number = INTEGER;
END_TYPE; 

(* Pruned unused type: property_variable_rep_select_242  *)

(* USED FROM (Elemental_geometric_shape_arm); *)
  TYPE geometric_model_item = SELECT 
    (Detailed_geometric_model_element,
     Detailed_topological_model_element);
  END_TYPE;
(* USED FROM (Elemental_geometric_shape_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE template_definition_select = SELECT (
   Geometric_model);
END_TYPE;

(* USED FROM (Value_with_unit_arm); *)
TYPE any_number_value = NUMBER;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE any_string_value = STRING;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE length_measure = REAL;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE measure_value = SELECT (
   any_number_value,
   any_string_value,
   area_measure,
   count_measure,
   length_measure,
   plane_angle_measure,
   ratio_measure,
   volume_measure);
END_TYPE;

(* USED FROM (Value_with_unit_arm); *)
TYPE plane_angle_measure = REAL;
END_TYPE; 
(* USED FROM (Value_with_unit_arm); *)
TYPE ratio_measure = REAL;
END_TYPE;
(* USED FROM (Value_with_unit_arm); *)
TYPE area_measure = REAL;
END_TYPE;
(* USED FROM (Value_with_unit_arm); *)
TYPE volume_measure = REAL;
END_TYPE;
(* USED FROM (Value_with_unit_arm); *)
TYPE count_measure = NUMBER;
END_TYPE;

(* Pruned unused type: maths_value_including_maths_space  *)

(* USED FROM (Maths_value_arm); *)
TYPE maths_atom = SELECT
  (maths_boolean,
  maths_complex,
  maths_integer,
  maths_real);
END_TYPE;
(* USED FROM (Maths_value_arm); *)
TYPE maths_boolean = BOOLEAN;
END_TYPE;
(* USED FROM (Maths_value_arm); *)
TYPE maths_integer = INTEGER;
END_TYPE;
(* USED FROM (Maths_value_arm); *)
TYPE maths_complex = LIST[2:2] OF REAL;
END_TYPE;
(* USED FROM (Maths_value_arm); *)
TYPE maths_real = REAL;
END_TYPE;
(* USED FROM (Maths_value_arm); *)
TYPE maths_tuple = LIST[0:?] OF maths_value;
END_TYPE;
(* USED FROM (Maths_value_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE maths_value = SELECT (
   maths_atom,
   Maths_space,
   maths_tuple);
END_TYPE;

(* USED FROM (Support_resource_arm); *)
TYPE identifier = STRING;
END_TYPE;
(* USED FROM (Support_resource_arm); *)
TYPE label = STRING;
END_TYPE;
(* USED FROM (Support_resource_arm); *)
TYPE text = STRING;
END_TYPE; 
(* USED FROM (Cfd_conditions_arm); *)
(* This ENUMERATION set has been expanded for EXPRESS E1 layout. *)
TYPE fd_bc_type_simple = mbna_bc_type_simple;
END_TYPE;

(* USED FROM (Cfd_conditions_arm); *)
TYPE ijk_minmax = ENUMERATION OF 
  (i_min,
   j_min,
   k_min,
   i_max,
   j_max,
   k_max);
END_TYPE;
(* USED FROM (Cfd_conditions_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE mbna_bc_type = SELECT (
   mbna_bc_type_compound,
   mbna_bc_type_simple);
END_TYPE;

(* USED FROM (Cfd_conditions_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE mbna_bc_type_compound = ENUMERATION OF (
   application_defined,
   bc_farfield,
   bc_inflow,
   bc_outflow,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_conditions_arm); *)
(* This ENUMERATION set has been expanded for EXPRESS E1 layout. *)
TYPE mbna_bc_type_simple = ENUMERATION OF (
   application_defined,
   bc_axissymmetric_wedge,
   bc_degenerate_line,
   bc_degenerate_point,
   bc_Dirichlet,
   bc_extrapolate,
   bc_general,
   bc_inflow_subsonic,
   bc_inflow_supersonic,
   bc_Neumann,
   bc_outflow_subsonic,
   bc_outflow_supersonic,
   bc_symmetry_plane,
   bc_symmetry_polar,
   bc_tunnel_inflow,
   bc_tunnel_outflow,
   bc_wall,
   bc_wall_inviscid,
   bc_wall_viscous,
   bc_wall_viscous_heat_flux,
   bc_wall_viscous_isothermal,
   unspecified);
END_TYPE;

(* USED FROM (Cfd_conditions_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE riemann_1d_data_name = ENUMERATION OF (
   characteristic_acoustic_minus,
   characteristic_acoustic_plus,
   characteristic_entropy,
   characteristic_vorticity1,
   characteristic_vorticity2,
   Riemann_invariant_minus,
   Riemann_invariant_plus);
END_TYPE;

(* USED FROM (Property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE property_assignment_select = SELECT (
   Assembly_bond_definition,
   Assembly_component_relationship,
   Breakdown_element_realization,
   Breakdown_element_usage,
   Characterizable_object,
   Characterized_item_within_representation,
   Characterized_representation,
   Document_definition,
   File,
   Item_shape,
   Part_view_definition,
   Product_class,
   Product_specification,
   Product_view_definition,
   Shape_element,
   Shape_element_relationship,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Property_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE represented_definition = SELECT (
   Assigned_property,
   Independent_property,
   Item_shape,
   Shape_element,
   Shape_element_relationship);
END_TYPE;

(* USED FROM (Assembly_structure_arm); *)
TYPE product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;

(* Pruned unused type: pie_external_identification_item  *)


(* Pruned unused type: located_select  *)

(* USED FROM (Geometric_model_relationship_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE geometric_representation_select = SELECT (
   Geometric_model,
   Kinematic_link_representation,
   Link_motion_representation_along_path);
END_TYPE;

(* USED FROM (Product_view_definition_relationship_arm); *)
TYPE as_product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;
(* USED FROM (External_item_identification_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE external_identification_item = SELECT (
   Assembly_bond_definition,
   Document_definition,
   Externally_defined_activity_relationship,
   Externally_defined_address_assignment,
   Externally_defined_approval,
   Externally_defined_approval_status,
   Externally_defined_date_or_date_time_assignment,
   Externally_defined_organization_or_person_in_organization_assignment,
   Externally_defined_picture_representation_item,
   Externally_defined_security_classification,
   Externally_defined_work_request,
   Externally_defined_work_request_status,
   File,
   Generic_product_view_definition_reference,
   User_defined_library_or_dictionary);
END_TYPE;

(* USED FROM (Activity_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_item = SELECT (
   Applied_independent_test_result_property,
   Applied_state_definition_assignment,
   Assembly_component_relationship,
   Item_usage_effectivity,
   Product_version,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Process_property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE characterized_activity_definition = SELECT (
   Activity,
   Activity_method);
END_TYPE;

(* USED FROM (Resource_property_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
(* NOTE: Empty SELECT set! *)
(* TYPE characterized_resource_select = SELECT (); END_TYPE; *) 


(* Pruned unused type: state_definition_activity_item  *)


(* Pruned unused type: state_definition_classification_item  *)


(* Pruned unused type: state_definition_identification_item  *)


(* Pruned unused type: document_location_select  *)

(* USED FROM (Generic_material_aspects_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE material_item_select = SELECT (
   Anisotropic_material,
   Assembly_bond_definition,
   Braided_assembly,
   Coating_layer,
   Isotropic_material,
   Item_shape,
   Laminate_table,
   Part_view_definition,
   Product_view_definition,
   Shape_element,
   Substance_view_definition,
   Woven_assembly);
END_TYPE;

(* USED FROM (Generic_material_aspects_arm); *)
  TYPE material_property_select = SELECT (Material_property, General_material_property);
  END_TYPE;
(* USED FROM (Generic_material_aspects_arm); *)
  TYPE dependent_or_independent_property_representation = SELECT(
    Independent_property_representation,
    Property_representation);
  END_TYPE;
(* USED FROM (Stock_material_arm); *)
  TYPE ply_stock_material = SELECT 
    (Anisotropic_material,
     Braided_assembly,
     Discontinuous_fiber_assembly,
     Filament_assembly,
     Isotropic_material,
     Woven_assembly);
  END_TYPE;

(* Pruned unused type: sma_approval_item  *)


(* Pruned unused type: effectivity_item_for_replacement  *)

(* USED FROM (Effectivity_application_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE effectivity_item = SELECT (
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Configuration,
   Document,
   Document_definition,
   Document_definition_relationship,
   Document_version,
   Part,
   Part_definition_relationship,
   Part_version,
   Part_view_definition,
   Product_version,
   Product_view_definition,
   Replaced_usage_relationship,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Product_occurrence_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE extended_value_with_unit = SELECT (
   Value_limit,
   Value_range,
   Value_with_unit);
END_TYPE;


(* Pruned unused type: ps_product_property_assignment  *)


(* Pruned unused type: at_external_identification_item  *)


(* Pruned unused type: at_material_item_select  *)


(* Pruned unused type: at_property_assignment_select  *)


(* Pruned unused type: at_requirement_assignment_item  *)

(* USED FROM (Assembly_technology_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE bond_feature = SELECT (
   Physical_component_feature);
END_TYPE;

(* USED FROM (Assembly_technology_arm); *)
  TYPE degree_of_freedom = ENUMERATION OF
    (x,
     y,
     z,
     u,
     v,
     w);
  END_TYPE;

(* Pruned unused type: cf_groupable_item  *)

(* USED FROM (Requirement_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_assignment_item = SELECT (
   Assembly_joint,
   Product,
   Product_class,
   Product_configuration,
   Product_version,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Requirement_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE requirement_satisfaction_item = SELECT (
   requirement_assignment_item);
END_TYPE;

(* USED FROM (Requirement_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_source_item = SELECT (
   Characterizable_object,
   Group,
   Group_relationship,
   Product,
   Product_version,
   Product_view_definition,
   Shape_element,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Advanced_boundary_representation_arm); *)
TYPE advanced_brep_shape_representation_item = SELECT (
  Axis_placement_3d,
  Geometric_placement_operation,
  Manifold_solid_brep);
END_TYPE;
(* USED FROM (Basic_curve_arm); *)
TYPE curve_transition_code = ENUMERATION OF
  (discontinuous,
   continuous,
   cont_same_gradient,
   cont_same_gradient_same_curvature);
END_TYPE;  

(* Pruned unused type: closed_curve  *)

(* USED FROM (B_spline_geometry_arm); *)
TYPE knot_specification = ENUMERATION OF
  (bezier,
   quasi_uniform,
   uniform);
 END_TYPE;  
(* USED FROM (B_spline_geometry_arm); *)
TYPE parameter_value = REAL;
END_TYPE;
(* USED FROM (Composite_surface_arm); *)
TYPE surface_transition_code = ENUMERATION OF
  (discontinuous,
   continuous,
   cont_same_gradient,
   cont_same_gradient_same_curvature);
END_TYPE;  
(* USED FROM (Manifold_surface_arm); *)
  TYPE manifold_surface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Shell_based_surface_model);
  END_TYPE;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE inspected_element_select = SELECT (
   Assembly_component_relationship,
   Axis_placement,
   b_spline_or_composite_curve_select,
   b_spline_or_rectangular_composite_surface_select,
   Cartesian_transformation_3d,
   closed_or_open_shell_select,
   Connected_face_set,
   Curve,
   Direction,
   Edge_curve,
   Edge_loop,
   Face_surface,
   Group,
   Layer,
   Manifold_solid_brep,
   Numerical_representation_context,
   Point,
   Representation_item,
   Styled_element,
   Surface,
   Vertex_point);
END_TYPE;

(* USED FROM (Product_data_quality_inspection_result_arm); *)
  TYPE statistical_value_type = ENUMERATION OF
    (number_of_inspected_instances,
     number_of_quality_defects_detected);
  END_TYPE;
(* USED FROM (Product_data_quality_criteria_arm); *)
  TYPE detailed_report_type = ENUMERATION OF
    (measured_element,
     inferior_quality_element);
  END_TYPE;
(* USED FROM (Product_data_quality_criteria_arm); *)
  TYPE summary_report_type = ENUMERATION OF
    (unspecified,
     conclusion_only,
     number_of_quality_defects,
     number_of_inspections_and_conclusion,
     full_statistics);
  END_TYPE;
(* USED FROM (Product_data_quality_criteria_arm); *)
  TYPE preferred_ordering = ENUMERATION OF
    (extremity_order,
     detected_order);
  END_TYPE;
(* USED FROM (Product_data_quality_definition_arm); *)
  TYPE used_quality_representation_select = SELECT
    (Data_quality_criteria_representation,
     Data_quality_inspection_result_representation);
  END_TYPE;

(* Pruned unused type: pdq_date_or_date_time_item  *)


(* Pruned unused type: pqd_organization_or_person_in_organization_item  *)

(* USED FROM (Shape_data_quality_criteria_arm); *)
  TYPE shape_data_quality_value_limit_type_select = SELECT
    (Shape_data_quality_value_range,
     Shape_data_quality_value_limit);
  END_TYPE;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  TYPE shape_data_quality_assessment_specification_select = SELECT
    (Shape_data_quality_assessment_by_numerical_test,
     Shape_data_quality_assessment_by_logical_test);
  END_TYPE;
(* USED FROM (Qualified_measure_arm); *)
  TYPE value_qualifier = SELECT
    (Precision_qualifier,
     Type_qualifier,
     Uncertainty_qualifier,
     Value_format_type_qualifier);
  END_TYPE;
(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE appearance_context = SELECT (
   Geometric_model_relationship,
   Group,
   Layer,
   Representation,
   Visual_appearance);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE appearance_select = SELECT (
   Curve_appearance,
   Hatch_style,
   Point_appearance,
   Solid_fill_area_style,
   Surface_appearance,
   Text_style,
   Tile_style);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
  TYPE context_dependent_appearance_assignment_set = SET [2:?] OF Context_dependent_appearance_assignment; 
  END_TYPE;
(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE overriding_style_context = SELECT (
   Detailed_geometric_model_element,
   Geometric_model_relationship,
   Layer,
   Styled_model);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE presented_model_select = SELECT (
   External_geometric_model,
   Styled_model);
END_TYPE;

(* USED FROM (Appearance_assignment_arm); *)
  TYPE styled_element_appearance = SELECT (
    Appearance_assignment, 
    context_dependent_appearance_assignment_set);
  END_TYPE;
(* USED FROM (Appearance_assignment_arm); *)
  TYPE geometric_mapping_target = SELECT (
    Axis_placement, 
    cartesian_transformation);
  END_TYPE;

(* Pruned unused type: ecdq_documented_element_select  *)

(* USED FROM (Document_assignment_arm); *)
TYPE assigned_document_select = SELECT
   (Document, 
    Document_definition, 
    Document_version, 
    File);
END_TYPE; 
(* USED FROM (Document_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE documented_element_select = SELECT (
   Activity,
   Activity_method,
   Class_with_attributes,
   External_item_identification,
   Externally_conditioned_data_quality_criterion,
   Gdt_representation_view_context,
   Group,
   Group_relationship,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Material_identification,
   Model_based_3d_annotation_presentation_view_context,
   Model_based_view_context,
   Part,
   Part_version,
   Part_view_definition,
   Product,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Property_value_representation,
   Representation_item,
   Rule_set,
   Shape_element,
   Shape_element_relationship,
   View_definition_relationship,
   Work_request);
END_TYPE;

(* USED FROM (Group_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE groupable_item = SELECT (
   Component_feature,
   Detailed_geometric_model_element,
   Detailed_topological_model_element,
   Evaluated_characteristic,
   Geometric_model_relationship_with_transformation,
   Geometric_placement_operation,
   Group_relationship,
   Identification_assignment,
   Name_assignment,
   Shape_element,
   Styled_element);
   WHERE
  WR1: NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GROUP' IN TYPEOF(SELF));
END_TYPE; 
(* USED FROM (Layer_assignment_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE structuring_method_select = SELECT (
   Group,
   Layer);
END_TYPE;

(* USED FROM (Explicit_constraints_arm); *)
TYPE constraint_group_member = SELECT
  (Explicit_constraint,
   Simultaneous_constraint_group);
END_TYPE;
(* USED FROM (Explicit_constraints_arm); *)
TYPE variational_parameter_select = SELECT
     (Bound_variational_parameter,
      Unbound_variational_parameter);
END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE projection_method = ENUMERATION OF 
    (projection_reference,
     surface_normal);
  END_TYPE;

(* Pruned unused type: sd_documented_element_select  *)

(* USED FROM (Contextual_shape_positioning_arm); *)
  TYPE template_instance = SELECT
    (Geometric_placement_operation, 
     Geometric_model_relationship_with_transformation);
  END_TYPE; 
(* USED FROM (Kinematic_motion_representation_arm); *)
TYPE link_or_shape_representation = SELECT(
  Kinematic_link_representation,
  Geometric_model);
END_TYPE;

(* Pruned unused type: kmr_geometric_representation_select  *)

(* USED FROM (Kinematic_motion_representation_arm); *)
TYPE interpolation_type = ENUMERATION OF
  (undefined_interpolation_type,
   discontinuous_interpolation_type,
   synchronous_interpolation_type,
   linear_interpolation_type);
END_TYPE;
(* USED FROM (Specification_control_arm); *)
  TYPE breakdown_element_select = SELECT (
	Functional_element_definition,
	Physical_element_definition);
  END_TYPE;
(* USED FROM (Specification_control_arm); *)
  TYPE constraint_context_select = SELECT (Product_class);
  END_TYPE;

(* Pruned unused type: effectivity_specification_for_replacement  *)

(* USED FROM (Specification_control_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE instance_usage_context_select = SELECT (
   Collected_item_association,
   Solution_element);
END_TYPE;


(* Pruned unused type: sc_configured_element  *)


(* Pruned unused type: pr_identification_item  *)


(* Pruned unused type: pr_organization_or_person_in_organization_item  *)

(* USED FROM (Production_rule_arm); *)
TYPE clause_select = SELECT (Simple_clause, Complex_clause);
END_TYPE;
(* USED FROM (Production_rule_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE constants = SELECT (
   any_number_value,
   any_string_value,
   Logical_representation_item);
END_TYPE;

(* USED FROM (Production_rule_arm); *)
TYPE function_symbol = SELECT (any_string_value, built_in_functions);
END_TYPE;
(* USED FROM (Production_rule_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE built_in_functions = ENUMERATION OF (
   attr_val);
END_TYPE;

(* USED FROM (Production_rule_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE expression_syntax = ENUMERATION OF (
   express);
END_TYPE;


(* Pruned unused type: pr_documented_element_select  *)

(* USED FROM (Production_rule_arm); *)
TYPE predicate_symbol = STRING;
END_TYPE;
(* USED FROM (Production_rule_arm); *)
TYPE scope_select = SELECT (Rule_definition, Rule_set, Rule_set_group);
END_TYPE;
(* USED FROM (Production_rule_arm); *)
TYPE term_select = SELECT (Symbol, constants, Func, Scalar_variable, Row_value, Row_variable); 
END_TYPE;

(* Pruned unused type: product_as_individual_identification_item  *)

(* USED FROM (Product_as_individual_arm); *)
TYPE product_version_or_configuration = SELECT (
  Product_version, Product_configuration);
END_TYPE;
(* USED FROM (Product_as_individual_arm); *)
TYPE product_design_view_or_configuration = SELECT (
  Product_view_definition, Product_configuration);
END_TYPE;
(* USED FROM (Configuration_item_arm); *)
TYPE version_or_definition = SELECT
   (Product_version, 
    Product_view_definition);
END_TYPE; 

(* Pruned unused type: classification_item_extended  *)

(* USED FROM (Classification_with_attributes_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE classified_element_select = SELECT (
   Product,
   Product_version,
   Product_view_definition);
END_TYPE;

(* USED FROM (Classification_with_attributes_arm); *)
TYPE external_class_select = SELECT(Plib_class_reference, External_class);
END_TYPE;

(* Pruned unused type: definable_objects  *)


(* Pruned unused type: dma_material_item_select  *)

(* USED FROM (Information_rights_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE information_usage_right_item = SELECT (
   certification_item,
   Characterizable_object,
   classification_item,
   documented_element_select,
   identification_item,
   Organization,
   Person_in_organization,
   Product_version,
   requirement_assignment_item,
   Work_order);
END_TYPE;


(* Pruned unused type: right_approval_item  *)


(* Pruned unused type: right_contract_item  *)


(* Pruned unused type: right_date_item  *)


(* Pruned unused type: right_person_organization_item  *)


(* Pruned unused type: pdpdms_external_identification_item  *)


(* Pruned unused type: pdm_activity_item  *)


(* Pruned unused type: pdm_affected_item_select  *)


(* Pruned unused type: pdm_approval_item  *)


(* Pruned unused type: pdm_certification_item  *)


(* Pruned unused type: pdm_classification_item  *)


(* Pruned unused type: pdm_date_or_date_time_item  *)


(* Pruned unused type: pdm_documented_element_select  *)


(* Pruned unused type: pdm_effectivity_item  *)


(* Pruned unused type: pdm_event_item  *)


(* Pruned unused type: pdm_external_class_assigned_name_select  *)


(* Pruned unused type: pdm_identification_item  *)


(* Pruned unused type: pdm_organization_or_person_in_organization_item  *)


(* Pruned unused type: pdm_project_item  *)


(* Pruned unused type: pdm_security_classification_item  *)


(* Pruned unused type: pdm_string_select  *)


(* Pruned unused type: pdm_time_interval_item  *)

(* USED FROM (Activity_method_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE activity_method_item = SELECT (
   Activity,
   Activity_method,
   Activity_property,
   Applied_activity_assignment,
   Assembly_component_relationship,
   Assigned_property,
   Contract,
   Event,
   File,
   Organization,
   Person,
   Person_in_organization,
   Product,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Attribute_classification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classified_attribute_select = SELECT (
   Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Activity_property_representation,
   Activity_relationship,
   Address_assignment,
   Affected_items_assignment,
   Alternate_part_relationship,
   Applied_activity_assignment,
   Approval,
   Approval_assignment,
   Approval_relationship,
   Approval_status,
   Approving_person_organization,
   Assigned_property,
   Certification,
   Certification_assignment,
   Contract,
   Date_or_date_time_assignment,
   Digital_file,
   Document_assignment,
   Document_definition_relationship,
   Effectivity,
   Effectivity_assignment,
   Event_assignment,
   Event_relationship,
   External_source_identification,
   File_relationship,
   Group,
   Group_relationship,
   Hardcopy,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Language,
   Market,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Person_in_organization,
   Product,
   Product_concept,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project_assignment,
   Project_relationship,
   Property_representation,
   Representation,
   Representation_context,
   Representation_item,
   Security_classification,
   Time_interval_relationship,
   Unit,
   Value_with_unit,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request,
   Work_request_status);
END_TYPE;

(* USED FROM (Associative_draughting_elements_arm); *)
  TYPE annotation_occurrence_associativity_item = SELECT
    (Fill_area,
     Leader,
     Projection_curve);
  END_TYPE;
(* USED FROM (Associative_draughting_elements_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE draughting_model_element_select = SELECT (
   Annotation_element,
   Axis_placement,
   Camera_model_d3,
   Draughting_callout,
   Styled_model_replication);
END_TYPE;

(* USED FROM (Associative_draughting_elements_arm); *)
  TYPE draughting_model_item_association_select = SELECT
    (Annotation_element,
     Draughting_callout);
  END_TYPE;
(* USED FROM (Associative_draughting_elements_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE draughting_model_item_definition = SELECT (
   Dimensional_location,
   Dimensional_size,
   Geometric_tolerance,
   Item_shape,
   Shape_element,
   Shape_element_relationship);
END_TYPE;

(* USED FROM (Draughting_element_arm); *)
  TYPE annotation_plane_element = SELECT
   (Draughting_callout,
    Styled_element);
  END_TYPE;

(* Pruned unused type: de_appearance_select  *)

(* USED FROM (Draughting_element_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE draughting_callout_content_select = SELECT (
   Annotation_subfigure,
   Annotation_symbol,
   Annotation_text_occurrence,
   Generic_annotation_curve,
   Tessellated_anotation);
END_TYPE;

(* USED FROM (Draughting_element_arm); *)
  TYPE plane_or_planar_box = SELECT(
    Planar_box,
    Plane);
  END_TYPE; 

(* Pruned unused type: da_draughting_callout_content_select  *)

(* USED FROM (Draughting_annotation_arm); *)
  TYPE symbol_definition_select = SELECT
    (Dimension_symbol, 
     General_symbol, 
     Geometric_tolerance_symbol, 
     Marker, 
     Surface_condition_symbol, 
     Terminator);
  END_TYPE; 
(* USED FROM (Draughting_element_specialisations_arm); *)
  TYPE chained_or_parallel = ENUMERATION OF
    (chained,
     parallel);
  END_TYPE;
(* USED FROM (Draughting_element_specialisations_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE dimension_callout_select = SELECT (
   Annotation_text_occurrence);
END_TYPE;

(* USED FROM (Draughting_element_specialisations_arm); *)
  TYPE dimension_type = ENUMERATION OF 
    (angular,
     curve,
     diameter,
     leader_directed,
     linear,
     ordinate,
     radius);
  END_TYPE;
(* USED FROM (Draughting_element_specialisations_arm); *)
  TYPE primary_or_secondary = ENUMERATION OF
    (primary,
     secondary);
  END_TYPE;

(* Pruned unused type: dse_shape_model  *)

(* USED FROM (Construction_geometry_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE constructive_element_select = SELECT (
   Axis_placement,
   Curve,
   Point,
   Surface);
END_TYPE;

(* USED FROM (Construction_geometry_arm); *)
  TYPE constructive_geometry_select = SELECT
    (Constructive_geometry, 
     Geometric_model);
  END_TYPE; 

(* Pruned unused type: area_select  *)

(* USED FROM (Presentation_hierarchy_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE presentation_association_select = SELECT (
   Activity,
   Activity_method,
   Activity_relationship,
   Product_concept,
   Product_version,
   Product_view_definition,
   Specification,
   Specification_category,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Presentation_hierarchy_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE view_area_element_select = SELECT (
   Axis_placement_2d,
   Styled_element,
   View_area_replication);
END_TYPE;

(* USED FROM (Presentation_hierarchy_arm); *)
  TYPE view_area_relation_type = ENUMERATION OF
    (copy,
     derivation,
     hierarchy,
     substitution,
     unspecified);
  END_TYPE;
(* USED FROM (Presentation_hierarchy_arm); *)
  TYPE view_area_replication_model = SELECT 
    (View_area, View); 
  END_TYPE;
(* USED FROM (Presentation_hierarchy_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE view_element_select = SELECT (
   Axis_placement_2d,
   Camera_image_2d_with_scale,
   Model_image_3d,
   Styled_element);
END_TYPE;

(* USED FROM (Presentation_hierarchy_arm); *)
  TYPE view_relation_type = ENUMERATION OF
    (dependency,
     unspecified);
  END_TYPE;

(* Pruned unused type: el_external_identification_item  *)

(* USED FROM (Camera_view_3d_arm); *)
  TYPE clipping_mode = ENUMERATION OF
    (union, intersection);
  END_TYPE;
(* USED FROM (Camera_view_3d_arm); *)
  TYPE light_type = ENUMERATION OF
    (ambient, directional, spot, positional);
  END_TYPE;
(* USED FROM (Camera_view_3d_arm); *)
  TYPE clipping_element = SELECT 
    (Plane, Clipping_operator);
  END_TYPE;

(* Pruned unused type: cv3_view_element_select  *)

(* USED FROM (Camera_view_3d_arm); *)
  TYPE view_projection_type = ENUMERATION OF 
    (central,
     parallel);
  END_TYPE; 

(* Pruned unused type: sal_appearance_context  *)


(* Pruned unused type: sal_appearance_select  *)


(* Pruned unused type: sal_overriding_style_context  *)

(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE boundary_class_zone = SELECT 
    (Boundary_curve_representation,
     Loop);
  END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE composite_assembly_shape = SELECT 
    (Advanced_brep_shape_representation,
     Edge_based_wireframe_shape_representation,
     Faceted_brep_shape_representation,
     Geometrically_bounded_surface_shape_representation,
     Geometrically_bounded_wireframe_shape_representation,
     Manifold_surface_shape_representation,
     Shell_based_wireframe_shape_representation,
     Tessellated_shape_representation,
     Three_d_geometry_set);
  END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE core_shape = SELECT 
    (Advanced_brep_shape_representation,
     Beveled_sheet_representation,
     Faceted_brep_shape_representation);
  END_TYPE;
(* USED FROM (Composite_constituent_shape_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE ply_laminate_shape = SELECT (
   Advanced_brep_shape_representation,
   Composite_sheet_representation,
   Csg_model,
   Curve_swept_solid,
   Elementary_brep_shape_representation,
   Faceted_brep_shape_representation,
   Tessellated_shape_representation,
   Three_d_geometry_set);
END_TYPE;

(* USED FROM (Composite_constituent_shape_arm); *)
  TYPE ply_piece_shape = SELECT 
    (Ply_shape);
  END_TYPE;
(* USED FROM (Alternative_solution_arm); *)
  TYPE complex_product_select = SELECT
    (Alternative_solution, Functional_element_definition, Physical_element_definition);
  END_TYPE;
(* USED FROM (Geometrically_bounded_surface_arm); *)
TYPE geometrically_bounded_surface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Surface_set);
END_TYPE;
(* USED FROM (Procedural_solid_model_arm); *)
  TYPE solid_select = SELECT
    (Modified_solid,
     Detailed_geometric_model_element);
  END_TYPE;
(* USED FROM (Procedural_shape_model_arm); *)
  TYPE shape_model_element = SELECT
    (Detailed_topological_model_element,
     Detailed_geometric_model_element);
  END_TYPE;
(* USED FROM (Text_appearance_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE composite_text_element_select = SELECT (
   annotation_text,
   Annotation_text_character,
   Composite_presentable_text,
   Defined_character_glyph,
   Text_literal);
END_TYPE;

(* USED FROM (Text_appearance_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE font_select = SELECT (
   Draughting_pre_defined_text_font,
   Externally_defined_text_font,
   Text_font);
END_TYPE;

(* USED FROM (Text_appearance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE text_alignment = ENUMERATION OF (
   bottom_centre,
   bottom_left,
   bottom_right,
   centre_centre,
   centre_left,
   centre_right,
   top_centre,
   top_left,
   top_right);
END_TYPE;

(* USED FROM (Text_appearance_arm); *)
(* This EXTENSIBLE ENUMERATION set has been replaced with plain ENUMERATION for EXPRESS E1 layout. *)
TYPE text_delineation = ENUMERATION OF (
   overline,
   underline);
END_TYPE;

(* USED FROM (Text_appearance_arm); *)
  TYPE text_path = ENUMERATION OF(
    left,
    right,
    up,
    down);
  END_TYPE;

(* Pruned unused type: at_appearance_select  *)


(* Pruned unused type: at_composite_text_element_select  *)

(* USED FROM (Associative_text_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE text_or_composite_text = SELECT (
   Annotation_text,
   Annotation_text_character,
   Composite_presentable_text,
   Defined_character_glyph,
   Text_literal);
END_TYPE;

(* USED FROM (Associative_text_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE text_string_representation_item_select = SELECT (
   Annotation_text,
   Annotation_text_character,
   Composite_presentable_text,
   Defined_character_glyph,
   Text_literal);
END_TYPE;

(* USED FROM (Product_and_manufacturing_information_with_nominal_3d_models_arm); *)
TYPE advanced_face_model = SELECT (
  Advanced_brep_shape_representation, 
  Manifold_surface_shape_representation, 
  Manifold_subsurface_model);
END_TYPE;

(* Pruned unused type: date_select  *)


(* Pruned unused type: ed_date_or_date_time_select  *)

(* USED FROM (Extended_date_arm); *)
  TYPE day_in_year_number = INTEGER;
    WHERE
      WR1: {1 <= SELF <= 366};
  END_TYPE; 
(* USED FROM (Extended_date_arm); *)
  TYPE day_in_week_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 7 };
  END_TYPE; 
(* USED FROM (Extended_date_arm); *)
  TYPE week_in_year_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 53 };
  END_TYPE; 

(* Pruned unused type: characteristic  *)

(* USED FROM (Characteristic_arm); *)
  TYPE characteristic_data_table_cell = SELECT ( 
    Null_representation_item, 
    String_representation_item, 
    Numerical_item_with_global_unit,
    Numerical_item_with_unit, 
    Value_list, 
    Value_set); 
  END_TYPE; 

(* Pruned unused type: c_documented_element_select  *)

(* USED FROM (Characteristic_arm); *)
  TYPE range_class = ENUMERATION OF
    (closed,
     lower_open,
     upper_open,
     open);
  END_TYPE;

(* Pruned unused type: scalar_or_coordinated_characteristics  *)


(* Pruned unused type: external_property_select  *)

(* USED FROM (Foundation_state_definition_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
(* NOTE: Empty SELECT set! *)
(* TYPE state_definition_of_item = SELECT (); END_TYPE; *) 

(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_select = SELECT(
    String_representation_item, 
    Included_text_block,
    Structured_text_composition);
END_TYPE; 
(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_list = LIST[1:?] OF
string_representation_item_select;
END_TYPE;
(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_set = SET[1:?] OF string_representation_item_select;
END_TYPE;
(* USED FROM (Tagged_text_representation_arm); *)
TYPE string_representation_item_list_or_set =
 SELECT(string_representation_item_list, string_representation_item_set); 
END_TYPE;
(* USED FROM (Event_arm); *)
TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 

(* Pruned unused type: spr_documented_element_select  *)


(* Pruned unused type: spr_organization_or_person_in_organization_item  *)


(* Pruned unused type: spr_product_property_assignment  *)


(* Pruned unused type: characterized_product_definition  *)

(* USED FROM (Assembly_shape_arm); *)
TYPE internal_or_reflected_shape_element = SELECT (
    Shape_element,
    reflected_shape_element_id);
END_TYPE;
(* USED FROM (Assembly_shape_arm); *)
TYPE reflected_shape_element_id = identifier;
END_TYPE;
(* USED FROM (Assembly_shape_arm); *)
TYPE multi_or_next_assembly_usage_occurrence = SELECT (
    Multi_level_reference_designator,
    Next_assembly_usage);
END_TYPE;

(* Pruned unused type: ks_geometric_representation_select  *)


(* Pruned unused type: ks_property_assignment_select  *)

(* USED FROM (Kinematic_structure_arm); *)
TYPE rigid_placement = SELECT
  (Axis_placement_3d,
   Su_parameters);
END_TYPE;
(* USED FROM (Kinematic_structure_arm); *)
TYPE kinematic_link_representation_items = SELECT (
  Curve,
  Cartesian_point,
  Rigid_placement,
  Surface);
END_TYPE;
(* USED FROM (Kinematic_structure_arm); *)
TYPE actuated_direction = ENUMERATION OF (
	bidirectional,
	positive_only,
	negative_only,
	not_actuated);
END_TYPE;
(* USED FROM (Kinematic_state_arm); *)
TYPE spatial_rotation = SELECT
  (ypr_rotation,
   rotation_about_direction);
END_TYPE;

(* Pruned unused type: mri_identification_item  *)

(* USED FROM (Kinematic_state_arm); *)
TYPE ypr_enumeration = ENUMERATION OF
  (yaw,
   pitch,
   roll);
END_TYPE;

(* Pruned unused type: mri_organization_or_person_in_organization_item  *)

(* USED FROM (Product_breakdown_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE breakdown_of_target = SELECT (
   Product_concept,
   Product_configuration,
   Product_view_definition);
END_TYPE;


(* Pruned unused type: breakdown_element_realization_property_assignment_select  *)

(* USED FROM (Product_breakdown_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE breakdown_item = SELECT (
   Breakdown_element_definition,
   Breakdown_element_usage);
END_TYPE;

(* USED FROM (Product_breakdown_arm); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE product_item = SELECT (
   Product_view_definition,
   View_definition_usage);
END_TYPE;

(* USED FROM (Property_as_definition_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE representation_proxy_select = SELECT (
   Document_version);
END_TYPE;


(* Pruned unused type: product_property_assignment  *)


(* Pruned unused type: requirement_identification_and_version_identification_item  *)

(* USED FROM (Specification_based_configuration_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE configured_item_select = SELECT (
   Alternative_solution,
   Breakdown_element_definition,
   Process_operation_occurrence,
   Process_plan,
   Product_occurrence);
END_TYPE;

(* USED FROM (Specification_based_configuration_arm); *)
TYPE configuration_kind = ENUMERATION OF (usage, design);
END_TYPE;
(* USED FROM (Specification_based_configuration_arm); *)
TYPE configuration_inheritance_types = ENUMERATION OF (exception_case, full_inheritance, no_inheritance);
END_TYPE;
(* USED FROM (Specification_based_configuration_arm); *)
TYPE configured_specification_select = SELECT(Class_condition_association, Class_specification_association);
END_TYPE;

(* Pruned unused type: effectivity_for_configuration  *)

(* USED FROM (Product_class_arm); *)
TYPE expression_operator = ENUMERATION OF (or_operator, and_operator, oneof_operator, not_operator);
END_TYPE;
(* USED FROM (Product_class_arm); *)
TYPE specification_operand_select = SELECT
		(Specification_expression, Specification);
END_TYPE;

(* Pruned unused type: id_for_class  *)


(* Pruned unused type: specification_for_category  *)


(* Pruned unused type: external_class_assigned_name_select  *)

(* USED FROM (Name_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE assigned_name_select = SELECT (
   External_class_library,
   Group,
   Group_relationship,
   Product,
   Product_view_definition);
END_TYPE;


(* Pruned unused type: mri_alias_identification_item  *)


(* Pruned unused type: mri_approval_item  *)


(* Pruned unused type: mri_date_or_date_time_item  *)


(* Pruned unused type: document_management_string_select  *)

(* USED FROM (Document_properties_arm); *)
TYPE descriptive_or_numerical = SELECT
   (Descriptive_document_property, 
    Numerical_document_property);
END_TYPE; 

(* Pruned unused type: mri_string_select  *)

(* USED FROM (Work_request_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE affected_item_select = SELECT (
   Assembly_component_relationship,
   Assigned_property,
   Product_version,
   Product_view_definition,
   View_definition_relationship,
   Work_request);
END_TYPE;

(* USED FROM (Configuration_effectivity_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE item_usage_relationship_item = SELECT (
   Assembly_component_relationship,
   Product_occurrence,
   View_definition_usage);
END_TYPE;


(* Pruned unused type: document_management_alias_identification_item  *)


(* Pruned unused type: document_management_approval_item  *)


(* Pruned unused type: document_management_contract_item  *)


(* Pruned unused type: document_management_date_or_date_time_item  *)


(* Pruned unused type: document_management_identification_item  *)


(* Pruned unused type: document_management_person_and_organization_item  *)


(* Pruned unused type: document_management_security_classification_item  *)


(* Pruned unused type: mbgdt_documented_element_select  *)

(* USED FROM (Kinematic_topology_arm); *)
TYPE kinematic_topology_representation_select = SELECT (
  kinematic_topology_structure,
  kinematic_topology_directed_structure,
  kinematic_topology_network_structure
);
END_TYPE;
(* USED FROM (Document_properties_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE document_property_item = property_assignment_select;
END_TYPE;

(* USED FROM (Incomplete_data_reference_mechanism_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE idrm_marked_item = classification_item;
END_TYPE;

(* USED FROM (Time_interval_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE time_interval_item = SELECT (
   Activity,
   general_organizational_data_select,
   Time_interval_effectivity);
END_TYPE;

(* USED FROM (General_surface_appearance_arm); *)
  TYPE surface_side = ENUMERATION OF
    (positive,
     negative,
     both);
  END_TYPE;
(* USED FROM (Project_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE project_item = SELECT (
   Activity,
   Product_concept);
END_TYPE;

(* USED FROM (Alias_identification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE alias_identification_item = identification_item;
END_TYPE;

(* USED FROM (Certification_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE certification_item = SELECT (
   Alternate_product_relationship,
   Product_version,
   Product_version_relationship);
END_TYPE;

(* USED FROM (Multi_linguism_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE string_select = SELECT (
   Alias_identification,
   Alternate_part_relationship,
   Applied_independent_property,
   Approval,
   Approval_relationship,
   Approval_status,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Certification,
   Certification_assignment,
   Contract,
   Date_or_date_time_assignment,
   Detailed_geometric_model_element,
   Digital_document_definition,
   Document,
   Document_assignment,
   Document_definition_relationship,
   Document_version,
   Effectivity,
   Effectivity_relationship,
   Event,
   External_geometric_model,
   External_item_identification,
   External_source_identification,
   File_relationship,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Information_right,
   Information_usage_right,
   Information_usage_right_relationship,
   Item_shape,
   Make_from_relationship,
   Organization_relationship,
   Person_in_organization,
   Physical_document_definition,
   Product,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   Representation,
   Security_classification_assignment,
   Shape_element,
   Shape_element_relationship,
   String_representation_item,
   Uncertainty_with_unit,
   View_definition_context,
   View_definition_relationship);
END_TYPE;

(* USED FROM (Event_assignment_arm); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE event_item = SELECT (
   Project);
END_TYPE;

(* USED FROM (Parameterization_and_variational_representation_arm); *)
TYPE attribute_identifier = STRING;
    WHERE
      WR1: validate_attribute_id(SELF);
END_TYPE;
(* USED FROM (Kinematic_state_arm); *)
TYPE ypr_rotation = ARRAY [ypr_index(yaw) : ypr_index(roll)]
                    OF plane_angle_measure;
END_TYPE;
(* USED FROM (Assembly_technology_arm); *)
  ENTITY Connection_zone_based_assembly_joint
    SUBTYPE OF (Assembly_joint);
      zone_1 : Connection_zone; -- Connection_zone_in_design_view;
      zone_2 : Connection_zone; -- Connection_zone_in_design_view;
    WHERE
      WR1 : zone_1 :<>: zone_2;
  END_ENTITY;
(* USED FROM (Analysis_assignment_arm); *)
ENTITY Analysis_design_version_relationship
  SUBTYPE OF (Analysis_assignment);
  SELF\Analysis_assignment.applied_to : Product_version;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_discipline_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Analysis_version;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Analysis;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_version_relationship
  SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Analysis_version;
  SELF\Product_version_relationship.related_version : Analysis_version;
END_ENTITY;
(* USED FROM (Analysis_identification_arm); *)
ENTITY Analysis_version_sequence
  SUBTYPE OF (Analysis_version_relationship);

  (* removed : SELF\Analysis_version_relationship.predecessor :  ANALYSIS_VERSION *)

  (* removed : SELF\Analysis_version_relationship.successor :  ANALYSIS_VERSION *)
    DERIVE
      predecessor : ANALYSIS_VERSION := SELF\Analysis_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : ANALYSIS_VERSION := SELF\Analysis_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_APPROVAL,
               EXTERNALLY_DEFINED_APPROVAL) ) ;
  status : Approval_status;
  purpose : STRING;
  planned_date : OPTIONAL date_or_date_time_select;
  actual_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval_assignment;
  assigned_approval : Approval;
  items : SET[1:?] OF approval_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_approval : Approval;
  related_approval : Approval;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approval_status  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_APPROVAL_STATUS,
               EXTERNALLY_DEFINED_APPROVAL_STATUS) ) ;
  status_name : STRING;
END_ENTITY;
(* USED FROM (Approval_arm); *)
ENTITY Approving_person_organization;
  person_organization : organization_or_person_in_organization_select;
  approval_date : OPTIONAL date_or_date_time_select;
  authorized_approval : Approval;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Classification_assignment_arm); *)
ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract;
  id : STRING;
  purpose : STRING;
  kind : STRING;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract_assignment;
  assigned_contract : Contract;
  items : SET[1:?] OF contract_item;
END_ENTITY;
(* USED FROM (Contract_arm); *)
ENTITY Contract_relationship;
  relating_contract : Contract;
  related_contract : Contract;
END_ENTITY;
(* USED FROM (Date_time_assignment_arm); *)
ENTITY Date_or_date_time_assignment  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_DATE_OR_DATE_TIME_ASSIGNMENT,
               EXTERNALLY_DEFINED_DATE_OR_DATE_TIME_ASSIGNMENT) ) ;
  assigned_date : date_or_date_time_select;
  role          : STRING;
  items         : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
(* USED FROM (Person_organization_assignment_arm); *)
ENTITY Organization_or_person_in_organization_assignment  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT,
               EXTERNALLY_DEFINED_ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT) ) ;
  assigned_entity : organization_or_person_in_organization_select;
  role : STRING;
  items : SET[1:?] OF organization_or_person_in_organization_item;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_SECURITY_CLASSIFICATION,
               EXTERNALLY_DEFINED_SECURITY_CLASSIFICATION) ) ;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Security_classification_arm); *)
ENTITY Security_classification_assignment;
  classification : Security_classification;
  items : SET[1:?] OF security_classification_item;
END_ENTITY;
(* USED FROM (Identification_assignment_arm); *)
ENTITY Identification_assignment;
  identifier : STRING;
  role : STRING;
  description : OPTIONAL STRING;
  items : SET[1:?] OF identification_item;
END_ENTITY;
(* USED FROM (Product_identification_arm); *)
ENTITY Product  SUPERTYPE OF (ONEOF (
               BREAKDOWN,
               BREAKDOWN_ELEMENT,
               DOCUMENT,
               INFORMATION_PRODUCT,
               PART,
               PRODUCT_AS_INDIVIDUAL,
               REQUIREMENT,
               SUBSTANCE) ) ;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_version_arm); *)
ENTITY Product_version  SUPERTYPE OF (ONEOF (
               BREAKDOWN_ELEMENT_VERSION,
               BREAKDOWN_VERSION,
               DOCUMENT_VERSION,
               INFORMATION_VERSION,
               PART_VERSION,
               PRODUCT_AS_INDIVIDUAL_VERSION,
               REQUIREMENT_VERSION,
               SUBSTANCE_VERSION) ) ;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Product_version_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_version : Product_version;
  related_version : Product_version;
WHERE
  WR1: relating_version :<>: related_version;
  WR2: EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_version_relationship_arm); *)
ENTITY Supplied_part_relationship
  SUBTYPE OF (Product_version_relationship);
WHERE
  WR1: SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_view_definition_arm); *)
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
(* USED FROM (Analysis_product_relationships_arm); *)
ENTITY Idealisation_relationship;
  id : STRING;
  name : STRING;
  description : STRING;
  idealised : Product_view_definition;
  idealisation : Temporal_spatial_domain;
END_ENTITY;
(* USED FROM (Analysis_product_relationships_arm); *)
ENTITY Analysis_view_relationship;
  id : STRING;
  name : STRING;
  description : STRING;
  viewed : Temporal_spatial_domain;
  view : Numerical_model;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Behavioural_decomposition_of_numerical_model;
  parts : SET [2 : ?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_action_domain
SUBTYPE OF (Numerical_model);
  initial : Model_state_domain;
  final : Model_state_domain;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_product_domain
SUBTYPE OF (Numerical_model);
  temporal_parts : SET [0 : ?] OF Model_action_domain;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_product_domain_with_mesh
SUBTYPE OF (Model_product_domain);
  model_mesh : Mesh;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_property_distribution;
  creating_software : STRING;
  domain : Numerical_model;
  range : Independent_property;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Model_state_domain
SUBTYPE OF (Numerical_model);
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Numerical_model;
  id : STRING;
  name : STRING;
  description : STRING;
  creating_software : STRING;
  intended_analysis_code : SET [1 : ?] OF STRING;
  analysis_type : STRING;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Simulation_run;
  id : STRING;
  name : STRING;
  description : STRING;
  simulated : Numerical_model;
  results : SET [0 : ?] OF Model_property_distribution;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Spatial_decomposition_of_numerical_model;
  parts : SET [2 : ?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;
(* USED FROM (Analysis_arm); *)
ENTITY Temporal_decomposition_of_model_action;
  parts : LIST [2 : ?] OF Model_action_domain;
  whole : Model_action_domain;
END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property  SUPERTYPE OF ( ( ONEOF (
               CHARACTERISTIC_DATA_TABLE_HEADER,
               CHARACTERISTIC_DATA_COLUMN_HEADER) )ANDOR( ONEOF (
               PLIB_PROPERTY_REFERENCE,
               EXTERNAL_LIBRARY_PROPERTY) )  ) ;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Independent_property_arm); *)
ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Array_based_unstructured_mesh
  SUBTYPE OF (Unstructured_mesh);
  cells        : ARRAY [1:cell_count] OF Vertex_defined_cell;
WHERE
  wr1 : SELF\Mesh.index_count = 1;
END_ENTITY;
(* USED FROM (Advanced_boundary_representation_arm); *)
ENTITY Oriented_closed_shell
   SUBTYPE OF (Closed_shell);
   shell       : Closed_shell;
   orientation : BOOLEAN;
WHERE
   WR1: NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ORIENTED_CLOSED_SHELL'
              IN TYPEOF (SELF.shell));
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Cell
  SUPERTYPE OF (ONEOF (
              CELL_OF_STRUCTURED_MESH,
              VERTEX_DEFINED_CELL))
  SUBTYPE OF (Detailed_topological_model_element);
  description : text;
  dimension   : INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Cell_of_structured_mesh
  SUBTYPE OF (Cell);
  the_mesh : Structured_mesh;
  cell_identifier : ARRAY [1:index_count] OF INTEGER;
DERIVE
  index_count : INTEGER := the_mesh\Mesh.index_count;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Cell_with_explicit_boundary
  SUBTYPE OF (Cell);
  boundary : SET [1:?] OF Detailed_topological_model_element;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Explicit_unstructured_mesh
  SUBTYPE OF (Unstructured_mesh);
  explicit_model : Fea_model;
  cells          : ARRAY [1:cell_count] OF UNIQUE Element; -- element_representation;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Extraction_of_structured_submesh
SUBTYPE OF(Extraction_of_submesh);
  lower_vertex : ARRAY [1:whole_indices] OF INTEGER;
  used_indices : ARRAY [1:part_indices] OF INTEGER;
  used_senses  : ARRAY [1:part_indices] OF BOOLEAN;
DERIVE
  whole_indices : INTEGER := whole\Mesh.index_count;
  part_indices  : INTEGER := part\Mesh.index_count;
WHERE
  WR1: ('MESH_TOPOLOGY_SCHEMA.STRUCTURED_MESH' IN  TYPEOF(
             SELF\Extraction_of_submesh.whole));
  WR2: ('MESH_TOPOLOGY_SCHEMA.STRUCTURED_MESH' IN  TYPEOF(
             SELF\Extraction_of_submesh.part));

END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Extraction_of_submesh;
   whole:  mesh;
   part:   submesh;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Extraction_of_submesh_by_cells
  SUBTYPE OF (Extraction_of_submesh);
  cell_count: INTEGER;
  cells : ARRAY [1:cell_count] OF cell;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Extraction_of_submesh_by_vertices
  SUBTYPE OF (Extraction_of_submesh);
  vertex_count: INTEGER;
  vertices : ARRAY [1:vertex_count] OF Vertex;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Indices_list;
  nindices : INTEGER;
  indices  : LIST [1:?] OF ARRAY [1:nindices] OF INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Indices_range;
  nindices : INTEGER;
  start    : ARRAY [1:nindices] OF INTEGER;
  finish   : ARRAY [1:nindices] OF INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Mesh
   ABSTRACT SUPERTYPE OF (ONEOF (
                        STRUCTURED_MESH,
                        UNSTRUCTURED_MESH)
                        ANDOR 
                        SUBMESH)
  SUBTYPE OF (Detailed_topological_model_element);
  description : text;
  index_count : INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Mesh_derived_maths_space
  SUBTYPE OF (maths_space);
  description : text;
  name        : label;
  id          : identifier;
  the_mesh    : Mesh;
  kind        : Mesh_maths_space_type;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Product_of_mesh;
  operands : LIST [2:2] OF Mesh;
  product  : Mesh;
WHERE
  wr1 : (this_schema+'.STRUCTURED_MESH' IN TYPEOF(operands[1])) AND
        (this_schema+'.STRUCTURED_MESH' IN TYPEOF(operands[2])) AND
        (this_schema+'.STRUCTURED_MESH' IN TYPEOF(product));
  wr2 : operands[1].index_count = 1;
  wr3 : operands[1].index_count + operands[2].index_count
        = product.index_count;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Rind;
  index_count : INTEGER;
  planes      : ARRAY [1:2*index_count] OF INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Structured_mesh
  SUBTYPE OF (mesh);
  vertex_counts : ARRAY [1:SELF\mesh.index_count] OF INTEGER;
  cell_counts   : ARRAY [1:SELF\mesh.index_count] OF INTEGER;
  kind          : Structured_mesh_type;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Structured_mesh_with_rind
  SUBTYPE OF (Structured_mesh);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Submesh
  SUBTYPE OF (Mesh);
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Unstructured_mesh
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ARRAY_BASED_UNSTRUCTURED_MESH,
                        EXPLICIT_UNSTRUCTURED_MESH))
  SUBTYPE OF (Mesh);
  cell_count   : INTEGER;
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Vertex_defined_cell 
  SUBTYPE OF (Cell); 
  shape       : cell_shape;
  order       : element_order;
  vertices    : ARRAY [1:vn_count] OF OPTIONAL Vertex;
DERIVE
  bound_count       : INTEGER := cell_counts(SELF)[1];
  edge_node_count   : INTEGER := cell_counts(SELF)[2];
  opt_node_count    : INTEGER := cell_counts(SELF)[3];
  required_count    : INTEGER := bound_count + edge_node_count;
  vn_count          : INTEGER := required_count + opt_node_count;
  required_vertices : ARRAY [1:required_count] OF vertex
                        := shorten_array(vertices, vn_count, required_count);
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Behavioural_decomposition_of_temporal_spatial_domain;
  parts : SET [2 : ?] OF Temporal_spatial_domain;
  whole : Temporal_spatial_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Domain_property;
  domain : Temporal_spatial_domain;
  property_type : Independent_property;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Physical_action_domain
SUBTYPE OF (Temporal_spatial_domain);
  initial : Physical_state_domain;
  final : Physical_state_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Physical_product_domain
SUBTYPE OF (Temporal_spatial_domain);
  temporal_parts : SET [0: ?] OF Physical_action_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Physical_state_domain
SUBTYPE OF (Temporal_spatial_domain);
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Spatial_decomposition_of_temporal_spatial_domain;
  parts : SET [2 : ?] OF Temporal_spatial_domain;
  whole : Temporal_spatial_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Temporal_decomposition_of_action_domain;
  parts : LIST [2 : ?] OF Physical_action_domain;
  whole : Physical_action_domain;
END_ENTITY;
(* USED FROM (Product_analysis_arm); *)
ENTITY Temporal_spatial_domain;
  id : STRING;
  name : STRING;
  description : STRING;
END_ENTITY;
(* USED FROM (Analysis_representation_arm); *)
ENTITY Analysis_model
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Analysis_representation_context;
END_ENTITY;
(* USED FROM (Analysis_representation_arm); *)
ENTITY Analysis_representation_context
  SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation  SUPERTYPE OF ( ( ONEOF (
               INTERPOLATED_CONFIGURATION_REPRESENTATION,
               LINK_MOTION_REPRESENTATION_ALONG_PATH) )ANDOR( ONEOF (
               KINEMATIC_LINK_REPRESENTATION,
               KINEMATIC_TOPOLOGY_STRUCTURE,
               KINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE,
               KINEMATIC_TOPOLOGY_NETWORK_STRUCTURE,
               MECHANISM_REPRESENTATION,
               GEOMETRIC_MODEL) )ANDOR( ONEOF (
               KINEMATIC_TOPOLOGY_STRUCTURE,
               KINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE,
               KINEMATIC_TOPOLOGY_NETWORK_STRUCTURE) )  ) ;
  id : OPTIONAL identifier;
  name : OPTIONAL label;
  description : OPTIONAL text;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_context;
  id : identifier;
  kind : text;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_item
    ABSTRACT SUPERTYPE OF ( ( (ONEOF (
                        BOOLEAN_REPRESENTATION_ITEM,
                        COMPOUND_REPRESENTATION_ITEM,
                        DATE_TIME_REPRESENTATION_ITEM,
                        INTEGER_REPRESENTATION_ITEM,
                        LOGICAL_REPRESENTATION_ITEM,
                        RATIONAL_REPRESENTATION_ITEM,
                        REAL_REPRESENTATION_ITEM)) )ANDOR( (ONEOF (
                        CHARACTERISTIC_DATA_TABLE,
                        CHARACTERISTIC_DATA_TABLE_ROW)) )ANDOR( ONEOF (
                        STYLED_ELEMENT,
                        STYLED_MODEL_REPLICATION) )  ) ;
  name : OPTIONAL label;
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY Representation_relationship;
  relation_type : OPTIONAL label;
  description : OPTIONAL text;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Foundation_representation_arm); *)
ENTITY String_representation_item
    SUPERTYPE OF (ONEOF (
               TAGGED_TEXT_ITEM,
               UNIFORM_RESOURCE_IDENTIFIER) ) 
      SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Fd_step
SUBTYPE OF (Mbna_step);
  SELF\Mbna_step.equations : SET [0 : ?] OF Flow_equation_set; 
  SELF\Mbna_step.zones : LIST [0 : ?] OF Fd_zone;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Fd_zone
SUBTYPE OF (Mbna_zone);
  SELF\Mbna_zone.conditions : SET [0 : ?] OF Fd_zone_bc;
  SELF\Mbna_zone.equations : SET [0 : ?] OF Flow_equation_set;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Grid_coordinates
SUBTYPE OF (Model_property_distribution);
  SELF\Model_property_distribution.domain : Model_product_domain_with_mesh;
  SELF\Model_property_distribution.range : Specified_general_property;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Grid_coordinates_with_rind
SUBTYPE OF (Grid_coordinates);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_model
  SUBTYPE OF (Model_product_domain);
  SELF\Model_product_domain.temporal_parts : LIST OF Mbna_step;
  equations : SET OF Mbna_equation_set;  
INVERSE
  history : SET OF Mbna_history for domain;  
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_state
  SUBTYPE OF (model_state_domain);
END_ENTITY;  
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_step
  SUBTYPE OF (Model_action_domain);
  SELF\Model_action_domain.final : Mbna_state;
  equations : SET OF Mbna_equation_set;  
  refstate : SET OF Mbna_reference_state;
  zones : LIST OF Mbna_zone;
INVERSE
  history : SET OF Mbna_history for domain;  
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_structured_zone
SUBTYPE OF (Mbna_zone);
  SELF\Model_product_domain_with_mesh.model_mesh : Structured_mesh;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_unstructured_zone
SUBTYPE OF (Mbna_zone);
  SELF\Model_product_domain_with_mesh.model_mesh : Unstructured_mesh;
END_ENTITY;
(* USED FROM (Cfd_model_arm); *)
ENTITY Mbna_zone
   ABSTRACT SUPERTYPE OF (ONEOF (
                        MBNA_STRUCTURED_ZONE,
                        MBNA_UNSTRUCTURED_ZONE))
  SUBTYPE OF (Model_product_domain_with_mesh);
  conditions         : SET OF Mbna_zone_bc;
  equations          : SET OF Mbna_equation_set;
  grid_connectivity  : OPTIONAL Multiple_mesh_block;
  rstate             : SET OF Mbna_reference_state;
INVERSE
  coordinates : SET OF Grid_coordinates FOR domain;
  field_data  : SET OF Mbna_discrete_data FOR domain;
  history     : SET OF Mbna_history FOR domain;
  solution    : SET OF Mbna_solution FOR domain;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Curve_element
SUBTYPE OF (Element);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Curve_property;
  defined_elements : SET [1 : ?] OF Curve_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Curve_section_properties;
  property : Curve_property;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Damping_matrix
SUBTYPE OF (Matrix);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Directionally_explicit_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element
SUPERTYPE OF (ONEOF (
              VOLUME_ELEMENT,
              SURFACE_ELEMENT,
              SUBSTRUCTURE_ELEMENT,
              CURVE_ELEMENT,
              POINT_ELEMENT,
              DIRECTIONALLY_EXPLICIT_ELEMENT,
              EXPLICIT_ELEMENT));
  description : OPTIONAL Element_description;
  element_identification : STRING;
  model_ref : Fea_model;
  node_list : LIST [1 : ?] OF Node;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_description;
  description : STRING;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_property_geometric_relationship;
  geometry_ref : Detailed_geometric_model_element;
  section_ref : element_property_select;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_shape_aspect;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Element_shape_relationship;
  element_aspect : Element_shape_aspect;
  element_reference : Element;
  role : STRING;
  shape : Detailed_geometric_model_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Explicit_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_model;
  analysis_type : STRING;
  cae_filename : OPTIONAL STRING;
  creating_software : STRING;
  definition : Analysis_discipline_definition;
  description : Fea_model_description;
  identification : STRING;
  intended_analysis_code : STRING;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_model_description;
  description : STRING;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_group;
  description : STRING;
  elements : OPTIONAL SET [1 : ?] OF Element;
  group_identification : STRING;
  nodes : OPTIONAL SET [1 : ?] OF Node;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Fea_group_relationship;
  relating_group : Fea_group; -- LK: was Group;
  related_group : Fea_group; -- LK: was Group;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Mass_matrix
SUBTYPE OF (Matrix);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Matrix
SUPERTYPE OF (ONEOF (
              MASS_MATRIX,
              STIFFNESS_MATRIX,
              DAMPING_MATRIX));
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Nodal_results_coordinate_system;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Node;
  description : OPTIONAL Node_description;
  location : Detailed_geometric_model_element;
  model_ref : Fea_model;
  node_identification : STRING;
  results_coordinate_space : OPTIONAL Nodal_results_coordinate_system;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Node_description;
  description : STRING;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Node_shape_relationship;
  node_reference : Node;
  role : STRING;
  shape : Detailed_geometric_model_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Point_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Stiffness_matrix
SUBTYPE OF (Matrix);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Substructure_element
SUBTYPE OF (Element);
  substructure_model_ref : Fea_model;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Substructure_node_relationship;
  relating_node : Node;
  related_node : Node;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Surface_element
SUBTYPE OF (Element);
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Surface_property;
  defined_elements : SET [1 : ?] OF Surface_element;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Surface_thickness;
  property : Surface_property;
  thickness : length_measure;
END_ENTITY;
(* USED FROM (Finite_elements_arm); *)
ENTITY Volume_element
SUBTYPE OF (Element);
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Listed_real_data;
END_ENTITY; 
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Matched_mesh_connection
  SUBTYPE OF (Mesh_connectivity);
  SELF\Mesh_connectivity.current : Structured_mesh;
  range       : Indices_range;
  donor       : Structured_mesh;
  donor_range : Indices_range;
  transform   : ARRAY [1:index_count] OF INTEGER;
WHERE
  wr1 : current :<>: donor;
  wr2 : donor.index_count = index_count;
  wr3 : range.nindices = index_count;
  wr4 : donor_range.nindices = index_count;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mesh_connectivity
  ABSTRACT SUPERTYPE OF (ONEOF (
                        MATCHED_MESH_CONNECTION,
                        MISMATCHED_MESH_CONNECTION));
  id          : identifier;
  name        : label;
  description : text;
  current     : Mesh;
DERIVE
  index_count : INTEGER := current.index_count;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mesh_overset_hole
  SUBTYPE OF (Mismatched_mesh_connection);
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mismatched_donor_mesh
  ABSTRACT SUPERTYPE OF (ONEOF (
                        STRUCTURED_DONOR_MESH,
                        UNSTRUCTURED_DONOR_MESH));
 donor: Mesh;
INVERSE
  connect : mismatched_mesh_region FOR donor;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mismatched_mesh_connection
 ABSTRACT SUPERTYPE OF (ONEOF (
                        MISMATCHED_MESH_REGION,
                        MESH_OVERSET_HOLE))

 SUBTYPE OF (Mesh_connectivity);
  points   : Indices_group;
  gridloc  : Mesh_location;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Mismatched_mesh_region
  SUBTYPE OF (Mismatched_mesh_connection);
  donor : Mismatched_donor_mesh;
  kind  : Mismatched_region_type;
WHERE
  wr1 : donor.donor :<>: SELF\Mesh_connectivity.current;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Multiple_mesh_block;
  id             : identifier;
  name           : label; 
  description    : text;
  connectivities : LIST OF Mesh_connectivity;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Property_distribution_description;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  physical_function : property_distribution_select;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Structured_donor_mesh
  SUBTYPE OF (Mismatched_donor_mesh);
  SELF\Mismatched_donor_mesh.donor  : Structured_mesh;
  points : Listed_real_data;
  vsize  : INTEGER;
DERIVE
  index_count : INTEGER := donor.index_count;
END_ENTITY;
(* USED FROM (Mesh_connectivity_arm); *)
ENTITY Unstructured_donor_mesh
  SUBTYPE OF (Mismatched_donor_mesh);
  SELF\Mismatched_donor_mesh.donor : Unstructured_mesh;
  cells       : Indices_group;
  interpolant : Property_distribution_description;
  vsize       : INTEGER;
DERIVE
  index_count : INTEGER := donor.index_count;
END_ENTITY;
(* USED FROM (Analysis_shape_arm); *)
ENTITY Idealized_analysis_shape
SUBTYPE OF (Shape_description_association);
  analysis_view : Analysis_discipline_definition;
  basis : Nominal_design_shape;
  defining_shape : shape_model;
END_ENTITY;
(* USED FROM (Analysis_shape_arm); *)
ENTITY Nominal_design_shape
SUBTYPE OF (Shape_description_association);
  defining_shape : shape_model;
  design_view : Product_view_definition;
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Associated_item_shape
  SUBTYPE OF (Item_shape);
DERIVE
  associated_model : shape_model := association\Property_definition_representation.used_representation;
INVERSE  
  association : Shape_description_association FOR definition;
END_ENTITY;  
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Associated_shape_element 
    SUPERTYPE OF (ONEOF (
               AXIS_PLACEMENT_SHAPE_ELEMENT,
               PLANE_SHAPE_ELEMENT,
               POINT_SHAPE_ELEMENT) ) 
      SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Associated_item_shape;
DERIVE
  associated_item : geometric_model_item := association\Geometric_item_specific_usage.identified_item;
INVERSE 
  association : Geometric_item_specific_usage FOR definition;
WHERE
  WR1: EXISTS(associated_item);
  WR2: association\Geometric_item_specific_usage.used_model\Geometric_model.context_of_items = 
  SELF\Shape_element.containing_shape\Associated_item_shape.association\Property_definition_representation.used_representation\Geometric_model.context_of_items;
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Contextual_item_shape
  SUBTYPE OF (Item_shape);
    SELF\Item_shape.described_element : described_element_select;
  DERIVE
    shaped_product : Product_view_definition := spa_get_definition(SELF);
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Geometric_item_specific_usage;
    name            : STRING;
    description     : OPTIONAL STRING;
    definition      : geometric_item_specific_usage_select;
    identified_item : geometric_model_item;
    used_model      : shape_model;      
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Chain_based_geometric_item_specific_usage
    SUBTYPE OF (Geometric_item_specific_usage);
    nodes : LIST [2:?] OF UNIQUE Geometric_model;
    undirected_link : LIST [1:?] OF UNIQUE chained_geometric_model_link;
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Item_shape;
  id                : OPTIONAL STRING;
  description       : OPTIONAL STRING;
  described_element : shapeable_item;
UNIQUE
  UR1: described_element;
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Assigned_shape_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : assigned_shape_property_select;
END_ENTITY; 
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Shape_dependent_property_representation -- maps to property_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : Assigned_shape_property;
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Shape_description_association -- maps to shape_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : Associated_item_shape;
  SELF\Property_definition_representation.used_representation : shape_model;
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Shape_element_description_association -- maps to shape_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : shape_element_or_relationship_select;
  SELF\Property_definition_representation.used_representation : shape_model;
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Shape_element  SUPERTYPE OF ( ( ONEOF (
               DATUM,
               DATUM_TARGET,
               TOLERANCE_ZONE) )ANDOR( ONEOF (
               INSTANCED_FEATURE,
               PLACED_FEATURE) )ANDOR( ONEOF (
               INSTANCED_FEATURE,
               PLACED_FEATURE)
               ANDOR ONEOF (
               DEFINITIONAL_SHAPE_ELEMENT,
               NON_DEFINITIONAL_SHAPE_ELEMENT) )  ) ;
    id               : OPTIONAL STRING;
    element_name     : STRING;
    description      : OPTIONAL STRING;
    containing_shape : Item_shape;
UNIQUE
    UR1: id, containing_shape;    
WHERE
    WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Shape_property_assignment_arm); *)
ENTITY Shape_element_relationship;
    relation_type : OPTIONAL STRING;
    description   : OPTIONAL STRING;
    relating      : Shape_element;
    related       : Shape_element;
  WHERE
    WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Finite_element_shape_arm); *)
ENTITY Node_shape
SUBTYPE OF (Shape_description_association);
  analysis_view : Analysis_discipline_definition;
  defining_shape : Point_model;
END_ENTITY;
(* USED FROM (Finite_element_shape_arm); *)
ENTITY Point_model
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Cfd_specified_general_property_arm); *)
ENTITY Geometry_reference;
  description : STRING;
  data : choose_geometry_location;
END_ENTITY;
(* USED FROM (Cfd_specified_general_property_arm); *)
ENTITY Specified_general_property
SUBTYPE OF (Independent_property);
  name_specifier : choose_general_property_identifier;
END_ENTITY;
(* USED FROM (Cfd_specified_general_property_arm); *)
ENTITY Specified_representation_context
SUBTYPE OF (Representation_context);
  class_specifier : choose_representation_context_identifier;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Action_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_action_model_select;
  idealised_action : idealised_action_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Element_topological_relationship;
  element_ref : element;
  item : Detailed_topological_model_element;
  aspect : Element_shape_aspect;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_beam_section_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Independent_property;
  idealising : Curve_section_properties;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_model_topological_relationship;
  item : Detailed_topological_model_element;
  model_ref : Fea_model;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_shell_section_distribution_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Assigned_property;
  idealising : Surface_property;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Fea_shell_section_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Independent_property;
  idealising : Surface_property;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Node_topological_relationship;
  item : Detailed_topological_model_element;
  node_ref : Node;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Product_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_product_model_select;
  idealised_product : idealised_product_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_discretised_action_model;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF discretised_action_model_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_discretised_state_model;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF discretised_state_model_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_idealised_action;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF idealised_action_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY Same_idealised_state;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF idealised_state_select;
END_ENTITY;
(* USED FROM (Fea_definition_relationships_arm); *)
ENTITY State_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_state_model_select;
  idealised_state : idealised_state_select;
END_ENTITY;
(* USED FROM (Fea_material_aspects_arm); *)
ENTITY Fea_material_definition;
  description : STRING;
  elements : SET [0 : ?] OF definition_element;
  material_identification : STRING;
END_ENTITY;
(* USED FROM (Fea_material_aspects_arm); *)
ENTITY Fea_material_property
SUBTYPE OF (Material_property_value_representation);
  property_use : Fea_material_definition;
  composite_structure : OPTIONAL composite_structure_select;
END_ENTITY;
(* USED FROM (Fea_material_aspects_arm); *)
ENTITY Fea_material_specification
SUBTYPE OF (Document_definition);
  specification_use : Fea_material_definition;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Fd_diffusion_equation
SUBTYPE OF (Fd_governing_equation);
  diffusion_model : Fd_diffusion_model;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Fd_diffusion_model;
  terms : ARRAY [1 : diff] OF BOOLEAN;
  diff : INTEGER;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Fd_governing_equation
SUBTYPE OF (Mbna_governing_equation);
  SELF\Mbna_governing_equation.equation_type : fd_governing_equation_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Flow_equation_set
SUBTYPE OF (Mbna_equation_set);
  SELF\Mbna_equation_set.equations : Fd_governing_equation;
  fd_models : SET [0 : ?] OF fd_behaviour_models;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Gas_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : gas_model_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_behaviour_model
   ABSTRACT SUPERTYPE OF (ONEOF (
                        THERMAL_CONDUCTIVITY_MODEL,
                        GAS_MODEL,
                        TURBULENCE_CLOSURE,
                        TURBULENCE_MODEL,
                        VISCOSITY_MODEL))

SUBTYPE OF (Mbna_equation);
INVERSE
  data : SET [0 : ?] OF Model_property_distribution FOR domain;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_equation
SUPERTYPE OF (ONEOF (
              MBNA_EQUATION_SET,
              MBNA_GOVERNING_EQUATION,
              MBNA_BEHAVIOUR_MODEL))

SUBTYPE OF (Model_product_domain);
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_equation_set
SUBTYPE OF (Mbna_equation);
  dimension : INTEGER;
  equations : Mbna_governing_equation;
  mbna_models : SET [0 : ?] OF mbna_behaviour_models;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Mbna_governing_equation
SUBTYPE OF (Mbna_equation);
  equation_type : mbna_governing_equation_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Thermal_conductivity_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : thermal_conductivity_model_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Turbulence_closure
SUBTYPE OF (Mbna_behaviour_model);
  closure_type : turbulence_closure_type;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Turbulence_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : turbulence_model_type;
  diffusion_model : OPTIONAL Fd_diffusion_model;
END_ENTITY;
(* USED FROM (Cfd_equations_arm); *)
ENTITY Viscosity_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : viscosity_model_type;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_discrete_data
SUBTYPE OF (Mbna_result);
  gridloc : mesh_location;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_discrete_data_with_rind
SUBTYPE OF (Mbna_discrete_data);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_history
SUBTYPE OF (Mbna_result);
  notes : LIST [0 : ?] OF text;
INVERSE
  data : SET OF Property_distribution_description FOR physical_function;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_result
SUPERTYPE OF (ONEOF (
              MBNA_SOLUTION,
              MBNA_HISTORY,
              MBNA_DISCRETE_DATA))

SUBTYPE OF (Model_property_distribution);
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_solution
SUBTYPE OF (Mbna_result);
  gridloc : mesh_location;
INVERSE
  solution : SET OF Property_distribution_description FOR physical_function;
END_ENTITY;
(* USED FROM (Cfd_results_arm); *)
ENTITY Mbna_solution_with_rind
SUBTYPE OF (Mbna_solution);
  rind_planes : Rind;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Analysis_message
SUBTYPE OF (Fe_analysis_state_definition);
  message_level : STRING;
  quality : STRING;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Analysis_report_representation
SUPERTYPE OF (
              GRAPHICAL_REPRESENTATION
              ANDOR 
              TABULAR_REPRESENTATION);
  control : OPTIONAL Fe_analysis;
  model_ref : Fea_model;
  result : OPTIONAL Fe_analysis_results;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Calculated_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Constraint
SUPERTYPE OF (ONEOF (
              SINGLE_POINT_CONSTRAINT,
              LINEAR_CONSTRAINT_EQUATION,
              NODAL_DEGREE_OF_FREEDOM_REDUCTION));
  identification : STRING;
  steps : SET [1 : ?] OF Fe_analysis_control_step;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Element_field_variable_definition
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Element_nodal_freedom_actions
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis;
  intended_analysis_code : STRING;
  model_ref : Fea_model;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_control_step
SUPERTYPE OF (ONEOF (
              MODES_AND_FREQUENCIES_CONTROL_STEP,
              STATIC_CONTROL_STEP));
  analysis : Fe_analysis;
  identification : STRING;
  initial_input_state : Fe_analysis_state;
  sequence : INTEGER;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_results;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_results_step
SUPERTYPE OF (ONEOF (
              MODES_AND_FREQUENCIES_RESULTS_STEP,
              STATIC_RESULTS_STEP));
  control : Fe_analysis_control_step;
  result : Fe_analysis_results;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_state
SUPERTYPE OF (ONEOF (
              CALCULATED_STATE,
              LINEARLY_SUPERIMPOSED_STATE,
              OUTPUT_REQUEST_STATE,
              SPECIFIED_STATE));
  definitions : SET [1 : ?] OF Fe_analysis_state_definition;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Fe_analysis_state_definition
SUPERTYPE OF (ONEOF (
              ANALYSIS_MESSAGE,
              ELEMENT_FIELD_VARIABLE_DEFINITION,
              ELEMENT_NODAL_FREEDOM_ACTIONS,
              LINEAR_CONSTRAINT_EQUATION_VALUE,
              NODAL_FREEDOM_DEFINITIONS,
              SINGLE_POINT_CONSTRAINT_VALUES));
  ref : Definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Graphical_representation
SUBTYPE OF (Analysis_report_representation);
  graphical_filename : Document_definition;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Linear_constraint_equation
SUBTYPE OF (Constraint);
  freedoms_and_coefficients_nodes : SET [1 : ?] OF Constraint_definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Linear_constraint_equation_value
SUBTYPE OF (Fe_analysis_state_definition);
  equation : Linear_constraint_equation;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Linearly_superimposed_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Modes_and_frequencies_control_step
SUBTYPE OF (Fe_analysis_control_step);
  final_input_state : Fe_analysis_state;
  frequency_range : LIST [1 : 2] OF REAL;
  number_of_modes : INTEGER;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Modes_and_frequencies_results_step
SUBTYPE OF (Fe_analysis_results_step);
  resulting_states : SET [1 : ?] OF Calculated_state;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Nodal_degree_of_freedom_reduction
SUBTYPE OF (Constraint);
  node : Constraint_definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Nodal_freedom_definitions
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Output_request_state
SUBTYPE OF (Fe_analysis_state);
  steps : SET [1 : ?] OF Fe_analysis_control_step;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Single_point_constraint
SUBTYPE OF (Constraint);
  required_node : Constraint_definition_reference;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Single_point_constraint_values
SUBTYPE OF (Fe_analysis_state_definition);
  element : Single_point_constraint;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Specified_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Static_control_step
SUBTYPE OF (Fe_analysis_control_step);
  final_input_state : Fe_analysis_state;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Static_results_step
SUBTYPE OF (Fe_analysis_results_step);
  resulting_state : Calculated_state;
END_ENTITY;
(* USED FROM (Finite_element_analysis_arm); *)
ENTITY Tabular_representation
SUBTYPE OF (Analysis_report_representation);
  tabular_file : Document_definition;
END_ENTITY;
(* USED FROM (Mesh_function_arm); *)
ENTITY Mesh_function;
  mesh : Mesh;
  basis : LIST [0 : ?] OF Mesh_function_basis;
  uniform : BOOLEAN;
  vertex_values : BOOLEAN;
END_ENTITY;
(* USED FROM (Mesh_function_arm); *)
ENTITY Mesh_function_basis;
  cell_topological_dimension : INTEGER;
  value_array_dimension : INTEGER;
  value_array_order : ARRAY [1 : value_array_dimension] OF INTEGER;
END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection_assignment;
  collection : Collection_view_definition;
  is_assigned_to : collection_assignment_select;
END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection_membership;
  member : collection_member_select;
  of_collection : Collection_view_definition;
END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection_relationship
  SUBTYPE OF (Product_relationship);
  SELF\Product_relationship.relating_product : Collection;    -- relating_collection : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_relationship.related_product : Collection;     -- related_collection : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      related_collection : COLLECTION := SELF\Product_relationship.related_product;  -- RELATED_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      relating_collection : COLLECTION := SELF\Product_relationship.relating_product;  -- RELATING_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Collection;               -- of_collection : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      of_collection : COLLECTION := SELF\Product_version.of_product;  -- OF_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection_version_relationship
  SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Collection_version;
  SELF\Product_version_relationship.related_version : Collection_version;
END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection_version_sequence_relationship
  SUBTYPE OF (Collection_version_relationship);

  (* removed : SELF\Product_version_relationship.predecessor :  COLLECTION_VERSION *)

  (* removed : SELF\Product_version_relationship.successor :  COLLECTION_VERSION *)
    DERIVE
      predecessor : COLLECTION_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : COLLECTION_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Collection_identification_and_version_arm); *)
ENTITY Collection_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Collection_version;
END_ENTITY;
(* USED FROM (Part_view_definition_arm); *)
ENTITY Part_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Part_version;
  SELF\Product_view_definition.initial_context: Part_view_definition_context;
  SELF\Product_view_definition.additional_contexts: SET [0:?] OF Part_view_definition_context;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY G2_discontinuous_curve
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold)) ;
      WR3 : validate_measured_data_type(SELF,
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'PLANE_ANGLE_AND_RATIO_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_CURVE']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_CURVE_KNOT_LOCATOR']);
      WR6 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY G1_discontinuous_curve
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_CURVE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_data_quality_inspection_criterion_report
    SUBTYPE OF(Data_quality_inspection_criterion_report);
      representative_measured_value : measured_value_select;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Plane_angle_and_ratio_pair;
      plane_angle_value : plane_angle_measure;
      ratio_value       : ratio_measure;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY G1_discontinuous_surface
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) ;
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Point_on_edge_curve
    SUBTYPE OF(point_on_curve);
      basis_edge_curve                : edge_curve;
    DERIVE
      SELF\point_on_curve.supporting_curve : curve := SELF.basis_edge_curve.edge_geometry;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_edge_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Point_on_face_surface
    SUBTYPE OF(point_on_surface);
      basis_face_surface                  : face_surface;
    DERIVE
      SELF\point_on_surface.supporting_surface : surface := SELF.basis_face_surface.face_geometry;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_face_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY B_spline_curve_knot_locator;
      basis_curve : b_spline_curve;
      knot_index  : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Composite_curve_transition_locator;
      basis_curve      : composite_curve;
      transition_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY B_spline_surface_knot_locator;
      basis_surface     : b_spline_surface;
      knot_index        : INTEGER;
      surface_parameter : u_or_v_parameter;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY B_spline_surface_strip;
      basis_surface     : b_spline_surface;
      start_knot_index  : INTEGER;
      surface_parameter : u_or_v_parameter;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY B_spline_surface_patch;
      basis_surface      : b_spline_surface;
      u_start_knot_index : INTEGER;
      v_start_knot_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Rectangular_composite_surface_transition_locator;
      basis_surface      : rectangular_composite_surface;
      surface_parameter  : u_or_v_parameter;
      u_transition_index : INTEGER;
      v_transition_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Boundary_curve_of_b_spline_or_rectangular_composite_surface;
      basis_surface : b_spline_or_rectangular_composite_surface_select;
      boundary_type : surface_boundary_type;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Plane_angle_and_length_pair;
      plane_angle_value : plane_angle_measure;
      length_value      : length_measure;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_data_quality_inspection_instance_report
    SUBTYPE OF(Data_quality_inspection_instance_report);
      SELF\data_quality_inspection_instance_report.inspected_instances : LIST [1:?] OF Shape_data_quality_inspection_instance_report_item;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_data_quality_inspection_instance_report_item
    SUBTYPE OF(Data_quality_inspection_instance_report_item);
      SELF\Data_quality_inspection_instance_report_item.inspected_elements : SET [1:?] OF inspected_shape_element_select;
      measured_value     : measured_value_select;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Instance_report_item_with_extreme_instances
    SUBTYPE OF(Shape_data_quality_inspection_instance_report_item);
      extreme_instances : LIST [1:?] OF Extreme_instance;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Extreme_instance;
      locations_of_extreme_value : SET [1:?] OF location_of_extreme_value_select;
      measured_value             : measured_value_select;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_data_quality_inspection_result
    SUBTYPE OF(Data_quality_inspection_result);
    SELF\data_quality_inspection_result.criterion_inspected:shape_data_quality_criterion;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Surface_with_small_curvature_radius
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_inspection_result_representation_with_accuracy
    SUBTYPE OF(Shape_data_quality_inspection_result_representation);
      applied_general_accuracy : SET [1:?] OF Shape_measurement_accuracy;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_inspection_result_accuracy_association;
      applied_specific_accuracy : Shape_measurement_accuracy;
      shape_data_quality_result : Shape_data_quality_inspection_result;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Small_area_surface_patch
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_PATCH']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Narrow_surface_patch
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_PATCH']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_inspection_result_arm); *)
  ENTITY Externally_conditioned_data_quality_inspection_result
    SUBTYPE OF(Data_quality_inspection_result);
    WHERE
      WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
            'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERION' IN TYPEOF
            (SELF\data_quality_inspection_result.criterion_inspected);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Indistinct_surface_knots
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PARAMETER_VALUE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PARAMETER_VALUE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE_WITH_EXPLICIT_KNOTS']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Angle_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF linear_geometry_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF linear_geometry_element;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) = 1) OR
    (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIMENSIONED_ANGLE_CONSTRAINT' 
    IN TYPEOF(SELF)) AND 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Indistinct_curve_knots
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PARAMETER_VALUE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PARAMETER_VALUE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE_WITH_EXPLICIT_KNOTS']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_CURVE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Square_root_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Curve_length_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF Curve;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Curve_segment_set
  SUBTYPE OF (Detailed_geometric_model_element);
  segments : SET[1:?] OF Composite_curve_segment;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Curve_smoothness_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:1] OF Curve_segment_set;
  smoothness : curve_transition_code;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_angle_constraint
  SUBTYPE OF (Angle_geometric_constraint);
  angle_value : plane_angle_measure;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_curve_distance_constraint
  SUBTYPE OF (Curve_distance_constraint);
  distance : length_measure;
WHERE
   WR1 : distance >= 0.0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_curve_length_constraint
  SUBTYPE OF (Curve_length_constraint);
  curve_length : length_measure;
WHERE
   WR1 : curve_length > 0.0;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Nearly_degenerate_surface_patch
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_VALUE_RANGE'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_PATCH']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_parallel_offset_constraint 
  SUBTYPE OF (Parallel_offset_constraint); 
  offset_value : length_measure; 
  offset_direction_constrained : BOOLEAN; 
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) = 1)
    OR (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: (NOT (offset_direction_constrained = TRUE)
    AND ((offset_type = curve_2d_offset) 
    OR (offset_type = surface_offset))); 
   WR3 : offset_value > 0.0;
END_ENTITY; 
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_point_distance_constraint
  SUBTYPE OF (Point_distance_constraint);
  distance : length_measure;
WHERE
   WR1 : distance >= 0.0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_radial_constraint
  SUBTYPE OF (Radius_geometric_constraint);
  radius_value : length_measure;
WHERE
   WR1 : radius_value > 0.0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_surface_distance_constraint
  SUBTYPE OF (Surface_distance_constraint);
  distance : length_measure;
WHERE
   WR1 : distance >= 0.0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Explicit_geometric_constraint
   ABSTRACT SUPERTYPE OF (ONEOF (
                        FIXED_ELEMENT_GEOMETRIC_CONSTRAINT,
                        PARALLEL_CONSTRAINT,
                        POINT_DISTANCE_CONSTRAINT,
                        SKEW_LINE_DISTANCE_CONSTRAINT,
                        CURVE_DISTANCE_CONSTRAINT,
                        SURFACE_DISTANCE_CONSTRAINT,
                        RADIUS_GEOMETRIC_CONSTRAINT,
                        CURVE_LENGTH_CONSTRAINT,
                        PARALLEL_OFFSET_CONSTRAINT,
                        ANGLE_GEOMETRIC_CONSTRAINT,
                        PERPENDICULAR_GEOMETRIC_CONSTRAINT,
                        INCIDENCE_GEOMETRIC_CONSTRAINT,
                        COAXIAL_CONSTRAINT,
                        TANGENT_CONSTRAINT,
                        SYMMETRY_GEOMETRIC_CONSTRAINT,
                        SWEPT_POINT_CURVE_CONSTRAINT,
                        SWEPT_CURVE_SURFACE_CONSTRAINT,
                        CURVE_SMOOTHNESS_CONSTRAINT,
                        SURFACE_SMOOTHNESS_CONSTRAINT))
  SUBTYPE OF (Defined_constraint, Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Fixed_element_geometric_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF geometric_constraint_element;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY; 
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        MULTIPLY_DEFINED_CURVES,
                        MULTIPLY_DEFINED_SURFACES,
                        MULTIPLY_DEFINED_CARTESIAN_POINTS,
                        MULTIPLY_DEFINED_DIRECTIONS,
                        MULTIPLY_DEFINED_PLACEMENTS))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Near_point_relationship;
  relating_item : curve_or_surface;
  ref_point : Point;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Parallel_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF linear_geometry_element; 
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF linear_geometry_element;
END_ENTITY; 
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_curves
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_surfaces
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) AND
            ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Point_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:?] OF Point;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:4] OF point_curve_or_surface;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR
    (('EXPLICIT_GEOMETRIC_CONSTRAINT_SCHEMA.DIMENSIONED_POINT_DISTANCE_CONSTRAINT' 
    IN TYPEOF(SELF)) AND 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Radius_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF radial_geometry_element;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Skew_line_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:2] OF Line;
  SELF\Explicit_constraint.reference_elements   : SET[0:1] OF Line;
  distance : length_measure;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.constrained_elements +
    SELF\Explicit_constraint.reference_elements) = 2;
  WR2 : distance >= 0.0;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_directions
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIRECTION','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIRECTION']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Surface_patch_set
  SUBTYPE OF (Detailed_geometric_model_element);
  patches : SET[1:?] OF Surface_patch;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Surface_smoothness_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET [1:1] OF surface_patch_set;
  u_smoothness : surface_transition_code;
  v_smoothness : surface_transition_code;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Swept_curve_surface_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:?] OF Surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[1:1] OF swept_surface_or_solid;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Swept_point_curve_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:?] OF Curve;
  SELF\Explicit_constraint.reference_elements   : 
    SET[1:1] OF Swept_solid;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Symmetry_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[2:2] OF Detailed_geometric_model_element;
  mirror_element : linear_geometry_element;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
  WR2: SIZEOF(TYPEOF(mirror_element) * 
    ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIRECTION']) = 0;
 END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Extreme_patch_width_variation
    SUBTYPE OF(Geometry_with_local_irregularity);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Angle_taper;
  angle : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Bevel_gear
   ABSTRACT SUPERTYPE OF (ONEOF (
                        HELICAL_BEVEL_GEAR,
                        STRAIGHT_BEVEL_GEAR))
  SUBTYPE OF (Defined_gear);
  tip_angle : Numerical_item_with_unit;
  root_angle : Numerical_item_with_unit;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Blind_bottom_condition
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CONICAL_HOLE_BOTTOM,
                        FLAT_HOLE_BOTTOM,
                        FLAT_WITH_RADIUS_HOLE_BOTTOM,
                        FLAT_WITH_TAPER_HOLE_BOTTOM,
                        SPHERICAL_HOLE_BOTTOM));
  start_or_end : BOOLEAN;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Boss
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CIRCULAR_BOSS,
                        GENERAL_BOSS,
                        RECTANGULAR_BOSS))
  SUBTYPE OF (Multi_axis_feature);
  boss_height : Linear_path_feature_component;
  fillet_radius : OPTIONAL Numerical_item_with_unit;
  top_condition : Boss_top_condition;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Boss_top_condition
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERAL_TOP_CONDITION,
                        PLANAR_TOP_CONDITION));
  top_radius : OPTIONAL Numerical_item_with_unit;
  start_or_end : BOOLEAN;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Catalogue_gear
  SUBTYPE OF (Gear);
  documentation : Specification_definition;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Catalogue_knurl
  SUBTYPE OF (Knurl);
  documentation : Specification_definition;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Catalogue_marking
  SUBTYPE OF (Marking_feature);
  documentation : Specification_definition;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Catalogue_thread
  SUBTYPE OF (Thread);
  documentation : Specification_definition;
  major_diameter : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Chamfer
  SUBTYPE OF (Transition_feature);
  chamfer_face : Face_shape_element;
  first_parameter : First_chamfer_offset;
  second_parameter : Second_chamfer_parameter;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Chamfer_angle
  SUBTYPE OF (Second_chamfer_parameter);
  angle_amount : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_boss
  SUBTYPE OF (Boss);
  circular_profile : Circular_closed_profile;
  change_in_diameter : OPTIONAL taper_select;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_closed_profile
  SUBTYPE OF (Closed_profile);
  diameter : Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_closed_shape_profile
  SUBTYPE OF (Shape_profile);
  closed_boundary : Circular_closed_profile;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_cutout
  SUBTYPE OF (Cutout_feature);
  circular_boundary : Circular_closed_profile;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_offset_pattern;
  index_number : INTEGER;
  angular_offset : Numerical_item_with_unit;
INVERSE
  relocated_base_feature_for : SET [1:?] OF Circular_pattern FOR relocated_base_feature;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_omit_pattern;
  omit_index : INTEGER;
INVERSE
  missing_base_feature_for : SET [1:?] OF Circular_pattern FOR missing_base_feature;
END_ENTITY;    
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_path_feature_component
   ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPLETE_CIRCULAR_PATH_FEATURE_COMPONENT,
                        PARTIAL_CIRCULAR_PATH_FEATURE_COMPONENT))
  SUBTYPE OF (Path_feature_component);
  radius : length_measure;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Circular_pattern
  SUBTYPE OF (Replicate_feature); 
  relocated_base_feature : SET[0:?] of Circular_offset_pattern;
  missing_base_feature : SET[0:?] of Circular_omit_pattern;
  base_feature_rotation : Numerical_item_with_unit;
  number_of_features : INTEGER;
  base_feature_diameter : OPTIONAL Numerical_item_with_unit;
  angular_spacing : Numerical_item_with_unit;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Closed_profile
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CIRCULAR_CLOSED_PROFILE,
                        GENERAL_CLOSED_PROFILE,
                        NGON_PROFILE,
                        RECTANGULAR_CLOSED_PROFILE))
  SUBTYPE OF (Profile);
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Closed_slot
  SUBTYPE OF (Slot);
  end_condition : Loop_slot_end_type;
  cource_of_travel : end_type_select;  
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Compound_feature
  SUBTYPE OF (Machining_feature);
  element : SET[2:?] OF Compound_feature_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Compound_feature_element;
  element : compound_feature_select;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Compound_feature_relationship;
  predecssor : Compound_feature_element;
  successor : Compound_feature_element;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Conical_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  tip_angle : Numerical_item_with_unit;
  tip_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Constant_radius_fillet
  SUBTYPE OF (Fillet);
  first_face_offset : OPTIONAL Numerical_item_with_unit;
  second_face_offset : OPTIONAL Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Constant_radius_edge_round
  SUBTYPE OF (Edge_round);
  first_face_offset : OPTIONAL Numerical_item_with_unit;
  second_face_offset : OPTIONAL Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Complete_circular_path_feature_component
  SUBTYPE OF (Circular_path_feature_component);
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Countersunk_hole
  SUBTYPE OF (Hole);
  constant_diameter_hole : Round_hole;
  tapered_hole : Round_hole;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Counterbore_hole
  SUBTYPE OF (Hole);
  smaller_hole : Round_hole;
  larger_hole : Round_hole;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Cutout_feature
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CIRCULAR_CUTOUT,
                        GENERAL_CUTOUT))
  SUBTYPE OF (Pocket);
  SELF\Pocket.bottom_condition : Through_pocket_bottom_condition;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Defined_gear
   ABSTRACT SUPERTYPE OF (ONEOF (
                        BEVEL_GEAR,
                        HELICAL_GEAR,
                        SPUR_GEAR))
  SUBTYPE OF (Gear);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Defined_marking
  SUBTYPE OF (Marking_feature);
  font_name : OPTIONAL text;
  special_instruction : OPTIONAL text;
  character_spacing : OPTIONAL Numerical_item_with_unit;
  character_height : OPTIONAL Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Defined_thread
  SUBTYPE OF (Thread);
  crest : OPTIONAL Numerical_item_with_unit;
  minor_diameter : OPTIONAL Numerical_item_with_unit;
  pitch_diameter : OPTIONAL Numerical_item_with_unit;
  major_diameter : Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Diagonal_knurl
  SUBTYPE OF (Turned_knurl);
  helix_hand : text;
  helix_angle : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Diameter_taper;
  final_diameter : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Diamond_knurl
  SUBTYPE OF (Turned_knurl);
  helix_angle : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Direction_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Directed_taper;
  direction : Direction_element;
  angle : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Edge_round
  SUBTYPE OF (Transition_feature);
  edge_round_face : Face_shape_element;
  first_face_shape : Face_shape_element;
  second_face_shape : Face_shape_element;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Face_shape_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Face_shape_element_relationship
  SUBTYPE OF (Shape_element_relationship);
  SELF\Shape_element_relationship.relating : Face_shape_element;
  SELF\Shape_element_relationship.related : Face_shape_element;
END_ENTITY;   
(* USED FROM (Machining_features_arm); *)
ENTITY Fillet
  SUBTYPE OF (Transition_feature);
  fillet_face : Face_shape_element;
  first_face_shape : Face_shape_element;
  second_face_shape : Face_shape_element;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY First_chamfer_offset;
  face_shape : Face_shape_element;
  offset_amount : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Flat_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Flat_slot_end_type
  SUBTYPE OF (Slot_end_type);
  first_radius : Numerical_item_with_unit;
  second_radius : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Flat_with_radius_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  corner_radius : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Flat_with_taper_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  taper_diameter : Numerical_item_with_unit;
  final_diameter : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Gear
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CATALOGUE_GEAR,
                        DEFINED_GEAR))
  SUBTYPE OF (Machining_feature);
  nominal_tooth_depth : Numerical_item_with_unit;
  reference_preassure_angle : Numerical_item_with_unit;
  profile_shift : Numerical_item_with_unit;
  number_of_teeth : Numerical_item_with_unit;
  face_width : Numerical_item_with_unit;
  tip_diameter : Numerical_item_with_unit;
  normal_attribute : Numerical_item_with_unit;
  applied_shape : Definitional_shape_element;
  internal_or_external_gear : BOOLEAN;
  module_or_diametrical_pitch : BOOLEAN;
  root_fillet_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_boss
  SUBTYPE OF (Boss);
  enclosed_boundary : Closed_profile;
  change_in_boundary : OPTIONAL angle_or_directed_taper;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY General_closed_profile
  SUBTYPE OF (Closed_profile);
  closed_profile_shape : Path_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_cutout
  SUBTYPE OF (Cutout_feature);
  boundary : Profile;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_open_profile
  SUBTYPE OF (Open_profile);
  enclosed_boundary : Path_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_outside_profile
  SUBTYPE OF (Profile_feature);
  boundary : Profile;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_pattern
  SUBTYPE OF (Replicate_feature); 
  feature_placement : SET[1:?] OF Axis_placement;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY General_path_feature_component
  SUBTYPE OF (Path_feature_component);
  sweep_path : Path_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  boundary : Profile;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY General_pocket_bottom_condition
  SUBTYPE OF (Pocket_bottom_condition);
  floor : Face_shape_element;
  floor_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_profile_floor
  SUBTYPE OF (Profile_floor);
  floor : Face_shape_element;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY General_removal_volume
  SUBTYPE OF (Multi_axis_feature);
  removal_volume : SET[1:?] OF Definitional_shape_element;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY General_revolution
  SUBTYPE OF (Revolved_feature);
  outer_edge_shape : General_open_profile;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY General_rib_top_floor
  SUBTYPE OF (Rib_top_floor);
  rib_top_face : SET[1:?] OF Face_shape_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY General_shape_profile
  SUBTYPE OF (Shape_profile);
  profile_boundary : Profile;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY General_top_condition
  SUBTYPE OF (Boss_top_condition);
  top_face : Face_shape_element;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Groove
  SUBTYPE OF (Revolved_feature);
  sweep : Open_profile;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Helical_bevel_gear
  SUBTYPE OF (Bevel_gear);
  reference_helix_agle : Numerical_item_with_unit;
  left_or_right_hand_tooth : BOOLEAN;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Helical_gear
  SUBTYPE OF (Defined_gear);
  left_or_right_hand_tooth : BOOLEAN;
  reference_helix_angle : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Hole
   ABSTRACT SUPERTYPE OF (ONEOF (
                        COUNTERBORE_HOLE,
                        COUNTERSUNK_HOLE,
                        ROUND_HOLE))
  SUBTYPE OF (Multi_axis_feature);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Knurl
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CATALOGUE_KNURL,
                        TURNED_KNURL))
  SUBTYPE OF (Machining_feature);
  partial_profile : OPTIONAL Partial_area_definition;
  applied_shape : Definitional_shape_element;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Linear_path_feature_component
  SUBTYPE OF (Path_feature_component);
  distance : length_measure;
  direction : Direction_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Linear_profile
  SUBTYPE OF (Open_profile);
  profile_length : Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Location_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Loop_slot_end_type;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Instanced_manufacturing_feature
  SUBTYPE OF (Instanced_feature);
  definition : Manufacturing_feature;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Machining_feature
   ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPOUND_FEATURE,
                        GEAR,
                        KNURL,
                        MARKING_FEATURE,
                        MULTI_AXIS_FEATURE,
                        OUTER_ROUND,
                        REVOLVED_FEATURE,
                        SPHERICAL_CAP,
                        THREAD))
  SUBTYPE OF (Manufacturing_feature);
  placement : Axis_placement_3d;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Path_feature_component
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CIRCULAR_PATH_FEATURE_COMPONENT,
                        GENERAL_PATH_FEATURE_COMPONENT,
                        LINEAR_PATH_FEATURE_COMPONENT))
  SUBTYPE OF (Shape_element);
  placement : Axis_placement;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Manufacturing_feature
   ABSTRACT SUPERTYPE OF (ONEOF (
                        MACHINING_FEATURE,
                        REPLICATE_FEATURE,
                        TRANSITION_FEATURE))
  SUBTYPE OF (Shape_feature_definition);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Manufacturing_feature_group;
  group_name : label;
  group_description : text;
  feature_groups : SET[1:?] OF manufacturing_group_select;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Marking_feature
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CATALOGUE_MARKING,
                        DEFINED_MARKING))
  SUBTYPE OF (Machining_feature);
  text : text;
  applied_to_shape : Shape_element;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Multi_axis_feature
  SUPERTYPE OF (ONEOF (
              BOSS,
              GENERAL_REMOVAL_VOLUME,
              HOLE,
              PLANAR_FACE,
              POCKET,
              PROFILE_FEATURE,
              PROTRUSION,
              RIB_TOP,
              ROUNDED_END,
              SLOT,
              STEP))
  SUBTYPE OF (Machining_feature);
  maximum_feature_limit : OPTIONAL Planar_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Ngon_profile
  SUBTYPE OF (Closed_profile);
  diameter : Numerical_item_with_unit;
  number_of_sides : Numerical_item_with_unit;
  corner_radius : OPTIONAL Numerical_item_with_unit;
  circumscribed_or_across_flat : BOOLEAN;  
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Open_profile
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERAL_OPEN_PROFILE,
                        LINEAR_PROFILE,
                        PARTIAL_CIRCULAR_PROFILE,
                        ROUNDED_U_PROFILE,
                        SQUARE_U_PROFILE,
                        TEE_PROFILE,
                        VEE_PROFILE))
  SUBTYPE OF (Profile);
  profile_limit : OPTIONAL Planar_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Open_slot
  SUBTYPE OF (Slot);
  course_of_travel : Path_feature_component;
  end_conditions : SET[2:2] OF Slot_end_type; 
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Open_slot_end_type
  SUBTYPE OF (Slot_end_type);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Outer_diameter
  SUBTYPE OF (Outer_round);
  feature_length : Numerical_item_with_unit;
  diameter : Numerical_item_with_unit;
  reduced_size : taper_select;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Outer_diameter_to_shoulder
  SUBTYPE OF (Outer_round);
  feature_length : Numerical_item_with_unit;
  diameter : Numerical_item_with_unit;
  v_shape_boundary : Vee_profile;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Outer_round
   ABSTRACT SUPERTYPE OF (ONEOF (
                        OUTER_DIAMETER,
                        OUTER_DIAMETER_TO_SHOULDER))
  SUBTYPE OF (Machining_feature);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Partial_area_definition;
  maximum_length : OPTIONAL Numerical_item_with_unit;
  effective_length : Numerical_item_with_unit;
  placement : Axis_placement;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Partial_circular_path_feature_component
  SUBTYPE OF (Circular_path_feature_component);
  sweep_angle : length_measure;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Partial_circular_profile
  SUBTYPE OF (Open_profile);
  sweep_angle : Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Partial_circular_shape_profile
  SUBTYPE OF (Shape_profile);
  open_boundary : Partial_circular_profile;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Path_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Planar_element
  SUBTYPE OF (Definitional_shape_element);
  normal : Direction_element;
  location : Location_element;
END_ENTITY;   
(* USED FROM (Machining_features_arm); *)
ENTITY Planar_face
  SUBTYPE OF (Multi_axis_feature);
  removal_boundary : Linear_profile;
  course_of_travel : Linear_path_feature_component;
  face_boundary : OPTIONAL Closed_profile;
  removal_direction : Direction_element;
  volume_not_removed : SET[0:?] OF volume_select;
  removal_depth : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Planar_pocket_bottom_condition
  SUBTYPE OF (Pocket_bottom_condition);
  floor_normal : Direction_element;
  floor_location : Location_element;
  floor_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Planar_profile_floor
  SUBTYPE OF (Profile_floor);
  floor : Planar_element;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Planar_rib_top_floor
  SUBTYPE OF (Rib_top_floor);
  floor_face : Planar_element;
  boundary : Closed_profile;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Planar_top_condition
  SUBTYPE OF (Boss_top_condition);
  top_normal : Direction_element;
  top_location : Location_element;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Pocket
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CUTOUT_FEATURE,
                        GENERAL_POCKET,
                        RECESS,
                        RECTANGULAR_CLOSED_POCKET,
                        RECTANGULAR_OPEN_POCKET))
  SUBTYPE OF (Multi_axis_feature);
  base_radius : Numerical_item_with_unit;
  change_in_boundardy : OPTIONAL LIST[1:?] OF angle_or_directed_taper;
  bottom_condition : pocket_bottom_condition_select;
  pocket_depth : Linear_path_feature_component;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Pocket_bottom_condition
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERAL_POCKET_BOTTOM_CONDITION,
                        PLANAR_POCKET_BOTTOM_CONDITION));
  start_or_end : BOOLEAN;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Profile
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CLOSED_PROFILE,
                        OPEN_PROFILE));
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Profile_feature
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERAL_OUTSIDE_PROFILE,
                        SHAPE_PROFILE))
  SUBTYPE OF (Multi_axis_feature);
  profile_swept_shape : Linear_path_feature_component;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Profile_floor
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERAL_PROFILE_FLOOR,
                        PLANAR_PROFILE_FLOOR));
  floor_radius : OPTIONAL Numerical_item_with_unit;
  start_or_end : BOOLEAN;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Protrusion
  SUBTYPE OF (Multi_axis_feature);
  shape_volume : SET[1:?] OF Definitional_shape_element;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Radiused_slot_end_type
  SUBTYPE OF (Slot_end_type);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Recess
  SUBTYPE OF (Pocket);
  SELF\Pocket.bottom_condition : Pocket_bottom_condition;
  volume_not_removed : SET[0:?] OF volume_select;
  fillet_boundary : Profile;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_boss
  SUBTYPE OF (Boss);
  rectangular_profile : Rectangular_closed_profile;
  change_in_boundary : OPTIONAL angle_or_directed_taper;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_closed_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  closed_boundary : Rectangular_closed_profile;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_closed_profile
  SUBTYPE OF (Closed_profile);
  profile_width : Numerical_item_with_unit;
  profile_length : Numerical_item_with_unit;
  corner_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_closed_shape_profile
  SUBTYPE OF (Shape_profile);
  closed_boundary : Rectangular_closed_profile;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_offset_pattern;
  offset_direction : Direction_element;
  offset_distance : Numerical_item_with_unit;
  column_index : INTEGER;
  row_index : INTEGER;
INVERSE
  relocated_base_feature_for : SET [1:?] OF Rectangular_pattern FOR relocated_base_feature;
END_ENTITY;   
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_omit_pattern;
  row_index : INTEGER;
  column_index : INTEGER;
INVERSE
  missing_base_feature_for : SET [1:?] OF Rectangular_pattern FOR missing_base_feature;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_open_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  open_boundary : Square_u_profile;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_open_shape_profile
  SUBTYPE OF (Shape_profile);
  open_boundary : Square_u_profile;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Rectangular_pattern
  SUBTYPE OF (Replicate_feature);
  relocated_base_feature : SET[0:?] of Rectangular_offset_pattern;
  missing_base_feature : SET[0:?] of Rectangular_omit_pattern;
  column_layout_direction : Direction_element;
  row_spacing : Numerical_item_with_unit;
  rows : INTEGER;
  row_layout_direction : Direction_element;
  columns : INTEGER;
  column_spacing : Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Replicate_base;
  base_feature : replicate_base_select;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Replicate_feature
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CIRCULAR_PATTERN,
                        GENERAL_PATTERN,
                        RECTANGULAR_PATTERN))
  SUBTYPE OF (Manufacturing_feature);
  placement : Axis_placement;
  replicate_feature_base : Replicate_base;
END_ENTITY;    
(* USED FROM (Machining_features_arm); *)
ENTITY Revolved_feature
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERAL_REVOLUTION,
                        GROOVE,
                        REVOLVED_FLAT,
                        REVOLVED_ROUND))
  SUBTYPE OF (Machining_feature);
  radius : Numerical_item_with_unit;
  material_side : Direction_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Revolved_flat
  SUBTYPE OF (Revolved_feature);
  flat_edge_shape : Linear_profile;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Revolved_round
  SUBTYPE OF (Revolved_feature);
  rounded_edge_shape : Partial_circular_profile;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Rib_top
  SUBTYPE OF (Multi_axis_feature);
  removal_direction : Direction;
  floor_condition : Rib_top_floor;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rib_top_floor
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERAL_RIB_TOP_FLOOR,
                        PLANAR_RIB_TOP_FLOOR));
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Round_hole
  SUBTYPE OF (Hole);
  hole_depth : Linear_path_feature_component;
  diameter : Circular_closed_profile;
  change_in_diameter : OPTIONAL taper_select;
  bottom_condition : hole_bottom_condition_select;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Rounded_end
  SUBTYPE OF (Multi_axis_feature);
  partial_circular_boundary : Partial_circular_profile;
  course_of_travel : Linear_path_feature_component;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Rounded_u_profile
  SUBTYPE OF (Open_profile);
  width : Numerical_item_with_unit;
  depth : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Second_chamfer_offset
  SUBTYPE OF (Second_chamfer_parameter);
  offset_amount : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Second_chamfer_parameter
  SUPERTYPE OF (ONEOF (
              CHAMFER_ANGLE,
              SECOND_CHAMFER_OFFSET));
  second_face : Face_shape_element;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Shape_profile
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CIRCULAR_CLOSED_SHAPE_PROFILE,
                        GENERAL_SHAPE_PROFILE,
                        PARTIAL_CIRCULAR_SHAPE_PROFILE,
                        RECTANGULAR_CLOSED_SHAPE_PROFILE,
                        RECTANGULAR_OPEN_SHAPE_PROFILE))
  SUBTYPE OF (Profile_feature);
  floor_condition : profile_select;
  removal_direction : Direction_element;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Slot
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CLOSED_SLOT,
                        OPEN_SLOT))
  SUBTYPE OF (Multi_axis_feature);
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Slot_end_type
   ABSTRACT SUPERTYPE OF (ONEOF (
                        FLAT_SLOT_END_TYPE,
                        OPEN_SLOT_END_TYPE,
                        RADIUSED_SLOT_END_TYPE,
                        WOODRUFF_SLOT_END_TYPE));
  first_or_second : BOOLEAN;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Spherical_cap
  SUBTYPE OF (Machining_feature);
  internal_angle : Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Spherical_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  radius : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Spur_gear
  SUBTYPE OF (Defined_gear);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Square_u_profile
  SUBTYPE OF (Open_profile);
  first_angle : Numerical_item_with_unit;
  second_angle : Numerical_item_with_unit;
  first_radius : OPTIONAL Numerical_item_with_unit;
  second_radius : OPTIONAL Numerical_item_with_unit;
  depth : Numerical_item_with_unit;
  width : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Step
  SUBTYPE OF (Multi_axis_feature);
  removal_boundary : Vee_profile;
  course_of_travel : Linear_path_feature_component;
  volume_not_removed : SET[0:?] OF Volume_select;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Straight_bevel_gear
  SUBTYPE OF (Bevel_gear);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Straight_knurl
  SUBTYPE OF (Turned_knurl);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Tee_profile
  SUBTYPE OF (Open_profile);
  first_angle : Numerical_item_with_unit;
  second_angle : Numerical_item_with_unit;
  first_offset : Numerical_item_with_unit;
  second_offset : Numerical_item_with_unit;
  depth : Numerical_item_with_unit;
  radius : OPTIONAL Numerical_item_with_unit;
  width : Numerical_item_with_unit;
  cross_bar_width : Numerical_item_with_unit;
  cross_bar_depth : Numerical_item_with_unit;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Thread
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CATALOGUE_THREAD,
                        DEFINED_THREAD))
  SUBTYPE OF (Machining_feature);
  partial_profile : Partial_area_definition;
  runout : OPTIONAL Thread_runout;
  fit_class : text;
  form : text;
  number_of_threads : OPTIONAL Numerical_item_with_unit;
  thread_hand : text;
  inner_or_outer_thread : BOOLEAN;
  qualifier : text;
  nominal_size : OPTIONAL Numerical_item_with_unit;
  applied_shape : Definitional_shape_element;
  fit_class_2 : OPTIONAL text;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Thread_runout;
  length_of_runout : Numerical_item_with_unit;
  pitch_or_dimension : BOOLEAN;
  included_or_extra : BOOLEAN;
END_ENTITY;  
(* USED FROM (Machining_features_arm); *)
ENTITY Through_bottom_condition;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Through_pocket_bottom_condition;
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Through_profile_floor;
END_ENTITY; 
(* USED FROM (Machining_features_arm); *)
ENTITY Transition_feature
  SUPERTYPE OF (ONEOF (
              CHAMFER,
              EDGE_ROUND,
              FILLET))
  SUBTYPE OF (Manufacturing_feature);
END_ENTITY;
(* USED FROM (Machining_features_arm); *)
ENTITY Turned_knurl
   ABSTRACT SUPERTYPE OF (ONEOF (
                        DIAGONAL_KNURL,
                        DIAMOND_KNURL,
                        STRAIGHT_KNURL))
  SUBTYPE OF (Knurl);
  nominal_diameter : Numerical_item_with_unit;
  diametrical_pitch : Numerical_item_with_unit;
  root_fillet : OPTIONAL Numerical_item_with_unit;
  number_of_teeth : OPTIONAL Numerical_item_with_unit;
  tooth_depth : OPTIONAL Numerical_item_with_unit;
  major_diameter : Numerical_item_with_unit;
END_ENTITY;   
(* USED FROM (Machining_features_arm); *)
ENTITY Vee_profile
  SUBTYPE OF (Open_profile);
  profile_radius : OPTIONAL Numerical_item_with_unit;
  profile_angle : Numerical_item_with_unit;
  tilt_angle : Numerical_item_with_unit;
  first_length : OPTIONAL Numerical_item_with_unit;
  second_length : OPTIONAL Numerical_item_with_unit;
END_ENTITY;    
(* USED FROM (Machining_features_arm); *)
ENTITY Woodruff_slot_end_type
  SUBTYPE OF (Slot_end_type);
  radius : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Bead_end_type
    ABSTRACT SUPERTYPE OF (ONEOF (
                        LINEAR_BEAD_END_TYPE,
                        OPEN_BEAD_END_TYPE,
                        RADIUSED_BEAD_END_TYPE))
  SUBTYPE OF (Shape_element);
   is_applied_to : starting_or_ending;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Bead_feature
   SUBTYPE OF (Process_feature_in_panel);
   base_radius : OPTIONAL Length_data_element;
   bead_profile : Open_profile_usage;
   end_condition : SET[2:2] OF Bead_end_type;
   sweep_path : Path_feature_component;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Closed_profile_usage
   SUBTYPE OF (Profile_usage);
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Compound_feature_in_panel
   SUBTYPE OF (Process_feature_in_panel);
   feature_type : STRING;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Compound_feature_in_panel_element
   SUBTYPE OF (Shape_element);
   element_placement : Geometric_placement_operation;
   feature : compound_in_panel_select;
   is_element_for : SET[2:?] OF Compound_feature_in_panel;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Compound_feature_in_panel_element_relationship
   SUBTYPE OF (Shape_element_relationship);
   SELF\Shape_element_relationship.relating : Compound_feature_in_panel_element;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
   SELF\Shape_element_relationship.related : Compound_feature_in_panel_element;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : COMPOUND_FEATURE_IN_PANEL_ELEMENT := SELF\Shape_element_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : COMPOUND_FEATURE_IN_PANEL_ELEMENT := SELF\Shape_element_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Directed_angle
   SUBTYPE OF (Shape_element);
   angle : Angle_data_element;
   angle_reference : angle_reference_enumeration;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Face_termination
   SUBTYPE OF (Joggle_termination);
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Form_feature_in_panel
   SUBTYPE OF (Process_feature_in_panel);
   base_boundary_defined_by : profile_or_angle_select;
   base_radius : Length_data_element;
   feature_type : form_feature_in_panel_type;
   target_boundary_defined_by : profile_or_angle_select;
   target_face : OPTIONAL general_end_select;
   target_radius : Angle_data_element;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Hole_feature_in_panel
   SUBTYPE OF (Process_feature_in_panel);
   hole_profile : Closed_profile_usage;
   hole_type : OPTIONAL STRING;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Joggle_feature
   SUBTYPE OF (Process_feature_in_panel);
   base_radius_1 : OPTIONAL Length_data_element;
   base_radius_2 : OPTIONAL Length_data_element;
   defining_path : Linear_path_feature_component;
   direction_angle_1 : Angle_data_element;
   direction_angle_2 : Angle_data_element;
   height : OPTIONAL Length_data_element;
   slope_angle_1 : Angle_data_element;
   slope_angle_2 : Angle_data_element;
   termination : Joggle_termination;
   top_radius_1 : OPTIONAL Length_data_element;
   top_radius_2 : OPTIONAL Length_data_element;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Joggle_termination
    ABSTRACT SUPERTYPE OF (ONEOF (
                        FACE_TERMINATION,
                        VALUE_TERMINATION))
  SUBTYPE OF (Shape_element);
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Linear_bead_end_type
   SUBTYPE OF (Bead_end_type);
   end_length : Length_data_element;
   end_shape : straight_or_tapered;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Locator_feature
   SUBTYPE OF (Process_feature_in_panel);
   base_radius : OPTIONAL Length_data_element;
   diameter : Length_data_element;
   tip_angle : Angle_data_element;
   tip_radius : OPTIONAL Length_data_element;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Open_bead_end_type
   SUBTYPE OF (Bead_end_type);
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Open_profile_usage
   SUBTYPE OF (Profile_usage);
   profile_limit : OPTIONAL Plane;
   SELF\Profile_usage.used_profile : Open_profile;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Panel_hole_with_barring
   SUBTYPE OF (Hole_feature_in_panel);
   angle_defined_by : Directed_angle;
   barring_profile : Closed_profile_usage;
   base_radius : OPTIONAL Length_data_element;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Process_feature_in_panel
   SUBTYPE OF (Shape_feature_definition);
   punch_direction : Direction;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Profile_usage
    ABSTRACT SUPERTYPE OF (ONEOF (
                        CLOSED_PROFILE_USAGE,
                        OPEN_PROFILE_USAGE))
  SUBTYPE OF (Shape_element_relationship);
   profile_placement : Geometric_placement_operation;
   used_profile : Profile;
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Radiused_bead_end_type
   SUBTYPE OF (Bead_end_type);
 END_ENTITY;
(* USED FROM (Form_feature_in_panel_arm); *)
ENTITY Value_termination
   SUBTYPE OF (Joggle_termination);
   depth : Length_data_element;
   angle : Angle_data_element;
 END_ENTITY;
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Binary_assembly_constraint
   ABSTRACT SUPERTYPE OF (ONEOF (
                        PARALLEL_ASSEMBLY_CONSTRAINT,
                        DIMENSIONED_SURFACE_DISTANCE_ASSEMBLY_CONSTRAINT,
                        DIMENSIONED_ANGLE_ASSEMBLY_CONSTRAINT,
                        PERPENDICULAR_ASSEMBLY_CONSTRAINT,
                        INCIDENCE_ASSEMBLY_CONSTRAINT,
                        COAXIAL_ASSEMBLY_CONSTRAINT,
                        TANGENT_ASSEMBLY_CONSTRAINT))
  SUBTYPE OF (Explicit_constraint,
            Geometric_model_relationship_with_transformation);
SELF\Representation_relationship.rep_1:  
Representative_geometric_model;
SELF\Representation_relationship.rep_2: 
Representative_geometric_model;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.constrained_elements)=1) AND
     (SIZEOF(SELF\Explicit_constraint.reference_elements)=1);
END_ENTITY;-- Binary_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Coaxial_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Coaxial_constraint);
END_ENTITY;-- Coaxial_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Dimensioned_angle_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Dimensioned_angle_constraint);
END_ENTITY;-- Dimensioned_angle_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY  Dimensioned_parallel_assembly_constraint
  SUBTYPE OF (Parallel_assembly_constraint,
              Dimensioned_parallel_constraint);
END_ENTITY;-- Dimensioned_parallel_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Dimensioned_surface_distance_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Dimensioned_surface_distance_constraint);
END_ENTITY;-- Dimensioned_surface_distance_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Fixed_constituent_assembly_constraint
SUBTYPE OF (Fixed_element_geometric_constraint);
  fixed_constituent : Representative_geometric_model;
WHERE
  WR1: SIZEOF(SELF\explicit_constraint.constrained_elements) = 1;
END_ENTITY;-- fixed_constituent_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Incidence_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Incidence_geometric_constraint);
END_ENTITY;-- Incidence_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Parallel_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Parallel_constraint);
END_ENTITY;-- Parallel_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Perpendicular_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Perpendicular_geometric_constraint);
END_ENTITY;-- Perpendicular_assembly_constraint
(* USED FROM (Assembly_constraints_arm); *)
ENTITY Tangent_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Tangent_constraint);
END_ENTITY;-- Tangent_assembly_constraint
(* USED FROM (Kinematic_analysis_control_and_result_arm); *)
ENTITY Kinematic_control;
  controlled_mechanism : Mechanism_representation; 
  contained_kinematic_programs : Kinematic_analysis_definition;
END_ENTITY;
(* USED FROM (Kinematic_analysis_control_and_result_arm); *)
ENTITY Prescribed_path
  SUBTYPE OF (Link_motion_representation_along_path);
  controlling_joints : OPTIONAL SET [1 : 6] OF Kinematic_joint;
END_ENTITY;
(* USED FROM (Kinematic_analysis_control_and_result_arm); *)
ENTITY Kinematic_analysis_result;
  analysed_mechanism : Mechanism_representation; 
  result : Kinematic_result;
(*  
WHERE
WR1: ('KINEMATIC_ANALYSIS_CONTROL_AND_RESULT_SCHEMA.RESULTING_PATH' IN TYPEOF (result))
     XOR
     (SIZEOF (QUERY (result <* contained_kinematic_results |
       (('KINEMATIC_ANALYSIS_CONTROL_AND_RESULT_SCHEMA.'+
         'INTERPOLATED_CONFIGURATION_SEQUENCE' IN TYPEOF (result))
              AND
       (SIZEOF (QUERY (sequence <* result\
                interpolated_configuration_sequence.interpolation |
                (sequence.interpolation <> undefined ))) > 0)))) = 0);
*)                
END_ENTITY;
(* USED FROM (Kinematic_analysis_control_and_result_arm); *)
ENTITY Kinematic_analysis_consistency;
  control : Kinematic_control;
  result  : Kinematic_analysis_result;
WHERE
  WR1: control.controlled_mechanism :=: result.analysed_mechanism;
END_ENTITY;
(* USED FROM (Kinematic_analysis_control_and_result_arm); *)
ENTITY Resulting_path
  SUBTYPE OF (Link_motion_representation_along_path);
  controlling_joints : SET [1 : ?] OF Kinematic_joint;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Resource_requirement_type; -- for descriptive_specification
  name : label;
  description : text;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_state_relationship
  SUBTYPE OF (Part_definition_relationship);
  direction : OPTIONAL process_state_relationship_direction;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_operation_definition;
  id : STRING;
  name : OPTIONAL label;
  process_type : STRING;
  description : OPTIONAL text;
  version_id : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_operation_definition_relationship;
  relation_type : STRING;
  description : text;
  relating : process_operation_definition;
  related : process_operation_definition;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_operation_input_or_output;
  role : STRING;
  description : OPTIONAL text;
  operation : process_operation_occurrence;
  element : process_operation_input_or_output_select;
--  placement : OPTIONAL transformation;
  concerned_shape : SET [0:?] OF Shape_element;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_operation_occurrence;
  id : STRING;
  plan : process_plan;
--  is_defined_in : OPTIONAL cartesian_coordinate_space;
  operation_definition : Process_operation_definition;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_operation_occurrence_relationship;
  relation_type : STRING;
  description : OPTIONAL text;
  relating : Process_operation_occurrence;
  related : Process_operation_occurrence;
  waiting_time : OPTIONAL duration;
  cycle_time : OPTIONAL duration;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_operation_resource_assignment;
  reference_tool : BOOLEAN;
  operation : Process_operation_occurrence;
  reason : OPTIONAL STRING;
  resource_definition : resource_definition_select;
--  placement : OPTIONAL transformation;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_plan;
  plan_id : identifier;
  name : OPTIONAL label;
  description : OPTIONAL text;
  version_id : OPTIONAL identifier;
  produced_output : OPTIONAL SET [1:?] OF Part_version;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Process_plan_relationship;
  relation_type : STRING;
  description : OPTIONAL text;
  relating : Process_plan;
  related : Process_plan;
END_ENTITY;
(* USED FROM (Process_plan_arm); *)
ENTITY Same_time_machining_relationship
  SUBTYPE OF (Part_occurrence_relationship);  -- was item_instance_relationship
--  description : OPTIONAL text;
--  placement : OPTIONAL transformation_select;
END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Area_with_outer_boundary
    SUBTYPE OF (Primitive_2d);
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Boolean_result_2d 	 
	SUBTYPE OF (Detailed_geometric_model_element); 	 
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Csg_2d_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET [1:?] OF primitive_or_boolean_result_2d;   
  WHERE
    WR1: SELF\Geometric_model.context_of_items\Geometric_coordinate_space.dimension_count = 2;
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Curve_style_parameters
  	 ABSTRACT SUPERTYPE OF (ONEOF (
                        CLOSED_CURVE_STYLE_PARAMETERS,
                        CURVE_STYLE_PARAMETERS_WITH_ENDS));
      name              : STRING;
      corner_style      : extend_or_chord_2_extend_or_truncate_or_round;
      curve_width       : Length_data_element;
      width_uncertainty : OPTIONAL Length_data_element;
    UNIQUE
      UR1 : name;
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Closed_curve_style_parameters
    SUBTYPE OF (Curve_style_parameters);
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Curve_style_parameters_with_ends
    SUBTYPE OF (Curve_style_parameters);
      end_extension     : extend_or_truncate;
      end_style         : square_or_round;
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Path_area_with_parameters
    SUBTYPE OF (Detailed_geometric_model_element);
    centreline : Curve;
    parameters : Curve_style_parameters;
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
  ENTITY Primitive_2d_with_inner_boundary
    SUBTYPE OF (Primitive_2d);
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
 ENTITY Single_area_csg_2d_model
    SUBTYPE OF (Csg_2d_model);
      SELF\Representation.items : SET [1:1] OF Primitive_2d;    
 END_ENTITY;
(* USED FROM (Constructive_solid_geometry_2d_arm); *)
 ENTITY Single_boundary_csg_2d_model
    SUBTYPE OF (Single_area_csg_2d_model);
  END_ENTITY;
(* USED FROM (Product_as_individual_assembly_and_test_arm); *)
ENTITY Product_as_individual_assembly
  SUBTYPE OF (Assembly_component_relationship);
  
  SELF\Product_occurrence_definition_relationship.relating_view: Product_as_individual_view;
  SELF\Product_occurrence_definition_relationship.related_view: Product_as_individual_view;
  is_realization_of : Product_occurrence;
WHERE
  WR1: NOT(EXISTS(SELF\Assembly_component_relationship.quantity));
END_ENTITY; 
(* USED FROM (Product_as_individual_assembly_and_test_arm); *)
ENTITY Product_as_individual_test_result
  SUBTYPE OF (Product_as_individual_view);
END_ENTITY; 
(* USED FROM (Product_as_individual_assembly_and_test_arm); *)
ENTITY Applied_independent_test_result_property
  SUBTYPE OF (Applied_independent_property);
  SELF\Assigned_property.described_element : Product_as_individual_test_result;
END_ENTITY; 
(* USED FROM (Product_as_individual_assembly_and_test_arm); *)
ENTITY Applied_test_activity
  SUBTYPE OF (Applied_activity_assignment);
 SELF\Applied_activity_assignment.items : SET [1:?] OF Applied_independent_test_result_property;
DERIVE  
  SELF\Applied_activity_assignment.role : STRING := 'test activity';
END_ENTITY;
(* USED FROM (Product_as_individual_assembly_and_test_arm); *)
ENTITY Applied_process_operation_occurrence;
  items : SET [1:?] OF Applied_independent_test_result_property;
  source : Process_operation_occurrence;
END_ENTITY;
(* USED FROM (Product_as_individual_assembly_and_test_arm); *)
ENTITY Evaluated_characteristic_of_product_as_individual_test_result
  SUBTYPE OF (Evaluated_characteristic);
WHERE      
   WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.APPLIED_INDEPENDENT_TEST_RESULT_PROPERTY' IN
        TYPEOF(SELF\Evaluated_characteristic.product_characterization_data.definition);
END_ENTITY;
(* USED FROM (Characterized_representation_arm); *)
ENTITY Characterized_representation 
  SUBTYPE OF (Representation, Characterizable_object);
END_ENTITY;
(* USED FROM (Characterized_representation_arm); *)
ENTITY Characterized_item_within_representation
  SUBTYPE OF (Characterizable_object);
  item : representation_item;
  rep : representation;
UNIQUE
  UR1: item, rep;
WHERE
  WR1: rep IN using_representations(item);
END_ENTITY;
(* USED FROM (Characterized_representation_arm); *)
ENTITY Characterized_chain_based_item_within_representation
  SUBTYPE OF (Characterized_item_within_representation);
  nodes : LIST [2:?] OF UNIQUE representation;
  undirected_link : LIST [1:?] OF UNIQUE chained_representation_link;
END_ENTITY;
(* USED FROM (Explicit_constraints_arm); *)
ENTITY Simultaneous_constraint_group
  SUBTYPE OF (Variational_representation_item);
  constraint_group : SET[2:?] OF constraint_group_member;
END_ENTITY;
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Chemical_element 
    SUBTYPE OF (Substance); 
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Physical_particle
    SUBTYPE OF (Substance);
  END_ENTITY;
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Raw_material_definition_relationship
    SUBTYPE OF (View_definition_usage);
   	  SELF\View_definition_relationship.relating_view : Part_view_definition;  -- application : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\View_definition_relationship.related_view : Substance_view_definition;  -- definition : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      application : PART_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      definition : SUBSTANCE_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
  WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance
    SUPERTYPE OF (ONEOF (
              CHEMICAL_ELEMENT,
              CHEMICAL_COMPOUND,
              PHYSICAL_PARTICLE))
  SUBTYPE OF (Product);    
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance_composition_relationship 
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.related_view : Substance_view_definition;  -- constituent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\View_definition_relationship.relating_view : Substance_view_definition;  -- whole : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      composition_basis                                                  : Substance_composition_basis;

      determination_method                                               : STRING; 

      amount 															 : Value_with_unit; 
    DERIVE
      constituent : SUBSTANCE_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      whole : SUBSTANCE_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
 WHERE
      WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_UNIT' IN TYPEOF(amount.unit);      
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance_version 
    SUBTYPE OF (Product_version); 
    SELF\Product_version.of_product : Substance; 
  END_ENTITY; 
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Substance_view_definition 
    SUBTYPE OF (Product_view_definition); 
    SELF\Product_view_definition.defined_version : Substance_version; 
  END_ENTITY; 
(* USED FROM (Composite_material_aspects_arm); *)
  ENTITY Composite_material_identification
    SUBTYPE OF (Material_identification);

      (* removed : SELF\Material_identification.composite_material_name :  STRING *)
    DERIVE
      composite_material_name : STRING := SELF\Material_identification.material_name;  -- MATERIAL_NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Compound_shape_representation_arm); *)
  ENTITY Compound_shape_representation
    SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Constructive_solid_geometry_3d_arm); *)
ENTITY Csg_model
  SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Curve_swept_solid_arm); *)
ENTITY Curve_swept_solid
   SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY General_tolerance_table;
  tolerance_type : STRING;
INVERSE
  cell : SET[1:?] OF Tolerance_table_cell FOR tolerance_table;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY General_tolerances
  SUBTYPE OF (Default_shape_property);
  table_definition : general_tolerance_table_select;
  tolerance_class : STRING;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Number_of_decimal_places;
   number_of_places_after_decimal_separator : INTEGER;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Plus_minus_toleranced_datum;
  tolerance_value : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Significant_number_of_digits;
  number_of_digits : INTEGER;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Tolerance_table_cell;
  cell_value : OPTIONAL cell_entry_select;
  description : STRING;
  limit : limit_select;
  tolerance_class : OPTIONAL STRING;
  tolerance_table : General_tolerance_table;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Upper_lower_limit;
  upper_limit : Numerical_item_with_unit;
  lower_limit : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Default_tolerance_arm); *)
ENTITY Upper_lower_toleranced_datum;
  lower_tolerance_value : Numerical_item_with_unit;
  upper_tolerance_value : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Design_product_data_management_arm); *)
ENTITY Part_with_additional_categories
  SUBTYPE OF (Part);
  categories : SET[1:?] OF part_category;
END_ENTITY;
(* USED FROM (Design_product_data_management_arm); *)
ENTITY Document_with_additional_categories
  SUBTYPE OF (Document);
  categories : SET[1:?] OF document_category;
END_ENTITY;
(* USED FROM (Design_product_data_management_arm); *)
ENTITY Retention_period;
  retention_purpose : OPTIONAL STRING;
  earliest_end_definition : OPTIONAL period_or_date_or_event_select;
  latest_end_definition : OPTIONAL period_or_date_or_event_select;
  start_definition : date_or_event;
  is_applied_to : SET[1:?] OF time_interval_item;
WHERE
  WR1: EXISTS(earliest_end_definition) OR EXISTS(latest_end_definition);
END_ENTITY;
(* USED FROM (Dimension_and_tolerance_callouts_arm); *)
  ENTITY Associated_dimension_text
    SUBTYPE OF (Dimension_text);
      is_displaying : Geometric_dimension;
  END_ENTITY;
(* USED FROM (Dimension_and_tolerance_callouts_arm); *)
  ENTITY Dimension_curve_terminator_to_projection_curve_associativity
    SUBTYPE OF(Annotation_occurrence_associativity);
      SELF\Annotation_occurrence_associativity.relating_element : Dimension_curve_terminator;
      SELF\Annotation_occurrence_associativity.related_element  : Projection_curve;
  END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Angular_location
  SUBTYPE OF (Dimensional_location);
  angle_selection : angle_relator;
  orientation : OPTIONAL Axis_placement;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Angular_size
  SUBTYPE OF (Dimensional_size);
  full : BOOLEAN;
  angle_selection : angle_relator;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Curved_distance
  SUBTYPE OF (Dimensional_location);
  used_path : Measurement_path;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Curved_size
  SUBTYPE OF (Dimensional_size);
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Diameter_size
   SUBTYPE OF (Dimensional_size);
   geometry_type : diameter_type;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Dimensional_size
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ANGULAR_SIZE,
                        CURVED_SIZE,
                        DIAMETER_SIZE,
                        EDGE_OF_UNDEFINED_SHAPE_SIZE,
                        MACHINING_FEATURE_SIZE,
                        RADIAL_SIZE,
                        THICKNESS_SIZE))
  SUBTYPE OF (Geometric_dimension);
  is_applied_to : dimension_target;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Dimension_value_with_limitation;
  defined_by : limitation_definition_select;
  limited_value : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Geometric_dimension
   ABSTRACT SUPERTYPE OF (ONEOF (
                        DIMENSIONAL_LOCATION,
                        DIMENSIONAL_SIZE));
  id : STRING;
  dimension_value : dimension_value_select;
  notes : SET[0:?] OF STRING;
  theoretical_exact : BOOLEAN;
  auxiliary : BOOLEAN;
  tolerance_principle : tolerance_principle_type;
  modifiers : LIST [0:?] of geometric_dimension_modifier;
  unit_length : OPTIONAL Length_data_element;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Limits_and_fits;
  deviation : STRING;
  fitting_type : OPTIONAL STRING;
  grade : STRING;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Linear_distance
  SUBTYPE OF (Dimensional_location);
  orientation : OPTIONAL Axis_placement;
  diameter_qualifier : OPTIONAL diameter_qualifier_enumeration;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Dimensional_location
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ANGULAR_LOCATION,
                        CURVED_DISTANCE,
                        LINEAR_DISTANCE))
  SUBTYPE OF (Geometric_dimension);
  description : OPTIONAL STRING;
  directed : OPTIONAL BOOLEAN;
  origin : dimension_target;
  target : dimension_target;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Edge_of_undefined_shape_size
  SUBTYPE OF (Dimensional_size);
  orientation : undefined_edge_shape_enumeration_direction;
  SELF\Dimensional_size.is_applied_to : edge_of_undefined_shape_size_element;
  SELF\Geometric_dimension.dimension_value : Tolerance_range;
UNIQUE
  UR1 : is_applied_to, orientation;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Machining_feature_size
  SUBTYPE OF (Dimensional_size);
  considered_attribute: STRING;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Measurement_path;
  defined_by : Curve;
  defined_in : Geometric_coordinate_space;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Plus_minus_bounds;
  lower_bound : Value_with_unit;
  upper_bound         : Value_with_unit;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Radial_size
   SUBTYPE OF (Dimensional_size);
   radius_type : OPTIONAL adjoining_or_centred;
   geometry_type : radial_type;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Thickness_size
  SUBTYPE OF (Dimensional_size);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;
(* USED FROM (Dimension_tolerance_arm); *)
ENTITY Tolerance_range;
  lower_range : Numerical_item_with_unit;
  upper_range : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Camera_image_2d_with_scale
    SUBTYPE OF (Detailed_geometric_model_element);
      is_displaying : presented_model_select;
      source        : Camera_model_d2;
      target        : Planar_box;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Camera_model_d2
    SUBTYPE OF (Detailed_geometric_model_element);
      view_window          : Planar_box;
      view_window_clipping : BOOLEAN;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Draughting_title;
    contents : STRING;
    items    : SET [1:?] OF draughting_titled_item;
    language : STRING;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_definition; 
    drawing_number : STRING;
    drawing_type   : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing
    SUBTYPE OF (Presentation_set);
      revision_identifier : STRING;
      drawing_identifier  : Drawing_definition;
      intended_scale      : OPTIONAL STRING;
      drawing_specification : SET[0:?] OF STRING;
    UNIQUE
      UR1: revision_identifier, drawing_identifier;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_sequence; 
      predecessor : Drawing;
      successor   : Drawing;
    WHERE
      WR1: predecessor :<>: successor;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_sheet
    SUBTYPE OF (View_area);
      revision_identifier : STRING;
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_sheet_layout
    SUBTYPE OF (General_symbol);
  END_ENTITY;
(* USED FROM (Drawing_definition_arm); *)
  ENTITY Drawing_sheet_sequence 
    SUBTYPE OF (View_area_relationship);
      SELF\View_area_relationship.relating : Drawing_sheet;
      SELF\View_area_relationship.related  : Drawing_sheet;
  WHERE
    WR1: SELF\View_area_relationship.relating :<>: SELF\View_area_relationship.related;
  END_ENTITY;
(* USED FROM (Elementary_boundary_representation_arm); *)
  ENTITY Elementary_brep_shape_representation
	SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (External_currency_arm); *)
  ENTITY External_currency
    SUBTYPE OF (Currency, External_context_dependent_unit);
  END_ENTITY;
(* USED FROM (External_representation_item_arm); *)
  ENTITY External_representation_item
    SUBTYPE OF (Representation_item);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;
(* USED FROM (External_representation_item_arm); *)
  ENTITY External_string_representation_item
    SUBTYPE OF (External_representation_item);
  END_ENTITY;
(* USED FROM (External_representation_item_arm); *)
  ENTITY Externally_defined_representation
    SUBTYPE OF (Representation);
    SELF\Representation.items : SET [1:?] OF External_representation_item;
    external_source : External_source;
  END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Affected_plane_tolerance_zone
   SUBTYPE OF (Directed_or_oriented_tolerance_zone);
   affected_plane : Axis_placement_shape_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY All_around_shape_element
   SUBTYPE OF (Continuous_shape_element);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY All_around_shape_element_along_collection_plane
   SUBTYPE OF (All_around_shape_element);
   base : Datum_system;
   orientation : collection_plane_orientation;  
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Angularity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Axis_placement_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Axis_placement := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Between_shape_element
   SUBTYPE OF (Continuous_shape_element);
   start_features : SET[1:?] OF Definitional_shape_element;
   end_features : SET[1:?] OF Definitional_shape_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Circular_runout_tolerance
   SUBTYPE OF (Geometric_tolerance);
   angle : OPTIONAL REAL;
   datum_system : Datum_system;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Coaxiality_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Concentricity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Contacting_feature
   SUBTYPE OF (Non_definitional_shape_element);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Continuous_shape_element
   SUPERTYPE OF (ONEOF (
              BETWEEN_SHAPE_ELEMENT,
              ALL_AROUND_SHAPE_ELEMENT))
  SUBTYPE OF (Composite_shape_element);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Cylindricity_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum
   SUBTYPE OF (Shape_element);
   identification : identifier;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_feature
   SUPERTYPE OF (ONEOF (
              DIMENSIONAL_LOCATION_WITH_DATUM_FEATURE,
              DIMENSIONAL_SIZE_WITH_DATUM_FEATURE))
  SUBTYPE OF (Definitional_shape_element);
   of_datum : Datum;
UNIQUE
   UR1: of_datum;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_reference_compartment
   SUBTYPE OF (General_datum_reference);
   point_situation_feature : OPTIONAL Point_shape_element;
   plane_situation_feature : OPTIONAL Plane_shape_element;
   straight_line_situation_feature : OPTIONAL Axis_placement_shape_element;
INVERSE
   owner : Datum_system FOR constituents;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_reference_element
   SUBTYPE OF (General_datum_reference);
DERIVE
   usage : General_datum_reference := sts_get_general_datum_reference(SELF);
WHERE
   WR1: SELF <> usage;
   WR2: EXISTS(usage);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_reference_modifier_with_value;
   modifier_type : datum_reference_modifier_type;
   modifier_value : Length_data_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_system
   SUBTYPE OF (Non_definitional_shape_element);
   constituents : LIST[1:3] OF UNIQUE Datum_reference_compartment;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_system_with_associated_model_coordinate_system
   SUBTYPE OF (Axis_placement_shape_element, Datum_system);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Datum_target
    ABSTRACT SUPERTYPE OF (ONEOF (
                        PLACED_TARGET,
                        TARGET_AREA,
                        TARGET_CURVE))
  SUBTYPE OF (Shape_element);
   target_id : STRING;
   movement_direction : OPTIONAL Direction;
   of_datum : Datum;
   target_feature : OPTIONAL Shape_element;
UNIQUE
   UR1: of_datum, target_id;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Dimensional_location_with_datum_feature
   SUBTYPE OF (Datum_feature, Dimensional_location);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Dimensional_size_with_datum_feature
   SUBTYPE OF (Datum_feature, Dimensional_size);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Directed_or_oriented_tolerance_zone
   ABSTRACT SUPERTYPE OF (ONEOF (
                        TOLERANCE_ZONE_WITH_DATUM,
                        AFFECTED_PLANE_TOLERANCE_ZONE))
  SUBTYPE OF (Tolerance_zone);
   SELF\Tolerance_zone.zone_for : SET[1:?] OF directed_or_oriented_geometric_tolerance_select;
END_ENTITY;  
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Directed_tolerance_zone
  SUBTYPE OF (Tolerance_zone_with_datum);
  direction : directed_tolerance_zone_type;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Flatness_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY General_datum_reference
    ABSTRACT SUPERTYPE OF (ONEOF (
                        DATUM_REFERENCE_COMPARTMENT,
                        DATUM_REFERENCE_ELEMENT))
  SUBTYPE OF (Non_definitional_shape_element);
   base : datum_or_common_datum;
   modifiers : OPTIONAL SET[1:?] OF datum_reference_modifier;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Geometric_tolerance
    ABSTRACT SUPERTYPE OF (ONEOF (
                        ANGULARITY_TOLERANCE,
                        CIRCULAR_RUNOUT_TOLERANCE,
                        COAXIALITY_TOLERANCE,
                        CONCENTRICITY_TOLERANCE,
                        CYLINDRICITY_TOLERANCE,
                        FLATNESS_TOLERANCE,
                        LINE_PROFILE_TOLERANCE,
                        PARALLELISM_TOLERANCE,
                        PERPENDICULARITY_TOLERANCE,
                        POSITION_TOLERANCE,
                        ROUNDNESS_TOLERANCE,
                        STRAIGHTNESS_TOLERANCE,
                        SURFACE_PROFILE_TOLERANCE,
                        SYMMETRY_TOLERANCE,
                        TOTAL_RUNOUT_TOLERANCE));
   id : OPTIONAL identifier;
   name : OPTIONAL label;
   applied_to : geometric_tolerance_target;
   modifiers : SET[1:?] OF geometric_tolerance_modifier;
   qualifying_note : OPTIONAL STRING;
   first_unit_size : OPTIONAL Length_data_element;
   area_unit_type : OPTIONAL area_unit_type;
   second_unit_size : OPTIONAL Length_data_element;
   tolerance_value : Value_with_unit;
   unequally_disposed_tolerance_zone_displacement : OPTIONAL Length_data_element;
WHERE
   WR1: (NOT (EXISTS(first_unit_size))) OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE' IN TYPEOF(first_unit_size.value_component));
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Geometric_tolerance_relationship;
   relation_type : STRING;
   relating : Geometric_tolerance;
   related : Geometric_tolerance;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Line_profile_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Non_uniform_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Parallelism_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Perpendicularity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Placed_target
    ABSTRACT SUPERTYPE OF (ONEOF (
                        TARGET_CIRCLE,
                        TARGET_CIRCULAR_CURVE,
                        TARGET_POINT,
                        TARGET_RECTANGLE,
                        TARGET_STRAIGHT_LINE))
  SUBTYPE OF (Datum_target);
   defined_in : Geometric_coordinate_space;
   parameter_reference : Axis_placement;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Plane_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Plane := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Point_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Point := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Position_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Projected_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
   projection_end : Shape_element;
   projection_length : Length_data_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Projected_zone_definition_with_offset
   SUBTYPE OF (Projected_zone_definition);
   offset : Length_data_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Roundness_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Oriented_tolerance_zone
  SUBTYPE OF (Tolerance_zone_with_datum);
  orientation : oriented_tolerance_zone_type;
  angle : OPTIONAL Angle_data_element;
WHERE
  WR1 : (orientation <> oriented_tolerance_zone_type.angular) XOR EXISTS(angle);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Runout_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
   angle : Angle_data_element;
   orientation_defining_relationship : OPTIONAL Shape_element_relationship;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Straightness_tolerance
   SUBTYPE OF (Geometric_tolerance);
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Surface_profile_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Symmetry_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_area
   SUBTYPE OF (Datum_target);
   is_defined_by : Shape_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_circle
   SUBTYPE OF (Placed_target);
   diameter : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_circular_curve
   SUBTYPE OF (Placed_target);
   diameter : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_curve
   SUBTYPE OF (Datum_target);
   is_defined_by : Shape_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_point
   SUBTYPE OF (Placed_target);
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_rectangle
   SUBTYPE OF (Placed_target);
   target_length : Numerical_item_with_unit;
   target_width : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Target_straight_line
   SUBTYPE OF (Placed_target);
   target_length : Numerical_item_with_unit;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Tolerance_zone
   SUBTYPE OF (Shape_element);
   form_type : tolerance_zone_type;
   zone_for : SET[1:?] OF tolerance_zone_target;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Tolerance_zone_with_datum
  SUPERTYPE OF (ONEOF (
              DIRECTED_TOLERANCE_ZONE,
              ORIENTED_TOLERANCE_ZONE))
  SUBTYPE OF (Directed_or_oriented_tolerance_zone);
  datum_reference : Datum_system;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Tolerance_zone_definition
   SUPERTYPE OF (ONEOF (
              PROJECTED_ZONE_DEFINITION,
              NON_UNIFORM_ZONE_DEFINITION,
              RUNOUT_ZONE_DEFINITION));
   zone : Tolerance_zone;
   boundaries : SET[0:?] OF Shape_element;
END_ENTITY;
(* USED FROM (Geometric_tolerance_arm); *)
ENTITY Total_runout_tolerance
   SUBTYPE OF (Geometric_tolerance);
   angle : Angle_data_element;
   datum_system : Datum_system;
END_ENTITY;
(* USED FROM (Geometric_validation_property_representation_arm); *)
ENTITY Geometric_validation_property;
  property_representation: Representation;
  property_value  : point_or_measure;
  validated_model : Geometric_model;
WHERE
WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERICAL_REPRESENTATION_CONTEXT' IN TYPEOF(property_representation\Representation.context_of_items) ;
WR2: property_representation.name IN ['centroid', 'volume', 'surface area'];
WR3: property_value in property_representation\Representation.items;
END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Celsius_temperature_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Inertia_characteristics_arm); *)
ENTITY Inertia_matrix_item
SUBTYPE OF (Representation_item);
  inertia_values : ARRAY[1:6] OF REAL;
  common_unit: Unit;
END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Conductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Manifold_subsurface_arm); *)
  ENTITY Manifold_subsurface_model
    SUBTYPE OF (Geometric_model);
      parent_surface : open_shell_or_subsurface;
    SELF\Representation.items : SET [1:?] OF
        manifold_subsurface_shape_representation_item;
    WHERE
      WR1 : SELF :<>: parent_surface;
      WR2 : SELF\Geometric_model.context_of_items :=: parent_surface\Geometric_model.context_of_items;
  END_ENTITY;
(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
  ENTITY Mechanical_design_and_draughting_relationship
    SUBTYPE OF(Definitional_representation_relationship); 
      SELF\representation_relationship.rep_1 : mechanical_design_and_draughting_relationship_select; 
      SELF\representation_relationship.rep_2 : mechanical_design_and_draughting_relationship_select; 
    WHERE    
      WR1: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'DRAUGHTING_MODEL' IN TYPEOF(rep_2)) OR 
        (SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'DRAUGHTING_MODEL', 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
      WR2: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_REPRESENTATION_STYLED_MODEL' IN TYPEOF(rep_2)) 
        OR (SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_REPRESENTATION_STYLED_MODEL', 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
      WR3: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_DESIGN_SHADED_STYLED_MODEL' IN TYPEOF(rep_2)) 
        OR (SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'MECHANICAL_DESIGN_SHADED_STYLED_MODEL',
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
  END_ENTITY;  
(* USED FROM (Mechanical_design_presentation_representation_with_draughting_arm); *)
  ENTITY Mechanical_design_presentation_representation_with_draughting
    SUBTYPE OF (Styled_model); 
      SELF\Representation.items : SET [1:?] OF mdprwd_element_select; 
    WHERE 
      WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 3;
  END_ENTITY; 
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Extruded_solid_with_draft_angle
    SUBTYPE OF (Extruded_solid_with_trim_conditions);
      draft_angle : plane_angle_measure;
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Electric_charge_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Extruded_solid_with_trim_conditions
    SUPERTYPE OF (ONEOF (
              EXTRUDED_SOLID_WITH_DRAFT_ANGLE,
              EXTRUDED_SOLID_WITH_MULTIPLE_DRAFT_ANGLES))
  SUBTYPE OF (Extruded_solid);
      start_condition        : trim_select;
      end_condition          : trim_select;
      start_condition_intent : trim_intent; 
      end_condition_intent   : trim_intent; 
  END_ENTITY;
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Solid_of_revolution_with_trim_conditions
    SUBTYPE OF (Solid_of_revolution);
      start_condition : trim_select;
      end_condition   : trim_select;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Composite_assembly
    SUBTYPE OF (Constituent_part);
      layup_part : Composite_assembly_table;
      shape      : OPTIONAL composite_assembly_shape;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Composite_assembly_sequence_definition;
    components_in_sequence : BAG [1:?] OF component_class_for_assembly;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Composite_assembly_table
    SUBTYPE OF (Part_laminate_table);
      sequence_groups : LIST [2:?] OF Composite_assembly_sequence_definition;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Constituent_part
    SUPERTYPE OF (ONEOF (
              PLY,
              PLY_PIECE,
              PLY_LAMINATE,
              FILAMENT_LAMINATE,
              PROCESSED_CORE,
              COMPOSITE_ASSEMBLY))
  SUBTYPE OF (Part_view_definition);
      SELF\Product_view_definition.id : STRING;               -- constituent_part_identification : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      weight                                                                   : OPTIONAL Mass_data_element;  
    DERIVE
      constituent_part_identification : STRING := SELF\Product_view_definition.id;  -- ID : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Edge_zone_shape
    SUBTYPE OF (Zone_structural_makeup_shape_representation);
      boundary : boundary_class_zone;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Filament_laminate
    SUBTYPE OF (Constituent_part);
      made_from : Filament_assembly_material;
      shape     : OPTIONAL Filament_laminate_shape;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Filament_laminate_shape;
    cross_section : Shape_description_association;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Laminate_table
    SUPERTYPE OF (ONEOF (
              PART_LAMINATE_TABLE,
              ZONE_STRUCTURAL_MAKEUP))
  SUBTYPE OF (Part_view_definition);
      basis             : Reinforcement_orientation_basis;
      resulting_surface : OPTIONAL Surface;
      base_surface      : OPTIONAL Surface_with_direction;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Part_laminate_table
    SUPERTYPE OF (ONEOF (
              COMPOSITE_ASSEMBLY_TABLE,
              PLY_LAMINATE_TABLE))
  SUBTYPE OF (Laminate_table);
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Percentage_laminate_table
    SUBTYPE OF (Zone_structural_makeup);
      table_components : SET [1:?] OF Percentage_ply;
      total_thickness  : Length_data_element;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Percentage_ply;
    strength_orientation  : OPTIONAL Ply_orientation_angle;
    material              : Stock_material;
    makeup_and_properties : OPTIONAL Zone_structural_makeup;
    volume_percent        : Ratio_data_element;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply
    SUBTYPE OF (Constituent_part);
      constituents         : OPTIONAL LIST [1:?] OF Ply_piece;
      ply_thickness        : Length_data_element;
      material_orientation : Direction_of_fiber_orientation_within_a_ply;
      material_type        : ply_stock_material;
      shape                : OPTIONAL Ply_shape;
    DERIVE
      material_orientation_angle : Ply_orientation_angle := material_orientation.orientations[1]; 
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_laminate
    SUBTYPE OF (Constituent_part);
      shape     : OPTIONAL ply_laminate_shape;
      ply_table : Ply_laminate_table;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_laminate_sequence_definition;
    plies_in_sequence : SET [1:?] OF Ply;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_laminate_table
    SUBTYPE OF (Part_laminate_table);
      sequence : LIST [2:?] OF Ply_laminate_sequence_definition;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Ply_piece
    SUBTYPE OF (Constituent_part);
      shape        : OPTIONAL ply_piece_shape;
      warp_surface : LOGICAL;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Point_zone_shape
    SUBTYPE OF (Zone_structural_makeup_shape_representation);
      location : Point;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Processed_core
    SUBTYPE OF (Constituent_part);
      added_material           : OPTIONAL LIST [0:?] OF Ply;
      cell_direction           : Direction_of_fiber_orientation_within_a_ply;
      made_from_stock          : Stock_core;
      made_from_processed_core : OPTIONAL SET [1:?] OF Processed_core;
      shape                    : OPTIONAL core_shape;
    DERIVE
      cell_orientation_angle   : Ply_orientation_angle := cell_direction.orientations[1]; 
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Smeared_material
    SUBTYPE OF (Zone_structural_makeup);
      total_thickness : Length_data_element;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Surface_with_direction;
    defining_surface   : Surface;
    material_direction : Direction;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Thickness_laminate_table
    SUBTYPE OF (Zone_structural_makeup);
      table_components : LIST [2:?] OF thickness_laminate_table_component;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Zone_structural_makeup
    SUPERTYPE OF (ONEOF ((
              SMEARED_MATERIAL
              AND 
              THICKNESS_LAMINATE_TABLE),(
              SMEARED_MATERIAL
              AND 
              PERCENTAGE_LAMINATE_TABLE),
              THICKNESS_LAMINATE_TABLE,
              PERCENTAGE_LAMINATE_TABLE,
              SMEARED_MATERIAL))
  SUBTYPE OF (Laminate_table);
      boundary : OPTIONAL Zone_structural_makeup_shape_representation;
  END_ENTITY;
(* USED FROM (Part_and_zone_laminate_tables_arm); *)
  ENTITY Zone_structural_makeup_shape_representation
    SUPERTYPE OF (ONEOF (
              POINT_ZONE_SHAPE,
              EDGE_ZONE_SHAPE));
  END_ENTITY;
(* USED FROM (Picture_representation_arm); *)
  ENTITY Externally_defined_picture_representation_item 
    SUBTYPE OF (Picture_representation_item); 
    INVERSE 
      source : External_source_identification FOR item; 
    WHERE 
      WR1: NOT (SELF\Representation_item.name IN pre_defined_picture_representation_types); 
  END_ENTITY; 
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Magnetic_flux_density_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Picture_representation_arm); *)
  ENTITY Picture_representation_item 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXTERNALLY_DEFINED_PICTURE_REPRESENTATION_ITEM,
                        PREDEFINED_PICTURE_REPRESENTATION_ITEM))
  SUBTYPE OF (Bytes_representation_item);
  END_ENTITY; 
(* USED FROM (Picture_representation_arm); *)
  ENTITY Predefined_picture_representation_item 
    SUBTYPE OF (Picture_representation_item); 
    WHERE 
      WR1: SELF\Representation_item.name IN pre_defined_picture_representation_types; 
  END_ENTITY; 
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Evaluated_characteristic
    SUPERTYPE OF (
              RULE_BASED_EVALUATED_CHARACTERISTIC);
      id : OPTIONAL STRING;
      name : OPTIONAL STRING;
      description : OPTIONAL STRING;
      planned_product_data          : Planned_characteristic;
      product_data_status           : evaluation_type;
      product_characterization_data : Property_representation; -- was OPTIONAL SET[1:?] OF Property_value_representation;
      evaluation_result             : evaluation_result_value;
	  evaluation_activity           : OPTIONAL evaluation_activity_select;
  WHERE
    WR1: product_characterization_data.property.described_element :=: planned_product_data.reference_requirement.assigned_to;
  END_ENTITY;
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Evaluation_view_definition
    SUBTYPE OF (Product_view_definition);
      evaluated_product_definition : Product_view_definition;
      evaluation_data              : SET[1:?] OF Evaluated_characteristic;
    WHERE
      WR1 : TYPEOF(SELF) <> TYPEOF(evaluated_product_definition);
  END_ENTITY;
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Planned_characteristic;
      reference_requirement              : Requirement_assignment;
      planned_coordinated_characteristic : Property_representation; -- from the Requirement_view_definition, was Property_value_representation;
  WHERE
    WR1: planned_coordinated_characteristic.property.described_element :=: reference_requirement.assigned_requirement; -- same Requirement_view_definition
  END_ENTITY;
(* USED FROM (Planned_characteristic_arm); *)
  ENTITY Rule_based_evaluated_characteristic
    SUBTYPE OF (Evaluated_characteristic);
      evaluating_rule : Rule_definition;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Direction_of_fiber_orientation_within_a_ply
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space; 
      SELF\Representation.items            : SET[1:?] OF angle_select;
    INVERSE 
      orientations : SET[1:1] OF Ply_orientation_angle FOR rep_1;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Draped_orientation_angle
    SUBTYPE OF (Ply_orientation_angle);
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Laid_orientation_angle
    SUBTYPE OF (Ply_orientation_angle);
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Ply_orientation_angle 
    SUPERTYPE OF (ONEOF (
              DRAPED_ORIENTATION_ANGLE,
              LAID_ORIENTATION_ANGLE))
  SUBTYPE OF (Representation_relationship);  
      angle_reference                        : angle_select; 
      SELF\Representation_relationship.rep_1 : Direction_of_fiber_orientation_within_a_ply;
      SELF\Representation_relationship.rep_2 : Reinforcement_orientation_basis; 
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Point_and_vector
    SUBTYPE OF (Detailed_geometric_model_element);
      location : Point;
      vector : LIST [1:2] OF Direction;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Point_path
    SUBTYPE OF (Detailed_geometric_model_element);
      directions : LIST [1:?] OF Point_and_vector;
  END_ENTITY;
(* USED FROM (Ply_orientation_specification_arm); *)
  ENTITY Reinforcement_orientation_basis
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space; 
      SELF\Representation.items            : SET [1:1] OF Axis_placement_3d; 
    DERIVE
      basis_location : Cartesian_point := SELF\Representation.items[1]\Axis_placement.origin;
      orientation    : Direction       := SELF\Representation.items[1]\Axis_placement.x_axis;
    INVERSE 
      tables       : SET[1:?] OF Laminate_table FOR basis; 
      orientations : SET[1:?] OF Ply_orientation_angle FOR rep_2;
  END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
ENTITY Shape_feature_definition
  SUBTYPE OF (Characterizable_object);
  DERIVE
    feature_model : SET [1:?] OF Geometric_model := get_geometric_model(of_shape); 
  INVERSE
    of_shape : Item_shape FOR described_element;
  WHERE
    WR1: EXISTS(feature_model);
END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
ENTITY Instanced_feature  
  SUBTYPE OF (Shape_element, Shape_feature_definition);
END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
ENTITY Placed_feature  
  SUBTYPE OF (Shape_element);
   definition : Shape_feature_definition;
END_ENTITY;
(* USED FROM (Shape_feature_arm); *)
ENTITY General_feature
  SUBTYPE OF (Shape_feature_definition);
END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Advanced_open_shell
    SUBTYPE OF (Detailed_topological_model_element);    
      shell_faces : SET [1:?] OF Advanced_face;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Complex_deleted_face_solid
    SUBTYPE OF (Deleted_face_solid);
      thickened_face_list :  LIST [1:?] OF SET[1:?] OF Advanced_face;
      thickness_list      :  LIST [1:?] OF length_measure;
    WHERE
      WR1: SIZEOF(thickened_face_list) = SIZEOF(thickness_list);
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Conical_stepped_hole_transition
    SUBTYPE OF (Detailed_geometric_model_element);
      apex_angle         : plane_angle_measure;
      cone_base_radius   : length_measure;    
      transition_number  : INTEGER;
    WHERE
      WR1 : transition_number > 0;
      WR2 : cone_base_radius  > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Deleted_face_solid
    SUPERTYPE OF (ONEOF (
              DELETED_FACE_SOLID_WITH_OFFSETS,
              COMPLEX_DELETED_FACE_SOLID))
  SUBTYPE OF (Modified_solid);
      deleted_faces : SET [1:?] OF Advanced_face;
      thickness     : length_measure;
    WHERE
      WR1 : thickness <> 0.0;
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Deleted_face_solid_with_offsets
    SUBTYPE OF (Deleted_face_solid);
      thickness2 : length_measure;
    WHERE
      WR1: thickness2 <> 0.0;
      WR2: SELF\Deleted_face_solid.thickness <> thickness2;
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Path_modified_solid
    SUBTYPE OF (Solid_with_edge_modification);
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Path_modified_solid_with_end_conditions
    SUBTYPE OF (Path_modified_solid);
      end_conditions :  LIST [2:2] OF blend_end_condition; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Sculptured_solid
    SUBTYPE OF (Modified_solid);
      cutting_surface : sculpting_surface;
      positive_side   : BOOLEAN;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Sculptured_solid_with_selection
    SUBTYPE OF (Sculptured_solid);
      retained_part : Detailed_topological_model_element;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_angled_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      offset_distance             : length_measure;
      left_offset                 : BOOLEAN;
      offset_angle                : plane_angle_measure;
    WHERE
      WR1: offset_distance > 0.0;   
      WR2: offset_angle > 0.0; 
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_circular_pattern
    SUBTYPE OF (Modified_solid);
      location : Axis_placement;
      replicated_element : solid_with_placed_feature;
      replicate_count  : INTEGER;
      angular_spacing  : plane_angle_measure;
      radial_alignment : BOOLEAN;
      reference_point  : Cartesian_point;
    WHERE
     WR1 : replicate_count > 0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_circular_pocket
    SUBTYPE OF (Solid_with_pocket);
      pocket_radius      : length_measure; 
    WHERE 
      WR1: SELF\Solid_with_pocket.floor_blend_radius <= pocket_radius;
      WR2: pocket_radius > 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_circular_protrusion
    SUBTYPE OF (Solid_with_protrusion);
      radius : length_measure;
    WHERE
      WR1: radius >= 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_conical_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      semi_apex_angle : plane_angle_measure;
      tip_radius      : length_measure;
    WHERE
      WR1 : tip_radius < 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
      WR2 : tip_radius >= 0.0;
      WR3 : semi_apex_angle > 0.0;  
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_curved_slot
    SUBTYPE OF (Solid_with_slot);
     slot_centreline : Detailed_geometric_model_element;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_depression
     ABSTRACT SUPERTYPE OF (
                        SOLID_WITH_THROUGH_DEPRESSION
                        ANDOR (ONEOF (
                        SOLID_WITH_STEPPED_ROUND_HOLE,
                        SOLID_WITH_POCKET,
                        SOLID_WITH_SLOT,
                        SOLID_WITH_GROOVE)))
  SUBTYPE OF (Modified_Solid);
      location : Axis_placement; 
      depth    : length_measure;
    WHERE
      WR1 : depth > 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_double_offset_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      left_offset_distance  : length_measure;  
      right_offset_distance : length_measure;
    WHERE
      WR1: left_offset_distance > 0.0;   
      WR2: right_offset_distance > 0.0; 
  END_ENTITY; 
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_edge_modification
    SUPERTYPE OF (
              PATH_MODIFIED_SOLID
              ANDOR (ONEOF (
              SOLID_WITH_FIXED_RADIUS_EDGE_BLEND,
              SOLID_WITH_SIMPLE_CHAMFER,
              SOLID_WITH_DOUBLE_OFFSET_CHAMFER,
              SOLID_WITH_ANGLED_CHAMFER)))
  SUBTYPE OF (Modified_solid);    
      blended_edges : LIST [1:?] OF Edge;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_fixed_radius_edge_blend
    SUBTYPE OF (Solid_with_edge_modification);
      radius : length_measure;
    WHERE
      WR1: radius > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_flat_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      fillet_radius : length_measure;
    WHERE
      WR1 : fillet_radius < 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
      WR2 : fillet_radius  >= 0.0;    
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_general_pocket  
    SUBTYPE OF (Solid_with_pocket);
      profile            : Detailed_geometric_model_element;
      reference_point    : Cartesian_point;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_general_protrusion
    SUBTYPE OF (Solid_with_protrusion);
    profile         : Detailed_geometric_model_element;
    reference_point : Cartesian_point;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_groove
    SUBTYPE OF (Solid_with_depression);
      groove_radius       : length_measure;
      groove_width        : length_measure;
      draft_angle         : plane_angle_measure;
      floor_fillet_radius : length_measure;
      external_groove     : BOOLEAN;
    WHERE
      WR1: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION' 
          IN TYPEOF(SELF));
      WR2: groove_radius > 0.0; 
      WR3: groove_width > 0.0;       
      WR4: floor_fillet_radius >= 0.0;
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_relationship_with_operator_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: cartesian_transformation;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_model_relationship_with_transformation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GEOMETRIC_RELATIONSHIP_WITH_PLACEMENT_TRANSFORMATION,
                        GEOMETRIC_RELATIONSHIP_WITH_OPERATOR_TRANSFORMATION))
  SUBTYPE OF (Geometric_model_relationship);
    WHERE  
      WR1: rep_1.context_of_items :<>: rep_2.context_of_items;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_offset_faces
    SUBTYPE OF (Modified_solid);
      offset_faces : LIST [1:?] OF SET[1:?] OF Advanced_face;
      offset_distances : LIST [1:?] OF length_measure;
    WHERE
      WR1: SIZEOF(offset_faces) = SIZEOF(offset_distances); 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_pocket
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SOLID_WITH_RECTANGULAR_POCKET,
                        SOLID_WITH_CIRCULAR_POCKET,
                        SOLID_WITH_GENERAL_POCKET))
  SUBTYPE OF (Solid_with_depression);
      floor_blend_radius : length_measure;
      draft_angle        : plane_angle_measure;
    WHERE
      WR1 : floor_blend_radius >= 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_protrusion
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SOLID_WITH_CIRCULAR_PROTRUSION,
                        SOLID_WITH_RECTANGULAR_PROTRUSION,
                        SOLID_WITH_GENERAL_PROTRUSION))
  SUBTYPE OF (Modified_solid);
      location : Axis_placement; 
      height      : length_measure;
      draft_angle : plane_angle_measure;
    WHERE
      WR1: height > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_rectangular_pattern
    SUBTYPE OF (Modified_solid);
      location : Axis_placement; 
      replicated_element : solid_with_placed_feature;
      row_count      : INTEGER;
      column_count   : INTEGER;
      row_spacing    : length_measure;
      column_spacing : length_measure; 
    WHERE
      WR1 : (row_count * column_count) > 1;
      WR2 : row_spacing > 0.0;
      WR3 : column_spacing > 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_rectangular_pocket
    SUBTYPE OF (Solid_with_pocket);
      pocket_length      : length_measure;
      pocket_width       : length_measure;
      corner_radius      : length_measure;
    WHERE
      WR1: (corner_radius < pocket_width/2) 
        AND (corner_radius < pocket_length/2);
      WR2: pocket_length > 0.0;
      WR3: pocket_width > 0.0;
      WR4: corner_radius >= 0.0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_rectangular_protrusion
    SUBTYPE OF (Solid_with_protrusion);
    protrusion_length : length_measure;
    width             : length_measure;
    corner_radius     : length_measure;
  WHERE
    WR1: (corner_radius <= width/2) 
           AND (corner_radius <= protrusion_length/2);
    WR2: protrusion_length > 0.0; 
    WR3: width > 0.0; 
    WR4: corner_radius >= 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_simple_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      offset_distance : length_measure;
    WHERE
      WR1: offset_distance > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_slot
     ABSTRACT SUPERTYPE OF ((ONEOF (
                        SOLID_WITH_TRAPEZOIDAL_SLOT,
                        SOLID_WITH_TEE_SLOT))
                        AND (ONEOF (
                        SOLID_WITH_STRAIGHT_SLOT,
                        SOLID_WITH_CURVED_SLOT)))
  SUBTYPE OF (Solid_with_depression);
      slot_width     : length_measure;
      closed_ends    : LIST[2:2] OF LOGICAL;
      end_exit_faces : LIST[2:2] OF SET[0:?] OF Advanced_face;
  WHERE
    WR1: NOT(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION' 
          IN TYPEOF(SELF)) AND (closed_ends = [FALSE,FALSE]));
    WR2: NOT(((closed_ends[1] = TRUE) AND (SIZEOF(end_exit_faces[1]) <> 0))
        OR ((closed_ends[2] = TRUE) AND (SIZEOF(end_exit_faces[2]) <> 0)));
    WR3 : slot_width > 0.0;       
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_spherical_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      sphere_radius : length_measure;
    WHERE
      WR1 : sphere_radius >= 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_stepped_round_hole
    SUPERTYPE OF (
              SOLID_WITH_STEPPED_ROUND_HOLE_AND_CONICAL_TRANSITIONS
              ANDOR ONEOF (
              SOLID_WITH_FLAT_BOTTOM_HOLE,
              SOLID_WITH_CONICAL_BOTTOM_HOLE,
              SOLID_WITH_SPHERICAL_BOTTOM_HOLE))
  SUBTYPE OF (Solid_with_depression);
      segments           : INTEGER;
      segment_radii      : LIST[1:segments] OF length_measure;
      segment_depths     : LIST[1:segments] OF length_measure;
    DERIVE
      SELF\Solid_with_depression.depth : length_measure := calculate_depth(SELF);
    WHERE
      WR1: NOT (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION'
        IN TYPEOF(SELF)) AND (SIZEOF(TYPEOF(SELF) *
        ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_FLAT_BOTTOM_HOLE',
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_CONICAL_BOTTOM_HOLE',
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_SPHERICAL_BOTTOM_HOLE']) 
        <> 0)); 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_stepped_round_hole_and_conical_transitions
    SUBTYPE OF (Solid_with_stepped_round_hole);
      conical_transitions : SET[1:?] OF Conical_stepped_hole_transition; 
    WHERE
      WR1: SIZEOF (conical_transitions) <= 
         (SELF\Solid_with_stepped_round_hole.segments + 1);
      WR2: ('SOLID_SHAPE_ELEMENT_SCHEMA.SOLID_WITH_THROUGH_DEPRESSION'
         IN TYPEOF(SELF)) XOR (SIZEOF(conical_transitions) <= 
         SELF\Solid_with_stepped_round_hole.segments);
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_straight_slot
    SUBTYPE OF (Solid_with_slot);
      slot_length : length_measure;
    WHERE
      WR1: slot_length > 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_tee_slot
    SUBTYPE OF (Solid_with_slot);
      tee_section_width  : length_measure;
      collar_depth       : length_measure;
    WHERE
      WR1: collar_depth < SELF\Solid_with_depression.depth;
      WR2: tee_section_width > SELF\solid_with_slot.slot_width; 
      WR3: tee_section_width > 0.0;       
      WR4: collar_depth > 0.0;       
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_through_depression
    SUBTYPE OF (Solid_with_depression);
      exit_faces : SET[1:?] OF Advanced_face;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_trapezoidal_slot
    SUBTYPE OF (Solid_with_slot);
      draft_angle         : plane_angle_measure;
      floor_fillet_radius : length_measure;
    WHERE
      WR1: floor_fillet_radius >= 0.0; 
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_variable_radius_edge_blend
    SUBTYPE OF (Path_modified_solid);
      interpolation_points : LIST [2:?] OF Cartesian_point;
      radii                : LIST [2:?] OF length_measure;
      variations           : LIST [2:?] OF blend_radius_variation; 
    WHERE
      WR1: SIZEOF(blended_edges) = SIZEOF(radii);
      WR2: SIZEOF(variations) = SIZEOF(interpolation_points) - 1;
      WR3: SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_FIXED_RADIUS_EDGE_BLEND',
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_SIMPLE_CHAMFER',
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_DOUBLE_OFFSET_CHAMFER',
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_WITH_ANGLED_CHAMFER'] * TYPEOF(SELF)) = 0;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Coating_layer
    SUBTYPE OF (Shape_element);
    INVERSE
      thickness : SET[0:1] OF Thickness_size FOR is_applied_to;
    WHERE
      WR1: SIZEOF(USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MATERIAL_IDENTIFICATION.ITEMS'))=1;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Contact_ratio
   SUBTYPE OF (Surface_condition);
     ratio_value     : Measure_item;
     measuring_gauge : measuring_gauge_select;
  DERIVE
    SELF\Assigned_property.name : STRING := 'contact ratio';
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Extended_visual_appearance
    SUBTYPE OF (Visual_appearance);
      opacity          : OPTIONAL Measure_item;
      orientation      : OPTIONAL Angle_data_element;
      refraction_index : OPTIONAL Measure_item;  
      texture_map      : Digital_file;  
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Hardness
    SUBTYPE OF (Surface_condition);
      depth                 : OPTIONAL Measure_item;      
      environment_condition : SET[0:?] OF STRING;
      hardness_value        : Measure_item;
      measuring_method      : STRING;      
      measuring_position    : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'hardness';
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Surface_condition
     ABSTRACT SUPERTYPE OF (ONEOF (
                        CONTACT_RATIO,
                        HARDNESS,
                        TACTILE_APPEARANCE,
                        TREATMENT_RESULT,
                        VISUAL_APPEARANCE,
                        SURFACE_TEXTURE))
  SUBTYPE OF (Assigned_shape_property);
    value_determination : OPTIONAL STRING;
    SELF\Assigned_property.described_element : shaped_element_select;
  INVERSE
    generic_representation : SET[0:0] OF Property_definition_representation FOR definition; 
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Surface_texture
    SUBTYPE OF (Surface_condition);
      measuring_method    : STRING;
      measuring_direction : OPTIONAL Measurement_path;
      parameters : SET[0:?] OF Surface_texture_parameter;
  DERIVE
    SELF\Assigned_property.name : STRING := 'surface texture';
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Surface_texture_parameter;
    parameter_value : measure_qualification_or_value_with_unit;
    parameter_name : STRING;
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Tactile_appearance
    SUBTYPE OF (Surface_condition);
      depth       : OPTIONAL Measure_item;
  DERIVE
    SELF\Assigned_property.name : STRING := 'tactile appearance';
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Treatment_result
    SUBTYPE OF (Surface_condition);
      purpose     : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'treatment result';
  END_ENTITY;
(* USED FROM (Surface_conditions_arm); *)
  ENTITY Visual_appearance
    SUBTYPE OF (Surface_condition);
      colour_id    : STRING;
      colour_name  : OPTIONAL STRING;
      lustre       : STRING;
      transparency : OPTIONAL STRING;
      pattern      : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'visual appearance';
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Annotation_text_character 
    SUBTYPE OF (Detailed_geometric_model_element);
    replicated_model : Character_glyph_symbol; 
    source           : Axis_placement;
    target           : Axis_placement;
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Character_glyph_font_usage; 
    character : Character_glyph_symbol;
    font      : Text_font;
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Character_glyph_symbol
    SUBTYPE OF (Representation);
      SELF\Representation.name : label1;                      -- character : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      character : LABEL1 := SELF\Representation.name;         -- NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY; 
(* USED FROM (Text_representation_arm); *)
  ENTITY Text_font; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    glyphs: SET [1:?] OF Character_glyph_font_usage FOR font;
  END_ENTITY;
(* USED FROM (Text_representation_arm); *)
  ENTITY Text_font_family; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    fonts: SET [1:?] OF Text_font_in_family FOR family;
  END_ENTITY; 
(* USED FROM (Text_representation_arm); *)
  ENTITY Text_font_in_family;
    font   : Text_font;
    family : Text_font_family;
  END_ENTITY;
(* USED FROM (Thickened_face_solid_arm); *)
  ENTITY Solid_model_element
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Thickened_face_solid_arm); *)
  ENTITY Thickened_face_solid_model_element
    SUBTYPE OF (Solid_model_element);
      base_face        : Advanced_face;
      base_thickness   : length_measure;       
      top_thickness    : length_measure;
  END_ENTITY;
(* USED FROM (Wireframe_2d_arm); *)
ENTITY Geometrically_bounded_2d_wireframe_shape_representation
  SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm); *)
ENTITY Gdt_representation_shape
  SUBTYPE OF (Nominal_3d_model_shape, Part_shape);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GDT_REPRESENTATION_VIEW_CONTEXT' IN TYPEOF(described_element\Product_view_definition.additional_contexts); 
END_ENTITY;  
(* USED FROM (Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm); *)
ENTITY Nominal_3d_edge
  SUBTYPE OF (Nominal_3d_integral_feature);
DERIVE
  SELF\Associated_shape_element.associated_item : Edge_curve := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE' IN
     TYPEOF(SELF\Associated_shape_element.associated_item);
END_ENTITY;
(* USED FROM (Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm); *)
ENTITY Nominal_3d_feature 
   ABSTRACT SUPERTYPE OF (ONEOF (
                        NOMINAL_3D_INTEGRAL_FEATURE,
                        NOMINAL_3D_DERIVED_FEATURE))
  SUBTYPE OF (Associated_shape_element, Part_shape_element);
  SELF\Shape_element.containing_shape : Gdt_representation_shape;
END_ENTITY;
(* USED FROM (Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm); *)
ENTITY Nominal_3d_integral_feature
  SUBTYPE OF (General_part_feature, Nominal_3d_feature);
DERIVE
  SELF\Associated_shape_element.associated_item : nominal_3d_integral_feature_geometry := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: EXISTS(associated_item);
END_ENTITY;    
(* USED FROM (Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm); *)
ENTITY Nominal_3d_derived_feature
  SUBTYPE OF (Nominal_3d_feature, Derived_shape_element);
  SELF\Derived_shape_element.derived_from: SET [1:?] OF Nominal_3d_feature;
DERIVE
  SELF\Associated_shape_element.associated_item : nominal_3d_derived_feature_geometry := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: EXISTS(associated_item);
END_ENTITY;   
(* USED FROM (Product_and_manufacturing_annotation_presentation_arm); *)
ENTITY Pmi_annotation_presentation_shape
  SUBTYPE OF (Nominal_3d_model_shape);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXT' IN TYPEOF(described_element\Product_view_definition.additional_contexts); 
--  WR2: TRUE; -- must have at least one draughting_model of the ABREP
END_ENTITY;  
(* USED FROM (Change_management_arm); *)
ENTITY Change;
  id : OPTIONAL identifier;
  name : label;
  description : OPTIONAL text;
  described_change: OPTIONAL change_relationship_select; -- maps to group_assignment
END_ENTITY; 
(* USED FROM (Change_management_arm); *)
ENTITY Change_element
   ABSTRACT SUPERTYPE OF (ONEOF (
                        MODIFY_ELEMENT,
                        MODIFY_SINGLE_ELEMENT,
                        DELETE_ELEMENT,
                        ADD_ELEMENT));
  attribute_name : OPTIONAL STRING; -- maps to group.name
  change_location_in_aggregate_attribute : OPTIONAL LIST [1:?] OF INTEGER; -- maps to property_definition,...,integer_representation_item
  change_set : Change;  -- map to group_relationship
END_ENTITY;
(* USED FROM (Change_management_arm); *)
ENTITY Change_element_sequence;
  description : OPTIONAL text;
  previous : Change_element;
  next : Change_element;
END_ENTITY;  
(* USED FROM (Change_management_arm); *)
ENTITY Add_element
  SUBTYPE OF (Change_element);
  current_design_object : SET [1:?] OF change_management_object; -- maps to group_assignment
END_ENTITY;
(* USED FROM (Change_management_arm); *)
ENTITY Modify_element
  SUBTYPE OF (Change_element);
  current_design_object  : SET [1:?] OF change_management_object;
END_ENTITY;
(* USED FROM (Change_management_arm); *)
ENTITY Modify_single_element
  SUBTYPE OF (Change_element);
  current_design_object  : change_management_object;
  previous_design_object : change_management_object;
WHERE
  WR1: current_design_object <> previous_design_object;
END_ENTITY;
(* USED FROM (Change_management_arm); *)
ENTITY Delete_element
  SUBTYPE OF (Change_element);
  previous_design_object : SET [1:?] OF change_management_object;
END_ENTITY;
(* USED FROM (Change_management_arm); *)
ENTITY Frozen_assignment;
  frozen_item : SET[1:?] OF change_management_object;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Implicit_explicit_sketch_relationship;
    implicit_sketch :  Repositioned_sketch_2d_in_3d; 
    explicit_sketch :  Positioned_sketch;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Implicit_planar_intersection_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  external_surface : Surface;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Implicit_planar_intersection_point
    SUBTYPE OF (Auxiliary_geometric_representation_item);
    using_sketch   : Positioned_sketch;
    computed_representation  : Cartesian_point;
    external_curve : Curve;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Implicit_planar_model_intersection_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  intersected_model : surface_or_solid_model;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Implicit_planar_projected_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  external_curve       : Curve;
  projection_direction : Direction;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Implicit_planar_projection_point
    SUBTYPE OF (Auxiliary_geometric_representation_item);
    using_sketch   : Positioned_sketch;
    computed_representation  : Cartesian_point;
    external_point       : Point;
    projection_direction : Direction;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Implicit_planar_silhouette_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  silhouetted_model : surface_or_solid_model;
  view_direction    : Direction;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Positioned_sketch
  SUBTYPE OF (Detailed_geometric_model_element);
  sketch_basis       : sketch_basis_select;
  auxiliary_elements : 
    SET[0:?] OF Auxiliary_geometric_representation_item;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Repositioned_sketch_2d_in_3d
  SUBTYPE OF (Detailed_geometric_model_element);
     source : Sketch_2d_representation;
     mapping_origin : Axis_placement;
     mapping_target : Axis_placement;
   WHERE
    WR1: mapping_origin.dim = 2;
    WR2: mapping_target.dim = 3;
 END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Rigid_subsketch
  SUBTYPE OF (Subsketch); 
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Sketch_2d_representation
  SUBTYPE OF (Geometric_model);
  sketch_2d_semantics  : curves_or_area; 
  SELF\representation.items : SET[1:?] OF sketch_element_select;
WHERE
  WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;
END_ENTITY;
(* USED FROM (Sketch_arm); *)
ENTITY Subsketch
  SUBTYPE OF (Detailed_geometric_model_element);
  subsketch_elements : SET[1:?] OF sketch_element_select; 
  owning_sketch      : sketch_type_select;
END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
ENTITY Tessellated_anotation
   SUBTYPE OF (Annotation_element);
   SELF\Styled_element.element : Tessellated_item;
END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_shape_representation
    SUBTYPE OF (Geometric_model);
     SELF\Representation.items : SET[1 : ?] OF Tessellated_item;
 WHERE
   WR1:'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GEORMETRIC_COORDINATE_SPACE' IN
        TYPEOF(SELF\Representation.context_of_items);
 END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Part_function_association
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Functional_element_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
  END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Repositioned_tessellated_item
     SUBTYPE OF(Tessellated_item);
     location: Axis_placement_3d;
 WHERE  
   WR1: NOT (SIZEOF (['GEOMETRIC_MODEL_SCHEMA.TESSELLATED_CURVE_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_GEOMETRIC_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_POINT_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SURFACE_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SHELL',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SOLID',                
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_WIRE'] * TYPEOF(SELF)) = 0);
 END_ENTITY; 
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_geometric_set
     SUBTYPE OF (Tessellated_item);
      children: SET [1:?] OF Tessellated_item;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_solid
    SUBTYPE OF (Tessellated_item);
      items: SET [1:?] OF Tessellated_structured_item ;
    geometric_link: OPTIONAL Manifold_solid_brep;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_shell
    SUBTYPE OF (Tessellated_item);
    items: SET [1:?] OF Tessellated_structured_item ;
    topological_link: OPTIONAL Connected_face_set;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_wire
    SUBTYPE OF (Tessellated_item);
    items: SET [1:?] OF tessellated_edge_or_vertex;
    geometric_model_link: OPTIONAL path_or_composite_curve;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_curve_set
    SUBTYPE OF (Tessellated_item);
    coordinates : coordinates_list;
    line_strips : LIST [1:?] OF LIST [2:?] OF INTEGER;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_structured_item
    SUPERTYPE OF (ONEOF (
              TESSELLATED_FACE,
              TESSELLATED_EDGE,
              TESSELLATED_VERTEX))
  SUBTYPE OF (Tessellated_item);
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_edge
    SUBTYPE OF (Tessellated_structured_item);
    coordinates: coordinates_list;
    geometric_link: OPTIONAL edge_or_curve;
    line_strip : LIST [2:?] OF INTEGER;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_connecting_edge
    SUBTYPE OF (Tessellated_edge);
    smooth: LOGICAL;
    face1: Tessellated_face;
    face2: Tessellated_face;
    line_strip_face1 : LIST [2:?] OF INTEGER;
    line_strip_face2 : LIST [2:?] OF INTEGER;
 WHERE
   WR1 : SIZEOF(line_strip_face1) = SIZEOF(line_strip_face2);
   WR2:  SIZEOF(line_strip_face1) = SIZEOF(SELF\Tessellated_edge.line_strip);
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_point_set
    SUBTYPE OF (Tessellated_item);
    coordinates: coordinates_list;
    point_list: LIST [1:?] OF INTEGER;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_vertex
    SUBTYPE OF (Tessellated_structured_item);
    coordinates: COORDINATES_LIST;
    topological_link: OPTIONAL Vertex_point;
    point_index : INTEGER;
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_surface_set
    ABSTRACT SUPERTYPE OF (ONEOF (
                        TRIANGULATED_SURFACE_SET,
                        COMPLEX_TRIANGULATED_SURFACE_SET))
  SUBTYPE OF (Tessellated_item);
    coordinates : coordinates_list;
    pnmax : INTEGER;
    normals : LIST [0:?] OF LIST [3:3] OF REAL;
  WHERE
     WR1: ((SIZEOF(normals) = 0) OR (SIZEOF(normals) = 1) OR (SIZEOF(normals) = pnmax));
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Triangulated_surface_set
   SUBTYPE OF (Tessellated_surface_set);
     pnindex :  LIST [0:?] OF INTEGER;
     triangles : LIST [1:?] OF LIST [3:3] OF INTEGER;
 WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_surface_set.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_surface_set.pnmax <> coordinates.npoints));
 END_ENTITY;   
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Complex_triangulated_surface_set
   SUBTYPE OF (Tessellated_surface_set);
     pnindex :  LIST [0:?] OF INTEGER;
     triangle_strips : LIST [0:?] OF LIST [3:?] OF INTEGER;
     triangle_fans : LIST [0:?] OF LIST [3:?] OF INTEGER;
  WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_surface_set.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_surface_set.pnmax <> coordinates.npoints));
     WR3: NOT ((SIZEOF(triangle_strips) = 0) AND (SIZEOF(triangle_fans) = 0));
 END_ENTITY; 
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Tessellated_face
    ABSTRACT SUPERTYPE OF (ONEOF (
                        TRIANGULATED_FACE,
                        COMPLEX_TRIANGULATED_FACE))
  SUBTYPE OF (Tessellated_structured_item);
    coordinates : coordinates_list;
    pnmax : INTEGER;
    normals : LIST [0:?] OF LIST [3:3] OF REAL;
    geometric_link: OPTIONAL face_or_surface;
 WHERE
     WR1: ((SIZEOF(normals) = 0) OR (SIZEOF(normals) = 1) OR (SIZEOF(normals) = pnmax));
 END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Triangulated_face
   SUBTYPE OF (Tessellated_face);
     pnindex :  LIST [0:?] OF INTEGER;
     triangles : LIST [1:?] OF LIST [3:3] OF INTEGER;
 WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_face.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_face.pnmax <> coordinates.npoints));
 END_ENTITY;   
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Complex_triangulated_face
   SUBTYPE OF (Tessellated_face);
     pnindex :  LIST [0:?] OF INTEGER;
     triangle_strips : LIST [0:?] OF LIST [3:?] OF INTEGER;
     triangle_fans : LIST [0:?] OF LIST [3:?] OF INTEGER;
  WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_face.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_face.pnmax <> coordinates.npoints));
     WR3: NOT ((SIZEOF(triangle_strips) = 0) AND (SIZEOF(triangle_fans) = 0));
 END_ENTITY; 
(* USED FROM (Tessellated_geometry_arm); *)
 ENTITY Coordinates_list
    SUBTYPE OF (Tessellated_item);
    npoints : INTEGER;
    position_coords : LIST [1:?] OF LIST [3:3] OF REAL;
 WHERE
    WR1: npoints = SIZEOF(position_coords);
    WR2: SIZEOF (['GEOMETRIC_MODEL_SCHEMA.REPOSITIONED_TESSELLATED_ITEM'] * TYPEOF(SELF)) = 0;
 END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Geometric_model_element_relationship
    SUBTYPE OF (Detailed_geometric_model_element_relationship, Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Edge_shape_feature_arm); *)
  ENTITY Edge_shape_model
     ABSTRACT SUPERTYPE OF (ONEOF (
                        BEVEL_EDGE_FEATURE_SHAPE_MODEL,
                        STEP_EDGE_FEATURE_SHAPE_MODEL,
                        RADIUS_EDGE_FEATURE_SHAPE_MODEL))
  SUBTYPE OF (Planar_shape_model);
      applied_surface : board_side;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;
(* USED FROM (Edge_shape_feature_arm); *)
  ENTITY Radius_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      radius_length : Length_tolerance_characteristic;
  END_ENTITY;
(* USED FROM (Edge_shape_feature_arm); *)
  ENTITY Step_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      step_width : Length_tolerance_characteristic;
      step_depth : Length_tolerance_characteristic;
  END_ENTITY;
(* USED FROM (Point_direction_model_arm); *)
ENTITY Point_direction_model
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF point_or_point_direction_sequence;
END_ENTITY;
(* USED FROM (Point_direction_model_arm); *)
ENTITY Point_direction
  SUBTYPE OF (Detailed_geometric_model_element);
  origin : Cartesian_point;
  axis : Direction;
END_ENTITY;  
(* USED FROM (Point_direction_model_arm); *)
ENTITY Point_direction_sequence
  SUBTYPE OF (Detailed_geometric_model_element);
  items : LIST [1:?] OF point_or_point_direction;
END_ENTITY;  
(* USED FROM (Point_direction_model_arm); *)
ENTITY Point_sequence
  SUBTYPE OF (Detailed_geometric_model_element);
  items : LIST [1:?] OF Cartesian_point;
END_ENTITY;  
(* USED FROM (Numerical_interface_arm); *)
ENTITY Expression_extension
    SUBTYPE OF (Value_with_unit);
    expression_associated: expression_extension_select;
END_ENTITY; 
(* USED FROM (Numerical_interface_arm); *)
ENTITY Variable_expression
    SUBTYPE OF (Variable_semantics);
    property_associated: property_variable_rep_select;
END_ENTITY; 
(* USED FROM (Person_organization_arm); *)
ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Address_assignment  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_ADDRESS_ASSIGNMENT,
               EXTERNALLY_DEFINED_ADDRESS_ASSIGNMENT) ) ;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;
(* USED FROM (Person_organization_arm); *)
ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class
  SUPERTYPE OF (ONEOF (
              CLASS_BY_EXTENSION,
              CLASS_BY_INTENSION));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Class_arm); *)
ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Date_time;
  date_component : Calendar_date;
  time_component : Local_time;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : Time_offset;
END_ENTITY;
(* USED FROM (Date_time_arm); *)
ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
ENTITY Edge_curve
  SUBTYPE OF (Detailed_geometric_model_element, Edge);
    edge_geometry : Curve;
    same_sense    : BOOLEAN;
END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
ENTITY Face_surface
  SUBTYPE OF(Detailed_geometric_model_element, Face);
    face_geometry :  Surface;
    same_sense    :  BOOLEAN;
END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
ENTITY Poly_loop
  SUBTYPE OF (Detailed_geometric_model_element,Loop);
    polygon : LIST [3:?] OF UNIQUE cartesian_point;
END_ENTITY;
(* USED FROM (Basic_geometric_topology_arm); *)
ENTITY Vertex_point
  SUBTYPE OF (Detailed_geometric_model_element, Vertex);
    vertex_position : Cartesian_point;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Bounded_curve
     ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPOSITE_CURVE,
                        TRIMMED_CURVE) ) 
  SUBTYPE OF (Curve);
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Bounded_surface
    ABSTRACT SUPERTYPE
  SUBTYPE OF (Surface);
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Circle
   SUBTYPE OF (Conic);
   radius   : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Conic
   SUPERTYPE OF (ONEOF (
              CIRCLE,
              ELLIPSE,
              HYPERBOLA,
              PARABOLA))
  SUBTYPE OF (Curve);
   position: Axis_placement;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
 ENTITY  Conical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius     : length_measure;
   semi_angle : plane_angle_measure;
WHERE
   WR1: radius >= 0.0;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Curve
  SUPERTYPE OF (ONEOF (
              CONIC,
              LINE))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Cylindrical_surface
   SUBTYPE OF (Surface);
    position : Axis_placement_3d;
   radius : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Ellipse
   SUBTYPE OF(Conic);
   first_semi_axis: length_measure;
   second_semi_axis: length_measure;
WHERE
   WR1: first_semi_axis > 0.0;
   WR2: first_semi_axis > 0.0;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Extruded_surface
   SUBTYPE OF (Swept_surface);
   extrusion_axis      : Direction;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Hyperbola
   SUBTYPE OF(Conic);
   semi_axis: length_measure;
   imaginary_semi_axis: length_measure;
WHERE
   WR1: semi_axis > 0.0;
   WR2: imaginary_semi_axis > 0.0;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Line
  SUBTYPE OF (Curve);
   point: Cartesian_point;
   line_direction: Direction;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Parabola
   SUBTYPE OF(Conic);
   focal_distance: length_measure;
WHERE
   WR1: focal_distance <> 0.0;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Plane
  SUBTYPE OF (Surface);
  position: Axis_placement_3d;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Point_on_curve
  SUBTYPE OF (Point);
  supporting_curve : Curve;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Point_on_surface
  SUBTYPE OF (Point);
  supporting_surface : Surface;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Spherical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius   : length_measure;
WHERE
    WR1: radius > 0.0;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Surface
  SUPERTYPE OF (ONEOF (
              CONICAL_SURFACE,
              CYLINDRICAL_SURFACE,
              PLANE,
              SPHERICAL_SURFACE,
              SWEPT_SURFACE,
              TOROIDAL_SURFACE))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Surface_of_revolution
  SUBTYPE OF (Swept_surface);
      axis_direction : Direction;
      axis_point :     Cartesian_point;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Swept_surface
   SUPERTYPE OF (ONEOF (
              EXTRUDED_SURFACE,
              SURFACE_OF_REVOLUTION))
  SUBTYPE OF (Surface);
   swept_curve : Curve;
END_ENTITY;
(* USED FROM (Basic_geometry_arm); *)
ENTITY Toroidal_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius : length_measure;
   minor_radius : length_measure;
WHERE
    WR1: radius > 0.0;
    WR2: minor_radius > 0.0;
END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Connected_edge_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_edges : SET [1:?] OF Edge;
 END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
 ENTITY Connected_face_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_faces : SET [1:?] OF Face;
 END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Connected_face_sub_set
  SUBTYPE OF (Connected_face_set);
  parent_face_set : Connected_face_set;
END_ENTITY; 
(* USED FROM (Elemental_topology_arm); *)
ENTITY Detailed_topological_model_element
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CONNECTED_EDGE_SET,
                        CONNECTED_FACE_SET,
                        EDGE,
                        FACE,
                        FACE_BOUND,
                        VERTEX,(
                        LOOP
                        ANDOR 
                        PATH)))
  SUBTYPE OF (Representation_item);
END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Edge
   SUBTYPE OF (Detailed_topological_model_element);
   edge_start : Vertex;
   edge_end   : Vertex;
 END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Edge_loop
   SUBTYPE OF (Loop,Path);
 DERIVE
   ne : INTEGER := SIZEOF(SELF\Path.edge_list);
 WHERE
   WR1: (SELF\Path.edge_list[1].edge_start) :=:
        (SELF\Path.edge_list[ne].edge_end);
 END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_definition
   ABSTRACT SUPERTYPE OF (ONEOF (
                        FORWARD_CHAINING_RULE,
                        BACK_CHAINING_RULE))
  SUBTYPE OF (Rule_software_definition);
END_ENTITY; 
(* USED FROM (Elemental_topology_arm); *)
 ENTITY Face_bound
   SUBTYPE OF(Detailed_topological_model_element);
   bound       :  Loop;
   orientation :  BOOLEAN;
 END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
  ENTITY Face_outer_bound
    SUBTYPE OF (Face_bound);
  END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Loop
   SUPERTYPE OF (ONEOF (
              VERTEX_LOOP,
              EDGE_LOOP))
  SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Oriented_edge
   SUBTYPE OF (Edge);
   edge_definition : Edge;
   orientation  : BOOLEAN;
 DERIVE
   SELF\Edge.edge_start : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_start,
                                            SELF.edge_definition.edge_end);
   SELF\Edge.edge_end   : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_end,
                                            SELF.edge_definition.edge_start);
 WHERE
   WR1: NOT ('TOPOLOGY_SCHEMA.ORIENTED_EDGE' IN TYPEOF (SELF.edge_definition));
 END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_modification
   SUBTYPE OF (Rule_action);
   modification_rationale : Rule_change_request;
END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Vertex
   SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Vertex_loop
   SUBTYPE OF (Loop);
   loop_vertex : vertex;
END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement
    SUPERTYPE OF (ONEOF (
              AXIS_PLACEMENT_2D,
              AXIS_PLACEMENT_3D))
  SUBTYPE OF (Detailed_geometric_model_element);
      origin : Cartesian_point;
      x_axis : Direction;
      y_axis : Direction;
    DERIVE
      dim: INTEGER := SIZEOF(origin.coordinates);
    WHERE
      WR1: dim >1;
      WR2: dim = SIZEOF(x_axis.direction_ratios);
      WR3: dim = SIZEOF(y_axis.direction_ratios);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_2d
    SUBTYPE OF (Axis_placement);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_3d
      SUPERTYPE OF (ONEOF (
               TOOL_ATTACHMENT_POINT_FRAME,
               TOOL_CENTRE_POINT_FRAME) ) 
      SUBTYPE OF (Axis_placement);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Axis_placement_mapping;
      source : Axis_placement;
      target : Axis_placement;
    WHERE
      WR1: source\Axis_placement.dim = target\Axis_placement.dim;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Point
      ABSTRACT SUPERTYPE OF (ONEOF (
                        CARTESIAN_POINT,
                        POINT_ON_CURVE,
                        POINT_ON_SURFACE) ) 
  SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_point
    SUBTYPE OF (Point);
      coordinates : LIST[1:3] OF length_measure;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_transformation_2d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:2] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=2;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=2;
      WR3: SIZEOF(translation.coordinates)=2;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Cartesian_transformation_3d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:3] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=3;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=3;
      WR3: SIZEOF(multiplication_matrix[3]\Direction.direction_ratios)=3;
      WR4: SIZEOF(translation.coordinates)=3;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Detailed_geometric_model_element
      ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        GEOMETRIC_PLACEMENT_OPERATION) )ANDOR( ONEOF (
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        CURVE,
                        SURFACE) )ANDOR( ONEOF (
                        CLIPPING_OPERATOR,
                        MODEL_IMAGE_3D,
                        LIGHT_SOURCE,
                        CAMERA_MODEL_D3) )ANDOR( ONEOF (
                        COMPOSITE_PRESENTABLE_TEXT,
                        TEXT_LITERAL,
                        DEFINED_CHARACTER_GLYPH) )ANDOR( ONEOF (
                        POINT_DIRECTION,
                        POINT_DIRECTION_SEQUENCE,
                        POINT_SEQUENCE,
                        POINT) )ANDOR( ONEOF (
                        DIRECTION,
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        CURVE,
                        GEOMETRIC_MODEL_ELEMENT_RELATIONSHIP,
                        SURFACE,
                        VECTOR) )ANDOR( ONEOF (
                        CAMERA_MODEL_D2,
                        CAMERA_IMAGE_2D_WITH_SCALE) )ANDOR( ONEOF (
                        POINT_AND_VECTOR,
                        POINT_PATH) )ANDOR( ONEOF (
                        KINEMATIC_PATH,
                        AXIS_PLACEMENT) )ANDOR( ONEOF (
                        AXIS_PLACEMENT,
                        CARTESIAN_TRANSFORMATION_2D,
                        CARTESIAN_TRANSFORMATION_3D,
                        DIRECTION,
                        SOLID_MODEL_ELEMENT) )ANDOR( ONEOF (
                        CIRCULAR_CONE,
                        CIRCULAR_CYLINDER,
                        SPHERE,
                        RECTANGULAR_BLOCK,
                        TORUS) )ANDOR( ONEOF (
                        ROTATION_ABOUT_DIRECTION,
                        SU_PARAMETERS) )ANDOR( ONEOF (
                        HATCH_STYLE,
                        TILE_STYLE) )  ) 
  SUBTYPE OF (Representation_item);
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Direction
    SUBTYPE OF (Detailed_geometric_model_element);
      direction_ratios : LIST[2:3] OF REAL;  
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_coordinate_space
      SUPERTYPE OF (ONEOF (
               GEOMETRIC_REPRESENTATION_CONTEXT_WITH_PARAMETER,
               PATH_PARAMETER_REPRESENTATION_CONTEXT) ) 
      SUBTYPE OF (Numerical_representation_context);
      dimension_count : INTEGER;
    WHERE
      WR1: dimension_count >0;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_model
    SUBTYPE OF (Representation);
      version_id                           : OPTIONAL STRING;
      model_extent                         : OPTIONAL length_measure;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items            : SET[1:?] OF geometric_model_item;
  END_ENTITY;
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_placement
    SUBTYPE OF (Geometric_placement_operation);
      target : Axis_placement;
  END_ENTITY; 
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_placement_operation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GEOMETRIC_PLACEMENT,
                        GEOMETRIC_OPERATOR_TRANSFORMATION))
  SUBTYPE OF (Detailed_geometric_model_element);
      source : Axis_placement;  
      template_definition : template_definition_select;
  END_ENTITY; 
(* USED FROM (Elemental_geometric_shape_arm); *)
  ENTITY Geometric_operator_transformation
    SUBTYPE OF (Geometric_placement_operation);
      target : cartesian_transformation;
  END_ENTITY; 
(* USED FROM (Value_with_unit_arm); *)
ENTITY Area_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit
 SUPERTYPE OF (ONEOF (
              AREA_UNIT,
              VOLUME_UNIT))

 SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Unit
  SUPERTYPE OF (ONEOF (
              AMOUNT_OF_SUBSTANCE_UNIT,
              ELECTRIC_CURRENT_UNIT,
              LENGTH_UNIT,
              LUMINOUS_INTENSITY_UNIT,
              MASS_UNIT,
              PLANE_ANGLE_UNIT,
              RATIO_UNIT,
              SOLID_ANGLE_UNIT,
              THERMODYNAMIC_TEMPERATURE_UNIT,
              TIME_UNIT));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Value_with_unit  SUPERTYPE OF (ONEOF (
               ACCELERATION_DATA_ELEMENT,
               ABSORBED_DOSE_DATA_ELEMENT,
               RADIOACTIVITY_DATA_ELEMENT,
               AMOUNT_OF_SUBSTANCE_DATA_ELEMENT,
               ANGLE_DATA_ELEMENT,
               AREA_DATA_ELEMENT,
               CAPACITANCE_DATA_ELEMENT,
               CELSIUS_TEMPERATURE_DATA_ELEMENT,
               CONDUCTANCE_DATA_ELEMENT,
               DIELECTRIC_CONSTANT_DATA_ELEMENT,
               DOSE_EQUIVALENT_DATA_ELEMENT,
               ELECTRIC_CHARGE_DATA_ELEMENT,
               ELECTRIC_CURRENT_DATA_ELEMENT,
               ELECTRIC_POTENTIAL_DATA_ELEMENT,
               ENERGY_DATA_ELEMENT,
               FORCE_DATA_ELEMENT,
               FREQUENCY_DATA_ELEMENT,
               ILLUMINANCE_DATA_ELEMENT,
               INDUCTANCE_DATA_ELEMENT,
               LENGTH_DATA_ELEMENT,
               LOSS_TANGENT_DATA_ELEMENT,
               LUMINOUS_FLUX_DATA_ELEMENT,
               LUMINOUS_INTENSITY_DATA_ELEMENT,
               MAGNETIC_FLUX_DATA_ELEMENT,
               MAGNETIC_FLUX_DENSITY_DATA_ELEMENT,
               MASS_DATA_ELEMENT,
               POWER_DATA_ELEMENT,
               PRESSURE_DATA_ELEMENT,
               RATIO_DATA_ELEMENT,
               RESISTANCE_DATA_ELEMENT,
               SCATTERING_PARAMETER_DATA_ELEMENT,
               SOLID_ANGLE_DATA_ELEMENT,
               THERMAL_RESISTANCE_DATA_ELEMENT,
               THERMODYNAMIC_TEMPERATURE_DATA_ELEMENT,
               VELOCITY_DATA_ELEMENT,
               VOLUME_DATA_ELEMENT) ) ;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;
(* USED FROM (Value_with_unit_arm); *)
ENTITY Volume_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;
(* USED FROM (Maths_space_arm); *)
ENTITY Maths_space;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Elements_bc
SUBTYPE OF (Mbna_bc);
  elements : LIST [0 : ?] OF Vertex_defined_cell;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Fd_bc
SUBTYPE OF (Mbna_bc);
  SELF\Mbna_bc.datasets : SET [0 : ?] OF Fd_bc_dataset;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Fd_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  SELF\Mbna_bc_dataset.the_type : Fd_bc_type_simple;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Fd_zone_bc
SUBTYPE OF (Mbna_zone_bc);
  SELF\Mbna_zone_bc.conditions : SET [0 : ?] OF Fd_bc;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Indexed_elements_bc
SUBTYPE OF (Mbna_bc);
  element_indices : indices_group;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Indexed_points_bc
SUBTYPE OF (Mbna_bc);
  point_indices : indices_group;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc
  SUPERTYPE OF (ONEOF (
              ELEMENTS_BC,
              INDEXED_ELEMENTS_BC,
              INDEXED_POINTS_BC))
  SUBTYPE OF (Mbna_condition);
  datasets : SET [0 : ?] OF Mbna_bc_dataset;
  gridloc : mesh_location;
  inward_normal_index : OPTIONAL Ijk_minmax;
  inward_normal_list : OPTIONAL Ijk_minmax;
  rstate : SET [0 : ?] OF Mbna_reference_state;
  the_type : mbna_bc_type;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_data
 ABSTRACT SUPERTYPE

SUBTYPE OF (Mbna_condition);
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_data_global
SUBTYPE OF (Mbna_bc_data);
INVERSE
  data_global : SET OF Model_property_distribution FOR domain;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_data_local
SUBTYPE OF (Mbna_bc_data);
INVERSE
  data : SET [0 : ?] OF Model_property_distribution FOR domain;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_bc_dataset
  SUPERTYPE OF (ONEOF (
              MBNA_DIRICHLET_BC_DATASET,
              MBNA_NEUMANN_BC_DATASET))
  SUBTYPE OF (Mbna_condition);
  gridloc : mesh_location;
  rstate : SET [0 : ?] OF Mbna_reference_state;
  the_type : mbna_bc_type_simple;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_condition
   ABSTRACT SUPERTYPE OF (ONEOF (
                        MBNA_ZONE_BC,
                        MBNA_BC,
                        MBNA_BC_DATASET,
                        MBNA_BC_DATA,
                        MBNA_REFERENCE_STATE))
  SUBTYPE OF (Model_state_domain);
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_dirichlet_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  data : Mbna_bc_data;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_neumann_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  data : Mbna_bc_data;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_reference_state
SUBTYPE OF (Mbna_condition);
INVERSE
  data : SET OF Model_property_distribution FOR domain;
END_ENTITY;
(* USED FROM (Cfd_conditions_arm); *)
ENTITY Mbna_zone_bc
SUBTYPE OF (Mbna_condition);
  conditions : SET [0 : ?] OF Mbna_bc;
  rstate : SET [0 : ?] OF Mbna_reference_state;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Applied_independent_property
  SUBTYPE OF (Assigned_property);
  base_independent_property : Independent_property;
DERIVE
  SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Assigned_property  SUPERTYPE OF (ONEOF (
               PRODUCT_DEFINITION_KINEMATICS,
               PRODUCT_DEFINITION_RELATIONSHIP_KINEMATICS) ) ;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Property_definition_representation
    ABSTRACT SUPERTYPE OF (ONEOF (
                        SHAPE_DESCRIPTION_ASSOCIATION,
                        SHAPE_DEPENDENT_PROPERTY_REPRESENTATION,
                        SHAPE_ELEMENT_DESCRIPTION_ASSOCIATION) ) ;
    name : OPTIONAL STRING;
    description : OPTIONAL STRING;
    definition : represented_definition;
    used_representation : Representation;
END_ENTITY;
(* USED FROM (Property_assignment_arm); *)
ENTITY Property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Assigned_property;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : ASSIGNED_PROPERTY := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Assembly_component_relationship
    ABSTRACT SUPERTYPE OF (ONEOF (
                        NEXT_ASSEMBLY_USAGE,
                        PROMISSORY_USAGE,
                        COMPONENT_UPPER_LEVEL_IDENTIFICATION) ) 
  SUBTYPE OF (Product_occurrence_definition_relationship);
  location_indicator : OPTIONAL STRING;
  quantity : OPTIONAL Value_with_unit;
WHERE
  WR1: NOT(EXISTS(quantity)) OR ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;
(* USED FROM (Characterizable_object_arm); *)
ENTITY Characterizable_object;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Next_assembly_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Product_occurrence_definition_relationship
   ABSTRACT SUPERTYPE;
  relating_view : product_view_definition_or_reference;
  related_view : product_view_definition_or_reference;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Promissory_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;
(* USED FROM (Product_view_definition_reference_arm); *)
  ENTITY Generic_product_view_definition_reference
     ABSTRACT SUPERTYPE OF (ONEOF (
                        PRODUCT_VIEW_DEFINITION_REFERENCE,
                        PRODUCT_VIEW_DEFINITION_REFERENCE_WITH_LOCAL_REPRESENTATION));
    source : External_source_identification;
  END_ENTITY;
(* USED FROM (Product_view_definition_reference_arm); *)
  ENTITY Product_view_definition_reference
    SUBTYPE OF (Generic_product_view_definition_reference);
    product_id : identifier;
    product_definition_formation_id : identifier;
    product_definition_id : identifier;
    id_owning_organization_name : OPTIONAL label;
  END_ENTITY;
(* USED FROM (Product_view_definition_reference_arm); *)
  ENTITY Product_view_definition_reference_with_local_representation
    SUBTYPE OF (Generic_product_view_definition_reference, Product_view_definition);
  END_ENTITY;
(* USED FROM (External_model_arm); *)
ENTITY External_geometric_model
SUBTYPE OF (Geometric_model);
   SELF\Representation.items: SET[1:1] OF Axis_placement;
   external_file: Digital_file;
WHERE
WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 3;
WR2: SELF\Representation.context_of_items.kind = 'external';
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY Digital_file
  SUBTYPE OF (File);
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY File
   ABSTRACT SUPERTYPE OF (ONEOF (
                        DIGITAL_FILE,
                        HARDCOPY));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY File_location_identification
  SUBTYPE OF (External_item_identification);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FILE' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;
(* USED FROM (File_identification_arm); *)
ENTITY Hardcopy
  SUBTYPE OF (File);
END_ENTITY;
(* USED FROM (Default_setting_association_arm); *)
ENTITY Default_edge_round
  SUBTYPE OF (Default_shape_property);
  radius_value: Length_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default edge round';  
END_ENTITY;
(* USED FROM (Geometric_model_relationship_arm); *)
ENTITY Geometric_model_relationship
 SUBTYPE OF (Representation_relationship);
    SELF\Representation_relationship.rep_1 : geometric_representation_select;
    SELF\Representation_relationship.rep_2 : geometric_representation_select;
  WHERE
    WR1 : rep_1 <> rep_2;
END_ENTITY;
(* USED FROM (Product_view_definition_relationship_arm); *)
ENTITY View_definition_relationship;
  id : OPTIONAL STRING;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_view : as_product_view_definition_or_reference;
  related_view : as_product_view_definition_or_reference;
END_ENTITY;
(* USED FROM (Product_view_definition_relationship_arm); *)
ENTITY View_definition_usage
  SUBTYPE OF (View_definition_relationship);
END_ENTITY;
(* USED FROM (External_item_identification_assignment_arm); *)
ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;
(* USED FROM (External_item_identification_assignment_arm); *)
ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_relationship  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_ACTIVITY_RELATIONSHIP,
               EXTERNALLY_DEFINED_ACTIVITY_RELATIONSHIP) ) ;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;
(* USED FROM (Activity_arm); *)
ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Activity_method_arm); *)
ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Activity_property;
    name              : STRING;
    description       : STRING;
    described_element : characterized_activity_definition;
  END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Activity_property_representation;
    description : OPTIONAL STRING;
    property    : Activity_property;
    rep         : Representation;
    role        : STRING;
  END_ENTITY;
(* USED FROM (Process_property_assignment_arm); *)
  ENTITY Applied_independent_activity_property
    SUBTYPE OF (Activity_property);
      base_element_property : Independent_property;
    DERIVE
      SELF\Activity_property.name : STRING := base_element_property.property_type;
  END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Applied_independent_resource_property
  SUBTYPE OF (Resource_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Resource_property;
  name : STRING;
  description : STRING;
  described_element : characterized_resource_select;
END_ENTITY;
(* USED FROM (Resource_property_assignment_arm); *)
ENTITY Resource_property_representation;
  description : OPTIONAL STRING;
  property : Resource_property;
  rep : Representation;
  role : STRING;
END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY And_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY Or_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY Sequence_of_state_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.successor :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.predecessor :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      predecessor :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_cause_effect_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.effect :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.cause :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      cause :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      effect :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_complement_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.universe :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.set_1 :   SET[1:?] OF STATE_DEFINITION *)
  set_2 : SET[1:?] OF State_definition;
    DERIVE
      set_1 :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      universe :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_proper_subset_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.proper_subset :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.proper_superset :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      proper_subset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      proper_superset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_subset_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.superset :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.subset :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      subset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      superset :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY State_symptom_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.symptom_effect :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.symptom_cause :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      symptom_cause :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      symptom_effect :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (State_definition_arm); *)
ENTITY Xor_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Digital_document_definition
  SUBTYPE OF (Document_definition);
  files : SET[0:?] OF Digital_file;
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Document_definition
  SUPERTYPE OF (ONEOF (
              DIGITAL_DOCUMENT_DEFINITION,
              PHYSICAL_DOCUMENT_DEFINITION))
  SUBTYPE OF (Product_view_definition);

  (* removed : SELF\Product_view_definition.description :  STRING *)
  SELF\Product_view_definition.defined_version : Document_version;  -- associated_document_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      associated_document_version : DOCUMENT_VERSION := SELF\Product_view_definition.defined_version;  -- DEFINED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      description : STRING := SELF\Product_view_definition.name;  -- NAME : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Document_location_identification
  SUBTYPE OF (External_source_identification);
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DOCUMENT_DEFINITION' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;
(* USED FROM (Document_definition_arm); *)
ENTITY Physical_document_definition
  SUBTYPE OF (Document_definition);
  components : SET[0:?] OF Hardcopy;
END_ENTITY;
(* USED FROM (Document_and_version_identification_arm); *)
ENTITY Document
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Document_and_version_identification_arm); *)
ENTITY Document_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Document;
END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Applied_independent_material_property SUBTYPE OF
    (Material_property, Applied_independent_property);
     SELF\Applied_independent_property.base_independent_property: General_material_property;
  END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Data_environment;
  environment_name : STRING;
  description : OPTIONAL STRING;
  environment_characterization: SET[1:?] OF dependent_or_independent_property_representation;
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_identification;
  material_name : STRING;
  items : SET[1:?] OF material_item_select;
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_property
  SUBTYPE OF (Assigned_property);
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_property_association;
  described_material : Material_identification;
  associated_property_value : Material_property_value_representation;
  definitional : OPTIONAL BOOLEAN;
 END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY Material_property_value_representation
  SUBTYPE OF (Property_definition_representation);
    environment_condition                                               : Data_environment;

    SELF\Property_definition_representation.definition : material_property_select;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : MATERIAL_PROPERTY_SELECT := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

 END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_usage_right;
  id : STRING;
  name : STRING;
  comment : OPTIONAL STRING;
  grants_right : SET[1:?] OF Information_right;
END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Anisotropic_material
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Braided_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Discontinuous_fiber_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Filament_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Isotropic_material
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Material_direction;
    material_orientation : Direction;
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Stock_core
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Stock_material 
    SUPERTYPE OF (ONEOF (
              ANISOTROPIC_MATERIAL,
              BRAIDED_ASSEMBLY,
              DISCONTINUOUS_FIBER_ASSEMBLY,
              FILAMENT_ASSEMBLY,
              ISOTROPIC_MATERIAL,
              STOCK_CORE,
              WOVEN_ASSEMBLY))
  SUBTYPE OF (Part_view_definition);
      property                                     : SET [1:?] OF Material_property_value_representation;
      reference_direction                          : OPTIONAL Material_direction;
      specified_material                           : Material_specification;
  END_ENTITY;
(* USED FROM (Stock_material_arm); *)
  ENTITY Woven_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Binary_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operands: LIST [2:2] OF Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Environment;
	syntactic_representation: Generic_variable;
	semantics: Variable_semantics;
END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_approval_status
    SUBTYPE OF (Approval_status);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Approval_status.status_name IN Pre_defined_approval_status_types);
  END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_literal
 ABSTRACT SUPERTYPE

SUBTYPE OF (Simple_generic_expression);
END_ENTITY; 
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_variable
 ABSTRACT SUPERTYPE OF (
                        VARIABLE)

SUBTYPE OF (Simple_generic_expression);
INVERSE
	interpretation : Environment FOR syntactic_representation;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Multiple_arity_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operands: LIST [2:?] OF Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Simple_generic_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        GENERIC_LITERAL,
                        GENERIC_VARIABLE))

SUBTYPE OF (Generic_expression);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Unary_generic_expression
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_expression);
	operand: Generic_expression;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Variable
 ABSTRACT SUPERTYPE

SUBTYPE OF(Generic_variable);
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Variable_semantics
 ABSTRACT SUPERTYPE;
END_ENTITY;
(* USED FROM (Product_relationship_arm); *)
ENTITY Product_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_product : Product;
  related_product : Product;
END_ENTITY;
(* USED FROM (Part_and_version_identification_arm); *)
ENTITY Part
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Part_and_version_identification_arm); *)
ENTITY Part_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Part;
END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Assembled_part_association
    SUBTYPE OF (Assembly_component_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Assembly_definition;
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Assembly_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Effectivity_controlled_assembly_definition
    SUBTYPE OF (Assembly_definition);
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Geometrical_relationship
    SUBTYPE OF (Part_definition_relationship);
      definition_placement: Geometric_model_relationship_with_transformation;
    DERIVE
      SELF\View_definition_relationship.relation_type : STRING := 'geometrical relationship';
  END_ENTITY;
(* USED FROM (Item_definition_structure_arm); *)
  ENTITY Part_definition_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Part_view_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
  END_ENTITY;
(* USED FROM (Effectivity_application_arm); *)
ENTITY Effectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;
(* USED FROM (Effectivity_application_arm); *)
ENTITY Ineffectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Dated_effectivity
  SUBTYPE OF (Effectivity);
  start_bound : OPTIONAL date_or_event;
  end_bound   : OPTIONAL date_or_event;
WHERE
  WR1: EXISTS(start_bound) OR EXISTS(end_bound);
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Effectivity
  SUPERTYPE OF (ONEOF (
              SERIAL_EFFECTIVITY,
              DATED_EFFECTIVITY,
              LOT_EFFECTIVITY,
              TIME_INTERVAL_EFFECTIVITY));
  id             : STRING;
  name           : STRING;
  description    : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Effectivity_relationship;
  relation_type : STRING;
  description   : OPTIONAL STRING;
  relating_effectivity  : Effectivity;
  related_effectivity  : Effectivity;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Lot_effectivity
  SUBTYPE OF (Effectivity);
  lot_id    : STRING;
  lot_size  : Value_with_unit;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Serial_effectivity
  SUBTYPE OF (Effectivity);
  start_id : STRING;
  end_id   : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Effectivity_arm); *)
ENTITY Time_interval_effectivity
  SUBTYPE OF (Effectivity);
  effectivity_period : Time_interval;
END_ENTITY;   
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : Time_interval;
  related_time_interval : Time_interval;
END_ENTITY;
(* USED FROM (Time_interval_arm); *)
ENTITY Time_interval_with_bounds
  SUBTYPE OF (Time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL Duration;
WHERE
  WR1: NOT (EXISTS (secondary_bound) AND EXISTS (duration_from_primary_bound));
  WR2: EXISTS (primary_bound) OR EXISTS (secondary_bound);
END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Definition_based_product_occurrence
    SUBTYPE OF (Product_occurrence);
      derived_from: Part_view_definition;
    WHERE
      WR1: SELF\Product_view_definition.defined_version = derived_from.defined_version;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_work_request_status
    SUBTYPE OF (Work_request_status);
    WHERE
      WR1: SELF\Work_request_status.status IN Pre_defined_work_request_status_types;
  END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Product_occurrence_with_quantity
     ABSTRACT SUPERTYPE OF (ONEOF (
                        QUANTIFIED_INSTANCE,
                        SELECTED_INSTANCE))
  SUBTYPE OF (Product_occurrence);
      occurrence_quantity : OPTIONAL extended_value_with_unit;
  END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Quantified_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      SELF\Product_occurrence_with_quantity.occurrence_quantity : Value_with_unit;
  END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Selected_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      quantity_criterion : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Single_instance
    SUBTYPE OF (Product_occurrence);
  END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Specification_based_product_occurrence
    SUBTYPE OF (Product_occurrence);
      SELF\Product_view_definition.defined_version : Specification_based_part_version;
  END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Specification_based_part_version
    SUBTYPE OF (Specification_based_product_version, Part_version);
  END_ENTITY;
(* USED FROM (Product_structure_arm); *)
ENTITY Alternate_part_relationship
  SUBTYPE OF (Alternate_product_relationship);
  SELF\Alternate_product_relationship.alternate_product : Part;
  SELF\Alternate_product_relationship.base_product : Part;
END_ENTITY;
(* USED FROM (Assembly_technology_arm); *)
  ENTITY Assembled_with_bonding
    SUBTYPE OF (Assembly_joint);
      default_bond_definition : Assembly_bond_definition;
    WHERE
      WR1 : SELF\Assembly_joint.assembly_feature_1.definition :=: default_bond_definition.bonded_feature_1;
      WR2 : SELF\Assembly_joint.assembly_feature_2.definition :=: default_bond_definition.bonded_feature_2;
  END_ENTITY;
(* USED FROM (Assembly_technology_arm); *)
  ENTITY Assembled_with_fasteners
    SUBTYPE OF (Assembly_joint);
--      SELF\Assembly_joint.associated_assembly : Assembly_group_component;
  END_ENTITY;
(* USED FROM (Assembly_technology_arm); *)
  ENTITY Assembly_bond_definition;
      name                                    : STRING;   
--      analytical_assembly_bond_representation : OPTIONAL SET[1:?] OF Analytical_model_application;
      associated_definition                   : Generic_product_view_definition_reference;
      bonded_feature_1                        : bond_feature;
      bonded_feature_2                        : bond_feature;
    INVERSE
      default_shape : SET[0:1] OF default_assembly_bond_shape_model FOR shape_characterized_definition;
	  bond_category	: External_source_identification FOR item;
	  bond_material : material_identification FOR items;      
    UNIQUE
      UR1 : name;
      UR2 : associated_definition;
    WHERE
      WR1 : bonded_feature_1 <> bonded_feature_2;
      WR2 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (bond_material);
      WR3 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF (bonded_feature_1)) XOR
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF(bonded_feature_2)));
      WR4 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF (bonded_feature_1)) XOR 
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF(bonded_feature_2)));
      WR5 : NOT((('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN
        TYPEOF (bonded_feature_1)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2)))
        XOR 
        (('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN TYPEOF(bonded_feature_2)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2))));      
  END_ENTITY;
(* USED FROM (Test_select_product_arm); *)
  ENTITY Test_select_product
    SUBTYPE OF (Alternate_product_relationship);
  WHERE
    WR1: NOT EXISTS (SELF\Alternate_product_relationship.criteria);
  END_ENTITY;
(* USED FROM (Assembly_technology_arm); *)
  ENTITY Component_mating_constraint_condition;
      name                          : STRING;  
      constraining_joint            : SET[1:3] OF Assembly_joint;
      constrained_degree_of_freedom : SET[1:6] OF degree_of_freedom;
      of_context                    : Part_view_definition; -- Part_design_view;
    UNIQUE
      UR1 : name,
 of_context;
  END_ENTITY;
(* USED FROM (Analysis_assignment_arm); *)
ENTITY Analysis_assignment;
  analysis : Analysis_version;
  applied_to : analysed_item;
END_ENTITY;
(* USED FROM (Assembly_technology_arm); *)
  ENTITY Default_assembly_bond_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_definition : Assembly_bond_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
      WR2 : SIZEOF(USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION'))=0;      
  END_ENTITY;
(* USED FROM (Component_feature_arm); *)
  ENTITY Component_feature
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Definitional_shape_element);
      definition           : OPTIONAL General_part_feature;

      SELF\Shape_element.containing_shape : Assembly_component;  -- associated_component : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      associated_component : ASSEMBLY_COMPONENT := SELF\Shape_element.containing_shape;  -- CONTAINING_SHAPE : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

    UNIQUE
      UR1 : definition,associated_component;
      UR2 : SELF\Shape_element.element_name, associated_component;
  END_ENTITY;
(* USED FROM (Component_feature_arm); *)
  ENTITY Component_feature_joint
      ABSTRACT SUPERTYPE
  SUBTYPE OF (Component_feature_relationship, Shape_element);

    (* removed : SELF\Component_feature_relationship.feature_1 :  COMPONENT_FEATURE *)

    (* removed : SELF\Component_feature_relationship.feature_2 :  COMPONENT_FEATURE *)

    (* removed : SELF\Shape_element.associated_definition :  ITEM_SHAPE *)
    DERIVE
      associated_definition : ITEM_SHAPE := SELF\Shape_element.containing_shape;  -- CONTAINING_SHAPE : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      feature_1 : COMPONENT_FEATURE := SELF\Component_feature_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      feature_2 : COMPONENT_FEATURE := SELF\Component_feature_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
 WHERE
      WR1 : feature_1 <> feature_2;
      WR2 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION' in TYPEOF(associated_definition);
      WR3 : associated_definition :=: feature_1\Shape_element.containing_shape;      
      WR4 : associated_definition :=: feature_2\Shape_element.containing_shape;      
  END_ENTITY;
(* USED FROM (Component_feature_arm); *)
  ENTITY Component_feature_make_from_relationship
		SUBTYPE OF (Component_feature_relationship);

      (* removed : SELF\Shape_element_relationship.reusable_feature :  COMPONENT_FEATURE *)

      (* removed : SELF\Shape_element_relationship.resultant_feature :  COMPONENT_FEATURE *)
    DERIVE
      resultant_feature : COMPONENT_FEATURE := SELF\Shape_element_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      reusable_feature : COMPONENT_FEATURE := SELF\Shape_element_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Component_feature_arm); *)
  ENTITY Component_feature_relationship
    SUPERTYPE OF (ONEOF (
              COMPONENT_FEATURE_JOINT,
              COMPONENT_FEATURE_MAKE_FROM_RELATIONSHIP))
 	SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Component_feature;  	
      SELF\Shape_element_relationship.related  : Component_feature;
  END_ENTITY;
(* USED FROM (Component_feature_arm); *)
  ENTITY Component_terminal
      ABSTRACT SUPERTYPE
  SUBTYPE OF (Component_feature);
      local_swappable  : OPTIONAL BOOLEAN;
      global_swappable : OPTIONAL BOOLEAN;
      swap_code        : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
ENTITY Requirement_assignment;
  id : STRING;
  description : OPTIONAL STRING;
  assigned_requirement : Requirement_view_definition;
  assigned_to : requirement_assignment_item;
END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
ENTITY Requirement_satisfied_by;
  id : STRING;
  description : OPTIONAL STRING;
  satisfied_by : requirement_satisfaction_item;
  satisfied_requirement : Requirement_view_definition;
  related_assignment : OPTIONAL Requirement_assignment;
END_ENTITY;
(* USED FROM (Requirement_assignment_arm); *)
ENTITY Requirement_source;
  id : STRING;
  description : OPTIONAL STRING;
  source : requirement_source_item;
  sourced_requirement : Requirement_view_definition;
END_ENTITY;
(* USED FROM (Physical_component_feature_arm); *)
  ENTITY Physical_component_feature
    SUBTYPE OF (Component_feature);
  END_ENTITY;
(* USED FROM (Physical_component_feature_arm); *)
  ENTITY Physical_component_terminal
    SUBTYPE OF (Component_terminal,
 			Physical_component_feature);

      (* removed : SELF\Shape_element.terminal_type :  STRING *)
    DERIVE
      terminal_type : STRING := SELF\shape_element.description;  -- DESCRIPTION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Component_grouping_arm); *)
  ENTITY Array_placement_group
     ABSTRACT SUPERTYPE OF (ONEOF (
                        LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT,
                        RECTANGULAR_ARRAY_PLACEMENT_GROUP_COMPONENT))
  SUBTYPE OF (Assembly_group_component);
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Annotation_plane
    SUBTYPE OF (Annotation_element);
      elements : OPTIONAL SET[1:?] OF annotation_plane_element;
      SELF\Styled_element.element : plane_or_planar_box;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Annotation_fill_area 
    SUBTYPE OF (Detailed_geometric_model_element); 
      boundaries : SET [1:?] OF Curve; 
  END_ENTITY; 
(* USED FROM (Elementary_function_arm); *)
   ENTITY Minus_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Minimum_function
   SUBTYPE OF (Multiple_arity_function_call);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Maximum_function
   SUBTYPE OF (Multiple_arity_function_call);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Log_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Advanced_boundary_representation_arm); *)
ENTITY Closed_shell
  SUBTYPE OF (Connected_face_set);
END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Log2_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Dimension_curve 
    SUBTYPE OF (Annotation_curve);
      terminator : SET[0:2] OF Terminator;
  END_ENTITY;
(* USED FROM (Topologically_bounded_surface_arm); *)
ENTITY Advanced_face
  SUBTYPE OF (Face_surface);
END_ENTITY;
(* USED FROM (Solid_model_arm); *)
ENTITY Solid_model
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
ENTITY Closed_composite_curve
  SUBTYPE OF (Composite_curve);
END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
ENTITY Composite_curve
  SUBTYPE OF (Bounded_curve);
  curve_segment : LIST[1:?] OF UNIQUE Composite_curve_segment;
END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
ENTITY Composite_curve_segment;
  transition   : curve_transition_code;
  same_sense   : BOOLEAN;
  segment_curve : Bounded_curve;
INVERSE
  using_curves : SET[1:?] OF Composite_curve FOR curve_segment;
END_ENTITY;
(* USED FROM (Basic_curve_arm); *)
ENTITY Trimmed_curve
  SUBTYPE OF (Bounded_curve);
  basis_curve : Curve;
  start_point : Cartesian_point;
  end_point : Cartesian_point;
END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY B_spline_curve
   ABSTRACT SUPERTYPE OF (ONEOF (
                        CURVE_WITH_EXPLICIT_KNOTS,
                        CURVE_WITH_IMPLICIT_KNOTS)
                        ANDOR 
                        RATIONAL_B_SPLINE_CURVE)
  SUBTYPE OF (Bounded_curve);        
  degree : INTEGER;
  control_points : LIST [2:?] OF Cartesian_point;
  closed : LOGICAL;
 WHERE
  WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));
END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY B_spline_surface
   ABSTRACT SUPERTYPE OF (ONEOF (
                        SURFACE_WITH_EXPLICIT_KNOTS,
                        SURFACE_WITH_IMPLICIT_KNOTS)
                        ANDOR 
                        RATIONAL_B_SPLINE_SURFACE)
  SUBTYPE OF (Bounded_surface);        
  u_degree : INTEGER;
  v_degree : INTEGER;
  control_points : LIST [2:?] OF LIST [2:?] OF Cartesian_point;
  u_closed : LOGICAL;
  v_closed : LOGICAL;
 WHERE
  WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));

END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY Curve_with_explicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_multiplicities : LIST [2:?] OF INTEGER;
   knot_values : LIST [2:?] OF parameter_value;
 WHERE
  WR1: SIZEOF(knot_multiplicities) = SIZEOF(knot_values);
END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY Curve_with_implicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_type : knot_specification;
 END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Leader 
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Leader_directed_callout
    SUBTYPE OF (Draughting_callout);
      leader : Leader;
    WHERE
      WR1: leader IN SELF\Draughting_callout.contents;
  END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY Surface_with_explicit_knots
 SUBTYPE OF (B_spline_surface);
   u_knot_multiplicities : LIST [2:?] OF INTEGER;
   u_knot_values : LIST [2:?] OF parameter_value;
   v_knot_multiplicities : LIST [2:?] OF INTEGER;
   v_knot_values : LIST [2:?] OF parameter_value;
  WHERE
  WR1: SIZEOF(u_knot_multiplicities) = SIZEOF(u_knot_values);
  WR2: SIZEOF(v_knot_multiplicities) = SIZEOF(v_knot_values);
 END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY Surface_with_implicit_knots
 SUBTYPE OF (B_spline_surface);
   knot_type : knot_specification;
 END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Projection_curve 
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;
(* USED FROM (Composite_surface_arm); *)
ENTITY Surface_patch;
  parent_surface : Bounded_surface;
  u_transition   : surface_transition_code;
  v_transition   : surface_transition_code;
  u_sense        : BOOLEAN;
  v_sense        : BOOLEAN;
INVERSE
  using_surfaces : BAG[1:?] OF Rectangular_composite_surface FOR segments;
END_ENTITY;
(* USED FROM (Composite_surface_arm); *)
ENTITY Trimmed_surface
  SUBTYPE OF (Bounded_surface);
  basis_surface : surface;
  u1            : parameter_value;
  u2            : parameter_value;
  v1            : parameter_value;
  v2            : parameter_value;
  usense        : BOOLEAN;
  vsense        : BOOLEAN;
WHERE
  WR1: u1 <> u2;
  WR2: v1 <> v2;
END_ENTITY;
(* USED FROM (Manifold_surface_arm); *)
  ENTITY Manifold_surface_shape_representation
    SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF
        manifold_surface_shape_representation_item;
  END_ENTITY;
(* USED FROM (Manifold_surface_arm); *)
  ENTITY Open_shell
     SUBTYPE OF (Connected_face_set);
  END_ENTITY;
(* USED FROM (Manifold_surface_arm); *)
  ENTITY Shell_based_surface_model
    SUBTYPE OF (Detailed_geometric_model_element);
     boundary : SET[1: ?] OF Connected_face_set;
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Annotation_symbol
    SUBTYPE OF (Annotation_element);
      symbol_definition : symbol_definition_select;
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Dimension_curve_terminator
    SUBTYPE OF (Terminator_symbol);
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_result_with_judgement
    SUBTYPE OF(Data_quality_inspection_result);
      judgement : BOOLEAN;
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Dimension_symbol; 
  END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Exp_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Cos_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Integer_defined_function
    ABSTRACT SUPERTYPE
  SUBTYPE OF (Numeric_defined_function);
   END_ENTITY ;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Atan_function
   SUBTYPE OF (Binary_function_call);
   END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_report_measurement_association;
      relating_representation_item : Data_quality_measurement_requirement;
      related_representation_item  : Data_quality_inspection_report;
  END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Binary_function_call
    ABSTRACT SUPERTYPE OF (
                        ATAN_FUNCTION)
  SUBTYPE OF (Binary_numeric_expression);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Asin_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Acos_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_criterion_measurement_association;
      relating_representation_item : Data_quality_criterion;
      related_representation_item  : Data_quality_measurement_requirement;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_assessment_specification;
      description : STRING;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_criterion_assessment_association;
      criterion                : Data_quality_criterion;
      assessment_specification : Data_quality_assessment_specification;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_assessment_measurement_association;
      assessment_specification : Data_quality_criterion_assessment_association;
      measurement_requirement  : Data_quality_criterion_measurement_association;
    WHERE
      WR1 : SELF.measurement_requirement.relating_representation_item :=:
            SELF.assessment_specification.criterion;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_report_request
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SUMMARY_REPORT_REQUEST,
                        DETAILED_REPORT_REQUEST));
      description                 : STRING;
      criterion_of_report_request : Data_quality_criterion;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Summary_report_request
    SUBTYPE OF(data_quality_report_request);
      summary_report_request_type : summary_report_type;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Detailed_report_request
    SUBTYPE OF(data_quality_report_request);
      detailed_report_request_type : detailed_report_type;
      report_sequence              : preferred_ordering;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Detailed_report_request_with_number_of_data
    SUBTYPE OF(detailed_report_request);
      number_of_data : INTEGER;
    DERIVE
      SELF\detailed_report_request.detailed_report_request_type:detailed_report_type:= measured_element;
  END_ENTITY;
(* USED FROM (Product_data_quality_definition_arm); *)
  ENTITY Data_quality_definition;
      description : STRING;
  END_ENTITY;
(* USED FROM (Product_data_quality_definition_arm); *)
  ENTITY Data_quality_definition_representation_relationship;
      description         : STRING;
      definition          : Data_quality_definition;
      used_representation : used_quality_representation_select;
  END_ENTITY;
(* USED FROM (Product_data_quality_definition_arm); *)
  ENTITY Product_data_and_data_quality_relationship;
      description  : STRING;
      product_data : Product_view_definition;
      data_quality : Data_quality_definition;
  END_ENTITY;
(* USED FROM (Product_data_quality_definition_arm); *)
  ENTITY Software_for_data_quality_check;
      description      : STRING;
      software_name    : STRING;
      software_version : STRING;
      data_quality     : Data_quality_definition_representation_relationship;
  END_ENTITY;
(* USED FROM (Product_data_quality_definition_arm); *)
  ENTITY Data_quality_definition_relationship;
      description                      : STRING;
      relating_data_quality_definition : Data_quality_definition;
      related_data_quality_definition  : Data_quality_definition;
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension
     ABSTRACT SUPERTYPE OF (
                        DIMENSION_CALLOUT
                        ANDOR 
                        DIMENSION_VALUE)
  SUBTYPE OF (Draughting_element);
      id                : STRING;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_assessment_by_numerical_test
    SUBTYPE OF(Data_quality_assessment_specification);
      threshold : shape_data_quality_value_limit_type_select;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_value_range
    SUBTYPE OF(Measure_item);
      lower_limit : Numerical_item_with_unit;
      upper_limit : Numerical_item_with_unit;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_value_limit
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT,
                        SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT))
  SUBTYPE OF(Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
  WHERE
    WR1: SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_upper_value_limit
    SUBTYPE OF(Shape_data_quality_value_limit);
    WHERE
      WR1 : SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'maximum';
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_lower_value_limit
    SUBTYPE OF(Shape_data_quality_value_limit);
    WHERE
      WR1 : SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'minimum';
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_assessment_by_logical_test
    SUBTYPE OF(Data_quality_assessment_specification);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_criterion
    SUPERTYPE OF (ONEOF (
              ERRONEOUS_DATA,
              INAPT_DATA))
  SUBTYPE OF(Data_quality_criterion, Data_quality_measurement_requirement);
      assessment_specification : shape_data_quality_assessment_specification_select;
    WHERE
      WR1 : SIZEOF(USEDIN(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
            'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'+
            'CRITERION'
            )) = 0;
(* 2009.12.26 F.Tanaka
 Shape_data_quality_criterion WR2 has no meaning

      WR2 : SIZEOF(USEDIN(SELF,
                    'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATED_REPRESENTATION_ITEM')) = 0;
      WR3 : SIZEOF(USEDIN(SELF,
                    'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATING_REPRESENTATION_ITEM')) = 0;
*)
      WR2 : SIZEOF(USEDIN(SELF,
                    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATING_REPRESENTATION_ITEM')) = 0;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Erroneous_data
     ABSTRACT SUPERTYPE OF (ONEOF (
                        ERRONEOUS_TOPOLOGY,
                        ERRONEOUS_GEOMETRY,
                        ERRONEOUS_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP,
                        ERRONEOUS_MANIFOLD_SOLID_BREP))
  SUBTYPE OF(Shape_data_quality_criterion);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Erroneous_topology
     ABSTRACT SUPERTYPE OF (ONEOF (
                        OPEN_EDGE_LOOP,
                        OPEN_CLOSED_SHELL,
                        INCONSISTENT_ADJACENT_FACE_NORMALS,
                        DISCONNECTED_FACE_SET))
  SUBTYPE OF(Erroneous_data);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_suffix
    SUBTYPE OF (Draughting_element);
      suffix : Dimension_text;
    INVERSE
      parent : Structured_dimension_callout FOR suffix;
    WHERE
      WR1: suffix IN SELF\Draughting_callout.contents;
      WR2: suffix\Representation_item.name = 'suffix text';      
  END_ENTITY;    
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Open_closed_shell
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLOSED_SHELL']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inconsistent_adjacent_face_normals
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'CLOSED_OR_OPEN_SHELL_SELECT']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Disconnected_face_set
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Erroneous_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        INCONSISTENT_CURVE_TRANSITION_CODE,
                        ERRONEOUS_B_SPLINE_CURVE_DEFINITION,
                        INCONSISTENT_SURFACE_TRANSITION_CODE,
                        ERRONEOUS_B_SPLINE_SURFACE_DEFINITION))
  SUBTYPE OF(Erroneous_data);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inconsistent_curve_transition_code
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      angle_tolerance                                            : plane_angle_measure;
      curvature_ratio_tolerance                                  : ratio_measure;
      distance_tolerance                                         : length_measure;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPOSITE_CURVE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'COMPOSITE_CURVE_TRANSITION_LOCATOR']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Erroneous_b_spline_curve_definition
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE_WITH_EXPLICIT_KNOTS']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inconsistent_surface_transition_code
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      angle_tolerance                                            : plane_angle_measure;
      curvature_ratio_tolerance                                  : ratio_measure;
      distance_tolerance                                         : length_measure;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RECTANGULAR_COMPOSITE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'RECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Erroneous_b_spline_surface_definition
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE_WITH_EXPLICIT_KNOTS']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Erroneous_topology_and_geometry_relationship
     ABSTRACT SUPERTYPE OF (ONEOF (
                        INCONSISTENT_EDGE_AND_CURVE_DIRECTIONS,
                        INCONSISTENT_FACE_AND_SURFACE_NORMALS,
                        INCONSISTENT_FACE_AND_CLOSED_SHELL_NORMALS,
                        INTERSECTING_LOOPS_IN_FACE,
                        WRONGLY_PLACED_LOOP))
  SUBTYPE OF(Erroneous_data);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inconsistent_edge_and_curve_directions
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      distance_tolerance : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE') 
            ;
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE'])
            ;
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inconsistent_face_and_surface_normals
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inconsistent_face_and_closed_shell_normals
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Intersecting_loops_in_face
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Wrongly_placed_loop
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_BOUND']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Erroneous_manifold_solid_brep
     ABSTRACT SUPERTYPE OF (ONEOF (
                        WRONGLY_ORIENTED_VOID,
                        WRONGLY_PLACED_VOID,
                        INTERSECTING_SHELLS_IN_SOLID,
                        SOLID_WITH_WRONG_NUMBER_OF_VOIDS))
  SUBTYPE OF(Erroneous_data);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Wrongly_oriented_void
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ORIENTED_CLOSED_SHELL']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Wrongly_placed_void
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ORIENTED_CLOSED_SHELL']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Intersecting_shells_in_solid
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Solid_with_wrong_number_of_voids
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inapt_data
     ABSTRACT SUPERTYPE OF (ONEOF (
                        INAPT_TOPOLOGY,
                        INAPT_GEOMETRY,
                        INAPT_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP,
                        INAPT_MANIFOLD_SOLID_BREP))
  SUBTYPE OF(Shape_data_quality_criterion);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inapt_topology
     ABSTRACT SUPERTYPE OF (ONEOF (
                        FREE_EDGE,
                        NON_MANIFOLD_AT_EDGE,
                        NON_MANIFOLD_AT_VERTEX,
                        OVER_USED_VERTEX))
  SUBTYPE OF(Inapt_data);
  END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Derived_shape_element
   ABSTRACT SUPERTYPE OF (ONEOF (
                        APEX,
                        CENTRE_OF_SYMMETRY,
                        GEOMETRIC_CONTACT,
                        EXTENSION,
                        GEOMETRIC_INTERSECTION,
                        GEOMETRIC_ALIGNMENT,
                        PARALLEL_OFFSET,
                        PERPENDICULAR_TO,
                        TANGENT))
  SUBTYPE OF (Shape_element);
  derived_from : SET[1:?] OF Shape_element;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Non_manifold_at_edge
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Non_manifold_at_vertex
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VERTEX_POINT']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Over_used_vertex
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VERTEX_POINT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inapt_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        NEARLY_DEGENERATE_GEOMETRY,
                        DISCONTINUOUS_GEOMETRY,
                        SELF_INTERSECTING_GEOMETRY,
                        GEOMETRY_WITH_LOCAL_NEAR_DEGENERACY,
                        OVERLAPPING_GEOMETRY,
                        MULTIPLY_DEFINED_GEOMETRY,
                        GEOMETRY_WITH_LOCAL_IRREGULARITY,
                        OVERCOMPLEX_GEOMETRY))
  SUBTYPE OF(Inapt_data);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Nearly_degenerate_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SMALL_AREA_SURFACE,
                        SHORT_LENGTH_CURVE,
                        ENTIRELY_NARROW_SURFACE))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Small_area_surface
    SUBTYPE OF(Nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Short_length_curve
    SUBTYPE OF(Nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Entirely_narrow_surface
    SUBTYPE OF(Nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOUNDED_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Discontinuous_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        G1_DISCONTINUOUS_CURVE,
                        G2_DISCONTINUOUS_CURVE,
                        G1_DISCONTINUOUS_SURFACE,
                        G2_DISCONTINUOUS_SURFACE))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Unary_function_call
    ABSTRACT SUPERTYPE OF (ONEOF (
                        ABS_FUNCTION,
                        MINUS_FUNCTION,
                        SIN_FUNCTION,
                        COS_FUNCTION,
                        TAN_FUNCTION,
                        ASIN_FUNCTION,
                        ACOS_FUNCTION,
                        EXP_FUNCTION,
                        LOG_FUNCTION,
                        LOG2_FUNCTION,
                        LOG10_FUNCTION,
                        SQUARE_ROOT_FUNCTION))
  SUBTYPE OF (Unary_numeric_expression);
   END_ENTITY;
(* USED FROM (Event_assignment_arm); *)
ENTITY Event_assignment;
  assigned_event : Event;
  items : SET[1:?] OF event_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Median_surface
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY G2_discontinuous_surface
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold));
      WR3 : validate_measured_data_type(SELF,
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'PLANE_ANGLE_AND_RATIO_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR6 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_MEASURE'])
            ;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Self_intersecting_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SELF_INTERSECTING_CURVE,
                        SELF_INTERSECTING_SURFACE))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Self_intersecting_curve
    SUBTYPE OF(Self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      arc_length_separation_factor                               : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_CURVE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Self_intersecting_surface
    SUBTYPE OF(Self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      geodesic_separation_factor                                 : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Geometry_with_local_near_degeneracy
     ABSTRACT SUPERTYPE OF (ONEOF (
                        CURVE_WITH_SMALL_CURVATURE_RADIUS,
                        SHORT_LENGTH_CURVE_SEGMENT,
                        SURFACE_WITH_SMALL_CURVATURE_RADIUS,
                        SMALL_AREA_SURFACE_PATCH,
                        NARROW_SURFACE_PATCH,
                        INDISTINCT_SURFACE_KNOTS,
                        INDISTINCT_CURVE_KNOTS,
                        NEARLY_DEGENERATE_SURFACE_BOUNDARY,
                        NEARLY_DEGENERATE_SURFACE_PATCH))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Curve_with_small_curvature_radius
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Short_length_curve_segment
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_CURVE_SEGMENT']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Tangent
  SUPERTYPE OF (
              TANGENT_PLANE)
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Tangent_plane
  SUBTYPE OF (Tangent);
  WHERE
    WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : Project;
  related_project : Project;
END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Sin_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Tan_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Nearly_degenerate_surface_boundary
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_VALUE_RANGE'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'BOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Construction_geometry_arm); *)
  ENTITY Constructive_geometry
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items : SET [1:?] OF constructive_element_select;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Overlapping_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        PARTLY_OVERLAPPING_CURVES,
                        PARTLY_OVERLAPPING_SURFACES))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Partly_overlapping_curves
    SUBTYPE OF(Overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.TRIMMED_CURVE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.TRIMMED_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Partly_overlapping_surfaces
    SUBTYPE OF(Overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE_BOUNDED_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE_BOUNDED_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE']);
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY Presentation_set;
    areas : SET[1:?] OF View_area; 
  END_ENTITY;
(* USED FROM (Construction_geometry_arm); *)
  ENTITY Constructive_geometry_association;
      auxiliary_geometry : Constructive_geometry;
      base_geometry      : constructive_geometry_select;
      description        : STRING;
    WHERE
      WR1: auxiliary_geometry\Representation.context_of_items :=: base_geometry\Representation.context_of_items;
  END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET[0:?] OF Organization;
  planned_start_date : OPTIONAL date_or_event;
  planned_end_date : OPTIONAL date_or_event;
  actual_start_date : OPTIONAL date_or_date_time_select;
  actual_end_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_cartesian_points
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CARTESIAN_POINT','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CARTESIAN_POINT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY Presentation_set_assignment; 
    associated_presentation : Presentation_set;
    is_describing           : presentation_association_select;
  END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
UNIQUE
  UR1: language_code;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Geometry_with_local_irregularity
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXTREME_PATCH_WIDTH_VARIATION,
                        ZERO_SURFACE_NORMAL,
                        ABRUPT_CHANGE_OF_SURFACE_NORMAL))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Language_indication;
   considered_instance: string_select;
   considered_attribute: STRING;
   used_language:  Language;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Zero_surface_normal
    SUBTYPE OF(Geometry_with_local_irregularity);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Abrupt_change_of_surface_normal
    SUBTYPE OF(Geometry_with_local_irregularity);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      small_vector_tolerance                                     : length_measure;
      test_point_distance_tolerance                              : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Overcomplex_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXCESSIVELY_HIGH_DEGREE_CURVE,
                        EXCESSIVELY_HIGH_DEGREE_SURFACE,
                        SURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION,
                        CURVE_WITH_EXCESSIVE_SEGMENTS,
                        HIGH_DEGREE_LINEAR_CURVE,
                        HIGH_DEGREE_PLANAR_SURFACE,
                        HIGH_DEGREE_CONIC,
                        HIGH_DEGREE_AXI_SYMMETRIC_SURFACE))
  SUBTYPE OF(Inapt_geometry);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Excessively_high_degree_curve
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Excessively_high_degree_surface
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Surface_with_excessive_patches_in_one_direction
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Curve_with_excessive_segments
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_OR_COMPOSITE_CURVE_SELECT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY High_degree_linear_curve
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY High_degree_planar_surface
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY High_degree_conic
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY High_degree_axi_symmetric_surface
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inapt_topology_and_geometry_relationship
     ABSTRACT SUPERTYPE OF (ONEOF (
                        TOPOLOGY_RELATED_TO_NEARLY_DEGENERATE_GEOMETRY,
                        GEOMETRIC_GAP_IN_TOPOLOGY,
                        NON_SMOOTH_GEOMETRY_TRANSITION_ACROSS_EDGE,
                        TOPOLOGY_RELATED_TO_SELF_INTERSECTING_GEOMETRY,
                        STEEP_GEOMETRY_TRANSITION_ACROSS_EDGE,
                        TOPOLOGY_RELATED_TO_OVERLAPPING_GEOMETRY,
                        TOPOLOGY_RELATED_TO_MULTIPLY_DEFINED_GEOMETRY,
                        OVERCOMPLEX_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP))
  SUBTYPE OF(Inapt_data);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Topology_related_to_nearly_degenerate_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SHORT_LENGTH_EDGE,
                        SMALL_AREA_FACE,
                        ENTIRELY_NARROW_FACE))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Short_length_edge
    SUBTYPE OF(Topology_related_to_nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
             AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Small_area_face
    SUBTYPE OF(Topology_related_to_nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Entirely_narrow_face
    SUBTYPE OF(Topology_related_to_nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Geometric_gap_in_topology
     ABSTRACT SUPERTYPE OF (ONEOF (
                        GAP_BETWEEN_ADJACENT_EDGES_IN_LOOP,
                        GAP_BETWEEN_VERTEX_AND_BASE_SURFACE,
                        GAP_BETWEEN_VERTEX_AND_EDGE,
                        GAP_BETWEEN_EDGE_AND_BASE_SURFACE,
                        GAP_BETWEEN_PCURVES_RELATED_TO_AN_EDGE,
                        GAP_BETWEEN_FACES_RELATED_TO_AN_EDGE))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Gap_between_adjacent_edges_in_loop
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_LOOP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ORIENTED_EDGE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Gap_between_vertex_and_base_surface
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VERTEX_POINT',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_FACE_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Gap_between_vertex_and_edge
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VERTEX_POINT',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Gap_between_edge_and_base_surface
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_FACE_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Gap_between_pcurves_related_to_an_edge
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT_ON_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Gap_between_faces_related_to_an_edge
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Non_smooth_geometry_transition_across_edge
     ABSTRACT SUPERTYPE OF (ONEOF (
                        G1_DISCONTINUITY_BETWEEN_ADJACENT_FACES,
                        G2_DISCONTINUITY_BETWEEN_ADJACENT_FACES))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY G1_discontinuity_between_adjacent_faces
    SUBTYPE OF(Non_smooth_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY G2_discontinuity_between_adjacent_faces
    SUBTYPE OF(Non_smooth_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold));
      WR3 : validate_measured_data_type(SELF,
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'PLANE_ANGLE_AND_RATIO_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE']);
      WR6 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Topology_related_to_self_intersecting_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SELF_INTERSECTING_LOOP,
                        SELF_INTERSECTING_SHELL,
                        INTERSECTING_CONNECTED_FACE_SETS))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Self_intersecting_loop
    SUBTYPE OF(Topology_related_to_self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      arc_length_distance_factor                                 : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_LOOP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Self_intersecting_shell
    SUBTYPE OF(Topology_related_to_self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      geodesic_separation_factor                                 : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_FACE_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_FACE_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Intersecting_connected_face_sets
    SUBTYPE OF(Topology_related_to_self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_FACE_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_FACE_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Steep_geometry_transition_across_edge
     ABSTRACT SUPERTYPE OF (ONEOF (
                        STEEP_ANGLE_BETWEEN_ADJACENT_EDGES,
                        STEEP_ANGLE_BETWEEN_ADJACENT_FACES))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Steep_angle_between_adjacent_edges
    SUBTYPE OF(Steep_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_LOOP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ORIENTED_EDGE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Steep_angle_between_adjacent_faces
    SUBTYPE OF(Steep_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Topology_related_to_overlapping_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        PARTLY_OVERLAPPING_FACES,
                        PARTLY_OVERLAPPING_EDGES))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Partly_overlapping_faces
    SUBTYPE OF(Topology_related_to_overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Partly_overlapping_edges
    SUBTYPE OF(Topology_related_to_overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Topology_related_to_multiply_defined_geometry
     ABSTRACT SUPERTYPE OF (ONEOF (
                        MULTIPLY_DEFINED_FACES,
                        MULTIPLY_DEFINED_VERTICES,
                        MULTIPLY_DEFINED_EDGES))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_faces
    SUBTYPE OF(Topology_related_to_multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_vertices
    SUBTYPE OF(Topology_related_to_multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) AND
            ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VERTEX_POINT',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VERTEX_POINT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_edges
    SUBTYPE OF(Topology_related_to_multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Overcomplex_topology_and_geometry_relationship
     ABSTRACT SUPERTYPE OF (ONEOF (
                        UNUSED_PATCHES,
                        EDGE_WITH_EXCESSIVE_SEGMENTS,
                        FACE_SURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION))
  SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Unused_patches
    SUBTYPE OF(Overcomplex_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
             AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'B_SPLINE_SURFACE_STRIP']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Edge_with_excessive_segments
    SUBTYPE OF(Overcomplex_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Face_surface_with_excessive_patches_in_one_direction
    SUBTYPE OF(Overcomplex_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Inapt_manifold_solid_brep
     ABSTRACT SUPERTYPE OF (ONEOF (
                        PARTLY_OVERLAPPING_SOLIDS,
                        SMALL_VOLUME_SOLID,
                        MULTIPLY_DEFINED_SOLIDS,
                        ENTIRELY_NARROW_SOLID,
                        SOLID_WITH_EXCESSIVE_NUMBER_OF_VOIDS))
  SUBTYPE OF(Inapt_data);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Partly_overlapping_solids
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
             AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE']);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AREA_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Small_volume_solid
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VOLUME_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VOLUME_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VOLUME_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_solids
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP',
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Entirely_narrow_solid
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Solid_with_excessive_number_of_voids
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_summary_request_with_representative_value
    SUBTYPE OF(Summary_report_request);
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_criteria_representation_with_accuracy
    SUBTYPE OF(Shape_data_quality_criteria_representation);
      required_general_accuracy : SET [1:?] OF Shape_measurement_accuracy;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_measurement_accuracy;
      description : text;
      range       : shape_data_quality_value_limit_type_select;
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_criterion_and_accuracy_association;
      required_specific_accuracy   : Shape_measurement_accuracy;
      shape_data_quality_criterion : Shape_data_quality_criterion;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Expanded_uncertainty
    SUBTYPE OF (Standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY;
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Model_image_3d
    SUBTYPE OF (Detailed_geometric_model_element);
       is_displaying : presented_model_select; 
       source : Camera_model_d3;
       target : Planar_box;
  END_ENTITY;   
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Precision_qualifier;
     significant_digits : INTEGER;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Pre_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
    WHERE
      WR1: SELF\Type_qualifier.name IN pre_defined_type_qualifiers;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualified_numerical_item_with_unit 
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item); 
  END_ENTITY; 
(* USED FROM (Colour_arm); *)
ENTITY Externally_defined_colour
  SUBTYPE OF (Colour);
  source : STRING;
END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualitative_uncertainty
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : STRING; 
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Representation_with_uncertainty
    SUBTYPE OF (Representation);
    uncertainty : SET[1:?] OF Uncertainty_with_unit;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Standard_uncertainty
    SUPERTYPE OF (
              EXPANDED_UNCERTAINTY)
  SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Type_qualifier
      ABSTRACT SUPERTYPE OF ( ( 
                        PRE_DEFINED_TYPE_QUALIFIER )ANDOR( ONEOF (
                        EXTERNALLY_DEFINED_TYPE_QUALIFIER,
                        PRE_DEFINED_TYPE_QUALIFIER) )  ) ;
    name : STRING;
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Uncertainty_qualifier
    SUPERTYPE OF (ONEOF (
              STANDARD_UNCERTAINTY,
              QUALITATIVE_UNCERTAINTY));
      measure_name : STRING; 
      description  : STRING; 
  END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Value_format_type_qualifier;
     value_format_type : STRING;
    WHERE
     WR1: LENGTH(value_format_type) <= 80;
  END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Measure_item
    ABSTRACT SUPERTYPE OF (ONEOF (
                        MEASURE_ITEM_WITH_PRECISION,
                        NUMERICAL_ITEM_WITH_GLOBAL_UNIT,
                        NUMERICAL_ITEM_WITH_UNIT,
                        VALUE_LIST,
                        VALUE_RANGE,
                        VALUE_RANGE_WITH_GLOBAL_UNIT,
                        VALUE_SET,
                        VALUE_WITH_TOLERANCES) ) 
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))>0;
END_ENTITY;
(* USED FROM (Mechanical_design_shaded_presentation_arm); *)
  ENTITY Mechanical_design_shaded_styled_model  
    SUBTYPE OF (Styled_model);
  END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Numerical_item_with_unit
  SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY;
(* USED FROM (Measure_representation_arm); *)
ENTITY Property_value_representation
    SUPERTYPE OF (ONEOF (
               RANGE_CHARACTERISTIC,
               TOLERANCE_CHARACTERISTIC) ) 
      SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Appearance_assignment;
    appearance_components : SET[1:?] OF appearance_select;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Context_dependent_appearance_assignment
    SUBTYPE OF (Appearance_assignment);
      context_definition : appearance_context;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Context_dependent_over_riding_styled_element
    SUBTYPE OF (Over_riding_styled_element);
      context_definition : LIST [1:?] OF overriding_style_context;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Over_riding_styled_element
    SUBTYPE OF (Styled_element);
      over_ridden_element : Styled_element;
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Planar_box
    SUBTYPE OF (Detailed_geometric_model_element);
      size_in_x : length_measure;
      size_in_y : length_measure;
      placement : Axis_placement; 
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Styled_element
    SUBTYPE OF (Representation_item);
      appearance : styled_element_appearance;
      element : Detailed_geometric_model_element;
      invisible : BOOLEAN;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Composite_sheet_representation
    SUPERTYPE OF (ONEOF (
              FACE_BASED_SHEET_REPRESENTATION,
              GEOMETRIC_SHEET_REPRESENTATION))
  SUBTYPE OF (Constituent_shape_representation);
  END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Styled_model_replication 
    SUBTYPE OF (Representation_item); 
      replicated_model : Styled_model; 
      source : Axis_placement; 
      target : geometric_mapping_target; 
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Constituent_shape_representation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        THREE_D_GEOMETRY_SET,
                        COMPOSITE_SHEET_REPRESENTATION,
                        BEVELED_SHEET_REPRESENTATION))
  SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Excessive_use_of_groups
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GROUP']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Excessive_use_of_layers
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LAYER']);
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Flat_pattern_ply_shape
    SUBTYPE OF (Ply_shape);
      wrapup_origin_on_flat_pattern : Cartesian_point;
      wrapup_origin_on_surface      : Cartesian_point;
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Externally_conditioned_data_quality_criterion
    SUPERTYPE OF (ONEOF (
              VIOLATION_OF_AGREED_CONDITIONS_ON_SYSTEM_ENVIRONMENT,
              MISCELLANEOUS_VIOLATION,
              USE_OF_RESTRICTED_FUNCTIONALITY))
  SUBTYPE OF(Data_quality_criterion,Data_quality_measurement_requirement);
    WHERE
      WR1 : SIZEOF(USEDIN(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
            'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'+
            'CRITERION'
            )) = 0;
      WR2 : SIZEOF(USEDIN(SELF,
                    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATING_REPRESENTATION_ITEM')) = 0;
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Inappropriate_element_visibility
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STYLED_ELEMENT']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Inappropriate_use_of_layer
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
    ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LAYER']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Inconsistent_element_reference
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
    ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION_ITEM']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Miscellaneous_violation
     ABSTRACT SUPERTYPE OF (ONEOF (
                        INAPPROPRIATE_ELEMENT_VISIBILITY,
                        INCONSISTENT_ELEMENT_REFERENCE,
                        NON_REFERENCED_COORDINATE_SYSTEM,
                        UNUSED_SHAPE_ELEMENT,
                        WRONG_ELEMENT_NAME))
  SUBTYPE OF(Externally_conditioned_data_quality_criterion);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Non_agreed_accuracy_parameter_usage
    SUBTYPE OF(Violation_of_agreed_conditions_on_system_environment);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
     ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERICAL_REPRESENTATION_CONTEXT']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY  Non_agreed_scale_usage
    SUBTYPE OF(Violation_of_agreed_conditions_on_system_environment);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,
     ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CARTESIAN_TRANSFORMATION_3D']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Non_agreed_unit_usage
    SUBTYPE OF(Violation_of_agreed_conditions_on_system_environment);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,
     ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERICAL_REPRESENTATION_CONTEXT']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Non_referenced_coordinate_system
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AXIS_PLACEMENT']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Unused_shape_element
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION_ITEM']);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Use_of_restricted_functionality
     ABSTRACT SUPERTYPE OF (ONEOF (
                        DISALLOWED_ASSEMBLY_RELATIONSHIP_USAGE,
                        EXCESSIVE_USE_OF_GROUPS,
                        EXCESSIVE_USE_OF_LAYERS,
                        INAPPROPRIATE_USE_OF_LAYER))
  SUBTYPE OF(Externally_conditioned_data_quality_criterion);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Violation_of_agreed_conditions_on_system_environment
     ABSTRACT SUPERTYPE OF (ONEOF (
                        NON_AGREED_ACCURACY_PARAMETER_USAGE,
                        NON_AGREED_SCALE_USAGE,
                        NON_AGREED_UNIT_USAGE))
  SUBTYPE OF(Externally_conditioned_data_quality_criterion);
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Wrong_element_name
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION_ITEM']);
  END_ENTITY;
(* USED FROM (Document_assignment_arm); *)
ENTITY Document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : SET[1:?] OF documented_element_select;
  role : STRING;
END_ENTITY;
(* USED FROM (Document_assignment_arm); *)
ENTITY Partial_document_assignment
  SUBTYPE OF (Document_assignment);
  document_portion : STRING;
END_ENTITY;
(* USED FROM (Group_arm); *)
ENTITY Group;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  elements : SET[0:?] OF groupable_item;
  membership_meaning : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Group_arm); *)
ENTITY Group_relationship;
  description : OPTIONAL STRING;
  relation_type : STRING;
  relating_group : Group;
  related_group : Group;
END_ENTITY;
(* USED FROM (Layer_assignment_arm); *)
  ENTITY Layer;
    id               : STRING;
    description      : STRING;
    layered_elements : SET[1:?] OF Representation_item;
  END_ENTITY;
(* USED FROM (Layer_assignment_arm); *)
  ENTITY Structuring_method_hierarchy;
    relating : structuring_method_select;
    related  : Group;
  END_ENTITY;
(* USED FROM (Explicit_constraints_arm); *)
ENTITY Defined_constraint 
   ABSTRACT SUPERTYPE OF (
                        EQUAL_PARAMETER_CONSTRAINT)
  SUBTYPE OF (Explicit_constraint);
END_ENTITY; 
(* USED FROM (Explicit_constraints_arm); *)
ENTITY Equal_parameter_constraint
  SUBTYPE OF (Defined_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF variational_parameter_select;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF variational_parameter_select;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.constrained_elements +
    SELF\Explicit_constraint.reference_elements) >= 2;
END_ENTITY;
(* USED FROM (Explicit_constraints_arm); *)
ENTITY Explicit_constraint
   ABSTRACT SUPERTYPE OF (ONEOF (
                        DEFINED_CONSTRAINT,
                        FREE_FORM_ASSIGNMENT,
                        FREE_FORM_RELATION))
  SUBTYPE OF (Variational_representation_item); 
  description : OPTIONAL STRING;
  constrained_elements : SET[1:?] OF Representation_item;
  reference_elements   : SET[0:?] OF Representation_item;
WHERE
  WR1: SIZEOF(constrained_elements * reference_elements) = 0;
END_ENTITY;
(* USED FROM (Explicit_constraints_arm); *)
ENTITY Free_form_assignment
  SUBTYPE OF (Explicit_constraint);
   SELF\Explicit_constraint.constrained_elements : 
     SET[1:?] OF variational_parameter_select;
   SELF\Explicit_constraint.reference_elements   : 
    SET[1:?] OF variational_parameter_select;
   constraining_expression : Expression;
END_ENTITY; 
(* USED FROM (Explicit_constraints_arm); *)
ENTITY Free_form_relation
  SUBTYPE OF (Explicit_constraint);
    SELF\Explicit_constraint.constrained_elements : 
      SET[1:?] OF variational_parameter_select;
    SELF\Explicit_constraint.reference_elements   : 
      SET[0:?] OF variational_parameter_select;
   constraining_expression : Boolean_expression;
END_ENTITY; 
(* USED FROM (Geometrically_bounded_surface_arm); *)
ENTITY Surface_set
  SUBTYPE OF (Detailed_geometric_model_element);
  surface_elements : SET [1: ?] OF Surface;
END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY Concat_expression
 	SUBTYPE OF (String_expression, Multiple_arity_generic_expression);
 	SELF\Multiple_arity_generic_expression.operands: LIST [2 : ?] OF String_expression;
 	END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY Format_function
 	SUBTYPE OF (String_expression, Binary_generic_expression);
 	DERIVE
 	value_to_format: Generic_expression:=SELF\Binary_generic_expression.operands[1];
 	format_string:Generic_expression:=SELF\Binary_generic_expression.operands[2];
 	WHERE
 	WR1: (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION')
 	IN TYPEOF(value_to_format))
 	AND (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION')
 	IN TYPEOF(format_string));
 	END_ENTITY;
(* USED FROM (Shell_based_wireframe_arm); *)
ENTITY Shell_based_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY Like_expression
 	SUBTYPE OF (Comparison_expression);
 	WHERE
 	WR1: ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
 	IN TYPEOF(SELF\Comparison_expression.operands[1])) AND
 	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
 	IN TYPEOF(SELF\Comparison_expression.operands[2]));
 	END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY Simple_string_expression
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        STRING_LITERAL,
                        STRING_VARIABLE))
 	SUBTYPE OF (String_expression, Simple_generic_expression);
 	END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY Sql_mappable_defined_function
		 ABSTRACT SUPERTYPE
		SUBTYPE OF (Defined_function);
        END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY String_defined_function
 	 ABSTRACT SUPERTYPE
 	SUBTYPE OF (Defined_function, String_expression);
 	END_ENTITY ;
(* USED FROM (Expression_arm); *)
 	ENTITY String_expression
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        SIMPLE_STRING_EXPRESSION,
                        INDEX_EXPRESSION,
                        SUBSTRING_EXPRESSION,
                        CONCAT_EXPRESSION,
                        FORMAT_FUNCTION,
                        STRING_DEFINED_FUNCTION))
 	SUBTYPE OF (Expression);
 	END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY String_literal
 	SUBTYPE OF (Simple_string_expression, Generic_literal);
 	the_value: STRING;
 	END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY String_variable
 	SUBTYPE OF (Simple_string_expression, Variable);
 	END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY Substring_expression
 	SUBTYPE OF (String_expression, Multiple_arity_generic_expression);
 	
 	DERIVE
 	operand:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[1];
 	index1:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[2];
 	index2:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[3];
 	WHERE
 	WR1: ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
 	IN TYPEOF(operand))
 	AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION'
 	IN TYPEOF(index1))
 	AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION'
 	IN TYPEOF(index2));
 	WR2: SIZEOF(SELF\Multiple_arity_generic_expression.operands)=3;
 	WR3: Is_int_expr (index1);
 	WR4: Is_int_expr (index2);
 	END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Auxiliary_geometric_representation_item
  SUBTYPE OF (Detailed_geometric_model_element, 
              Variational_representation_item);
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Bound_parameter_environment;
   syntactic_representation : Bound_variational_parameter;
   semantics : Instance_attribute_reference;
END_ENTITY; 
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Bound_variational_parameter
 SUBTYPE OF (Variational_representation_item, Maths_variable);
   parameter_description : OPTIONAL STRING; 
 DERIVE
   SELF\Maths_variable.name : STRING := SELF\Representation_item.name;
 INVERSE
    interpretation : Bound_parameter_environment for syntactic_representation;
 END_ENTITY; 
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Explicit_procedural_geometric_representation_item_relationship;
      relating_item : Procedural_shape_representation_sequence; 
      related_item  : Detailed_geometric_model_element;
    WHERE
      WR1 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROCEDURAL_SHAPE_REPRESENTATION_SEQUENCE' 
            IN TYPEOF(related_item)); 
  END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Generated_finite_numeric_space
  SUBTYPE OF (Maths_space);
  start_value      : NUMBER;
  increment_value  : NUMBER;
  increments : maths_integer;
DERIVE
  members : SET [2:?] OF NUMBER 
    := make_numeric_set(start_value, increment_value, increments); 
WHERE
  WR1: increment_value <> 0.0;
  WR2: increments > 0;
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Instance_attribute_reference;
  attribute_name  : attribute_identifier;
  owning_instance : Representation_item;
END_ENTITY; 
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Maths_variable;
  name         : STRING;
  values_space : Maths_space;
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Unbound_parameter_environment;
     syntactic_representation : Unbound_variational_parameter;
     semantics : Unbound_variational_parameter_semantics;
END_ENTITY; 
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Unbound_variational_parameter_semantics;
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Unbound_variational_parameter
  SUBTYPE OF (Variational_representation_item, Maths_variable);
   parameter_description : OPTIONAL STRING; 
   parameter_current_value : maths_value;
DERIVE
  SELF\Maths_variable.name : STRING := SELF\Representation_item.name;
INVERSE
   interpretation : Unbound_parameter_environment for syntactic_representation;
END_ENTITY; 
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Procedural_shape_representation_sequence
    SUBTYPE OF (Detailed_geometric_model_element);
      elements            : LIST [1:?] OF shape_model_element;
      suppressed_elements : SET[0:?] OF shape_model_element;
      rationale           : STRING;
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY User_selected_shape_elements
    SUBTYPE OF(Representation_item);
      selected_items : SET[1:?] OF shape_model_element; 
  END_ENTITY;
(* USED FROM (Alias_identification_arm); *)
  ENTITY Alias_identification
    SUBTYPE OF (Identification_assignment);
      SELF\Identification_assignment.items : SET [1:?] OF alias_identification_item;
    DERIVE
      SELF\Identification_assignment.role : STRING := 'alias';
  END_ENTITY;
(* USED FROM (Primitive_solids_arm); *)
ENTITY Circular_cone
   SUBTYPE OF (Detailed_geometric_model_element);
   axis_direction : Direction;
   axis_point : Cartesian_point;
   height     : length_measure;
   radius     : length_measure;
   semi_angle : plane_angle_measure;
 WHERE
   WR1: radius >= 0.0;
   WR2 : height > 0.0;
 END_ENTITY;
(* USED FROM (Primitive_solids_arm); *)
 ENTITY Circular_cylinder
   SUBTYPE OF (Detailed_geometric_model_element);
   axis_direction : Direction;
   axis_point : Cartesian_point;
   height     : length_measure;
   radius     : length_measure;
  WHERE
   WR1: radius > 0.0;
   WR2: height > 0.0; 
 END_ENTITY;
(* USED FROM (Primitive_solids_arm); *)
 ENTITY Sphere
   SUBTYPE OF (Detailed_geometric_model_element);
   radius : length_measure;
   centre : Cartesian_point;
 WHERE
    WR1: radius > 0.0;
 END_ENTITY;
(* USED FROM (Primitive_solids_arm); *)
ENTITY Rectangular_block
   SUBTYPE OF (Detailed_geometric_model_element);
   corner_location : Axis_placement_3d;
   xlength   : length_measure;
   width     : length_measure;
   height    : length_measure;
 WHERE
    WR1: xlength > 0.0;
    WR2: width > 0.0;
    WR3: height > 0.0;
 END_ENTITY;
(* USED FROM (Primitive_solids_arm); *)
ENTITY Torus
   SUBTYPE OF (Detailed_geometric_model_element);
   axis_direction : Direction;
   axis_point : Cartesian_point;
   radius       : length_measure;
   minor_radius : length_measure;
 WHERE
   WR1: radius > minor_radius;
   WR2: minor_radius > 0.0;
 END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Axis1_placement
    SUBTYPE OF (Detailed_geometric_model_element);
      axis     : Direction;
      position : Cartesian_point;
  END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Extruded_solid
    SUBTYPE OF (Swept_solid);
      depth              : length_measure;
      extruded_direction : Direction;
  END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Solid_of_revolution
    SUBTYPE OF (Swept_solid);
      angle : plane_angle_measure;
      axis  : Axis1_placement;
  END_ENTITY;
(* USED FROM (Swept_solid_arm); *)
  ENTITY Swept_solid
    SUPERTYPE OF (ONEOF (
              EXTRUDED_SOLID,
              SOLID_OF_REVOLUTION))
  SUBTYPE OF (Detailed_geometric_model_element);
      swept_face : Advanced_face;
  END_ENTITY;
(* USED FROM (Feature_and_connection_zone_arm); *)
ENTITY Connection_zone
  SUBTYPE OF (Shape_element);
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
WHERE
  WR1 : NOT EXISTS (SELF\Shape_element.description);
  WR2 : NOT EXISTS (SELF\Shape_element.element_name);
END_ENTITY;
(* USED FROM (Feature_and_connection_zone_arm); *)
ENTITY Definitional_shape_element
    ABSTRACT SUPERTYPE OF (ONEOF (
                        PATH_ELEMENT,
                        PLANAR_ELEMENT,
                        DIRECTION_ELEMENT,
                        LOCATION_ELEMENT,
                        FACE_SHAPE_ELEMENT) ) 
  SUBTYPE OF (Shape_element);
  connection_area : OPTIONAL SET[1:?] OF Connection_zone;
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
UNIQUE
  UR1 : SELF\Shape_element.element_name, 
        SELF\shape_element.containing_shape;
END_ENTITY;
(* USED FROM (Feature_and_connection_zone_arm); *)
ENTITY Feature_definition_with_connection_area
  SUBTYPE OF (Shape_feature_definition);
  connection_area : OPTIONAL SET [1:?] OF Connection_zone;
END_ENTITY;
(* USED FROM (Feature_and_connection_zone_arm); *)
ENTITY Non_definitional_shape_element 	 
    SUPERTYPE OF (ONEOF (
               CONTACTING_FEATURE,
               DATUM_SYSTEM,
               GENERAL_DATUM_REFERENCE) ) 
      SUBTYPE OF (Shape_element); 	 
END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Design_specification
    SUPERTYPE OF (
              INTERFACE_SPECIFICATION_DOCUMENT_DEFINITION)
  SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Fabrication_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Interface_specification_document_definition
    SUBTYPE OF (Design_specification);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Language_reference_manual
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Material_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Partial_document_with_structured_text_representation_assignment
    SUBTYPE OF(Partial_document_assignment);
      structured_portion : string_representation_item_select;
    UNIQUE
      UR1: SELF\Partial_document_assignment.document_portion,
      SELF\Document_assignment.assigned_document;
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Process_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Specification_allocation
  	SUBTYPE OF (Document_assignment);
      SELF\Document_assignment.assigned_document : Specification_definition;  -- allocated_specification : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      allocated_specification : SPECIFICATION_DEFINITION := SELF\Document_assignment.assigned_document;  -- ASSIGNED_DOCUMENT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_extent
    SUBTYPE OF (Text_literal);
      width : length_measure; 
      height : length_measure;
  END_ENTITY;  
(* USED FROM (Specification_document_arm); *)
  ENTITY Surface_finish_specification
    SUBTYPE OF (Material_specification);
  END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Test_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
ENTITY Absorbed_dose_data_element
  SUBTYPE OF (Value_with_unit);
END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Radioactivity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Acceleration_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Amount_of_substance_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Area_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Capacitance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Annotation_text_occurrence 
    SUBTYPE OF (Annotation_element);
      SELF\Styled_element.element : text_or_composite_text;   -- text : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      text : TEXT_OR_COMPOSITE_TEXT := SELF\Styled_element.element;  -- ELEMENT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Dimension_text
    SUBTYPE OF (Annotation_text_occurrence);
    WHERE
      WR1: name IN ['dimension value', 'tolerance value', 'unit text', 'prefix text', 'suffix text'];
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Dielectric_constant_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Dose_equivalent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Text_string_representation
    SUBTYPE OF (Styled_model);
    SELF\Representation.items : SET [1:1] OF text_string_representation_item_select;
  END_ENTITY; 
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Electric_current_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Electric_potential_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Energy_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Force_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Frequency_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Illuminance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Inductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Length_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
      WR1 : SELF\Value_with_unit.value_component >= 0.0;
	  WR2 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Loss_tangent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Luminous_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Luminous_intensity_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Magnetic_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Boolean_representation_item
    SUBTYPE OF (Representation_item);
      the_value : BOOLEAN;
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Mass_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MASS_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Power_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Pressure_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Ratio_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Scattering_parameter_data_element
    SUBTYPE OF (Value_with_unit);
      angle : REAL;

      SELF\Value_with_unit.value_component : any_number_value;  -- radius : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      radius : ANY_NUMBER_VALUE := SELF\Value_with_unit.value_component;  -- VALUE_COMPONENT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
 WHERE
      WR1 : radius >= 0;
      WR2 : {0 <= angle < 2*PI};
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Solid_angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Thermal_resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Thermodynamic_temperature_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Velocity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Value_with_unit_extension_arm); *)
  ENTITY Volume_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;
(* USED FROM (Assembly_feature_relationship_arm); *)
ENTITY Constrained_kinematic_motion_representation
  SUBTYPE OF (Geometric_relationship_with_placement_transformation);
  SELF\Representation_relationship.rep_1 : Representative_geometric_model;
  SELF\Representation_relationship.rep_2 : Representative_geometric_model;
END_ENTITY;
(* USED FROM (Assembly_feature_relationship_arm); *)
ENTITY Free_kinematic_motion_representation
  SUBTYPE OF (Geometric_model_relationship_with_transformation);
  SELF\Representation_relationship.rep_1 : Representative_geometric_model;
  SELF\Representation_relationship.rep_2 : Representative_geometric_model;
--  motion : Kinematic_path; just to get it compilable
END_ENTITY;
(* USED FROM (Assembly_feature_relationship_arm); *)
ENTITY Representative_geometric_model
  SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Assembly_feature_relationship_arm); *)
ENTITY Shape_element_relationship_representation_association;
  represented_shape_element_relationship : Shape_element_relationship;
  representing_representation_relationship : Representation_relationship;
WHERE
  WR1: ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATIVE_GEOMETRIC_MODEL' IN TYPEOF(representing_representation_relationship\representation_relationship.rep_1)) AND
       ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATIVE_GEOMETRIC_MODEL' IN TYPEOF(representing_representation_relationship\ representation_relationship.rep_2));
END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Contextual_shape_representation;
      contextual_shape          : Contextual_item_shape;
      representing_relationship : Geometric_model_relationship;
    DERIVE
      context_representation    : geometric_representation_select := representing_relationship.rep_2 ;
      positioned_representation : geometric_representation_select := representing_relationship.rep_1 ;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_composition_with_operator_transformation
    SUBTYPE OF (Geometric_relationship_with_operator_transformation,
      Definitional_representation_relationship);
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_composition_with_placement_transformation
    SUBTYPE OF (Geometric_relationship_with_placement_transformation,
      Definitional_representation_relationship);
  END_ENTITY; 
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_placement_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET[1:1] OF Geometric_placement_operation;
  END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Numeric_defined_function
    ABSTRACT SUPERTYPE OF (ONEOF (
                        INTEGER_DEFINED_FUNCTION,
                        REAL_DEFINED_FUNCTION))
  SUBTYPE OF (Numeric_expression, Defined_function);
   END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Real_defined_function
    ABSTRACT SUPERTYPE
  SUBTYPE OF (Numeric_defined_function);
   END_ENTITY ;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Geometric_relationship_with_placement_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: Axis_placement_mapping;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Shape_placement_association
    SUBTYPE OF (Shape_description_association);
      SELF\Shape_description_association.used_representation : Geometric_placement_model;
      SELF\Shape_description_association.definition : Associated_contextual_item_shape;
  END_ENTITY;
(* USED FROM (Contextual_shape_positioning_arm); *)
  ENTITY Associated_contextual_item_shape
    SUBTYPE OF (Associated_item_shape, Contextual_item_shape);
  END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Interpolated_configuration_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Geometric_representation_context_with_parameter;
  SELF\Representation.items : SET[1:?] OF Interpolated_configuration_sequence;
END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Curve_appearance;
    colour : Colour;
    font   : Curve_font;
    width  : REAL;
  END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Interpolated_configuration_segment;
--  SUBTYPE OF (Founded_item);
  state : mechanism_state_representation;
  t_parameter : parameter_value;
  interpolation : interpolation_type;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Link_motion_relationship
  SUBTYPE OF (Definitional_representation_relationship, Geometric_model_relationship_with_transformation);
  SELF\Geometric_model_relationship.rep_1 : link_or_shape_representation;
  SELF\Geometric_model_relationship.rep_2 : Link_motion_representation_along_path;
  transformation_operator : Link_motion_transformation;
WHERE
  WR1: transformation_operator.transform_item_1 IN rep_1.items;
  WR2: transformation_operator.transform_item_2 IN rep_2.items;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Item_link_motion_relationship
  SUBTYPE OF (Link_motion_relationship);
  SELF\Representation_relationship.rep_1 : Geometric_model;
  item : Detailed_geometric_model_element;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Link_motion_transformation;
--  SUBTYPE OF (Item_defined_transformation);
  transform_item_1 : Rigid_placement;
  transform_item_2 : Kinematic_path;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Link_motion_representation_along_path
    SUPERTYPE OF (ONEOF (
               PRESCRIBED_PATH,
               RESULTING_PATH) ) 
      SUBTYPE OF (Representation);
  SELF\representation.items : SET [1:?] OF Kinematic_path;
  SELF\representation.context_of_items : Geometric_representation_context_with_parameter;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Geometric_representation_context_with_parameter 
  SUBTYPE OF (Geometric_coordinate_space);
  parameter_unit : OPTIONAL Unit;
END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Point_appearance;
    marker : Marker;
    colour : Colour;
    size : REAL;
  END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Kinematic_path_defined_by_nodes
  SUBTYPE OF (Kinematic_path);
  SELF\Kinematic_path.segments : LIST [1:?] OF Path_node;
  placement_start : Axis_placement;
END_ENTITY;  
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Kinematic_path_defined_by_curves
  SUBTYPE OF (Kinematic_path);
  SELF\Kinematic_path.segments : LIST [1:?] OF Curve_based_path_with_orientation;
END_ENTITY;  
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Kinematic_path_segment
   ABSTRACT SUPERTYPE OF (ONEOF (
                        PATH_NODE,
                        CURVE_BASED_PATH_WITH_ORIENTATION)); 
--  SUBTYPE OF (founded_item);
  t_end : parameter_value;
  transition : curve_transition_code;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Path_parameter_representation
  SUBTYPE OF (Definitional_representation);
  SELF\representation.context_of_items : Path_parameter_representation_context;
  SELF\representation.items : SET[1:?] OF Bounded_curve;
WHERE
  WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Path_parameter_representation_context
  SUBTYPE OF (Geometric_coordinate_space, Parametric_representation_context);
END_ENTITY;  
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Path_node
   ABSTRACT SUPERTYPE OF (ONEOF (
                        POINT_TO_POINT_PATH,
                        CIRCULAR_PATH,
                        LINEAR_PATH,
                        CURVE_BASED_PATH))
  SUBTYPE OF (Kinematic_path_segment);
  placement_end : Axis_placement;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Point_to_point_path
  SUBTYPE OF (Path_node);
DERIVE
  SELF\kinematic_path_segment.transition : curve_transition_code := curve_transition_code.discontinuous;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Circular_path
  SUBTYPE OF (Path_node);
  via_point : cartesian_point;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Linear_path
  SUBTYPE OF (Path_node);
DERIVE
  SELF\kinematic_path_segment.transition : curve_transition_code := curve_transition_code.continuous;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Curve_based_path
  SUBTYPE OF (Path_node);
  path_curve : Curve;
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Curve_based_path_with_orientation
  SUBTYPE OF (Kinematic_path_segment);
  position_curve : Bounded_curve;
  orientation_curve : Bounded_curve;
WHERE
  WR1: TYPEOF(position_curve) = TYPEOF(orientation_curve);
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Curve_based_path_with_orientation_and_parameters
  SUBTYPE OF (Curve_based_path_with_orientation);
  parameters : Path_parameter_representation;
END_ENTITY;  
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Vector_appearance
    SUBTYPE OF (Curve_appearance);
      terminator_type : Terminator;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Class_breakdown_association;
    description       : OPTIONAL STRING;
    considered_class  : Product_class;
    breakdown_element : breakdown_element_select;
    relation_type     : STRING;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Complex_node_relationship;
      description   : OPTIONAL STRING;
      relating      : complex_product_select;
      related       : complex_product_select;
      relation_type : STRING;  
    WHERE
      WR1: (aggregate1_in_aggregate2(TYPEOF(related),TYPEOF(relating)) OR aggregate1_in_aggregate2(TYPEOF(relating),TYPEOF(related)) ) ;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Design_constraint_association;
    name                  : OPTIONAL STRING;	
    constrained_object    : complex_product_select;
    constraint_definition : Design_constraint_definition;  
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Design_constraint_context_association;
    constraint_definition : Design_constraint_definition;
    constraint_context    : constraint_context_select;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Design_constraint_definition
    SUBTYPE OF (Requirement_view_definition);
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Externally_defined_curve_font
    SUBTYPE OF (Curve_font);
      curve_font_reference : STRING;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Part_occurrence_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Product_occurrence;
      SELF\View_definition_relationship.related_view  : Product_occurrence;
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Replaced_usage_relationship
    SUBTYPE OF (Part_occurrence_relationship);
      usage_context : instance_usage_context_select;
    DERIVE
      SELF\View_definition_relationship.relation_type : STRING := 'usage replacement';
  END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Specification_category_breakdown_influence;
    influencing_category      : Class_category_association;
    influenced_breakdown_node : breakdown_element_select;
  END_ENTITY;
(* USED FROM (Area_2d_arm); *)
  ENTITY Circular_area
    SUBTYPE OF (Primitive_2d);
      centre : Cartesian_point;
      radius : Length_data_element;
  END_ENTITY;
(* USED FROM (Area_2d_arm); *)
  ENTITY Elliptic_area
    SUBTYPE OF (Primitive_2d);
      position    : Axis_placement_2d;
      semi_axis_1 : Length_data_element;
      semi_axis_2 : Length_data_element;
  END_ENTITY;
(* USED FROM (Area_2d_arm); *)
  ENTITY Polygonal_area
    SUBTYPE OF (Primitive_2d);
      bounds : LIST[3:?] OF UNIQUE Cartesian_point;
  END_ENTITY;
(* USED FROM (Area_2d_arm); *)
  ENTITY Primitive_2d
     ABSTRACT SUPERTYPE OF (ONEOF (
                        CIRCULAR_AREA,
                        ELLIPTIC_AREA,
                        RECTANGULAR_AREA,
                        POLYGONAL_AREA))
  SUBTYPE OF (Detailed_geometric_model_element);
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
  END_ENTITY;
(* USED FROM (Area_2d_arm); *)
  ENTITY Rectangular_area
    SUBTYPE OF (Primitive_2d);
      position : Axis_placement_2d;
      x        : Length_data_element;
      y        : Length_data_element;
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Detailed_geometric_model_element_relationship;
    item_1: Detailed_geometric_model_element;
    item_2: Detailed_geometric_model_element;
   WHERE 
    WR1: item_1 <> item_2;
  END_ENTITY;
(* USED FROM (Layered_2d_shape_arm); *)
  ENTITY Planar_shape_model
     ABSTRACT SUPERTYPE OF (
                        PLANAR_PROJECTED_SHAPE_MODEL)
  SUBTYPE OF (Geometric_model);
    WHERE
      WR1 : SELF\Geometric_model.context_of_items.dimension_count = 2;
  END_ENTITY;
(* USED FROM (Extended_basic_geometry_arm); *)
  ENTITY Vector
    SUBTYPE OF (Detailed_geometric_model_element);
      orientation: Direction;
      magnitude: length_measure;
    WHERE
      WR1 : magnitude >= 0.0 ;
  END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Abstract_variable
   ABSTRACT SUPERTYPE OF (ONEOF (
                        SCALAR_VARIABLE,
                        ROW_VARIABLE));
  name : STRING;
  scope : scope_select;
 UNIQUE 
  UR1 : name, scope;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Atomic_formula
   ABSTRACT SUPERTYPE OF (ONEOF (
                        RULE_CONDITION,
                        GROUND_FACT));
  predicate_symbol : predicate_symbol;  
  terms : LIST OF term_select;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Attribute_assertion
  SUBTYPE OF (Fact_type);
   entity_type : STRING;
   attribute : STRING;
END_ENTITY; 
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_representation
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[1:1] OF Characteristic_data_table;
  INVERSE
    header : Characteristic_data_table_header_usage FOR used_representation;      
  END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Complex_clause
   ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPLEX_CONJUNCTIVE_CLAUSE,
                        COMPLEX_DISJUNCTIVE_CLAUSE));
  clauses : LIST [2:?] OF clause_select;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Complex_conjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Complex_disjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Entity_assertion
  SUBTYPE OF (Fact_type);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Enum_reference_prefix;
 prefix : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Extent;
  variable_id : OPTIONAL STRING;
  source : STRING;
  query_expression : STRING;
  syntax : OPTIONAL expression_syntax;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Fact_type
   ABSTRACT SUPERTYPE OF (ONEOF (
                        ENTITY_ASSERTION,
                        ATTRIBUTE_ASSERTION));
   source : Extent;
   predicate_symbol : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Forward_chaining_rule
  SUBTYPE OF (Rule_definition);
  premise : clause_Select; 
  conclusion : Literal_conjunction;
  WHERE
  WR1:  local_vars_of(SELF.conclusion) <= local_vars_of(SELF.premise);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Func;
 func_sym : function_symbol;
 terms : LIST OF term_select;
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_header_decomposition
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating : Characteristic_data_table_header;
      SELF\Independent_property_relationship.related : Characteristic_data_column_header;
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'decomposition';
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_column_header_link
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating : Characteristic_data_column_header;  -- precedent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\Independent_property_relationship.related : Characteristic_data_column_header;  -- subsequent : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'sequence'; 
      precedent : CHARACTERISTIC_DATA_COLUMN_HEADER := SELF\Independent_property_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      subsequent : CHARACTERISTIC_DATA_COLUMN_HEADER := SELF\Independent_property_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
  WHERE
      WR1: subsequent <> precedent;
  END_ENTITY; 
(* USED FROM (Production_rule_arm); *)
ENTITY Literal_conjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Literal_disjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Externally_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
      external_source : External_source;
    WHERE
      WR1: NOT(name IN pre_defined_type_qualifiers);
  END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Row_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_link
  SUBTYPE OF (Vertex); 
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_adoption
   SUBTYPE OF (Rule_action);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_change_request
   SUBTYPE OF (Rule_action);
   change_reason : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_condition
 SUBTYPE OF (Atomic_formula);
  positive : BOOLEAN;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_creation
    SUBTYPE OF (Rule_action);
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Maximum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'maximum';      
  END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_expiration
   SUBTYPE OF (Rule_action);
   expiration_rationale : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_justification
   SUBTYPE OF (Rule_action);
   justified_action : Rule_action;
   justification_rationale : STRING;
WHERE
   WR1: SELF <> justified_action ;
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Nominal_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: SELF\Representation.items[1]\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'nominal';
  END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_priority;
   priority : INTEGER;
   prioritized_rule : Rule_definition;
WHERE
   WR1: priority >= 0 ;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_product
   SUBTYPE OF (Software);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_rejection
   SUBTYPE OF (Rule_action);
   rejection_reason : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_request
   SUBTYPE OF (Rule_action);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_set
   SUBTYPE OF (Rule_software_definition);
   conflict_resolution_strategy : OPTIONAL STRING;
   rule_member : SET[1:?] OF Rule_priority;
 DERIVE  
   engine: SET[1:1] OF Document_definition :=
		get_document_definition(SELF, 'engine', 
		'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LANGUAGE_REFERENCE_MANUAL');
 INVERSE
   purpose : Identification_assignment FOR items;
 WHERE
   WR1: purpose.role = 'purpose' ;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_set_group
  SUBTYPE OF (Rule_software_definition);
  elements : SET[2:?] OF Rule_set;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_software_definition
   SUPERTYPE OF (ONEOF (
              RULE_DEFINITION,
              RULE_SET_GROUP,
              RULE_SET))
  SUBTYPE OF (Software_definition);
   SELF\Product_view_definition.defined_version : Rule_version;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_submission
   SUBTYPE OF (Rule_action);
   submission_rationale : STRING;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_supersedence
   SUBTYPE OF (Rule_action);
   superseded_rule : Rule_version;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_version
   SUBTYPE OF (Software_version);
   SELF\Product_version.of_product : Rule_product;
INVERSE
   management_action : SET[1:?] OF Rule_action FOR subject_rule;
   product_definition : SET[1:?] OF Rule_software_definition FOR defined_version;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Scalar_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Simple_clause
   ABSTRACT SUPERTYPE OF (ONEOF (
                        LITERAL_CONJUNCTION,
                        LITERAL_DISJUNCTION));
  formulas : LIST [1:?] OF Rule_condition;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Symbol
  SUBTYPE OF(Representation_item);
 UNIQUE
  UR1 : SELF\Representation_item.name;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual
  SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual_version
   ABSTRACT SUPERTYPE OF (ONEOF (
                        PRODUCT_AS_PLANNED,
                        PRODUCT_AS_REALIZED))
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Product_as_individual;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_individual_view
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Product_as_individual_version;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_planned
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_as_realized
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_design_to_individual;
  product_design : Product;
  individual_product : Product_as_individual;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_design_version_to_individual;
  product_design_version : product_version_or_configuration;
  individual_product : Product_as_individual_version;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_design_view_to_individual;
  product_as_individual_view : Product_as_individual_view;
  product_view_definition : product_design_view_or_configuration;
END_ENTITY;
(* USED FROM (Product_as_individual_arm); *)
ENTITY Product_planned_to_realized;
  planned_product : Product_as_planned;
  realized_product : Product_as_realized;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Item_design_association;
  configuration : Product_configuration;
  design : version_or_definition;
UNIQUE
  UR1: configuration, design;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : Product_concept;
INVERSE
  corresponding_design : SET[0:1] OF Item_design_association FOR configuration;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration_hierarchical_relationship
  SUBTYPE OF (Product_configuration_relationship);

  (* removed : SELF\Product_configuration_relationship.child :  PRODUCT_CONFIGURATION *)

  (* removed : SELF\Product_configuration_relationship.parent :  PRODUCT_CONFIGURATION *)
    DERIVE
      child : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.related_product_configuration;  -- RELATED_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      parent : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.relating_product_configuration;  -- RELATING_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration_relationship
  SUPERTYPE OF (ONEOF (
              PRODUCT_CONFIGURATION_HIERARCHICAL_RELATIONSHIP,
              PRODUCT_CONFIGURATION_REVISION_SEQUENCE));
  relating_product_configuration : Product_configuration;
  related_product_configuration : Product_configuration;
END_ENTITY;
(* USED FROM (Configuration_item_arm); *)
ENTITY Product_configuration_revision_sequence
  SUBTYPE OF (Product_configuration_relationship);

  (* removed : SELF\Product_configuration_relationship.predecessor :  PRODUCT_CONFIGURATION *)

  (* removed : SELF\Product_configuration_relationship.successor :  PRODUCT_CONFIGURATION *)
    DERIVE
      predecessor : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.relating_product_configuration;  -- RELATING_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : PRODUCT_CONFIGURATION := SELF\Product_configuration_relationship.related_product_configuration;  -- RELATED_PRODUCT_CONFIGURATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_concept_identification_arm); *)
ENTITY Market;
  name                      : STRING;
  market_segment_type       : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Product_concept_identification_arm); *)
ENTITY Product_concept;
  id                        : STRING;
  name                      : STRING;
  description               : OPTIONAL STRING;
  target_market             : OPTIONAL Market;
UNIQUE
  UR1: id;
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Boolean_defined_function
	 ABSTRACT SUPERTYPE

	SUBTYPE OF (Defined_function, Boolean_expression);
	END_ENTITY ;
(* USED FROM (Edge_based_wireframe_arm); *)
ENTITY Edge_based_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Non_manifold_surface_arm); *)
  ENTITY Non_manifold_shape_representation
    SUBTYPE OF (Geometric_model);
  END_ENTITY;
(* USED FROM (Default_setting_association_arm); *)
ENTITY Default_shape_property
   ABSTRACT SUPERTYPE OF (ONEOF (
                        DEFAULT_CHAMFER,
                        DEFAULT_DRAFT_ANGLE,
                        DEFAULT_EDGE_ROUND,
                        DEFAULT_FILLET,
                        DEFAULT_THICKNESS))
  SUBTYPE OF (Assigned_shape_property);
  SELF\Assigned_shape_property.described_element : Item_shape;
END_ENTITY;
(* USED FROM (Default_setting_association_arm); *)
ENTITY Default_chamfer
  SUBTYPE OF (Default_shape_property);
  offset_value: Length_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default chamfer';  
END_ENTITY; 
(* USED FROM (Default_setting_association_arm); *)
ENTITY Default_draft_angle
  SUBTYPE OF (Default_shape_property);
  draft_angle_value: Angle_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default draft angle';  
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Boolean_variable
	SUBTYPE OF (Simple_boolean_expression, Variable);
	END_ENTITY;
(* USED FROM (Default_setting_association_arm); *)
ENTITY Default_fillet
  SUBTYPE OF (Default_shape_property);
          radius_value: Length_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default fillet';  
END_ENTITY;
(* USED FROM (Default_setting_association_arm); *)
ENTITY Default_thickness
  SUBTYPE OF (Default_shape_property);
  thickness_value: Length_data_element;
  parameter_name: OPTIONAL STRING;
DERIVE
  SELF\Assigned_property.name : STRING := 'default thickness';  
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Class_with_attributes
SUBTYPE OF (Class);
  version_id: OPTIONAL STRING;
  used_classification_system: OPTIONAL Classification_system;
INVERSE
  characterization_attributes: SET[0:?] OF Classification_attribute FOR characterized_class;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Class_hierarchy;
  super_class: Class_with_attributes;
  sub_class: Class_with_attributes;
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Comparison_expression
	 ABSTRACT SUPERTYPE OF (ONEOF (
                        COMPARISON_EQUAL,
                        COMPARISON_GREATER,
                        COMPARISON_GREATER_EQUAL,
                        COMPARISON_LESS,
                        COMPARISON_LESS_EQUAL,
                        COMPARISON_NOT_EQUAL))

	SUBTYPE OF (Boolean_expression, Binary_generic_expression);
	SELF\Binary_generic_expression.operands : LIST [2:2] OF Expression;
	WHERE
	WR1: (
	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
	AND
	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[2])))
	OR
	(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
	AND
	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[2])))
	OR
	(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
	AND
	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[2])));
	END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Classification_attribute;
   id: STRING;
   name: OPTIONAL STRING;
   description: OPTIONAL STRING;
   allowed_values: OPTIONAL SET[1:?] OF Measure_item;
   characterized_class: Class_with_attributes;
   attribute_definition: Independent_property;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Classification_system;
  id: STRING;
  description: OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY External_class_with_attributes
SUBTYPE OF (Class_with_attributes);
  source: external_class_select;
END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Measure_item_with_precision
    SUBTYPE OF (Measure_item);
      significant_digits : INTEGER;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_limit
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
    WHERE
      WR1:SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;   
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_list
    SUBTYPE OF (Measure_item);
      values : LIST[1:?] OF Measure_item;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_range
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_unit;
      upper_limit : Numerical_item_with_unit;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_range_with_global_unit
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_global_unit;
      upper_limit : Numerical_item_with_global_unit;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_set
    SUBTYPE OF (Measure_item);
      values : SET[1:?] OF Measure_item;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_arm); *)
  ENTITY Value_with_tolerances
    SUBTYPE OF (Measure_item);
      item_value : Numerical_item_with_unit;
      lower_limit : REAL;
      upper_limit : REAL;
  END_ENTITY;
(* USED FROM (Plib_class_reference_arm); *)
  ENTITY Plib_class_reference;
    code         : STRING;
    supplier_bsu : STRING;
    version      : STRING;
  END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Applied_information_usage_right;
  item : SET[1:?] OF information_usage_right_item;
  right_applied : Information_usage_right;
END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_right;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  restriction : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Div_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
(* USED FROM (Information_rights_arm); *)
ENTITY Information_usage_right_relationship;
  relating : Information_usage_right;
  related : Information_usage_right;
  relation_type : STRING;
END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_activity_relationship
    SUBTYPE OF (Activity_relationship);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_security_classification
    SUBTYPE OF (Security_classification);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Security_classification.classification_level IN Pre_defined_security_classification_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_address_assignment
    SUBTYPE OF (Address_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: (EXISTS(SELF\Address_assignment.address_type)) AND
        (NOT (SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types));
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF (Organization_or_person_in_organization_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Int_literal
	SUBTYPE OF (Literal_number);
	SELF\Literal_number.the_value: INTEGER;
	END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_approval
    SUBTYPE OF (Approval);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Approval.purpose IN Pre_defined_approval_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_date_or_date_time_assignment
    SUBTYPE OF (Date_or_date_time_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_work_request
    SUBTYPE OF (Work_request);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Work_request.purpose IN Pre_defined_work_request_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Externally_defined_work_request_status
    SUBTYPE OF (Work_request_status);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Work_request_status.status IN Pre_defined_work_request_status_types);
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Person_in_organization_relationship;
    description   : OPTIONAL STRING; 
    relating      : Person_in_organization;
    related       : Person_in_organization;
    relation_type : STRING;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_activity_relationship
    SUBTYPE OF (Activity_relationship);
    WHERE
      WR1: SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_security_classification
    SUBTYPE OF (Security_classification);
    WHERE
      WR1: SELF\Security_classification.classification_level IN Pre_defined_security_classification_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_address_assignment
    SUBTYPE OF (Address_assignment);
    WHERE
      WR1: SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF (Organization_or_person_in_organization_assignment);
    WHERE
      WR1: SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types; 
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_approval_status
    SUBTYPE OF (Approval_status);
    WHERE
      WR1: SELF\Approval_status.status_name IN Pre_defined_approval_status_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_approval
    SUBTYPE OF (Approval);
    WHERE
      WR1: SELF\Approval.purpose IN Pre_defined_approval_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_date_or_date_time_assignment
    SUBTYPE OF (Date_or_date_time_assignment);
    WHERE
      WR1: SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types;
  END_ENTITY;
(* USED FROM (Pre_defined_product_data_management_specializations_arm); *)
  ENTITY Pre_defined_work_request
    SUBTYPE OF (Work_request);
    WHERE
      WR1: SELF\Work_request.purpose IN Pre_defined_work_request_types;
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Multiple_arity_boolean_expression
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        AND_EXPRESSION,
                        OR_EXPRESSION))
 	SUBTYPE OF (Boolean_expression, Multiple_arity_generic_expression);
 	SELF\Multiple_arity_generic_expression.operands : LIST [2:?] OF Boolean_expression;
 	END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Requirement_collection_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);

  (* removed : SELF\Requirement_view_definition_relationship.collection :  View_definition_relationship.relating_view *)

  (* removed : SELF\Requirement_view_definition_relationship.member :  View_definition_relationship.related_view *)
    DERIVE
      collection : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.primary;  -- PRIMARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      member : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.secondary;  -- SECONDARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Requirement_view_definition_relationship
  SUPERTYPE OF (ONEOF (
              REQUIREMENT_COLLECTION_RELATIONSHIP,
              REQUIREMENT_PRECEDENCE_RELATIONSHIP,
              TRACING_RELATIONSHIP))
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view : Requirement_view_definition;  -- primary : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\View_definition_relationship.related_view : Requirement_view_definition;  -- secondary : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      primary : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      secondary : REQUIREMENT_VIEW_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

WHERE
  WR1: primary :<>: secondary;
END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Tracing_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);

  (* removed : SELF\Requirement_view_definition_relationship.traces_from :  View_definition_relationship.relating_view *)

  (* removed : SELF\Requirement_view_definition_relationship.traces_to :  View_definition_relationship.related_view *)
    DERIVE
      traces_from : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.primary;  -- PRIMARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      traces_to : REQUIREMENT_VIEW_DEFINITION := SELF\Requirement_view_definition_relationship.secondary;  -- SECONDARY : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_arm); *)
ENTITY Requirement_precedence_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Not_expression
 	SUBTYPE OF (Unary_boolean_expression);
 	SELF\Unary_generic_expression.operand: Boolean_expression;
 	END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;
(* USED FROM (Activity_method_assignment_arm); *)
ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Attribute_classification_arm); *)
ENTITY Attribute_classification;
  allowed_value : Class;
  attribute_name : STRING;
  classified_entity : SET[1:?] OF classified_attribute_select;
END_ENTITY;
(* USED FROM (Associative_draughting_elements_arm); *)
  ENTITY Annotation_occurrence_associativity;
    relating_element : Annotation_element;
    related_element  : annotation_occurrence_associativity_item;
  END_ENTITY;
(* USED FROM (Associative_draughting_elements_arm); *)
  ENTITY Draughting_model
    SUBTYPE OF (Styled_model);
      SELF\Representation.items : SET[1:?] OF draughting_model_element_select;
  UNIQUE
    UR1:  SELF\Representation.name;
  END_ENTITY;
(* USED FROM (Associative_draughting_elements_arm); *)
  ENTITY Draughting_model_item_association;
    name            : STRING;
    definition      : draughting_model_item_definition;
    identified_item : draughting_model_item_association_select;
    used_model      : Draughting_model;
  END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Log10_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Plus_expression
 	SUBTYPE OF (Multiple_arity_numeric_expression);
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Or_expression
 	SUBTYPE OF (Multiple_arity_boolean_expression);
 	END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Dimension_curve_directed_callout
    SUBTYPE OF (Draughting_callout);
      dimension_curve : Dimension_curve;
    WHERE
      WR1: dimension_curve IN SELF\Draughting_callout.contents;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Draughting_callout 
    SUPERTYPE OF (ONEOF (
              DIMENSION_CURVE_DIRECTED_CALLOUT,
              LEADER_DIRECTED_CALLOUT,
              PROJECTION_DIRECTED_CALLOUT))
  SUBTYPE OF (Representation_item);
      contents : LIST [1:?] OF draughting_callout_content_select;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Fill_area 
    SUBTYPE OF (Annotation_element);
      SELF\Styled_element.element : Annotation_fill_area;
      reference_point             : Point;
  END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Generic_annotation_curve
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Real_literal
 	SUBTYPE OF (Literal_number);
 	SELF\Literal_number.the_value: REAL;
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Power_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_topology_directed_structure
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF Oriented_joint; 
  parent : Kinematic_topology_structure;
WHERE
  WR1: context_of_items :=: parent.context_of_items;
  WR2: get_kinematic_joints_from_oriented_joints(items) <= parent.items;
END_ENTITY;
(* USED FROM (Draughting_element_arm); *)
  ENTITY Projection_directed_callout
    SUBTYPE OF (Draughting_callout);
      projection_curve : Projection_curve;
    WHERE
      WR1: projection_curve IN SELF\Draughting_callout.contents;
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Annotation_subfigure
    SUBTYPE OF (Annotation_element);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Real_numeric_variable
 	SUBTYPE OF (Numeric_variable);
 	END_ENTITY;
(* USED FROM (Elementary_function_arm); *)
   ENTITY Abs_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Simple_boolean_expression
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        BOOLEAN_LITERAL,
                        BOOLEAN_VARIABLE))
 	SUBTYPE OF (Boolean_expression, Simple_generic_expression);
 	END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY General_symbol 
    SUBTYPE of (Representation);
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Geometric_tolerance_symbol; 
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Surface_condition_symbol; 
  END_ENTITY;
(* USED FROM (Draughting_annotation_arm); *)
  ENTITY Terminator_symbol
    SUBTYPE OF (Annotation_symbol);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Datum_feature_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Datum_target_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Unary_numeric_expression
 	 ABSTRACT SUPERTYPE
 	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
 	SELF\Unary_generic_expression.operand : Numeric_expression;
 	END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_callout 
    SUBTYPE OF (Dimension);
    callout_element : SET [1:?] OF dimension_callout_select;
    dimension_type  : SET [1:?] OF dimension_type;
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_callout_relationship;
      relating_draughting_callout : Dimension_callout;  
      related_draughting_callout  : Dimension_value;
      relation_type               : primary_or_secondary;
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_prefix
    SUBTYPE OF (Draughting_element);
      prefix : Dimension_text;
    INVERSE
      parent : Structured_dimension_callout FOR prefix;
    WHERE
      WR1: prefix IN SELF\Draughting_callout.contents;
      WR2: prefix\Representation_item.name = 'prefix text';            
  END_ENTITY;    
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_sequence_pair; 
    allignment  : chained_or_parallel;
	predecessor : Dimension_callout;
	successor   : Dimension_callout;
  END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY Applied_state_definition_assignment;
  described_state_definition : State_definition;
  assigned_to : state_definition_of_item;
  role : State_definition_role;
END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Dimension_value
    SUBTYPE OF (Dimension);
      dimension_value : Dimension_text;
    WHERE
      WR1: dimension_value IN SELF\Draughting_callout.contents;
      WR2: dimension_value\Representation_item.name = 'dimension value';
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Draughting_element
    SUPERTYPE OF (
              DATUM_FEATURE_CALLOUT
              ANDOR 
              DATUM_TARGET_CALLOUT
              ANDOR 
              DIMENSION
              ANDOR 
              DIMENSION_PREFIX
              ANDOR 
              DIMENSION_SUFFIX
              ANDOR 
              GEOMETRIC_TOLERANCE_CALLOUT
              ANDOR 
              SURFACE_CONDITION_CALLOUT)
  SUBTYPE OF(Draughting_callout);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Geometric_tolerance_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Structured_dimension_callout
    SUBTYPE OF (Dimension_value);
      prefix          : OPTIONAL Dimension_prefix;
      suffix          : OPTIONAL Dimension_suffix;
      tolerance_value : OPTIONAL Dimension_text;
      unit_text       : OPTIONAL Dimension_text;
    WHERE
      WR1: tolerance_value IN SELF\Draughting_callout.contents;
      WR2: NOT EXISTS(tolerance_value) OR (tolerance_value\Representation_item.name = 'tolerance value');
      WR3: unit_text IN SELF\Draughting_callout.contents;
      WR4: NOT EXISTS(unit_text) OR (unit_text\Representation_item.name = 'unit text');
  END_ENTITY;
(* USED FROM (Draughting_element_specialisations_arm); *)
  ENTITY Surface_condition_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Apex
  SUBTYPE OF (Derived_shape_element);
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Centre_axis
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Centre_of_symmetry
  SUPERTYPE OF (ONEOF (
              CENTRE_AXIS,
              CENTRE_PLANE,
              CENTRE_POINT,
              MEDIAN_CURVE,
              MEDIAN_SURFACE))
  SUBTYPE OF (Derived_shape_element);
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Centre_plane
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Centre_point
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Included_text_block
  SUBTYPE OF (Representation_item);
  source : Structured_text_representation;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Geometric_alignment
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:?] OF Shape_element;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Geometric_contact
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:2] OF Shape_element;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Geometric_intersection
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:?] OF Shape_element;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Extension
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Median_curve
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Structured_text_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET [1:1] OF string_representation_item_select; 
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Parallel_offset
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Perpendicular_to
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;
(* USED FROM (Project_arm); *)
ENTITY Project_assignment;
  assigned_project : Project;
  role : STRING;
  items : SET[1:?] OF project_item;
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Tagged_text_format
  SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Derived_shape_element_arm); *)
ENTITY Offset_shape_element
  SUBTYPE OF (Derived_shape_element);
  offset : Value_with_unit;
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Uniform_resource_identifier
  SUBTYPE OF (String_representation_item);
END_ENTITY;
(* USED FROM (Multi_linguism_arm); *)
ENTITY Attribute_translation_assignment;
   considered_instance: string_select;
   considered_attribute: STRING;
   translation_text : STRING;
   translation_language: Language;
UNIQUE
  UR1: considered_instance, considered_attribute, translation_language;
END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification_assignment;
  assigned_certification : Certification;
  items : SET[1:?] OF certification_item;
  role : STRING;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  actual_start_date : OPTIONAL date_or_date_time_select;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View 
    SUBTYPE OF (Styled_model); 
      SELF\Representation.items : SET [1:?] OF view_element_select; 
  WHERE 
    WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;      
  END_ENTITY;   
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area
    SUBTYPE OF (Styled_model); 
      size : Planar_box;  
      SELF\Representation.items : SET [1:?] OF view_area_element_select; 
    WHERE 
      WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;
  END_ENTITY; 
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area_assignment;
    associated_view_area : View_area;
    is_describing        : presentation_association_select;
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area_relationship;
    relation_type : view_area_relation_type;
    description   : OPTIONAL STRING;
    relating      : View_area;
    related       : View_area;
  END_ENTITY;
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_area_replication 
    SUBTYPE OF (Styled_model_replication); 
      SELF\Styled_model_replication.replicated_model : view_area_replication_model; 
  END_ENTITY; 
(* USED FROM (Presentation_hierarchy_arm); *)
  ENTITY View_relationship;
    relation_type : view_relation_type;
    description   : OPTIONAL STRING;
    relating      : View;
    related       : View;
  END_ENTITY;
(* USED FROM (Currency_arm); *)
  ENTITY Currency
      ABSTRACT SUPERTYPE OF ((ONEOF (
                        EXTERNAL_CURRENCY,
                        ISO4217_CURRENCY)) ) 
  SUBTYPE OF (Unit);
  END_ENTITY;
(* USED FROM (Currency_arm); *)
  ENTITY Currency_value 
    SUBTYPE OF (Value_with_unit); 
      SELF\Value_with_unit.unit : Currency;
  END_ENTITY; 
(* USED FROM (Currency_arm); *)
  ENTITY Iso4217_currency 
    SUBTYPE OF (Currency);
  END_ENTITY; 
(* USED FROM (External_unit_arm); *)
  ENTITY External_context_dependent_unit
    SUBTYPE OF (Context_dependent_unit);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;
(* USED FROM (External_unit_arm); *)
  ENTITY External_conversion_based_unit
    SUBTYPE OF (Conversion_based_unit);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;
(* USED FROM (External_library_arm); *)
  ENTITY Iso15926_4_rdl
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Known_source 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        ISO15926_4_RDL,
                        OTD_CATALOGUE,
                        OTD_DICTIONARY,
                        PLIB_DICTIONARY,
                        PLIB_LIBRARY))
  SUBTYPE OF (External_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Otd_catalogue 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Otd_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Plib_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY Plib_library 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
(* USED FROM (External_library_arm); *)
  ENTITY User_defined_library_or_dictionary 
    SUBTYPE OF (External_source); 
    INVERSE
      source : External_source_identification FOR item;
  END_ENTITY;
(* USED FROM (External_source_arm); *)
  ENTITY External_source  SUPERTYPE OF ((ONEOF (
               KNOWN_SOURCE,
               USER_DEFINED_LIBRARY_OR_DICTIONARY)) ) ; 
    id          : STRING;
    description : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Shape_composition_arm); *)
  ENTITY Composite_group_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;
(* USED FROM (Shape_composition_arm); *)
  ENTITY Composite_shape_element
      ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        COMPOSITE_GROUP_SHAPE_ELEMENT,
                        COMPOSITE_UNIT_SHAPE_ELEMENT) )ANDOR( ONEOF (
                        CONTINUOUS_SHAPE_ELEMENT,
                        COMPOSITE_GROUP_SHAPE_ELEMENT) )  ) 
  SUBTYPE OF (Shape_element);
    components : SET[2:?] OF Shape_element;
  END_ENTITY;
(* USED FROM (Shape_composition_arm); *)
  ENTITY Composite_unit_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;
(* USED FROM (Mechanical_design_geometric_presentation_arm); *)
  ENTITY Mechanical_design_view_area 
    SUBTYPE OF (View_area);
  END_ENTITY;
(* USED FROM (Mechanical_design_geometric_presentation_arm); *)
  ENTITY Mechanical_representation_styled_model  
    SUBTYPE OF (Styled_model);
  END_ENTITY;
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Camera_model_d3
    SUBTYPE OF (Detailed_geometric_model_element);
      clipping : OPTIONAL Clipping_operator; 
      hidden_element_appearance : OPTIONAL Appearance_assignment; 
      hidden_line_removal : OPTIONAL BOOLEAN; 
      sources : OPTIONAL SET[1:?] OF Light_source;      
      view_projection : view_projection_type; 
      view_window : Planar_box; 
    WHERE
      WR1: NOT EXISTS(hidden_element_appearance) OR EXISTS(hidden_line_removal);
  END_ENTITY;   
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Clipping_operator
    SUBTYPE OF (Detailed_geometric_model_element);
      elements : SET [1:?] OF clipping_element;
      operator : clipping_mode;
  END_ENTITY;
(* USED FROM (Camera_view_3d_arm); *)
  ENTITY Light_source
    SUBTYPE OF (Detailed_geometric_model_element);
      colour : OPTIONAL Colour;
      light_type : light_type;
  END_ENTITY;
(* USED FROM (Assembly_shape_arm); *)
ENTITY Multi_level_reference_designator;
  name : OPTIONAL label;
  description : OPTIONAL text; 
  location : LIST[1:?] OF UNIQUE Next_assembly_usage;
DERIVE
  root_node : Product_view_definition := location[1]\Product_occurrence_definition_relationship.relating_view;
UNIQUE
  UR1 : location;
END_ENTITY;
(* USED FROM (Colour_arm); *)
ENTITY Colour;
  name : STRING;
END_ENTITY;
(* USED FROM (Assembly_shape_arm); *)
ENTITY Part_occurrence_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Definition_based_product_occurrence;
END_ENTITY;  
(* USED FROM (Colour_arm); *)
ENTITY Pre_defined_colour
  SUBTYPE OF (Colour);
WHERE
  WR1: SELF.name IN ['red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'black', 'white'];
END_ENTITY;
(* USED FROM (Colour_arm); *)
ENTITY User_defined_colour
  SUBTYPE OF (Colour);
  red : REAL;
  green : REAL;
  blue : REAL;
WHERE
  WR1: {0.0 <= red <= 1.0};
  WR2: {0.0 <= green <= 1.0};
  WR3: {0.0 <= blue <= 1.0};
END_ENTITY;
(* USED FROM (Mechanical_design_shaded_presentation_arm); *)
  ENTITY Mechanical_design_shaded_presentation_area   
    SUBTYPE OF (View_area);
  END_ENTITY;
(* USED FROM (Requirement_view_definition_arm); *)
ENTITY Single_requirement_view_definition
  SUBTYPE OF (Requirement_view_definition);
INVERSE
  definition : Single_property_is_definition FOR described_element;
END_ENTITY;
(* USED FROM (Mechanical_design_shaded_presentation_arm); *)
  ENTITY Surface_style_rendering 
    SUBTYPE OF (Surface_appearance_element); 
      assigned_colour : Colour;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Beveled_sheet_representation
    SUBTYPE OF (Constituent_shape_representation);
      bevel_angle             : Angle_data_element;
      boundary_surface        : Composite_sheet_representation;
      vertical_profile_height : Length_data_element;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Boundary_curve_representation;
    bounds : SET [1:?] OF Curve;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Product_definition_relationship_kinematics
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : Assembly_component_relationship;
UNIQUE
  UR1 : described_element;   
END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_property_definition_representation
  SUBTYPE OF (Property_definition_representation);
  SELF\property_definition_representation.definition : Product_definition_kinematics; 
END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Face_based_sheet_representation
    SUBTYPE OF (Composite_sheet_representation);
      face_surface : Surface;
      inner_bounds : OPTIONAL SET [1:?] OF Loop;
      outer_bound  : Loop;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Context_dependent_kinematic_link_representation;
  representation_relation : Kinematic_link_representation_association;
  represented_product_relation : Product_definition_relationship_kinematics;
END_ENTITY; 
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Geometric_sheet_representation
    SUBTYPE OF (Composite_sheet_representation);
      basis_surface : Surface;
      cutouts       : OPTIONAL SET [1:?] OF Boundary_curve_representation;
      outer_edge    : Boundary_curve_representation;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Laid_ply_shape
    SUBTYPE OF (Ply_shape);
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Ply_shape
    SUPERTYPE OF (ONEOF (
              PROJECTED_PLY_SHAPE,
              LAID_PLY_SHAPE,
              FLAT_PATTERN_PLY_SHAPE));
      defining_model : ply_laminate_shape;
      basis : OPTIONAL Ply_shape;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Projected_ply_shape
    SUPERTYPE OF (ONEOF (
              VIEW_PLY_SHAPE,
              SURFACE_PLY_SHAPE))
  SUBTYPE OF (Ply_shape);
      method               : projection_method;
      projection_direction : OPTIONAL Direction;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Surface_ply_shape
    SUBTYPE OF (Projected_ply_shape);
      offset       : Length_data_element;
      surface_role : STRING;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY Three_d_geometry_set
    SUBTYPE OF (Constituent_shape_representation, Geometrically_bounded_surface_shape_representation);
      basis_role        : STRING;
      basis_surface     : Surface;
      defining_boundary : SET [1:?] OF Curve;
  END_ENTITY;
(* USED FROM (Composite_constituent_shape_arm); *)
  ENTITY View_ply_shape
    SUBTYPE OF (Projected_ply_shape);
  END_ENTITY;
(* USED FROM (Faceted_boundary_representation_arm); *)
ENTITY Faceted_brep_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Geometrically_bounded_surface_arm); *)
ENTITY Boundary_curve
  SUBTYPE OF (Closed_composite_curve);
END_ENTITY;
(* USED FROM (Geometrically_bounded_surface_arm); *)
ENTITY Curve_bounded_surface
  SUBTYPE OF (Bounded_surface);
  basis_surface : Surface;
  boundaries : SET [1:?] OF Boundary_curve;
  implicit_outer : BOOLEAN;
WHERE
 WR1: (NOT(implicit_outer)) OR
   ('BASIC_GEOMETRY.BOUNDED_SURFACE' IN TYPEOF(basis_surface));
END_ENTITY;
(* USED FROM (Geometrically_bounded_surface_arm); *)
ENTITY Geometrically_bounded_surface_shape_representation
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF
        geometrically_bounded_surface_shape_representation_item;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Kinematic_link_representation_association
  SUBTYPE OF (Representation_relationship);
  SELF\Representation_relationship.rep_1 : Kinematic_link_representation;
  SELF\Representation_relationship.rep_2 : Geometric_model; 
WHERE
  WR1: (SELF\Representation_relationship.rep_2.context_of_items :=:
        SELF\Representation_relationship.rep_1.context_of_items) OR
       ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GEOMETRIC_MODEL_RELATIONSHIP_WITH_TRANSFORMATION' IN TYPEOF(SELF)); 
END_ENTITY;
(* USED FROM (Geometrically_bounded_wireframe_arm); *)
ENTITY Geometrically_bounded_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Su_parameters
  SUBTYPE OF (Detailed_geometric_model_element);
  a     : length_measure;
  alpha : plane_angle_measure;
  b     : length_measure;
  beta  : plane_angle_measure;
  c     : length_measure;
  gamma : plane_angle_measure;
END_ENTITY;
(* USED FROM (Binary_representation_arm); *)
  ENTITY Binary_representation_item 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 
(* USED FROM (Binary_representation_arm); *)
  ENTITY Bytes_representation_item 
    SUBTYPE OF (Binary_representation_item); 
  END_ENTITY; 
(* USED FROM (Procedural_solid_model_arm); *)
  ENTITY Modified_solid
    SUBTYPE OF (Detailed_geometric_model_element);
      rationale  : STRING;
      base_solid : solid_select;
  END_ENTITY;
(* USED FROM (Procedural_solid_model_arm); *)
  ENTITY Procedural_solid_representation_sequence
    SUBTYPE OF (Procedural_shape_representation_sequence);
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Explicit_procedural_shape_representation_relationship
    SUBTYPE OF (Representation_relationship);
      SELF\Representation_relationship.rep_1 : Procedural_shape_representation; 
      SELF\Representation_relationship.rep_2 : Geometric_model; 
    WHERE
      WR1 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROCEDURAL_SHAPE_REPRESENTATION' 
           in TYPEOF(rep_2));
  END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
	ENTITY Odd_function
	SUBTYPE OF (Unary_boolean_expression);
	SELF\Unary_generic_expression.operand: Numeric_expression;
	WHERE
	WR1: Is_int_expr(SELF);
	END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Indirectly_selected_shape_elements
    SUBTYPE OF (User_selected_shape_elements);
      indirectly_selected_items : SET[1:?] OF shape_model_element;
  END_ENTITY;
(* USED FROM (Procedural_shape_model_arm); *)
  ENTITY Procedural_shape_representation
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items: SET[1:?] OF Procedural_shape_representation_sequence;
  END_ENTITY;
(* USED FROM (Information_product_arm); *)
ENTITY Information_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Information_version;
END_ENTITY;
(* USED FROM (Certification_arm); *)
ENTITY Certification;
  name : STRING;
  description : OPTIONAL STRING;
  kind : STRING;
END_ENTITY;
(* USED FROM (Independent_property_representation_arm); *)
ENTITY Independent_property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Independent_property;  -- property : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      property : INDEPENDENT_PROPERTY := SELF\Property_definition_representation.definition;  -- DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Composite_presentable_text
    SUBTYPE OF (Detailed_geometric_model_element);
      collected_text : LIST[2:?] OF composite_text_element_select;
  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Defined_character_glyph
    SUBTYPE OF (Detailed_geometric_model_element);
      placement : Axis_placement;
  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Draughting_pre_defined_text_font;
  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Externally_defined_text_font;
    name : STRING;
  END_ENTITY; 
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal
    SUPERTYPE OF (
              TEXT_LITERAL_WITH_EXTENT
              ANDOR 
              TEXT_LITERAL_WITH_DELINEATION
              ANDOR 
              TEXT_LITERAL_WITH_ASSOCIATED_CURVES
              ANDOR 
              TEXT_LITERAL_WITH_BLANKING_BOX)
  SUBTYPE OF (Detailed_geometric_model_element);
      alignment : text_alignment;
      font : font_select;
      literal : STRING;
      path : text_path;
      placement : Axis_placement;
  END_ENTITY;
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_associated_curves
    SUBTYPE OF (Text_literal);
      associated_curves : SET [1:?] OF Curve;
  END_ENTITY;  
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_blanking_box
    SUBTYPE OF (Text_literal);
  END_ENTITY;  
(* USED FROM (Text_appearance_arm); *)
  ENTITY Text_literal_with_delineation
    SUBTYPE OF (Text_literal);
      delineation: text_delineation;
  END_ENTITY;  
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Prismatic_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := FALSE;
END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Annotation_curve
      ABSTRACT SUPERTYPE OF ((ONEOF (
                        LEADER,
                        PROJECTION_CURVE,
                        DIMENSION_CURVE)
                        ANDOR (
                        GENERIC_ANNOTATION_CURVE)) ) 
  SUBTYPE OF (Annotation_element);
      annotation_curve_type       : OPTIONAL STRING;
      SELF\Styled_element.element : Curve;
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Annotation_element 
      SUPERTYPE OF ( ( ONEOF (
               ANNOTATION_TEXT_OCCURRENCE,
               ANNOTATION_CURVE) )ANDOR( ONEOF (
               ANNOTATION_SUBFIGURE,
               ANNOTATION_SYMBOL,
               FILL_AREA) )  ) 
  SUBTYPE OF (Detailed_geometric_model_element, Styled_element);
  END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Annotation_text
    SUBTYPE OF (Detailed_geometric_model_element);
      replicated_model : Text_string_representation;
      source           : Axis_placement;
      target           : Axis_placement;
  END_ENTITY;
(* USED FROM (Information_product_arm); *)
ENTITY Information_product
   ABSTRACT SUPERTYPE
 	SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Information_product_arm); *)
ENTITY Information_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Information_product;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Cylindrical_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;
(* USED FROM (Associative_text_arm); *)
  ENTITY Text_style;  
    font_size_scale  : REAL; 
    mirror_placement : OPTIONAL Axis_placement;
    text_colour      : Colour; 
  END_ENTITY;
(* USED FROM (Part_shape_arm); *)
ENTITY Part_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Part_view_definition;
END_ENTITY;  
(* USED FROM (Part_shape_arm); *)
ENTITY Part_shape_element
  SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Part_shape; 
END_ENTITY;  
(* USED FROM (Part_shape_arm); *)
ENTITY General_part_feature
  SUBTYPE OF (Definitional_shape_element, Part_shape_element);
END_ENTITY;  
(* USED FROM (Product_and_manufacturing_information_with_nominal_3d_models_arm); *)
ENTITY Nominal_3d_model_shape
  SUBTYPE OF (Associated_item_shape);
DERIVE
   SELF\Associated_item_shape.associated_model : advanced_face_model := SELF\Associated_item_shape.association\Property_definition_representation.used_representation;  
WHERE
  WR1: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(described_element\Product_view_definition.initial_context); 
  WR2: EXISTS(associated_model);
END_ENTITY;  
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Spherical_pair_with_range
  SUBTYPE OF (Spherical_pair);
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_pitch                      : OPTIONAL plane_angle_measure;
  upper_limit_pitch                      : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR2: (NOT EXISTS(lower_limit_pitch)
        OR
        NOT EXISTS(upper_limit_pitch))
       XOR
       (lower_limit_pitch < upper_limit_pitch);
  WR3: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Compound_representation_item 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        SEQUENCE_REPRESENTATION_ITEM,
                        SET_REPRESENTATION_ITEM))
  SUBTYPE OF (Representation_item); 
  END_ENTITY; 
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Date_time_representation_item
    SUBTYPE OF (Representation_item);
      the_value : date_or_date_time_select;
  END_ENTITY; 
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Integer_representation_item
    SUBTYPE OF (Representation_item);
      the_value : INTEGER;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Logical_representation_item
    SUBTYPE OF (Representation_item);
      the_value : LOGICAL;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Rational_representation_item
    SUBTYPE OF (Representation_item);
      numerator   : INTEGER;
      denominator : INTEGER;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Real_representation_item
    SUBTYPE OF (Representation_item);
      the_value   : REAL;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Sequence_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : LIST OF Representation_item;
  END_ENTITY;
(* USED FROM (Basic_data_representation_arm); *)
  ENTITY Set_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : SET OF Representation_item;
  END_ENTITY;
(* USED FROM (Extended_date_arm); *)
  ENTITY Year_month;
    month_component : month_in_year_number; 
    year_component  : year_number; 
  END_ENTITY;  
(* USED FROM (Extended_date_arm); *)
  ENTITY Date;
    year_component  : year_number; 
  END_ENTITY;  
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Homokinetic_pair
  SUBTYPE OF (Universal_pair);
WHERE
  WR1:  NOT EXISTS(SELF.input_skew_angle);       
END_ENTITY;
(* USED FROM (Extended_date_arm); *)
  ENTITY Week_of_year_and_day_date;
    day_component  : OPTIONAL day_in_week_number;   
    year_component : year_number; 
    week_component : week_in_year_number; 
  END_ENTITY; 
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Planar_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Externally_defined_marker
    SUBTYPE OF (Marker);
      marker_reference : STRING;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Externally_defined_terminator
    SUBTYPE OF (Terminator);
      terminator_reference : STRING;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Marker;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Tool_attachment_point_frame 
  SUBTYPE OF (Axis_placement_3d);
DERIVE  
  SELF\Representation_item.name : label := ?;
END_ENTITY;  
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Predefined_marker
    SUBTYPE OF (Marker);
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Predefined_terminator
    SUBTYPE OF (Terminator);
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY Terminator;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY User_defined_marker
    SUBTYPE OF (Marker);
      symbol : Geometric_model;
  END_ENTITY;
(* USED FROM (Curve_appearance_arm); *)
  ENTITY User_defined_terminator
    SUBTYPE OF (Terminator);
      symbol : Geometric_model;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Fully_constrained_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := FALSE;
END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Curve_font
    SUPERTYPE OF (ONEOF (
              EXTERNALLY_DEFINED_CURVE_FONT,
              PREDEFINED_CURVE_FONT,
              USER_DEFINED_CURVE_FONT));
      curve_font_name : STRING;
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Curve_font_pattern;
    on_segment : REAL;
    off_segment : REAL;
  END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
	ENTITY Int_value_function
	SUBTYPE OF (Function_parameter_value);
	END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Predefined_curve_font
    SUBTYPE OF (Curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous', 'chain', 'chain double dash', 'dashed', 'dotted'];
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY Solid_curve_font
    SUBTYPE OF (Predefined_curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous'];
  END_ENTITY;
(* USED FROM (Styled_curve_arm); *)
  ENTITY User_defined_curve_font
    SUBTYPE OF (Curve_font);
      pattern        : SET[1:?] OF Curve_font_pattern;
      segment_symbol : Geometric_model;
  END_ENTITY;
(* USED FROM (Layered_2d_shape_arm); *)
  ENTITY Planar_projected_shape_model
    SUBTYPE OF (Planar_shape_model);
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Kinematic_state_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'kinematic state';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_header_usage 
    SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Characteristic_data_table_header;
    SELF\Property_definition_representation.used_representation : Characteristic_data_table_representation;
  END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Motion_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'motion';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Kinematic_mechanism_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'kinematic_mechanism';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_row
    SUBTYPE OF (Representation_item);
      cell : LIST [1:?] OF characteristic_data_table_cell;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_column_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      table_header_usage : Characteristic_data_table_header_decomposition FOR related;  
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      column : SET [2:?] OF Characteristic_data_table_header_decomposition FOR relating;    
  END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_loop
  SUBTYPE OF (Edge_loop);
  SELF\path.edge_list : LIST [1:?] OF UNIQUE oriented_joint; 
END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Oriented_joint
  SUBTYPE OF (Oriented_edge);
  SELF\Oriented_edge.edge_definition : Kinematic_joint;
END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_joint 
  SUBTYPE OF (Edge); 
  SELF\edge.edge_start : Kinematic_link;
  SELF\edge.edge_end : Kinematic_link;
UNIQUE
  UR1: edge_start, edge_end; 
WHERE
  WR1: edge_start :<>: edge_end;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Rolling_surface_pair
  SUBTYPE OF (Surface_pair);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Sliding_surface_pair
  SUBTYPE OF (Surface_pair);
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Minimum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'minimum';      
  END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Machining_feature_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'machining feature';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Null_representation_item 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 
(* USED FROM (Characteristic_arm); *)
  ENTITY Plus_minus_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_with_tolerances;
  END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Model_based_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'model based product geometry';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_related_curve_appearance 
     ABSTRACT SUPERTYPE OF (ONEOF (
                        BOUNDARY_CURVE_APPEARANCE,
                        CONTROL_GRID_APPEARANCE,
                        PARAMETER_LINE_APPEARANCE,
                        SEGMENTATION_CURVE_APPEARANCE,
                        SILHOUETTE_CURVE_APPEARANCE))

	SUBTYPE OF (Surface_appearance_element);
      style : Curve_appearance;
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Statistical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [2:?] OF Numerical_item_with_unit;
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_appearance_element
      ABSTRACT SUPERTYPE OF ( ( ONEOF (
                        SURFACE_RELATED_CURVE_APPEARANCE,
                        SURFACE_COLOUR) )ANDOR( ONEOF (
                        SURFACE_COLOUR,
                        SURFACE_RELATED_CURVE_APPEARANCE,
                        SURFACE_STYLE_RENDERING) )  ) ; 
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Text_representation_item
  	SUBTYPE OF (String_representation_item);
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Tolerance_characteristic
     ABSTRACT SUPERTYPE OF ((ONEOF (
                        MAXIMUM_TOLERANCE_CHARACTERISTIC,
                        MINIMUM_TOLERANCE_CHARACTERISTIC,
                        NOMINAL_TOLERANCE_CHARACTERISTIC,
                        PLUS_MINUS_TOLERANCE_CHARACTERISTIC,
                        QUALIFIED_TOLERANCE_CHARACTERISTIC,
                        STATISTICAL_TOLERANCE_CHARACTERISTIC,
                        SYMMETRICAL_TOLERANCE_CHARACTERISTIC,
                        TYPICAL_TOLERANCE_CHARACTERISTIC))
                        ANDOR 
                        LENGTH_TOLERANCE_CHARACTERISTIC)
  SUBTYPE OF (Property_value_representation);
    WHERE
      WR1: SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
      WR2 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Typical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'typical';      
  END_ENTITY;
(* USED FROM (External_properties_arm); *)
  ENTITY External_library_property
    SUBTYPE OF (Independent_property);
      external_id  : STRING;    
      source       : External_source;
    DERIVE
      library_type : STRING := source.id;
  END_ENTITY;
(* USED FROM (External_properties_arm); *)
  ENTITY Plib_property_reference
    SUBTYPE OF (Independent_property);
      code       : STRING;
      version    : STRING;
      name_scope : Plib_class_reference;
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY And_expression
	SUBTYPE OF (Multiple_arity_boolean_expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Binary_boolean_expression
	 ABSTRACT SUPERTYPE OF (ONEOF (
                        XOR_EXPRESSION,
                        EQUALS_EXPRESSION))

	SUBTYPE OF (Boolean_expression, Binary_generic_expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Binary_numeric_expression
	 ABSTRACT SUPERTYPE OF (ONEOF (
                        MINUS_EXPRESSION,
                        DIV_EXPRESSION,
                        MOD_EXPRESSION,
                        SLASH_EXPRESSION,
                        POWER_EXPRESSION))

	SUBTYPE OF (Numeric_expression, Binary_generic_expression);
	SELF\Binary_generic_expression.operands : LIST [2:2] OF Numeric_expression;
	END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Segmentation_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Boolean_expression
	 ABSTRACT SUPERTYPE OF (ONEOF (
                        SIMPLE_BOOLEAN_EXPRESSION,
                        UNARY_BOOLEAN_EXPRESSION,
                        BINARY_BOOLEAN_EXPRESSION,
                        MULTIPLE_ARITY_BOOLEAN_EXPRESSION,
                        COMPARISON_EXPRESSION,
                        BOOLEAN_DEFINED_FUNCTION,
                        INTERVAL_EXPRESSION))

	SUBTYPE OF (Expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Boolean_literal
	SUBTYPE OF (Simple_boolean_expression, Generic_literal);
	the_value: BOOLEAN;
	END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Silhouette_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Comparison_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Boundary_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Comparison_greater
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Comparison_greater_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Comparison_less
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Comparison_less_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Comparison_not_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
	ENTITY Defined_function
	 ABSTRACT SUPERTYPE;
 	END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Rolling_curve_pair
  SUBTYPE OF (Planar_curve_pair);
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Equals_expression
 	SUBTYPE OF (Binary_boolean_expression);
        END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
        ENTITY Expression
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        NUMERIC_EXPRESSION,
                        BOOLEAN_EXPRESSION))
 	SUBTYPE OF (Generic_expression);
 	END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Gear_pair_with_range
  SUBTYPE OF (Gear_pair);
  lower_limit_actual_rotation_1          : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation_1          : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation_1)
        OR
        NOT EXISTS(upper_limit_actual_rotation_1))
       XOR
       (lower_limit_actual_rotation_1 < upper_limit_actual_rotation_1);
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
  	ENTITY Int_numeric_variable
  	SUBTYPE OF (Numeric_variable);
  	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Interval_expression
	  SUBTYPE OF (Boolean_expression, Multiple_arity_generic_expression) ;
	   DERIVE
	    interval_low: Generic_expression
	      := SELF\Multiple_arity_generic_expression.operands[1];
	    interval_item: Generic_expression
	      := SELF\Multiple_arity_generic_expression.operands[2];
	    interval_high: Generic_expression
	      := SELF\Multiple_arity_generic_expression.operands[3];
	 WHERE
	  WR1:('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EXPRESSION'
	        IN TYPEOF(interval_low))
	     AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EXPRESSION'
	        IN TYPEOF(interval_item) )
	     AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EXPRESSION'
	        IN TYPEOF(interval_high));
	 WR2:(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
	       IN TYPEOF (SELF.Interval_low))
	     AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
	       IN TYPEOF (SELF.Interval_high))
	     AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION'
	       IN TYPEOF (SELF.Interval_item)))
	 OR
	    (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION'
	       IN TYPEOF(SELF.Interval_low))
	    AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION'
	       IN TYPEOF(SELF.Interval_item))
	    AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION'
	      IN TYPEOF(SELF.Interval_high)));
 	END_ENTITY; 	
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Literal_number
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        INT_LITERAL,
                        REAL_LITERAL))
 	SUBTYPE OF (Simple_numeric_expression, Generic_literal);
 	the_value: NUMBER;
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Minus_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Mod_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Mult_expression
 	SUBTYPE OF (Multiple_arity_numeric_expression);
 	END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Rack_and_pinion_pair_with_range
  SUBTYPE OF (Rack_and_pinion_pair);
  lower_limit_rack_displacement          : OPTIONAL length_measure;
  upper_limit_rack_displacement          : OPTIONAL length_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_rack_displacement)
        OR
        NOT EXISTS(upper_limit_rack_displacement))
       XOR
       (lower_limit_rack_displacement < upper_limit_rack_displacement);
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Multiple_arity_function_call
 	 ABSTRACT SUPERTYPE
 	SUBTYPE OF (Multiple_arity_numeric_expression);
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Multiple_arity_numeric_expression
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        PLUS_EXPRESSION,
                        MULT_EXPRESSION,
                        MULTIPLE_ARITY_FUNCTION_CALL))
 	SUBTYPE OF (Numeric_expression, Multiple_arity_generic_expression);
 	SELF\Multiple_arity_generic_expression.operands : LIST [2:?] OF Numeric_expression;
 	END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Mechanism_state_representation 
  SUBTYPE OF (Representation);
  SELF\representation.items : SET[1:?] OF Pair_value; 
  represented_mechanism : Mechanism_representation;
DERIVE
  SELF\representation.context_of_items : Geometric_coordinate_space := represented_mechanism.context_of_items;
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Numeric_expression
 	 ABSTRACT SUPERTYPE
 	SUBTYPE OF (Expression);
 	DERIVE
 	is_int: BOOLEAN := Is_int_expr (SELF);
 	sql_mappable: BOOLEAN := Is_sql_mappable (SELF);
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Numeric_variable
 	SUPERTYPE OF (ONEOF (
              INT_NUMERIC_VARIABLE,
              REAL_NUMERIC_VARIABLE))
 	SUBTYPE OF (Simple_numeric_expression, Variable);
 	WHERE
 	WR1: ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.INT_NUMERIC_VARIABLE' IN TYPEOF(SELF) ) OR
 	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REAL_NUMERIC_VARIABLE' IN TYPEOF(SELF) );
 	END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_topology_tree_structure
  SUBTYPE OF (Kinematic_topology_directed_structure);
END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_topology_network_structure
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF Kinematic_loop; 
  parent : kinematic_topology_structure;
WHERE
  WR1: context_of_items :=: parent.context_of_items;
  WR2: get_kinematic_joints_from_kinematic_loops(items) <= parent.items;
END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_topology_substructure
  SUBTYPE OF (Kinematic_topology_structure);
  parent : Kinematic_topology_structure;
WHERE
  WR1: SELF\Representation.context_of_items :=: parent\Representation.context_of_items;
  WR2: SELF\Representation.items <= parent\Representation.items;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Rolling_surface_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Rolling_surface_pair;
  actual_point_on_surface         : Point_on_surface;
  actual_rotation                 : plane_angle_measure;
WHERE
  WR1: SELF\pair_value.applies_to_pair\surface_pair.surface_1 :=:
       actual_point_on_surface.supporting_surface;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Sliding_surface_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : sliding_surface_pair;
  actual_point_on_surface_1       : Point_on_surface;
  actual_point_on_surface_2       : Point_on_surface;
  actual_rotation                 : plane_angle_measure;
WHERE
  WR1: SELF\pair_value.applies_to_pair\surface_pair.surface_1 :=:
       actual_point_on_surface_1.supporting_surface;
  WR2: SELF\pair_value.applies_to_pair\surface_pair.surface_2 :=:
       actual_point_on_surface_2.supporting_surface;
END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Hatch_style
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXTERNALLY_DEFINED_HATCH_STYLE,
                        USER_DEFINED_HATCH_STYLE))
  SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Simple_numeric_expression
 	 ABSTRACT SUPERTYPE OF (ONEOF (
                        LITERAL_NUMBER,
                        NUMERIC_VARIABLE))
 	SUBTYPE OF (Numeric_expression, Simple_generic_expression);
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
  	ENTITY Slash_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Unary_boolean_expression
 	 ABSTRACT SUPERTYPE
 	SUBTYPE OF (Boolean_expression, Unary_generic_expression);
 	END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Prismatic_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Prismatic_pair;
  actual_translation              : length_measure;
END_ENTITY;
(* USED FROM (Numeric_expression_arm); *)
 	ENTITY Xor_expression
 	SUBTYPE OF (Binary_boolean_expression);
 	SELF\Binary_generic_expression.operands: LIST [2:2] OF Boolean_expression;
 	END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Screw_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Screw_pair;
  actual_rotation                 : plane_angle_measure;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY Composition_of_state_definition
  SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.whole :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.part :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      part :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      whole :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : SET[1:?] OF State_definition;
  related : SET[1:?] OF State_definition;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_definition_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
(* USED FROM (Foundation_state_definition_arm); *)
ENTITY State_transition_definition
SUBTYPE OF (State_definition_relationship);

  (* removed : SELF\State_definition_relationship.end_state :   SET[1:?] OF STATE_DEFINITION *)

  (* removed : SELF\State_definition_relationship.start_state :   SET[1:?] OF STATE_DEFINITION *)
    DERIVE
      end_state :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.relating;  -- RELATING : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      start_state :  SET[1:?] OF STATE_DEFINITION := SELF\State_definition_relationship.related;  -- RELATED : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Sliding_curve_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Sliding_curve_pair;
  actual_point_on_curve_1         : Point_on_curve;
  actual_point_on_curve_2         : Point_on_curve;
WHERE
  WR1: SELF\pair_value.applies_to_pair\planar_curve_pair.curve_1 :=:
       actual_point_on_curve_1.supporting_curve;
  WR2: SELF\pair_value.applies_to_pair\planar_curve_pair.curve_2 :=:
       actual_point_on_curve_2.supporting_curve;
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
 ENTITY Structured_text_composition
   SUBTYPE OF (Representation_item);
  content: string_representation_item_list_or_set;
 END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_property_topology_representation
  SUBTYPE OF (Kinematic_property_definition_representation);
  SELF\property_definition_representation.used_representation : kinematic_topology_representation_select; 
  base : kinematic_link;
WHERE
  WR1: SELF\property_definition_representation.used_representation IN using_representations(base);
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Rolling_curve_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Rolling_curve_pair;
  actual_point_on_curve_1         : Point_on_curve;
WHERE
  WR1: SELF\pair_value.applies_to_pair\planar_curve_pair.curve_1 :=:
       actual_point_on_curve_1.supporting_curve;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Gear_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Gear_pair;
  actual_rotation_1               : plane_angle_measure;
DERIVE
  actual_rotation_2               : plane_angle_measure
                                  := - actual_rotation_1 *
                                     SELF\pair_value.applies_to_pair\
                                     gear_pair.gear_ratio;
END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Solid_fill_area_style;
    fill_colour : Colour; 
  END_ENTITY;  
(* USED FROM (Work_order_arm); *)
ENTITY Work_order;
  name : STRING;
  description : OPTIONAL STRING;
  in_response_to : SET[0:?] OF Work_request;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Event_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_event : Event;
  related_event : Event;
END_ENTITY;
(* USED FROM (Event_arm); *)
ENTITY Relative_event
  SUBTYPE OF (Event);
  base_event : Event;
  offset : Duration;
END_ENTITY;
(* USED FROM (Specified_product_arm); *)
  ENTITY Product_specification
    SUBTYPE OF (Product_configuration);
      version_id                              : OPTIONAL STRING;
      SELF\Product_configuration.item_context : Product_class;
      defining_specifications                 : SET [0:?] OF Specification;
  END_ENTITY;
(* USED FROM (Specified_product_arm); *)
  ENTITY Specification_based_product_version
    SUBTYPE OF (Product_version);
    INVERSE
      specification_source : Item_design_association FOR design;
    WHERE
      WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_SPECIFICATION' IN TYPEOF(specification_source.configuration);
  END_ENTITY;
(* USED FROM (Part_definition_relationship_arm); *)
ENTITY Make_from_relationship
  SUBTYPE OF (View_definition_usage);
  SELF\View_definition_relationship.relating_view: Part_view_definition;
  SELF\View_definition_relationship.related_view: Part_view_definition;
  quantity  : OPTIONAL Value_with_unit;
  priority  : OPTIONAL INTEGER;
WHERE
WR1: SELF\View_definition_relationship.relating_view :<>: 
  SELF\View_definition_relationship.related_view ;
WR2: NOT(EXISTS(quantity)) XOR 
	((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;
(* USED FROM (Product_replacement_arm); *)
ENTITY Alternate_product_relationship;
   name : OPTIONAL STRING;
   description : OPTIONAL STRING;
   alternate_product : Product;
   base_product : Product;
   criteria : OPTIONAL STRING;
UNIQUE
   UR1: alternate_product , base_product ;
WHERE
   WR1: alternate_product  :<>: base_product ;
   WR2: EXISTS(criteria) OR (TYPEOF(SELF\Alternate_product_relationship) <> TYPEOF(SELF));
END_ENTITY;
(* USED FROM (Product_replacement_arm); *)
ENTITY Assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship        : Assembly_component_relationship;
  substitute_relationship  : Assembly_component_relationship;
UNIQUE
  UR1 : base_relationship, substitute_relationship;
WHERE
  WR1: base_relationship.relating_view :=: substitute_relationship.relating_view;
  WR2: base_relationship :<>: substitute_relationship;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Planar_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Planar_pair;
  actual_rotation                 : plane_angle_measure;
  actual_translation_x            : length_measure;
  actual_translation_y            : length_measure;
END_ENTITY;
(* USED FROM (Assembly_component_arm); *)
ENTITY Component_make_from_relationship
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view : Assembly_component;  -- reusable_component : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\View_definition_relationship.related_view : Assembly_component;  -- resultant_component : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      resultant_component : ASSEMBLY_COMPONENT := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      reusable_component : ASSEMBLY_COMPONENT := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

WHERE
  WR1 : resultant_component <> reusable_component;
END_ENTITY;
(* USED FROM (Assembly_component_arm); *)
ENTITY Physical_component
  SUBTYPE OF (Assembly_component);
END_ENTITY;
(* USED FROM (Assembly_component_arm); *)
ENTITY Thermal_component
  SUBTYPE OF (Assembly_component);
END_ENTITY;
(* USED FROM (Assembly_shape_arm); *)
ENTITY Assembly_shape
  SUBTYPE OF (Part_shape);
  SELF\Item_shape.described_element : Assembly_definition;
END_ENTITY;  
(* USED FROM (Assembly_shape_arm); *)
ENTITY Component_path_shape_element
    SUBTYPE OF (Shape_element);
    location : multi_or_next_assembly_usage_occurrence;
    component_shape_element : internal_or_reflected_shape_element;
  UNIQUE
    UR1 : location, component_shape_element;
  WHERE
    WR1: NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE' IN TYPEOF(location)) OR
      EXISTS(location\Assembly_component_relationship.location_indicator); 
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Point_on_planar_curve_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Point_on_planar_curve_pair;
  actual_point_on_curve           : Point_on_curve;
  input_orientation               : spatial_rotation;
WHERE
  WR1: SELF\pair_value.applies_to_pair\point_on_planar_curve_pair.pair_curve
       :=: actual_point_on_curve.supporting_curve;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Rotation_about_direction
  SUBTYPE OF (Detailed_geometric_model_element); -- LK
  direction_of_axis : Direction;
  rotation_angle    : plane_angle_measure;
WHERE
  WR1: SIZEOF (direction_of_axis.direction_ratios) = 3;
END_ENTITY;
(* USED FROM (Requirement_view_definition_arm); *)
ENTITY Requirement_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Requirement_version;
END_ENTITY;
(* USED FROM (Parametric_representation_arm); *)
ENTITY Definitional_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Parametric_representation_context;
END_ENTITY; 
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Product_definition_kinematics
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : Part_view_definition;
INVERSE
  representation_relation : Kinematic_property_definition_representation FOR definition;
UNIQUE
  UR1 : described_element;   
END_ENTITY;
(* USED FROM (Parametric_representation_arm); *)
ENTITY Parametric_representation_context
  SUBTYPE OF (Representation_context);
END_ENTITY;
(* USED FROM (Time_interval_assignment_arm); *)
ENTITY Time_interval_role;
  name : STRING;
  description : STRING;
END_ENTITY;
(* USED FROM (Time_interval_assignment_arm); *)
ENTITY Time_interval_assignment;
  assigned_time_interval : Time_interval;
  role : Time_interval_role;
  items : SET[1:?] OF time_interval_item;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Pair_representation_relationship
  SUBTYPE OF (Detailed_geometric_model_element, Geometric_model_relationship);
  SELF\Representation_relationship.rep_1 : Kinematic_link_representation;
  SELF\Representation_relationship.rep_2 : Kinematic_link_representation;
  transformation_operator : Kinematic_pair;
WHERE
  WR1: transformation_operator.transform_item_1 IN rep_1.items;
  WR2: transformation_operator.transform_item_2 IN rep_2.items;
  WR3: rep_1\kinematic_link_representation.represented_link = transformation_operator\kinematic_pair.joint.edge_start; 
  WR4: rep_2\kinematic_link_representation.represented_link = transformation_operator\kinematic_pair.joint.edge_end; 
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Kinematic_link_representation
   ABSTRACT SUPERTYPE OF (ONEOF (
                        LINEAR_FLEXIBLE_LINK_REPRESENTATION,
                        RIGID_LINK_REPRESENTATION))
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Geometric_coordinate_space;
  SELF\Representation.items : SET[1:?] OF kinematic_link_representation_items;
  represented_link : Kinematic_link;
INVERSE
  associated_shape_representation : SET[0:1] OF Kinematic_link_representation_association FOR rep_1;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Linear_flexible_link_representation
  SUBTYPE OF (Kinematic_link_representation);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Rigid_link_representation
  SUBTYPE OF (Kinematic_link_representation);
END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Solution_element;
    resolved_requirement: complex_product_select;
    element: Product_occurrence;
    description : OPTIONAL STRING;
  END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Alternative_solution;
    id : STRING;
    version_id : OPTIONAL STRING;
    base_element : complex_product_select;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Kinematic_pair
   ABSTRACT SUPERTYPE OF (ONEOF (
                        HIGH_ORDER_KINEMATIC_PAIR,
                        LOW_ORDER_KINEMATIC_PAIR_WITH_MOTION_COUPLING,
                        LOW_ORDER_KINEMATIC_PAIR)
                        ANDOR 
                        ACTUATED_KINEMATIC_PAIR)
  SUBTYPE OF (Detailed_geometric_model_element);
  joint : Kinematic_joint;
  transform_item_1 : rigid_placement;
  transform_item_2 : rigid_placement;
DERIVE
  associated_link_representations_1 : SET[1:?] OF Kinematic_link_representation :=
    sort_link_associations(link_representation_associations, TRUE);
  associated_link_representations_2 : SET[1:?] OF Kinematic_link_representation :=
    sort_link_associations(link_representation_associations, FALSE);
INVERSE
  link_representation_associations : SET[1:?] OF Pair_representation_relationship FOR transformation_operator; 
END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
	ENTITY Length_function
	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
	SELF\Unary_generic_expression.operand: String_expression;
	END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Supplier_solution
    SUBTYPE OF (Alternative_solution);
      supplier : Organization;
      probability_rate : OPTIONAL REAL;
    DERIVE
      actual_rate : REAL := NVL(probability_rate, 1.0);
    WHERE
      WR1: { 0.0 <= actual_rate <= 1.0 };
  END_ENTITY;
(* USED FROM (Incomplete_data_reference_mechanism_arm); *)
  ENTITY Incomplete_reference_marking
    SUBTYPE OF (Classification_assignment);
     SELF\Classification_assignment.items : SET [1:?] OF idrm_marked_item;
    WHERE
      WR1: SELF\Classification_assignment.assigned_class.id = 'reference';
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Actuated_kinematic_pair
  SUBTYPE OF (Kinematic_pair);
  t_x : OPTIONAL actuated_direction;
  t_y : OPTIONAL actuated_direction;
  t_z : OPTIONAL actuated_direction;
  r_x : OPTIONAL actuated_direction;
  r_y : OPTIONAL actuated_direction;
  r_z : OPTIONAL actuated_direction;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Revolute_pair_with_range
  SUBTYPE OF (Revolute_pair);
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Prismatic_pair_with_range
  SUBTYPE OF (Prismatic_pair);
  lower_limit_actual_translation         : OPTIONAL length_measure;
  upper_limit_actual_translation         : OPTIONAL length_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_translation)
        OR
        NOT EXISTS(upper_limit_actual_translation))
       XOR
       (lower_limit_actual_translation < upper_limit_actual_translation);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Revolute_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_breakdown
    SUBTYPE OF (Breakdown);
  END_ENTITY;
(* USED FROM (Alternative_solution_arm); *)
  ENTITY Technical_solution
    SUBTYPE OF (Alternative_solution);
      description : STRING;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Screw_pair_with_range
  SUBTYPE OF (screw_pair);
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Descriptive_document_property
  SUBTYPE OF (String_representation_item);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Cylindrical_pair_with_range
  SUBTYPE OF (Cylindrical_pair);
  lower_limit_actual_translation         : OPTIONAL length_measure;
  upper_limit_actual_translation         : OPTIONAL length_measure;
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_translation)
        OR
        NOT EXISTS(upper_limit_actual_translation))
       XOR
       (lower_limit_actual_translation < upper_limit_actual_translation);
  WR2: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Spherical_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_breakdown_context
    SUBTYPE OF (Breakdown_context);
      SELF\Breakdown_context.breakdown : Functional_breakdown_version;
      SELF\Breakdown_context.breakdown_element : Functional_element_definition;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Spherical_pair_with_pin
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Spherical_pair_with_pin_and_range
  SUBTYPE OF (Spherical_pair_with_pin);
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR2: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Universal_pair
  SUBTYPE OF (Low_order_kinematic_pair);
  input_skew_angle : OPTIONAL plane_angle_measure;
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := TRUE;     
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
  skew_angle : plane_angle_measure := NVL (input_skew_angle, 0.0);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Universal_pair_with_range
  SUBTYPE OF (Universal_pair);
  lower_limit_first_rotation             : OPTIONAL plane_angle_measure;
  upper_limit_first_rotation             : OPTIONAL plane_angle_measure;
  lower_limit_second_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_second_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_first_rotation)
        OR
        NOT EXISTS(upper_limit_first_rotation))
       XOR
       (lower_limit_first_rotation < upper_limit_first_rotation);
  WR2: (NOT EXISTS(lower_limit_second_rotation)
        OR
        NOT EXISTS(upper_limit_second_rotation))
       XOR
       (lower_limit_second_rotation < upper_limit_second_rotation);
END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element
    SUBTYPE OF (Breakdown_element);
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element_definition
    SUBTYPE OF (Breakdown_element_definition);
      SELF\Breakdown_element_definition.defined_version : Functional_element_version;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Planar_pair_with_range
  SUBTYPE OF (Planar_pair);
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  lower_limit_actual_translation_x       : OPTIONAL length_measure;
  upper_limit_actual_translation_x       : OPTIONAL length_measure;
  lower_limit_actual_translation_y       : OPTIONAL length_measure;
  upper_limit_actual_translation_y       : OPTIONAL length_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
  WR2: (NOT EXISTS(lower_limit_actual_translation_x)
        OR
        NOT EXISTS(upper_limit_actual_translation_x))
       XOR
       (lower_limit_actual_translation_x < upper_limit_actual_translation_x);
  WR3: (NOT EXISTS(lower_limit_actual_translation_y)
        OR
        NOT EXISTS(upper_limit_actual_translation_y))
       XOR
       (lower_limit_actual_translation_y < upper_limit_actual_translation_y);
END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element_usage
    SUBTYPE OF (Breakdown_element_usage);
      SELF\View_definition_relationship.relating_view : Functional_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\View_definition_relationship.related_view : Functional_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Tool_centre_point_frame
  SUBTYPE OF (Axis_placement_3d);
DERIVE  
  SELF\Representation_item.name : label := ?;
END_ENTITY;  
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Unconstrained_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_element_version
    SUBTYPE OF (Breakdown_element_version);
      SELF\Breakdown_element_version.of_product : Functional_element;
  END_ENTITY;
(* USED FROM (Numeric_function_arm); *)
	ENTITY Function_parameter_value
	SUPERTYPE OF (
              INT_VALUE_FUNCTION)

	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
	SELF\Unary_generic_expression.operand: String_expression;
	END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Material_specification_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'material specification';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Process_state_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'process state';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown_context
    SUBTYPE OF (Breakdown_context);
      SELF\Breakdown_context.breakdown         : Physical_breakdown_version;
      SELF\Breakdown_context.breakdown_element : Physical_element_definition;
  END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Surface_finish_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'surface finish';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_appearance;
    side   : surface_side;    
    styles : SET[1:7] OF Surface_appearance_element;
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Surface_colour 
    SUBTYPE OF (Surface_appearance_element);
      assigned_colour : Colour;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element
    SUBTYPE OF (Breakdown_element);
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Parameter_line_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
      number_of_u_curves : INTEGER;
      number_of_v_curves : INTEGER;
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY User_defined_tile_style
    SUBTYPE OF (Tile_style);
      first_direction_repeat_factor  : Vector;
      second_direction_repeat_factor : Vector;
      tiling_scale                   : INTEGER;
  END_ENTITY;
(* USED FROM (General_surface_appearance_arm); *)
  ENTITY Control_grid_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Sliding_curve_pair
  SUBTYPE OF (Planar_curve_pair);
END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_version
    SUBTYPE OF (Breakdown_element_version);
      SELF\Breakdown_element_version.of_product : Physical_element;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_usage
    SUBTYPE OF (Breakdown_element_usage);
      SELF\View_definition_relationship.relating_view : Physical_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\View_definition_relationship.related_view : Physical_element_definition;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)

  END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request_status  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_WORK_REQUEST_STATUS,
               EXTERNALLY_DEFINED_WORK_REQUEST_STATUS) ) ;
  status : STRING;
  work_request : Work_request;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Work_request;
  related : Work_request;
END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Tile_style
     ABSTRACT SUPERTYPE OF (ONEOF (
                        EXTERNALLY_DEFINED_TILE_STYLE,
                        USER_DEFINED_TILE_STYLE))

	SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY User_defined_hatch_style
    SUBTYPE OF (Hatch_style);
      hatch_line_appearance         : Curve_appearance;
      start_of_next_hatch_line      : Vector;
      point_of_reference_hatch_line : Cartesian_point;
      pattern_start                 : Cartesian_point;
      hatch_line_angle              : Angle_data_element;
    WHERE
     WR1 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SOLID_CURVE_FONT' IN TYPEOF(SELF.hatch_line_appearance.font);
  END_ENTITY;
(* USED FROM (Part_collection_arm); *)
  ENTITY Collected_item_association
    SUBTYPE OF (Product_occurrence_definition_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Collection_definition;
    WHERE
      WR1: NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(SELF));
  END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Pair_value
   ABSTRACT SUPERTYPE OF (ONEOF (
                        SLIDING_SURFACE_PAIR_VALUE,
                        ROLLING_SURFACE_PAIR_VALUE,
                        REVOLUTE_PAIR_VALUE,
                        PRISMATIC_PAIR_VALUE,
                        SCREW_PAIR_VALUE,
                        CYLINDRICAL_PAIR_VALUE,
                        SPHERICAL_PAIR_VALUE,
                        SLIDING_CURVE_PAIR_VALUE,
                        ROLLING_CURVE_PAIR_VALUE,
                        GEAR_PAIR_VALUE,
                        RACK_AND_PINION_PAIR_VALUE,
                        UNIVERSAL_PAIR_VALUE,
                        PLANAR_PAIR_VALUE,
                        UNCONSTRAINED_PAIR_VALUE,
                        POINT_ON_SURFACE_PAIR_VALUE,
                        POINT_ON_PLANAR_CURVE_PAIR_VALUE))
  SUBTYPE OF (Detailed_geometric_model_element);
  applies_to_pair : Kinematic_pair;
END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Externally_defined_tile_style
    SUBTYPE OF (Tile_style); 
  END_ENTITY;
(* USED FROM (Part_collection_arm); *)
  ENTITY Collection_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Revolute_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Revolute_pair;
  actual_rotation                 : plane_angle_measure ;
END_ENTITY;
(* USED FROM (Product_placement_arm); *)
ENTITY Occurrence_placement
 ABSTRACT SUPERTYPE OF (ONEOF (
                        PART_OCCURRENCE_PLACEMENT,
                        PHYSICAL_ELEMENT_PLACEMENT));
  reference_physical_element: Physical_element_definition;
  reference_geometric_space : Geometric_model;
  positioned_representation : template_instance;
END_ENTITY;
(* USED FROM (Product_placement_arm); *)
ENTITY Part_occurrence_placement
SUBTYPE OF(Occurrence_placement);
  placed_part_occurrence: Single_instance;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Cylindrical_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Cylindrical_pair;
  actual_translation              : length_measure;
  actual_rotation                 : plane_angle_measure;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Spherical_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Spherical_pair;
  input_orientation               : spatial_rotation;
END_ENTITY;
(* USED FROM (Product_placement_arm); *)
ENTITY Physical_element_placement
SUBTYPE OF(Occurrence_placement);
  placed_physical_element: Physical_element_definition;
WHERE
WR1: placed_physical_element\Product_view_definition.defined_version :<>: 
	SELF\Occurrence_placement.reference_physical_element\Product_view_definition.defined_version;
END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown
    SUBTYPE OF (Product);
  END_ENTITY;
(* USED FROM (Fill_area_style_arm); *)
  ENTITY Externally_defined_hatch_style
    SUBTYPE OF (Hatch_style); 
  END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Rack_and_pinion_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Rack_and_pinion_pair;
  actual_displacement             : length_measure;
DERIVE
  actual_rotation : plane_angle_measure
   := 0.0; (*
                  := convert_plane_angle_for_pair_from_radian
                     (SELF\pair_value.applies_to_pair,
                      (- actual_displacement /
                       SELF\pair_value.applies_to_pair\
                       rack_and_pinion_pair.pinion_radius)); *)
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Universal_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Universal_pair;
  first_rotation_angle            : plane_angle_measure;
  second_rotation_angle           : plane_angle_measure;
END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element
    SUBTYPE OF (Product);
  END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Unconstrained_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Unconstrained_pair;
  actual_placement                : Axis_placement_3d;
END_ENTITY;
(* USED FROM (Kinematic_state_arm); *)
ENTITY Point_on_surface_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Point_on_surface_pair;
  actual_point_on_surface         : Point_on_surface;
  input_orientation               : spatial_rotation;
WHERE
  WR1: SELF\pair_value.applies_to_pair\Point_on_surface_pair.pair_surface :=:
       actual_point_on_surface.supporting_surface;
END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_definition
    SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Breakdown_element_version;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_realization
    SUBTYPE OF (Product_definition_element_relationship);
  END_ENTITY;
(* USED FROM (Name_assignment_arm); *)
ENTITY Name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;
(* USED FROM (Work_order_arm); *)
ENTITY Directed_activity
  SUBTYPE OF (Activity);
  directive : Work_order;
END_ENTITY;
(* USED FROM (Document_structure_arm); *)
ENTITY File_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : File;
  related_document_file : File;
WHERE
  WR1: relating_document_file:<>: related_document_file;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Numerical_document_property
  SUBTYPE OF (Numerical_item_with_unit);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;
(* USED FROM (Document_structure_arm); *)
ENTITY Document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : Document_definition;
  related_document_definition : Document_definition;
WHERE
  WR1: relating_document_definition :<>: related_document_definition;
END_ENTITY;
(* USED FROM (Configuration_effectivity_arm); *)
ENTITY Item_usage_effectivity;
  effectivity_domain : Effectivity;
  item_usage_relationship : item_usage_relationship_item;
  resolved_configuration : Item_design_association;
END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Assigned_document_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : document_property_item;
DERIVE
  SELF\Assigned_property.name : STRING := 'document property';
WHERE
  WR1: SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DOCUMENT_DEFINITION', 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FILE']*TYPEOF(SELF\Assigned_property.described_element)) = 1;
END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown_element;
  END_ENTITY;
(* USED FROM (Functional_breakdown_arm); *)
  ENTITY Functional_breakdown_version
    SUBTYPE OF (Breakdown_version);
    SELF\Breakdown_version.of_product : Functional_breakdown;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_of;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : Breakdown_version;
    of_target   : breakdown_of_target;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown;
    INVERSE
      breakdown_of : SET[1:?] OF Breakdown_of FOR breakdown;
  END_ENTITY;
(* USED FROM (Software_arm); *)
  ENTITY Software_version
    SUBTYPE OF (Information_version);
    SELF\Product_version.of_product : Software;
  END_ENTITY;
(* USED FROM (Software_arm); *)
  ENTITY Software_definition 
    SUBTYPE OF (Information_definition);
    SELF\Product_view_definition.defined_version : Software_version;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown
    SUBTYPE OF (Breakdown);
  END_ENTITY;
(* USED FROM (External_class_arm); *)
  ENTITY External_class
    SUBTYPE OF (Class);
      external_source : External_class_library;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_breakdown_version
    SUBTYPE OF (Breakdown_version);
      SELF\Breakdown_version.of_product : Physical_breakdown;
  END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Product_definition_element_relationship;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : breakdown_item;
    product     : product_item;
  END_ENTITY;
(* USED FROM (Physical_breakdown_arm); *)
  ENTITY Physical_element_definition
    SUBTYPE OF (Breakdown_element_definition);
      SELF\Breakdown_element_definition.defined_version : Physical_element_version;
  END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Affected_items_assignment;
  assigned_work_request : Work_request;
  items : SET[1:?] OF affected_item_select;
END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Work_request  SUPERTYPE OF (ONEOF (
               PRE_DEFINED_WORK_REQUEST,
               EXTERNALLY_DEFINED_WORK_REQUEST) ) ;
  request_id : STRING;
  version_id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
(* USED FROM (Property_as_definition_arm); *)
ENTITY Single_property_is_definition
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : Product_view_definition;
UNIQUE
  UR1: SELF\Assigned_property.described_element;
END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
ENTITY Requirement
SUBTYPE OF (Product);
END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_inclusion;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  if_condition : specification_operand_select;
  included_specification : specification_operand_select;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_expression;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  operation : expression_operator;
  operand : SET[1:?] OF specification_operand_select;
 WHERE
 WR1: (operation <> not_operator) OR (SIZEOF(operand)=1); 
 END_ENTITY;
(* USED FROM (Software_arm); *)
  ENTITY Software 
    SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_category;
  id : STRING;
  description : STRING;
  implicit_exclusive_condition : BOOLEAN;
 END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_context;
    id                : STRING;
    name              : STRING;
    description       : OPTIONAL STRING;
    breakdown         : Breakdown_version;
    breakdown_element : Breakdown_element_definition;
  END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification_category_hierarchy;
  sub_category : Specification_category;
  super_category : Specification_category;
 END_ENTITY;
(* USED FROM (External_class_arm); *)
  ENTITY External_class_library
    SUBTYPE OF (External_source);
  END_ENTITY;
(* USED FROM (Work_request_arm); *)
ENTITY Activity_method_assignment;
  relation_type : STRING;
  assigned_method : Activity_method;
  associated_request : Work_request;
END_ENTITY;
(* USED FROM (Product_breakdown_arm); *)
  ENTITY Breakdown_element_usage
    SUBTYPE OF (View_definition_usage);
      name : STRING;

      SELF\View_definition_relationship.relating_view : Breakdown_element_definition;  -- parent_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
      SELF\View_definition_relationship.related_view : Breakdown_element_definition;  -- child_element : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      child_element : BREAKDOWN_ELEMENT_DEFINITION := SELF\View_definition_relationship.related_view;  -- RELATED_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      parent_element : BREAKDOWN_ELEMENT_DEFINITION := SELF\View_definition_relationship.relating_view;  -- RELATING_VIEW : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

  END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
ENTITY Requirement_version_relationship
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Requirement_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\Product_version_relationship.related_version : Requirement_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : REQUIREMENT_VERSION := SELF\Product_version_relationship.relating_version;  -- RELATING_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : REQUIREMENT_VERSION := SELF\Product_version_relationship.related_version;  -- RELATED_VERSION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Requirement_identification_and_version_arm); *)
ENTITY Requirement_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Requirement;
END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Product_class_relationship;
  description : OPTIONAL STRING;
  relating : Product_class;
  related : Product_class;
  relation_type : STRING;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
ENTITY Product_class
  SUBTYPE OF (Product_concept);
  version_id : OPTIONAL STRING;
  level_type : OPTIONAL STRING;
WHERE
WR1: NOT EXISTS(SELF\Product_concept.target_market);
END_ENTITY;
(* USED FROM (Property_as_definition_arm); *)
ENTITY Representation_proxy_item
  SUBTYPE OF (Representation_item);
  item : representation_proxy_select;
END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Specification;
  id : STRING;
  version_id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  category : Specification_category;
  package : BOOLEAN;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_inclusion_association;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_inclusion : Specification_inclusion;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_specification_association;
  associated_product_class : Product_class;
  association_type : STRING;
  associated_specification : Specification;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_category_association;
  associated_product_class : Product_class;
  mandatory : BOOLEAN;
  associated_category : Specification_category;
 END_ENTITY;
(* USED FROM (Product_class_arm); *)
 ENTITY Class_condition_association;
  condition_type : STRING;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_condition : Specification_expression;
 END_ENTITY;
(* USED FROM (Specification_based_configuration_arm); *)
ENTITY Configuration;
  configured_element : configured_item_select;
  is_solution_for : configured_specification_select;
  configuration_type : configuration_kind;
  inheritance_type : configuration_inheritance_types;
WHERE
WR1: consistent_configuration_type(SELF);
END_ENTITY;
(* USED FROM (Assembly_component_arm); *)
ENTITY Assembly_component
  SUBTYPE OF (Definition_based_product_occurrence, Part_occurrence_shape);
DERIVE
  SELF\Item_shape.described_element : Assembly_component := SELF;
  assemblies : SET OF Product_view_definition := ac_get_assemblies(SELF);
  groups : SET OF Assembly_group_component := ac_get_groups(SELF);
  versions : SET OF Product_version := ac_get_versions(assemblies);
  product : SET OF Product := ac_get_products(versions);
INVERSE
  SELF\Product_occurrence.occurrence_contexts : SET[1:?] OF Assembly_component_relationship FOR related_view;
WHERE
  WR1 : NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(SELF)) XOR ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(derived_from))) OR 
        NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(SELF)) XOR ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PADSTACK_DEFINITION' IN TYPEOF(SELF\Definition_based_product_occurrence.derived_from)));
  WR2 : SELF\Product_view_definition.defined_version :=: SELF\Definition_based_product_occurrence.derived_from.defined_version;
  WR3 : SIZEOF(assemblies) = SIZEOF(versions);
  WR4 : SIZEOF(product) = 1;
  WR5 : (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1])) OR
         (SIZEOF(groups) = 0) OR 
         (ac_get_group_assemblies(groups) = assemblies));
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Qualified_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:4] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: valid_qualified_tolerance_characteristic(SELF);
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Surface_pair_with_range
  SUBTYPE OF (Surface_pair);
  range_on_surface_1                     : Trimmed_surface;
  range_on_surface_2                     : Trimmed_surface;
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: SELF\Surface_pair.surface_1 :=: range_on_surface_1.basis_surface;
  WR2: SELF\Surface_pair.surface_2 :=: range_on_surface_2.basis_surface;
  WR3: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_surface_1 IN r.items))) = 0;
  WR5: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(range_on_surface_2 IN r.items))) = 0;
END_ENTITY;
(* USED FROM (Specification_control_arm); *)
  ENTITY Breakdown_node_relationship;
      description   : OPTIONAL STRING;
      relating      : complex_product_select;
      related       : breakdown_element_select;
      relation_type : STRING;  
    WHERE
      WR1: (NOT (relation_type IN ['functionality', 'realization'])) OR
	    (TYPEOF(related) <> TYPEOF(relating));
      WR2: (NOT (relation_type IN ['decomposition', 'specialization', 'occurrence'])) OR
	    (aggregate1_in_aggregate2(TYPEOF(related),TYPEOF(relating)) OR aggregate1_in_aggregate2(TYPEOF(relating),TYPEOF(related)) ) ;
      WR3: (NOT (relation_type IN ['occurrence'])) OR 
	    ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PHYSICAL_ELEMENT_DEFINITION' IN TYPEOF(relating));
  END_ENTITY;
(* USED FROM (Picture_representation_arm); *)
  ENTITY Picture_representation 
    SUBTYPE OF (View_area); 
      SELF\Representation.items : SET[1:?] OF picture_representation_element_select;
    WHERE
      WR1: SIZEOF(QUERY(item <* items | 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STYLED_ELEMENT' IN TYPEOF(item))) = 1;
      WR2: SIZEOF (QUERY (se <* QUERY (item <* SELF.items 
                   | ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STYLED_ELEMENT' IN TYPEOF (item))) 
         | NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PICTURE_REPRESENTATION_ITEM' 
                IN TYPEOF (se\Styled_element.element)) )) = 0;
  END_ENTITY; 
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Open_edge_loop
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_LOOP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ORIENTED_EDGE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Tangent_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF curve_or_surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:?] OF curve_or_surface;
  near_points         : SET[0:?] OF Near_point_relationship;
  tangent_contact     : tangent_contact_type;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Free_edge
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
      WR5 : SIZEOF(QUERY(sdqr <* bag_to_set(USEDIN(SELF,
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'DATA_QUALITY_INSPECTION_RESULT.'+
             'CRITERION_INSPECTED'))|
             ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
              'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(sdqr)) AND
              (SIZEOF(QUERY(sdqiir <* bag_to_set(USEDIN(sdqr,
                 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                 'DATA_QUALITY_INSPECTION_REPORT.'+
                 'INSPECTION_RESULT'))|
                 ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                  'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
                   IN TYPEOF(sdqiir)) AND
                 (SIZEOF(QUERY(sdqiri <* sdqiir.inspected_instances|
                          ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLOSED_SHELL'
                   IN TYPEOF(sdqiri.inspected_elements[1])))) = 0)
               )) = 0)
            )) = 0;
  END_ENTITY;
(* USED FROM (Assembly_technology_arm); *)
  ENTITY Assembly_joint
    SUPERTYPE OF (
              ASSEMBLED_WITH_FASTENERS
              ANDOR 
              ASSEMBLED_WITH_BONDING)
  SUBTYPE OF (Component_feature_joint);
      SELF\Shape_element_relationship.relating : Physical_component_feature;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\Shape_element_relationship.related : Physical_component_feature;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
      SELF\Shape_element.containing_shape : Assembly_shape;-- This ATTRIBUTE was RENAMED in a supertype; name converted back to original name (P11 G.5.6 bullet 4)
    DERIVE
      assembly_feature_1 : PHYSICAL_COMPONENT_FEATURE := SELF\Component_feature_joint.feature_1;  -- FEATURE_1 : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      assembly_feature_2 : PHYSICAL_COMPONENT_FEATURE := SELF\Component_feature_joint.feature_2;  -- FEATURE_2 : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      associated_assembly : ASSEMBLY_SHAPE := SELF\Component_feature_joint.associated_definition;  -- ASSOCIATED_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
  WHERE
      WR1 : assembly_feature_1 :<>: assembly_feature_2;
      WR2 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR 
             (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_1)) AND 
             (SIZEOF(QUERY(ay <* assembly_feature_1\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <> 
             associated_assembly\Item_shape.described_element)) = 0));
      WR3 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR 
             (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_2)) AND 
             (SIZEOF(QUERY(ay <* assembly_feature_2\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <> 
             associated_assembly\Item_shape.described_element)) = 0));
  END_ENTITY;
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Shape_data_quality_criteria_representation
    SUBTYPE OF(Data_quality_criteria_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
                               'SHAPE_DATA_QUALITY_CRITERION' IN TYPEOF(q))) > 0;
      WR2 :'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERICAL_REPRESENTATION_CONTEXT' 
            IN TYPEOF(context_of_items);
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_measurement_requirement
    SUBTYPE OF(Representation_item);
    WHERE
      WR1 : SIZEOF(QUERY(q <*
              bag_to_set( USEDIN(SELF,
                'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))
              |'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
               'DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION'
               IN TYPEOF(q)))=0;
  END_ENTITY;
(* USED FROM (Extended_date_arm); *)
  ENTITY Ordinal_date;
      day_component  : day_in_year_number;   
      year_component : year_number; 
    WHERE 
      WR1:  ( NOT leap_year ( SELF  . year_component ) AND  { 1 <= day_component <= 365 } ) OR 
        ( leap_year ( SELF . year_component ) AND { 1 <= day_component <= 366 } ) ;  
  END_ENTITY; 
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Kinematic_path
   ABSTRACT SUPERTYPE OF (ONEOF (
                        KINEMATIC_PATH_DEFINED_BY_NODES,
                        KINEMATIC_PATH_DEFINED_BY_CURVES))
  SUBTYPE OF (Detailed_geometric_model_element);
  segments : LIST [1:?] OF Kinematic_path_segment;
  t_start : parameter_value;
DERIVE
  n_segments : INTEGER := SIZEOF(segments);
  closed_path : LOGICAL := segments[n_segments].transition <> curve_transition_code.discontinuous;
WHERE
  WR1: SIZEOF(QUERY(using_rep <* using_representations(SELF)| 
        NOT('KINEMATIC_MOTION_REPRESENTATION_SCHEMA.GEOMETRIC_REPRESENTATION_CONTEXT_WITH_PARAMETER' IN TYPEOF(using_rep.context_of_items))))= 0;
  WR2: ('KINEMATIC_MOTION_REPRESENTATION_SCHEMA.CURVE_BASED_PATH_WITH_ORIENTATION' IN TYPEOF(segments[1]))
      OR (n_segments > 1);
  -- WR2 - parameters are increasing
  -- WR3 - different end positions
END_ENTITY;
(* USED FROM (Kinematic_motion_representation_arm); *)
ENTITY Interpolated_configuration_sequence
  SUBTYPE OF (Representation_item);
  segments : LIST[2:?] OF Interpolated_configuration_segment;
DERIVE
  n_segments : INTEGER := SIZEOF(segments);
  closed_interpolation : LOGICAL := segments[n_segments].interpolation <> discontinuous_interpolation_type;
  configured_mechanism : mechanism_representation := segments[1].state.represented_mechanism;
WHERE
  WR1: SIZEOF( QUERY(ics <* segments | ics.state.represented_mechanism :<>: configured_mechanism)) = 0;
END_ENTITY;  
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Measure_qualification;
      name              : STRING; 
      description       : STRING; 
      qualified_measure : Value_with_unit;
      qualifiers        : SET[1:?] OF value_qualifier;
    WHERE
      WR1 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+'NUMERICAL_ITEM_WITH_UNIT' IN TYPEOF(qualified_measure));
      WR2 : SIZEOF(QUERY(temp <* qualifiers | 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRECISION_QUALIFIER' IN TYPEOF(temp))) < 2;      
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Mechanism_representation 
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Geometric_coordinate_space;
  SELF\Representation.items : SET[1:?] OF Pair_representation_relationship;
  represented_topology : Kinematic_topology_representation_select;
DERIVE
  represented_joints : SET[1:?] OF Kinematic_joint := collect_joints(items); 
WHERE  
  WR1: (('KINEMATIC_TOPOLOGY_SCHEMA.KINEMATIC_TOPOLOGY_STRUCTURE' IN TYPEOF(represented_topology))
         AND (represented_joints :=: represented_topology.items)) OR
       (('KINEMATIC_TOPOLOGY_SCHEMA.KINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE' IN TYPEOF(represented_topology))
         AND (represented_joints :=: get_kinematic_joints_from_oriented_joints(represented_topology.items))) OR
       (('KINEMATIC_TOPOLOGY_SCHEMA.KINEMATIC_TOPOLOGY_NETWORK_STRUCTURE' IN TYPEOF(represented_topology))
         AND (represented_joints :=: get_kinematic_joints_from_kinematic_loops(represented_topology.items)));          
END_ENTITY;
(* USED FROM (Qualified_measure_arm); *)
  ENTITY Qualified_representation_item 
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Representation_item); 
       qualifiers : SET [1:?] OF value_qualifier; 
    WHERE 
      WR1: SIZEOF(QUERY(temp <* qualifiers | 
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRECISION_QUALIFIER' 
        IN TYPEOF(temp))) < 2; 
  END_ENTITY; 
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Rack_and_pinion_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  pinion_radius : length_measure;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Generic_expression_arm); *)
ENTITY Generic_expression
 ABSTRACT SUPERTYPE OF (ONEOF (
                        SIMPLE_GENERIC_EXPRESSION,
                        UNARY_GENERIC_EXPRESSION,
                        BINARY_GENERIC_EXPRESSION,
                        MULTIPLE_ARITY_GENERIC_EXPRESSION));
WHERE 
WR1: Is_Acyclic(SELF);
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Gear_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  radius_first_link  : length_measure;
  radius_second_link : length_measure;
  bevel              : plane_angle_measure;
  helical_angle      : plane_angle_measure;
  gear_ratio         : REAL;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Generic_material_aspects_arm); *)
 ENTITY General_material_property
  SUBTYPE OF (Independent_property);
  WHERE
    WR1:  SIZEOF(QUERY( aip <* USEDIN(SELF,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.APPLIED_INDEPENDENT_PROPERTY.'+
                     'BASE_INDEPENDENT_PROPERTY') |
               NOT
			('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.APPLIED_INDEPENDENT_MATERIAL_PROPERTY' IN
                    TYPEOF(aip)))) = 0;
 END_ENTITY;
(* USED FROM (Modified_swept_solid_arm); *)
  ENTITY Extruded_solid_with_multiple_draft_angles
    SUBTYPE OF (Extruded_solid_with_trim_conditions);
      draft_edges  : LIST[2:?] OF SET[1:?] OF edge_curve;
      draft_angles : LIST[2:?] OF plane_angle_measure;
    WHERE
      WR1: SIZEOF(draft_edges) = SIZEOF(draft_angles);
      WR2: SIZEOF(QUERY(q <* draft_angles | q = 0)) = 0;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Screw_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  pitch : length_measure;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Specification_document_arm); *)
  ENTITY Specification_definition
  	SUPERTYPE OF (ONEOF (
              DESIGN_SPECIFICATION,
              PROCESS_SPECIFICATION,
              MATERIAL_SPECIFICATION,
              TEST_SPECIFICATION,
              LANGUAGE_REFERENCE_MANUAL))
  SUBTYPE OF (Document_definition);
	DERIVE
  		source: SET[0:?] OF Organization_or_person_in_organization_assignment :=
         bag_to_set(QUERY(temp <* USEDIN(SELF,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS') |
                         (temp.role = 'document source') ));
	WHERE
      WR1: EXISTS (source) AND (SIZEOF(source) = 1);
  END_ENTITY;
(* USED FROM (Document_properties_arm); *)
ENTITY Document_property_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF descriptive_or_numerical;
WHERE
  WR1: SIZEOF(QUERY( pr <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSIGNED_PROPERTY' IN TYPEOF (pr\Property_representation.property)))> 0;
  WR2: SELF\Representation.context_of_items.kind = 'document parameters';
  WR3: SIZEOF(QUERY(it1 <* SELF\Representation.items | SIZEOF(QUERY(it2 <* SELF\Representation.items | it1.name = it2.name)) > 1 ))= 0;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Low_order_kinematic_pair
  SUPERTYPE OF (ONEOF (
              REVOLUTE_PAIR,
              CYLINDRICAL_PAIR,
              SPHERICAL_PAIR,
              SPHERICAL_PAIR_WITH_PIN,
              PLANAR_PAIR,
              UNCONSTRAINED_PAIR,
              FULLY_CONSTRAINED_PAIR,
              PRISMATIC_PAIR,
              UNIVERSAL_PAIR))
  SUBTYPE OF (Kinematic_pair);
  t_x : BOOLEAN;
  t_y : BOOLEAN;
  t_z : BOOLEAN;
  r_x : BOOLEAN;
  r_y : BOOLEAN;
  r_z : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_2 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Fixed_instance_attribute_set
  SUBTYPE OF (Variational_representation_item);
  fixed_attributes : SET[1:?] OF Instance_attribute_reference;
WHERE
  WR1: SIZEOF(QUERY(q <* using_representations(SELF) | 
    SIZEOF(QUERY(r <* q.items |
    'PARAMETERIZATION_SCHEMA.FIXED_INSTANCE_ATTRIBUTE_SET' 
    IN TYPEOF(r))) > 1)) = 0;
END_ENTITY;
(* USED FROM (Expression_arm); *)
 	ENTITY Index_expression
 	SUBTYPE OF (String_expression, Binary_generic_expression);
 	
 	DERIVE
 	operand:Generic_expression:= SELF\Binary_generic_expression.operands[1];
 	index:Generic_expression:= SELF\Binary_generic_expression.operands[2];
 	WHERE
 	WR1: ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_EXPRESSION' IN TYPEOF(operand))
 	AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_EXPRESSION' IN TYPEOF(index));
 	WR2: Is_int_expr (index);
 	END_ENTITY;
(* USED FROM (Chemical_substance_arm); *)
  ENTITY Chemical_compound 
    SUBTYPE OF (Substance); 
    DERIVE
  	  id_owner: SET[0:?] OF Organization_or_person_in_organization_assignment :=
        QUERY(temp <* bag_to_set(USEDIN(SELF,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
        'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS')) |
                         (temp.role = 'id owner') );
    WHERE 
      WR1 : EXISTS (id_owner) AND (SIZEOF(id_owner) = 1);
  END_ENTITY; 
(* USED FROM (Measure_representation_arm); *)
ENTITY Numerical_item_with_global_unit
  SUBTYPE OF (Measure_item);
  value_component : measure_value;
WHERE
  WR1: SIZEOF(QUERY(pvr <* QUERY ( r <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS')| 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROPERTY_VALUE_REPRESENTATION' IN TYPEOF(r)) | EXISTS(pvr.context_of_items.units) )) > 0;
END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Externally_conditioned_data_quality_criteria_representation
    SUBTYPE OF(Data_quality_criteria_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
                               'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERION' IN TYPEOF(q))) > 0;
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_criteria_arm); *)
  ENTITY Disallowed_assembly_relationship_usage
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,
     ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP']);
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY B_spline_curve_segment;
      basis_curve      : b_spline_curve;
      start_knot_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Dimensioned_parallel_constraint
  SUBTYPE OF (Parallel_constraint);
  distance : length_measure;
  negative_direction : BOOLEAN;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) = 1)
    OR (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: SIZEOF(QUERY(q <* (SELF\Explicit_constraint.reference_elements +
    SELF\Explicit_constraint.constrained_elements) | SIZEOF(TYPEOF(q) *
    ['EXPLICIT_CONSTRAINT.DIRECTION']) > 0)) = 0;
  WR3: distance >= 0.0;
END_ENTITY; 
(* USED FROM (Externally_conditioned_data_quality_inspection_result_arm); *)
  ENTITY Externally_conditioned_data_quality_inspection_result_representation
    SUBTYPE OF(Data_quality_inspection_result_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
                               'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT' IN TYPEOF(q))) > 0;
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_result_representation
    SUBTYPE OF(Representation);
      criteria_inspected : Data_quality_criteria_representation;
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                                'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
                                'DATA_QUALITY_INSPECTION_RESULT' IN TYPEOF(q))) > 0;
      WR2 : SIZEOF(inspected_product_view_definition(SELF)) > 0;
  END_ENTITY;
(* USED FROM (Composite_surface_arm); *)
ENTITY Rectangular_composite_surface
  SUBTYPE OF (Bounded_surface);
  segments      : LIST [1:?] OF LIST [1:?] OF Surface_patch;
DERIVE
  n_u : INTEGER := SIZEOF(segments);
  n_v : INTEGER := SIZEOF(segments[1]);
WHERE
  WR1: SIZEOF(QUERY (s <* segments | n_v <> SIZEOF (s))) = 0;
END_ENTITY;
(* USED FROM (Product_occurrence_arm); *)
  ENTITY Product_occurrence
     ABSTRACT SUPERTYPE OF (ONEOF (
                        PRODUCT_OCCURRENCE_WITH_QUANTITY,
                        SINGLE_INSTANCE)
                        AND (ONEOF (
                        DEFINITION_BASED_PRODUCT_OCCURRENCE,
                        SPECIFICATION_BASED_PRODUCT_OCCURRENCE)))
  SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Part_version;
    DERIVE
      SELF\Product_view_definition.initial_context : View_definition_context := View_definition_context('','',?);
    INVERSE
      occurrence_contexts : SET [0:?] OF Product_occurrence_definition_relationship FOR related_view;
      view_definition_contexts : SET [0:?] OF View_definition_relationship FOR related_view;
    WHERE
      WR1: SIZEOF(occurrence_contexts) + SIZEOF(view_definition_contexts) >= 1;
      WR2: NOT EXISTS(SELF\Product_view_definition.additional_characterization);
      WR3: SIZEOF(QUERY( oc <* occurrence_contexts |
            NOT( NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(oc)) OR
                 NOT EXISTS(oc\Assembly_component_relationship.quantity))
               )) = 0;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Linear_flexible_and_pinion_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  pinion_radius : length_measure;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.LINEAR_FLEXIBLE_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Geometric_model_relationship_arm); *)
ENTITY Definitional_representation_relationship
  SUBTYPE OF (Representation_relationship);
    WHERE
      WR1: acyclic_representation_relationship(SELF,
        [SELF\representation_relationship.rep_2],
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
        'REPRESENTATION');
END_ENTITY;  
(* USED FROM (Classification_with_attributes_arm); *)
ENTITY Classification_association
SUBTYPE OF (Classification_assignment);
   SELF\Classification_assignment.assigned_class: Class_with_attributes;
   definitional: LOGICAL;
WHERE
WR1: NOT(definitional = TRUE) OR
       (SIZEOF(QUERY(it<* SELF\Classification_assignment.items | 
                 NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DEFINABLE_OBJECTS' IN TYPEOF(it)) )) = 0);
WR2: SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLASSIFIED_ELEMENT_SELECT' IN TYPEOF(it)) )) =0;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Planar_curve_pair_range
  SUBTYPE OF (Planar_curve_pair);
  range_on_curve_1                       : Trimmed_curve;
  range_on_curve_2                       : Trimmed_curve;
WHERE
  WR1: SELF\Planar_curve_pair.curve_1 :=: range_on_curve_1.basis_curve;
  WR2: SELF\Planar_curve_pair.curve_2 :=: range_on_curve_2.basis_curve;
  WR3: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_curve_1 IN r.items))) = 0;
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(range_on_curve_2 IN r.items))) = 0;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Point_on_planar_curve_pair_with_range
  SUBTYPE OF (Point_on_planar_curve_pair);
  range_on_pair_curve                    : Trimmed_curve;
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_pitch                      : OPTIONAL plane_angle_measure;
  upper_limit_pitch                      : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_pitch)
        OR
        NOT EXISTS(upper_limit_pitch))
       XOR
       (lower_limit_pitch < upper_limit_pitch);
  WR2: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR3: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_pair_curve IN r.items))) = 0;
END_ENTITY;
(* USED FROM (Assembly_structure_arm); *)
ENTITY Component_upper_level_identification
  SUBTYPE OF (Assembly_component_relationship);
  upper_assembly_relationship : Assembly_component_relationship;
  sub_assembly_relationship : Next_assembly_usage;
UNIQUE
  UR1: upper_assembly_relationship, sub_assembly_relationship;
WHERE
  WR1: SELF :<>: upper_assembly_relationship;
  WR2: SELF\Product_occurrence_definition_relationship.relating_view :=: upper_assembly_relationship\Product_occurrence_definition_relationship.relating_view;
  WR3: SELF\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.related_view;
  WR4: (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view) OR (SIZEOF (QUERY (pdr <* USEDIN (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view , 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW') | pdr.relating_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view)) = 1);
  WR5: SIZEOF (['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE', 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Planar_curve_pair
  SUPERTYPE OF (ONEOF (
              SLIDING_CURVE_PAIR,
              ROLLING_CURVE_PAIR)
              ANDOR 
              PLANAR_CURVE_PAIR_RANGE)
  SUBTYPE OF (High_order_kinematic_pair);
  curve_1     : Curve;
  curve_2     : Curve;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(curve_1 IN r.items))) = 0;
  WR2: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(curve_2 IN r.items))) = 0;
  WR3: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Range_characteristic
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
      range_type				: range_class;
    WHERE
      WR1 : TYPEOF(SELF\Representation.items[1]) =
          TYPEOF(SELF\Representation.items[2]);
      WR2 : TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit) =
          TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
      WR3 : valid_range(SELF\Representation.items[1],
                      SELF\Representation.items[2]);          
  END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Symmetrical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items |
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RATIO_DATA_ELEMENT' IN TYPEOF(ri))) = 1;
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Linear_flexible_and_planar_curve_pair
  SUBTYPE OF (High_order_kinematic_pair);
  pair_curve  : Curve;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(pair_curve IN r.items))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.LINEAR_FLEXIBLE_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Path
   SUBTYPE OF (Detailed_topological_model_element);
   edge_list  : LIST [1:?] OF UNIQUE Oriented_edge;
 WHERE
   WR1: path_aligned(SELF);
 END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Point_on_planar_curve_pair
  SUBTYPE OF (High_order_kinematic_pair);
  pair_curve  : Curve;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(pair_curve IN r.items))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Gdt_representation_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'geometrical dimensioning and tolerancing representation';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
--  dimensioning_standard : dimensioning_document := ISO; -- some expression through the documents, see wr4, may help writing further rules
-- note: when we write the rules we will decide which derived attribute to use
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
  WR2: SIZEOF ( QUERY(pvd <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') |
         NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(pvd.initial_context) ) ) ) = 0 ; 
        -- Part_view_definition.initial_context shall be of type Model_based_view_context 
  -- WR4: TRUE; -- must have at least either ISO 1101 or ASME Y14.5 as associated dimension standard document
END_ENTITY;
(* USED FROM (Product_and_manufacturing_information_view_context_arm); *)
ENTITY Model_based_3d_annotation_presentation_view_context
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'model based 3D annotation presentation';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
  WR2: SIZEOF ( QUERY(pvd <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') |
         NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(pvd.initial_context) ) ) ) = 0 ; 
        -- Part_view_definition.initial_context shall be of type Model_based_view_context 
  -- WR4: TRUE; -- must have at least either ISO 1101, ISO 16792, ASME Y14.41 or ASME Y14.5 as associated model standard document
END_ENTITY;
(* USED FROM (Elemental_topology_arm); *)
ENTITY Face
   SUBTYPE OF (Detailed_topological_model_element);
   bounds : SET[1:?] OF face_bound;
 WHERE
     WR1: SIZEOF(QUERY(temp <* bounds | 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FACE_OUTER_BOUND' IN
                                               TYPEOF(temp))) <= 1;
 END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Rule_action
    ABSTRACT SUPERTYPE OF (ONEOF (
                        RULE_SUBMISSION,
                        RULE_ADOPTION,
                        RULE_REJECTION,
                        RULE_SUPERSEDENCE,
                        RULE_CREATION,
                        RULE_EXPIRATION,
                        RULE_CHANGE_REQUEST,
                        RULE_REQUEST,
                        RULE_MODIFICATION));
   subject_rule : Rule_version;
DERIVE
   subject_action_assignment : SET[0:?] OF Organization_or_person_in_organization_assignment := 
         bag_to_set(QUERY(temp <* USEDIN ( SELF , 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 
                                       'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS' ) 
                    | ( temp.role = 'subject action assignment')));
  UNIQUE
   UR1: SELF\Rule_action.subject_rule, SELF\Rule_action.subject_action_assignment;
  WHERE
   WR1: EXISTS (subject_action_assignment) AND (SIZEOF(subject_action_assignment) = 1 );
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Back_chaining_rule
  SUBTYPE OF (Rule_definition);
  head : Rule_condition;
  body : LIST OF Rule_condition;
 WHERE
  WR1: SELF.head.positive = TRUE;
  WR2:  local_vars_of(SELF.head) <= local_vars_of(SELF.body);
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Characteristic_data_table
    SUBTYPE OF (Representation_item);
      property_value : LIST[1:?] OF Characteristic_data_table_row;
    WHERE
      WR1: SIZEOF(QUERY( pv <* property_value |
                  NOT (SIZEOF(pv.cell) = SIZEOF(property_value[1].cell))
                  )) = 0;
  END_ENTITY;
(* USED FROM (Tessellated_geometry_arm); *)
  ENTITY Tessellated_item
      ABSTRACT SUPERTYPE OF (ONEOF (
                        COORDINATES_LIST,
                        TESSELLATED_SOLID,
                        TESSELLATED_SHELL,
                        TESSELLATED_WIRE,
                        TESSELLATED_GEOMETRIC_SET,
                        TESSELLATED_CURVE_SET,
                        TESSELLATED_POINT_SET,
                        TESSELLATED_SURFACE_SET,
                        TESSELLATED_STRUCTURED_ITEM))
  SUBTYPE OF (Detailed_geometric_model_element);
     WHERE
      WR1: SIZEOF (QUERY (using_rep <* using_representations (SELF) |
          NOT ('GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SHAPE_REPRESENTATION' IN
         TYPEOF(using_rep)))) = 0; 
 END_ENTITY;
(* USED FROM (Edge_shape_feature_arm); *)
  ENTITY Bevel_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      bevel_width : Length_tolerance_characteristic;
      bevel_angle : Tolerance_characteristic;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
          NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
         )) = 0);
      WR2 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
           )) = 1);
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Surface_pair
   ABSTRACT SUPERTYPE OF (ONEOF (
                        SLIDING_SURFACE_PAIR,
                        ROLLING_SURFACE_PAIR)
                        ANDOR 
                        SURFACE_PAIR_WITH_RANGE)
  SUBTYPE OF (High_order_kinematic_pair);
  surface_1   : Surface;
  surface_2   : Surface;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(surface_1 IN r.items))) = 0;
  WR2: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(surface_2 IN r.items))) = 0;
  WR3: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Point_on_surface_pair
  SUBTYPE OF (High_order_kinematic_pair);
  pair_surface : surface;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(pair_surface IN r.items))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Point_on_surface_pair_with_range
  SUBTYPE OF (Point_on_surface_pair);
  range_on_pair_surface                  : Trimmed_surface;
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_pitch                      : OPTIONAL plane_angle_measure;
  upper_limit_pitch                      : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_pitch)
        OR
        NOT EXISTS(upper_limit_pitch))
       XOR
       (lower_limit_pitch < upper_limit_pitch);
  WR2: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR3: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_pair_surface IN r.items))) = 0;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY High_order_kinematic_pair
   ABSTRACT SUPERTYPE OF (ONEOF (
                        LINEAR_FLEXIBLE_AND_PLANAR_CURVE_PAIR,
                        POINT_ON_SURFACE_PAIR,
                        POINT_ON_PLANAR_CURVE_PAIR,
                        PLANAR_CURVE_PAIR,
                        SURFACE_PAIR))
  SUBTYPE OF (Kinematic_pair);
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_2 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Low_order_kinematic_pair_with_motion_coupling
   ABSTRACT SUPERTYPE OF (ONEOF (
                        GEAR_PAIR,
                        LINEAR_FLEXIBLE_AND_PINION_PAIR,
                        RACK_AND_PINION_PAIR,
                        SCREW_PAIR))
  SUBTYPE OF (Kinematic_pair);
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_2 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;
(* USED FROM (Appearance_assignment_arm); *)
  ENTITY Styled_model
      ABSTRACT SUPERTYPE OF (ONEOF (
                        VIEW,
                        VIEW_AREA) ) 
  SUBTYPE OF (Representation);
      version_id : OPTIONAL STRING;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
    DERIVE
      styled_geometry : SET[0:?] OF Geometric_model := 
      bag_to_set(QUERY (r <* (USEDIN(SELF\Representation.context_of_items,
	 	'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 
	 	'REPRESENTATION.' + 'CONTEXT_OF_ITEMS')) | 
	 	'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GEOMETRIC_MODEL' IN TYPEOF(r)));
  END_ENTITY;
(* USED FROM (Kinematic_structure_arm); *)
ENTITY Kinematic_property_mechanism_representation
  SUBTYPE OF (Kinematic_property_definition_representation);
  SELF\Property_definition_representation.used_representation : Mechanism_representation; 
  base : Kinematic_link_representation;
WHERE
   WR1: SIZEOF( QUERY( i <* used_representation.items |
        (base :=: i\Representation_relationship.rep_1) OR
        (base :=: i\Representation_relationship.rep_2))) > 0;
END_ENTITY;
(* USED FROM (Tagged_text_representation_arm); *)
ENTITY Tagged_text_item
  SUBTYPE OF (String_representation_item);
WHERE
  WR1: SIZEOF (QUERY (using_rep <* USEDIN(SELF,
       'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS') |
  NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.TAGGED_TEXT_FORMAT' IN
  TYPEOF (using_rep.context_of_items))
       )) = 0;
END_ENTITY;
(* USED FROM (Kinematic_topology_arm); *)
ENTITY Kinematic_topology_structure
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF Kinematic_joint; 
WHERE
  WR1: SIZEOF (QUERY (item <* items | 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ORIENTED_EDGE' in TYPEOF(item))) = 0;
END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY Rational_b_spline_surface
 SUBTYPE OF (B_spline_surface);
  weight_values : LIST [2:?] OF LIST [2:?] OF REAL;
 WHERE 
    WR1: (SIZEOF(weight_values) =
                     SIZEOF(SELF\B_spline_surface.control_points))
           AND (SIZEOF(weight_values[1]) =
                  SIZEOF(SELF\B_spline_surface.control_points[1]));
     WR2: positive_surface_weights(SELF);
END_ENTITY;
(* USED FROM (B_spline_geometry_arm); *)
ENTITY Rational_b_spline_curve
 SUBTYPE OF (B_spline_curve);
  weight_values : LIST [2:?]  OF REAL;
 WHERE 
    WR1: SIZEOF(weight_values) = SIZEOF(SELF\B_spline_curve.control_points);
    WR2: positive_curve_weights(SELF);
END_ENTITY;
(* USED FROM (Mesh_topology_arm); *)
ENTITY Array_based_unstructured_mesh_and_vertices
  SUBTYPE OF (Array_based_unstructured_mesh);
  vertex_count : INTEGER;
  vertices     : ARRAY [1:vertex_count] OF UNIQUE Vertex;
WHERE
  wr1 : all_mesh_vertices(SELF);
END_ENTITY;
(* USED FROM (Advanced_boundary_representation_arm); *)
ENTITY Manifold_solid_brep 
  SUBTYPE OF (Solid_model);
  outer : Closed_shell;
  voids : OPTIONAL SET[1:?] OF Oriented_closed_shell;
WHERE
  WR1: (NOT EXISTS(voids)) OR (SIZEOF(QUERY ( ocs <* SELF.voids |                
                      ( NOT (ocs.orientation = FALSE)))) = 0);
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Row_value;
  values : LIST OF term_select;
 WHERE
  WR1: SIZEOF(QUERY(v <* SELF.values | contains_variable(v))) = 0;
  WR2: SIZEOF(QUERY(v <* SELF.values | 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ROW_VALUE' IN TYPEOF(v))) = 0;
END_ENTITY;
(* USED FROM (Characteristic_arm); *)
  ENTITY Length_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Ground_fact
 SUBTYPE OF (Atomic_formula);
 WHERE
  WR1: SIZEOF(QUERY(r <* SELF\Atomic_formula.terms | contains_variable(r))) = 0;
END_ENTITY;
(* USED FROM (Production_rule_arm); *)
ENTITY Global_assignment;
  variable : Abstract_variable;
  val : term_select;
 WHERE
  WR1: NOT(contains_variable(SELF.val));
END_ENTITY;
(* USED FROM (Inertia_characteristics_arm); *)
ENTITY Moments_of_inertia
SUBTYPE OF (Shape_dependent_property_representation);
WHERE
WR1: SIZEOF(QUERY (it <* SELF\Property_definition_representation.used_representation\Representation.items |
   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'AXIS_PLACEMENT'IN TYPEOF(it) ))=1;
WR2: SIZEOF(QUERY (it <* SELF\Property_definition_representation.used_representation\Representation.items |
   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'INERTIA_MATRIX_ITEM' IN TYPEOF(it) ))=1;
WR3: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'GEOMETRIC_COORDINATE_SPACE' IN 
	TYPEOF(SELF\Property_definition_representation.used_representation\Representation.context_of_items);
END_ENTITY;
(* USED FROM (Inertia_characteristics_arm); *)
ENTITY Centre_of_mass
SUBTYPE OF (Shape_dependent_property_representation);
WHERE
WR1: SIZEOF(SELF\Property_definition_representation.used_representation\Representation.items)=1;
WR2: SIZEOF(QUERY (it <* SELF\Property_definition_representation.used_representation\Representation.items |
   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'CARTESIAN_POINT' IN TYPEOF(it) ))=1;
WR3: 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'GEOMETRIC_COORDINATE_SPACE' IN 
	TYPEOF(SELF\Property_definition_representation.used_representation\Representation.context_of_items);
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Variational_current_representation_relationship
  SUBTYPE OF (Representation_relationship);
  SELF\Representation_relationship.rep_1 
                 : Variational_representation;
  current_result : Representation;
UNIQUE
  UR1: current_result;
WHERE
  WR1: QUERY(q <* SELF\Representation_relationship.rep_1.items | NOT
    ('VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION_ITEM'
    IN TYPEOF(q))) = SELF\Representation_relationship.rep_2.items;
  WR2: SELF\Representation_relationship.rep_1.context_of_items :=:
    SELF\Representation_relationship.rep_2.context_of_items;
  WR3: SIZEOF(QUERY(q <* SELF\Representation_relationship.rep_2.items |
    'VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION_ITEM' 
    IN TYPEOF(q))) = 0;
  WR4: current_result :=: SELF\Representation_relationship.rep_2;
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Variational_representation_item
   ABSTRACT SUPERTYPE OF (ONEOF (
                        AUXILIARY_GEOMETRIC_REPRESENTATION_ITEM,
                        BOUND_VARIATIONAL_PARAMETER,
                        UNBOUND_VARIATIONAL_PARAMETER))
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(QUERY(q <* using_representations(SELF) |
    NOT ('VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION'  
    IN TYPEOF(q)))) = 0;
  WR2: SIZEOF(QUERY(q <* using_representations(SELF) |
    NOT (SELF IN q.items))) = 0; 
END_ENTITY;
(* USED FROM (Parameterization_and_variational_representation_arm); *)
ENTITY Variational_representation 
  SUBTYPE OF (Representation);
INVERSE
  cm_link : Variational_current_representation_relationship FOR rep_1;
WHERE
  WR1: SIZEOF(QUERY(q <* SELF\representation.items | 
    'VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION_ITEM' 
    IN TYPEOF(q))) > 0;
(* replace WR2 by note to remove complex references to other schemas in ARM
WR2: SIZEOF(QUERY(q <* (SELF\representation.items - 
    cm_link.rep_2.items) | invalidate_vrep_item(q))) = 0;  *)
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Perpendicular_geometric_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF linear_geometry_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:2] OF linear_geometry_element;
WHERE   
  WR1: NOT ((SIZEOF(SELF\Explicit_constraint.reference_elements) = 2) AND 
    NOT ((SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements + 
    SELF\Explicit_constraint.reference_elements | 
    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LINE' IN TYPEOF(q))) =
    SIZEOF(SELF\Explicit_constraint.reference_elements + 
    SELF\Explicit_constraint.constrained_elements)) XOR 
    (SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements + 
    SELF\Explicit_constraint.reference_elements | 
    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE' IN TYPEOF(q))) =
    SIZEOF(SELF\Explicit_constraint.reference_elements + 
    SELF\Explicit_constraint.constrained_elements))));
  WR2: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) IN [2,3]);
  WR3: NOT ((SIZEOF(SELF\Explicit_constraint.reference_elements) = 0) AND 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 3)) AND NOT  
    ((SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements | 
    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LINE' IN TYPEOF(q))) = 3) XOR
    (SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements | 
    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE' IN TYPEOF(q))) = 3));
END_ENTITY; 
(* USED FROM (Shape_data_quality_criteria_arm); *)
  ENTITY Multiply_defined_placements
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold));
      WR3 : validate_measured_data_type(SELF,
            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
            'PLANE_ANGLE_AND_LENGTH_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AXIS_PLACEMENT','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AXIS_PLACEMENT']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR6 : validate_accuracy_types(SELF,
            []);
      WR7 : SIZEOF(QUERY(sdqr <* bag_to_set(USEDIN(SELF,
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'DATA_QUALITY_INSPECTION_RESULT.'+
             'CRITERION_INSPECTED'))|
             ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
              'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(sdqr)) AND
              (SIZEOF(QUERY(sdqiir <* bag_to_set(USEDIN(sdqr,
                 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                 'DATA_QUALITY_INSPECTION_REPORT.'+
                 'INSPECTION_RESULT'))|
                 ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                  'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
                   IN TYPEOF(sdqiir)) AND
                 (SIZEOF(QUERY(sdqiri <* sdqiir.inspected_instances|
                          (TYPEOF(sdqiri.inspected_elements[1])
                           <>TYPEOF(sdqiri.inspected_elements[2])))) = 0)
               )) = 0)
            )) = 0;
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Surface_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:2] OF Surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:4] OF point_curve_or_surface;
  near_points : SET[0:4] OF Near_point_relationship;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR 
    (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIMENSIONED_SURFACE_DISTANCE_CONSTRAINT' 
    IN TYPEOF(SELF)) 
    AND (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
  WR2: SIZEOF(near_points) <= 
    SIZEOF(SELF\Explicit_constraint.reference_elements);
  WR3: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Parallel_offset_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF curve_or_surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF curve_or_surface;
  offset_type : parallel_offset_type;   
WHERE
  WR1: NOT(((offset_type = curve_2d_offset) 
    OR (offset_type = curve_3d_offset)) AND 
    (SIZEOF(QUERY( q <* (SELF\Explicit_constraint.constrained_elements 
    + SELF\Explicit_constraint.reference_elements) |
    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SURFACE' IN TYPEOF(q))) > 0));
  WR2: NOT((offset_type = surface_offset) AND (SIZEOF(QUERY( q <* 
    (SELF\Explicit_constraint.constrained_elements +
    SELF\Explicit_constraint.reference_elements) | 
    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CURVE' IN TYPEOF(q))) > 0));
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Incidence_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF geometric_constraint_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET [0:?] OF geometric_constraint_element;
  near_points : SET[0:?] OF Near_point_relationship;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0)
    OR (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: SIZEOF(near_points) <= 
    SIZEOF(SELF\Explicit_constraint.reference_elements); 
  WR3: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_data_quality_inspected_shape_and_result_relationship
      SUBTYPE OF(Representation_relationship);
      SELF\Representation_relationship.rep_1 : Geometric_model;
      SELF\Representation_relationship.rep_2 : Shape_data_quality_inspection_result_representation;
    WHERE
      WR1 : SIZEOF(
            using_product_view_definition_of_geometric_model(SELF.rep_1)
            *
            bag_to_set(inspected_product_view_definition(SELF.rep_2))
            ) > 0;
      WR2 : SELF.rep_1\representation.context_of_items :=: 
            SELF.rep_2\representation.context_of_items;
  END_ENTITY;
(* USED FROM (Shape_data_quality_inspection_result_arm); *)
  ENTITY Shape_data_quality_inspection_result_representation
    SUBTYPE OF(Data_quality_inspection_result_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
                               'SHAPE_DATA_QUALITY_INSPECTION_RESULT' IN TYPEOF(q))) > 0;
      WR2 : 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.GEOMETRIC_COORDINATE_SPACE' IN
            TYPEOF(SELF\representation.context_of_items);
      WR3 : SIZEOF(USEDIN(SELF,
                   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                   'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'+
                   'REP_2'))>0;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_criterion
    SUBTYPE OF(Representation_item);
    WHERE
      WR1 : SIZEOF(QUERY(q <*
              bag_to_set( USEDIN(SELF,
                'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))
              |'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
               'DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION'
               IN TYPEOF(q)))=0;
  END_ENTITY;
(* USED FROM (Product_data_quality_criteria_arm); *)
  ENTITY Data_quality_criteria_representation
    SUBTYPE OF(Representation);
    WHERE
      WR1 :  SIZEOF( QUERY( q <* SELF\representation.items|
                                'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
                                'DATA_QUALITY_CRITERION' IN TYPEOF(q))) > 0;
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_criterion_report_item
    SUBTYPE OF(Representation_item);
      statistical_value : INTEGER;
      value_type        : statistical_value_type;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))
                          |'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_instance_report_item
    SUBTYPE OF(Representation_item);
    inspected_elements : SET [1:?] OF inspected_element_select;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))
                          |'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_instance_report
    SUBTYPE OF(Data_quality_inspection_report);
      inspected_instances : LIST [1:?] OF data_quality_inspection_instance_report_item;
    WHERE
      WR1 : SIZEOF(QUERY(i1<*bag_to_set(USEDIN(
              SELF\data_quality_inspection_report.
              inspection_result.criterion_inspected,
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
              'DATA_QUALITY_REPORT_REQUEST.CRITERION_OF_REPORT_REQUEST'))|
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
              'DETAILED_REPORT_REQUEST'
            IN TYPEOF(i1)))>0;
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_result
    SUBTYPE OF(Representation_item);
      criterion_inspected : Data_quality_criterion;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))
                          |'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_criterion_report
    SUBTYPE OF(Data_quality_inspection_report);
      statistical_values : SET [1:2] OF data_quality_inspection_criterion_report_item;
    WHERE
      WR1 : SIZEOF(QUERY(i1<*bag_to_set(USEDIN(
              SELF\data_quality_inspection_report.
              inspection_result.criterion_inspected,
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
              'DATA_QUALITY_REPORT_REQUEST.CRITERION_OF_REPORT_REQUEST'))|
              'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
              'SUMMARY_REPORT_REQUEST'
            IN TYPEOF(i1)))>0;
      WR2 : (SIZEOF(SELF.statistical_values) = 1 ) OR 
            (SELF.statistical_values[1].value_type <>
             SELF.statistical_values[2].value_type);
  END_ENTITY;
(* USED FROM (Product_data_quality_inspection_result_arm); *)
  ENTITY Data_quality_inspection_report
    SUPERTYPE OF (ONEOF (
              DATA_QUALITY_INSPECTION_CRITERION_REPORT,
              DATA_QUALITY_INSPECTION_INSTANCE_REPORT))
  SUBTYPE OF(Representation_item);
      inspection_result : data_quality_inspection_result;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))
                          |'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;
(* USED FROM (Advanced_boundary_representation_arm); *)
ENTITY Advanced_brep_shape_representation
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] of
advanced_brep_shape_representation_item;
WHERE
  WR1: SIZEOF(QUERY ( msb <* QUERY ( it <* SELF.items |
                ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP' IN TYPEOF(it)) ) |
               ( NOT (SIZEOF(QUERY ( csh <* collect_shells(msb) |
                                (NOT (SIZEOF(QUERY ( fcs <* csh\
                connected_face_set.connected_faces | (NOT (
                'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ADVANCED_FACE' IN TYPEOF(fcs))) )) = 0)) ))
              = 0)) )) = 0;
END_ENTITY;
(* USED FROM (Component_grouping_arm); *)
  ENTITY Rectangular_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                              : SET[1:?] OF Linear_array_placement_group_component_link;
      initial_row_positive_y_displacement  : Length_data_element;
      terminus_row_positive_y_displacement : Length_data_element;
      location_uncertainty                 : Length_data_element;
    WHERE
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_lapgc(element);
  END_ENTITY;
(* USED FROM (Component_grouping_arm); *)
  ENTITY Linear_array_placement_group_component_link;
      precedent_element  : Linear_array_placement_group_component;
      subsequent_element : Linear_array_placement_group_component;
    INVERSE
      referenced_by : rectangular_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_linear_array_placement_group_component_link(SELF,
         [subsequent_element],
         'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK');
  END_ENTITY;
(* USED FROM (Component_grouping_arm); *)
  ENTITY Linear_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                               : SET[1:?] OF Assembly_component_placement_link;
      initial_node_positive_x_displacement  : Length_data_element;
      terminus_node_positive_x_displacement : Length_data_element;
      location_uncertainty                  : Length_data_element;
    WHERE  
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_ac(element);
  END_ENTITY;
(* USED FROM (Component_grouping_arm); *)
  ENTITY Assembly_group_component
    SUBTYPE OF (Assembly_component, Single_instance);
    INVERSE
      components : SET[1:?] OF next_assembly_usage FOR relating_view;
    WHERE
      WR1: SIZEOF(QUERY(co <* components | NOT(('PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT') IN TYPEOF(co\Product_occurrence_definition_relationship.related_view)))) = 0;
  END_ENTITY;
(* USED FROM (Component_grouping_arm); *)
  ENTITY Assembly_component_placement_link;
      precedent_element  : Assembly_component;
      subsequent_element : Assembly_component;
    INVERSE
      referenced_by : linear_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_assembly_component_placement_link(SELF,
         [subsequent_element],
         'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_PLACEMENT_LINK');
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_incomplete_rectangular_pattern
    SUBTYPE OF (Solid_with_rectangular_pattern);
      omitted_instances : SET[1:?] OF LIST [1:2] OF INTEGER;
    WHERE
      WR1: NOT([1,1] IN omitted_instances);
      WR2: SIZEOF(omitted_instances) <
            ((SELF\Solid_with_rectangular_pattern.row_count *
               SELF\Solid_with_rectangular_pattern.column_count) - 1);
      WR3: SIZEOF(QUERY(q <* omitted_instances |   
             ((q[1] > SELF\Solid_with_rectangular_pattern.row_count) OR
              (q[2] > SELF\Solid_with_rectangular_pattern.column_count)))) = 0;
  END_ENTITY;
(* USED FROM (Solid_with_local_modification_arm); *)
  ENTITY Solid_with_incomplete_circular_pattern
    SUBTYPE OF (Solid_with_circular_pattern);
      omitted_instances : SET[1:?] OF INTEGER;
    WHERE
      WR1: SIZEOF(omitted_instances) <
           SELF\Solid_with_circular_pattern.replicate_count;
      WR2: SIZEOF(QUERY(q <* omitted_instances | q > 
           SELF\Solid_with_circular_pattern.replicate_count)) = 0;
  END_ENTITY;
(* USED FROM (Externally_conditioned_data_quality_inspection_result_arm); *)
  ENTITY Externally_conditioned_data_quality_inspection_instance_report_item
    SUBTYPE OF(Data_quality_inspection_instance_report_item);
      SELF\Data_quality_inspection_instance_report_item.inspected_elements : SET [1:?] OF inspected_ecdq_element_select;
      WHERE
        WR1 : SIZEOF(QUERY(i1 <* 
                bag_to_set(USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+ 
                'DATA_QUALITY_INSPECTION_INSTANCE_REPORT.'+ 'INSPECTED_INSTANCES'))|
                NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+ 
                    'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT' 
                    IN TYPEOF(i1.inspection_result))))=0;
  END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Curve_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:2] OF Curve;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:4] OF point_curve_or_surface;
  near_points : SET[0:4] OF Near_point_relationship;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR
    (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIMENSIONED_CURVE_DISTANCE_CONSTRAINT'
    IN TYPEOF(SELF)) 
    AND (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
  WR2: SIZEOF(near_points) <= 
    SIZEOF(SELF\Explicit_constraint.reference_elements);
  WR3: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;
(* USED FROM (Geometric_constraints_arm); *)
ENTITY Coaxial_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF axial_geometry_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF axial_geometry_element;
WHERE
  WR1: SIZEOF(QUERY(q <* SELF\Explicit_constraint.reference_elements | 
    SIZEOF(TYPEOF(q) * ['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POINT','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLANE',
    'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SPHERICAL_SURFACE','AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SPHERE']) 
    > 0)) = 0;
END_ENTITY; 
(* USED FROM (Mating_structure_arm); *)
ENTITY Mated_part_relationship;
  mating_joints : OPTIONAL SET[1:?] OF Assembly_joint;
  mating_material : OPTIONAL SET [1:?] OF Definition_based_product_occurrence;
  mating_types : OPTIONAL SET [1:?] OF mating_type;
  relating : Assembled_part_association;
  related : Assembled_part_association;
WHERE
  WR1: relating.relating_view :=: related.relating_view;
  WR2: SIZEOF(QUERY(mj <* mating_joints | NOT(mj.associated_assembly.described_element :=: relating.relating_view)))= 0;
END_ENTITY;
(* USED FROM (Part_view_definition_arm); *)
ENTITY Part_view_definition_context
    SUPERTYPE OF (ONEOF (
               GDT_REPRESENTATION_VIEW_CONTEXT,
               KINEMATIC_MECHANISM_CONTEXT,
               KINEMATIC_STATE_CONTEXT,
               MODEL_BASED_VIEW_CONTEXT,
               MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXT,
               MOTION_CONTEXT,
               SURFACE_FINISH_VIEW_CONTEXT,
               MACHINING_FEATURE_VIEW_CONTEXT,
               MATERIAL_SPECIFICATION_VIEW_CONTEXT,
               PROCESS_STATE_VIEW_CONTEXT) ) 
      SUBTYPE OF (View_definition_context);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')
                        |  NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
  WR2: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')
                        |  NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
END_ENTITY;

(* Implicit interfaced from: Mesh_topology_arm *)
FUNCTION this_schema : STRING;
  RETURN('MESH_TOPOLOGY_SCHEMA');
END_FUNCTION;

(* Implicit interfaced from: Shape_data_quality_criteria_arm *)
  FUNCTION validate_locations_of_extreme_value_type
      (ei:shape_data_quality_criterion;
       type_list:BAG OF STRING):LOGICAL;
       LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdei: SET OF
          INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all instance_report_item_with_extreme_instances instances
       -- associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result and
       -- shape_data_quality_instance_report.
  
       sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdei := sdei + QUERY(q <* sdir[i].inspected_instances|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- STEP-2
       -- check whether the types of locations_of_extreme_value attributes of
       -- all extreme_instances of collected instances include all the type names
       -- in the type list given as an input argument of this function
       -- and they do not include any other type names. 
  
       -- If there is no instace report, then return true.
       IF(SIZEOF(sdei) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- If the type_list is empty and 
       -- instance_report_item_with_extreme_instances exists, then return false.
       IF((SIZEOF(type_list) = 0) AND (SIZEOF(sdei) <> 0)) THEN
         RETURN(FALSE);
       END_IF;
    
       -- When report_items exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(sdei);
         REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
           -- If size of locations_of_extreme_value is not equal to
           -- the size of type_list, then return false.
           IF(SIZEOF(sdei[i].extreme_instances[j].
                             locations_of_extreme_value) <>
              SIZEOF(type_list)) THEN
              RETURN(FALSE);
           END_IF;
           t_type_list := type_list;
           -- check all elements of type_lists 
           --  for each elements of locations_of_extreme_value.
           REPEAT k:= 1 TO SIZEOF(sdei[i].extreme_instances[j]
                                    .locations_of_extreme_value);
             REPEAT l:= 1 TO SIZEOF(t_type_list);
               IF(t_type_list[l] IN
                 TYPEOF(sdei[i].extreme_instances[j].
                         locations_of_extreme_value[k])) THEN
                 t_type_list := t_type_list - t_type_list[l];
                 ESCAPE;
               END_IF;
             END_REPEAT;
           END_REPEAT;
           IF(SIZEOF(t_type_list) > 0) THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_REPEAT;
    
       RETURN(TRUE);
  END_FUNCTION;

(* Implicit interfaced from: Mesh_topology_arm *)
FUNCTION cell_counts(arg : Vertex_defined_cell) : ARRAY[1:3] OF INTEGER;
LOCAL
  om1    : INTEGER := 0;      -- (order - 1)
  om1sq  : INTEGER := om1**2; -- (order - 1) squared
  vts    : INTEGER;           -- number of bounding vertices
  eds    : INTEGER;           -- number of edges
  qf     : INTEGER := 0;      -- number of quadrilateral faces
  tf     : INTEGER := 0;      -- number of triangular faces
  result : ARRAY [1:3] OF INTEGER := [0,0,0];
END_LOCAL;
  CASE arg.order OF
    linear    : om1 := 0;
    quadratic : om1 := 1;
    cubic     : om1 := 2;
    OTHERWISE : RETURN(result);
  END_CASE;
  om1sq := om1**2;
  CASE arg.shape OF
    single : 
        BEGIN
          vts := 1; eds := 0; qf := 0; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 0, 0
          result[3] := 0;                         -- 0, 0, 0
        END;
    line :
        BEGIN
          vts := 2; eds := 1; qf := 0; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 1, 2
          result[3] := 0;                         -- 0, 0, 0
        END;
    quadrilateral : 
        BEGIN
          vts := 4; eds := 4; qf := 1; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 4, 8
          result[3] := om1sq*qf;                  -- 0, 1, 4
        END;
    triangle : 
        BEGIN
          vts := 3; eds := 3; qf := 0; tf := 1;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 3, 6
          result[3] := (om1-1)*tf;                --    0, 1
          CASE arg.order OF
            linear : result[3] := 0;              -- 0
          END_CASE;
        END;
    hexahedron :
        BEGIN
          vts := 8; eds := 12; qf := 6; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 12, 24
          result[3] := om1sq*(qf+om1);            -- 0, 7, 32
        END;
    wedge :
        BEGIN
          vts := 6; eds := 9; qf := 3; tf := 2;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 9,  18
          result[3] := om1sq*qf + om1*tf;         -- 0, 3, 16
        END;
    tetrahedron : 
        BEGIN
          vts := 4; eds := 6; qf := 0; tf := 4;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 6, 12
          result[3] := (om1-1)*tf;                --    0, 4
          CASE arg.order OF
            linear : result[3] := 0;              -- 0
          END_CASE;
        END;
    pyramid : 
        BEGIN
          vts := 5; eds := 8; qf := 1; tf := 4;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 8, 16
          result[3] := om1sq*qf + (om1-1)*tf;     --    1, 9
          CASE arg.order OF
            linear : result[3] := 0;              -- 0
          END_CASE;
        END;
  END_CASE;
RETURN(result);
END_FUNCTION;

(* Implicit interfaced from: Mesh_topology_arm *)
FUNCTION shorten_array(longa : ARRAY OF GENERIC : T;
                      oldl, newl : INTEGER) : ARRAY OF GENERIC : T;
   LOCAL
     shorta : ARRAY [1:newl] OF GENERIC : T;
   END_LOCAL;

   IF (newl > oldl) THEN
     RETURN(?);
   ELSE
     REPEAT i := 1 TO newl;
       shorta[i] := longa[i];
     END_REPEAT;
     RETURN(shorta);
   END_IF;
END_FUNCTION;

(* Implicit interfaced from: Shape_property_assignment_arm *)
FUNCTION spa_get_definition ( input : Contextual_item_shape ): Product_view_definition;
  IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.VIEW_DEFINITION_USAGE'
    IN TYPEOF(input\Item_shape.described_element))
    THEN
      RETURN(input\Item_shape.described_element\View_definition_relationship.related_view);
  END_IF;
  IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP' IN
      TYPEOF(input\Item_shape.described_element))
    THEN
      RETURN(input\Item_shape.described_element\Product_occurrence_definition_relationship.related_view);
  END_IF;    
  RETURN(?);
END_FUNCTION;
(* REFERENCE FROM (Foundation_representation_arm); *)
  FUNCTION using_representations (item : Representation_item): SET OF Representation;
    LOCAL
      results            : SET OF Representation;
      result_bag         : BAG OF Representation;
      intermediate_items : SET OF Representation_item;
    END_LOCAL;
    -- Find the representations in which the item is used and add to the
    -- results set.
    results := [];
    result_bag := USEDIN(item,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag);
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    -- Find all representation_items or founded_items
    -- by which item is referenced directly or indirectly.
    intermediate_items := using_items(item,[]);
    -- If the set of intermediate items is not empty;
    IF SIZEOF(intermediate_items) > 0 THEN
      -- For each element in the set, add the
      -- representations of that element.
      REPEAT i := 1 TO HIINDEX(intermediate_items);
        result_bag := USEDIN(intermediate_items[i],
                      'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) > 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag);
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    -- Return the set of representation in which the input item is
    -- used directly and indirectly (through intervening
    -- representation_items or founded items).
    RETURN (results);
  END_FUNCTION;

(* Implicit interfaced from: Foundation_representation_arm *)
  FUNCTION using_items (item : Representation_item;
                        checked_items: SET OF Representation_item)
                      : SET OF Representation_item;
    LOCAL
      new_check_items    : SET OF Representation_item;
      result_items       : SET OF Representation_item;
      next_items         : SET OF Representation_item;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    -- Find the set of representation_items or founded_items
    -- in which item is used directly.
    next_items := QUERY(z <* bag_to_set( USEDIN(item , '')) |
      ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION_ITEM' IN TYPEOF(z)));
    -- If the set of next_items is not empty;
    IF SIZEOF(next_items) > 0 THEN
      -- For each element in the set, find the using_items recursively
      REPEAT i := 1 TO HIINDEX(next_items);
        -- Check for loop in data model, i.e. one of the next_items
        -- occurred earlier in the set of check_items;
        IF NOT(next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] +
                          using_items(next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    -- return the set of representation_items or founded_items
    -- in which the input item is used directly and indirectly.
    RETURN (result_items);
  END_FUNCTION;
(* REFERENCE FROM (Support_resource_arm); *)
FUNCTION bag_to_set
   (the_bag : BAG [0:?] OF GENERIC:intype) : SET [0:?] OF GENERIC:intype;

LOCAL the_set : SET OF GENERIC : intype := [];
  i : INTEGER;
END_LOCAL;
  IF SIZEOF(the_bag)> 0 THEN 
  	REPEAT i := 1 TO HIINDEX(the_bag);
      the_set := the_set + the_bag[i];
    END_REPEAT;
  END_IF;
  RETURN(the_set);
END_FUNCTION;

(* Implicit interfaced from: Shape_data_quality_inspection_result_arm *)
  FUNCTION relating_geometric_models_of_extreme_values
  (item:location_of_extreme_value_select)
   : SET OF Geometric_model;
  
  LOCAL
    results   : SET OF Geometric_model:=[];
    exti      : SET OF extreme_instance:=[];
    ii_ei     : SET OF 
         instance_report_item_with_extreme_instances:=[];
    sdiir        : SET OF 
         shape_data_quality_inspection_instance_report:=[];
    sdqr      : SET OF 
         shape_data_quality_inspection_result_representation:=[];
    sdisr     : SET OF 
         shape_data_quality_inspected_shape_and_result_relationship:=[];
  END_LOCAL;
  -- find extreme_instances 
  exti := exti + 
     bag_to_set( USEDIN(item,
       'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
       'EXTREME_INSTANCE.'+
       'LOCATIONS_OF_EXTREME_VALUE')); 
  
  -- find instance_report_item_with_extreme_instances 
  REPEAT i := 1 TO HIINDEX (exti);
    ii_ei := ii_ei + 
      bag_to_set( USEDIN(exti[i],
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
        'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES.'+
        'EXTREME_INSTANCES')); 
  END_REPEAT;
  
  -- find shape_data_quality_inspection_instance_report
  REPEAT i := 1 TO HIINDEX (ii_ei);
    sdiir := sdiir + 
      bag_to_set( USEDIN(ii_ei[i],
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
        'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT.'+
        'INSPECTED_INSTANCES')); 
  END_REPEAT;
  
  -- find shape_data_quality_inspection_result_representation
  REPEAT i := 1 TO HIINDEX (sdiir);
   sdqr := sdqr + 
     QUERY(i1<* bag_to_set( USEDIN(sdiir[i].inspection_result,
       'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REPRESENTATION.ITEMS'))|
     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
     'SHAPE_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION' 
      IN TYPEOF(i1)); 
  END_REPEAT;
  
  -- find shape_data_quality_inspected_shape_and_result_relationship
  REPEAT i := 1 TO HIINDEX (sdqr);
    sdisr := sdisr +  bag_to_set(USEDIN(sdqr[i],
       'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
       'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'+
       'REP_2')); 
  END_REPEAT;
  
  -- find shape_representation
  REPEAT i := 1 TO HIINDEX (sdisr);
    results := results + sdisr[i].rep_1;
  END_REPEAT;
  
  RETURN (results);
  END_FUNCTION;

(* Implicit interfaced from: Shape_data_quality_inspection_result_arm *)
  FUNCTION using_product_view_definition_of_geometric_model
  (item: Geometric_model) : SET OF Product_view_definition;
  LOCAL
    local_s_d_a: SET OF Shape_description_association := [];
    local_p_d: SET OF Product_view_definition := [];
    i : INTEGER;
  END_LOCAL;
  -- find Shape_description_association 
   local_s_d_a  := bag_to_set (USEDIN (item, 
   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION')); 
  
  -- find Product_view_definitions
  REPEAT i := 1 TO HIINDEX (local_s_d_a);
     IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ITEM_SHAPE' IN 
       TYPEOF (local_s_d_a[i].definition)) THEN
       IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION' IN TYPEOF
         (local_s_d_a[i].definition\Item_shape.described_element))  THEN
         local_p_d := local_p_d + local_s_d_a[i].definition\Item_shape.described_element;
       END_IF;
     END_IF;
  END_REPEAT;

  RETURN (local_p_d);
  END_FUNCTION;
(* REFERENCE FROM (Product_data_quality_inspection_result_arm); *)
  FUNCTION inspected_product_view_definition
    (dqir:Data_quality_inspection_result_representation)
    :BAG OF Product_view_definition;
    LOCAL
      dqdr :BAG OF Data_quality_definition_representation_relationship:= [];
      pdqdr :BAG OF Product_data_and_data_quality_relationship:= [];
      pd   :BAG OF Product_view_definition:= [];
    END_LOCAL;
    dqdr := USEDIN(dqir,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'
                       +'DATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP.'
                       +'USED_REPRESENTATION');
    REPEAT i:= 1 TO SIZEOF(dqdr);
      pdqdr := USEDIN(dqdr[i].definition,
                      'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'
                     +'PRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP.'
                     +'DATA_QUALITY');
      REPEAT j:= 1 TO SIZEOF(pdqdr);
        pd := pd + pdqdr[j].product_data; 
      END_REPEAT;
    END_REPEAT;
    RETURN(pd);
  END_FUNCTION;

(* Implicit interfaced from: Geometric_tolerance_arm *)
FUNCTION sts_get_general_datum_reference
 (input : Datum_reference_element) : General_datum_reference; LOCAL
      general_datum_reference_bag : BAG OF General_datum_reference :=
      (USEDIN(input, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'GENERAL_DATUM_REFERENCE.' + 'BASE'));
    END_LOCAL;

    IF SIZEOF(general_datum_reference_bag) = 1 THEN
      RETURN (general_datum_reference_bag[1]);
    ELSE
      RETURN (?);
    END_IF; END_FUNCTION; 

(* Implicit interfaced from: Shape_feature_arm *)
FUNCTION get_geometric_model(input : Item_shape) : SET OF Geometric_model;
  LOCAL
    sda : SET OF Shape_description_association := [];
    gm : SET OF Geometric_model := [];
  END_LOCAL;
 
  sda := bag_to_set(USEDIN(input,
	 	'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'));
 
  REPEAT i := 1 to SIZEOF(sda) BY 1;
    IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF (sda[i]) THEN
      gm := gm + sda[i]\Property_definition_representation.used_representation;
    END_IF;
  END_REPEAT;
  RETURN(gm);
END_FUNCTION;

(* Implicit interfaced from: Solid_with_local_modification_arm *)
  FUNCTION calculate_depth (swsrh : Solid_with_stepped_round_hole) 
                              : length_measure;
    LOCAL
      i  : INTEGER;
      td : length_measure := 0;
    END_LOCAL;
    REPEAT i := 1 TO swsrh.segments;
      td := td + swsrh.segment_depths[i];
    END_REPEAT;
    RETURN(td); 
  END_FUNCTION;

(* Implicit interfaced from: Elemental_topology_arm *)
FUNCTION boolean_choice (b : boolean;
            choice1, choice2 : generic : item)  : generic : item;
 
     IF b THEN
       RETURN (choice1);
     ELSE
       RETURN (choice2);
     END_IF;
   END_FUNCTION;

(* Implicit interfaced from: Elemental_topology_arm *)
FUNCTION path_aligned(a_path : Path) : LOGICAL;
   LOCAL
     n : INTEGER;
     p : LOGICAL := TRUE;
   END_LOCAL;
     
     n := SIZEOF (a_path.edge_list);
     REPEAT i := 2 TO n;
       p := p AND (a_path.edge_list[i-1].edge_end :=:
                   a_path.edge_list[i].edge_start);
     END_REPEAT;
     
     RETURN (p);
 END_FUNCTION;

(* Implicit interfaced from: Geometric_model_relationship_arm *)
FUNCTION acyclic_representation_relationship
  (relation : representation_relationship; relatives : SET[1:?] OF representation; specific_relation : STRING) : BOOLEAN; 
  LOCAL
    x : SET OF representation_relationship;
  END_LOCAL;

  IF relation.rep_1 IN relatives THEN
    RETURN (FALSE);
  END_IF;
  x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

(* Implicit interfaced from: Generic_expression_arm *)
FUNCTION Is_Acyclic (arg: Generic_expression): BOOLEAN;
RETURN (Acyclic (arg, []));
END_FUNCTION ; 

(* Implicit interfaced from: Generic_expression_arm *)
FUNCTION Acyclic (arg1: Generic_expression; 
			arg2: SET OF Generic_expression): BOOLEAN;
LOCAL
	result: BOOLEAN;
END_LOCAL;

IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIMPLE_GENERIC_EXPRESSION'
	IN TYPEOF (arg1)) 
THEN
	RETURN (TRUE);
END_IF;

IF arg1 IN arg2 
THEN 
	RETURN (FALSE);
END_IF;

IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.UNARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Unary_generic_expression.operand,arg2+[arg1]));
END_IF;

IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BINARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Binary_generic_expression.operands[1],arg2+[arg1])
	AND
	Acyclic(arg1\Binary_generic_expression.operands[2],arg2+[arg1]));
END_IF;

IF 
'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	result := TRUE;
	REPEAT i := 1 TO 
			SIZEOF (arg1\Multiple_arity_generic_expression.operands);
		result := result AND
		Acyclic(arg1\Multiple_arity_generic_expression.operands[i], arg2+[arg1]);
	END_REPEAT;

	RETURN (result);
END_IF;

END_FUNCTION; 

(* Implicit interfaced from: Component_grouping_arm *)
FUNCTION acyclic_assembly_component_placement_link
  (relation : Assembly_component_placement_link; relatives : SET[1:?] OF
  Assembly_component; specific_relation : STRING) : BOOLEAN; 
LOCAL
    x : SET OF Assembly_component_placement_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
        'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'ASSEMBLY_COMPONENT_PLACEMENT_LINK.' +
        'SUBSEQUENT_ELEMENT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_assembly_component_placement_link(x[i], relatives +
        relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

(* Implicit interfaced from: Component_grouping_arm *)
FUNCTION cg_get_sz_ac (input : SET[1:?] OF Assembly_component_placement_link) : INTEGER;
LOCAL
    ac : SET OF Assembly_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac + input[i]\Assembly_component_placement_link.precedent_element +
      input[i]\Assembly_component_placement_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

(* Implicit interfaced from: Component_grouping_arm *)
FUNCTION acyclic_linear_array_placement_group_component_link
  (relation : Linear_array_placement_group_component_link; relatives :
  SET[1:?] OF Linear_array_placement_group_component; specific_relation : STRING): BOOLEAN; 
LOCAL
      x : SET OF Linear_array_placement_group_component_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
     x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
       'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK.' + 'SUBSEQUENT_ELEMENT'))
       | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_linear_array_placement_group_component_link(x[i], relatives
        + relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

(* Implicit interfaced from: Component_grouping_arm *)
FUNCTION cg_get_sz_lapgc (input : SET[1:?] OF Linear_array_placement_group_component_link) : INTEGER;
LOCAL
  ac : SET OF Linear_array_placement_group_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac +
        input[i]\Linear_array_placement_group_component_link.precedent_element +
        input[i]\Linear_array_placement_group_component_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

(* Implicit interfaced from: Advanced_boundary_representation_arm *)
FUNCTION collect_shells(brep : Manifold_solid_brep)    
               : SET[1:?] OF Closed_shell;   
    LOCAL   
      return_set: SET[1:?] OF closed_shell := [brep.outer];   
    END_LOCAL;   

    IF SIZEOF(brep.voids)  >= 1    
          THEN   
       return_set := return_set + brep.voids;   
    END_IF;   
   RETURN(return_set);   
END_FUNCTION; 

(* Implicit interfaced from: B_spline_geometry_arm *)
FUNCTION positive_curve_weights(bsc: Rational_b_spline_curve) : BOOLEAN;
   LOCAL
     result : BOOLEAN := TRUE;
   END_LOCAL;

   REPEAT i := 1 TO SIZEOF(bsc.weight_values);
     IF bsc.weight_values[i] <= 0.0  THEN
       result := FALSE;
       RETURN(result);
     END_IF;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

(* Implicit interfaced from: B_spline_geometry_arm *)
FUNCTION positive_surface_weights(bss: Rational_b_spline_surface) : BOOLEAN;
   LOCAL
     result        : BOOLEAN := TRUE;
   END_LOCAL;
   
   REPEAT i := 1 TO SIZEOF(bss.weight_values);
     REPEAT j := 0 TO SIZEOF(bss.weight_values[1]);
       IF (bss.weight_values[i][j] <= 0.0)  THEN
         result := FALSE;
         RETURN(result);
       END_IF;
     END_REPEAT;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

(* Implicit interfaced from: Shape_data_quality_criteria_arm *)
  FUNCTION validate_measured_data_type
      (ei:shape_data_quality_criterion;
       type_string: STRING):LOGICAL;
       LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdcr: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdii: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
         sdei: BAG OF
          INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all shape_data_quality_inspection_criterion_report instances,
       -- all shape_data_quality_inspection_instance_report_item instances, and
       -- instance_report_item_with_extreme_instances instances
       -- associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result.
    
       sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdcr := sdcr + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- If there is no report, then return true.
       IF((SIZEOF(sdcr) = 0) AND (SIZEOF(sdir) = 0)) THEN
         RETURN(TRUE);
       END_IF;
    
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdii := sdii + QUERY(q <* sdir[i].inspected_instances|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdei := sdei + QUERY(q <* sdir[i].inspected_instances|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- When reports exist, then perform checking process.
    
       -- Check representative_measured_value of 
       -- shape_data_quality_inspection_criterion_report
       REPEAT i:= 1 TO SIZEOF(sdcr);
        IF(NOT(type_string IN
           TYPEOF(sdcr[i].representative_measured_value))) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
       -- Check measured_value of shape_data_quality_inspection_
       -- instance_report_item
       REPEAT i:= 1 TO SIZEOF(sdii);
         IF(NOT(type_string IN
           TYPEOF(sdii[i].measured_value))) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
       -- Check measured_value of extreme_instances of
       -- instance_report_item_with_extreme_instance
       REPEAT i:= 1 TO SIZEOF(sdei);
         REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
           IF(NOT(type_string IN
             TYPEOF(sdei[i].extreme_instances[j].measured_value)))
           THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_REPEAT;
    
       RETURN(TRUE);
  END_FUNCTION;

(* Implicit interfaced from: Shape_data_quality_criteria_arm *)
  FUNCTION validate_inspected_elements_type
      (ei:shape_data_quality_criterion;
       type_list:BAG OF STRING):LOGICAL;
       LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdiri: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all shape_data_quality_inspection_instance_report_item
       -- instances associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result and
       -- shape_data_quality_instance_report
  
       sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       IF(SIZEOF(sdir) = 0) THEN
         RETURN(TRUE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdiri := sdiri + QUERY(q <* sdir[i].inspected_instances|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
  
       -- STEP-2
       -- check whether the types of inspected_elements attribute
       -- of collected instances include all the type names 
       -- in the type list given as an input argument of this 
       -- function and they do not include any other type names. 
  
       -- If there is no instance_report_item, then return true.
       IF(SIZEOF(sdiri) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- When reports exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(sdiri);
         -- If size of inspected_elements is not equal to the size of
         -- type_list, then return false.
         IF(SIZEOF(sdiri[i].inspected_elements) <> 
            SIZEOF(type_list)) THEN
           RETURN(FALSE);
         END_IF;
         -- check all elements of type_lists 
         -- for each elements of inspected_elements.
         t_type_list := type_list;
         REPEAT j:= 1 TO SIZEOF(sdiri[i].inspected_elements);
           REPEAT k:= 1 TO SIZEOF(t_type_list);
             IF(t_type_list[k] IN
                TYPEOF(sdiri[i].inspected_elements[j])) THEN
              t_type_list := t_type_list - t_type_list[k];
              ESCAPE;
             END_IF;
           END_REPEAT;
         END_REPEAT;
         IF(SIZEOF(t_type_list) > 0) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
      RETURN(TRUE);
  END_FUNCTION;

(* Implicit interfaced from: Mesh_topology_arm *)
FUNCTION all_mesh_vertices(arg : Array_based_unstructured_mesh_and_vertices)
         : BOOLEAN;
LOCAL
  vertex_set : SET OF Vertex := [];
  cell : Vertex_defined_cell;
END_LOCAL;
  REPEAT i := 1 TO arg.cell_count;
    cell := arg.cells[i];
    REPEAT j := 1 TO cell.vn_count;
      vertex_set := vertex_set + cell.vertices[j];
    END_REPEAT;
  END_REPEAT;
  IF (SIZEOF(vertex_set) <> arg.index_count) THEN
    RETURN(FALSE);
  END_IF;
  REPEAT i := 1 TO arg.index_count;
    IF (NOT (arg.vertices[i] IN vertex_set) ) THEN
      RETURN(FALSE);
    END_IF;
  END_REPEAT;
  RETURN(TRUE);
END_FUNCTION;

(* Implicit interfaced from: Shape_data_quality_criteria_arm *)
  FUNCTION validate_accuracy_types
    (ei:shape_data_quality_criterion;
     type_list:BAG OF STRING):LOGICAL;
     LOCAL
       sdqca: BAG OF
        SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION:=[];
       sma: BAG OF SHAPE_MEASUREMENT_ACCURACY:=[];
       sdqir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
       scraa: BAG OF
        SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION:=[];
       t_logic:BOOLEAN;
     END_LOCAL;
     -- STEP-1
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_data_criterion_and_accuracy_association 
     -- that refers to given shape_data_quality_criterion.
     sdqca := USEDIN(ei,
               'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
               'SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_CRITERION');
     IF(SIZEOF(sdqca) <> 0) THEN
       REPEAT i:= 1 TO SIZEOF(sdqca);
         sma := sma + sdqca[i].required_specific_accuracy;
       END_REPEAT;
  
       -- STEP-2
       -- check whether the collected types include all the type names
       -- in the type list given as an input argument of this function
       -- and they do not include any other type names. 
       IF(SIZEOF(type_list) < SIZEOF(sma)) THEN
         RETURN(FALSE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(sma);
         t_logic := FALSE;
         REPEAT j:= 1 TO SIZEOF(type_list);
           IF(type_list[j] IN value_limit_type(sma[i].range)) THEN
             t_logic := TRUE;
             ESCAPE;
           END_IF;
         END_REPEAT;
         IF(NOT(t_logic)) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    END_IF;
  
     -- STEP-3
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_inspection_result_accuracy_association
     -- that refers to shape_data_quality_inspection_result
     -- for the given shape_data_quality_criterion.
     sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                   'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                   'DATA_QUALITY_INSPECTION_RESULT.'+
                   'CRITERION_INSPECTED'))|
           'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(q));
     IF(SIZEOF(sdqir) = 0) THEN
       RETURN(TRUE);
     END_IF;
  
     REPEAT i:= 1 TO SIZEOF(sdqir);
       scraa := USEDIN(sdqir[i],
               'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
               'SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_RESULT');
       IF(SIZEOF(scraa) <> 0) THEN
         sma := [];
         REPEAT j:= 1 TO SIZEOF(scraa);
           sma := sma + scraa[j].applied_specific_accuracy;
         END_REPEAT;
  
         -- STEP-4
         -- check whether the collected types include all the type
         -- names in the type list given as an input argument of
         -- this function and they do not include any other type names.
         IF(SIZEOF(type_list) < SIZEOF(sma)) THEN
           RETURN(FALSE);
         END_IF;
  
         REPEAT j:= 1 TO SIZEOF(sma);
           t_logic := FALSE;
           REPEAT k:= 1 TO SIZEOF(type_list);
             IF(type_list[k] IN value_limit_type(sma[j].range)) THEN
               t_logic := TRUE;
               ESCAPE;
             END_IF;
           END_REPEAT;
           IF(NOT(t_logic)) THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_IF;
     END_REPEAT;
  
     RETURN(TRUE);
  END_FUNCTION;

(* Implicit interfaced from: Shape_data_quality_criteria_arm *)
  FUNCTION value_limit_type
    (iv:shape_data_quality_value_limit_type_select):SET OF STRING;
    LOCAL
      retval  : SET OF STRING := [];
    END_LOCAL;
    IF(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'
       +'SHAPE_DATA_QUALITY_VALUE_RANGE') IN TYPEOF(iv)) THEN
      retval := TYPEOF(iv\Shape_data_quality_value_range.upper_limit\Value_with_unit.value_component);
    END_IF;
    IF(('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'
       +'SHAPE_DATA_QUALITY_VALUE_LIMIT') IN TYPEOF(iv)) THEN
      retval := TYPEOF(iv\Value_with_unit.value_component);
    END_IF;
    RETURN(retval);
  END_FUNCTION;

(* Implicit interfaced from: Externally_conditioned_data_quality_criteria_arm *)
  FUNCTION validate_ecdq_inspected_elements_type
      (ei:Externally_conditioned_data_quality_criterion;
       type_list:BAG OF STRING):LOGICAL;
       LOCAL
         edqir: SET OF
          Externally_conditioned_data_quality_inspection_result:=[];
         dir: SET OF
          Data_quality_inspection_instance_report:=[];
         ediri: SET OF
          Externally_conditioned_Data_quality_inspection_instance_report_item:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all Externally_conditioned_data_quality_inspection_instance_report_item
       -- instances associated with the given Externally_conditioned_data_quality_criterion
       -- via Externally_conditioned_data_quality_inspection_result and
       -- data_quality_instance_report
  
       edqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(edqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(edqir);
         dir := dir + QUERY(q <* bag_to_set(USEDIN(edqir[i],
                     'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       IF(SIZEOF(dir) = 0) THEN
         RETURN(TRUE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(dir);
         ediri := ediri + QUERY(q <* dir[i].inspected_instances|
             'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
             'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
  
       -- STEP-2
       -- check whether the types of inspected_elements attribute
       -- of collected instances include all the type names 
       -- in the type list given as an input argument of this 
       -- function and they do not include any other type names. 
  
       -- If there is no instance_report_item, then this function returns true.
       IF(SIZEOF(ediri) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- When reports exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(ediri);
         -- If size of inspected_elements is not equal to the size of
         -- type_list, then return false.
         IF(SIZEOF(ediri[i].inspected_elements) <> 
            SIZEOF(type_list)) THEN
           RETURN(FALSE);
         END_IF;
         -- check all elements of type_lists 
         -- for each elements of inspected_elements.
         t_type_list := type_list;
         REPEAT j:= 1 TO SIZEOF(ediri[i].inspected_elements);
           REPEAT k:= 1 TO SIZEOF(t_type_list);
             IF(t_type_list[k] IN
                TYPEOF(ediri[i].inspected_elements[j])) THEN
              t_type_list := t_type_list - t_type_list[k];
              ESCAPE;
             END_IF;
           END_REPEAT;
         END_REPEAT;
         IF(SIZEOF(t_type_list) > 0) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
      RETURN(TRUE);
  END_FUNCTION;
(* REFERENCE FROM (Numeric_expression_arm); *)
FUNCTION Is_int_expr (arg: Numeric_expression) : BOOLEAN;

LOCAL
	i: INTEGER;
END_LOCAL;

IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.INT_LITERAL' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REAL_LITERAL' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.INT_NUMERIC_VARIABLE' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REAL_NUMERIC_VARIABLE' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ABS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_int_expr(arg\Unary_numeric_expression.operand));
END_IF;
IF 'NUMERIC_FUNCTION.MINUS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_int_expr(arg\Unary_numeric_expression.operand)); 
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIN_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COS_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.TAN_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASIN_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ACOS_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ATAN_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EXP_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LOG_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LOG2_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LOG10_FUNCTION' IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SQUARE_ROOT_FUNCTION' IN TYPEOF(arg))
THEN 
	RETURN (FALSE);
END_IF;
IF 	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLUS_EXPRESSION' IN TYPEOF(arg))
		OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MULT_EXPRESSION' IN TYPEOF(arg))
		OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MAXIMUM_FUNCTION' IN TYPEOF(arg))
		OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MINIMUM_FUNCTION' IN TYPEOF(arg)) 
THEN 
	REPEAT i :=1 TO SIZEOF (
			arg\Multiple_arity_numeric_expression.operands);
	IF NOT 
		Is_int_expr(arg\Multiple_arity_numeric_expression.operands[i]) 
	THEN 
		RETURN (FALSE);
	END_IF;
	END_REPEAT;
	RETURN (TRUE);
END_IF;
IF 	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MINUS_EXPRESSION' IN TYPEOF(arg))
		OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POWER_EXPRESSION' 
								IN TYPEOF(arg))
THEN 
	RETURN (Is_int_expr(arg\Binary_numeric_expression.operands[1])
		AND Is_int_expr(arg\Binary_numeric_expression.operands[2]));
END_IF;
IF	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIV_EXPRESSION' IN TYPEOF(arg))
		OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MOD_EXPRESSION' IN TYPEOF(arg))
THEN 
	RETURN(TRUE);	
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SLASH_EXPRESSION' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 	
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FUNCTION_PARAMETER_VALUE' IN TYPEOF(arg) 
THEN 
	IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.INT_VALUE_FUNCTION' IN TYPEOF(arg) 
	THEN 
		RETURN (TRUE); 
	ELSE 
		RETURN (FALSE); 
	END_IF;
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.INTEGER_DEFINED_FUNCTION' IN TYPEOF(arg)
THEN 
	RETURN(TRUE) ;
END_IF;
IF'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.REAL_DEFINED_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN(FALSE) ;
END_IF ;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_DEFINED_FUNCTION' IN TYPEOF(arg)
THEN 
	RETURN(FALSE) ;
END_IF ;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_DEFINED_FUNCTION' IN TYPEOF(arg)
THEN 
	RETURN (FALSE) ;
END_IF ;

RETURN (FALSE);

END_FUNCTION; 

(* Implicit interfaced from: Parameterization_and_variational_representation_arm *)
FUNCTION make_numeric_set(start, delta : NUMBER; 
                          incs         : maths_integer) 
                                       : SET [2:?] OF NUMBER;

  LOCAL
    i : INTEGER;
    numeric_set : SET[2:?] OF NUMBER := [start, (start + delta)];
  END_LOCAL;

  IF incs > 1 THEN REPEAT i := 2 TO incs;
                     numeric_set := numeric_set + (start + (i*delta));
                   END_REPEAT;
  END_IF;
  RETURN(numeric_set);
END_FUNCTION;

(* Implicit interfaced from: Specification_control_arm *)
  FUNCTION aggregate1_in_aggregate2 (agg1, agg2: AGGREGATE OF GENERIC): LOGICAL;
    RETURN(SIZEOF(QUERY (ele <* agg1 | VALUE_IN(agg2, ele)))= SIZEOF(agg1));
  END_FUNCTION;

(* Implicit interfaced from: Production_rule_arm *)
FUNCTION local_vars_of (thing : GENERIC) : SET [0:?] OF Scalar_variable;
  LOCAL
    accum : SET [0:?] OF Scalar_variable := [];
  END_LOCAL;
  RETURN (local_vars_aux(thing, accum));
END_FUNCTION;

(* Implicit interfaced from: Production_rule_arm *)
FUNCTION local_vars_aux (thing : GENERIC; accum : SET [0:?] OF Scalar_variable) 
                                                : SET [0:?] OF Scalar_variable;
  LOCAL i,j,k : INTEGER; END_LOCAL;
  IF (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ABSTRACT_VARIABLE' IN TYPEOF(thing)) AND 
      ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RULE_DEFINITION' IN (TYPEOF(thing.scope))))
   THEN accum := accum + thing;
   ELSE IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.RULE_CONDITION' IN TYPEOF(thing))
        THEN REPEAT i := 1 TO HIINDEX(thing\Atomic_formula.terms);
                accum := local_vars_aux(thing\Atomic_formula.terms[i],accum);
             END_REPEAT;
        ELSE IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIMPLE_CLAUSE' IN TYPEOF(thing))
             THEN REPEAT j := 1 TO HIINDEX(thing.formulas);
                        accum := local_vars_aux(thing.formulas[j],accum);
                  END_REPEAT;
             ELSE IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPLEX_CLAUSE' IN TYPEOF(thing))
                  THEN REPEAT k := 1 TO HIINDEX(thing.clauses);
                        accum := local_vars_aux(thing.clauses[k],accum);
                       END_REPEAT;
                  END_IF;
             END_IF;
        END_IF;
  END_IF;
  RETURN(accum);
END_FUNCTION;

(* Implicit interfaced from: Production_rule_arm *)
FUNCTION contains_variable (x : Term_select) : BOOLEAN;
  IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ABSTRACT_VARIABLE' IN TYPEOF(x)) THEN RETURN (TRUE);
      ELSE IF (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FUNC' IN TYPEOF(X)) AND
              (SIZEOF(QUERY(y <* x.terms | contains_variable(y))) > 0)) 
              THEN RETURN (TRUE);
              ELSE RETURN (FALSE);
           END_IF;
  END_IF;
END_FUNCTION;
(* REFERENCE FROM (Specification_document_arm); *)
  FUNCTION get_document_definition(
      input : documented_element_select;
      role : STRING;
      type_name : STRING) : SET OF Document_definition; 
    LOCAL
      dd : SET[0:?] OF Document_definition := [];  --this gives us access to the information base
      da : SET[0:?] OF Document_assignment :=[];
    END_LOCAL;
    da := bag_to_set(QUERY(dr <* USEDIN (input, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.'+
	  'DOCUMENT_ASSIGNMENT.IS_ASSIGNED_TO') | (dr.role = role)));
    -- iterate over da
    REPEAT i := 1 to SIZEOF(da) by 1;
      IF(type_name IN TYPEOF (da[i].assigned_document))THEN
        dd := dd + da[i].assigned_document;
      END_IF;
    END_REPEAT;
    RETURN(dd);
  END_FUNCTION;

(* Implicit interfaced from: Extended_date_arm *)
  FUNCTION leap_year
    (year : year_number) : BOOLEAN;
      IF ( ( ( ( year MOD  4 ) = 0 ) AND 
        ( ( year MOD  100 ) <> 0 ) ) OR ( ( year MOD 400 ) = 0 ) ) 
        THEN 
          RETURN  ( TRUE ) ; 
        ELSE 
          RETURN ( FALSE ) ; 
      END_IF ; 
  END_FUNCTION;

(* Implicit interfaced from: Characteristic_arm *)
  FUNCTION valid_qualified_tolerance_characteristic (input : Qualified_tolerance_characteristic) : BOOLEAN;
 --no more than one of the Type_qualifier.name shall be 'nominal'
 --no more than one of the Type_qualifier.name shall be 'typical'
 --no more than one of the Type_qualifier.name shall be 'maximium'
 --no more than one of the Type_qualifier.name shall be 'minimum'
 --Type_qualifier.name shall be drawn only from 'nominal', 'typical' , 'maximium', 'minimum'
  LOCAL
     bag_data : BAG OF STRING := [];
     valid_set : SET OF STRING := ['nominal', 'typical' , 'maximium', 'minimum'];
  END_LOCAL;
  REPEAT i := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items);
    REPEAT j := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers);
     IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.TYPE_QUALIFIER' IN TYPEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j])
      THEN
        bag_data := bag_data + input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j]\Type_qualifier.name;
     END_IF;
    END_REPEAT;
  END_REPEAT;

  IF (SIZEOF(bag_to_set(bag_data)) = SIZEOF(bag_data)) AND
     (VALUE_UNIQUE(bag_data)) AND 
     (SIZEOF(valid_set * bag_data) = SIZEOF(bag_data)) 
  THEN RETURN(TRUE);
  END_IF;
    
   RETURN(FALSE);
  END_FUNCTION; 

(* Implicit interfaced from: Characteristic_arm *)
  FUNCTION valid_range(input1 : Numerical_item_with_unit;
                       input2 : Numerical_item_with_unit) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION; 

(* Implicit interfaced from: Numeric_expression_arm *)
FUNCTION Is_sql_mappable (arg: expression) : BOOLEAN;

LOCAL
	i: INTEGER;
END_LOCAL;

IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIMPLE_NUMERIC_EXPRESSION' IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SQL_MAPPABLE_DEFINED_FUNCTION' IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MINUS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_sql_mappable(arg\Unary_numeric_expression.operand)); 
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ABS_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIN_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COS_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.TAN_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASIN_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ACOS_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ATAN_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EXP_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LOG_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LOG2_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LOG10_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SQUARE_ROOT_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FUNCTION_PARAMETER_VALUE' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LENGTH_FUNCTION' IN TYPEOF(arg))
THEN 
	RETURN (FALSE);
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PLUS_EXPRESSION' IN TYPEOF(arg)) 
	OR('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MULT_EXPRESSION' IN TYPEOF(arg)) 
	OR('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MAXIMUM_FUNCTION' IN TYPEOF(arg)) 
	OR('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MAXIMUM_FUNCTION' IN TYPEOF(arg)) 
THEN 
	REPEAT i :=1 TO SIZEOF (arg\Multiple_arity_numeric_expression.operands);
		IF NOT Is_sql_mappable(
			arg\Multiple_arity_numeric_expression.operands[i])
		THEN 
			RETURN (FALSE);
		END_IF;
	END_REPEAT;
RETURN (TRUE);
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MINUS_EXPRESSION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SLASH_EXPRESSION' IN TYPEOF(arg))
THEN
	RETURN (Is_sql_mappable(arg\Binary_numeric_expression.operands[1])
		AND Is_sql_mappable(arg\Binary_numeric_expression.operands[2]));
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DIV_EXPRESSION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.MOD_EXPRESSION' IN TYPEOF(arg)) 
	OR('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.POWER_EXPRESSION' IN TYPEOF(arg))
THEN 
	RETURN (FALSE); 	
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIMPLE_BOOLEAN_EXPRESSION' IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NOT_EXPRESSION' IN TYPEOF (arg) 
THEN 
	RETURN (Is_sql_mappable (arg\UNARY_GENERIC_EXPRESSION.OPERAND));
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ODD_FUNCTION'IN TYPEOF (arg)) 
		OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.XOR_EXPRESSION' IN TYPEOF (arg)) 
THEN	
	RETURN (FALSE);
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.AND_EXPRESSION' IN TYPEOF (arg)) 
		OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.OR_EXPRESSION' IN TYPEOF (arg)) 
THEN
	REPEAT i:=1 TO SIZEOF (
			arg\MULTIPLE_ARITY_BOOLEAN_EXPRESSION.OPERANDS);
		IF NOT Is_sql_mappable (
			arg\MULTIPLE_ARITY_BOOLEAN_EXPRESSION.OPERANDS[i]) 
		THEN 
			RETURN (FALSE);
		END_IF;
	END_REPEAT;
	RETURN (TRUE);
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EQUALS_EXPRESSION' IN TYPEOF (arg) 
THEN
	RETURN(Is_sql_mappable (
			arg\Binary_generic_expression.OPERANDS [1])
		AND Is_sql_mappable(
			arg\Binary_generic_expression.OPERANDS [2]));
END_IF;
IF	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPARISON_EQUAL' IN TYPEOF (arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPARISON_GREATER' IN TYPEOF (arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPARISON_GREATER_EQUAL' 	IN TYPEOF (arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPARISON_LESS' IN TYPEOF (arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPARISON_LESS_EQUAL' IN TYPEOF (arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.COMPARISON_NOT_EQUAL' IN TYPEOF (arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.LIKE_EXPRESSION'  IN TYPEOF (arg)) 
THEN
	RETURN (Is_sql_mappable (arg\COMPARISON_EXPRESSION.OPERANDS[1])
		AND Is_sql_mappable (arg\COMPARISON_EXPRESSION.OPERANDS[2]));
END_IF;
IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.INTERVAL_EXPRESSION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_sql_mappable(arg\Interval_expression.interval_low) 
		AND Is_sql_mappable(arg\Interval_expression.interval_high)
		AND Is_sql_mappable(arg\Interval_expression.interval_item));
END_IF;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.NUMERIC_DEFINED_FUNCTION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.BOOLEAN_DEFINED_FUNCTION' 	IN TYPEOF(arg))
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.STRING_DEFINED_FUNCTION' IN TYPEOF(arg))  
THEN 
		RETURN (FALSE) ;
END_IF;

IF 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SIMPLE_STRING_EXPRESSION' IN TYPEOF(ARG) 
THEN 
	RETURN (TRUE);
END_IF;
IF 	('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.INDEX_EXPRESSION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.SUBSTRING_EXPRESSION' IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONCAT_EXPRESSION' 	IN TYPEOF(arg)) 
	OR ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.FORMAT_FUNCTION' IN TYPEOF(arg)) 
THEN 
	RETURN (FALSE);
END_IF;
	RETURN (FALSE);
END_FUNCTION; 

(* Implicit interfaced from: Parameterization_and_variational_representation_arm *)
FUNCTION validate_attribute_id(attid : attribute_identifier) : BOOLEAN;

  CONSTANT
    letters      : SET[52:52] OF STRING := 
      ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p',
       'q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F',
       'G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V',
       'W','X','Y','Z'];
    numbers_etc  : SET[15:15] OF STRING := 
      ['0','1','2','3','4','5','6','7','8','9','_','[',']','.','\'];
    valid_chars  : SET[67:67] OF STRING := letters + numbers_etc;
  END_CONSTANT;

  LOCAL
    id_length : INTEGER := LENGTH(attid);
    id_valid  : BOOLEAN := TRUE;
    i         : INTEGER;
  END_LOCAL;

  -- check that indentifier starts with a letter

  IF NOT (attid[1] IN letters) THEN 
    id_valid := FALSE; 
  END_IF;
  
  -- check that no invalid characters occur subsequently

  REPEAT i := 2 TO id_length
   WHILE id_valid = TRUE;
    IF NOT (attid[i] IN valid_chars) THEN 
      id_valid := FALSE;
    END_IF;
  END_REPEAT;
  RETURN(id_valid);

END_FUNCTION;

(* Implicit interfaced from: Assembly_component_arm *)
  FUNCTION ac_get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

(* Implicit interfaced from: Assembly_component_arm *)
  FUNCTION get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;

    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
        'STRUCTURED_LAYOUT_COMPONENT' IN
        TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;

    RETURN (pvd);
  END_FUNCTION;

(* Implicit interfaced from: Assembly_component_arm *)
  FUNCTION ac_get_groups(input : Assembly_component) : SET OF Assembly_group_component;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      agc : SET OF Assembly_group_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        agc := agc + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      END_IF;
    END_REPEAT;
    RETURN (agc);
  END_FUNCTION;

(* Implicit interfaced from: Assembly_component_arm *)
  FUNCTION ac_get_versions(input : SET OF Product_view_definition) : SET OF Product_version;
    LOCAL
      pv : SET OF Product_version := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      pv := pv + input[i]\Product_view_definition.defined_version; 
    END_REPEAT;
    RETURN (pv);
  END_FUNCTION;

(* Implicit interfaced from: Assembly_component_arm *)
  FUNCTION ac_get_products(input : SET OF Product_version) : SET OF Product;
    LOCAL
      p : SET OF Product := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      p := p + input[i]\Product_version.of_product; 
    END_REPEAT;
    RETURN (p);
  END_FUNCTION;

(* Implicit interfaced from: Assembly_component_arm *)
  FUNCTION ac_get_group_assemblies(input : SET OF Assembly_group_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := [];
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      acr := input[i]\Assembly_component.occurrence_contexts;
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

(* Implicit interfaced from: Kinematic_structure_arm *)
FUNCTION collect_joints 
  (items : SET[1:?] OF Pair_representation_relationship) : SET OF Kinematic_joint;
LOCAL
  result : SET OF kinematic_joint := [];
END_LOCAL;
  REPEAT i := 1 TO HIINDEX(items);
    result := result + items[i].transformation_operator.joint;
  END_REPEAT;
  RETURN(result);
END_FUNCTION;
(* REFERENCE FROM (Kinematic_topology_arm); *)
FUNCTION get_kinematic_joints_from_oriented_joints(ors : SET OF Oriented_joint) : SET OF Kinematic_joint;
  LOCAL
    result : SET OF Kinematic_joint := [];
  END_LOCAL;
  IF SIZEOF(ors) > 0 THEN
    REPEAT i := 1 TO HIINDEX(ors);
      result := result + ors[i].edge_definition;
    END_REPEAT;
  END_IF;
  RETURN (result);
END_FUNCTION;
(* REFERENCE FROM (Kinematic_topology_arm); *)
FUNCTION get_kinematic_joints_from_kinematic_loops(kls : SET OF Kinematic_loop) : SET OF Kinematic_joint;
  LOCAL
    result : SET OF Oriented_joint := [];
  END_LOCAL;
  IF SIZEOF(kls) > 0 THEN
    REPEAT i := 1 TO HIINDEX(kls);
      result := result + kls[i].edge_list;
    END_REPEAT;
  END_IF;
  RETURN (get_kinematic_joints_from_oriented_joints(result));
END_FUNCTION;

(* Implicit interfaced from: Kinematic_structure_arm *)
FUNCTION sort_link_associations 
  (aprr : SET[1:?] OF Pair_representation_relationship; one_not_two : boolean) : SET OF Kinematic_link_representation;
LOCAL
  result : SET OF Kinematic_link_representation := [];
END_LOCAL;
  IF one_not_two THEN
    REPEAT i := 1 TO HIINDEX(aprr);
      result := result + aprr[i].rep_1;
    END_REPEAT;
  ELSE  
    REPEAT i := 1 TO HIINDEX(aprr);
      result := result + aprr[i].rep_2;
    END_REPEAT;
  END_IF;
  RETURN(result);
END_FUNCTION;

(* Implicit interfaced from: Specification_based_configuration_arm *)
FUNCTION consistent_configuration_type(config: Configuration): BOOLEAN;
IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLASS_CONDITION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(config.is_solution_for\Class_condition_association.condition_type ='part usage');
  ELSE
    RETURN(config.is_solution_for\Class_condition_association.condition_type ='design case');
  END_IF;
END_IF;

IF ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CLASS_SPECIFICATION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(config.is_solution_for\Class_specification_association.association_type ='part usage');
  ELSE 
    RETURN(config.is_solution_for\Class_specification_association.association_type ='design case');
  END_IF;
END_IF;

RETURN(FALSE);
END_FUNCTION;

(* Implicit interfaced from: Kinematic_state_arm *)
FUNCTION ypr_index (ypr : ypr_enumeration) : INTEGER;
  CASE ypr OF
    yaw    : RETURN (1);
    pitch  : RETURN (2);
    roll   : RETURN (3);
  END_CASE;
  RETURN (?);
END_FUNCTION;

(* Implicit interfaced from: Specification_based_configuration_arm *)
FUNCTION type_of_set(items: SET OF GENERIC       ): SET OF STRING;
LOCAL
  result: SET OF STRING:= [];
END_LOCAL;

REPEAT i:=1 TO HIINDEX(items);
  result := result + TYPEOF(items[i]);
END_REPEAT;
RETURN(result);
END_FUNCTION;

(* Implicit interfaced from: Item_definition_structure_arm *)
  RULE mandatory_part_occurrence_definition_relationship FOR (Assembly_component_relationship);
    LOCAL
      assemblies_of_parts: SET OF Assembly_component_relationship := [];
    END_LOCAL;
    WHERE
      WR1: SIZEOF(QUERY(ar <* assemblies_of_parts | 
	    NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.ASSEMBLED_PART_ASSOCIATION' IN TYPEOF(ar)) ))= 0;
  END_RULE;

(* Implicit interfaced from: Production_rule_arm *)
RULE max_one_entity_prefix FOR (Enum_reference_prefix);
 WHERE
   WR1: SIZEOF(QUERY(x <* Enum_reference_prefix | TRUE)) <= 1;
END_RULE;

(* Implicit interfaced from: Document_and_version_identification_arm *)
RULE document_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT_VERSION' IN TYPEOF ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT' IN TYPEOF ( pv.of_product) ) ) ) = 0 ;
END_RULE; 

(* Implicit interfaced from: Document_definition_arm *)
RULE document_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( dd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT_DEFINITION' IN TYPEOF (dd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'DOCUMENT_VERSION' IN TYPEOF ( dd.defined_version) ) ) ) =0;
END_RULE; 

(* Implicit interfaced from: Part_view_definition_arm *)
RULE part_view_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PART_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Ap242_managed_model_based_3d_engineering_arm *)
  RULE addresses_are_assigned FOR 
      (Address);
    WHERE
      WR1: SIZEOF(QUERY(a <* Address | SIZEOF(USEDIN(a, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.ADDRESS_ASSIGNMENT.ASSIGNED_ADDRESS')) = 0)) = 0;
  END_RULE; 

(* Implicit interfaced from: Ap242_managed_model_based_3d_engineering_arm *)
  RULE person_requires_person_and_organization FOR 
      (Person);
    WHERE
      WR1: SIZEOF(QUERY(p <* Person | SIZEOF(USEDIN(p, 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.PERSON_IN_ORGANIZATION.CONCERNED_PERSON')) = 0)) = 0;
  END_RULE; 

(* Implicit interfaced from: Ap242_managed_model_based_3d_engineering_arm *)
  RULE shape_requires_product_view FOR 
      (Item_shape);
    WHERE
      WR1: SIZEOF(QUERY(is <* Item_shape | NOT ('PRODUCT_VIEW_DEFINITION_ARM' + '.PRODUCT_VIEW_DEFINITION' IN TYPEOF(is.described_element)))) = 0;
  END_RULE; 

(* Implicit interfaced from: Ap242_managed_model_based_3d_engineering_arm *)
  RULE specific_product_occurrence_definition_relationship FOR 
      (Product_occurrence_definition_relationship);
    WHERE
      WR1: SIZEOF(QUERY(occ_rel <* Product_occurrence_definition_relationship | NOT ('PART_VIEW_DEFINITION_ARM' + '.PART_VIEW_DEFINITION' IN TYPEOF(occ_rel.relating_view)))) = 0;
      WR2: SIZEOF(QUERY(occ_rel <* Product_occurrence_definition_relationship | NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF' + '.PRODUCT_OCCURRENCE' IN TYPEOF(occ_rel.related_view)))) = 0;
  END_RULE; 

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE product_occurrence_usage FOR
      (Product_occurrence);
    WHERE
      WR1: SIZEOF(QUERY( po <* Product_occurrence |
      NOT (
      (SIZEOF(USEDIN(po,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW')) +
        SIZEOF(USEDIN(po,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP.PRODUCT'))) > 0
        )
        )) = 0;
  END_RULE;

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_requirement_id FOR
      (Requirement);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Requirement | SIZEOF(QUERY (p2 <* Requirement | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

(* Implicit interfaced from: Chemical_substance_arm *)
  RULE substance_view_definition_constraint FOR (Product_view_definition);
    WHERE
      WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
  END_RULE; 

(* Implicit interfaced from: Item_definition_structure_arm *)
  RULE definition_replacement_requires_effectivity_assignment FOR 
      (Part_definition_relationship);
    WHERE 
      WR1: SIZEOF( QUERY( pdr <* Part_definition_relationship | 
        (pdr\View_definition_relationship.relation_type = 'definition replacement') AND 
        (SIZEOF( USEDIN(pdr,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.EFFECTIVITY_ASSIGNMENT.ITEMS') ) = 0) ))
	     = 0; 
  END_RULE; 

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_document_id FOR
      (Document);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Document | SIZEOF(QUERY (p2 <* Document | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

(* Implicit interfaced from: Chemical_substance_arm *)
  RULE chemical_element_constraint FOR (Product);
    WHERE
      WR1: SIZEOF ( QUERY ( p <* Product | 
               (('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE' IN TYPEOF (p) ) AND ((p\Product.name) IN chemical_elements) ) 
                OR
               (NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE' IN TYPEOF (p) ) AND NOT((p\Product.name) IN chemical_elements) ))) =
        SIZEOF ( Product);
  END_RULE; 

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_product_version_id FOR
      (Product);
    WHERE
      WR1:  SIZEOF(QUERY (p <* Product | 
       (SIZEOF (QUERY (pv1 <*
       USEDIN(p,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VERSION.OF_PRODUCT') |  
       (SIZEOF (QUERY (pv2 <*
       USEDIN(p,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VERSION.OF_PRODUCT')
       |  pv1.id = pv2.id)) > 1)
       )) > 0)
       )) = 0;  
  END_RULE;

(* Implicit interfaced from: Chemical_substance_arm *)
  RULE substance_version_constraint FOR (Product_version);
    WHERE
      WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SUBSTANCE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
  END_RULE; 

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_product_view_definition_id FOR
      (Product_version);
    WHERE
      WR1:  SIZEOF(QUERY (pv <* Product_version | 
        (SIZEOF (QUERY (pvd1 <*
        USEDIN(pv,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION') |  
        (SIZEOF (QUERY (pvd2 <*
        USEDIN(pv,'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION')
        |  pvd1.id = pvd2.id)) > 1)
        )) > 0)
        )) = 0;  
  END_RULE;

(* Implicit interfaced from: Production_rule_arm *)
RULE rule_version_constraint FOR (Product_version);
WHERE
   WR1: SIZEOF (QUERY(pv <* Product_version | (NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_VERSION' IN TYPEOF(pv))) 
                      AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_PRODUCT' IN TYPEOF(pv.of_product)))) = 0 ;
END_RULE;

(* Implicit interfaced from: Design_product_data_management_arm *)
  RULE unique_part_id FOR
      (Part);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Part | SIZEOF(QUERY (p2 <* Part | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

(* Implicit interfaced from: Specification_based_configuration_arm *)
RULE restrict_to_dated_effectivity FOR (Effectivity_assignment);
LOCAL
  ndea_set : SET OF Effectivity_assignment := [];
END_LOCAL;
  ndea_set := QUERY(ea <* Effectivity_assignment | 
	NOT ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.DATED_EFFECTIVITY' IN TYPEOF(ea.assigned_effectivity)));
WHERE
  WR1: SIZEOF(QUERY(ea <* ndea_set | 
		(SIZEOF(['AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.CONFIGURATION']*type_of_set(ea.items))>0) )) =0;
END_RULE;

(* Implicit interfaced from: Production_rule_arm *)
RULE rule_software_definition_constraint FOR (Product_view_definition);
WHERE
   WR1: SIZEOF (QUERY ( pvd <* Product_view_definition | ( NOT('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_SOFTWARE_DEFINITION' 
                       IN TYPEOF(pvd))) 
                       AND ('AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'RULE_VERSION' IN TYPEOF (pvd . defined_version)))) = 0 ;
END_RULE; 

(* Implicit interfaced from: Software_arm *)
RULE software_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Software_arm *)
RULE software_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'SOFTWARE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Information_product_arm *)
RULE Information_product_version_constraint FOR
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT (
  'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'INFORMATION_VERSION' IN TYPEOF
  ( pv) ) ) AND ( 'AP209_MULTIDISCIPLINARY_ANALYSIS_AND_DESIGN_ARM_LF.' + 'INFORMATION_PRODUCT' IN TYPEOF (
pv.of_product) ) ) ) =0 ;
END_RULE; 

(* Implicit interfaced from: Drawing_definition_arm *)
(* E2: SUBTYPE_CONSTRAINT dd_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Product_analysis_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_temporal_spatial_domain FOR TEMPORAL_SPATIAL_DOMAIN; *)

(* Implicit interfaced from: Shape_property_assignment_arm *)
(* E2: SUBTYPE_CONSTRAINT property_definition_representation_subtype FOR PROPERTY_DEFINITION_REPRESENTATION; *)

(* Implicit interfaced from: Assembly_structure_arm *)
(* E2: SUBTYPE_CONSTRAINT assembly_component_relationship_constraint FOR ASSEMBLY_COMPONENT_RELATIONSHIP; *)
-- generated from SUBTYPE_CONSTRAINT assembly_component_relationship_constraint

RULE total_over_assembly_component_relationship_constraint FOR( ASSEMBLY_COMPONENT_RELATIONSHIP);
WHERE
  wr1 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['Ap209_multidisciplinary_analysis_and_design_arm.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(p) ) = 0)) = 0;
  wr2 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['Ap209_multidisciplinary_analysis_and_design_arm.NEXT_ASSEMBLY_USAGE'] * TYPEOF(p) ) = 0)) = 0;
  wr3 : SIZEOF(QUERY(p <* ASSEMBLY_COMPONENT_RELATIONSHIP | SIZEOF(['Ap209_multidisciplinary_analysis_and_design_arm.PROMISSORY_USAGE'] * TYPEOF(p) ) = 0)) = 0;
END_RULE;

(* Implicit interfaced from: Machining_features_arm *)
(* E2: SUBTYPE_CONSTRAINT mf_shape_element_subtypes FOR DEFINITIONAL_SHAPE_ELEMENT; *)

(* Implicit interfaced from: Kinematic_analysis_control_and_result_arm *)
(* E2: SUBTYPE_CONSTRAINT link_motion_representation_along_path_subtypes FOR LINK_MOTION_REPRESENTATION_ALONG_PATH; *)

(* Implicit interfaced from: External_currency_arm *)
(* E2: SUBTYPE_CONSTRAINT currency_subtypes FOR CURRENCY; *)

(* Implicit interfaced from: External_library_arm *)
(* E2: SUBTYPE_CONSTRAINT external_source_subtypes FOR EXTERNAL_SOURCE; *)

(* Implicit interfaced from: Geometric_tolerance_arm *)
(* E2: SUBTYPE_CONSTRAINT composite_shape_element_subtypes FOR COMPOSITE_SHAPE_ELEMENT; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_work_request_subtypes FOR WORK_REQUEST; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_work_request_status_subtypes FOR WORK_REQUEST_STATUS; *)

(* Implicit interfaced from: Basic_curve_arm *)
(* E2: SUBTYPE_CONSTRAINT curve_subtypes FOR BOUNDED_CURVE; *)

(* Implicit interfaced from: Basic_geometry_arm *)
(* E2: SUBTYPE_CONSTRAINT point_subtypes FOR POINT; *)

(* Implicit interfaced from: Basic_geometry_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_geometry_items FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Ap242_managed_model_based_3d_engineering_arm *)
(* E2: SUBTYPE_CONSTRAINT exclusive_products_242 FOR PRODUCT; *)

(* Implicit interfaced from: Ap242_managed_model_based_3d_engineering_arm *)
(* E2: SUBTYPE_CONSTRAINT exclusive_product_versions_242 FOR PRODUCT_VERSION; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_security_classification_subtypes FOR SECURITY_CLASSIFICATION; *)

(* Implicit interfaced from: Draughting_element_arm *)
(* E2: SUBTYPE_CONSTRAINT annotation_curve_subtypes FOR ANNOTATION_CURVE; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT type_qualifier_subtypes FOR TYPE_QUALIFIER; *)

(* Implicit interfaced from: Extended_measure_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_measure_items FOR MEASURE_ITEM; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT exclusive_property_value_representation_characteristic FOR PROPERTY_VALUE_REPRESENTATION; *)

(* Implicit interfaced from: Presentation_hierarchy_arm *)
(* E2: SUBTYPE_CONSTRAINT ph_styled_model_subtypes FOR STYLED_MODEL; *)

(* Implicit interfaced from: Geometric_tolerance_arm *)
(* E2: SUBTYPE_CONSTRAINT gl_non_definitional_shape_element_subtypes FOR NON_DEFINITIONAL_SHAPE_ELEMENT; *)

(* Implicit interfaced from: Draughting_annotation_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_annotation_elements FOR ANNOTATION_ELEMENT; *)

(* Implicit interfaced from: Mechanical_design_shaded_presentation_arm *)
(* E2: SUBTYPE_CONSTRAINT mdsp_surface_appearance_element_subtypes FOR SURFACE_APPEARANCE_ELEMENT; *)

(* Implicit interfaced from: Value_with_unit_extension_arm *)
(* E2: SUBTYPE_CONSTRAINT value_with_unit_subtypes FOR VALUE_WITH_UNIT; *)

(* Implicit interfaced from: Camera_view_3d_arm *)
(* E2: SUBTYPE_CONSTRAINT cv3d_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Text_appearance_arm *)
(* E2: SUBTYPE_CONSTRAINT ta_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Point_direction_model_arm *)
(* E2: SUBTYPE_CONSTRAINT pdim_exclusive_detailed_geometric_model_element FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Extended_basic_geometry_arm *)
(* E2: SUBTYPE_CONSTRAINT alternate_extended_geometry_items FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Analysis_arm *)
(* E2: SUBTYPE_CONSTRAINT sc1_numerical_model FOR NUMERICAL_MODEL; *)

(* Implicit interfaced from: Ply_orientation_specification_arm *)
(* E2: SUBTYPE_CONSTRAINT pos_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Kinematic_motion_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT kmr_geometric_representation_item_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Thickened_face_solid_arm *)
(* E2: SUBTYPE_CONSTRAINT tbsa_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Kinematic_motion_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT kmr_geometric_representation_context_subtypes FOR GEOMETRIC_COORDINATE_SPACE; *)

(* Implicit interfaced from: Kinematic_motion_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT kmr_representation_subtypes FOR REPRESENTATION; *)

(* Implicit interfaced from: Basic_data_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT representation_item_subtypes FOR REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT c_representation_item_subtypes FOR REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Appearance_assignment_arm *)
(* E2: SUBTYPE_CONSTRAINT aa_representation_item_subtypes FOR REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_date_or_date_time_assignment_subtypes FOR DATE_OR_DATE_TIME_ASSIGNMENT; *)

(* Implicit interfaced from: Geometric_tolerance_arm *)
(* E2: SUBTYPE_CONSTRAINT gl_associated_shape_element_subtypes FOR ASSOCIATED_SHAPE_ELEMENT; *)

(* Implicit interfaced from: Geometric_tolerance_arm *)
(* E2: SUBTYPE_CONSTRAINT gl_shape_element_subtypes FOR SHAPE_ELEMENT; *)

(* Implicit interfaced from: Shape_feature_arm *)
(* E2: SUBTYPE_CONSTRAINT sf_shape_element FOR SHAPE_ELEMENT; *)

(* Implicit interfaced from: Feature_and_connection_zone_arm *)
(* E2: SUBTYPE_CONSTRAINT fac_shape_element FOR SHAPE_ELEMENT; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_activity_relationship_subtypes FOR ACTIVITY_RELATIONSHIP; *)

(* Implicit interfaced from: Product_and_manufacturing_information_view_context_arm *)
(* E2: SUBTYPE_CONSTRAINT pmi_part_view_definition_context FOR PART_VIEW_DEFINITION_CONTEXT; *)

(* Implicit interfaced from: Characteristic_arm *)
(* E2: SUBTYPE_CONSTRAINT independent_property_subtypes FOR INDEPENDENT_PROPERTY; *)

(* Implicit interfaced from: External_properties_arm *)
(* E2: SUBTYPE_CONSTRAINT plib_or_external FOR INDEPENDENT_PROPERTY; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_approval_subtypes FOR APPROVAL; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_approval_status_subtypes FOR APPROVAL_STATUS; *)

(* Implicit interfaced from: Kinematic_structure_arm *)
(* E2: SUBTYPE_CONSTRAINT ks_axis_placement_3d_subtypes FOR AXIS_PLACEMENT_3D; *)

(* Implicit interfaced from: Primitive_solids_arm *)
(* E2: SUBTYPE_CONSTRAINT ps_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Kinematic_state_arm *)
(* E2: SUBTYPE_CONSTRAINT kss_geometric_representation_item_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Kinematic_structure_arm *)
(* E2: SUBTYPE_CONSTRAINT kss_representation_subtypes FOR REPRESENTATION; *)

(* Implicit interfaced from: Tagged_text_representation_arm *)
(* E2: SUBTYPE_CONSTRAINT ttr_string_representation_item_subtypes FOR STRING_REPRESENTATION_ITEM; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_organization_or_person_in_organization_assignment_subtypes FOR ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT; *)

(* Implicit interfaced from: Pre_defined_product_data_management_specializations_arm *)
(* E2: SUBTYPE_CONSTRAINT pdpdms_address_assignment_subtypes FOR ADDRESS_ASSIGNMENT; *)

(* Implicit interfaced from: Kinematic_structure_arm *)
(* E2: SUBTYPE_CONSTRAINT kps_property_definition_subtypes FOR ASSIGNED_PROPERTY; *)

(* Implicit interfaced from: Fill_area_style_arm *)
(* E2: SUBTYPE_CONSTRAINT fas_detailed_geometric_model_element_subtypes FOR DETAILED_GEOMETRIC_MODEL_ELEMENT; *)

(* Implicit interfaced from: Kinematic_topology_arm *)
(* E2: SUBTYPE_CONSTRAINT kts_representation_subtypes FOR REPRESENTATION; *)


END_SCHEMA;

