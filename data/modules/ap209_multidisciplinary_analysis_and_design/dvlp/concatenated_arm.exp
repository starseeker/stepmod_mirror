(*
$Id$
*)(*
ISO TC184/SC4/WG12 N2941 - ISO/TS 10303-1047 Activity - EXPRESS ARM
*) 


SCHEMA Activity_arm;

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE activity_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;

ENTITY Activity_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;

ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;

ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_arm

(*
 ISO TC184/SC4/WG12 N2943 - ISO/TS 10303-1049 Activity method - EXPRESS ARM
*)


SCHEMA Activity_method_arm; 


ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_method_arm

(*
 ISO TC184/SC4/WG12 N2998 - ISO/TS 10303-1249 Activity method assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2306
*) 


SCHEMA Activity_method_assignment_arm;

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE activity_method_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Activity_method_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : Activity_method;
  related_method : Activity_method;
END_ENTITY;

ENTITY Applied_activity_method_assignment;
  assigned_activity_method : Activity_method;
  items : SET[1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_method_assignment_arm
(*
 ISO TC184/SC4/WG12 N6857 - ISO/TS 10303-1514 Advanced boundary representation - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5272
*)

SCHEMA Advanced_boundary_representation_arm;

USE FROM Topologically_bounded_surface_arm; -- ISO/TS 10303-1511:2004
USE FROM Solid_model_arm;

TYPE advanced_brep_shape_representation_item = SELECT (
  Axis_placement_3d,
  Geometric_placement_operation,
  Manifold_solid_brep);
END_TYPE;

ENTITY Advanced_brep_shape_representation
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] of
advanced_brep_shape_representation_item;
WHERE
  WR1: SIZEOF(QUERY ( msb <* QUERY ( it <* SELF.items |
                ('ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP' IN TYPEOF(it)) ) |
               ( NOT (SIZEOF(QUERY ( csh <* collect_shells(msb) |
                                (NOT (SIZEOF(QUERY ( fcs <* csh\
                connected_face_set.connected_faces | (NOT (
                'ADVANCED_BOUNDARY_REPRESENTATION_ARM.ADVANCED_FACE' IN TYPEOF(fcs))) )) = 0)) ))
              = 0)) )) = 0;
END_ENTITY;

ENTITY Closed_shell
  SUBTYPE OF (Connected_face_set);
END_ENTITY;

ENTITY Manifold_solid_brep 
  SUBTYPE OF (Solid_model);
  outer : Closed_shell;
  voids : OPTIONAL SET[1:?] OF Oriented_closed_shell;
WHERE
  WR1: (NOT EXISTS(voids)) OR (SIZEOF(QUERY ( ocs <* SELF.voids |                
                      ( NOT (ocs.orientation = FALSE)))) = 0);
END_ENTITY;

ENTITY Oriented_closed_shell
   SUBTYPE OF (Closed_shell);
   shell       : Closed_shell;
   orientation : BOOLEAN;
WHERE
   WR1: NOT ('ADVANCED_BOUNDARY_REPRESENTATION_ARM.ORIENTED_CLOSED_SHELL'
              IN TYPEOF (SELF.shell));
END_ENTITY;

FUNCTION collect_shells(brep : Manifold_solid_brep)    
               : SET[1:?] OF Closed_shell;   
    LOCAL   
      return_set: SET[1:?] OF closed_shell := [brep.outer];   
    END_LOCAL;   

    IF SIZEOF(brep.voids)  >= 1    
          THEN   
       return_set := return_set + brep.voids;   
    END_IF;   
   RETURN(return_set);   
END_FUNCTION; 

END_SCHEMA;


(*
   ISO TC184/SC4/WG12 N5275 - ISO/TS 10303-1025 Alias identification - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4837
*)

SCHEMA Alias_identification_arm;

USE FROM Identification_assignment_arm;

  TYPE alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item;
  END_TYPE;

  ENTITY Alias_identification
    SUBTYPE OF (Identification_assignment);
      SELF\Identification_assignment.items : SET [1:?] OF alias_identification_item;
    DERIVE
      SELF\Identification_assignment.role : STRING := 'alias';
  END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N7726 - ISO/TS 10303-1109 Alternative solution - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5278
*)

SCHEMA Alternative_solution_arm;

USE FROM Person_organization_assignment_arm;
USE FROM Product_occurrence_arm; -- ISO/TS 10303-1063
USE FROM Functional_breakdown_arm;  -- ISO/TS 10303-1216
USE FROM Physical_breakdown_arm;

  TYPE complex_product_select = SELECT
    (Alternative_solution, Functional_element_definition, Physical_element_definition);
  END_TYPE;


  ENTITY Alternative_solution;
    id : STRING;
    version_id : OPTIONAL STRING;
    base_element : complex_product_select;
  END_ENTITY;

  ENTITY Solution_element;
    resolved_requirement: complex_product_select;
    element: Product_occurrence;
    description : OPTIONAL STRING;
  END_ENTITY;

  ENTITY Supplier_solution
    SUBTYPE OF (Alternative_solution);
      supplier : Organization;
      probability_rate : OPTIONAL REAL;
    DERIVE
      actual_rate : REAL := NVL(probability_rate, 1.0);
    WHERE
      WR1: { 0.0 <= actual_rate <= 1.0 };
  END_ENTITY;

  ENTITY Technical_solution
    SUBTYPE OF (Alternative_solution);
      description : STRING;
  END_ENTITY;

END_SCHEMA;

(*
   WG12 N6698 - ISO/CD-TS - 10303-1372 analysis - EXPRESS ARM*)


SCHEMA Analysis_arm;

USE FROM Analysis_product_relationships_arm; --ISO/TS 10303-1373

USE FROM Independent_property_arm;--ISO/TS 10303-1036

USE FROM Mesh_topology_arm;--ISO/TS 10303-1386

ENTITY Behavioural_decomposition_of_numerical_model;
  parts : SET [2 : ?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;

ENTITY Model_action_domain
SUBTYPE OF (Numerical_model);
  initial : Model_state_domain;
  final : Model_state_domain;
END_ENTITY;

ENTITY Model_product_domain
SUBTYPE OF (Numerical_model);
  temporal_parts : LIST [0 : ?] OF Model_action_domain;
END_ENTITY;

ENTITY Model_product_domain_with_mesh
SUBTYPE OF (Model_product_domain);
  model_mesh : Mesh;
END_ENTITY;

ENTITY Model_property_distribution;
  creating_software : STRING;
  domain : Numerical_model;
  range : Independent_property;
END_ENTITY;

ENTITY Model_state_domain
SUBTYPE OF (Numerical_model);
END_ENTITY;

ENTITY Numerical_model;
  id : STRING;
  name : STRING;
  description : STRING;
  creating_software : STRING;
  intended_analysis_code : SET [1 : ?] OF STRING;
  analysis_type : STRING;
END_ENTITY;

ENTITY Simulation_run;
  id : STRING;
  name : STRING;
  description : STRING;
  simulated : Numerical_model;
  results : SET [0 : ?] OF Model_property_distribution;
END_ENTITY;

ENTITY Spatial_decomposition_of_numerical_model;
  parts : SET [2 : ?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;

ENTITY Temporal_decomposition_of_model_action;
  parts : LIST [2 : ?] OF Model_action_domain;
  whole : Model_action_domain;
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_numerical_model FOR Numerical_model;
  ABSTRACT SUPERTYPE;
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N6108 - ISO/TS 10303-1474 Analysis assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5827
*) 


SCHEMA Analysis_assignment_arm;

USE FROM Analysis_identification_arm;    -- ISO/TS 10303-1476


TYPE analysed_item = EXTENSIBLE GENERIC_ENTITY SELECT
   (Product_version);
END_TYPE; 

ENTITY Analysis_assignment;
  analysis : Analysis_version;
  applied_to : analysed_item;
END_ENTITY;

ENTITY Analysis_design_version_relationship
  SUBTYPE OF (Analysis_assignment);
  SELF\Analysis_assignment.applied_to : Product_version;
END_ENTITY;

END_SCHEMA;  -- Analysis_assignment_arm

(*
ISO TC184/SC4/WG12 N7104 - ISO/TS 10303-1475 Analysis characterized - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N5830
*)

SCHEMA Analysis_characterized_arm;

USE FROM Analysis_identification_arm;

USE FROM Approval_arm;

USE FROM Classification_assignment_arm;

USE FROM Contract_arm;

USE FROM Date_time_assignment_arm;

USE FROM Person_organization_assignment_arm;

USE FROM Security_classification_arm;

TYPE analysis_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH
  (Analysis_discipline_definition,
   Analysis_version);
END_TYPE;

TYPE analysis_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
  (Analysis,
   Analysis_discipline_definition,
   Analysis_version);
END_TYPE;

TYPE analysis_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH
  (Analysis_version);
END_TYPE;

TYPE analysis_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_or_date_time_item WITH
  (Analysis_discipline_definition);
END_TYPE;

TYPE analysis_organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_or_person_in_organization_item WITH
  (Analysis,
   Analysis_discipline_definition,
   Analysis_version);
END_TYPE;

TYPE analysis_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH
  (Analysis_version);
END_TYPE;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N6852 - ISO/TS 10303-1476 Analysis identification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N5833
*) 


SCHEMA Analysis_identification_arm;

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE analysis_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (Analysis, 
    Analysis_version);
END_TYPE; 

ENTITY Analysis
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Analysis_discipline_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Analysis_version;
END_ENTITY;

ENTITY Analysis_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Analysis;
END_ENTITY;

ENTITY Analysis_version_relationship
  SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Analysis_version;
  SELF\Product_version_relationship.related_version : Analysis_version;
END_ENTITY;

ENTITY Analysis_version_sequence
  SUBTYPE OF (Analysis_version_relationship);
  SELF\Analysis_version_relationship.relating_version RENAMED predecessor : Analysis_version;
  SELF\Analysis_version_relationship.related_version RENAMED successor : Analysis_version;
END_ENTITY;

END_SCHEMA;  -- Analysis_identification_arm

(*
   WG12N6701 - ISO/CD-TS - 10303-1373 analysis_product_relationships - EXPRESS ARMM*)

SCHEMA Analysis_product_relationships_arm;

USE FROM Analysis_arm;

USE FROM Product_analysis_arm;

USE FROM Product_view_definition_arm;

ENTITY Idealisation_relationship;
  id : STRING;
  name : STRING;
  description : STRING;
  idealised : Product_view_definition;
  idealisation : Temporal_spatial_domain;
END_ENTITY;

ENTITY Analysis_view_relationship;
  id : STRING;
  name : STRING;
  description : STRING;
  viewed : Temporal_spatial_domain;
  view : Numerical_model;
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N5836 - ISO/TS 10303-1785 Analysis representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4550
*) 


SCHEMA Analysis_representation_arm;

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006


ENTITY Analysis_model
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Analysis_representation_context;
END_ENTITY;

ENTITY Analysis_representation_context
  SUBTYPE OF (Representation_context);
END_ENTITY;

END_SCHEMA;  -- Analysis_representation_arm


(*"Analysis_shape_arm"
 ISO TC184/SC4/WG12 N6704 - ISO/TS 10303-1374 - EXPRESS ARM
*)
SCHEMA Analysis_shape_arm;

USE FROM Analysis_identification_arm;

USE FROM Product_view_definition_arm;

USE FROM Shape_property_assignment_arm;

TYPE cross_section_shape_select = SELECT 
  (Idealized_analysis_shape,
   Nominal_design_shape);
END_TYPE;

ENTITY Idealized_analysis_shape
SUBTYPE OF (Shape_description_association);
  analysis_view : Analysis_discipline_definition;
  basis : Nominal_design_shape;
  defining_shape : shape_model;
END_ENTITY;

ENTITY Nominal_design_shape
SUBTYPE OF (Shape_description_association);
  defining_shape : shape_model;
  design_view : Product_view_definition;
END_ENTITY;

END_SCHEMA;

(*
   WG12N2614 - ISO/CD - 10303-409 ap209_multidisciplinary_analysis_and_design - EXPRESS ARM*)


SCHEMA Ap209_multidisciplinary_analysis_and_design_arm;

-- AP242 Shape, Composites, and PDM
USE FROM Ap242_managed_model_based_3d_engineering_arm;

-- Analysis Identification
USE FROM Analysis_assignment_arm;
USE FROM Analysis_characterized_arm;
USE FROM Analysis_identification_arm;
USE FROM Analysis_product_relationships_arm;

-- Analysis Model
USE FROM Analysis_arm;
USE FROM Analysis_representation_arm;
USE FROM Cfd_model_arm;
USE FROM Finite_elements_arm;
USE FROM Mesh_connectivity_arm;
USE FROM Mesh_topology_arm;
USE FROM Product_analysis_arm;

-- Analysis Shape
USE FROM Analysis_shape_arm;
USE FROM Finite_element_shape_arm;

-- Fields and Properties
USE FROM Cfd_specified_general_property_arm;
USE FROM Fea_definition_relationships_arm;
USE FROM Fea_material_aspects_arm;

-- Analysis Control and Results
USE FROM Cfd_equations_arm;
USE FROM Cfd_results_arm;
USE FROM Finite_element_analysis_arm;
USE FROM Mesh_function_arm;

USE FROM Collection_identification_and_version_arm;    --  ISO/TS 10303-1396
USE FROM Part_view_definition_arm;

END_SCHEMA;


(*
   ISO TC184/SC4/WG3 N7873 - ISO/TS 10303-442 AP242 managed model based 3d engineering - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N2818
*)

SCHEMA Ap242_managed_model_based_3d_engineering_arm;

-- USE FROM Assembly_technology_arm; -- now covered by Mating_structure_arm  
USE FROM Mating_structure_arm;
USE FROM Shape_data_quality_inspection_result_arm; -- ISO/TS 10303-1524
USE FROM Externally_conditioned_data_quality_inspection_result_arm; -- ISO/TS 10303-1822
USE FROM Geometric_constraints_arm; -- ISO/TS 10303-1789
USE FROM Machining_features_arm; -- AIC 522 wrapper + ...
USE FROM Form_feature_in_panel_arm;
USE FROM Assembly_constraints_arm;
USE FROM Kinematic_analysis_control_and_result_arm;
USE FROM Process_plan_arm;
-- geometry model for point clouds
USE FROM Constructive_solid_geometry_2d_arm; -- ISO/TS 10303-1731
USE FROM Product_as_individual_assembly_and_test_arm;

USE FROM Characterized_representation_arm;
USE FROM Chemical_substance_arm; -- ISO/TS 10303-1655 
USE FROM Composite_material_aspects_arm; -- ISO/TS 10303-1768
USE FROM Compound_shape_representation_arm; -- ISO/TS 10303-1327
USE FROM Constructive_solid_geometry_3d_arm; -- ISO/TS 10303-1068
USE FROM Curve_swept_solid_arm; -- ISO/TS 10303-1659
USE FROM Default_tolerance_arm; -- ISO/TS 10303-1052
USE FROM Design_product_data_management_arm; -- ISO/TS 10303-1628
USE FROM Dimension_and_tolerance_callouts_arm; -- ISO/TS 10303-1362
USE FROM Dimension_tolerance_arm; -- ISO/TS 10303-1050
USE FROM Drawing_definition_arm;  -- ISO/TS 10303-1309
USE FROM Elementary_boundary_representation_arm; -- ISO/TS 10303-1329
USE FROM External_currency_arm; -- ISO/TS 10303-1777
USE FROM External_representation_item_arm; -- ISO/TS 10303-1779
USE FROM Geometric_tolerance_arm; -- ISO/TS 10303-1051
USE FROM Geometric_validation_property_representation_arm; -- ISO/TS 10303-1039
USE FROM Inertia_characteristics_arm; -- ISO/TS 10303-1350
USE FROM Manifold_subsurface_arm; -- ISO/TS 10303-1702
USE FROM Mechanical_design_presentation_representation_with_draughting_arm; -- ISO/TS 10303-1315
USE FROM Modified_swept_solid_arm; -- ISO/TS 10303-1322
USE FROM Part_and_zone_laminate_tables_arm;  -- ISO/TS 10303-1770
USE FROM Picture_representation_arm;  -- ISO/TS 10303-1308
USE FROM Planned_characteristic_arm; -- ISO/TS 10303-1733
USE FROM Ply_orientation_specification_arm;  -- ISO/TS 10303-1772
USE FROM Shape_feature_arm;    -- ISO/TS 10303-1764
USE FROM Solid_with_local_modification_arm; -- ISO/TS 10303-1319
USE FROM Surface_conditions_arm; -- ISO/TS 10303-1110 
USE FROM Text_representation_arm;	-- ISO/TS 10303-1750
USE FROM Thickened_face_solid_arm; -- ISO/TS 10303-1320
USE FROM Wireframe_2d_arm; -- ISO/TS 10303-1347
USE FROM Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm;
USE FROM Product_and_manufacturing_annotation_presentation_arm;
USE FROM Change_management_arm; -- ISO/TS 10303-1661
USE FROM Sketch_arm; -- ISO/TS 10303-1792
USE FROM Tessellated_geometry_arm;  -- ISO/TS 10303-1819
USE FROM Edge_shape_feature_arm; -- ISO/TS 10303-1673
USE FROM Point_direction_model_arm;  -- -- ISO/TS 10303-1820
USE FROM Numerical_interface_arm; -- ISO/TS 10303-1344

TYPE property_variable_rep_select_242 = SELECT BASED_ON property_variable_rep_select WITH
 (Dimensional_size,
  Property_value_representation);
END_TYPE;
    
TYPE general_organizational_data_select = EXTENSIBLE GENERIC_ENTITY SELECT (
  -- final_solution -- -- Complex_product subtype,
  -- Simple_property_association, -- already covered by Property_value_association
  -- would be Product_definition_kinematics, but already covered by supertype, -- Kinematic_simulation_information,
  Activity,
  Activity_method_assignment,
  Alternate_part_relationship, -- Alternate_item_relationship,
  Applied_activity_assignment, -- Activity_element,
  Applied_independent_activity_property, -- Property_value_association,
  Applied_independent_property, -- Property_value_association,
  Approval_status,
  Assembly_relationship_substitution, -- Assembly_substitute_relationship,
  Assigned_document_property, -- Assigned_document_property
  Breakdown_element_definition, -- Complex_product subtype,
  Breakdown_element_usage, Breakdown_element_realization, -- Product_structure_relationship,
  Breakdown_node_relationship, Complex_node_relationship, -- Complex_product_relationship,
  Certification,
  Class, -- General_classification,
  Class_breakdown_association, -- Class_structure_relationship,
  Class_category_association,
  Class_condition_association,
  Class_inclusion_association,
  Class_specification_association,
  Classification_association,
  Classification_system,
  Configuration,
  Contract,
  Design_constraint_definition, -- Design_constraint,
  Document,
  Document_definition, -- Document_representation,
  Document_version,
  Drawing,
  Drawing_sheet,
  File, -- Document_file,
  Geometric_model,
  Independent_property, -- Property,
  Item_usage_effectivity, -- Manufacturing_configuration,
  Material_identification, -- Material,
  Organization,
  Organization_relationship,
  Part, -- Item,
  Part_definition_relationship, -- Item_definition_relationship,
  Product_occurrence, -- Item_instance,
  Product_occurrence_definition_relationship, -- Item_definition_instance_relationship,
  Part_occurrence_relationship, -- Item_instance_relationship,
  Part_version, -- Item_version,
  Part_view_definition, -- Design_discipline_item_definition,
  Person_in_organization,
  Person_in_organization_relationship,
  Process_operation_definition,
  Process_operation_occurrence,
  Process_operation_resource_assignment,
  Process_plan,
  Product_as_individual_assembly, -- Physical_assembly_relationship,
  Product_as_individual_test_result, -- Physical_instance_test_result,
  Product_as_individual_view, -- Physical_instance,
  Product_class,
  Product_configuration, -- Product_identification,
  Product_version_relationship, -- Item_version_relationship,
  Project,
  Security_classification,
--  Security_classification, -- Security_level,
  Specification,
  Specification_category,
  Specification_expression,
  Specification_inclusion,
  Styled_model,
  Supplier_solution, -- Complex_product subtype,
  Technical_solution, -- Complex_product subtype,
  View_area,
  Work_order,
  Work_request
  );
END_TYPE;

TYPE configured_item_select_242 = SELECT BASED_ON configured_item_select WITH (
  Process_plan,
  Process_operation_occurrence,
  Breakdown_element_definition, 
  Product_occurrence);
END_TYPE;

TYPE property_assignment_select_242 = SELECT BASED_ON property_assignment_select WITH ( 
  Product_class,
  Product_specification);
END_TYPE; 

TYPE organization_or_person_in_organization_item_242 = SELECT BASED_ON organization_or_person_in_organization_item WITH (
  general_organizational_data_select,  
  Alternate_part_relationship);
END_TYPE; 

TYPE date_or_date_time_item_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_or_date_time_item WITH (
  general_organizational_data_select);
END_TYPE;

TYPE time_interval_item_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON time_interval_item WITH (
  Time_interval_effectivity,
  general_organizational_data_select);
END_TYPE;

TYPE resource_definition_select_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON resource_definition_select WITH (
  Product_as_individual_view,
  Breakdown_element_definition );
END_TYPE;

TYPE process_operation_input_or_output_select_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON process_operation_input_or_output_select WITH (
  Mated_part_relationship);
END_TYPE;

TYPE item_usage_relationship_item_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON item_usage_relationship_item WITH (
  Product_occurrence);
END_TYPE; 

TYPE representation_proxy_select_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON representation_proxy_select WITH (
    Document_version);
END_TYPE;

TYPE change_management_object_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON change_management_object WITH (
 Activity,
 Activity_relationship,
 Alternate_product_relationship,
 Assembly_bond_definition,
 Assembly_component_placement_link,
 Certification,
 Composite_curve_segment,
 Identification_assignment,
 Product_occurrence_definition_relationship,
 Representation,
 Representation_context,
 Representation_item
  );
END_TYPE;

TYPE change_relationship_select_242 = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON change_relationship_select WITH (
    Process_plan_relationship,
    shape_element_relationship,
    replaced_usage_relationship,
    process_operation_occurrence_relationship);
END_TYPE;

 
  TYPE alias_identification_item_242 = SELECT BASED_ON alias_identification_item WITH 
    (Approval_status, 
    Document, 
    Document_definition, 
    Document_version, 
    Geometric_model, 
    Independent_property, 
    Organization, 
    Part, 
    Part_version, 
    Part_view_definition, 
    Security_classification);
  END_TYPE; 

  TYPE appearance_context_242 = SELECT BASED_ON appearance_context WITH 
    (Visual_appearance);
  END_TYPE; 

  TYPE approval_item_242 = SELECT BASED_ON approval_item WITH 
    (Activity, 
    Alternate_part_relationship, 
    Assembly_relationship_substitution, 
    Document, 
    Document_definition, 
    Document_version, 
    File, 
    Part_version, 
    Part_view_definition);
  END_TYPE; 

  TYPE contract_item_242 = SELECT BASED_ON contract_item WITH 
    (Activity, 
    Part_version);
  END_TYPE; 

  TYPE documented_element_select_242 = SELECT BASED_ON documented_element_select WITH 
    (Part, 
    Part_version, 
    Part_view_definition, 
    View_definition_relationship);
  END_TYPE; 

  TYPE effectivity_item_242 = SELECT BASED_ON effectivity_item WITH 
    (Assembly_relationship_substitution, 
    Document, 
    Document_definition, 
    Document_definition_relationship, 
    Document_version, 
    Part, 
    Part_version, 
    Part_view_definition);
  END_TYPE; 

  TYPE groupable_item_242 = SELECT BASED_ON groupable_item WITH 
    (Detailed_geometric_model_element, 
     Geometric_model_relationship_with_transformation, 
     Geometric_placement_operation, 
     Detailed_topological_model_element, 
     Shape_element, 
     Styled_element);
  END_TYPE; 

  TYPE identification_item_242 = SELECT BASED_ON identification_item WITH 
    (Approval_status, 
    Document, 
    Document_definition, 
    Document_version, 
    Geometric_model, 
    Independent_property, 
    Organization, 
    Part, 
    Part_version, 
    Part_view_definition, 
    Security_classification);
  END_TYPE; 

  TYPE ply_laminate_shape_242 = SELECT BASED_ON ply_laminate_shape WITH 
    (Advanced_brep_shape_representation,
     Csg_model,
     Curve_swept_solid,
     Elementary_brep_shape_representation,
     Faceted_brep_shape_representation);
  END_TYPE;     

  TYPE presentation_association_select_242 = SELECT BASED_ON presentation_association_select WITH 
    (Activity, 
    Activity_method, 
    Activity_relationship, 
    Product_concept, 
    Specification, 
    Specification_category, 
    Product_view_definition,
    Product_version, 
    View_definition_relationship 
    );
  END_TYPE; 

  TYPE presented_model_select_242 = SELECT BASED_ON presented_model_select WITH
    (External_geometric_model);
  END_TYPE;

  TYPE security_classification_item_242 = SELECT BASED_ON security_classification_item WITH 
    (Document_definition, 
    Document_version, 
    File, 
    Part_version, 
    Part_view_definition, 
    View_definition_usage);
  END_TYPE; 

  TYPE string_select_242 = SELECT BASED_ON string_select WITH 
    (Alias_identification, 
    Alternate_part_relationship, 
    Applied_independent_property, 
    Assembly_relationship_substitution, 
    Certification_assignment, 
    Detailed_geometric_model_element, 
    Effectivity, 
    Effectivity_relationship, 
    Event, 
    External_geometric_model, 
    Independent_property, 
    Independent_property_relationship, 
    Item_shape, 
    Make_from_relationship, 
    Product_version_relationship, 
    Representation, 
    Security_classification_assignment, 
    Shape_element, 
    Shape_element_relationship, 
    String_representation_item, 
    Uncertainty_with_unit, 
    View_definition_context);
  END_TYPE; 

  TYPE text_or_composite_text_242 = SELECT BASED_ON text_or_composite_text WITH 
    (Annotation_text_character);
  END_TYPE; 

  TYPE text_string_representation_item_select_242 = SELECT BASED_ON text_string_representation_item_select WITH 
    (Annotation_text_character);
  END_TYPE; 

  RULE addresses_are_assigned FOR 
      (Address);
    WHERE
      WR1: SIZEOF(QUERY(a <* Address | SIZEOF(USEDIN(a, 'PERSON_ORGANIZATION_ARM' + '.ADDRESS_ASSIGNMENT.ASSIGNED_ADDRESS')) = 0)) = 0;
  END_RULE; 

  RULE person_requires_person_and_organization FOR 
      (Person);
    WHERE
      WR1: SIZEOF(QUERY(p <* Person | SIZEOF(USEDIN(p, 'PERSON_ORGANIZATION_ARM' + '.PERSON_IN_ORGANIZATION.CONCERNED_PERSON')) = 0)) = 0;
  END_RULE; 

  RULE shape_requires_product_view FOR 
      (Item_shape);
    WHERE
      WR1: SIZEOF(QUERY(is <* Item_shape | NOT ('PRODUCT_VIEW_DEFINITION_ARM' + '.PRODUCT_VIEW_DEFINITION' IN TYPEOF(is.described_element)))) = 0;
  END_RULE; 
  
  RULE specific_product_occurrence_definition_relationship FOR 
      (Product_occurrence_definition_relationship);
    WHERE
      WR1: SIZEOF(QUERY(occ_rel <* Product_occurrence_definition_relationship | NOT ('PART_VIEW_DEFINITION_ARM' + '.PART_VIEW_DEFINITION' IN TYPEOF(occ_rel.relating_view)))) = 0;
      WR2: SIZEOF(QUERY(occ_rel <* Product_occurrence_definition_relationship | NOT ('PRODUCT_OCCURRENCE_ARM' + '.PRODUCT_OCCURRENCE' IN TYPEOF(occ_rel.related_view)))) = 0;
  END_RULE; 
  
  SUBTYPE_CONSTRAINT exclusive_products_242 FOR Product;
    ABSTRACT SUPERTYPE;
    ONEOF (
      Breakdown,
      Breakdown_element,
      Document,
      Information_product,
      Part,
      Product_as_individual,
      Requirement,
      Substance);      
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT exclusive_product_versions_242 FOR Product_version;
    ABSTRACT SUPERTYPE;
    ONEOF (
      Breakdown_element_version,
      Breakdown_version,
      Document_version,
      Information_version,
      Part_version,
      Product_as_individual_version,
      Requirement_version,
      Substance_version);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N8250 - ISO/TS 10303-1001 Appearance assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6860
*)


SCHEMA Appearance_assignment_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765

  TYPE appearance_context = EXTENSIBLE GENERIC_ENTITY SELECT
    (Representation);
  END_TYPE; 

  TYPE appearance_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE; 

  TYPE context_dependent_appearance_assignment_set = SET [2:?] OF Context_dependent_appearance_assignment; 
  END_TYPE;

  TYPE overriding_style_context = EXTENSIBLE GENERIC_ENTITY SELECT
    (Detailed_geometric_model_element, 
     Styled_model);
  END_TYPE;

  TYPE presented_model_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Styled_model); 
  END_TYPE;  

  TYPE styled_element_appearance = SELECT (
    Appearance_assignment, 
    context_dependent_appearance_assignment_set);
  END_TYPE;

  TYPE geometric_mapping_target = SELECT (
    Axis_placement, 
    cartesian_transformation);
  END_TYPE;
  
  ENTITY Appearance_assignment;
    appearance_components : SET[1:?] OF appearance_select;
  END_ENTITY;

  ENTITY Context_dependent_appearance_assignment
    SUBTYPE OF (Appearance_assignment);
      context_definition : appearance_context;
  END_ENTITY;
  
  ENTITY Context_dependent_over_riding_styled_element
    SUBTYPE OF (Over_riding_styled_element);
      context_definition : LIST [1:?] OF overriding_style_context;
  END_ENTITY;

  ENTITY Over_riding_styled_element
    SUBTYPE OF (Styled_element);
      over_ridden_element : Styled_element;
  END_ENTITY;

  ENTITY Planar_box
    SUBTYPE OF (Detailed_geometric_model_element);
      size_in_x : length_measure;
      size_in_y : length_measure;
      placement : Axis_placement; 
  END_ENTITY;

  ENTITY Styled_element
    SUBTYPE OF (Representation_item);
      appearance : styled_element_appearance;
      element : Detailed_geometric_model_element;
      invisible : BOOLEAN;
  END_ENTITY;

  ENTITY Styled_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Representation);
      version_id : OPTIONAL STRING;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
    DERIVE
      styled_geometry : SET[0:?] OF Geometric_model := 
      bag_to_set(QUERY (r <* (USEDIN(SELF\Representation.context_of_items,
	 	'FOUNDATION_REPRESENTATION_ARM.' + 
	 	'REPRESENTATION.' + 'CONTEXT_OF_ITEMS')) | 
	 	'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN TYPEOF(r)));
  END_ENTITY;

  ENTITY Styled_model_replication 
    SUBTYPE OF (Representation_item); 
      replicated_model : Styled_model; 
      source : Axis_placement; 
      target : geometric_mapping_target; 
  END_ENTITY;

  SUBTYPE_CONSTRAINT aa_representation_item_subtypes FOR Representation_item;
    ONEOF (Styled_element,
           Styled_model_replication);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  
(*
 ISO TC184/SC4/WG12 N6022 - ISO/TS 10303-1012 Approval - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5284
*)


SCHEMA Approval_arm;

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011


TYPE approval_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Approval;
  status : Approval_status;
  purpose : STRING;
  planned_date : OPTIONAL date_or_date_time_select;
  actual_date : OPTIONAL date_or_date_time_select;
END_ENTITY;

ENTITY Approval_assignment;
  assigned_approval : Approval;
  items : SET[1:?] OF approval_item;
  role : OPTIONAL STRING;
END_ENTITY;

ENTITY Approval_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_approval : Approval;
  related_approval : Approval;
END_ENTITY;

ENTITY Approval_status;
  status_name : STRING;
END_ENTITY;

ENTITY Approving_person_organization;
  person_organization : organization_or_person_in_organization_select;
  approval_date : OPTIONAL date_or_date_time_select;
  authorized_approval : Approval;
  role : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- Approval_arm
(*
   ISO TC184/SC4/WG12 N6279 - ISO/TS 10303-1631 Area 2d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3840
*)

SCHEMA Area_2d_arm;

	USE FROM Extended_basic_geometry_arm;	-- ISO/TS 10303-1667
	USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753

  ENTITY Circular_area
    SUBTYPE OF (Primitive_2d);
      centre : Cartesian_point;
      radius : Length_data_element;
  END_ENTITY;

  ENTITY Elliptic_area
    SUBTYPE OF (Primitive_2d);
      position    : Axis_placement_2d;
      semi_axis_1 : Length_data_element;
      semi_axis_2 : Length_data_element;
  END_ENTITY;

  ENTITY Polygonal_area
    SUBTYPE OF (Primitive_2d);
      bounds : LIST[3:?] OF UNIQUE Cartesian_point;
  END_ENTITY;

  ENTITY Primitive_2d
    ABSTRACT SUPERTYPE OF (ONEOF (Circular_area,
 Elliptic_area,
 Rectangular_area,
 Polygonal_area))
    SUBTYPE OF (Detailed_geometric_model_element);
--       WHERE
--         WR1: NOT EXISTS (SELF\Representation_item.name);
  END_ENTITY;

  ENTITY Rectangular_area
    SUBTYPE OF (Primitive_2d);
      position : Axis_placement_2d;
      x        : Length_data_element;
      y        : Length_data_element;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7876 - ISO/TS - 10303-1802 Assembly component - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7313
*)

SCHEMA Assembly_component_arm;

USE FROM Component_grouping_arm;
USE FROM Assembly_shape_arm;

ENTITY Assembly_component
  SUBTYPE OF (Definition_based_product_occurrence, Part_occurrence_shape);
DERIVE
  SELF\Item_shape.described_element : Assembly_component := SELF;
  assemblies : SET OF Product_view_definition := ac_get_assemblies(SELF);
  groups : SET OF Assembly_group_component := ac_get_groups(SELF);
  versions : SET OF Product_version := ac_get_versions(assemblies);
  product : SET OF Product := ac_get_products(versions);
INVERSE
  SELF\Product_occurrence.occurrence_contexts : SET[1:?] OF Assembly_component_relationship FOR related_view;
WHERE
  WR1 : NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.FOOTPRINT_OCCURRENCE' IN TYPEOF(SELF)) XOR ('FOOTPRINT_DEFINITION_ARM.FOOTPRINT_DEFINITION' IN TYPEOF(derived_from))) OR 
        NOT(('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.PADSTACK_OCCURRENCE' IN TYPEOF(SELF)) XOR ('LAYERED_INTERCONNECT_COMPLEX_TEMPLATE_ARM.PADSTACK_DEFINITION' IN TYPEOF(SELF\Definition_based_product_occurrence.derived_from)));
  WR2 : SELF\Product_view_definition.defined_version :=: SELF\Definition_based_product_occurrence.derived_from.defined_version;
  WR3 : SIZEOF(assemblies) = SIZEOF(versions);
  WR4 : SIZEOF(product) = 1;
  WR5 : (('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP' IN TYPEOF(SELF\Assembly_component.occurrence_contexts[1])) OR
         (SIZEOF(groups) = 0) OR 
         (ac_get_group_assemblies(groups) = assemblies));
END_ENTITY;

ENTITY Component_make_from_relationship
  SUBTYPE OF (View_definition_relationship);  
  SELF\View_definition_relationship.relating_view RENAMED reusable_component	: Assembly_component;
  SELF\View_definition_relationship.related_view RENAMED resultant_component	: Assembly_component;
WHERE
  WR1 : resultant_component <> reusable_component;
END_ENTITY;

ENTITY Physical_component
  SUBTYPE OF (Assembly_component);
END_ENTITY;

ENTITY Thermal_component
  SUBTYPE OF (Assembly_component);
END_ENTITY;

  FUNCTION ac_get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

  FUNCTION ac_get_groups(input : Assembly_component) : SET OF Assembly_group_component;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      agc : SET OF Assembly_group_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF ('COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        agc := agc + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      END_IF;
    END_REPEAT;
    RETURN (agc);
  END_FUNCTION;

  FUNCTION ac_get_group_assemblies(input : SET OF Assembly_group_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := [];
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      acr := input[i]\Assembly_component.occurrence_contexts;
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_GROUP_COMPONENT' IN TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;
    RETURN (pvd);
  END_FUNCTION;

  FUNCTION ac_get_versions(input : SET OF Product_view_definition) : SET OF Product_version;
    LOCAL
      pv : SET OF Product_version := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      pv := pv + input[i]\Product_view_definition.defined_version; 
    END_REPEAT;
    RETURN (pv);
  END_FUNCTION;

  FUNCTION ac_get_products(input : SET OF Product_version) : SET OF Product;
    LOCAL
      p : SET OF Product := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input) BY 1;
      p := p + input[i]\Product_version.of_product; 
    END_REPEAT;
    RETURN (p);
  END_FUNCTION;
  
  FUNCTION get_assemblies(input : Assembly_component) : SET OF Product_view_definition;
    LOCAL
      acr : SET OF Assembly_component_relationship := input\Assembly_component.occurrence_contexts;
      pvd : SET OF Product_view_definition := [];
    END_LOCAL;

    REPEAT i := 1 TO HIINDEX(acr) BY 1;
      IF NOT('LAYERED_INTERCONNECT_MODULE_DESIGN_ARM.' +
        'STRUCTURED_LAYOUT_COMPONENT' IN
        TYPEOF(acr[i]\Product_occurrence_definition_relationship.relating_view))
      THEN
        pvd := pvd + acr[i]\Product_occurrence_definition_relationship.relating_view; 
      ELSE
        pvd := pvd + get_assemblies(acr[i]\Product_occurrence_definition_relationship.relating_view);
      END_IF;
    END_REPEAT;

    RETURN (pvd);
  END_FUNCTION;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7879 - ISO/TS 10303-1794 Assembly constraint- EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7316
*)


SCHEMA Assembly_constraints_arm;

USE FROM Assembly_feature_relationship_arm; -- ISO/CD-TS 10303-1af1
USE FROM Geometric_constraints_arm; -- ISO/CD-TS 10303-1pc3
USE FROM Explicit_constraints_arm; -- ISO/CD-TS 10303-1pc2
USE FROM Foundation_representation_arm;  -- ISO/TS 10303-1006
USE FROM Contextual_shape_positioning_arm; -- ISO/TS 10303-1027

ENTITY Binary_assembly_constraint
  ABSTRACT SUPERTYPE OF (ONEOF
           (Parallel_assembly_constraint,
            Dimensioned_surface_distance_assembly_constraint,
            Dimensioned_angle_assembly_constraint,
            Perpendicular_assembly_constraint,
            Incidence_assembly_constraint,
            Coaxial_assembly_constraint,
            Tangent_assembly_constraint))
  SUBTYPE OF (Explicit_constraint,
            Geometric_model_relationship_with_transformation);
SELF\Representation_relationship.rep_1:  
Representative_geometric_model;
SELF\Representation_relationship.rep_2: 
Representative_geometric_model;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.constrained_elements)=1) AND
     (SIZEOF(SELF\Explicit_constraint.reference_elements)=1);
END_ENTITY;-- Binary_assembly_constraint

ENTITY Coaxial_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Coaxial_constraint);
END_ENTITY;-- Coaxial_assembly_constraint


ENTITY Dimensioned_angle_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Dimensioned_angle_constraint);
END_ENTITY;-- Dimensioned_angle_assembly_constraint



ENTITY  Dimensioned_parallel_assembly_constraint
  SUBTYPE OF (Parallel_assembly_constraint,
              Dimensioned_parallel_constraint);
END_ENTITY;-- Dimensioned_parallel_assembly_constraint

ENTITY Dimensioned_surface_distance_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Dimensioned_surface_distance_constraint);
END_ENTITY;-- Dimensioned_surface_distance_assembly_constraint


ENTITY Fixed_constituent_assembly_constraint
SUBTYPE OF (Fixed_element_geometric_constraint);
  fixed_constituent : Representative_geometric_model;
WHERE
  WR1: SIZEOF(SELF\explicit_constraint.constrained_elements) = 1;
END_ENTITY;-- fixed_constituent_assembly_constraint


ENTITY Incidence_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Incidence_geometric_constraint);
END_ENTITY;-- Incidence_assembly_constraint



ENTITY Parallel_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Parallel_constraint);
END_ENTITY;-- Parallel_assembly_constraint


ENTITY Perpendicular_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Perpendicular_geometric_constraint);
END_ENTITY;-- Perpendicular_assembly_constraint

ENTITY Tangent_assembly_constraint
  SUBTYPE OF (Binary_assembly_constraint,
              Tangent_constraint);
END_ENTITY;-- Tangent_assembly_constraint


(* omit function
FUNCTION assembly_leaf
  (item: product_definition) : BOOLEAN;
LOCAL
  local_relation: SET OF assembly_component_usage := [];
  local_relation2: BAG OF assembly_component_usage := [];
END_LOCAL;
-- extraction of related assembly_component_relationships --
local_relation2 := local_relation2 + (USEDIN (item, 
    'PRODUCT_STRUCTURE_SCHEMA.ASSEMBLY_COMPONENT_USAGE.'+ 
    'RELATING_PRODUCT_DEFINITION'));
local_relation := bag_to_set (local_relation2);
IF (SIZEOF (local_relation) = 0) THEN RETURN (TRUE);
  ELSE RETURN (FALSE);
END_IF;
END_FUNCTION;
*)

END_SCHEMA; -- Assembly_constraint_mim
(*
  ISO TC184/SC4/WG12 N7882 - ISO/CD-TS 10303-1795 Assembly feature relationship - EXPRESS ARM
  Supersedes ISO TC184/SC4/WG12 N7319
*)

SCHEMA Assembly_feature_relationship_arm;

USE FROM Contextual_shape_positioning_arm;  -- ISO 10303-1pc3

USE FROM Foundation_representation_arm;  -- ISO 10303-1006

USE FROM Kinematic_motion_representation_arm; -- ISO 10303-1xxx
 
USE FROM Kinematic_structure_arm;  -- ISO 10303-1xxy

USE FROM Shape_property_assignment_arm;  -- ISO 10303-1xxy


ENTITY Constrained_kinematic_motion_representation
  SUBTYPE OF (Geometric_relationship_with_placement_transformation);
  SELF\Representation_relationship.rep_1 : Representative_geometric_model;
  SELF\Representation_relationship.rep_2 : Representative_geometric_model;
END_ENTITY;

ENTITY Free_kinematic_motion_representation
  SUBTYPE OF (Geometric_model_relationship_with_transformation);
  SELF\Representation_relationship.rep_1 : Representative_geometric_model;
  SELF\Representation_relationship.rep_2 : Representative_geometric_model;
--  motion : Kinematic_path; just to get it compilable
END_ENTITY;

ENTITY Representative_geometric_model
  SUBTYPE OF (Geometric_model);
END_ENTITY;

ENTITY Shape_element_relationship_representation_association;
  represented_shape_element_relationship : Shape_element_relationship;
  representing_representation_relationship : Representation_relationship;
WHERE
  WR1: ('ASSEMBLY_FEATURE_RELATIONSHIP_ARM.REPRESENTATIVE_GEOMETRIC_MODEL' IN TYPEOF(representing_representation_relationship\representation_relationship.rep_1)) AND
       ('ASSEMBLY_FEATURE_RELATIONSHIP_ARM.REPRESENTATIVE_GEOMETRIC_MODEL' IN TYPEOF(representing_representation_relationship\ representation_relationship.rep_2));
END_ENTITY;

END_SCHEMA;  -- Assembly_feature_relationship_arm



(*
   ISO TC184/SC4/WG12 N7897 - ISO/CD-TS - 10303-1808 Assembly shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7334
*)

SCHEMA Assembly_shape_arm;

USE FROM Item_definition_structure_arm;  --        ISO/TS 10303-1345
USE FROM Part_shape_arm; 

TYPE characterized_product_definition = SELECT (
    Product_view_definition, 
    View_definition_relationship,
    Multi_level_reference_designator);
END_TYPE;

TYPE internal_or_reflected_shape_element = SELECT (
    Shape_element,
    identifier);
END_TYPE;

TYPE multi_or_next_assembly_usage_occurrence = SELECT (
    Multi_level_reference_designator,
    Next_assembly_usage);
END_TYPE;

ENTITY Assembly_shape
  SUBTYPE OF (Part_shape);
  SELF\Item_shape.described_element : Assembly_definition;
END_ENTITY;  

ENTITY Component_path_shape_element
    SUBTYPE OF (Part_shape_element);
    location : multi_or_next_assembly_usage_occurrence;
    component_shape_element : internal_or_reflected_shape_element;
  UNIQUE
    UR1 : location, component_shape_element;
  WHERE
    WR1: NOT('ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE' IN TYPEOF(location)) OR
      EXISTS(location\Assembly_component_relationship.location_indicator); 
END_ENTITY;

ENTITY Part_occurrence_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Definition_based_product_occurrence;
END_ENTITY;  

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N7729 - ISO/TS 10303-1026 Assembly structure - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6111
*) 


SCHEMA Assembly_structure_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019
USE FROM Product_view_definition_reference_arm; -- ISO/TS 10303-1738

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054

TYPE product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;

ENTITY Assembly_component_relationship
  ABSTRACT SUPERTYPE OF (ONEOF (Multi_level_reference_designator,
  								Next_assembly_usage,
                                Promissory_usage,
                                Component_upper_level_identification))
  SUBTYPE OF (Product_occurrence_definition_relationship);
  location_indicator : OPTIONAL STRING;
  quantity : OPTIONAL Value_with_unit;
WHERE
  WR1: NOT(EXISTS(quantity)) OR ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;

ENTITY Component_upper_level_identification
  SUBTYPE OF (Assembly_component_relationship);
  upper_assembly_relationship : Assembly_component_relationship;
  sub_assembly_relationship : Next_assembly_usage;
UNIQUE
  UR1: upper_assembly_relationship, sub_assembly_relationship;
WHERE
  WR1: SELF :<>: upper_assembly_relationship;
  WR2: SELF\Product_occurrence_definition_relationship.relating_view :=: upper_assembly_relationship\Product_occurrence_definition_relationship.relating_view;
  WR3: SELF\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.related_view;
  WR4: (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view) OR (SIZEOF (QUERY (pdr <* USEDIN (upper_assembly_relationship\Product_occurrence_definition_relationship.related_view , 'ASSEMBLY_STRUCTURE_ARM.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW') | pdr.relating_view :=: sub_assembly_relationship\Product_occurrence_definition_relationship.relating_view)) = 1);
  WR5: SIZEOF (['ASSEMBLY_STRUCTURE_ARM.NEXT_ASSEMBLY_USAGE', 'ASSEMBLY_STRUCTURE_ARM.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;

ENTITY Multi_level_reference_designator
  SUBTYPE OF (Assembly_component_relationship);
  location : LIST[1:?] OF UNIQUE Next_assembly_usage;
DERIVE
  SELF\Product_occurrence_definition_relationship.relating_view RENAMED root_node 
     : Product_view_definition := location[1]\Product_occurrence_definition_relationship.relating_view;
  SELF\Product_occurrence_definition_relationship.related_view RENAMED leaf_node 
    : product_view_definition_or_reference := location[HIINDEX(location)]\Product_occurrence_definition_relationship.related_view;
UNIQUE
  UR1 : location;
END_ENTITY;

ENTITY Next_assembly_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;

ENTITY Product_occurrence_definition_relationship
  ABSTRACT SUPERTYPE;
  relating_view : product_view_definition_or_reference;
  related_view : product_view_definition_or_reference;
END_ENTITY;

ENTITY Promissory_usage
  SUBTYPE OF (Assembly_component_relationship);
END_ENTITY;

SUBTYPE_CONSTRAINT assembly_component_relationship_constraint FOR Assembly_component_relationship;
  ABSTRACT SUPERTYPE;
  TOTAL_OVER (Component_upper_level_identification, 
  			  Multi_level_reference_designator,
              Next_assembly_usage, 
              Promissory_usage);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  -- Assembly_structure_arm
(*
   ISO TC184/SC4/WG12 N7942 - ISO/TS 10303-1649 Assembly technology - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7379
*)


SCHEMA Assembly_technology_arm;
--	USE FROM Assembly_module_design_arm;	-- ISO/TS 10303-1636
	USE FROM Component_feature_arm;
	USE FROM Requirement_assignment_arm;
	USE FROM Physical_component_feature_arm;
	
	USE FROM Component_grouping_arm;	-- ISO/TS 10303-1656
	USE FROM Product_view_definition_reference_arm;	-- ISO/TS 10303-1738

 	TYPE at_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Assembly_bond_definition);
	END_TYPE;

	TYPE at_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
		(Assembly_bond_definition);
	END_TYPE;

  TYPE at_property_assignment_select = SELECT BASED_ON property_assignment_select WITH 
    (Assembly_bond_definition);
  END_TYPE; 

	TYPE at_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
	    (Assembly_joint);
	END_TYPE; 

  TYPE bond_feature = EXTENSIBLE GENERIC_ENTITY SELECT (
    Physical_component_feature); -- added anew
    -- Connection_zone_in_layout_template,
    -- Connection_zone_in_usage_view,
    -- Default_attachment_size_based_land_physical_template,
    -- Feature_definition_with_connection_area,
    -- Part_feature);
  END_TYPE;     

	
  TYPE degree_of_freedom = ENUMERATION OF
    (x,
     y,
     z,
     u,
     v,
     w);
  END_TYPE;
(*
	SUBTYPE_CONSTRAINT process_specification_subtypes FOR Process_specification;   
		(ONEOF (Assembly_technology_specification,
		Fabrication_technology_specification));
	END_SUBTYPE_CONSTRAINT; 
*)
  ENTITY Assembled_with_bonding
    SUBTYPE OF (Assembly_joint);
      default_bond_definition : Assembly_bond_definition;
    WHERE
      WR1 : SELF\Assembly_joint.assembly_feature_1.definition :=: default_bond_definition.bonded_feature_1;
      WR2 : SELF\Assembly_joint.assembly_feature_2.definition :=: default_bond_definition.bonded_feature_2;
  END_ENTITY;

  ENTITY Assembled_with_fasteners
    SUBTYPE OF (Assembly_joint);
--      SELF\Assembly_joint.associated_assembly : Assembly_group_component;
  END_ENTITY;

  ENTITY Assembly_bond_definition;
      name                                    : STRING;   
--      analytical_assembly_bond_representation : OPTIONAL SET[1:?] OF Analytical_model_application;
      associated_definition                   : Product_view_definition_reference_with_local_representation;
      bonded_feature_1                        : bond_feature;
      bonded_feature_2                        : bond_feature;
    INVERSE
      default_shape : SET[0:1] OF default_assembly_bond_shape_model FOR shape_characterized_definition;
	  bond_category	: External_source_identification FOR item;
	  bond_material : material_identification FOR items;      
    UNIQUE
      UR1 : name;
      UR2 : associated_definition;
    WHERE
      WR1 : bonded_feature_1 <> bonded_feature_2;
      WR2 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF (bond_material);
      WR3 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF (bonded_feature_1)) XOR
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.PART_FEATURE' IN TYPEOF(bonded_feature_2)));
      WR4 : NOT(('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF (bonded_feature_1)) XOR 
        ('PHYSICAL_UNIT_USAGE_VIEW_ARM.CONNECTION_ZONE_IN_USAGE_VIEW' IN TYPEOF(bonded_feature_2)));
      WR5 : NOT((('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN
        TYPEOF (bonded_feature_1)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('FEATURE_AND_CONNECTION_ZONE_ARM.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2)))
        XOR 
        (('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN TYPEOF(bonded_feature_2)) OR
        ('LAYERED_INTERCONNECT_SIMPLE_TEMPLATE_ARM.DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE' IN TYPEOF
        (bonded_feature_1)) OR
        ('FEATURE_AND_CONNECTION_ZONE_ARM.FEATURE_DEFINITION_WITH_CONNECTION_AREA' IN TYPEOF(bonded_feature_2))));      
  END_ENTITY;

  ENTITY Assembly_joint
    SUPERTYPE OF (Assembled_with_fasteners ANDOR
 Assembled_with_bonding)
    SUBTYPE OF (Component_feature_joint);
      SELF\Component_feature_joint.feature_1 RENAMED assembly_feature_1             : Physical_component_feature; -- assembled_feature_select;
      SELF\Component_feature_joint.feature_2 RENAMED assembly_feature_2             : Physical_component_feature; -- assembled_feature_select;
      SELF\Component_feature_joint.associated_definition RENAMED associated_assembly : Assembly_shape; -- assembly_module_or_assembly_group_component;
    UNIQUE
      UR1 : SELF\Shape_element.element_name,
        associated_assembly;
    WHERE
      WR1 : assembly_feature_1 :<>: assembly_feature_2;
      WR2 : ('ASSEMBLY_TECHNOLOGY_ARM.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR 
             (('ASSEMBLY_TECHNOLOGY_ARM.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_1)) AND 
             (SIZEOF(QUERY(ay <* assembly_feature_1\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <> 
             associated_assembly\Item_shape.described_element)) = 0));
      WR3 : ('ASSEMBLY_TECHNOLOGY_ARM.ASSEMBLED_WITH_FASTENERS' IN TYPEOF(SELF)) OR 
             (('ASSEMBLY_TECHNOLOGY_ARM.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_2)) AND 
             (SIZEOF(QUERY(ay <* assembly_feature_2\Component_feature.associated_component\Assembly_component.occurrence_contexts | ay\Product_occurrence_definition_relationship.related_view <> 
             associated_assembly\Item_shape.described_element)) = 0));
  END_ENTITY;
(*
  ENTITY Assembly_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;
*)
  ENTITY Component_mating_constraint_condition;
      name                          : STRING;  
      constraining_joint            : SET[1:3] OF Assembly_joint;
      constrained_degree_of_freedom : SET[1:6] OF degree_of_freedom;
      of_context                    : Part_view_definition; -- Part_design_view;
    UNIQUE
      UR1 : name,
 of_context;
  END_ENTITY;

  ENTITY Connection_zone_based_assembly_joint
    SUBTYPE OF (Assembly_joint);
      zone_1 : Connection_zone; -- Connection_zone_in_design_view;
      zone_2 : Connection_zone; -- Connection_zone_in_design_view;
    WHERE
      WR1 : zone_1 :<>: zone_2;
  END_ENTITY;

  ENTITY Default_assembly_bond_shape_model
    SUBTYPE OF (Geometric_model);
      shape_characterized_definition : Assembly_bond_definition;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.description);
      WR2 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION'))=0;      
  END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N7945 - ISO/TS 10303-1311 Associative draughting elements - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7382
*)

SCHEMA Associative_draughting_elements_arm;

USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032

USE FROM Draughting_element_arm; -- ISO/TS 10303-1310

  TYPE annotation_occurrence_associativity_item = SELECT
    (Fill_area,
     Leader,
     Projection_curve);
  END_TYPE;

  TYPE draughting_model_element_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Annotation_element,
     Axis_placement,
     Draughting_callout,
     Styled_model_replication);
  END_TYPE;

  TYPE draughting_model_item_association_select = SELECT
    (Annotation_element,
     Draughting_callout);
  END_TYPE;

  TYPE draughting_model_item_definition = EXTENSIBLE GENERIC_ENTITY SELECT (
    Item_shape,
    Shape_element,
    Shape_element_relationship);
  END_TYPE; 

  ENTITY Annotation_occurrence_associativity;
    relating_element : Annotation_element;
    related_element  : annotation_occurrence_associativity_item;
  END_ENTITY;

  ENTITY Draughting_model
    SUBTYPE OF (Styled_model);
      SELF\Representation.items : SET[1:?] OF draughting_model_element_select;
  UNIQUE
    UR1:  SELF\Representation.name;
  END_ENTITY;

  ENTITY Draughting_model_item_association;
    name            : STRING;
    definition      : draughting_model_item_definition;
    identified_item : draughting_model_item_association_select;
    used_model      : Draughting_model;
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7948 - ISO/TS 10303-1132 Associative text - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7385
*)

SCHEMA Associative_text_arm;

USE FROM Appearance_assignment_arm; -- ISO/TS 10303-1136

USE FROM Colour_arm;          -- ISO/TS 10303-1002

USE FROM Text_appearance_arm; -- ISO/TS 10303-1136

  TYPE at_appearance_select = SELECT BASED_ON appearance_select  WITH
    (Text_style);
  END_TYPE; 

  TYPE at_composite_text_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON composite_text_element_select WITH (
          annotation_text);
  END_TYPE; 
  
 
  TYPE text_or_composite_text = EXTENSIBLE GENERIC_ENTITY SELECT
    (Annotation_text,
    Composite_presentable_text,
    Defined_character_glyph,
    Text_literal);
  END_TYPE; 

  TYPE text_string_representation_item_select = EXTENSIBLE GENERIC_ENTITY SELECT(
    Annotation_text,
    Composite_presentable_text,
    Defined_character_glyph,
    Text_literal);
  END_TYPE;

  ENTITY Annotation_curve
    ABSTRACT SUPERTYPE 
    SUBTYPE OF (Annotation_element);
      annotation_curve_type       : OPTIONAL STRING;
      SELF\Styled_element.element : Curve;
  END_ENTITY;

  ENTITY Annotation_element 
    SUPERTYPE OF(ONEOF (Annotation_text_occurrence, Annotation_curve))                        
    SUBTYPE OF (Detailed_geometric_model_element, Styled_element);
  END_ENTITY;

  ENTITY Annotation_text
    SUBTYPE OF (Detailed_geometric_model_element);
      replicated_model : Text_string_representation;
      source           : Axis_placement;
      target           : Axis_placement;
  END_ENTITY;

  ENTITY Dimension_text
    SUBTYPE OF (Annotation_text_occurrence);
    WHERE
      WR1: name IN ['dimension value', 'tolerance value', 'unit text', 'prefix text', 'suffix text'];
  END_ENTITY;

  ENTITY Annotation_text_occurrence 
    SUBTYPE OF (Annotation_element);
      SELF\Styled_element.element RENAMED text : text_or_composite_text;
  END_ENTITY;

  ENTITY Text_string_representation
    SUBTYPE OF (Styled_model);
    SELF\Representation.items : SET [1:1] OF text_string_representation_item_select;
  END_ENTITY; 

  ENTITY Text_style;  
    font_size_scale  : REAL; 
    mirror_placement : OPTIONAL Axis_placement;
    text_colour      : Colour; 
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N3019 - ISO/TS 10303-1246 Attribute classification - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2255
*) 


SCHEMA Attribute_classification_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070


TYPE classified_attribute_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Attribute_classification;
  allowed_value : Class;
  attribute_name : STRING;
  classified_entity : SET[1:?] OF classified_attribute_select;
END_ENTITY;

END_SCHEMA;  -- Attribute_classification_arm


(*
 ISO TC184/SC4/WG12 N8253 - ISO/TS 10303-1801 B_spline_geometry - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7190
*)

SCHEMA B_spline_geometry_arm; 


USE FROM Basic_geometry_arm; -- ISO/TS 10303-1652

TYPE knot_specification = ENUMERATION OF
  (bezier,
   quasi_uniform,
   uniform);
 END_TYPE;  

TYPE parameter_value = REAL;
END_TYPE;

ENTITY B_spline_curve
  ABSTRACT SUPERTYPE OF (ONEOF(Curve_with_explicit_knots, Curve_with_implicit_knots) 
          ANDOR Rational_b_spline_curve)
  SUBTYPE OF (Bounded_curve);        
  degree : INTEGER;
  control_points : LIST [2:?] OF Cartesian_point;
  closed : LOGICAL;
 WHERE
  WR1 : ('B_SPLINE_GEOMETRY_ARM.CURVE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('B_SPLINE_GEOMETRY_ARM.CURVE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));
END_ENTITY;

ENTITY B_spline_surface
  ABSTRACT SUPERTYPE OF (ONEOF(Surface_with_explicit_knots, Surface_with_implicit_knots) 
          ANDOR Rational_b_spline_surface)
  SUBTYPE OF (Bounded_surface);        
  u_degree : INTEGER;
  v_degree : INTEGER;
  control_points : LIST [2:?] OF LIST [2:?] OF Cartesian_point;
  u_closed : LOGICAL;
  v_closed : LOGICAL;
 WHERE
  WR1 : ('B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_EXPLICIT_KNOTS' IN TYPEOF(self)) OR
        ('B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_IMPLICIT_KNOTS' IN TYPEOF(self));

END_ENTITY;


ENTITY Curve_with_explicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_multiplicities : LIST [2:?] OF INTEGER;
   knot_values : LIST [2:?] OF parameter_value;
 WHERE
  WR1: SIZEOF(knot_multiplicities) = SIZEOF(knot_values);
END_ENTITY;

ENTITY Curve_with_implicit_knots
 SUBTYPE OF (B_spline_curve);
   knot_type : knot_specification;
 END_ENTITY;

ENTITY Rational_b_spline_curve
 SUBTYPE OF (B_spline_curve);
  weight_values : LIST [2:?]  OF REAL;
 WHERE 
    WR1: SIZEOF(weight_values) = SIZEOF(SELF\B_spline_curve.control_points);
    WR2: positive_curve_weights(SELF);
END_ENTITY;

ENTITY Rational_b_spline_surface
 SUBTYPE OF (B_spline_surface);
  weight_values : LIST [2:?] OF LIST [2:?] OF REAL;
 WHERE 
    WR1: (SIZEOF(weight_values) =
                     SIZEOF(SELF\B_spline_surface.control_points))
           AND (SIZEOF(weight_values[1]) =
                  SIZEOF(SELF\B_spline_surface.control_points[1]));
     WR2: positive_surface_weights(SELF);
END_ENTITY;



ENTITY Surface_with_explicit_knots
 SUBTYPE OF (B_spline_surface);
   u_knot_multiplicities : LIST [2:?] OF INTEGER;
   u_knot_values : LIST [2:?] OF parameter_value;
   v_knot_multiplicities : LIST [2:?] OF INTEGER;
   v_knot_values : LIST [2:?] OF parameter_value;
  WHERE
  WR1: SIZEOF(u_knot_multiplicities) = SIZEOF(u_knot_values);
  WR2: SIZEOF(v_knot_multiplicities) = SIZEOF(v_knot_values);
 END_ENTITY;

ENTITY Surface_with_implicit_knots
 SUBTYPE OF (B_spline_surface);
   knot_type : knot_specification;
 END_ENTITY;

FUNCTION positive_curve_weights(bsc: Rational_b_spline_curve) : BOOLEAN;
   LOCAL
     result : BOOLEAN := TRUE;
   END_LOCAL;

   REPEAT i := 1 TO SIZEOF(bsc.weight_values);
     IF bsc.weight_values[i] <= 0.0  THEN
       result := FALSE;
       RETURN(result);
     END_IF;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

FUNCTION positive_surface_weights(bss: Rational_b_spline_surface) : BOOLEAN;
   LOCAL
     result        : BOOLEAN := TRUE;
   END_LOCAL;
   
   REPEAT i := 1 TO SIZEOF(bss.weight_values);
     REPEAT j := 0 TO SIZEOF(bss.weight_values[1]);
       IF (bss.weight_values[i][j] <= 0.0)  THEN
         result := FALSE;
         RETURN(result);
       END_IF;
     END_REPEAT;
   END_REPEAT;
   RETURN(result);
 END_FUNCTION;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7825 - ISO/TS 10303-1651 Basic curve - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N77388
*)

SCHEMA Basic_curve_arm;

USE FROM Basic_geometry_arm;-- ISO/TS 10303-1652
USE FROM External_item_identification_assignment_arm;-- ISO/TS 10303-1128

SUBTYPE_CONSTRAINT curve_subtypes FOR Bounded_curve;         
  ONEOF (Composite_curve, Trimmed_curve);    
END_SUBTYPE_CONSTRAINT;

TYPE curve_transition_code = ENUMERATION OF
  (discontinuous,
   continuous,
   cont_same_gradient,
   cont_same_gradient_same_curvature);
END_TYPE;  

TYPE closed_curve = EXTENSIBLE GENERIC_ENTITY SELECT
  (Circle,
   Closed_composite_curve);
END_TYPE;

ENTITY Closed_composite_curve
  SUBTYPE OF (Composite_curve);
END_ENTITY;
  
ENTITY Composite_curve
  SUBTYPE OF (Bounded_curve);
  curve_segment : LIST[1:?] OF UNIQUE Composite_curve_segment;
END_ENTITY;

ENTITY Composite_curve_segment;
  transition   : curve_transition_code;
  same_sense   : BOOLEAN;
  segment_curve : Bounded_curve;
INVERSE
  using_curves : SET[1:?] OF Composite_curve FOR curve_segment;
END_ENTITY;

ENTITY Trimmed_curve
  SUBTYPE OF (Bounded_curve);
  basis_curve : Curve;
  start_point : Cartesian_point;
  end_point : Cartesian_point;
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7951 - ISO/TS 10303-1773 Basic data representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6216
*)
SCHEMA Basic_data_representation_arm;

USE FROM Extended_date_arm; -- ISO/TS 10303-1776

USE FROM Foundation_representation_arm; -- ISO/TS 10303-1006

  ENTITY Boolean_representation_item
    SUBTYPE OF (Representation_item);
      the_value : BOOLEAN;
  END_ENTITY;

  ENTITY Compound_representation_item 
    ABSTRACT SUPERTYPE OF (ONEOF (Sequence_representation_item, Set_representation_item)) 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 

  ENTITY Date_time_representation_item
    SUBTYPE OF (Representation_item);
      the_value : date_or_date_time_select;
  END_ENTITY; 

  ENTITY Integer_representation_item
    SUBTYPE OF (Representation_item);
      the_value : INTEGER;
  END_ENTITY;

  ENTITY Logical_representation_item
    SUBTYPE OF (Representation_item);
      the_value : LOGICAL;
  END_ENTITY;

  ENTITY Rational_representation_item
    SUBTYPE OF (Representation_item);
      numerator   : INTEGER;
      denominator : INTEGER;
  END_ENTITY;

  ENTITY Real_representation_item
    SUBTYPE OF (Representation_item);
      the_value   : REAL;
  END_ENTITY;

  ENTITY Sequence_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : LIST OF Representation_item;
  END_ENTITY;

  ENTITY Set_representation_item
    SUBTYPE OF (Compound_representation_item);
      the_value   : SET OF Representation_item;
  END_ENTITY;

  SUBTYPE_CONSTRAINT representation_item_subtypes FOR Representation_item; 
	(ONEOF (Boolean_representation_item,
	  Compound_representation_item,
      Date_time_representation_item,
      Integer_representation_item,
      Logical_representation_item,
      Rational_representation_item,
      Real_representation_item));
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
  ISO TC184/SC4/WG12 N8256 - ISO/TS 10303-1323 Basic geometric topology - EXPRESS ARM
  Supersedes ISO TC184/SC4/WG12 N6872
*)

SCHEMA Basic_geometric_topology_arm;

USE FROM Basic_geometry_arm; -- ISO/TS 10303-1652

USE FROM Elemental_topology_arm; -- ISO/TS 10303-1005

ENTITY Edge_curve
  SUBTYPE OF (Detailed_geometric_model_element, Edge);
    edge_geometry : Curve;
    same_sense    : BOOLEAN;
END_ENTITY;

ENTITY Face_surface
  SUBTYPE OF(Detailed_geometric_model_element, Face);
    face_geometry :  Surface;
    same_sense    :  BOOLEAN;
END_ENTITY;

ENTITY Poly_loop
  SUBTYPE OF (Detailed_geometric_model_element,Loop);
    polygon : LIST [3:?] OF UNIQUE cartesian_point;
END_ENTITY;
  
ENTITY Vertex_point
  SUBTYPE OF (Detailed_geometric_model_element, Vertex);
    vertex_position : Cartesian_point;
END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N7828 - ISO/TS 10303-1652 Basic geometry - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7193
*) 

SCHEMA Basic_geometry_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

ENTITY Bounded_curve
   ABSTRACT SUPERTYPE
   SUBTYPE OF (Curve);
END_ENTITY;

ENTITY Bounded_surface
   ABSTRACT SUPERTYPE
   SUBTYPE OF (Surface);
END_ENTITY;

ENTITY Circle
   SUBTYPE OF (Conic);
   radius   : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;

ENTITY Conic
   SUPERTYPE OF (ONEOF(Circle, Ellipse, Hyperbola, Parabola))
   SUBTYPE OF (Curve);
   position: Axis_placement;
END_ENTITY;

 ENTITY  Conical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius     : length_measure;
   semi_angle : plane_angle_measure;
WHERE
   WR1: radius >= 0.0;
END_ENTITY;


ENTITY Curve
  SUPERTYPE OF (ONEOF(Conic, Line))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;

ENTITY Cylindrical_surface
   SUBTYPE OF (Surface);
    position : Axis_placement_3d;
   radius : length_measure;
WHERE
   WR1: radius > 0.0;
END_ENTITY;

ENTITY Ellipse
   SUBTYPE OF(Conic);
   first_semi_axis: length_measure;
   second_semi_axis: length_measure;
WHERE
   WR1: first_semi_axis > 0.0;
   WR2: first_semi_axis > 0.0;
END_ENTITY;
 
ENTITY Extruded_surface
   SUBTYPE OF (Swept_surface);
   extrusion_axis      : Direction;
END_ENTITY;

ENTITY Hyperbola
   SUBTYPE OF(Conic);
   semi_axis: length_measure;
   imaginary_semi_axis: length_measure;
WHERE
   WR1: semi_axis > 0.0;
   WR2: imaginary_semi_axis > 0.0;
END_ENTITY;


ENTITY Line
  SUBTYPE OF (Curve);
   point: Cartesian_point;
   line_direction: Direction;
END_ENTITY;

ENTITY Parabola
   SUBTYPE OF(Conic);
   focal_distance: length_measure;
WHERE
   WR1: focal_distance <> 0.0;
END_ENTITY;

ENTITY Plane
  SUBTYPE OF (Surface);
  position: Axis_placement_3d;
END_ENTITY;

ENTITY Point_on_curve
  SUBTYPE OF (Point);
  supporting_curve : Curve;
END_ENTITY;

ENTITY Point_on_surface
  SUBTYPE OF (Point);
  supporting_surface : Surface;
END_ENTITY;

ENTITY Spherical_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius   : length_measure;
WHERE
    WR1: radius > 0.0;
END_ENTITY;
 
 
ENTITY Surface
  SUPERTYPE OF (ONEOF(Conical_surface, Cylindrical_surface, Plane, Spherical_surface, Swept_surface, Toroidal_surface))
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;

ENTITY Surface_of_revolution
  SUBTYPE OF (Swept_surface);
      axis_direction : Direction;
      axis_point :     Cartesian_point;
END_ENTITY;

ENTITY Swept_surface
   SUPERTYPE OF (ONEOF(Extruded_surface, Surface_of_revolution))
   SUBTYPE OF (Surface);
   swept_curve : Curve;
END_ENTITY;


ENTITY Toroidal_surface
   SUBTYPE OF (Surface);
   position : Axis_placement_3d;
   radius : length_measure;
   minor_radius : length_measure;
WHERE
    WR1: radius > 0.0;
    WR2: minor_radius > 0.0;
END_ENTITY;
 
SUBTYPE_CONSTRAINT alternate_geometry_items FOR Detailed_geometric_model_element;
  ONEOF (Direction,
         Axis_placement,
         Cartesian_transformation_2d,
         Cartesian_transformation_3d,
         Curve,
         Surface);
END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT point_subtypes FOR Point;
  ONEOF (Cartesian_point,
         Point_on_curve,
         Point_on_surface);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  -- Basic_geometry_arm
(*
   ISO TC184/SC4/WG12 N5305 - ISO/TS 10303-1369 Binary representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4669
*) 


SCHEMA Binary_representation_arm; 

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006


  ENTITY Binary_representation_item 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 

  ENTITY Bytes_representation_item 
    SUBTYPE OF (Binary_representation_item); 
  END_ENTITY; 

END_SCHEMA; 

(*
 ISO TC184/SC4/WG12 N7699 - ISO/TS 10303-1316 Camera view 3d - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6622
*)

SCHEMA Camera_view_3d_arm;

USE FROM Basic_geometry_arm; -- ISO/TS 10303-1652
USE FROM Colour_arm; -- ISO/TS 10303-1002
USE FROM Presentation_hierarchy_arm; -- ISO/CD-TS 10303-1330

  TYPE clipping_mode = ENUMERATION OF
    (union, intersection);
  END_TYPE;

  TYPE light_type = ENUMERATION OF
    (ambient, directional, spot, positional);
  END_TYPE;

  TYPE clipping_element = SELECT 
    (Plane, Clipping_operator);
  END_TYPE;

  TYPE cv3_view_element_select = SELECT BASED_ON view_element_select WITH 
    (Model_image_3d);
  END_TYPE; 

  TYPE view_projection_type = ENUMERATION OF 
    (central,
     parallel);
  END_TYPE; 

  ENTITY Camera_model_d3
    SUBTYPE OF (Detailed_geometric_model_element);
      clipping : OPTIONAL Clipping_operator; 
      hidden_element_appearance : OPTIONAL Appearance_assignment; 
      hidden_line_removal : OPTIONAL BOOLEAN; 
      sources : OPTIONAL SET[1:?] OF Light_source;      
      view_projection : view_projection_type; 
      view_window : Planar_box; 
    WHERE
      WR1: NOT EXISTS(hidden_element_appearance) OR EXISTS(hidden_line_removal);
  END_ENTITY;   

  ENTITY Clipping_operator
    SUBTYPE OF (Detailed_geometric_model_element);
      elements : SET [1:?] OF clipping_element;
      operator : clipping_mode;
  END_ENTITY;

  ENTITY Light_source
    SUBTYPE OF (Detailed_geometric_model_element);
      colour : OPTIONAL Colour;
      light_type : light_type;
  END_ENTITY;
 
  ENTITY Model_image_3d
    SUBTYPE OF (Detailed_geometric_model_element);
       is_displaying : presented_model_select; 
       source : Camera_model_d3;
       target : Planar_box;
  END_ENTITY;   
  
  SUBTYPE_CONSTRAINT cv3d_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
  ONEOF (Clipping_operator,
         Model_image_3d,
         Light_source,
         Camera_model_d3);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2932 - ISO/TS 10303-1044 Certification - EXPRESS ARM
*)



SCHEMA Certification_arm; 


TYPE certification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Certification;
  name : STRING;
  description : OPTIONAL STRING;
  kind : STRING;
END_ENTITY;

ENTITY Certification_assignment;
  assigned_certification : Certification;
  items : SET[1:?] OF certification_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Certification_arm
(*
ISO TC184/SC4/WG12 N6707 - ISO/TS 10303-1375 Cfd_conditions - EXPRESS ARM
*)

SCHEMA Cfd_conditions_arm;

USE FROM Analysis_arm;                        --ISO/TS 10303-1372

USE FROM Cfd_specified_general_property_arm;  --ISO/TS 10303-1379

USE FROM Mesh_topology_arm;                   --ISO/TS 10303-1386

TYPE fd_bc_type_simple = EXTENSIBLE ENUMERATION BASED_ON mbna_bc_type_simple WITH 
  (bc_wall_inviscid,
   bc_wall_viscous_heat_flux,
   bc_wall_viscous_isothermal,
   bc_wall_viscous,
   bc_wall,
   bc_inflow_subsonic,
   bc_inflow_supersonic,
   bc_outflow_subsonic,
   bc_outflow_supersonic,
   bc_tunnel_inflow,
   bc_tunnel_outflow,
   bc_degenerate_line,
   bc_degenerate_point,
   bc_symmetry_polar,
   bc_axissymmetric_wedge);
END_TYPE;

TYPE ijk_minmax = ENUMERATION OF 
  (i_min,
   j_min,
   k_min,
   i_max,
   j_max,
   k_max);
END_TYPE;

TYPE mbna_bc_type = EXTENSIBLE SELECT 
  (mbna_bc_type_compound,
   mbna_bc_type_simple);
END_TYPE;

TYPE mbna_bc_type_compound = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   bc_inflow,
   bc_outflow,
   bc_farfield);
END_TYPE;

TYPE mbna_bc_type_simple = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   bc_general,
   bc_Dirichlet,
   bc_Neumann,
   bc_extrapolate,
   bc_symmetry_plane);
END_TYPE;


TYPE riemann_1d_data_name = EXTENSIBLE ENUMERATION OF 
  (Riemann_invariant_plus,
   Riemann_invariant_minus,
   characteristic_entropy,
   characteristic_vorticity1,
   characteristic_vorticity2,
   characteristic_acoustic_plus,
   characteristic_acoustic_minus);
END_TYPE;

ENTITY Elements_bc
SUBTYPE OF (Mbna_bc);
  elements : LIST [0 : ?] OF Vertex_defined_cell;
END_ENTITY;

ENTITY Fd_bc
SUBTYPE OF (Mbna_bc);
  SELF\Mbna_bc.datasets : SET [0 : ?] OF Fd_bc_dataset;
END_ENTITY;

ENTITY Fd_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  SELF\Mbna_bc_dataset.the_type : Fd_bc_type_simple;
END_ENTITY;

ENTITY Fd_zone_bc
SUBTYPE OF (Mbna_zone_bc);
  SELF\Mbna_zone_bc.conditions : SET [0 : ?] OF Fd_bc;
END_ENTITY;

ENTITY Indexed_elements_bc
SUBTYPE OF (Mbna_bc);
  element_indices : indices_group;
END_ENTITY;

ENTITY Indexed_points_bc
SUBTYPE OF (Mbna_bc);
  point_indices : indices_group;
END_ENTITY;

ENTITY Mbna_bc
  SUPERTYPE OF(ONEOF(elements_bc,
        Indexed_elements_bc,
        Indexed_points_bc)) 
  SUBTYPE OF (Mbna_condition);
  datasets : SET [0 : ?] OF Mbna_bc_dataset;
  gridloc : mesh_location;
  inward_normal_index : OPTIONAL Ijk_minmax;
  inward_normal_list : OPTIONAL Ijk_minmax;
  rstate : SET [0 : ?] OF Mbna_reference_state;
  the_type : mbna_bc_type;
END_ENTITY;

ENTITY Mbna_bc_data
ABSTRACT SUPERTYPE
SUBTYPE OF (Mbna_condition);
END_ENTITY;

ENTITY Mbna_bc_data_global
SUBTYPE OF (Mbna_bc_data);
INVERSE
  data_global : SET OF Model_property_distribution FOR domain;
END_ENTITY;

ENTITY Mbna_bc_data_local
SUBTYPE OF (Mbna_bc_data);
INVERSE
  data : SET [0 : ?] OF Model_property_distribution FOR domain;
END_ENTITY;

ENTITY Mbna_bc_dataset
  SUPERTYPE OF (ONEOF(Mbna_Dirichlet_bc_dataset,
               Mbna_Neumann_bc_dataset))
  SUBTYPE OF (Mbna_condition);
  gridloc : mesh_location;
  rstate : SET [0 : ?] OF Mbna_reference_state;
  the_type : mbna_bc_type_simple;
END_ENTITY;

ENTITY Mbna_condition
  ABSTRACT SUPERTYPE OF(ONEOF(
        Mbna_zone_bc,
        Mbna_bc,
        Mbna_bc_dataset,
        Mbna_bc_data,
        Mbna_reference_state))
  SUBTYPE OF (Model_state_domain);
END_ENTITY;

ENTITY Mbna_dirichlet_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  data : Mbna_bc_data;
END_ENTITY;

ENTITY Mbna_neumann_bc_dataset
SUBTYPE OF (Mbna_bc_dataset);
  data : Mbna_bc_data;
END_ENTITY;

ENTITY Mbna_reference_state
SUBTYPE OF (Mbna_condition);
INVERSE
  data : SET OF Model_property_distribution FOR domain;
END_ENTITY;

ENTITY Mbna_zone_bc
SUBTYPE OF (Mbna_condition);
  conditions : SET [0 : ?] OF Mbna_bc;
  rstate : SET [0 : ?] OF Mbna_reference_state;
END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N6712 - ISO/TS 10303-1376 Cfd_equations_arm - EXPRESS ARM
*) 

SCHEMA Cfd_equations_arm;

USE FROM Analysis_arm; --ISO/TS 10303-1372

TYPE fd_behaviour_models = EXTENSIBLE SELECT 
  (Gas_model,
   Turbulence_closure,
   Turbulence_model,
   Viscosity_model);
END_TYPE;

TYPE fd_governing_equation_type = EXTENSIBLE ENUMERATION BASED_ON mbna_governing_equation_type WITH 
  (full_potential,
   Euler,
   NS_laminar,
   NS_turbulent,
   NS_laminar_incompressible,
   NS_turbulent_incompressible);
END_TYPE;

TYPE force_moment_data_name = EXTENSIBLE ENUMERATION OF 
  (force_x,
   force_y,
   force_z,
   force_r,
   force_theta,
   force_phi,
   moment_x,
   moment_y,
   moment_z,
   moment_r,
   moment_theta,
   moment_phi,
   moment_xi,
   moment_eta,
   moment_zeta,
   moment_center_x,
   moment_center_y,
   moment_center_z,
   lift,
   drag,
   coef_lift,
   coef_drag,
   coef_moment_x,
   coef_moment_y,
   coef_moment_z,
   coef_moment_r,
   coef_moment_theta,
   coef_moment_phi,
   coef_moment_xi,
   coef_moment_eta,
   coef_moment_zeta,
   coef_moment_pressure_dynamic,
   coef_moment_area,
   coef_length);
END_TYPE;

TYPE gas_model_data_name = EXTENSIBLE ENUMERATION OF 
  (ideal_gas_constant,
   specific_heat_ratio,
   specific_heat_pressure,
   specific_heat_volume);
END_TYPE;

TYPE gas_model_type = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   ideal,
   Van_der_Waals);
END_TYPE;

TYPE mbna_behaviour_models = EXTENSIBLE SELECT 
  (Thermal_conductivity_model);
END_TYPE;

TYPE mbna_governing_equation_type = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined);
END_TYPE;

TYPE thermal_conductivity_model_data_name = EXTENSIBLE ENUMERATION OF 
  (power_law_exponent,
   temperature_reference,
   thermal_conductivity_reference,
   Sutherland_constant_conductivity,
   constant_Prandtl);
END_TYPE;

TYPE thermal_conductivity_model_type = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   independent,
   power_law,
   Sutherland_law,
   constant_Prandtl);
END_TYPE;

TYPE turbulence_closure_data_name = EXTENSIBLE ENUMERATION OF 
  (eddy_viscosity,
   Prandtl_turbulent);
END_TYPE;

TYPE turbulence_closure_type = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   eddy_viscosity,
   Reynolds_stress,
   Reynolds_stress_algebraic);
END_TYPE;

TYPE turbulence_model_data_name = EXTENSIBLE ENUMERATION OF 
  (turbulent_distance,
   turbulent_energy_kinetic,
   turbulent_dissipation,
   turbulent_dissipation_rate,
   turbulent_BB_Reynolds,
   turbulent_SA_nu_tilde,
   turbulent_SA_chi,
   turbulent_SA_cb1,
   turbulent_SA_cb2,
   turbulent_SA_sigma,
   turbulent_SA_kappa,
   turbulent_SA_cw1,
   turbulent_SA_cw2,
   turbulent_SA_cw3,
   turbulent_SA_cv1,
   turbulent_SA_ct1,
   turbulent_SA_ct2,
   turbulent_SA_ct3,
   turbulent_SA_ct4);
END_TYPE;

TYPE turbulence_model_type = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   algebraic_Baldwin_Lomax,
   algebraic_Cebeci_Smith,
   half_equation_Johnson_King,
   one_equation_Baldwin_Barth,
   one_equation_Spalart_Allmaras,
   two_equation_Jones_Launder,
   two_equation_Menter_SST,
   two_equation_Wilcox);
END_TYPE;

TYPE viscosity_model_data_name = EXTENSIBLE ENUMERATION OF 
  (viscosity_molecular_reference,
   Sutherland_constant_viscosity);
END_TYPE;

TYPE viscosity_model_type = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   constant_viscosity,
   power_law,
   Sutherland_law);
END_TYPE;

ENTITY Fd_diffusion_equation
SUBTYPE OF (Fd_governing_equation);
  diffusion_model : Fd_diffusion_model;
END_ENTITY;

ENTITY Fd_diffusion_model;
  terms : ARRAY [1 : diff] OF BOOLEAN;
  diff : INTEGER;
END_ENTITY;

ENTITY Fd_governing_equation
SUBTYPE OF (Mbna_governing_equation);
  SELF\Mbna_governing_equation.equation_type : fd_governing_equation_type;
END_ENTITY;

ENTITY Flow_equation_set
SUBTYPE OF (Mbna_equation_set);
  SELF\Mbna_equation_set.equations : Fd_governing_equation;
  fd_models : SET [0 : ?] OF fd_behaviour_models;
END_ENTITY;

ENTITY Gas_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : gas_model_type;
END_ENTITY;

ENTITY Mbna_behaviour_model
  ABSTRACT SUPERTYPE OF (
  ONEOF(Thermal_conductivity_model,
        Gas_model,
        Turbulence_closure,
        Turbulence_model,
        Viscosity_model))
SUBTYPE OF (Mbna_equation);
INVERSE
  data : SET [0 : ?] OF Model_property_distribution FOR domain;
END_ENTITY;

ENTITY Mbna_equation
SUPERTYPE OF (
  ONEOF(Mbna_equation_set,
        Mbna_governing_equation,
        Mbna_behaviour_model))
SUBTYPE OF (Model_product_domain);
END_ENTITY;

ENTITY Mbna_equation_set
SUBTYPE OF (Mbna_equation);
  dimension : INTEGER;
  equations : Mbna_governing_equation;
  mbna_models : SET [0 : ?] OF mbna_behaviour_models;
END_ENTITY;

ENTITY Mbna_governing_equation
SUBTYPE OF (Mbna_equation);
  equation_type : mbna_governing_equation_type;
END_ENTITY;

ENTITY Thermal_conductivity_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : thermal_conductivity_model_type;
END_ENTITY;

ENTITY Turbulence_closure
SUBTYPE OF (Mbna_behaviour_model);
  closure_type : turbulence_closure_type;
END_ENTITY;

ENTITY Turbulence_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : turbulence_model_type;
  diffusion_model : OPTIONAL Fd_diffusion_model;
END_ENTITY;

ENTITY Viscosity_model
SUBTYPE OF (Mbna_behaviour_model);
  model_type : viscosity_model_type;
END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N6713 - ISO/TS 10303-1377 Cfd_model_arm - EXPRESS ARM

*) 


SCHEMA Cfd_model_arm;

USE FROM Analysis_arm;           --ISO/TS 10303-1372

USE FROM Cfd_conditions_arm;     --ISO/TS 10303-1375

USE FROM Cfd_equations_arm;      --ISO/TS 10303-1376

USE FROM Cfd_results_arm;        --ISO/TS 10303-1378

USE FROM Cfd_specified_general_property_arm;--ISO/TS 10303-1379

USE FROM Mesh_connectivity_arm;   --ISO/TS 10303-1384

USE FROM Mesh_topology_arm;

TYPE coordinate_data_name = EXTENSIBLE ENUMERATION OF 
  (coordinate_x,
   coordinate_y,
   coordinate_z,
   coordinate_r,
   coordinate_theta,
   coordinate_phi,
   coordinate_normal,
   coordinate_tangential,
   coordinate_xi,
   coordinate_eta,
   coordinate_zeta,
   coordinate_transform);
END_TYPE;

ENTITY Fd_step
SUBTYPE OF (Mbna_step);
  SELF\Mbna_step.equations : SET [0 : ?] OF Flow_equation_set; 
  SELF\Mbna_step.zones : LIST [0 : ?] OF Fd_zone;
END_ENTITY;

ENTITY Fd_zone
SUBTYPE OF (Mbna_zone);
  SELF\Mbna_zone.conditions : SET [0 : ?] OF Fd_zone_bc;
  SELF\Mbna_zone.equations : SET [0 : ?] OF Flow_equation_set;
END_ENTITY;

ENTITY Grid_coordinates
SUBTYPE OF (Model_property_distribution);
  SELF\Model_property_distribution.domain : Model_product_domain_with_mesh;
  SELF\Model_property_distribution.range : Specified_general_property;
END_ENTITY;

ENTITY Grid_coordinates_with_rind
SUBTYPE OF (Grid_coordinates);
  rind_planes : Rind;
END_ENTITY;

ENTITY Mbna_model
  SUBTYPE OF (Model_product_domain);
  SELF\Model_product_domain.temporal_parts : LIST OF Mbna_step;
  equations : SET OF Mbna_equation_set;  
INVERSE
  history : SET OF Mbna_history for domain;  
END_ENTITY;

ENTITY Mbna_state
  SUBTYPE OF (model_state_domain);
END_ENTITY;  

ENTITY Mbna_step
  SUBTYPE OF (Model_action_domain);
  SELF\Model_action_domain.final : Mbna_state;
  equations : SET OF Mbna_equation_set;  
  refstate : SET OF Mbna_reference_state;
  zones : LIST OF Mbna_zone;
INVERSE
  history : SET OF Mbna_history for domain;  
END_ENTITY;

ENTITY Mbna_structured_zone
SUBTYPE OF (Mbna_zone);
  SELF\Model_product_domain_with_mesh.model_mesh : Structured_mesh;
END_ENTITY;

ENTITY Mbna_unstructured_zone
SUBTYPE OF (Mbna_zone);
  SELF\Model_product_domain_with_mesh.model_mesh : Unstructured_mesh;
END_ENTITY;

ENTITY Mbna_zone
  ABSTRACT SUPERTYPE OF (ONEOF
    (Mbna_structured_zone, Mbna_unstructured_zone))
  SUBTYPE OF (Model_product_domain_with_mesh);
  conditions         : SET OF Mbna_zone_bc;
  equations          : SET OF Mbna_equation_set;
  grid_connectivity  : OPTIONAL Multiple_mesh_block;
  rstate             : SET OF Mbna_reference_state;
INVERSE
  coordinates : SET OF Grid_coordinates FOR domain;
  field_data  : SET OF Mbna_discrete_data FOR domain;
  history     : SET OF Mbna_history FOR domain;
  solution    : SET OF Mbna_solution FOR domain;
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N6742 - ISO/TS 10303-1378 Cfd_results_arm - EXPRESS ARM

*) 

SCHEMA Cfd_results_arm;

USE FROM Analysis_arm;             --ISO/TS 10303-1372

USE FROM Mesh_connectivity_arm;    --ISO/TS 10303-1384

USE FROM Mesh_topology_arm;        --ISO/TS 10303-1386

USE FROM Support_resource_arm;     --ISO/TS 10303-1800

TYPE cfdr_property_distribution_select = EXTENSIBLE SELECT BASED_ON property_distribution_select  WITH (
   Model_property_distribution);
END_TYPE; 

TYPE flow_solution_data_name = EXTENSIBLE ENUMERATION OF 
  (potential,
   stream_function,
   density,
   pressure,
   temperature,
   energy_internal,
   enthalpy,
   entropy,
   entropy_approx,
   density_stagnation,
   pressure_stagnation,
   temperature_stagnation,
   energy_stagnation,
   enthalpy_stagnation,
   energy_stagnation_density,
   velocity_x,
   velocity_y,
   velocity_z,
   velocity_r,
   velocity_theta,
   velocity_phi,
   velocity_magnitude,
   velocity_normal,
   velocity_tangential,
   velocity_sound,
   velocity_sound_stagnation,
   momentum_x,
   momentum_y,
   momentum_z,
   momentum_magnitude,
   energy_kinetic,
   pressure_dynamic,
   vorticity_x,
   vorticity_y,
   vorticity_z,
   vorticity_magnitude,
   skin_friction_x,
   skin_friction_y,
   skin_friction_z,
   skin_friction_magnitude,
   velocity_angle_x,
   velocity_angle_y,
   velocity_angle_z,
   velocity_unit_vector_x,
   velocity_unit_vector_y,
   velocity_unit_vector_z,
   mass_flow,
   viscosity_kinematic,
   viscosity_molecular,
   viscosity_eddy,
   thermal_conductivity,
   ideal_gas_constant,
   specific_heat_pressure,
   specific_heat_volume,
   Reynolds_stress_xx,
   Reynolds_stress_xy,
   Reynolds_stress_xz,
   Reynolds_stress_yy,
   Reynolds_stress_yz,
   Reynolds_stress_zz);
END_TYPE;

ENTITY Mbna_discrete_data
SUBTYPE OF (Mbna_result);
  gridloc : mesh_location;
END_ENTITY;


ENTITY Mbna_discrete_data_with_rind
SUBTYPE OF (Mbna_discrete_data);
  rind_planes : Rind;
END_ENTITY;

ENTITY Mbna_history
SUBTYPE OF (Mbna_result);
  notes : LIST [0 : ?] OF text;
INVERSE
  data : SET OF Property_distribution_description FOR physical_function;
END_ENTITY;


ENTITY Mbna_result
SUPERTYPE OF (ONEOF(
  mbna_solution,
  mbna_history,
  mbna_discrete_data))
SUBTYPE OF (Model_property_distribution);
END_ENTITY;

ENTITY Mbna_solution
SUBTYPE OF (Mbna_result);
  gridloc : mesh_location;
INVERSE
  solution : SET OF Property_distribution_description FOR physical_function;
END_ENTITY;


ENTITY Mbna_solution_with_rind
SUBTYPE OF (Mbna_solution);
  rind_planes : Rind;
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 6717 - ISO/TS 10303-1379 Cfd_specified_general_property_arm - EXPRESS ARM

*) 

SCHEMA Cfd_specified_general_property_arm;

USE FROM Activity_arm;                                --ISO/TS 10303-1047

USE FROM Activity_method_arm;                         --ISO/TS 10303-1049

USE FROM Analysis_arm;                                --ISO/TS 10303-1372

USE FROM Cfd_conditions_arm;                          --ISO/TS 10303-1375

USE FROM Cfd_equations_arm;                           --ISO/TS 10303-1376

USE FROM Cfd_model_arm;                               --ISO/TS 10303-1377

USE FROM Cfd_results_arm;                             --ISO/TS 10303-1378

USE FROM Elemental_geometric_shape_arm;               --ISO/TS 10303-1004

USE FROM External_item_identification_assignment_arm; --ISO/TS 10303-1128

USE FROM External_model_arm;                          --ISO/TS 10303-1033

USE FROM Foundation_representation_arm;

USE FROM Independent_property_arm;

USE FROM Process_property_assignment_arm;

USE FROM Product_view_definition_arm;

USE FROM Product_view_definition_relationship_arm;

USE FROM Property_assignment_arm;

USE FROM Resource_property_assignment_arm;

USE FROM Shape_property_assignment_arm;

TYPE choose_general_property_identifier = EXTENSIBLE SELECT 
  (defined_data_name,
   External_item_identification);
END_TYPE;

TYPE choose_geometry_location = EXTENSIBLE SELECT 
  (External_geometric_model,
   Geometric_model);
END_TYPE;

TYPE choose_representation_context_identifier = EXTENSIBLE SELECT 
  (defined_data_class,
   External_item_identification);
END_TYPE;

TYPE defined_data_class = EXTENSIBLE ENUMERATION OF 
  (unspecified,
   application_defined,
   dimensional,
   normalised_by_dimensional,
   normalise_by_unknown_dimensional,
   dimensionless_parameter,
   dimensionless_constant);
END_TYPE;

TYPE defined_data_name = EXTENSIBLE SELECT 
  (coordinate_data_name,
   fd_defined_data_name);
END_TYPE;

TYPE fd_defined_data_name = EXTENSIBLE SELECT 
  (fd_nondimensional_parameter_name,
   flow_solution_data_name,
   force_moment_data_name,
   gas_model_data_name,
   riemann_1d_data_name,
   thermal_conductivity_model_data_name,
   turbulence_closure_data_name,
   turbulence_model_data_name,
   viscosity_model_data_name);
END_TYPE;

TYPE fd_nondimensional_parameter_name = EXTENSIBLE ENUMERATION OF
  (Mach,
   Mach_velocity,
   Mach_velocity_sound,
   Reynolds,
   Reynolds_velocity,
   Reynolds_length,
   Reynolds_viscosity_kinematic,
   Prandtl,
   Prandtl_thermal_conductivity,
   Prandtl_viscosity_molecular,
   Prandtl_specific_heat_pressure,
   specific_heat_ratio,
   specific_heat_ratio_pressure,
   specific_heat_ratio_volume,
   coef_pressure,
   coef_skin_friction_x,
   coef_skin_friction_y,
   coef_skin_friction_z,
   coef_pressure_dynamic,
   coef_pressure_reference,
   length_reference);
END_TYPE;

TYPE mbna_property_distribution_select = EXTENSIBLE SELECT BASED_ON property_distribution_select WITH
  (Model_property_distribution);
END_TYPE;

TYPE value_context_select = EXTENSIBLE SELECT 
  (Activity,
   Activity_method,
   Independent_property,
   Product_view_definition,
   Representation_item,
   Shape_element,
   defined_data_class,
   External_item_identification,
   Activity_property,
   Assigned_property,
   Independent_property_relationship,
   Resource_property);
END_TYPE;

ENTITY Geometry_reference;
  description : STRING;
  data : choose_geometry_location;
END_ENTITY;

ENTITY Specified_general_property
SUBTYPE OF (Independent_property);
  name_specifier : choose_general_property_identifier;
END_ENTITY;

ENTITY Specified_representation_context
SUBTYPE OF (Representation_context);
  class_specifier : choose_representation_context_identifier;
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N8307 - ISO/TS 10303-1661 Change management - EXPRESS ARM
*)

SCHEMA Change_management_arm;

USE FROM Approval_arm;	-- ISO/TS 10303-1012
USE FROM Basic_data_representation_arm;	-- ISO/TS 10303-1773
USE FROM Product_version_relationship_arm; -- ISO/TS 10303-1020
USE FROM Support_resource_arm;

TYPE dm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH
	(Frozen_assignment);
END_TYPE;

TYPE change_management_object = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

TYPE change_relationship_select = EXTENSIBLE GENERIC_ENTITY SELECT (
  Product_version_relationship);
END_TYPE;

ENTITY Change;
  id : OPTIONAL identifier;
  name : label;
  description : OPTIONAL text;
  described_change: OPTIONAL change_relationship_select; -- maps to group_assignment
END_ENTITY; 

ENTITY Change_element
  ABSTRACT SUPERTYPE OF (ONEOF
	(Modify_element,
	 Modify_single_element,
     Delete_element,
	 Add_element));
  attribute_name : OPTIONAL STRING; -- maps to group.name
  change_location_in_aggregate_attribute : OPTIONAL LIST [1:?] OF INTEGER; -- maps to property_definition,...,integer_representation_item
  change_set : Change;  -- map to group_relationship
END_ENTITY;

ENTITY Change_element_sequence;
  description : OPTIONAL text;
  previous : Change_element;
  next : Change_element;
END_ENTITY;  

ENTITY Add_element
  SUBTYPE OF (Change_element);
  current_design_object : SET [1:?] OF change_management_object; -- maps to group_assignment
END_ENTITY;

ENTITY Modify_element
  SUBTYPE OF (Change_element);
  current_design_object  : SET [1:?] OF change_management_object;
END_ENTITY;

ENTITY Modify_single_element
  SUBTYPE OF (Change_element);
  current_design_object  : change_management_object;
  previous_design_object : change_management_object;
WHERE
  WR1: current_design_object <> previous_design_object;
END_ENTITY;

ENTITY Delete_element
  SUBTYPE OF (Change_element);
  previous_design_object : SET [1:?] OF change_management_object;
END_ENTITY;

ENTITY Frozen_assignment;
  frozen_item : SET[1:?] OF change_management_object;
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7957 - ISO/TS 10303-1654 Characteristic - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7394
*)

SCHEMA Characteristic_arm;
  USE FROM Basic_data_representation_arm;  -- ISO/TS 10303-1773
  USE FROM Document_assignment_arm;	-- ISO/TS 10303-1122
  USE FROM Extended_measure_representation_arm;	-- ISO/TS 10303-1106
  USE FROM External_library_arm; -- ISO/TS 10303-1778
  USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753
  USE FROM External_properties_arm;  -- ISO/TS 10303-1129 LK
  USE FROM Property_assignment_arm; -- ISO/TS 10303-1030
  REFERENCE FROM Support_resource_arm(bag_to_set); 
  
  REFERENCE FROM Qualified_measure_arm(pre_defined_type_qualifiers); -- ISO/CD-TS 10303-1782  	
  
  TYPE characteristic = SELECT
    (String_representation_item,
    Numerical_item_with_unit,
    Value_list,
    Value_set);
  END_TYPE;

  TYPE characteristic_data_table_cell = SELECT ( 
    Null_representation_item, 
    String_representation_item, 
    Numerical_item_with_global_unit,
    Numerical_item_with_unit, 
    Value_list, 
    Value_set); 
  END_TYPE; 

  TYPE c_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
    (Property_value_representation);
  END_TYPE; 
  
  TYPE range_class = ENUMERATION OF
    (closed,
     lower_open,
     upper_open,
     open);
  END_TYPE;

  TYPE scalar_or_coordinated_characteristics = SELECT
    (Property_value_representation,
     characteristic);
  END_TYPE;

  ENTITY Characteristic_data_table_header_usage 
    SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition : Characteristic_data_table_header;
    SELF\Property_definition_representation.used_representation : Characteristic_data_table_representation;
  END_ENTITY;

  ENTITY Characteristic_data_table
    SUBTYPE OF (Representation_item);
      property_value : LIST[1:?] OF Characteristic_data_table_row;
    WHERE
      WR1: SIZEOF(QUERY( pv <* property_value |
                  NOT (SIZEOF(pv.cell) = SIZEOF(property_value[1].cell))
                  )) = 0;
  END_ENTITY;

  ENTITY Characteristic_data_table_representation
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[1:1] OF Characteristic_data_table;
  INVERSE
    header : Characteristic_data_table_header_usage FOR used_representation;      
  END_ENTITY;

  ENTITY Characteristic_data_table_row
    SUBTYPE OF (Representation_item);
      cell : LIST [1:?] OF characteristic_data_table_cell;
  END_ENTITY;

  ENTITY Characteristic_data_column_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      table_header_usage : Characteristic_data_table_header_decomposition FOR related;  
  END_ENTITY;

  ENTITY Characteristic_data_table_header 
    SUBTYPE OF (Independent_property);
    INVERSE
      column : SET [2:?] OF Characteristic_data_table_header_decomposition FOR relating;    
  END_ENTITY;

  ENTITY Characteristic_data_column_header_link
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating RENAMED precedent : Characteristic_data_column_header;
      SELF\Independent_property_relationship.related RENAMED subsequent : Characteristic_data_column_header;
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'sequence'; 
    UNIQUE
      UR1 : precedent, subsequent;
    WHERE
      WR1: subsequent <> precedent;
  END_ENTITY; 

  ENTITY Characteristic_data_table_header_decomposition
    SUBTYPE OF (Independent_property_relationship);
      SELF\Independent_property_relationship.relating : Characteristic_data_table_header;
      SELF\Independent_property_relationship.related : Characteristic_data_column_header;
    DERIVE
      SELF\Independent_property_relationship.relation_type : STRING := 'decomposition';
  END_ENTITY;

  ENTITY Externally_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
      external_source : External_source;
    WHERE
      WR1: NOT(name IN pre_defined_type_qualifiers);
  END_ENTITY;

  ENTITY Length_tolerance_characteristic
    SUBTYPE OF(Tolerance_characteristic);
    WHERE
      WR1 : ('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
            ('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
         )) = 0);
      WR2 : NOT('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR3 : NOT('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
           )) = 1);
      WR4 : NOT EXISTS(SELF\Representation.description);
      WR5 : NOT('CHARACTERISTIC_ARM.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN TYPEOF(SELF)) OR
        (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT(('EXTENDED_MEASURE_REPRESENTATION_ARM.VALUE_WITH_TOLERANCES' IN TYPEOF(it)) AND
             ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it\Value_with_tolerances.item_value)))
         )) = 0);
  END_ENTITY;

  ENTITY Maximum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'maximum';      
  END_ENTITY;

  ENTITY Minimum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'minimum';      
  END_ENTITY;

  ENTITY Nominal_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: SELF\Representation.items[1]\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'nominal';
  END_ENTITY;

  ENTITY Null_representation_item 
    SUBTYPE OF (Representation_item); 
  END_ENTITY; 

  ENTITY Plus_minus_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_with_tolerances;
  END_ENTITY;

  ENTITY Qualified_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:4] OF Qualified_numerical_item_with_unit;
    WHERE
      WR1: valid_qualified_tolerance_characteristic(SELF);
  END_ENTITY;

  ENTITY Range_characteristic
    SUBTYPE OF (Property_value_representation);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
      range_type				: range_class;
    WHERE
      WR1 : TYPEOF(SELF\Representation.items[1]) =
          TYPEOF(SELF\Representation.items[2]);
      WR2 : TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit) =
          TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
      WR3 : valid_range(SELF\Representation.items[1],
                      SELF\Representation.items[2]);          
  END_ENTITY;

  ENTITY Statistical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [2:?] OF Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Symmetrical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items |
        'VALUE_WITH_UNIT_EXTENSION_ARM.RATIO_DATA_ELEMENT' IN TYPEOF(ri))) = 1;
  END_ENTITY;

  ENTITY Text_representation_item
  	SUBTYPE OF (String_representation_item);
  END_ENTITY;

  ENTITY Tolerance_characteristic
    ABSTRACT SUPERTYPE OF ((ONEOF (
      Maximum_tolerance_characteristic,
      Minimum_tolerance_characteristic,
      Nominal_tolerance_characteristic,
      Plus_minus_tolerance_characteristic,
      Qualified_tolerance_characteristic,
      Statistical_tolerance_characteristic,
      Symmetrical_tolerance_characteristic,
      Typical_tolerance_characteristic
      )) ANDOR Length_tolerance_characteristic)
    SUBTYPE OF (Property_value_representation);
    WHERE
      WR1: SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
      WR2 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Typical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET [1:1] OF Value_limit;
    WHERE
      WR1: SELF\Representation.items[1]\Value_limit.qualifiers[1]\Type_qualifier.name = 'typical';      
  END_ENTITY;

  FUNCTION valid_qualified_tolerance_characteristic (input : Qualified_tolerance_characteristic) : BOOLEAN;
 --no more than one of the Type_qualifier.name shall be 'nominal'
 --no more than one of the Type_qualifier.name shall be 'typical'
 --no more than one of the Type_qualifier.name shall be 'maximium'
 --no more than one of the Type_qualifier.name shall be 'minimum'
 --Type_qualifier.name shall be drawn only from 'nominal', 'typical' , 'maximium', 'minimum'
  LOCAL
     bag_data : BAG OF STRING := [];
     valid_set : SET OF STRING := ['nominal', 'typical' , 'maximium', 'minimum'];
  END_LOCAL;
  REPEAT i := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items);
    REPEAT j := 1 TO SIZEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers);
     IF 'QUALIFIED_MEASURE_ARM.TYPE_QUALIFIER' IN TYPEOF(input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j])
      THEN
        bag_data := bag_data + input\Qualified_tolerance_characteristic.items[i]\Qualified_representation_item.qualifiers[j]\Type_qualifier.name;
     END_IF;
    END_REPEAT;
  END_REPEAT;

  IF (SIZEOF(bag_to_set(bag_data)) = SIZEOF(bag_data)) AND
     (VALUE_UNIQUE(bag_data)) AND 
     (SIZEOF(valid_set * bag_data) = SIZEOF(bag_data)) 
  THEN RETURN(TRUE);
  END_IF;
    
   RETURN(FALSE);
  END_FUNCTION; 

  FUNCTION valid_range(input1 : Numerical_item_with_unit;
                       input2 : Numerical_item_with_unit) : BOOLEAN;
    RETURN(TRUE);
  END_FUNCTION; 

  SUBTYPE_CONSTRAINT exclusive_property_value_representation_characteristic FOR Property_value_representation;
    ONEOF (Range_characteristic, Tolerance_characteristic);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT type_qualifier_subtypes FOR Type_qualifier;
    ONEOF(Externally_defined_type_qualifier, Pre_defined_type_qualifier);
  END_SUBTYPE_CONSTRAINT;
  
  SUBTYPE_CONSTRAINT independent_property_subtypes FOR Independent_property;
    ONEOF (Characteristic_data_table_header, Characteristic_data_column_header);
  END_SUBTYPE_CONSTRAINT;
  
  SUBTYPE_CONSTRAINT c_representation_item_subtypes FOR Representation_item; 
	(ONEOF (Characteristic_data_table,
	  Characteristic_data_table_row));
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6884 - ISO/TS 10303-1765 Characterizable object - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4296
*)

SCHEMA Characterizable_object_arm;

USE FROM Support_resource_arm;

ENTITY Characterizable_object;
  name : label;
  description : OPTIONAL text;
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7885 - ISO/CD-TS - 10303-1805 Characterized representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7322
*)

SCHEMA Characterized_representation_arm;

USE FROM Characterizable_object_arm; -- ISO/TS 10303-1765
USE FROM Elemental_geometric_shape_arm; -- ISO/TS 10303-1004
USE FROM Foundation_representation_arm;  -- ISO/TS 10303-1006;
REFERENCE FROM Foundation_representation_arm(using_representations); -- ISO/TS 10303-1006;
USE FROM Property_assignment_arm; -- ISO/TS 10303-1030

TYPE cr_property_assignment_select = SELECT BASED_ON property_assignment_select WITH (
  Characterized_representation,
  Characterized_item_within_representation);
END_TYPE; 

TYPE chained_representation_link = EXTENSIBLE GENERIC_ENTITY SELECT (
  Geometric_placement_operation,
  Representation_context,
  Representation_relationship);
END_TYPE;
 
ENTITY Characterized_representation 
  SUBTYPE OF (Representation, Characterizable_object);
END_ENTITY;

ENTITY Characterized_item_within_representation
  SUBTYPE OF (Characterizable_object);
  item : representation_item;
  rep : representation;
UNIQUE
  UR1: item, rep;
WHERE
  WR1: rep IN using_representations(item);
END_ENTITY;

ENTITY Characterized_chain_based_item_within_representation
  SUBTYPE OF (Characterized_item_within_representation);
  nodes : LIST [2:?] OF UNIQUE representation;
  undirected_link : LIST [1:?] OF UNIQUE chained_representation_link;
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6947 - ISO/TS 10303-1655 Chemical substance - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6222
*)

SCHEMA Chemical_substance_arm;   

USE FROM Assembly_structure_arm;	-- ISO/TS 10303-1026
USE FROM Generic_material_aspects_arm;	-- ISO/TS 10303-1681	
USE FROM Part_view_definition_arm;	-- ISO/TS 10303-1023
USE FROM Person_organization_assignment_arm; -- ISO/TS 10303-1013
USE FROM Product_view_definition_relationship_arm; -- ISO/TS 10303-1041
REFERENCE FROM Support_resource_arm (bag_to_set);  
 
  CONSTANT 
  -- normative reference: ISO 31-9, Annex A 
  -- posistion is identical to Atomic number 
  chemical_elements : LIST OF STRING := [
      'HYDROGEN',
      'HELIUM',
      'LITHIUM',
      'BERYLLIUM',
      'BORON',
      'CARBON',
      'NITROGEN',
      'OXYGEN',
      'FLUORINE',
      'NEON',
      'SODIUM',
      'MAGNESIUM',
      'ALUMINIUM',
      'SILICON',
      'PHOSPHORUS',
      'SULPHUR',
      'CHLORINE',
      'ARGON',
      'POTASSIUM',
      'CALCIUM',
      'SCANDIUM',
      'TITANIUM',
      'VANADIUM',
      'CHROMIUM',
      'MANGANESE',
      'IRON',
      'COBALT',
      'NICKEL',
      'COPPER',
      'ZINC',
      'GALLIUM',
      'GERMANIUM',
      'ARSENIC',
      'SELENIUM',
      'BROMINE',
      'KRYPTON',
      'RUBIDIUM',
      'STRONTIUM',
      'YTTRIUM',
      'ZIRCONIUM',
      'NIOBIUM',
      'MOLYBDENUM',
      'TECHNETIUM',
      'RUTHENIUM',
      'RHODIUM',
      'PALLADIUM',
      'SILVER',
      'CADMIUM',
      'INDIUM',
      'TIN',
      'ANTIMONY',
      'TELLURIUM',
      'IODINE',
      'XENON',
      'CAESIUM',
      'BARIUM',
      'LANTHANUM',
      'CERIUM',
      'PRASEODYMIUM',
      'NEODYMIUM',
      'PROMETHIUM',
      'SAMARIUM',
      'EUROPIUM',
      'GADOLINIUM',
      'TERBIUM',
      'DYSPROSIUM',
      'HOLMIUM',
      'ERBIUM',
      'THULIUM',
      'YTTERBIUM',
      'LUTETIUM',
      'HAFNIUM',
      'TANTALUM',
      'TUNGSTEN',
      'RHENIUM',
      'OSMIUM',
      'IRIDIUM',
      'PLATINUM',
      'GOLD',
      'MERCURY',
      'THALLIUM',
      'LEAD',
      'BISMUTH',
      'POLONIUM',
      'ASTATINE',
      'RADON',
      'FRANCIUM',
      'RADIUM',
      'ACTINIUM',
      'THORIUM',
      'PROTACTINIUM',
      'URANIUM',
      'NEPTUNIUM',
      'PLUTONIUM',
      'AMERICIUM',
      'CURIUM',
      'BERKELIUM',
      'CALIFORNIUM',
      'EINSTEINIUM',
      'FERMIUM',
      'MENDELEVIUM',
      'NOBELIUM',
      'LAWRENCIUM',
      'RUTHERFORDIUM',
      'DUBNIUM',
      'SEABORGIUM',
      'BOHRIUM',
      'HASSIUM',
      'MEITNERIUM',
      'DARMSTADTIUM',
      'ROENTGENIUM'];
  END_CONSTANT; 

  TYPE cs_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
    (Substance_view_definition);
  END_TYPE;

  TYPE substance_composition_basis = EXTENSIBLE ENUMERATION OF ( 
       VOLUME, 
       MASS, 
       MOLES, 
       ATOMS);      
  END_TYPE; 
 
  ENTITY Chemical_compound 
    SUBTYPE OF (Substance); 
    DERIVE
  	  id_owner: SET[0:?] OF Organization_or_person_in_organization_assignment :=
        QUERY(temp <* bag_to_set(USEDIN(SELF,'PERSON_ORGANIZATION_ASSIGNMENT_ARM.'+
        'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS')) |
                         (temp.role = 'id owner') );
    WHERE 
      WR1 : EXISTS (id_owner) AND (SIZEOF(id_owner) = 1);
  END_ENTITY; 
   
  ENTITY Chemical_element 
    SUBTYPE OF (Substance); 
  END_ENTITY; 
 
  ENTITY Physical_particle
    SUBTYPE OF (Substance);
  END_ENTITY;

  ENTITY Raw_material_definition_relationship
    SUBTYPE OF (View_definition_usage);
   	  SELF\View_definition_relationship.relating_view RENAMED application : Part_view_definition;
      SELF\View_definition_relationship.related_view RENAMED definition   : Substance_view_definition;  
    UNIQUE
      UR1: application;      
    WHERE
      WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY;
   
  ENTITY Substance
    SUPERTYPE OF (ONEOF(Chemical_element, Chemical_compound, Physical_particle))
    SUBTYPE OF (Product);    
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY; 
   
  ENTITY Substance_composition_relationship 
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.related_view RENAMED constituent : Substance_view_definition; 
      SELF\View_definition_relationship.relating_view RENAMED whole      : Substance_view_definition; 
      composition_basis                                                  : Substance_composition_basis;
      determination_method                                               : STRING; 
      amount 															 : Value_with_unit; 
    WHERE
      WR1 : 'VALUE_WITH_UNIT_ARM.RATIO_UNIT' IN TYPEOF(amount.unit);      
      WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
  END_ENTITY; 

  ENTITY Substance_version 
    SUBTYPE OF (Product_version); 
    SELF\Product_version.of_product : Substance; 
  END_ENTITY; 
  
  ENTITY Substance_view_definition 
    SUBTYPE OF (Product_view_definition); 
    SELF\Product_view_definition.defined_version : Substance_version; 
  END_ENTITY; 

  RULE substance_version_constraint FOR (Product_version);
    WHERE
      WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
  END_RULE; 

  RULE substance_view_definition_constraint FOR (Product_view_definition);
    WHERE
      WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
  END_RULE; 

  RULE chemical_element_constraint FOR (Product);
    WHERE
      WR1: SIZEOF ( QUERY ( p <* Product | 
               (('CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF (p) ) AND ((p\Product.name) IN chemical_elements) ) 
                OR
               (NOT('CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF (p) ) AND NOT((p\Product.name) IN chemical_elements) ))) =
        SIZEOF ( Product);
  END_RULE; 

END_SCHEMA; 
(*
 ISO TC184/SC4/WG12 N3022 - ISO/TS 10303-1070 Class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2258
*) 


SCHEMA Class_arm;


ENTITY Class
  SUPERTYPE OF (ONEOF (Class_by_extension,
                       Class_by_intension));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Class_by_extension
  SUBTYPE OF (Class);
END_ENTITY;

ENTITY Class_by_intension
  SUBTYPE OF (Class);
END_ENTITY;

END_SCHEMA;  -- Class_arm

(*
 ISO TC184/SC4/WG12 N3248 - ISO/TS 10303-1114 Classification assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2229
*)

SCHEMA Classification_assignment_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070


TYPE classification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Classification_assignment;
  assigned_class : Class;
  items : SET[1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- Classification_assignment_arm
(*
 ISO TC184/SC4/WG12 N7960 - ISO/TS 10303-1111 Classification with attributes - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7397
*)

SCHEMA Classification_with_attributes_arm;

USE FROM Classification_assignment_arm;

USE FROM Extended_measure_representation_arm;

USE FROM Independent_property_arm;

USE FROM Identification_assignment_arm;

USE FROM Plib_class_reference_arm;

USE FROM Product_view_definition_arm;

TYPE classification_item_extended = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
	classified_element_select) ;
END_TYPE;

TYPE classified_element_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Product, 
	Product_version,
	Product_view_definition) ;
END_TYPE;

TYPE external_class_select = SELECT(Plib_class_reference, External_class);
END_TYPE;

TYPE definable_objects = SELECT (
	Product, 
	Product_version, 
	Product_view_definition);
END_TYPE;

ENTITY Class_with_attributes
SUBTYPE OF (Class);
  version_id: OPTIONAL STRING;
  used_classification_system: OPTIONAL Classification_system;
INVERSE
  characterization_attributes: SET[0:?] OF Classification_attribute FOR characterized_class;
END_ENTITY;

ENTITY Class_hierarchy;
  super_class: Class_with_attributes;
  sub_class: Class_with_attributes;
END_ENTITY;

ENTITY Classification_association
SUBTYPE OF (Classification_assignment);
   SELF\Classification_assignment.assigned_class: Class_with_attributes;
   definitional: LOGICAL;
WHERE
WR1: NOT(definitional = TRUE) OR
       (SIZEOF(QUERY(it<* SELF\Classification_assignment.items | 
                 NOT('CLASSIFICATION_WITH_ATTRIBUTES_ARM.DEFINABLE_OBJECTS' IN TYPEOF(it)) )) = 0);
WR2: SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('CLASSIFICATION_WITH_ATTRIBUTES_ARM.CLASSIFIED_ELEMENT_SELECT' IN TYPEOF(it)) )) =0;
END_ENTITY;

ENTITY Classification_attribute;
   id: STRING;
   name: OPTIONAL STRING;
   description: OPTIONAL STRING;
   allowed_values: OPTIONAL SET[1:?] OF Measure_item;
   characterized_class: Class_with_attributes;
   attribute_definition: Independent_property;
END_ENTITY;

ENTITY Classification_system;
  id: STRING;
  description: OPTIONAL STRING;
END_ENTITY;

ENTITY External_class_with_attributes
SUBTYPE OF (Class_with_attributes);
  source: external_class_select;
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N6025 - ISO/TS 10303-1396 Collection identification and version - EXPRESS ARM
*) 


SCHEMA Collection_identification_and_version_arm;

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Product_relationship_arm;    -- ISO/TS 10303-1024

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE collection_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE collection_member_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Collection
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Collection_assignment;
  collection : Collection_view_definition;
----  is_assigned_to : collection_assignment_select;
END_ENTITY;

ENTITY Collection_membership;
----  member : collection_member_select;
  of_collection : Collection_view_definition;
END_ENTITY;

ENTITY Collection_relationship
  SUBTYPE OF (Product_relationship);
  SELF\Product_relationship.relating_product RENAMED relating_collection : Collection;
  SELF\Product_relationship.related_product RENAMED related_collection : Collection;
END_ENTITY;

ENTITY Collection_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product RENAMED of_collection : Collection;
END_ENTITY;

ENTITY Collection_version_relationship
  SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version : Collection_version;
  SELF\Product_version_relationship.related_version : Collection_version;
END_ENTITY;

ENTITY Collection_version_sequence_relationship
  SUBTYPE OF (Collection_version_relationship);
  SELF\Product_version_relationship.relating_version RENAMED predecessor : Collection_version;
  SELF\Product_version_relationship.related_version RENAMED successor : Collection_version;
END_ENTITY;

ENTITY Collection_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Collection_version;
END_ENTITY;

END_SCHEMA;  -- Collection_identification_and_version_arm

(*
ISO TC184/SC4/WG12 N4242 - ISO/TS 10303-1002 Colour - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N671
*) 


SCHEMA Colour_arm; 


ENTITY Colour;
  name : STRING;
END_ENTITY;

ENTITY Externally_defined_colour
  SUBTYPE OF (Colour);
  source : STRING;
END_ENTITY;

ENTITY Pre_defined_colour
  SUBTYPE OF (Colour);
WHERE
  WR1: SELF.name IN ['red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'black', 'white'];
END_ENTITY;

ENTITY User_defined_colour
  SUBTYPE OF (Colour);
  red : REAL;
  green : REAL;
  blue : REAL;
WHERE
  WR1: {0.0 <= red <= 1.0};
  WR2: {0.0 <= green <= 1.0};
  WR3: {0.0 <= blue <= 1.0};
END_ENTITY;

END_SCHEMA;  -- Colour_arm
(*
   ISO TC184/SC4/WG12 N7963 - ISO/TS 10303-1657 Component feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7400
*)

SCHEMA Component_feature_arm;

	USE FROM Assembly_component_arm;
	USE FROM Assembly_shape_arm;

	TYPE cf_groupable_item = SELECT BASED_ON groupable_item WITH 
	   (Component_feature);
	END_TYPE; 

  ENTITY Component_feature
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Definitional_shape_element);
      definition           : OPTIONAL General_part_feature;
      SELF\Shape_element.containing_shape RENAMED associated_component : Assembly_component;
    UNIQUE
      UR1 : definition,associated_component;
      UR2 : SELF\Shape_element.element_name, associated_component;
  END_ENTITY;

  ENTITY Component_feature_joint
     ABSTRACT SUPERTYPE
  SUBTYPE OF (Component_feature_relationship, Shape_element);
    SELF\Component_feature_relationship.relating RENAMED feature_1 : Component_feature;
    SELF\Component_feature_relationship.related  RENAMED feature_2 : Component_feature;
    SELF\Shape_element.containing_shape RENAMED associated_definition : Item_shape;
    WHERE
      WR1 : feature_1 <> feature_2;
      WR2 : 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION' in TYPEOF(associated_definition);
      WR3 : associated_definition :=: feature_1\Shape_element.containing_shape;      
      WR4 : associated_definition :=: feature_2\Shape_element.containing_shape;      
  END_ENTITY;

  ENTITY Component_feature_make_from_relationship
		SUBTYPE OF (Component_feature_relationship);
      SELF\Shape_element_relationship.relating RENAMED reusable_feature	: Component_feature;
      SELF\Shape_element_relationship.related RENAMED resultant_feature	: Component_feature;
  END_ENTITY;

  ENTITY Component_feature_relationship
    SUPERTYPE OF (ONEOF(Component_feature_joint,
      Component_feature_make_from_relationship))
  	SUBTYPE OF (Shape_element_relationship);
      SELF\Shape_element_relationship.relating : Component_feature;  	
      SELF\Shape_element_relationship.related  : Component_feature;
  END_ENTITY;

  ENTITY Component_terminal
     ABSTRACT SUPERTYPE
    SUBTYPE OF (Component_feature);
      local_swappable  : OPTIONAL BOOLEAN;
      global_swappable : OPTIONAL BOOLEAN;
      swap_code        : OPTIONAL STRING;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7966 - ISO/TS 10303-1656 Component grouping - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7403
*)

SCHEMA Component_grouping_arm;

	USE FROM Assembly_component_arm;	-- ISO/TS 10303-1691
	REFERENCE FROM Support_resource_arm (bag_to_set); 
	
  ENTITY Array_placement_group
    ABSTRACT SUPERTYPE OF(ONEOF (Linear_array_placement_group_component,
		Rectangular_array_placement_group_component))
    SUBTYPE OF (Assembly_group_component);
  END_ENTITY;

  ENTITY Assembly_component_placement_link;
      precedent_element  : Assembly_component;
      subsequent_element : Assembly_component;
    INVERSE
      referenced_by : linear_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_assembly_component_placement_link(SELF,
         [subsequent_element],
         'COMPONENT_GROUPING_ARM.ASSEMBLY_COMPONENT_PLACEMENT_LINK');
  END_ENTITY;
      
  ENTITY Assembly_group_component
    SUBTYPE OF (Assembly_component, Single_instance);
    INVERSE
      components : SET[1:?] OF next_assembly_usage FOR relating_view;
    WHERE
      WR1: SIZEOF(QUERY(co <* components | NOT(('PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT') IN TYPEOF(co\Product_occurrence_definition_relationship.related_view)))) = 0;
  END_ENTITY;

  ENTITY Linear_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                               : SET[1:?] OF Assembly_component_placement_link;
      initial_node_positive_x_displacement  : Length_data_element;
      terminus_node_positive_x_displacement : Length_data_element;
      location_uncertainty                  : Length_data_element;
    WHERE  
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_ac(element);
  END_ENTITY;

  ENTITY Linear_array_placement_group_component_link;
      precedent_element  : Linear_array_placement_group_component;
      subsequent_element : Linear_array_placement_group_component;
    INVERSE
      referenced_by : rectangular_array_placement_group_component FOR element;
    WHERE
      WR1:  acyclic_linear_array_placement_group_component_link(SELF,
         [subsequent_element],
         'COMPONENT_GROUPING_ARM.LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK');
  END_ENTITY;

  ENTITY Rectangular_array_placement_group_component
    SUBTYPE OF (Array_placement_group);
      element                              : SET[1:?] OF Linear_array_placement_group_component_link;
      initial_row_positive_y_displacement  : Length_data_element;
      terminus_row_positive_y_displacement : Length_data_element;
      location_uncertainty                 : Length_data_element;
    WHERE
      WR1 : (1 + SIZEOF(element)) = cg_get_sz_lapgc(element);
  END_ENTITY;

FUNCTION acyclic_assembly_component_placement_link
  (relation : Assembly_component_placement_link; relatives : SET[1:?] OF
  Assembly_component; specific_relation : STRING) : BOOLEAN; 
LOCAL
    x : SET OF Assembly_component_placement_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
        'COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_COMPONENT_PLACEMENT_LINK.' +
        'SUBSEQUENT_ELEMENT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_assembly_component_placement_link(x[i], relatives +
        relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

FUNCTION acyclic_linear_array_placement_group_component_link
  (relation : Linear_array_placement_group_component_link; relatives :
  SET[1:?] OF Linear_array_placement_group_component; specific_relation : STRING): BOOLEAN; 
LOCAL
      x : SET OF Linear_array_placement_group_component_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
     x := QUERY(pd <* bag_to_set(USEDIN(relation.precedent_element,
       'COMPONENT_GROUPING_ARM.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK.' + 'SUBSEQUENT_ELEMENT'))
       | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_linear_array_placement_group_component_link(x[i], relatives
        + relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

FUNCTION cg_get_sz_ac (input : SET[1:?] OF Assembly_component_placement_link) : INTEGER;
LOCAL
    ac : SET OF Assembly_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac + input[i]\Assembly_component_placement_link.precedent_element +
      input[i]\Assembly_component_placement_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

FUNCTION cg_get_sz_lapgc (input : SET[1:?] OF Linear_array_placement_group_component_link) : INTEGER;
LOCAL
  ac : SET OF Linear_array_placement_group_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac +
        input[i]\Linear_array_placement_group_component_link.precedent_element +
        input[i]\Linear_array_placement_group_component_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));
END_FUNCTION; 

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7780 - ISO/TS 10303-1767 Composite constituent shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7406
*)

SCHEMA Composite_constituent_shape_arm;

USE FROM Advanced_boundary_representation_arm; -- ISO/TS 10303-1514

USE FROM Construction_geometry_arm; -- ISO/TS 10303-1131

USE FROM Constructive_solid_geometry_3d_arm; -- ISO/TS 10303-1068

USE FROM Curve_swept_solid_arm; -- ISO/TS 10303-1659

USE FROM Edge_based_wireframe_arm; -- ISO/TS 10303-1501

USE FROM Elementary_boundary_representation_arm; -- ISO/TS 10303-1329

USE FROM Faceted_boundary_representation_arm; -- ISO/TS 10303-1512

USE FROM Geometrically_bounded_surface_arm; -- ISO/TS 10303-1507

USE FROM Geometrically_bounded_wireframe_arm; -- ISO/TS 10303-1510

USE FROM Manifold_surface_arm; -- ISO/CD-TS 10303-1509

USE FROM Shell_based_wireframe_arm; -- ISO/TS 10303-1502

USE FROM Tessellated_geometry_arm; -- ISO/TS 10303-1819

USE FROM Value_with_unit_extension_arm; -- ISO/TS 10303-1753

  TYPE boundary_class_zone = SELECT 
    (Boundary_curve_representation,
     Loop);
  END_TYPE;

  TYPE composite_assembly_shape = SELECT 
    (Advanced_brep_shape_representation,
     Edge_based_wireframe_shape_representation,
     Faceted_brep_shape_representation,
     Geometrically_bounded_surface_shape_representation,
     Geometrically_bounded_wireframe_shape_representation,
     Manifold_surface_shape_representation,
     Shell_based_wireframe_shape_representation,
     Tessellated_shape_representation,
     Three_d_geometry_set);
  END_TYPE;

  TYPE core_shape = SELECT 
    (Advanced_brep_shape_representation,
     Beveled_sheet_representation,
     Faceted_brep_shape_representation);
  END_TYPE;

  TYPE ply_laminate_shape = EXTENSIBLE GENERIC_ENTITY SELECT 
    (Advanced_brep_shape_representation,
     Composite_sheet_representation,
     Csg_model,
     Curve_swept_solid,
     Elementary_brep_shape_representation,
     Faceted_brep_shape_representation,
     Tessellated_shape_representation,
     Three_d_geometry_set);
  END_TYPE; 
 
  TYPE ply_piece_shape = SELECT 
    (Ply_shape);
  END_TYPE;
  
  TYPE projection_method = ENUMERATION OF 
    (projection_reference,
     surface_normal);
  END_TYPE;
 
  ENTITY Beveled_sheet_representation
    SUBTYPE OF (Constituent_shape_representation);
      bevel_angle             : Angle_data_element;
      boundary_surface        : Composite_sheet_representation;
      vertical_profile_height : Length_data_element;
  END_ENTITY;

  ENTITY Boundary_curve_representation;
    bounds : SET [1:?] OF Curve;
  END_ENTITY;

  ENTITY Composite_sheet_representation
    SUPERTYPE OF (ONEOF(Face_based_sheet_representation, Geometric_sheet_representation))
    SUBTYPE OF (Constituent_shape_representation);
  END_ENTITY;

  ENTITY Constituent_shape_representation
    ABSTRACT SUPERTYPE OF (ONEOF(Three_d_geometry_set, Composite_sheet_representation, Beveled_sheet_representation))
    SUBTYPE OF (Geometric_model);
  END_ENTITY;

  ENTITY Face_based_sheet_representation
    SUBTYPE OF (Composite_sheet_representation);
      face_surface : Surface;
      inner_bounds : OPTIONAL SET [1:?] OF Loop;
      outer_bound  : Loop;
  END_ENTITY;

  ENTITY Flat_pattern_ply_shape
    SUBTYPE OF (Ply_shape);
      wrapup_origin_on_flat_pattern : Cartesian_point;
      wrapup_origin_on_surface      : Cartesian_point;
  END_ENTITY;

  ENTITY Geometric_sheet_representation
    SUBTYPE OF (Composite_sheet_representation);
      basis_surface : Surface;
      cutouts       : OPTIONAL SET [1:?] OF Boundary_curve_representation;
      outer_edge    : Boundary_curve_representation;
  END_ENTITY;

  ENTITY Laid_ply_shape
    SUBTYPE OF (Ply_shape);
  END_ENTITY;

  ENTITY Ply_shape
    SUPERTYPE OF (ONEOF(Projected_ply_shape, Laid_ply_shape, Flat_pattern_ply_shape));
      defining_model : ply_laminate_shape;
      basis : OPTIONAL Ply_shape;
  END_ENTITY;

  ENTITY Projected_ply_shape
    SUPERTYPE OF (ONEOF(View_ply_shape, Surface_ply_shape))
    SUBTYPE OF (Ply_shape);
      method               : projection_method;
      projection_direction : OPTIONAL Direction;
  END_ENTITY;

  ENTITY Surface_ply_shape
    SUBTYPE OF (Projected_ply_shape);
      offset       : Length_data_element;
      surface_role : STRING;
  END_ENTITY;

  ENTITY Three_d_geometry_set
    SUBTYPE OF (Constituent_shape_representation, Geometrically_bounded_surface_shape_representation);
      basis_role        : STRING;
      basis_surface     : Surface;
      defining_boundary : SET [1:?] OF Curve;
  END_ENTITY;

  ENTITY View_ply_shape
    SUBTYPE OF (Projected_ply_shape);
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6225 - ISO/TS 10303-1768 Composite material aspects - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5323
*)

SCHEMA Composite_material_aspects_arm;

USE FROM Part_and_zone_laminate_tables_arm; -- ISO/CD-TS 10303-1770

  TYPE compma_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
    (Anisotropic_material,
     Braided_assembly,
     Isotropic_material,
     Laminate_table,
     Woven_assembly);
  END_TYPE;

  ENTITY Composite_material_identification
    SUBTYPE OF (Material_identification);
      SELF\Material_identification.material_name RENAMED composite_material_name : STRING;
  END_ENTITY;

END_SCHEMA;


  
(*
 ISO TC184/SC4/WG12 N7831 - ISO/TS 10303-1525 Composite surface - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7232
*)


SCHEMA Composite_surface_arm; 

USE FROM Basic_geometry_arm;  -- ISO 10303-1652

USE FROM B_spline_geometry_arm; -- ISO 10303-1801

TYPE surface_transition_code = ENUMERATION OF
  (discontinuous,
   continuous,
   cont_same_gradient,
   cont_same_gradient_same_curvature);
END_TYPE;  

ENTITY Rectangular_composite_surface
  SUBTYPE OF (Bounded_surface);
  segments      : LIST [1:?] OF LIST [1:?] OF Surface_patch;
DERIVE
  n_u : INTEGER := SIZEOF(segments);
  n_v : INTEGER := SIZEOF(segments[1]);
WHERE
  WR1: SIZEOF(QUERY (s <* segments | n_v <> SIZEOF (s))) = 0;
END_ENTITY;

ENTITY Surface_patch;
  parent_surface : Bounded_surface;
  u_transition   : surface_transition_code;
  v_transition   : surface_transition_code;
  u_sense        : BOOLEAN;
  v_sense        : BOOLEAN;
INVERSE
  using_surfaces : BAG[1:?] OF Rectangular_composite_surface FOR segments;
END_ENTITY;
 
ENTITY Trimmed_surface
  SUBTYPE OF (Bounded_surface);
  basis_surface : surface;
  u1            : parameter_value;
  u2            : parameter_value;
  v1            : parameter_value;
  v2            : parameter_value;
  usense        : BOOLEAN;
  vsense        : BOOLEAN;
WHERE
  WR1: u1 <> u2;
  WR2: v1 <> v2;
END_ENTITY;

END_SCHEMA;  -- Composite_surface_arm

(*
   ISO TC184/SC4/WG12 N6761 - ISO/TS 10303-1327 Compound shape representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5326
*)
SCHEMA Compound_shape_representation_arm;

USE FROM Edge_based_wireframe_arm; -- ISO/TS 10303-1501

USE FROM Non_manifold_surface_arm; -- ISO/CD-TS 10303-1324

  ENTITY Compound_shape_representation
    SUBTYPE OF (Geometric_model);
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N6117 - ISO/TS 10303-1058 Configuration effectivity - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2949
*) 


SCHEMA Configuration_effectivity_arm;

USE FROM Assembly_structure_arm;    -- ISO/TS 10303-1026

USE FROM Configuration_item_arm;    -- ISO/TS 10303-1056

USE FROM Effectivity_arm;    -- ISO/TS 10303-1057

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041


TYPE item_usage_relationship_item = EXTENSIBLE GENERIC_ENTITY SELECT
   (Assembly_component_relationship, 
    View_definition_usage);
END_TYPE; 

ENTITY Item_usage_effectivity;
  effectivity_domain : Effectivity;
  item_usage_relationship : item_usage_relationship_item;
  resolved_configuration : Item_design_association;
END_ENTITY;

END_SCHEMA;  -- Configuration_effectivity_arm
(*
 ISO TC184/SC4/WG12 N6031 - ISO/TS 10303-1056 Configuration item - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2532
*) 


SCHEMA Configuration_item_arm;

USE FROM Product_concept_identification_arm;    -- ISO/TS 10303-1060

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE version_or_definition = SELECT
   (Product_version, 
    Product_view_definition);
END_TYPE; 

ENTITY Item_design_association;
  configuration : Product_configuration;
  design : version_or_definition;
UNIQUE
  UR1: configuration, design;
END_ENTITY;

ENTITY Product_configuration;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : Product_concept;
INVERSE
  corresponding_design : SET[0:1] OF Item_design_association FOR configuration;
END_ENTITY;

ENTITY Product_configuration_hierarchical_relationship
  SUBTYPE OF (Product_configuration_relationship);
  SELF\Product_configuration_relationship.related_product_configuration RENAMED child : Product_configuration;
  SELF\Product_configuration_relationship.relating_product_configuration RENAMED parent : Product_configuration;
END_ENTITY;

ENTITY Product_configuration_relationship
  SUPERTYPE OF (ONEOF (Product_configuration_hierarchical_relationship,
                       Product_configuration_revision_sequence));
  relating_product_configuration : Product_configuration;
  related_product_configuration : Product_configuration;
END_ENTITY;

ENTITY Product_configuration_revision_sequence
  SUBTYPE OF (Product_configuration_relationship);
  SELF\Product_configuration_relationship.relating_product_configuration RENAMED predecessor : Product_configuration;
  SELF\Product_configuration_relationship.related_product_configuration RENAMED successor : Product_configuration;
END_ENTITY;

END_SCHEMA;  -- Configuration_item_arm

(*
	ISO TC184/SC4/WG12 N7771 - ISO/TS 10303-1131 Construction geometry - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N5329
*) 

SCHEMA Construction_geometry_arm;

USE FROM Basic_curve_arm;    -- ISO/TS 10303-1651

  TYPE constructive_element_select = EXTENSIBLE GENERIC_ENTITY SELECT 
    (Axis_placement,  
     Curve,  
     Point,  
     Surface); 
  END_TYPE; 

  TYPE constructive_geometry_select = SELECT
    (Constructive_geometry, 
     Geometric_model);
  END_TYPE; 

  ENTITY Constructive_geometry
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items : SET [1:?] OF constructive_element_select;
  END_ENTITY;

  ENTITY Constructive_geometry_association;
      auxiliary_geometry : Constructive_geometry;
      base_geometry      : constructive_geometry_select;
      description        : STRING;
    WHERE
      WR1: auxiliary_geometry\Representation.context_of_items :=: base_geometry\Representation.context_of_items;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7972 - ISO/TS 10303-1731 Constructive solid geometry 2d - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7409
*) 
SCHEMA Constructive_solid_geometry_2d_arm;
 
USE FROM Area_2d_arm;	-- ISO/TS 10303-1631
USE FROM Basic_curve_arm; -- ISO/TS 10303-1651

  TYPE extend_or_chord_2_extend_or_truncate_or_round = ENUMERATION OF
    (truncate,
     chord_2_extend,
     round,
     extend);
  END_TYPE;

 TYPE extend_or_truncate = ENUMERATION OF
    (truncate,
     extend);
  END_TYPE;

  TYPE primitive_or_boolean_result_2d = SELECT (
    Primitive_2d, 
    Boolean_result_2d);
  END_TYPE;    

  TYPE square_or_round = ENUMERATION OF
    (square,
     round);
  END_TYPE;

  ENTITY Area_with_outer_boundary
    SUBTYPE OF (Primitive_2d);
  END_ENTITY;

  ENTITY Boolean_result_2d 	 
	SUBTYPE OF (Detailed_geometric_model_element); 	 
  END_ENTITY;
	   
  ENTITY Csg_2d_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET [1:?] OF primitive_or_boolean_result_2d;   
  WHERE
    WR1: SELF\Geometric_model.context_of_items\Geometric_coordinate_space.dimension_count = 2;
  END_ENTITY;

  ENTITY Curve_style_parameters
  	ABSTRACT SUPERTYPE OF (ONEOF (Closed_curve_style_parameters, Curve_style_parameters_with_ends));
      name              : STRING;
      corner_style      : extend_or_chord_2_extend_or_truncate_or_round;
      curve_width       : Length_data_element;
      width_uncertainty : OPTIONAL Length_data_element;
    UNIQUE
      UR1 : name;
  END_ENTITY;
  
  ENTITY Closed_curve_style_parameters
    SUBTYPE OF (Curve_style_parameters);
  END_ENTITY;

  ENTITY Curve_style_parameters_with_ends
    SUBTYPE OF (Curve_style_parameters);
      end_extension     : extend_or_truncate;
      end_style         : square_or_round;
  END_ENTITY;

  ENTITY Path_area_with_parameters
    SUBTYPE OF (Detailed_geometric_model_element);
    centreline : Curve;
    parameters : Curve_style_parameters;
  END_ENTITY;

  ENTITY Primitive_2d_with_inner_boundary
    SUBTYPE OF (Primitive_2d);
  END_ENTITY;

 ENTITY Single_area_csg_2d_model
    SUBTYPE OF (Csg_2d_model);
      SELF\Representation.items : SET [1:1] OF Primitive_2d;    
 END_ENTITY;

 ENTITY Single_boundary_csg_2d_model
    SUBTYPE OF (Single_area_csg_2d_model);
  END_ENTITY;

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N7822 - ISO/TS 10303-1068 Constructive solid geometry 3d - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6878
*) 


SCHEMA Constructive_solid_geometry_3d_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004
USE FROM Primitive_solids_arm; -- ISO/TS 10303-1801

ENTITY Csg_model
  SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;  -- Constructive_solid_geometry_3d_arm
(*
   ISO TC184/SC4/WG12 N7975 - ISO/TS 10303-1027 Contextual shape positioning - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7412
*) 

SCHEMA Contextual_shape_positioning_arm;

USE FROM Geometric_model_relationship_arm;
USE FROM Shape_property_assignment_arm;    --  ISO/TS 10303-1032


  TYPE template_instance = SELECT
    (Geometric_placement_operation, 
     Geometric_model_relationship_with_transformation);
  END_TYPE; 

  ENTITY Contextual_shape_representation;
      contextual_shape          : Contextual_item_shape;
      representing_relationship : Geometric_model_relationship;
    DERIVE
      context_representation    : geometric_representation_select := representing_relationship.rep_2 ;
      positioned_representation : geometric_representation_select := representing_relationship.rep_1 ;
  END_ENTITY;

  ENTITY Geometric_composition_with_operator_transformation
    SUBTYPE OF (Geometric_relationship_with_operator_transformation,
      Definitional_representation_relationship);
  END_ENTITY;

  ENTITY Geometric_composition_with_placement_transformation
    SUBTYPE OF (Geometric_relationship_with_placement_transformation,
      Definitional_representation_relationship);
  END_ENTITY; 

  ENTITY Geometric_placement_model
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items : SET[1:1] OF Geometric_placement_operation;
  END_ENTITY;

  ENTITY Geometric_model_relationship_with_transformation
    ABSTRACT SUPERTYPE OF (ONEOF (Geometric_relationship_with_placement_transformation,
      Geometric_relationship_with_operator_transformation))
    SUBTYPE OF (Geometric_model_relationship);
    WHERE  
      WR1: rep_1.context_of_items :<>: rep_2.context_of_items;
  END_ENTITY;

  ENTITY Geometric_relationship_with_operator_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: cartesian_transformation;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;

  ENTITY Geometric_relationship_with_placement_transformation
    SUBTYPE OF (Geometric_model_relationship_with_transformation);
      transformation: Axis_placement_mapping;
    WHERE
      WR1:  rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
  END_ENTITY;

  ENTITY Shape_placement_association
    SUBTYPE OF (Shape_description_association);
      SELF\Shape_description_association.used_representation : Geometric_placement_model;
      SELF\Shape_description_association.definition : Associated_contextual_item_shape;
  END_ENTITY;
  
  ENTITY Associated_contextual_item_shape
    SUBTYPE OF (Associated_item_shape, Contextual_item_shape);
  END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N7145 - ISO/TS 10303-1062 Contract - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6034
*) 


SCHEMA Contract_arm;


TYPE contract_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Contract;
  id : STRING;
  purpose : STRING;
  kind : STRING;
END_ENTITY;

ENTITY Contract_assignment;
  assigned_contract : Contract;
  items : SET[1:?] OF contract_item;
END_ENTITY;

ENTITY Contract_relationship;
  relating_contract : Contract;
  related_contract : Contract;
END_ENTITY;

END_SCHEMA;  -- Contract_arm
(*
   ISO TC184/SC4/WG12 N5335 - ISO/TS 10303-1775 Currency - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4690
*)

SCHEMA Currency_arm;

USE FROM Value_with_unit_arm; -- ISO/TS 10303-1054

  ENTITY Currency
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Unit);
  END_ENTITY;

  ENTITY Currency_value 
    SUBTYPE OF (Value_with_unit); 
      SELF\Value_with_unit.unit : Currency;
  END_ENTITY; 

  ENTITY Iso4217_currency 
    SUBTYPE OF (Currency);
  END_ENTITY; 

END_SCHEMA;
(*
	ISO TC184/SC4/WG12 N7672 - ISO/TS 10303-1003 Curve appearance - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7058
*) 

SCHEMA Curve_appearance_arm; 

USE FROM Styled_curve_arm; -- ISO/TS 10303-1749

  ENTITY Curve_appearance;
    colour : Colour;
    font   : Curve_font;
    width  : REAL;
  END_ENTITY;

  ENTITY Externally_defined_marker
    SUBTYPE OF (Marker);
      marker_reference : STRING;
  END_ENTITY;

  ENTITY Externally_defined_terminator
    SUBTYPE OF (Terminator);
      terminator_reference : STRING;
  END_ENTITY;

  ENTITY Marker;
  END_ENTITY;

  ENTITY Point_appearance;
    marker : Marker;
    colour : Colour;
    size : REAL;
  END_ENTITY;

  ENTITY Predefined_marker
    SUBTYPE OF (Marker);
  END_ENTITY;

  ENTITY Predefined_terminator
    SUBTYPE OF (Terminator);
  END_ENTITY;

  ENTITY Terminator;
  END_ENTITY;

  ENTITY User_defined_marker
    SUBTYPE OF (Marker);
      symbol : Geometric_model;
  END_ENTITY;

  ENTITY User_defined_terminator
    SUBTYPE OF (Terminator);
      symbol : Geometric_model;
  END_ENTITY;

  ENTITY Vector_appearance
    SUBTYPE OF (Curve_appearance);
      terminator_type : Terminator;
  END_ENTITY;

END_SCHEMA;  
(*
   ISO TC184/SC4/WG12 N3924 - ISO/TS 10303-1659 Curve swept solid - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3333
*)

SCHEMA Curve_swept_solid_arm;

USE FROM Elemental_geometric_shape_arm;    --  ISO/TS 10303-1004

ENTITY Curve_swept_solid
   SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7978 - ISO/TS 10303-1010 Date time - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2913
*) 


SCHEMA Date_time_arm;


TYPE date_or_date_time_select = EXTENSIBLE GENERIC_ENTITY SELECT
   (Calendar_date, 
    Date_time);
END_TYPE; 

TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 

TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 

TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 

TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 

TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 

TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 

TYPE year_number = INTEGER;
END_TYPE; 

ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;

ENTITY Date_time;
  date_component : Calendar_date;
  time_component : Local_time;
END_ENTITY;

ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : Time_offset;
END_ENTITY;

ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;

END_SCHEMA;  -- Date_time_arm
(*
 ISO TC184/SC4/WG12 N1093 - ISO/TS 10303-1014 Date time assignment - EXPRESS ARM
*)
SCHEMA Date_time_assignment_arm;

USE FROM Date_time_arm; -- ISO/TS 10303-1010

   
TYPE date_or_date_time_item = EXTENSIBLE SELECT;
END_TYPE;
   
ENTITY Date_or_date_time_assignment;
  assigned_date : date_or_date_time_select;
  role          : STRING;
  items         : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
  
END_SCHEMA;

(*
    ISO TC184/SC4/WG12 N7888 - ISO/CD-TS - 10303-1809 Default setting association - EXPRESS ARM
    Supersedes ISO TC184/SC4/WG12 N7325
*)
    
(* UNDER DEVELOPMENT *)
SCHEMA Default_setting_association_arm;

USE FROM Shape_property_assignment_arm;
USE FROM Value_with_unit_extension_arm;

ENTITY Default_shape_property
  ABSTRACT SUPERTYPE OF (ONEOF (
    Default_chamfer,
    Default_draft_angle,
    Default_edge_round,
    Default_fillet,
    Default_thickness
  )) 
  SUBTYPE OF (Assigned_shape_property);
  SELF\Assigned_shape_property.described_element : Item_shape;
END_ENTITY;

ENTITY Default_chamfer
  SUBTYPE OF (Default_shape_property);
  offset_value: Length_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default chamfer';  
END_ENTITY; 

ENTITY Default_draft_angle
  SUBTYPE OF (Default_shape_property);
  draft_angle_value: Angle_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default draft angle';  
END_ENTITY;

ENTITY Default_edge_round
  SUBTYPE OF (Default_shape_property);
  radius_value: Length_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default edge round';  
END_ENTITY;

ENTITY Default_fillet
  SUBTYPE OF (Default_shape_property);
          radius_value: Length_data_element;
DERIVE
  SELF\Assigned_property.name : STRING := 'default fillet';  
END_ENTITY;

(*
ENTITY Default_surface_texture;
  SUBTYPE OF (Default_shape_property);
          measuring_method: undefined_object;
DERIVE
  SELF\Assigned_property.name : STRING := 'default texture';  
END_ENTITY;
*)

ENTITY Default_thickness
  SUBTYPE OF (Default_shape_property);
  thickness_value: Length_data_element;
  parameter_name: OPTIONAL STRING;
DERIVE
  SELF\Assigned_property.name : STRING := 'default thickness';  
END_ENTITY;

END_SCHEMA;
(*  
ISO TC184/SC4/WG12 N7981 - ISO/TS 10303-1052 Default tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7415
*) 


SCHEMA Default_tolerance_arm;

USE FROM Document_assignment_arm; -- ISO/TS 10303-1122
USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006
USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118
USE FROM Default_setting_association_arm;

TYPE cell_entry_select = SELECT
   (Plus_minus_toleranced_datum, 
    Upper_lower_toleranced_datum);
END_TYPE; 

TYPE general_tolerance_table_select = SELECT
   (General_tolerance_table, 
    Document_version,
    Document);
END_TYPE; 

TYPE limit_select = SELECT
   (Number_of_decimal_places,
    Significant_number_of_digits, 
    Upper_lower_limit);
END_TYPE; 

ENTITY General_tolerance_table;
  tolerance_type : STRING;
INVERSE
  cell : SET[1:?] OF Tolerance_table_cell FOR tolerance_table;
END_ENTITY;

ENTITY General_tolerances
  SUBTYPE OF (Default_shape_property);
  table_definition : general_tolerance_table_select;
  tolerance_class : STRING;
END_ENTITY;

ENTITY Number_of_decimal_places;
   number_of_places_after_decimal_separator : INTEGER;
END_ENTITY;
 
ENTITY Plus_minus_toleranced_datum;
  tolerance_value : Numerical_item_with_unit;
END_ENTITY;

ENTITY Significant_number_of_digits;
  number_of_digits : INTEGER;
END_ENTITY;

ENTITY Tolerance_table_cell;
  cell_value : OPTIONAL cell_entry_select;
  description : STRING;
  limit : limit_select;
  tolerance_class : OPTIONAL STRING;
  tolerance_table : General_tolerance_table;
END_ENTITY;

ENTITY Upper_lower_limit;
  upper_limit : Numerical_item_with_unit;
  lower_limit : Numerical_item_with_unit;
END_ENTITY;

ENTITY Upper_lower_toleranced_datum;
  lower_tolerance_value : Numerical_item_with_unit;
  upper_tolerance_value : Numerical_item_with_unit;
END_ENTITY;

END_SCHEMA;  -- Default_tolerance_arm
(* 
ISO TC184/SC4/WG12 N7984 - ISO/TS 10303-1130 Derived shape element - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7418
*) 


SCHEMA Derived_shape_element_arm;

USE FROM Construction_geometry_arm;  -- ISO/TS 10303-1131
USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032
USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054

TYPE dse_shape_model = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON shape_model WITH (
   Constructive_geometry);
END_TYPE;

ENTITY Apex
  SUBTYPE OF (Derived_shape_element);
END_ENTITY;

ENTITY Centre_axis
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Centre_of_symmetry
  SUPERTYPE OF (ONEOF (
    Centre_axis,
    Centre_plane,
    Centre_point,
    Median_curve,
    Median_surface))
  SUBTYPE OF (Derived_shape_element);
END_ENTITY;

ENTITY Centre_plane
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Centre_point
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;
  
ENTITY Derived_shape_element
  ABSTRACT SUPERTYPE OF (ONEOF (
    Apex,
    Centre_of_symmetry,
    Geometric_contact,    
    Extension,
    Geometric_intersection,
    Geometric_alignment,
    Parallel_offset,
    Perpendicular_to,
    Tangent))
  SUBTYPE OF (Shape_element);
  derived_from : SET[1:?] OF Shape_element;
END_ENTITY;

ENTITY Geometric_alignment
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:?] OF Shape_element;
END_ENTITY;

ENTITY Geometric_contact
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:2] OF Shape_element;
END_ENTITY;

ENTITY Geometric_intersection
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[2:?] OF Shape_element;
END_ENTITY;

ENTITY Extension
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Median_curve
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Median_surface
  SUBTYPE OF (Centre_of_symmetry);
WHERE
  WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Parallel_offset
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Perpendicular_to
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Tangent_plane
  SUBTYPE OF (Tangent);
  WHERE
    WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY;

ENTITY Tangent
  SUPERTYPE OF (Tangent_plane)
  SUBTYPE OF (Derived_shape_element);
  SELF\Derived_shape_element.derived_from : SET[1:1] OF Shape_element;
END_ENTITY;

ENTITY Offset_shape_element
  SUBTYPE OF (Derived_shape_element);
  offset : Value_with_unit;
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N3799 - ISO/CD-TS 10303-1232 Design material aspects - EXPRESS ARM
*)

SCHEMA Design_material_aspects_arm;

USE FROM Generic_material_aspects_arm;

USE FROM Product_view_definition_arm;

USE FROM Shape_property_assignment_arm;

TYPE dma_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
  (Item_shape,
   Product_view_definition,
   Shape_element);
END_TYPE;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7987 - ISO/TS 10303-1628 Design product data management - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7421
*)

SCHEMA Design_product_data_management_arm;

USE FROM Characterizable_object_arm; -- ISO/TS 10303-1765 
USE FROM Classification_with_attributes_arm;	-- ISO/TS 10303-1111
USE FROM Design_material_aspects_arm;	-- ISO/TS 10303-1681
USE FROM Information_rights_arm;    -- ISO/TS 10303-1241
USE FROM Item_definition_structure_arm;	-- ISO/TS 10303-1345
USE FROM Pre_defined_product_data_management_specializations_arm; -- ISO/TS 10303-1760
USE FROM Product_data_management_arm;	-- ISO/TS 10303-1231
USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233
USE FROM Requirement_view_definition_relationship_arm;	-- ISO/TS 10303-1142
USE FROM Specification_control_arm; -- ISO/CD-TS 10303-1112
USE FROM Test_select_product_arm;	-- ISO/TS 10303-1757
USE FROM Activity_method_assignment_arm;    -- ISO/TS 10303-1249
USE FROM Attribute_classification_arm; -- ISO/TS 10303-1246
	
  TYPE design_activity_method_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_method_item WITH 
    (Activity, 
     Activity_method, 
     Activity_property, 
     Applied_activity_assignment, 
     Assembly_component_relationship, 
     Assigned_property, 
     Contract, 
     Event, 
     File,  
     Organization, 
     Person, 
     Person_in_organization,
     Product, 
     Product_concept, 
     Product_configuration, 
     Product_version, 
     Product_version_relationship, 
     Product_view_definition, 
     Project, 
     View_definition_relationship);
  END_TYPE;

  TYPE design_pdm_breakdown_of_target = SELECT BASED_ON breakdown_of_target WITH (
    Product_concept,
    Product_configuration);
  END_TYPE;

  TYPE design_pdm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_approval_item WITH 
    (Certification,
     Document_definition,
     Effectivity,
     Group,
     Group_relationship,
     Independent_property_relationship, 
     Product_configuration,
     Product_version,
     Product_view_definition,
     Requirement_assignment,
     Security_classification,
     Supplied_part_relationship,
     Work_order);
  END_TYPE;

  TYPE design_pdm_affected_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_affected_item_select WITH 
    (Work_request);
  END_TYPE; 

  TYPE design_pdm_assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assigned_name_select WITH 
    (Group,
     Group_relationship,
     Product,
     Product_view_definition);
  END_TYPE; 

  TYPE design_pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_certification_item WITH 
    (Alternate_product_relationship,
     Product_version);
  END_TYPE; 

  TYPE design_pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
    (classified_element_select,
     Characterizable_object,
     Information_right, 
     Information_usage_right, 
     Information_usage_right_relationship);
  END_TYPE; 

  TYPE design_pdm_classified_attribute_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classified_attribute_select WITH (
	Activity,
	Activity_method,
	Activity_method_assignment,
	Activity_property,
	Activity_property_representation,
	Activity_relationship,
	Address_assignment,
	Affected_items_assignment,
	Alternate_part_relationship,
	Applied_activity_assignment,
	Approval,
	Approval_assignment,
	Approval_relationship,
	Approval_status,
	Approving_person_organization,
	Assigned_property,
	Certification,
	Certification_assignment,
	Contract,
	Date_or_date_time_assignment,
	Digital_file,
	Document_assignment,
	Document_definition_relationship,
	Effectivity,
	Effectivity_assignment,
	Event_assignment,
	Event_relationship,
	External_source_identification,
	File_relationship,
    Group,
    Group_relationship,
	Hardcopy,
	Identification_assignment,
	Independent_property,
	Independent_property_relationship,
	Independent_property_representation,
    Information_right, 
    Information_usage_right, 
    Information_usage_right_relationship,
    Language,
	Market,
	Organization_or_person_in_organization_assignment,
	Organization_relationship,
	Person_in_organization,
	Product,
	Product_concept,
	Product_version,
	Product_version_relationship,
	Product_view_definition,
	Project_assignment,
	Project_relationship,
	Property_representation,
	Representation,
	Representation_context,
	Representation_item,
	Security_classification,
	Time_interval_relationship,
	Unit,
	Value_with_unit,
	View_definition_context,
	View_definition_relationship,
	Work_order,
	Work_request,
	Work_request_status);
  END_TYPE;

  TYPE design_pdm_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH 
    (organization_or_person_in_organization_select,
     Product_version,
     Work_order);
  END_TYPE;

  TYPE design_pdm_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_date_or_date_time_item WITH 
    (Contract,
     Document_definition,
     Product_view_definition,
     Security_classification,
     Work_order);
  END_TYPE; 

  TYPE design_pdm_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_documented_element_select WITH 
    (Class_with_attributes,
     External_item_identification,
     Information_right, 
     Information_usage_right, 
     Information_usage_right_relationship, 
     Group,
     Group_relationship,
     Material_identification,
     Product_view_definition,
     Representation_item);
  END_TYPE; 

  TYPE design_pdm_groupable_item = SELECT BASED_ON groupable_item WITH 
    (Group_relationship,
     Identification_assignment,
     Name_assignment);
  END_TYPE; 

  TYPE design_pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_identification_item WITH 
    (Group,
     Group_relationship,
     Information_right, 
     Information_usage_right, 
     Information_usage_right_relationship, 
     Material_identification,
     Organization,   
     Product,
     Product_configuration,
     Product_concept,
     Product_version);
  END_TYPE; 

  TYPE design_pdm_information_usage_right_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON information_usage_right_item WITH 
    (identification_item, 
     requirement_assignment_item, 
     documented_element_select,  
     classification_item, 
     certification_item, 
     Characterizable_object,
     Organization, 
     Person_in_organization,
     Product_version,
     Work_order);
  END_TYPE; 

  TYPE design_pdm_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
    (Part_view_definition);
  END_TYPE;

  TYPE design_pdm_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH 
    (Alias_identification,
     Classification_assignment,
     Classification_association,
     Document_definition,
     Supplied_part_relationship,
     Work_order);
  END_TYPE; 

  TYPE design_pdm_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH 
    (Product_configuration,
     Product_class,
     Product_view_definition,
     Product_version,
     Product,
     View_definition_relationship);
  END_TYPE; 

  TYPE design_pdm_requirement_source_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_source_item WITH 
    (Group,
     Group_relationship,
     Product_view_definition,
     Product_version,
     Product,
     Shape_element,
     Characterizable_object,
     View_definition_relationship);
  END_TYPE; 

  TYPE design_pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_security_classification_item WITH 
    (Document_definition,
     Product_version,
     Product_view_definition,
     Promissory_usage);
  END_TYPE; 

  TYPE design_pdm_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON string_select WITH 
    (Information_right, 
     Information_usage_right,
     Information_usage_right_relationship);
  END_TYPE; 

TYPE document_category = EXTENSIBLE ENUMERATION OF (
  catalogue,
  manual,
  specification);
END_TYPE;

TYPE part_category = EXTENSIBLE ENUMERATION OF (
  application_control,
  assembly,
  boxed,
  collection,
  completely_knocked_down,
  continuous,
  detail,
  discrete,
  in_process,
  inseparable_assembly,
  prototype,
  raw_material,
  raw_material_by_area,
  raw_material_by_length,
  raw_material_by_volume,
  regulated,
  safety,
  service,
  tool);
END_TYPE;

TYPE period_or_date_or_event_select = SELECT (
  date_or_event,
  Duration);
END_TYPE;

ENTITY Part_with_additional_categories
  SUBTYPE OF (Part);
  categories : SET[1:?] OF part_category;
END_ENTITY;

ENTITY Document_with_additional_categories
  SUBTYPE OF (Document);
  categories : SET[1:?] OF document_category;
END_ENTITY;

ENTITY Retention_period;
  retention_purpose : OPTIONAL STRING;
  earliest_end_definition : OPTIONAL period_or_date_or_event_select;
  latest_end_definition : OPTIONAL period_or_date_or_event_select;
  start_definition : date_or_event;
  is_applied_to : SET[1:?] OF time_interval_item;
WHERE
  WR1: EXISTS(earliest_end_definition) OR EXISTS(latest_end_definition);
END_ENTITY;

  RULE unique_document_id FOR
      (Document);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Document | SIZEOF(QUERY (p2 <* Document | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

  RULE unique_part_id FOR
      (Part);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Part | SIZEOF(QUERY (p2 <* Part | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

  RULE unique_requirement_id FOR
      (Requirement);
    WHERE
      WR1:  SIZEOF(QUERY (p1 <* Requirement | SIZEOF(QUERY (p2 <* Requirement | 
              (NOT(p1 :=: p2) AND (p1.id = p2.id)))) > 0 )) = 0;
  END_RULE;

  RULE unique_product_version_id FOR
      (Product);
    WHERE
      WR1:  SIZEOF(QUERY (p <* Product | 
       (SIZEOF (QUERY (pv1 <*
       USEDIN(p,'PRODUCT_VERSION_ARM.PRODUCT_VERSION.OF_PRODUCT') |  
       (SIZEOF (QUERY (pv2 <*
       USEDIN(p,'PRODUCT_VERSION_ARM.PRODUCT_VERSION.OF_PRODUCT')
       |  pv1.id = pv2.id)) > 1)
       )) > 0)
       )) = 0;  
  END_RULE;

  RULE unique_product_view_definition_id FOR
      (Product_version);
    WHERE
      WR1:  SIZEOF(QUERY (pv <* Product_version | 
        (SIZEOF (QUERY (pvd1 <*
        USEDIN(pv,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION') |  
        (SIZEOF (QUERY (pvd2 <*
        USEDIN(pv,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION')
        |  pvd1.id = pvd2.id)) > 1)
        )) > 0)
        )) = 0;  
  END_RULE;

  RULE product_occurrence_usage FOR
      (Product_occurrence);
    WHERE
      WR1: SIZEOF(QUERY( po <* Product_occurrence |
      NOT (
      (SIZEOF(USEDIN(po,'ASSEMBLY_STRUCTURE_ARM.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW')) +
        SIZEOF(USEDIN(po,'PRODUCT_BREAKDOWN_ARM.PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP.PRODUCT'))) > 0
        )
        )) = 0;
  END_RULE;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7990 - ISO/TS 10303-1362 Dimension and tolerance callouts - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5350
*)

SCHEMA Dimension_and_tolerance_callouts_arm;

USE FROM Associative_draughting_elements_arm; -- ISO/TS 10303-1311
USE FROM Draughting_annotation_arm; -- ISO/TS 10303-1206
USE FROM Draughting_element_specialisations_arm; -- ISO/TS 10303-1312
USE FROM Geometric_tolerance_arm; -- ISO/TS 10303-1051

  TYPE datc_draughting_model_item_definition = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON draughting_model_item_definition WITH (
    Dimensional_location,
    Dimensional_size,
    Geometric_tolerance);
  END_TYPE; 

  ENTITY Associated_dimension_text
    SUBTYPE OF (Dimension_text);
      is_displaying : Geometric_dimension;
  END_ENTITY;

  ENTITY Dimension_curve_terminator_to_projection_curve_associativity
    SUBTYPE OF(Annotation_occurrence_associativity);
      SELF\Annotation_occurrence_associativity.relating_element : Dimension_curve_terminator;
      SELF\Annotation_occurrence_associativity.related_element  : Projection_curve;
  END_ENTITY;
  
END_SCHEMA;
(*
ISO TC184/SC4/WG12 N7993 - ISO/TS 10303-1050 Dimension tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7427
*) 


SCHEMA Dimension_tolerance_arm;

USE FROM Derived_shape_element_arm;    -- ISO/TS 10303-1130
USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122
USE FROM Extended_measure_representation_arm;    -- ISO/TS 10303-1106
USE FROM Value_with_unit_extension_arm;  -- ISO/TS 10303-1753

TYPE adjoining_or_centred = ENUMERATION OF ( 
  adjoining,
  centred);
END_TYPE;

TYPE angle_relator = ENUMERATION OF 
   (equal,
    large,
    small);
END_TYPE; 

TYPE dimension_value_select = SELECT
   (Dimension_value_with_limitation, 
    Numerical_item_with_unit, 
    Tolerance_range, 
    Value_limit);
END_TYPE; 

TYPE diameter_qualifier_enumeration = ENUMERATION OF (
  centre_outer,
  centre_inner,
  outer_centre,
  outer_outer,
  outer_inner,
  inner_centre,
  inner_outer,
  inner_inner);
END_TYPE;

TYPE diameter_type = ENUMERATION OF (
   circular_or_cylindrical_diameter,
   spherical_diameter,
   toroidal_minor_diameter,
   toroidal_major_diameter,
   toroidal_high_major_diameter,
   toroidal_low_major_diameter);
END_TYPE;

TYPE dimension_target = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

TYPE edge_of_undefined_shape_size_element = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

TYPE geometric_dimension_modifier = EXTENSIBLE ENUMERATION OF (
  two_point_size, -- (LP) 
  local_size_defined_by_a_sphere, -- (LS)
  least_square_association_criteria, -- (GG) 
  maximum_inscribed_association_criteria, -- (GX) 
  minimum_circumscribed_association_criteria, -- (GN) 
  circumference_diameter_calculated_size, -- (CC) 
  area_diameter_calculated_size, -- (CA) 
  volume_diameter_calculated_size, -- (CV) 
  maximum_rank_order_size, -- (SX) 
  minimum_rank_order_size, -- (SN)
  average_rank_order_size, -- (SA) 
  median_rank_order_size, -- (SM) 
  mid_range_rank_order_size, -- (SD) 
  range_rank_order_size, -- (SR) 
  any_part_of_the_feature, -- 'APF' 
  any_cross_section, -- '/0'
  specific_fixed_cross_section, -- SCS
  common_tolerance, -- 'CT'
  free_state_condition, -- (F)
  statistical, -- ASME only
  continuous_feature, -- ASME only
  square, -- ASME only
  controlled_radius); -- ASME only
END_TYPE;

TYPE limitation_definition_select = SELECT
   (Limits_and_fits, 
    Plus_minus_bounds);
END_TYPE; 

TYPE radial_type = ENUMERATION OF (
   circular_or_cylindrical_radius,
   spherical_radius,
   toroidal_minor_radius,
   toroidal_major_radius,
   toroidal_high_major_radius,
   toroidal_low_major_radius);
END_TYPE;

TYPE tolerance_principle_type = ENUMERATION OF (
  envelope_requirement, 
  independency, 
  default);
END_TYPE;

TYPE undefined_edge_shape_enumeration_direction = ENUMERATION OF ( 
  true_neighbor,               
  false_neighbor,
  both_neighbors);
END_TYPE;

ENTITY Angular_location
  SUBTYPE OF (Dimensional_location);
  angle_selection : angle_relator;
  orientation : OPTIONAL Axis_placement;
END_ENTITY;

ENTITY Angular_size
  SUBTYPE OF (Dimensional_size);
  full : BOOLEAN;
  angle_selection : angle_relator;
END_ENTITY;

ENTITY Curved_distance
  SUBTYPE OF (Dimensional_location);
  used_path : Measurement_path;
END_ENTITY;

ENTITY Curved_size
  SUBTYPE OF (Dimensional_size);
END_ENTITY;

ENTITY Diameter_size
   SUBTYPE OF (Dimensional_size);
   geometry_type : diameter_type;
END_ENTITY;

ENTITY Dimensional_size
  ABSTRACT SUPERTYPE OF (ONEOF (Angular_size,
                                Curved_size,
                                Diameter_size,
                                Edge_of_undefined_shape_size,
                                Machining_feature_size,
                                Radial_size,
                                Thickness_size))
  SUBTYPE OF (Geometric_dimension);
  is_applied_to : dimension_target;
END_ENTITY;

ENTITY Dimension_value_with_limitation;
  defined_by : limitation_definition_select;
  limited_value : Numerical_item_with_unit;
END_ENTITY;

ENTITY Geometric_dimension
  ABSTRACT SUPERTYPE OF (ONEOF (Dimensional_location,
                                Dimensional_size));
  id : STRING;
  dimension_value : dimension_value_select;
  notes : SET[0:?] OF STRING;
  theoretical_exact : BOOLEAN;
  auxiliary : BOOLEAN;
  tolerance_principle : tolerance_principle_type;
  modifiers : LIST [0:?] of geometric_dimension_modifier;
  unit_length : OPTIONAL Length_data_element;
END_ENTITY;

ENTITY Limits_and_fits;
  deviation : STRING;
  fitting_type : OPTIONAL STRING;
  grade : STRING;
END_ENTITY;

ENTITY Linear_distance
  SUBTYPE OF (Dimensional_location);
  orientation : OPTIONAL Axis_placement;
  diameter_qualifier : OPTIONAL diameter_qualifier_enumeration;
END_ENTITY;

ENTITY Dimensional_location
  ABSTRACT SUPERTYPE OF (ONEOF (Angular_location,
                                Curved_distance,
                                Linear_distance))
  SUBTYPE OF (Geometric_dimension);
  description : OPTIONAL STRING;
  directed : OPTIONAL BOOLEAN;
  origin : dimension_target;
  target : dimension_target;
END_ENTITY;

ENTITY Edge_of_undefined_shape_size
  SUBTYPE OF (Dimensional_size);
  orientation : undefined_edge_shape_enumeration_direction;
  SELF\Dimensional_size.is_applied_to : edge_of_undefined_shape_size_element;
  SELF\Geometric_dimension.dimension_value : Tolerance_range;
UNIQUE
  UR1 : is_applied_to, orientation;
END_ENTITY;

ENTITY Machining_feature_size
  SUBTYPE OF (Dimensional_size);
  considered_attribute: STRING;
END_ENTITY;

ENTITY Measurement_path;
  defined_by : Curve;
  defined_in : Geometric_coordinate_space;
END_ENTITY;

ENTITY Plus_minus_bounds;
  lower_bound : Value_with_unit;
  upper_bound         : Value_with_unit;
END_ENTITY;

ENTITY Radial_size
   SUBTYPE OF (Dimensional_size);
   radius_type : OPTIONAL adjoining_or_centred;
   geometry_type : radial_type;
END_ENTITY;

ENTITY Thickness_size
  SUBTYPE OF (Dimensional_size);
  used_path : OPTIONAL Measurement_path;
END_ENTITY;

ENTITY Tolerance_range;
  lower_range : Numerical_item_with_unit;
  upper_range : Numerical_item_with_unit;
END_ENTITY;

END_SCHEMA;  -- Dimension_tolerance_arm
(*
ISO TC184/SC4/WG12 N7708 - ISO/TS 10303-1121 Document and version identification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2957
*)


SCHEMA Document_and_version_identification_arm;

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Document
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Document_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Document;
END_ENTITY;

RULE document_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'DOCUMENT_AND_VERSION_IDENTIFICATION_ARM.' + 'DOCUMENT_VERSION' IN TYPEOF ( pv) ) ) AND ( 'DOCUMENT_AND_VERSION_IDENTIFICATION_ARM.' + 'DOCUMENT' IN TYPEOF ( pv.of_product) ) ) ) = 0 ;
END_RULE; 

END_SCHEMA;  -- Document_and_version_identification_arm
(*
ISO TC184/SC4/WG12 N7714 - ISO/TS 10303-1122 Document assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7106
*)


SCHEMA Document_assignment_arm;

USE FROM Document_and_version_identification_arm;    -- ISO/TS 10303-1121

USE FROM Document_definition_arm;    -- ISO/TS 10303-1123

USE FROM File_identification_arm;    -- ISO/TS 10303-1127


TYPE assigned_document_select = SELECT
   (Document, 
    Document_definition, 
    Document_version, 
    File);
END_TYPE; 

TYPE documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT
  (Product_view_definition);
END_TYPE; 

ENTITY Document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : SET[1:?] OF documented_element_select;
  role : STRING;
END_ENTITY;

ENTITY Partial_document_assignment
  SUBTYPE OF (Document_assignment);
  document_portion : STRING;
END_ENTITY;

END_SCHEMA;  -- Document_assignment_arm
(*
ISO TC184/SC4/WG12 N3225 - ISO/TS 10303-1123 Document definition - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1192
*) 


SCHEMA Document_definition_arm;

USE FROM Document_and_version_identification_arm;    -- ISO/TS 10303-1121

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019


TYPE document_location_select = SELECT BASED_ON external_identification_item WITH 
   (Document_definition);
END_TYPE; 

ENTITY Digital_document_definition
  SUBTYPE OF (Document_definition);
  files : SET[0:?] OF Digital_file;
END_ENTITY;

ENTITY Document_definition
  SUPERTYPE OF (ONEOF (Digital_document_definition,
                       Physical_document_definition))
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.name RENAMED description : OPTIONAL STRING;
  SELF\Product_view_definition.defined_version RENAMED associated_document_version : Document_version;
END_ENTITY;

ENTITY Document_location_identification
  SUBTYPE OF (External_source_identification);
WHERE
  WR1: 'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;

ENTITY Physical_document_definition
  SUBTYPE OF (Document_definition);
  components : SET[0:?] OF Hardcopy;
END_ENTITY;

RULE document_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( dd <* Product_view_definition | ( NOT ( 'DOCUMENT_DEFINITION_ARM.' + 'DOCUMENT_DEFINITION' IN TYPEOF (dd) ) ) AND ( 'DOCUMENT_DEFINITION_ARM.' + 'DOCUMENT_VERSION' IN TYPEOF ( dd.defined_version) ) ) ) =0;
END_RULE; 

END_SCHEMA;  -- Document_definition_arm
(*
 ISO TC184/SC4/WG12 N6120 - ISO/TS 10303-1290 Document management - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3037
*) 


SCHEMA Document_management_arm;

USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122

USE FROM Document_properties_arm;    -- ISO/TS 10303-1126

USE FROM Document_structure_arm;    -- ISO/TS 10303-1124

USE FROM Management_resource_information_arm;    -- ISO/TS 10303-1288


TYPE document_management_alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON alias_identification_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_approval_item WITH 
   (Digital_document_definition, 
    Document_definition_relationship, 
    Document_version, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH 
   (Document_version);
END_TYPE; 

TYPE document_management_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_date_or_date_time_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document_definition_relationship, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_identification_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_organization_or_person_in_organization_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH 
   (Digital_document_definition, 
    Digital_file, 
    Document, 
    Document_version, 
    Hardcopy, 
    Physical_document_definition);
END_TYPE; 

TYPE document_management_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_string_select WITH 
   (Digital_document_definition, 
    Document, 
    Document_assignment, 
    Document_definition_relationship, 
    Document_version, 
    External_item_identification, 
    External_source_identification, 
    File_relationship, 
    Physical_document_definition);
END_TYPE; 

END_SCHEMA;  -- Document_management_arm

 (*
 ISO TC184/SC4/WG12 N7996 - ISO/TS 10303-1126 Document properties - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7430
*)


SCHEMA Document_properties_arm;

USE FROM Document_definition_arm;    -- ISO/TS 10303-1123

USE FROM File_identification_arm;    -- ISO/TS 10303-1127

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030


TYPE descriptive_or_numerical = SELECT
   (Descriptive_document_property, 
    Numerical_document_property);
END_TYPE; 

TYPE document_property_item = SELECT BASED_ON property_assignment_select WITH 
   (Document_definition, 
    File);
END_TYPE; 

ENTITY Assigned_document_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : document_property_item;
DERIVE
  SELF\Assigned_property.name : STRING := 'document property';
WHERE
  WR1: SIZEOF(['DOCUMENT_PROPERTIES_ARM.DOCUMENT_DEFINITION', 'DOCUMENT_PROPERTIES_ARM.FILE']*TYPEOF(SELF\Assigned_property.described_element)) = 1;
END_ENTITY;

ENTITY Descriptive_document_property
  SUBTYPE OF (String_representation_item);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;

ENTITY Document_property_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF descriptive_or_numerical;
WHERE
  WR1: SIZEOF(QUERY( pr <* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') | 'DOCUMENT_PROPERTIES_ARM.ASSIGNED_PROPERTY' IN TYPEOF (pr\Property_representation.property)))> 0;
  WR2: SELF\Representation.context_of_items.kind = 'document parameters';
  WR3: SIZEOF(QUERY(it1 <* SELF\Representation.items | SIZEOF(QUERY(it2 <* SELF\Representation.items | it1.name = it2.name)) > 1 ))= 0;
END_ENTITY;

ENTITY Numerical_document_property
  SUBTYPE OF (Numerical_item_with_unit);
INVERSE
  valued_characteristic : SET[1:1] OF Document_property_representation FOR items;
END_ENTITY;

END_SCHEMA;  -- Document_properties_arm

(*
 ISO TC184/SC4/WG12 N1195 - ISO/TS 10303-1124 Document structure - EXPRESS ARM
*)


SCHEMA Document_structure_arm;

USE FROM Document_definition_arm;  
USE FROM File_identification_arm; 
  
ENTITY Document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : Document_definition;
  related_document_definition : Document_definition;
WHERE
  WR1: relating_document_definition :<>: related_document_definition;
END_ENTITY;

ENTITY File_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : File;
  related_document_file : File;
WHERE
  WR1: relating_document_file:<>: related_document_file;
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7801 - ISO/TS 10303-1206 Draughting annotation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5353
*)

SCHEMA Draughting_annotation_arm;

USE FROM Draughting_element_arm; -- ISO/TS 10303-1310

  TYPE da_draughting_callout_content_select = SELECT BASED_ON draughting_callout_content_select WITH 
    (Annotation_subfigure, 
    Annotation_symbol);
  END_TYPE; 

  TYPE symbol_definition_select = SELECT
    (Dimension_symbol, 
     General_symbol, 
     Geometric_tolerance_symbol, 
     Marker, 
     Surface_condition_symbol, 
     Terminator);
  END_TYPE; 

  ENTITY Annotation_subfigure
    SUBTYPE OF (Annotation_element);
  END_ENTITY;

  ENTITY Annotation_symbol
    SUBTYPE OF (Annotation_element);
      symbol_definition : symbol_definition_select;
  END_ENTITY;

  ENTITY Dimension_curve_terminator
    SUBTYPE OF (Terminator_symbol);
  END_ENTITY;

  ENTITY Dimension_symbol; 
  END_ENTITY;

  ENTITY General_symbol 
    SUBTYPE of (Representation);
  END_ENTITY;

  ENTITY Geometric_tolerance_symbol; 
  END_ENTITY;

  ENTITY Surface_condition_symbol; 
  END_ENTITY;

  ENTITY Terminator_symbol
    SUBTYPE OF (Annotation_symbol);
  END_ENTITY;

  SUBTYPE_CONSTRAINT alternate_annotation_elements FOR Annotation_element;
    ONEOF (Annotation_subfigure,
      Annotation_symbol,
      Fill_area);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7064 - ISO/TS 10303-1310 Draughting element - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5356
*)

SCHEMA Draughting_element_arm;

USE FROM Associative_text_arm; -- ISO/CD-TS 10303-1132

USE FROM Curve_appearance_arm; -- ISO/CD-TS 10303-1003

  TYPE annotation_plane_element = SELECT
   (Draughting_callout,
    Styled_element);
  END_TYPE;

  TYPE de_appearance_select = SELECT BASED_ON appearance_select WITH 
    (Curve_appearance, 
     Point_appearance,
     Text_style);
  END_TYPE; 

  TYPE draughting_callout_content_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Generic_annotation_curve, 
     Annotation_text_occurrence);
  END_TYPE; 

  TYPE plane_or_planar_box = SELECT(
    Planar_box,
    Plane);
  END_TYPE; 

  ENTITY Annotation_fill_area 
    SUBTYPE OF (Detailed_geometric_model_element); 
      boundaries : SET [1:?] OF Curve; 
  END_ENTITY; 

  ENTITY Annotation_plane
    SUBTYPE OF (Annotation_element);
      elements : OPTIONAL SET[1:?] OF annotation_plane_element;
      SELF\Styled_element.element : plane_or_planar_box;
  END_ENTITY;

  ENTITY Dimension_curve 
    SUBTYPE OF (Annotation_curve);
      terminator : SET[0:2] OF Terminator;
  END_ENTITY;

  ENTITY Dimension_curve_directed_callout
    SUBTYPE OF (Draughting_callout);
      dimension_curve : Dimension_curve;
    WHERE
      WR1: dimension_curve IN SELF\Draughting_callout.contents;
  END_ENTITY;

  ENTITY Draughting_callout 
    SUPERTYPE OF(ONEOF(
      Dimension_curve_directed_callout,
      Leader_directed_callout,
      Projection_directed_callout))
    SUBTYPE OF (Representation_item);
      contents : LIST [1:?] OF draughting_callout_content_select;
  END_ENTITY;

  ENTITY Fill_area 
    SUBTYPE OF (Annotation_element);
      SELF\Styled_element.element : Annotation_fill_area;
      reference_point             : Point;
  END_ENTITY;

  ENTITY Generic_annotation_curve
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;

  ENTITY Leader 
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;

  ENTITY Leader_directed_callout
    SUBTYPE OF (Draughting_callout);
      leader : Leader;
    WHERE
      WR1: leader IN SELF\Draughting_callout.contents;
  END_ENTITY;

  ENTITY Projection_curve 
    SUBTYPE OF (Annotation_curve);
  END_ENTITY;

  ENTITY Projection_directed_callout
    SUBTYPE OF (Draughting_callout);
      projection_curve : Projection_curve;
    WHERE
      WR1: projection_curve IN SELF\Draughting_callout.contents;
  END_ENTITY;

  SUBTYPE_CONSTRAINT annotation_curve_subtypes FOR Annotation_curve;
    (ONEOF(Leader, Projection_curve, Dimension_curve) ANDOR (Generic_annotation_curve));
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7675 - ISO/TS 10303-1312 Draughting element specialisations - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7074
*)

SCHEMA Draughting_element_specialisations_arm;

USE FROM Draughting_element_arm; -- ISO/CD-TS 10303-1310

  TYPE chained_or_parallel = ENUMERATION OF
    (chained,
     parallel);
  END_TYPE;

  TYPE dimension_callout_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Annotation_text_occurrence);
  END_TYPE;   
  
  TYPE dimension_type = ENUMERATION OF 
    (angular,
     curve,
     diameter,
     leader_directed,
     linear,
     ordinate,
     radius);
  END_TYPE;

  TYPE primary_or_secondary = ENUMERATION OF
    (primary,
     secondary);
  END_TYPE;

  ENTITY Datum_feature_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;

  ENTITY Datum_target_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;

  ENTITY Dimension
    ABSTRACT SUPERTYPE OF(Dimension_callout ANDOR Dimension_value)
    SUBTYPE OF (Draughting_element);
      id                : STRING;
  END_ENTITY;

  ENTITY Dimension_callout 
    SUBTYPE OF (Dimension);
    callout_element : SET [1:?] OF dimension_callout_select;
    dimension_type  : SET [1:?] OF dimension_type;
  END_ENTITY;

  ENTITY Dimension_callout_relationship;
      relating_draughting_callout : Dimension_callout;  
      related_draughting_callout  : Dimension_value;
      relation_type               : primary_or_secondary;
  END_ENTITY;

  ENTITY Dimension_prefix
    SUBTYPE OF (Draughting_element);
      prefix : Dimension_text;
    INVERSE
      parent : Structured_dimension_callout FOR prefix;
    WHERE
      WR1: prefix IN SELF\Draughting_callout.contents;
      WR2: prefix\Representation_item.name = 'prefix text';            
  END_ENTITY;    

  ENTITY Dimension_sequence_pair; 
    allignment  : chained_or_parallel;
	predecessor : Dimension_callout;
	successor   : Dimension_callout;
  END_ENTITY;

  ENTITY Dimension_suffix
    SUBTYPE OF (Draughting_element);
      suffix : Dimension_text;
    INVERSE
      parent : Structured_dimension_callout FOR suffix;
    WHERE
      WR1: suffix IN SELF\Draughting_callout.contents;
      WR2: suffix\Representation_item.name = 'suffix text';      
  END_ENTITY;    

  ENTITY Dimension_value
    SUBTYPE OF (Dimension);
      dimension_value : Dimension_text;
    WHERE
      WR1: dimension_value IN SELF\Draughting_callout.contents;
      WR2: dimension_value\Representation_item.name = 'dimension value';
  END_ENTITY;

  ENTITY Draughting_element
    SUPERTYPE OF(
      Datum_feature_callout ANDOR 
      Datum_target_callout ANDOR 
      Dimension ANDOR 
      Dimension_prefix ANDOR 
      Dimension_suffix ANDOR 
      Geometric_tolerance_callout ANDOR 
      Surface_condition_callout)
    SUBTYPE OF(Draughting_callout);
  END_ENTITY;

  ENTITY Geometric_tolerance_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;

  ENTITY Structured_dimension_callout
    SUBTYPE OF (Dimension_value);
      prefix          : OPTIONAL Dimension_prefix;
      suffix          : OPTIONAL Dimension_suffix;
      tolerance_value : OPTIONAL Dimension_text;
      unit_text       : OPTIONAL Dimension_text;
    WHERE
      WR1: tolerance_value IN SELF\Draughting_callout.contents;
      WR2: NOT EXISTS(tolerance_value) OR (tolerance_value\Representation_item.name = 'tolerance value');
      WR3: unit_text IN SELF\Draughting_callout.contents;
      WR4: NOT EXISTS(unit_text) OR (unit_text\Representation_item.name = 'unit text');
  END_ENTITY;

  ENTITY Surface_condition_callout 
    SUBTYPE OF (Draughting_element);
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7999 - ISO/TS 10303-1309 Drawing definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7433
*)

SCHEMA Drawing_definition_arm;

USE FROM Draughting_annotation_arm;
USE FROM Presentation_hierarchy_arm;

  TYPE dd_view_element_select = SELECT BASED_ON view_element_select WITH 
    (Camera_image_2d_with_scale);
  END_TYPE; 

  TYPE draughting_titled_item = SELECT 
    (Drawing,
     Drawing_sheet);
  END_TYPE;

  ENTITY Camera_image_2d_with_scale
    SUBTYPE OF (Detailed_geometric_model_element);
      is_displaying : presented_model_select;
      source        : Camera_model_d2;
      target        : Planar_box;
  END_ENTITY;

  ENTITY Camera_model_d2
    SUBTYPE OF (Detailed_geometric_model_element);
      view_window          : Planar_box;
      view_window_clipping : BOOLEAN;
  END_ENTITY;

  ENTITY Draughting_title;
    contents : STRING;
    items    : SET [1:?] OF draughting_titled_item;
    language : STRING;
  END_ENTITY;

  ENTITY Drawing_definition; 
    drawing_number : STRING;
    drawing_type   : OPTIONAL STRING;
  END_ENTITY;

  ENTITY Drawing
    SUBTYPE OF (Presentation_set);
      revision_identifier : STRING;
      drawing_identifier  : Drawing_definition;
      intended_scale      : OPTIONAL STRING;
      drawing_specification : SET[0:?] OF STRING;
    UNIQUE
      UR1: revision_identifier, drawing_identifier;
  END_ENTITY;
  
  ENTITY Drawing_sequence; 
      predecessor : Drawing;
      successor   : Drawing;
    WHERE
      WR1: predecessor :<>: successor;
  END_ENTITY;
 
  ENTITY Drawing_sheet
    SUBTYPE OF (View_area);
      revision_identifier : STRING;
  END_ENTITY;
  
  ENTITY Drawing_sheet_layout
    SUBTYPE OF (General_symbol);
  END_ENTITY;

  ENTITY Drawing_sheet_sequence 
    SUBTYPE OF (View_area_relationship);
      SELF\View_area_relationship.relating : Drawing_sheet;
      SELF\View_area_relationship.related  : Drawing_sheet;
  WHERE
    WR1: SELF\View_area_relationship.relating :<>: SELF\View_area_relationship.related;
  END_ENTITY;

  SUBTYPE_CONSTRAINT dd_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
    ONEOF (Camera_model_d2,
      Camera_image_2d_with_scale);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N1267 - ISO/TS 10303-1501 Edge based wireframe - EXPRESS ARM
*)

SCHEMA Edge_based_wireframe_arm;

USE FROM Elemental_geometric_shape_arm; 

ENTITY Edge_based_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N3966 - ISO/TS 10303-1673 Edge shape feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3414
*)

SCHEMA Edge_shape_feature_arm;

	USE FROM Layered_2d_shape_arm;	-- ISO/TS 10303-1693
	USE FROM Characteristic_arm;	-- ISO/TS 10303-1654	

  TYPE board_side = ENUMERATION OF (primary, secondary); 
  END_TYPE;

  ENTITY Bevel_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      bevel_width : Length_tolerance_characteristic;
      bevel_angle : Tolerance_characteristic;
    WHERE
      WR1 : ('CHARACTERISTIC_ARM.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        ('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
         )) = 0);
      WR2 : NOT('CHARACTERISTIC_ARM.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN TYPEOF(bevel_angle)) OR
        (SIZEOF(QUERY(it <* bevel_angle\Representation.items |
        ('VALUE_WITH_UNIT_EXTENSION_ARM.ANGLE_DATA_ELEMENT' IN TYPEOF(bevel_angle\Representation.items))
           )) = 1);
  END_ENTITY;

  ENTITY Edge_shape_model
    ABSTRACT SUPERTYPE OF (ONEOF (Bevel_edge_feature_shape_model,
 Step_edge_feature_shape_model,
 Radius_edge_feature_shape_model))
    SUBTYPE OF (Planar_shape_model);
      applied_surface : board_side;
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Radius_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      radius_length : Length_tolerance_characteristic;
  END_ENTITY;

  ENTITY Step_edge_feature_shape_model
    SUBTYPE OF (Edge_shape_model);
      step_width : Length_tolerance_characteristic;
      step_depth : Length_tolerance_characteristic;
  END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N8259 - ISO/TS 10303-1057 Effectivity - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N8002
*)
   
SCHEMA Effectivity_arm;

USE FROM Time_interval_arm;  -- ISO/TS 10303-1065
USE FROM Value_with_unit_arm;  -- ISO/TS 10303-1054

   
ENTITY Dated_effectivity
  SUBTYPE OF (Effectivity);
  start_bound : OPTIONAL date_or_event;
  end_bound   : OPTIONAL date_or_event;
WHERE
  WR1: EXISTS(start_bound) OR EXISTS(end_bound);
END_ENTITY;

ENTITY Effectivity
  SUPERTYPE OF (ONEOF (Serial_effectivity, Dated_effectivity, Lot_effectivity, Time_interval_effectivity));
  id             : STRING;
  name           : STRING;
  description    : OPTIONAL STRING;
END_ENTITY;

ENTITY Effectivity_relationship;
  relation_type : STRING;
  description   : OPTIONAL STRING;
  relating_effectivity  : Effectivity;
  related_effectivity  : Effectivity;
END_ENTITY;

ENTITY Lot_effectivity
  SUBTYPE OF (Effectivity);
  lot_id    : STRING;
  lot_size  : Value_with_unit;
END_ENTITY;

ENTITY Serial_effectivity
  SUBTYPE OF (Effectivity);
  start_id : STRING;
  end_id   : OPTIONAL STRING;
END_ENTITY;

ENTITY Time_interval_effectivity
  SUBTYPE OF (Effectivity);
  effectivity_period : Time_interval;
END_ENTITY;   
   
END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N1174 - ISO/TS 10303-1059 Effectivity application - EXPRESS ARM
*)
   
SCHEMA Effectivity_application_arm;
   
USE FROM Effectivity_arm; -- ISO/TS 10303-1057
   
TYPE effectivity_item = EXTENSIBLE GENERIC_ENTITY SELECT; 
END_TYPE;
   
ENTITY Effectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;

ENTITY Ineffectivity_assignment;
  assigned_effectivity  : Effectivity;
  role                  : STRING;
  items                 : SET [1:?] OF effectivity_item;
END_ENTITY;

   
END_SCHEMA;

(* 
	ISO TC184/SC4/WG12 N8005 - ISO/TS 10303-1004 Elemental geometric shape - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7089
*)
   
SCHEMA Elemental_geometric_shape_arm;
 
USE FROM Foundation_representation_arm; -- ISO/TS 10303-1006
USE FROM Elemental_topology_arm; -- ISO/TS 10303-1005

USE FROM Identification_assignment_arm; -- ISO/TS 10303-1021

  TYPE cartesian_transformation = SELECT (
    Cartesian_transformation_2d, 
	Cartesian_transformation_3d);
  END_TYPE;

  TYPE geometric_model_item = SELECT 
    (Detailed_geometric_model_element,
     Detailed_topological_model_element);
  END_TYPE;

  TYPE template_definition_select = EXTENSIBLE SELECT (Geometric_model);
  END_TYPE; 

  ENTITY Axis_placement
    SUPERTYPE OF (ONEOF (Axis_placement_2d,
      Axis_placement_3d))
    SUBTYPE OF (Detailed_geometric_model_element);
      origin : Cartesian_point;
      x_axis : Direction;
      y_axis : Direction;
    DERIVE
      dim: INTEGER := SIZEOF(origin.coordinates);
    WHERE
      WR1: dim >1;
      WR2: dim = SIZEOF(x_axis.direction_ratios);
      WR3: dim = SIZEOF(y_axis.direction_ratios);
  END_ENTITY;

  ENTITY Axis_placement_2d
    SUBTYPE OF (Axis_placement);
  END_ENTITY;

  ENTITY Axis_placement_3d
    SUBTYPE OF (Axis_placement);
  END_ENTITY;

  ENTITY Axis_placement_mapping;
      source : Axis_placement;
      target : Axis_placement;
    WHERE
      WR1: source\Axis_placement.dim = target\Axis_placement.dim;
  END_ENTITY;

  ENTITY Point
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Cartesian_point
    SUBTYPE OF (Point);
      coordinates : LIST[1:3] OF length_measure;
  END_ENTITY;

  ENTITY Cartesian_transformation_2d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:2] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=2;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=2;
      WR3: SIZEOF(translation.coordinates)=2;
  END_ENTITY;

  ENTITY Cartesian_transformation_3d
    SUBTYPE OF (Detailed_geometric_model_element);
      multiplication_matrix : ARRAY[1:3] OF Direction;
      translation           : Cartesian_point;
    WHERE
      WR1: SIZEOF(multiplication_matrix[1]\Direction.direction_ratios)=3;
      WR2: SIZEOF(multiplication_matrix[2]\Direction.direction_ratios)=3;
      WR3: SIZEOF(multiplication_matrix[3]\Direction.direction_ratios)=3;
      WR4: SIZEOF(translation.coordinates)=3;
  END_ENTITY;

  ENTITY Detailed_geometric_model_element
    ABSTRACT SUPERTYPE OF (ONEOF(
      Direction, 
      Axis_placement, 
      Cartesian_transformation_2d,
	  Cartesian_transformation_3d,
	  Geometric_placement_operation))
    SUBTYPE OF (Representation_item);
  END_ENTITY;

  ENTITY Direction
    SUBTYPE OF (Detailed_geometric_model_element);
      direction_ratios : LIST[2:3] OF REAL;  
  END_ENTITY;

  ENTITY Geometric_coordinate_space
    SUBTYPE OF (Numerical_representation_context);
      dimension_count : INTEGER;
    WHERE
      WR1: dimension_count >0;
  END_ENTITY;

  ENTITY Geometric_model
    SUBTYPE OF (Representation);
      version_id                           : OPTIONAL STRING;
      model_extent                         : OPTIONAL length_measure;
      SELF\Representation.context_of_items : Geometric_coordinate_space;
      SELF\Representation.items            : SET[1:?] OF geometric_model_item;
  END_ENTITY;
  
  ENTITY Geometric_placement
    SUBTYPE OF (Geometric_placement_operation);
      target : Axis_placement;
  END_ENTITY; 

  ENTITY Geometric_placement_operation
    ABSTRACT SUPERTYPE OF ( ONEOF (Geometric_placement,
      Geometric_operator_transformation))
    SUBTYPE OF (Detailed_geometric_model_element);
      source : Axis_placement;  
      template_definition : template_definition_select;
  END_ENTITY; 

  ENTITY Geometric_operator_transformation
    SUBTYPE OF (Geometric_placement_operation);
      target : cartesian_transformation;
  END_ENTITY; 

END_SCHEMA;












(*
ISO TC184/SC4/WG12 N8008 - ISO/TS 10303-1005 Elemental topology - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6896
*)
   
SCHEMA Elemental_topology_arm;

   
USE FROM Foundation_representation_arm;

   
ENTITY Connected_edge_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_edges : SET [1:?] OF Edge;
 END_ENTITY;

 ENTITY Connected_face_set
   SUBTYPE OF (Detailed_topological_model_element);
   connected_faces : SET [1:?] OF Face;
 END_ENTITY;

ENTITY Connected_face_sub_set
  SUBTYPE OF (Connected_face_set);
  parent_face_set : Connected_face_set;
END_ENTITY; 

ENTITY Detailed_topological_model_element
  ABSTRACT SUPERTYPE OF (ONEOF(Connected_edge_set, Connected_face_set,
             Edge, Face, Face_bound, Vertex, (Loop ANDOR Path)))
  SUBTYPE OF (Representation_item);
END_ENTITY;

   
ENTITY Edge
   SUBTYPE OF (Detailed_topological_model_element);
   edge_start : Vertex;
   edge_end   : Vertex;
 END_ENTITY;


ENTITY Edge_loop
   SUBTYPE OF (Loop,Path);
 DERIVE
   ne : INTEGER := SIZEOF(SELF\Path.edge_list);
 WHERE
   WR1: (SELF\Path.edge_list[1].edge_start) :=:
        (SELF\Path.edge_list[ne].edge_end);
 END_ENTITY;

ENTITY Face
   SUBTYPE OF (Detailed_topological_model_element);
   bounds : SET[1:?] OF face_bound;
 WHERE
     WR1: SIZEOF(QUERY(temp <* bounds | 'ELEMENTAL_TOPOLOGY_ARM.FACE_OUTER_BOUND' IN
                                               TYPEOF(temp))) <= 1;
 END_ENTITY;

 ENTITY Face_bound
   SUBTYPE OF(Detailed_topological_model_element);
   bound       :  Loop;
   orientation :  BOOLEAN;
 END_ENTITY;

  ENTITY Face_outer_bound
    SUBTYPE OF (Face_bound);
  END_ENTITY;

ENTITY Loop
   SUPERTYPE OF (ONEOF(Vertex_loop, Edge_loop))
   SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;

ENTITY Oriented_edge
   SUBTYPE OF (Edge);
   edge_definition : Edge;
   orientation  : BOOLEAN;
 DERIVE
   SELF\Edge.edge_start : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_start,
                                            SELF.edge_definition.edge_end);
   SELF\Edge.edge_end   : Vertex := boolean_choice (SELF.orientation,
                                            SELF.edge_definition.edge_end,
                                            SELF.edge_definition.edge_start);
 WHERE
   WR1: NOT ('TOPOLOGY_SCHEMA.ORIENTED_EDGE' IN TYPEOF (SELF.edge_definition));
 END_ENTITY;

ENTITY Path
   SUBTYPE OF (Detailed_topological_model_element);
   edge_list  : LIST [1:?] OF UNIQUE Oriented_edge;
 WHERE
   WR1: path_aligned(SELF);
 END_ENTITY;

ENTITY Vertex
   SUBTYPE OF (Detailed_topological_model_element);
 END_ENTITY;


ENTITY Vertex_loop
   SUBTYPE OF (Loop);
   loop_vertex : vertex;
END_ENTITY;




FUNCTION boolean_choice (b : boolean;
            choice1, choice2 : generic : item)  : generic : item;
 
     IF b THEN
       RETURN (choice1);
     ELSE
       RETURN (choice2);
     END_IF;
   END_FUNCTION;

FUNCTION path_aligned(a_path : Path) : LOGICAL;
   LOCAL
     n : INTEGER;
     p : LOGICAL := TRUE;
   END_LOCAL;
     
     n := SIZEOF (a_path.edge_list);
     REPEAT i := 2 TO n;
       p := p AND (a_path.edge_list[i-1].edge_end :=:
                   a_path.edge_list[i].edge_start);
     END_REPEAT;
     
     RETURN (p);
 END_FUNCTION;

END_SCHEMA;

(* Last update -  24 Aug 2009 *)
(*
   ISO TC184/SC4/WG12 N5540 - ISO/TS 10303-1329 Elementary boundary representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4717
*)

SCHEMA Elementary_boundary_representation_arm;

USE FROM Elemental_geometric_shape_arm; -- ISO/CD-TS 10303-1004

  ENTITY Elementary_brep_shape_representation
	SUBTYPE OF (Geometric_model);
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7858- ISO/TS 10303-1527 Elementary function - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7223
*)

SCHEMA Elementary_function_arm;

   USE FROM Numeric_expression_arm;

   

   ENTITY Abs_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Acos_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Asin_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Atan_function
   SUBTYPE OF (Binary_function_call);
   END_ENTITY;

   ENTITY Binary_function_call
   ABSTRACT SUPERTYPE OF (Atan_function)
   SUBTYPE OF (Binary_numeric_expression);
   END_ENTITY;

   ENTITY Cos_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Exp_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   
   ENTITY Integer_defined_function
   ABSTRACT SUPERTYPE
   SUBTYPE OF (Numeric_defined_function);
   END_ENTITY ;

   
   ENTITY Log10_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Log2_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Log_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Maximum_function
   SUBTYPE OF (Multiple_arity_function_call);
   END_ENTITY;

   ENTITY Minimum_function
   SUBTYPE OF (Multiple_arity_function_call);
   END_ENTITY;

   ENTITY Minus_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Numeric_defined_function
   ABSTRACT SUPERTYPE OF (ONEOF (Integer_defined_function,
   Real_defined_function))
   SUBTYPE OF (Numeric_expression, Defined_function);
   END_ENTITY;

  
   ENTITY Real_defined_function
   ABSTRACT SUPERTYPE
   SUBTYPE OF (Numeric_defined_function);
   END_ENTITY ;

   ENTITY Sin_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Square_root_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Tan_function
   SUBTYPE OF (Unary_function_call);
   END_ENTITY;

   ENTITY Unary_function_call
   ABSTRACT SUPERTYPE OF (ONEOF (Abs_function,
   Minus_function,
   Sin_function,
   Cos_function,
   Tan_function,
   Asin_function,
   Acos_function,
   Exp_function,
   Log_function,
   Log2_function,
   Log10_function,
   Square_root_function))
   SUBTYPE OF (Unary_numeric_expression);
   END_ENTITY;




   END_SCHEMA; 

(*
 ISO TC184/SC4/WG12 N2114 - ISO/TS 10303-1064 Event - EXPRESS ARM
*)

SCHEMA Event_arm; 

USE FROM Date_time_arm;    -- ISO/TS 10303-1010

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 

ENTITY Event;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  actual_start_date : OPTIONAL date_or_date_time_select;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;

ENTITY Event_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_event : Event;
  related_event : Event;
END_ENTITY;

ENTITY Relative_event
  SUBTYPE OF (Event);
  base_event : Event;
  offset : Duration;
END_ENTITY;

END_SCHEMA;  -- Event_arm
(*
 ISO TC184/SC4/WG12 N2116 - ISO/TS 10303-1364 Event assignment - EXPRESS ARM
*) 


SCHEMA Event_assignment_arm; 

USE FROM Event_arm;    -- ISO/TS 10303-1064


TYPE event_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Event_assignment;
  assigned_event : Event;
  items : SET[1:?] OF event_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Event_assignment_arm

(*
 ISO TC184/SC4/WG12 N7846 - ISO/TS 10303-1788 Explicit constraints - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7202
*)


SCHEMA Explicit_constraints_arm;

USE FROM Expression_arm;

USE FROM Foundation_representation_arm;

USE FROM Parameterization_and_variational_representation_arm;

TYPE constraint_group_member = SELECT
  (Explicit_constraint,
   Simultaneous_constraint_group);
END_TYPE;

TYPE variational_parameter_select = SELECT
     (Bound_variational_parameter,
      Unbound_variational_parameter);
END_TYPE;


ENTITY Defined_constraint 
  ABSTRACT SUPERTYPE OF (Equal_parameter_constraint)
  SUBTYPE OF (Explicit_constraint);
END_ENTITY; 

ENTITY Equal_parameter_constraint
  SUBTYPE OF (Defined_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF variational_parameter_select;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF variational_parameter_select;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.constrained_elements +
    SELF\Explicit_constraint.reference_elements) >= 2;
END_ENTITY;

ENTITY Explicit_constraint
  ABSTRACT SUPERTYPE OF (ONEOF(Defined_constraint,
                               Free_form_assignment,
                               Free_form_relation))
  SUBTYPE OF (Variational_representation_item); 
  description : OPTIONAL STRING;
  constrained_elements : SET[1:?] OF Representation_item;
  reference_elements   : SET[0:?] OF Representation_item;
WHERE
  WR1: SIZEOF(constrained_elements * reference_elements) = 0;
END_ENTITY;


ENTITY Free_form_assignment
  SUBTYPE OF (Explicit_constraint);
   SELF\Explicit_constraint.constrained_elements : 
     SET[1:?] OF variational_parameter_select;
   SELF\Explicit_constraint.reference_elements   : 
    SET[1:?] OF variational_parameter_select;
   constraining_expression : Expression;
END_ENTITY; 


ENTITY Free_form_relation
  SUBTYPE OF (Explicit_constraint);
    SELF\Explicit_constraint.constrained_elements : 
      SET[1:?] OF variational_parameter_select;
    SELF\Explicit_constraint.reference_elements   : 
      SET[0:?] OF variational_parameter_select;
   constraining_expression : Boolean_expression;
END_ENTITY; 

ENTITY Simultaneous_constraint_group
  SUBTYPE OF (Variational_representation_item);
  constraint_group : SET[2:?] OF constraint_group_member;
END_ENTITY;

END_SCHEMA; -- Explicit_constraint_schema_arm
(*
 ISO TC184/SC4/WG12 N7861 - ISO/TS 10303-1342 Expression - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7214
*)


(*
	New version is logically identical to old but imports numeric expressions from new proposed module
	
	*)
	
	SCHEMA Expression_arm;
	
	USE FROM Generic_expression_arm;
	USE FROM Numeric_expression_arm;
	REFERENCE FROM Numeric_expression_arm(Is_int_expr);
	
 	ENTITY Concat_expression
 	SUBTYPE OF (String_expression, Multiple_arity_generic_expression);
 	SELF\Multiple_arity_generic_expression.operands: LIST [2 : ?] OF String_expression;
 	END_ENTITY;
 	
 	
 	ENTITY Format_function
 	SUBTYPE OF (String_expression, Binary_generic_expression);
 	DERIVE
 	value_to_format: Generic_expression:=SELF\Binary_generic_expression.operands[1];
 	format_string:Generic_expression:=SELF\Binary_generic_expression.operands[2];
 	WHERE
 	WR1: (('EXPRESSION_ARM.NUMERIC_EXPRESSION')
 	IN TYPEOF(value_to_format))
 	AND (('EXPRESSION_ARM.STRING_EXPRESSION')
 	IN TYPEOF(format_string));
 	END_ENTITY;
 	
 	ENTITY Index_expression
 	SUBTYPE OF (String_expression, Binary_generic_expression);
 	
 	DERIVE
 	operand:Generic_expression:= SELF\Binary_generic_expression.operands[1];
 	index:Generic_expression:= SELF\Binary_generic_expression.operands[2];
 	WHERE
 	WR1: ('EXPRESSION_ARM.STRING_EXPRESSION' IN TYPEOF(operand))
 	AND ('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION' IN TYPEOF(index));
 	WR2: Is_int_expr (index);
 	END_ENTITY;
	
  	
 	 	
 	ENTITY Like_expression
 	SUBTYPE OF (Comparison_expression);
 	WHERE
 	WR1: ('EXPRESSION_ARM.STRING_EXPRESSION'
 	IN TYPEOF(SELF\Comparison_expression.operands[1])) AND
 	('EXPRESSION_ARM.STRING_EXPRESSION'
 	IN TYPEOF(SELF\Comparison_expression.operands[2]));
 	END_ENTITY;
 	
 	
 	ENTITY Simple_string_expression
 	ABSTRACT SUPERTYPE OF (ONEOF (String_literal,String_variable))
 	SUBTYPE OF (String_expression, Simple_generic_expression);
 	END_ENTITY;
 	
 	ENTITY Sql_mappable_defined_function
		ABSTRACT SUPERTYPE
		SUBTYPE OF (Defined_function);
        END_ENTITY;
 	
 	ENTITY String_defined_function
 	ABSTRACT SUPERTYPE
 	SUBTYPE OF (Defined_function, String_expression);
 	END_ENTITY ;
 	
 	ENTITY String_expression
 	ABSTRACT SUPERTYPE OF (ONEOF (Simple_string_expression,
 	Index_expression,
 	Substring_expression,
 	Concat_expression,
 	Format_function,
 	String_defined_function))
 	SUBTYPE OF (Expression);
 	END_ENTITY;
 	
 	ENTITY String_literal
 	SUBTYPE OF (Simple_string_expression, Generic_literal);
 	the_value: STRING;
 	END_ENTITY;
 	
 	ENTITY String_variable
 	SUBTYPE OF (Simple_string_expression, Variable);
 	END_ENTITY;
 	
 	ENTITY Substring_expression
 	SUBTYPE OF (String_expression, Multiple_arity_generic_expression);
 	
 	DERIVE
 	operand:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[1];
 	index1:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[2];
 	index2:Generic_expression:=SELF\Multiple_arity_generic_expression.operands[3];
 	WHERE
 	WR1: ('EXPRESSION_ARM.STRING_EXPRESSION'
 	IN TYPEOF(operand))
 	AND ('EXPRESSION_ARM.NUMERIC_EXPRESSION'
 	IN TYPEOF(index1))
 	AND ('EXPRESSION_ARM.NUMERIC_EXPRESSION'
 	IN TYPEOF(index2));
 	WR2: SIZEOF(SELF\Multiple_arity_generic_expression.operands)=3;
 	WR3: Is_int_expr (index1);
 	WR4: Is_int_expr (index2);
 	END_ENTITY;
 	
 	
 
 	
 
	
	END_SCHEMA; 
(*
   ISO TC184/SC4/WG12 N8262 - ISO/TS 10303-1667 Extended basic geometry - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6619
*)

SCHEMA Extended_basic_geometry_arm;

USE FROM Basic_geometry_arm;	-- ISO/TS 10303-1652
USE FROM Geometric_model_relationship_arm;

  SUBTYPE_CONSTRAINT alternate_extended_geometry_items FOR
    Detailed_geometric_model_element;
    ONEOF (Direction,
           Axis_placement,
           Cartesian_transformation_2d,
           Cartesian_transformation_3d,
           Curve,
           Geometric_model_element_relationship,
           Surface,
           Vector);
  END_SUBTYPE_CONSTRAINT;

  ENTITY Detailed_geometric_model_element_relationship;
    item_1: Detailed_geometric_model_element;
    item_2: Detailed_geometric_model_element;
   WHERE 
    WR1: item_1 <> item_2;
  END_ENTITY;

  ENTITY Geometric_model_element_relationship
    SUBTYPE OF (Detailed_geometric_model_element_relationship, Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Vector
    SUBTYPE OF (Detailed_geometric_model_element);
      orientation: Direction;
      magnitude: length_measure;
    WHERE
      WR1 : magnitude >= 0.0 ;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N8011 - ISO/TS 10303-1776 Extended date - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5368
*)
SCHEMA Extended_date_arm; 

USE FROM Date_time_arm; 

  TYPE date_select = SELECT ( 
    Calendar_date, 
    Year_month, 
    Date,
    Ordinal_date, 
    Week_of_year_and_day_date);
  END_TYPE; 

  TYPE ed_date_or_date_time_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_or_date_time_select WITH (
    Calendar_date, 
    Year_month, 
    Date,
    Ordinal_date, 
    Week_of_year_and_day_date);
  END_TYPE;
  
  TYPE day_in_year_number = INTEGER;
    WHERE
      WR1: {1 <= SELF <= 366};
  END_TYPE; 

  TYPE day_in_week_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 7 };
  END_TYPE; 
    
  TYPE week_in_year_number = INTEGER;
    WHERE
      WR1: { 1 <= SELF <= 53 };
  END_TYPE; 
   
  ENTITY Year_month;
    month_component : month_in_year_number; 
    year_component  : year_number; 
  END_ENTITY;  

  ENTITY Date;
    year_component  : year_number; 
  END_ENTITY;  
 
  ENTITY Ordinal_date;
      day_component  : day_in_year_number;   
      year_component : year_number; 
    WHERE 
      WR1:  ( NOT leap_year ( SELF  . year_component ) AND  { 1 <= day_component <= 365 } ) OR 
        ( leap_year ( SELF . year_component ) AND { 1 <= day_component <= 366 } ) ;  
  END_ENTITY; 
 
  ENTITY Week_of_year_and_day_date;
    day_component  : OPTIONAL day_in_week_number;   
    year_component : year_number; 
    week_component : week_in_year_number; 
  END_ENTITY; 

  FUNCTION leap_year
    (year : year_number) : BOOLEAN;
      IF ( ( ( ( year MOD  4 ) = 0 ) AND 
        ( ( year MOD  100 ) <> 0 ) ) OR ( ( year MOD 400 ) = 0 ) ) 
        THEN 
          RETURN  ( TRUE ) ; 
        ELSE 
          RETURN ( FALSE ) ; 
      END_IF ; 
  END_FUNCTION;

END_SCHEMA; 
(*
ISO TC184/SC4/WG12 N8265 - ISO/TS 10303-1106 Extended measure representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N5371
*) 


SCHEMA Extended_measure_representation_arm;

USE FROM Qualified_measure_arm; -- ISO/CD-TS 10303-1782

  ENTITY Measure_item_with_precision
    SUBTYPE OF (Measure_item);
      significant_digits : INTEGER;
  END_ENTITY;

  ENTITY Value_limit
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
    WHERE
      WR1:SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;   

  ENTITY Value_list
    SUBTYPE OF (Measure_item);
      values : LIST[1:?] OF Measure_item;
  END_ENTITY;

  ENTITY Value_range
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_unit;
      upper_limit : Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Value_range_with_global_unit
    SUBTYPE OF (Measure_item);
      lower_limit : Numerical_item_with_global_unit;
      upper_limit : Numerical_item_with_global_unit;
  END_ENTITY;

  ENTITY Value_set
    SUBTYPE OF (Measure_item);
      values : SET[1:?] OF Measure_item;
  END_ENTITY;

  ENTITY Value_with_tolerances
    SUBTYPE OF (Measure_item);
      item_value : Numerical_item_with_unit;
      lower_limit : REAL;
      upper_limit : REAL;
  END_ENTITY;

  SUBTYPE_CONSTRAINT alternate_measure_items FOR Measure_item;
    ABSTRACT SUPERTYPE;
    ONEOF (Measure_item_with_precision,
           Numerical_item_with_global_unit,
           Numerical_item_with_unit,
           Value_list,
           Value_range,
           Value_range_with_global_unit,
           Value_set,
           Value_with_tolerances);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N5374 - ISO/TS 10303-1275 External class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4732
*) 

SCHEMA External_class_arm;

USE FROM Class_arm;    -- ISO/TS 10303-1070

USE FROM External_source_arm; -- ISO/CD-TS 10303-1331

USE FROM Name_assignment_arm; -- ISO/TS 10303-1340


  TYPE external_class_assigned_name_select = SELECT BASED_ON assigned_name_select WITH 
    (External_class_library);
  END_TYPE; 

  ENTITY External_class
    SUBTYPE OF (Class);
      external_source : External_class_library;
  END_ENTITY;

  ENTITY External_class_library
    SUBTYPE OF (External_source);
  END_ENTITY;

END_SCHEMA;


(*
   ISO TC184/SC4/WG12 N5377 - ISO/TS 10303-1777 External currency - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4735
*)

SCHEMA External_currency_arm;

USE FROM Currency_arm; -- ISO/CD-TS 10303-1775

USE FROM External_unit_arm; -- ISO/CD-TS 10303-1780

  ENTITY External_currency
    SUBTYPE OF (Currency, External_context_dependent_unit);
  END_ENTITY;

  SUBTYPE_CONSTRAINT currency_subtypes FOR Currency; 
	(ONEOF (External_currency,
	  Iso4217_currency));
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N1207 - ISO/TS 10303-1128 External item identification assignment - EXPRESS ARM
*)

 
SCHEMA External_item_identification_assignment_arm;

TYPE external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;

ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6234 - ISO/TS 10303-1778 External library - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5380
*)

SCHEMA External_library_arm;

USE FROM External_source_arm;  -- ISO/TS 10303-1331

USE FROM Plib_class_reference_arm; -- ISO/TS 10303-1291

  TYPE el_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
    (User_defined_library_or_dictionary);
  END_TYPE;

  ENTITY Iso15926_4_rdl
    SUBTYPE OF (Known_source); 
  END_ENTITY; 

  ENTITY Known_source 
    ABSTRACT SUPERTYPE OF (ONEOF(Iso15926_4_rdl,
      Otd_catalogue,
      Otd_dictionary,
      Plib_dictionary,
      Plib_library))
    SUBTYPE OF (External_source); 
  END_ENTITY; 

  ENTITY Otd_catalogue 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 

  ENTITY Otd_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 

  ENTITY Plib_dictionary 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
 
  ENTITY Plib_library 
    SUBTYPE OF (Known_source); 
  END_ENTITY; 
  
  ENTITY User_defined_library_or_dictionary 
    SUBTYPE OF (External_source); 
    INVERSE
      source : External_source_identification FOR item;
  END_ENTITY;

  SUBTYPE_CONSTRAINT external_source_subtypes FOR External_source; 
	(ONEOF (Known_source,
	  User_defined_library_or_dictionary));
  END_SUBTYPE_CONSTRAINT;
  
END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7678 - ISO/TS 10303-1033 External model - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1228
*)

SCHEMA External_model_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM File_identification_arm;

ENTITY External_geometric_model
SUBTYPE OF (Geometric_model);
   SELF\Representation.items: SET[1:1] OF Axis_placement;
   external_file: Digital_file;
WHERE
WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 3;
WR2: SELF\Representation.context_of_items.kind = 'external';
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N8014 - ISO/TS 10303-1129 External properties - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7439
*)

SCHEMA External_properties_arm;

USE FROM External_library_arm; -- ISO/TS 10303-1778

USE FROM Identification_assignment_arm; -- ISO/TS 10303-1021

USE FROM Independent_property_arm; -- ISO/TS 10303-1036

USE FROM Plib_class_reference_arm; -- ISO/TS 10303-1291


  TYPE external_property_select = SELECT (Plib_property_reference, External_library_property);
  END_TYPE;

  ENTITY External_library_property
    SUBTYPE OF (Independent_property);
      external_id  : STRING;    
      source       : External_source;
    DERIVE
      library_type : STRING := source.id;
  END_ENTITY;

  ENTITY Plib_property_reference
    SUBTYPE OF (Independent_property);
      code       : STRING;
      version    : STRING;
      name_scope : Plib_class_reference;
  END_ENTITY;

  SUBTYPE_CONSTRAINT plib_or_external FOR Independent_property;
    ONEOF(Plib_property_reference, External_library_property);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7777 - ISO/TS 10303-1779 External representation item - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5383
*)

SCHEMA External_representation_item_arm;

USE FROM External_library_arm; -- ISO/TS 10303-1778

USE FROM Foundation_representation_arm; -- ISO/TS 10303-1006

  ENTITY External_representation_item
    SUBTYPE OF (Representation_item);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;

  ENTITY External_string_representation_item
    SUBTYPE OF (External_representation_item);
  END_ENTITY;

  ENTITY Externally_defined_representation
    SUBTYPE OF (Representation);
    SELF\Representation.items : SET [1:?] OF External_representation_item;
    external_source : External_source;
  END_ENTITY;
  
END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N5386 - ISO/TS 10303-1331 External source - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5075
 *)

SCHEMA External_source_arm;

  ENTITY External_source; 
    id          : STRING;
    description : OPTIONAL STRING;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N5389 - ISO/TS 10303-1780 External unit - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4747
*)

SCHEMA External_unit_arm;

USE FROM External_library_arm; -- ISO/CD-TS 10303-1778

USE FROM Value_with_unit_arm; -- ISO/TS 10303-1054


  ENTITY External_context_dependent_unit
    SUBTYPE OF (Context_dependent_unit);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;

  ENTITY External_conversion_based_unit
    SUBTYPE OF (Conversion_based_unit);
      id              : STRING;
      external_source : External_source;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7756 - ISO/CD-TS - 10303-1821 Externally conditioned data quality criteria - EXPRESS ARM*)
(* UNDER DEVELOPMENT *)
SCHEMA Externally_conditioned_data_quality_criteria_arm;

  USE FROM Document_assignment_arm;

  USE FROM Product_data_quality_criteria_arm;

  USE FROM Externally_conditioned_data_quality_inspection_result_arm;

  REFERENCE FROM Support_resource_arm
    (bag_to_set);
 
  TYPE ecdq_documented_element_select =  EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
   (Externally_conditioned_data_quality_criterion);
  END_TYPE; 
  
  ENTITY Disallowed_assembly_relationship_usage
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,
     ['ASSEMBLY_STRUCTURE_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP']);
  END_ENTITY;

  ENTITY Excessive_use_of_groups
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, ['GROUP_ARM.GROUP']);
  END_ENTITY;
  
  ENTITY Excessive_use_of_layers
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,['LAYER_ASSIGNMENT_ARM.LAYER']);
  END_ENTITY;

  ENTITY Externally_conditioned_data_quality_criteria_representation
    SUBTYPE OF(Data_quality_criteria_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERIA_ARM.' +
                               'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERION' IN TYPEOF(q))) > 0;
  END_ENTITY;

  ENTITY Externally_conditioned_data_quality_criterion
    SUPERTYPE OF (ONEOF(Violation_of_agreed_conditions_on_system_environment,
                        Miscellaneous_violation,
                        Use_of_restricted_functionality))
    SUBTYPE OF(Data_quality_criterion,Data_quality_measurement_requirement);
    WHERE
      WR1 : SIZEOF(USEDIN(SELF,
            'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
            'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'+
            'CRITERION'
            )) = 0;
      WR2 : SIZEOF(USEDIN(SELF,
                    'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATING_REPRESENTATION_ITEM')) = 0;
  END_ENTITY;

  ENTITY Inappropriate_element_visibility
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['APPEARANCE_ASSIGNMENT_ARM.STYLED_ELEMENT']);
  END_ENTITY;

  ENTITY Inappropriate_use_of_layer
    SUBTYPE OF(Use_of_restricted_functionality);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
    ['LAYER_ASSIGNMENT_ARM.LAYER']);
  END_ENTITY;

  ENTITY Inconsistent_element_reference
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
    ['FOUNDATION_REPRESENTATION_ARM.REPRESENTATION_ITEM']);
  END_ENTITY;

  ENTITY Miscellaneous_violation
    ABSTRACT SUPERTYPE OF (ONEOF(Inappropriate_element_visibility,
                        Inconsistent_element_reference,
                        Non_referenced_coordinate_system,
                        Unused_shape_element,
                        Wrong_element_name))
    SUBTYPE OF(Externally_conditioned_data_quality_criterion);
  END_ENTITY;

  ENTITY Non_agreed_accuracy_parameter_usage
    SUBTYPE OF(Violation_of_agreed_conditions_on_system_environment);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
     ['FOUNDATION_REPRESENTATION_ARM.NUMERICAL_REPRESENTATION_CONTEXT']);
  END_ENTITY;
  
  ENTITY  Non_agreed_scale_usage
    SUBTYPE OF(Violation_of_agreed_conditions_on_system_environment);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,
     ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.CARTESIAN_TRANSFORMATION_3D']);
  END_ENTITY;

  ENTITY Non_agreed_unit_usage
    SUBTYPE OF(Violation_of_agreed_conditions_on_system_environment);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF,
     ['FOUNDATION_REPRESENTATION_ARM.NUMERICAL_REPRESENTATION_CONTEXT']);
  END_ENTITY;

  ENTITY Non_referenced_coordinate_system
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.AXIS_PLACEMENT']);
  END_ENTITY;

  ENTITY Unused_shape_element
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['FOUNDATION_REPRESENTATION_ARM.REPRESENTATION_ITEM']);
  END_ENTITY;

  ENTITY Use_of_restricted_functionality
    ABSTRACT SUPERTYPE OF (ONEOF(Disallowed_assembly_relationship_usage,
                        Excessive_use_of_groups,
                        Excessive_use_of_layers,
                        Inappropriate_use_of_layer))
    SUBTYPE OF(Externally_conditioned_data_quality_criterion);
  END_ENTITY;
  
  ENTITY Violation_of_agreed_conditions_on_system_environment
    ABSTRACT SUPERTYPE OF (ONEOF(Non_agreed_accuracy_parameter_usage,
                        Non_agreed_scale_usage,
                        Non_agreed_unit_usage))
    SUBTYPE OF(Externally_conditioned_data_quality_criterion);
  END_ENTITY;

  ENTITY Wrong_element_name
    SUBTYPE OF(Miscellaneous_violation);
  WHERE
    WR1: validate_ecdq_inspected_elements_type(SELF, 
      ['FOUNDATION_REPRESENTATION_ARM.REPRESENTATION_ITEM']);
  END_ENTITY;

  FUNCTION validate_ecdq_inspected_elements_type
      (ei:Externally_conditioned_data_quality_criterion;
       type_list:BAG OF STRING):LOGICAL;
       LOCAL
         edqir: SET OF
          Externally_conditioned_data_quality_inspection_result:=[];
         dir: SET OF
          Data_quality_inspection_instance_report:=[];
         ediri: SET OF
          Externally_conditioned_Data_quality_inspection_instance_report_item:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all Externally_conditioned_data_quality_inspection_instance_report_item
       -- instances associated with the given Externally_conditioned_data_quality_criterion
       -- via Externally_conditioned_data_quality_inspection_result and
       -- data_quality_instance_report
  
       edqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(edqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(edqir);
         dir := dir + QUERY(q <* bag_to_set(USEDIN(edqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       IF(SIZEOF(dir) = 0) THEN
         RETURN(TRUE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(dir);
         ediri := ediri + QUERY(q <* dir[i].inspected_instances|
             'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
  
       -- STEP-2
       -- check whether the types of inspected_elements attribute
       -- of collected instances include all the type names 
       -- in the type list given as an input argument of this 
       -- function and they do not include any other type names. 
  
       -- If there is no instance_report_item, then this function returns true.
       IF(SIZEOF(ediri) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- When reports exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(ediri);
         -- If size of inspected_elements is not equal to the size of
         -- type_list, then return false.
         IF(SIZEOF(ediri[i].inspected_elements) <> 
            SIZEOF(type_list)) THEN
           RETURN(FALSE);
         END_IF;
         -- check all elements of type_lists 
         -- for each elements of inspected_elements.
         t_type_list := type_list;
         REPEAT j:= 1 TO SIZEOF(ediri[i].inspected_elements);
           REPEAT k:= 1 TO SIZEOF(t_type_list);
             IF(t_type_list[k] IN
                TYPEOF(ediri[i].inspected_elements[j])) THEN
              t_type_list := t_type_list - t_type_list[k];
              ESCAPE;
             END_IF;
           END_REPEAT;
         END_REPEAT;
         IF(SIZEOF(t_type_list) > 0) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
      RETURN(TRUE);
  END_FUNCTION;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7759 - ISO/CD-TS - 10303-1822 Externally conditioned data quality inspection result - EXPRESS ARM*)
(* UNDER DEVELOPMENT *)
SCHEMA Externally_conditioned_data_quality_inspection_result_arm;

  USE FROM Appearance_assignment_arm;

  USE FROM Assembly_structure_arm;

  USE FROM Elemental_geometric_shape_arm;

  USE FROM Externally_conditioned_data_quality_criteria_arm;
  
  USE FROM Foundation_representation_arm;

  USE FROM Group_arm;
  
  USE FROM Layer_assignment_arm;

  USE FROM Product_data_quality_inspection_result_arm;

  REFERENCE FROM Support_resource_arm(bag_to_set);

  TYPE inspected_ecdq_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON inspected_element_select WITH
    (Assembly_component_relationship,
     Axis_placement, 
     Cartesian_transformation_3d, 
     Group,
     Layer,
     Numerical_representation_context, 
     Representation_item,
     Styled_element);
  END_TYPE;

  ENTITY Externally_conditioned_data_quality_inspection_result_representation
    SUBTYPE OF(Data_quality_inspection_result_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
                               'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT' IN TYPEOF(q))) > 0;
  END_ENTITY;

  ENTITY Externally_conditioned_data_quality_inspection_result
    SUBTYPE OF(Data_quality_inspection_result);
    WHERE
      WR1 : 'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERIA_ARM.'+
            'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERION' IN TYPEOF
            (SELF\data_quality_inspection_result.criterion_inspected);
  END_ENTITY;

  ENTITY Externally_conditioned_data_quality_inspection_instance_report_item
    SUBTYPE OF(Data_quality_inspection_instance_report_item);
      SELF\Data_quality_inspection_instance_report_item.inspected_elements : SET [1:?] OF inspected_ecdq_element_select;
      WHERE
        WR1 : SIZEOF(QUERY(i1 <* 
                bag_to_set(USEDIN(SELF, 'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+ 
                'DATA_QUALITY_INSPECTION_INSTANCE_REPORT.'+ 'INSPECTED_INSTANCES'))|
                NOT('EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT_ARM.'+ 
                    'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT' 
                    IN TYPEOF(i1.inspection_result))))=0;
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N1285 - ISO/TS 10303-1512 Faceted boundary representation - EXPRESS ARM
*)

SCHEMA Faceted_boundary_representation_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Faceted_brep_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N6720 - ISO/TS 10303-1380 Fea_definition_relationships_arm - EXPRESS ARM
*)



SCHEMA Fea_definition_relationships_arm;

USE FROM Activity_arm;                 --ISO/TS 10303-1047

USE FROM Analysis_arm;                 --ISO/TS 10303-1372

USE FROM Elemental_topology_arm;       --ISO/TS 10303-1005

USE FROM Finite_element_analysis_arm;  --ISO/TS 10303-1381

USE FROM Finite_elements_arm;          --ISO/TS 10303-1383

USE FROM Independent_property_arm;     --ISO/TS 10303-1036

USE FROM Product_analysis_arm;--ISO/TS 10303-1387

USE FROM Product_view_definition_arm;--ISO/TS 10303-1019

USE FROM Property_assignment_arm;--ISO/TS 10303-1030

USE FROM State_definition_arm;--ISO/TS 10303-1255

TYPE discretised_action_model_select = EXTENSIBLE SELECT 
  (Fe_analysis_control_step,
   Model_action_domain);
END_TYPE;

TYPE discretised_product_model_select = EXTENSIBLE SELECT 
  (Fea_model,
   Model_product_domain);
END_TYPE;

TYPE discretised_state_model_select = EXTENSIBLE SELECT 
  (Fe_analysis_state,
   Model_state_domain);
END_TYPE;

TYPE idealised_action_select = EXTENSIBLE SELECT 
  (Activity,
   Physical_action_domain);
END_TYPE;

TYPE idealised_product_select = EXTENSIBLE SELECT 
  (Physical_product_domain,
   Product_view_definition);
END_TYPE;

TYPE idealised_state_select = EXTENSIBLE SELECT 
  (Physical_state_domain,
   State_definition);
END_TYPE;

ENTITY Action_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_action_model_select;
  idealised_action : idealised_action_select;
END_ENTITY;

ENTITY Element_topological_relationship;
  element_ref : element;
  item : Detailed_topological_model_element;
  aspect : Element_shape_aspect;
END_ENTITY;

ENTITY Fea_beam_section_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Independent_property;
  idealising : Curve_section_properties;
END_ENTITY;

ENTITY Fea_model_topological_relationship;
  item : Detailed_topological_model_element;
  model_ref : Fea_model;
END_ENTITY;

ENTITY Fea_shell_section_distribution_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Assigned_property;
  idealising : Surface_property;
END_ENTITY;

ENTITY Fea_shell_section_idealisation_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  idealised : Independent_property;
  idealising : Surface_property;
END_ENTITY;

ENTITY Node_topological_relationship;
  item : Detailed_topological_model_element;
  node_ref : Node;
END_ENTITY;

ENTITY Product_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_product_model_select;
  idealised_product : idealised_product_select;
END_ENTITY;

ENTITY Same_discretised_action_model;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF discretised_action_model_select;
END_ENTITY;

ENTITY Same_discretised_state_model;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF discretised_state_model_select;
END_ENTITY;

ENTITY Same_idealised_action;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF idealised_action_select;
END_ENTITY;

ENTITY Same_idealised_state;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  equivalent_records : SET [2 : ?] OF idealised_state_select;
END_ENTITY;

ENTITY State_view_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  discretised_model : discretised_state_model_select;
  idealised_state : idealised_state_select;
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N4394 - ISO/TS 10303-1769 FEA material aspects - EXPRESS ARM
   *)

SCHEMA Fea_material_aspects_arm;

USE FROM Document_definition_arm;--ISO/TS 10303-1123

USE FROM Finite_elements_arm;--ISO/TS 10303-1383

USE FROM Generic_material_aspects_arm;--ISO/TS 10303-1681

USE FROM Part_and_zone_laminate_tables_arm;--ISO/TS 10303-1771

USE FROM Stock_material_arm;--ISO/TS 10303-1771

TYPE composite_structure_select = EXTENSIBLE SELECT 
  (Composite_assembly_sequence_definition,
   Laminate_table,
   Ply_laminate_sequence_definition);
END_TYPE;

ENTITY Fea_material_definition;
  description : STRING;
  elements : SET [0 : ?] OF definition_element;
  material_identification : STRING;
END_ENTITY;

ENTITY Fea_material_property
SUBTYPE OF (Material_property_value_representation);
  property_use : Fea_material_definition;
  composite_structure : OPTIONAL composite_structure_select;
END_ENTITY;

ENTITY Fea_material_specification
SUBTYPE OF (Document_definition);
  specification_use : Fea_material_definition;
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N8017 - ISO/TS 10303-1671 Feature and connection zone - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7442
*)

SCHEMA Feature_and_connection_zone_arm; 

	USE FROM Shape_feature_arm; 
	USE FROM Surface_conditions_arm;
    REFERENCE FROM Support_resource_arm(bag_to_set); 

ENTITY Connection_zone
  SUBTYPE OF (Shape_element);
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
WHERE
  WR1 : NOT EXISTS (SELF\Shape_element.description);
  WR2 : NOT EXISTS (SELF\Shape_element.element_name);
END_ENTITY;

ENTITY Definitional_shape_element
  ABSTRACT SUPERTYPE
  SUBTYPE OF (Shape_element);
  connection_area : OPTIONAL SET[1:?] OF Connection_zone;
INVERSE
  surface_conditions : SET OF Surface_condition FOR described_element; 		
UNIQUE
  UR1 : SELF\Shape_element.element_name, 
        SELF\shape_element.containing_shape;
END_ENTITY;

ENTITY Feature_definition_with_connection_area
  SUBTYPE OF (Shape_feature_definition);
  connection_area : OPTIONAL SET [1:?] OF Connection_zone;
END_ENTITY;

ENTITY Non_definitional_shape_element 	 
  SUBTYPE OF (Shape_element); 	 
END_ENTITY;

SUBTYPE_CONSTRAINT fac_shape_element FOR Shape_element;
  ONEOF (Instanced_feature, Placed_feature) ANDOR
  ONEOF (Definitional_shape_element, Non_definitional_shape_element);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2123 - ISO/TS 10303-1127 File identification - EXPRESS ARM
*)

SCHEMA File_identification_arm;

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128


TYPE located_select = SELECT BASED_ON external_identification_item WITH 
   (File);
END_TYPE; 

ENTITY Digital_file
  SUBTYPE OF (File);
END_ENTITY;

ENTITY File
  ABSTRACT SUPERTYPE OF (ONEOF (Digital_file,
                                Hardcopy));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;

ENTITY File_location_identification
  SUBTYPE OF (External_item_identification);
WHERE
  WR1: 'FILE_IDENTIFICATION_ARM.FILE' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY;

ENTITY Hardcopy
  SUBTYPE OF (File);
END_ENTITY;

END_SCHEMA;  -- File_identification_arm
(*
   ISO TC184/SC4/WG12 N6899 - ISO/TS 10303-1672 Fill area style - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5392
*)

SCHEMA Fill_area_style_arm;

USE FROM Basic_curve_arm;	-- ISO/TS 10303-1651
USE FROM Curve_appearance_arm;	-- ISO/TS 10303-1003
USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753
USE FROM Extended_basic_geometry_arm; 	-- ISO/TS 10303-1667 

  ENTITY Solid_fill_area_style;
    fill_colour : Colour; 
  END_ENTITY;  

  ENTITY Externally_defined_hatch_style
    SUBTYPE OF (Hatch_style); 
  END_ENTITY;

  ENTITY Externally_defined_tile_style
    SUBTYPE OF (Tile_style); 
  END_ENTITY;

  ENTITY Hatch_style
    ABSTRACT SUPERTYPE OF (ONEOF(Externally_defined_hatch_style, User_defined_hatch_style))
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Tile_style
    ABSTRACT SUPERTYPE OF (ONEOF(Externally_defined_tile_style, User_defined_tile_style))
	SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY User_defined_hatch_style
    SUBTYPE OF (Hatch_style);
      hatch_line_appearance         : Curve_appearance;
      start_of_next_hatch_line      : Vector;
      point_of_reference_hatch_line : Cartesian_point;
      pattern_start                 : Cartesian_point;
      hatch_line_angle              : Angle_data_element;
    WHERE
     WR1 : 'STYLED_CURVE_ARM.SOLID_CURVE_FONT' IN TYPEOF(SELF.hatch_line_appearance.font);
  END_ENTITY;

  ENTITY User_defined_tile_style
    SUBTYPE OF (Tile_style);
      first_direction_repeat_factor  : Vector;
      second_direction_repeat_factor : Vector;
      tiling_scale                   : INTEGER;
  END_ENTITY;
  
SUBTYPE_CONSTRAINT fas_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
          ONEOF (Hatch_style, Tile_style);
END_SUBTYPE_CONSTRAINT; 

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N6723 - ISO/CD-TS 10303-1381 Finite element analysis - EXPRESS ARM
  
*)


SCHEMA Finite_element_analysis_arm;

USE FROM Analysis_characterized_arm;      --ISO/TS 10303-1475

USE FROM Document_definition_arm;         --ISO/TS 10303-1123

USE FROM Elemental_geometric_shape_arm;   --ISO/TS 10303-1004

USE FROM Finite_elements_arm;             --ISO/TS 10303-1383

TYPE constraint_definition_reference = SELECT 
  (Detailed_geometric_model_element,
   Fea_group,
   Node);
END_TYPE;

TYPE definition_reference = SELECT 
  (Detailed_geometric_model_element,
   Element,
   Fea_group,
   Node);
END_TYPE;

TYPE fe_analysis_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analysis_approval_item WITH
  (Fe_analysis,
   Fe_analysis_results);
END_TYPE;

ENTITY Analysis_message
SUBTYPE OF (Fe_analysis_state_definition);
  message_level : STRING;
  quality : STRING;
END_ENTITY;

ENTITY Analysis_report_representation
SUPERTYPE OF (Graphical_representation ANDOR Tabular_representation);
  control : OPTIONAL Fe_analysis;
  model_ref : Fea_model;
  result : OPTIONAL Fe_analysis_results;
END_ENTITY;

ENTITY Calculated_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;

ENTITY Constraint
SUPERTYPE OF (ONEOF(Single_point_constraint, Linear_constraint_equation, Nodal_degree_of_freedom_reduction));
  identification : STRING;
  steps : SET [1 : ?] OF Fe_analysis_control_step;
END_ENTITY;

ENTITY Element_field_variable_definition
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;

ENTITY Element_nodal_freedom_actions
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;

ENTITY Fe_analysis;
  intended_analysis_code : STRING;
  model_ref : Fea_model;
END_ENTITY;

ENTITY Fe_analysis_control_step
SUPERTYPE OF (ONEOF(Modes_and_frequencies_control_step, Static_control_step));
  analysis : Fe_analysis;
  identification : STRING;
  initial_input_state : Fe_analysis_state;
  sequence : INTEGER;
END_ENTITY;

ENTITY Fe_analysis_results;
END_ENTITY;

ENTITY Fe_analysis_results_step
SUPERTYPE OF (ONEOF(Modes_and_frequencies_results_step, Static_results_step));
  control : Fe_analysis_control_step;
  result : Fe_analysis_results;
END_ENTITY;

ENTITY Fe_analysis_state
SUPERTYPE OF (ONEOF(Calculated_state, Linearly_superimposed_state, Output_request_state, Specified_state));
  definitions : SET [1 : ?] OF Fe_analysis_state_definition;
END_ENTITY;

ENTITY Fe_analysis_state_definition
SUPERTYPE OF (ONEOF(Analysis_message, Element_field_variable_definition, Element_nodal_freedom_actions, Linear_constraint_equation_value, Nodal_freedom_definitions, Single_point_constraint_values));
  ref : Definition_reference;
END_ENTITY;

ENTITY Graphical_representation
SUBTYPE OF (Analysis_report_representation);
  graphical_filename : Document_definition;
END_ENTITY;

ENTITY Linear_constraint_equation
SUBTYPE OF (Constraint);
  freedoms_and_coefficients_nodes : SET [1 : ?] OF Constraint_definition_reference;
END_ENTITY;

ENTITY Linear_constraint_equation_value
SUBTYPE OF (Fe_analysis_state_definition);
  equation : Linear_constraint_equation;
END_ENTITY;

ENTITY Linearly_superimposed_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;

ENTITY Modes_and_frequencies_control_step
SUBTYPE OF (Fe_analysis_control_step);
  final_input_state : Fe_analysis_state;
  frequency_range : LIST [1 : 2] OF REAL;
  number_of_modes : INTEGER;
END_ENTITY;

ENTITY Modes_and_frequencies_results_step
SUBTYPE OF (Fe_analysis_results_step);
  resulting_states : SET [1 : ?] OF Calculated_state;
END_ENTITY;

ENTITY Nodal_degree_of_freedom_reduction
SUBTYPE OF (Constraint);
  node : Constraint_definition_reference;
END_ENTITY;

ENTITY Nodal_freedom_definitions
SUBTYPE OF (Fe_analysis_state_definition);
END_ENTITY;

ENTITY Output_request_state
SUBTYPE OF (Fe_analysis_state);
  steps : SET [1 : ?] OF Fe_analysis_control_step;
END_ENTITY;

ENTITY Single_point_constraint
SUBTYPE OF (Constraint);
  required_node : Constraint_definition_reference;
END_ENTITY;

ENTITY Single_point_constraint_values
SUBTYPE OF (Fe_analysis_state_definition);
  element : Single_point_constraint;
END_ENTITY;

ENTITY Specified_state
SUBTYPE OF (Fe_analysis_state);
END_ENTITY;

ENTITY Static_control_step
SUBTYPE OF (Fe_analysis_control_step);
  final_input_state : Fe_analysis_state;
END_ENTITY;

ENTITY Static_results_step
SUBTYPE OF (Fe_analysis_results_step);
  resulting_state : Calculated_state;
END_ENTITY;

ENTITY Tabular_representation
SUBTYPE OF (Analysis_report_representation);
  tabular_file : Document_definition;
END_ENTITY;

END_SCHEMA;

(*
   WG12 N6744 - ISO/CD-TS - 10303-1382 finite_element_shape - EXPRESS ARM*)


SCHEMA Finite_element_shape_arm;

USE FROM Analysis_shape_arm;--ISO/TS 10303-1374

USE FROM Elemental_geometric_shape_arm;--ISO/TS 10303-1004

USE FROM Shape_property_assignment_arm;--ISO/TS 10303-1032

ENTITY Node_shape
SUBTYPE OF (Shape_description_association);
  analysis_view : Analysis_discipline_definition;
  defining_shape : Point_model;
END_ENTITY;

ENTITY Point_model
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;


(*
   ISO TC184/SC4/WG12 N6727 - ISO/CD-TS 10303-1383 Finite elements - EXPRESS ARM
 
*)


SCHEMA Finite_elements_arm;

USE FROM Analysis_characterized_arm;

USE FROM Analysis_identification_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM Shape_property_assignment_arm;

USE FROM Value_with_unit_arm;

TYPE definition_element = SELECT 
  (Curve_element,
   Shape_element,
   Surface_element,
   Volume_element);
END_TYPE;

TYPE element_property_select = SELECT 
  (Curve_property,
   Surface_property);
END_TYPE;

TYPE fe_model_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analysis_approval_item WITH
  (Fea_model);
END_TYPE;

ENTITY Curve_element
SUBTYPE OF (Element);
END_ENTITY;

ENTITY Curve_property;
  defined_elements : SET [1 : ?] OF Curve_element;
END_ENTITY;

ENTITY Curve_section_properties;
  property : Curve_property;
END_ENTITY;

ENTITY Damping_matrix
SUBTYPE OF (Matrix);
END_ENTITY;

ENTITY Directionally_explicit_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;

ENTITY Element
SUPERTYPE OF (ONEOF(volume_element, surface_element, substructure_element, curve_element, point_element, directionally_explicit_element, explicit_element));
  description : OPTIONAL Element_description;
  element_identification : STRING;
  model_ref : Fea_model;
  node_list : LIST [1 : ?] OF Node;
END_ENTITY;

ENTITY Element_description;
  description : STRING;
END_ENTITY;


ENTITY Element_property_geometric_relationship;
  geometry_ref : Detailed_geometric_model_element;
  section_ref : element_property_select;
END_ENTITY;

ENTITY Element_shape_aspect;
END_ENTITY;

ENTITY Element_shape_relationship;
  element_aspect : Element_shape_aspect;
  element_reference : Element;
  role : STRING;
  shape : Detailed_geometric_model_element;
END_ENTITY;

ENTITY Explicit_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;

ENTITY Fea_model;
  analysis_type : STRING;
  cae_filename : OPTIONAL STRING;
  creating_software : STRING;
  definition : Analysis_discipline_definition;
  description : Fea_model_description;
  identification : STRING;
  intended_analysis_code : STRING;
END_ENTITY;

ENTITY Fea_model_description;
  description : STRING;
END_ENTITY;

ENTITY Fea_group;
  description : STRING;
  elements : OPTIONAL SET [1 : ?] OF Element;
  group_identification : STRING;
  nodes : OPTIONAL SET [1 : ?] OF Node;
END_ENTITY;

ENTITY Fea_group_relationship;
  relating_group : Fea_group; -- LK: was Group;
  related_group : Fea_group; -- LK: was Group;
END_ENTITY;

ENTITY Mass_matrix
SUBTYPE OF (Matrix);
END_ENTITY;

ENTITY Matrix
SUPERTYPE OF (ONEOF(mass_matrix, stiffness_matrix, damping_matrix));
END_ENTITY;

ENTITY Nodal_results_coordinate_system;
END_ENTITY;

ENTITY Node;
  description : OPTIONAL Node_description;
  location : Detailed_geometric_model_element;
  model_ref : Fea_model;
  node_identification : STRING;
  results_coordinate_space : OPTIONAL Nodal_results_coordinate_system;
END_ENTITY;


ENTITY Node_description;
  description : STRING;
END_ENTITY;

ENTITY Node_shape_relationship;
  node_reference : Node;
  role : STRING;
  shape : Detailed_geometric_model_element;
END_ENTITY;

ENTITY Point_element
SUBTYPE OF (Element);
  associated_matrix : Matrix;
END_ENTITY;

ENTITY Stiffness_matrix
SUBTYPE OF (Matrix);
END_ENTITY;

ENTITY Substructure_element
SUBTYPE OF (Element);
  substructure_model_ref : Fea_model;
END_ENTITY;

ENTITY Substructure_node_relationship;
  relating_node : Node;
  related_node : Node;
END_ENTITY;

ENTITY Surface_element
SUBTYPE OF (Element);
END_ENTITY;

ENTITY Surface_property;
  defined_elements : SET [1 : ?] OF Surface_element;
END_ENTITY;

ENTITY Surface_thickness;
  property : Surface_property;
  thickness : length_measure;
END_ENTITY;

ENTITY Volume_element
SUBTYPE OF (Element);
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7891 - ISO/CD-TS - 10303-1806 Form feature in panel - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7328
*)
SCHEMA Form_feature_in_panel_arm;

USE FROM Shape_feature_arm;    -- ISO/TS 10303-1764
USE FROM Value_with_unit_extension_arm;    -- ISO/TS 10303-1753
USE FROM Basic_geometry_arm;    -- ISO/TS 10303-1652
USE FROM Machining_features_arm;    -- ISO/TS 10303-1814
USE FROM Elemental_topology_arm;    -- ISO/TS 10303-1005

TYPE angle_reference_enumeration = ENUMERATION OF 
   (profile_normal,
    punch_direction,
    surface_normal);
 END_TYPE; 

TYPE compound_in_panel_select = SELECT
    (Process_feature_in_panel, 
    Transition_feature);
 END_TYPE; 

TYPE form_feature_in_panel_type = EXTENSIBLE ENUMERATION OF 
   (boss,
    pocket,
    stairstep);
 END_TYPE; 

TYPE general_end_select = SELECT
    (Connected_face_set, 
    Surface);
 END_TYPE; 

TYPE profile_or_angle_select = SELECT
    (Closed_profile_usage, 
    Directed_angle);
 END_TYPE; 

TYPE starting_or_ending = ENUMERATION OF 
   (ending,
    starting);
 END_TYPE; 

TYPE straight_or_tapered = ENUMERATION OF 
   (straight,
    tapered);
 END_TYPE; 

ENTITY Bead_end_type
   ABSTRACT SUPERTYPE OF (ONEOF (Linear_bead_end_type,
                                Open_bead_end_type,
                                Radiused_bead_end_type))
   SUBTYPE OF (Shape_element);
   is_applied_to : starting_or_ending;
 END_ENTITY;

ENTITY Bead_feature
   SUBTYPE OF (Process_feature_in_panel);
   base_radius : OPTIONAL Length_data_element;
   bead_profile : Open_profile_usage;
   end_condition : SET[2:2] OF Bead_end_type;
   sweep_path : Path_feature_component;
 END_ENTITY;

ENTITY Closed_profile_usage
   SUBTYPE OF (Profile_usage);
 END_ENTITY;

ENTITY Compound_feature_in_panel
   SUBTYPE OF (Process_feature_in_panel);
   feature_type : STRING;
 END_ENTITY;

ENTITY Compound_feature_in_panel_element
   SUBTYPE OF (Shape_element);
   element_placement : Geometric_placement_operation;
   feature : compound_in_panel_select;
   is_element_for : SET[2:?] OF Compound_feature_in_panel;
 END_ENTITY;

ENTITY Compound_feature_in_panel_element_relationship
   SUBTYPE OF (Shape_element_relationship);
   SELF\Shape_element_relationship.relating RENAMED successor : Compound_feature_in_panel_element;
   SELF\Shape_element_relationship.related RENAMED predecessor : Compound_feature_in_panel_element;
 END_ENTITY;

ENTITY Directed_angle
   SUBTYPE OF (Shape_element);
   angle : Angle_data_element;
   angle_reference : angle_reference_enumeration;
 END_ENTITY;

ENTITY Face_termination
   SUBTYPE OF (Joggle_termination);
 END_ENTITY;

ENTITY Form_feature_in_panel
   SUBTYPE OF (Process_feature_in_panel);
   base_boundary_defined_by : profile_or_angle_select;
   base_radius : Length_data_element;
   feature_type : form_feature_in_panel_type;
   target_boundary_defined_by : profile_or_angle_select;
   target_face : OPTIONAL general_end_select;
   target_radius : Angle_data_element;
 END_ENTITY;

ENTITY Hole_feature_in_panel
   SUBTYPE OF (Process_feature_in_panel);
   hole_profile : Closed_profile_usage;
   hole_type : OPTIONAL STRING;
 END_ENTITY;

ENTITY Joggle_feature
   SUBTYPE OF (Process_feature_in_panel);
   base_radius_1 : OPTIONAL Length_data_element;
   base_radius_2 : OPTIONAL Length_data_element;
   defining_path : Linear_path_feature_component;
   direction_angle_1 : Angle_data_element;
   direction_angle_2 : Angle_data_element;
   height : OPTIONAL Length_data_element;
   slope_angle_1 : Angle_data_element;
   slope_angle_2 : Angle_data_element;
   termination : Joggle_termination;
   top_radius_1 : OPTIONAL Length_data_element;
   top_radius_2 : OPTIONAL Length_data_element;
 END_ENTITY;

ENTITY Joggle_termination
   ABSTRACT SUPERTYPE OF (ONEOF (Face_termination,
                                Value_termination))
   SUBTYPE OF (Shape_element);
 END_ENTITY;

ENTITY Linear_bead_end_type
   SUBTYPE OF (Bead_end_type);
   end_length : Length_data_element;
   end_shape : straight_or_tapered;
 END_ENTITY;

ENTITY Locator_feature
   SUBTYPE OF (Process_feature_in_panel);
   base_radius : OPTIONAL Length_data_element;
   diameter : Length_data_element;
   tip_angle : Angle_data_element;
   tip_radius : OPTIONAL Length_data_element;
 END_ENTITY;

ENTITY Open_bead_end_type
   SUBTYPE OF (Bead_end_type);
 END_ENTITY;

ENTITY Open_profile_usage
   SUBTYPE OF (Profile_usage);
   profile_limit : OPTIONAL Plane;
   SELF\Profile_usage.used_profile : Open_profile;
 END_ENTITY;

ENTITY Panel_hole_with_barring
   SUBTYPE OF (Hole_feature_in_panel);
   angle_defined_by : Directed_angle;
   barring_profile : Closed_profile_usage;
   base_radius : OPTIONAL Length_data_element;
 END_ENTITY;

ENTITY Process_feature_in_panel
   SUBTYPE OF (Shape_feature_definition);
   punch_direction : Direction;
 END_ENTITY;

ENTITY Profile_usage
   ABSTRACT SUPERTYPE OF (ONEOF (Closed_profile_usage,
                                Open_profile_usage))
   SUBTYPE OF (Shape_element_relationship);
   profile_placement : Geometric_placement_operation;
   used_profile : Profile;
 END_ENTITY;

ENTITY Radiused_bead_end_type
   SUBTYPE OF (Bead_end_type);
 END_ENTITY;

ENTITY Value_termination
   SUBTYPE OF (Joggle_termination);
   depth : Length_data_element;
   angle : Angle_data_element;
 END_ENTITY;

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N6902 - ISO/TS 10303-1006 Foundation representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N4348
*) 


SCHEMA Foundation_representation_arm; 

USE FROM Support_resource_arm;
REFERENCE FROM Support_resource_arm (bag_to_set);
USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;

ENTITY Representation;
  id : OPTIONAL identifier;
  name : OPTIONAL label;
  description : OPTIONAL text;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Representation_context;
  id : identifier;
  kind : text;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;

ENTITY Representation_item
  ABSTRACT SUPERTYPE ;
  name : OPTIONAL label;
END_ENTITY;

ENTITY Representation_relationship;
  relation_type : OPTIONAL label;
  description : OPTIONAL text;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY String_representation_item
  SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;

  FUNCTION using_representations (item : Representation_item): SET OF Representation;
    LOCAL
      results            : SET OF Representation;
      result_bag         : BAG OF Representation;
      intermediate_items : SET OF Representation_item;
    END_LOCAL;
    -- Find the representations in which the item is used and add to the
    -- results set.
    results := [];
    result_bag := USEDIN(item,'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag);
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    -- Find all representation_items or founded_items
    -- by which item is referenced directly or indirectly.
    intermediate_items := using_items(item,[]);
    -- If the set of intermediate items is not empty;
    IF SIZEOF(intermediate_items) > 0 THEN
      -- For each element in the set, add the
      -- representations of that element.
      REPEAT i := 1 TO HIINDEX(intermediate_items);
        result_bag := USEDIN(intermediate_items[i],
                      'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) > 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag);
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    -- Return the set of representation in which the input item is
    -- used directly and indirectly (through intervening
    -- representation_items or founded items).
    RETURN (results);
  END_FUNCTION;

  FUNCTION using_items (item : Representation_item;
                        checked_items: SET OF Representation_item)
                      : SET OF Representation_item;
    LOCAL
      new_check_items    : SET OF Representation_item;
      result_items       : SET OF Representation_item;
      next_items         : SET OF Representation_item;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    -- Find the set of representation_items or founded_items
    -- in which item is used directly.
    next_items := QUERY(z <* bag_to_set( USEDIN(item , '')) |
      ('FOUNDATION_REPRESENTATION_ARM.REPRESENTATION_ITEM' IN TYPEOF(z)));
    -- If the set of next_items is not empty;
    IF SIZEOF(next_items) > 0 THEN
      -- For each element in the set, find the using_items recursively
      REPEAT i := 1 TO HIINDEX(next_items);
        -- Check for loop in data model, i.e. one of the next_items
        -- occurred earlier in the set of check_items;
        IF NOT(next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] +
                          using_items(next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    -- return the set of representation_items or founded_items
    -- in which the input item is used directly and indirectly.
    RETURN (result_items);
  END_FUNCTION;

END_SCHEMA;  -- Foundation_representation_arm
(*
   ISO TC184/SC4/WG12 N5869 - ISO/TS 10303-1469 Foundation state definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4583
*)

SCHEMA Foundation_state_definition_arm;

TYPE state_definition_of_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE;

ENTITY Applied_state_definition_assignment;
  described_state_definition : State_definition;
----  assigned_to : state_definition_of_item;
  role : State_definition_role;
END_ENTITY;

ENTITY Composition_of_state_definition
  SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.relating RENAMED whole : SET[1:?] OF State_definition;
  SELF\State_definition_relationship.related RENAMED part : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY State_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY State_definition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : SET[1:?] OF State_definition;
  related : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY State_definition_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY State_transition_definition
SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.relating RENAMED end_state : SET [1 : ?] OF State_definition;
  SELF\State_definition_relationship.related RENAMED start_state : SET [1 : ?] OF State_definition;
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N5395 - ISO/TS 10303-1216 Functional breakdown - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4937
*) 

SCHEMA Functional_breakdown_arm;

USE FROM Product_breakdown_arm;    -- ISO/TS 10303-1248

  ENTITY Functional_breakdown
    SUBTYPE OF (Breakdown);
  END_ENTITY;

  ENTITY Functional_breakdown_context
    SUBTYPE OF (Breakdown_context);
      SELF\Breakdown_context.breakdown : Functional_breakdown_version;
      SELF\Breakdown_context.breakdown_element : Functional_element_definition;
  END_ENTITY;

  ENTITY Functional_breakdown_version
    SUBTYPE OF (Breakdown_version);
    SELF\Breakdown_version.of_product : Functional_breakdown;
  END_ENTITY;

  ENTITY Functional_element
    SUBTYPE OF (Breakdown_element);
  END_ENTITY;

  ENTITY Functional_element_definition
    SUBTYPE OF (Breakdown_element_definition);
      SELF\Breakdown_element_definition.defined_version : Functional_element_version;
  END_ENTITY;

  ENTITY Functional_element_usage
    SUBTYPE OF (Breakdown_element_usage);
      SELF\Breakdown_element_usage.parent_element : Functional_element_definition;
      SELF\Breakdown_element_usage.child_element : Functional_element_definition;
  END_ENTITY;

  ENTITY Functional_element_version
    SUBTYPE OF (Breakdown_element_version);
      SELF\Breakdown_element_version.of_product : Functional_element;
  END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N7067 - ISO/TS 10303-1007 General surface appearance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N5398
*) 

SCHEMA General_surface_appearance_arm; 

USE FROM Curve_appearance_arm; -- ISO/TS 10303-1003

  TYPE surface_side = ENUMERATION OF
    (positive,
     negative,
     both);
  END_TYPE;

  ENTITY Boundary_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;

  ENTITY Control_grid_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;

  ENTITY Parameter_line_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
      number_of_u_curves : INTEGER;
      number_of_v_curves : INTEGER;
  END_ENTITY;

  ENTITY Segmentation_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;

  ENTITY Silhouette_curve_appearance
    SUBTYPE OF (Surface_related_curve_appearance);
  END_ENTITY;

  ENTITY Surface_appearance;
    side   : surface_side;    
    styles : SET[1:7] OF Surface_appearance_element;
  END_ENTITY;

  ENTITY Surface_appearance_element
    ABSTRACT SUPERTYPE OF (ONEOF(
      Surface_related_curve_appearance, 
      Surface_colour)); 
  END_ENTITY;

  ENTITY Surface_colour 
    SUBTYPE OF (Surface_appearance_element);
      assigned_colour : Colour;
  END_ENTITY;

  ENTITY Surface_related_curve_appearance 
    ABSTRACT SUPERTYPE OF (ONEOF (Boundary_curve_appearance,
                                Control_grid_appearance,
                                Parameter_line_appearance,
                                Segmentation_curve_appearance,
                                Silhouette_curve_appearance))
	SUBTYPE OF (Surface_appearance_element);
      style : Curve_appearance;
  END_ENTITY;
	
END_SCHEMA;
(* 
 ISO TC184/SC4/WG12 N7864 - ISO/TS 10303-1341 Generic expression - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7217
*)

SCHEMA Generic_expression_arm;

ENTITY Binary_generic_expression
ABSTRACT SUPERTYPE
SUBTYPE OF(Generic_expression);
	operands: LIST [2:2] OF Generic_expression;
END_ENTITY;


ENTITY Environment;
	syntactic_representation: Generic_variable;
	semantics: Variable_semantics;
END_ENTITY;


ENTITY Generic_expression
ABSTRACT SUPERTYPE OF(ONEOF(Simple_generic_expression,
			    Unary_generic_expression,
			    Binary_generic_expression,
			    Multiple_arity_generic_expression));
WHERE 
WR1: Is_Acyclic(SELF);
END_ENTITY;


ENTITY Generic_literal
ABSTRACT SUPERTYPE
SUBTYPE OF (Simple_generic_expression);
END_ENTITY; 


ENTITY Generic_variable
ABSTRACT SUPERTYPE OF(Variable)
SUBTYPE OF (Simple_generic_expression);
INVERSE
	interpretation : Environment FOR syntactic_representation;
END_ENTITY;


ENTITY Multiple_arity_generic_expression
ABSTRACT SUPERTYPE
SUBTYPE OF(Generic_expression);
	operands: LIST [2:?] OF Generic_expression;
END_ENTITY;


ENTITY Simple_generic_expression
ABSTRACT SUPERTYPE OF (ONEOF(Generic_literal, Generic_variable))
SUBTYPE OF (Generic_expression);
END_ENTITY;


ENTITY Unary_generic_expression
ABSTRACT SUPERTYPE
SUBTYPE OF(Generic_expression);
	operand: Generic_expression;
END_ENTITY;


ENTITY Variable
ABSTRACT SUPERTYPE
SUBTYPE OF(Generic_variable);
END_ENTITY;


ENTITY Variable_semantics
ABSTRACT SUPERTYPE;
END_ENTITY;


FUNCTION Acyclic (arg1: Generic_expression; 
			arg2: SET OF Generic_expression): BOOLEAN;
LOCAL
	result: BOOLEAN;
END_LOCAL;

IF ('GENERIC_EXPRESSION_ARM.SIMPLE_GENERIC_EXPRESSION'
	IN TYPEOF (arg1)) 
THEN
	RETURN (TRUE);
END_IF;

IF arg1 IN arg2 
THEN 
	RETURN (FALSE);
END_IF;

IF 'GENERIC_EXPRESSION_ARM.UNARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Unary_generic_expression.operand,arg2+[arg1]));
END_IF;

IF 'GENERIC_EXPRESSION_ARM.BINARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	RETURN 
	(Acyclic(arg1\Binary_generic_expression.operands[1],arg2+[arg1])
	AND
	Acyclic(arg1\Binary_generic_expression.operands[2],arg2+[arg1]));
END_IF;

IF 
'GENERIC_EXPRESSION_ARM.MULTIPLE_ARITY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg1) 
THEN 
	result := TRUE;
	REPEAT i := 1 TO 
			SIZEOF (arg1\Multiple_arity_generic_expression.operands);
		result := result AND
		Acyclic(arg1\Multiple_arity_generic_expression.operands[i], arg2+[arg1]);
	END_REPEAT;

	RETURN (result);
END_IF;

END_FUNCTION; 

FUNCTION Is_Acyclic (arg: Generic_expression): BOOLEAN;
RETURN (Acyclic (arg, []));
END_FUNCTION ; 

FUNCTION Used_variables (arg : Generic_expression) : 
			SET OF Generic_variable;

LOCAL
	result : SET OF Generic_variable := [];
END_LOCAL;

IF 'GENERIC_EXPRESSION_ARM.GENERIC_VARIABLE' 
	IN TYPEOF (arg) 
THEN 
	RETURN ([arg]);
END_IF;

IF 'GENERIC_EXPRESSION_ARM.UNARY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg)
THEN 
	RETURN (Used_variables (arg\Unary_generic_expression.operand));
END_IF;

IF 'GENERIC_EXPRESSION_ARM.BINARY_GENERIC_EXPRESSION'
	IN TYPEOF (arg)
THEN 
	RETURN(Used_variables(arg\Binary_generic_expression.operands[1])
		+ Used_variables (arg\Binary_generic_expression.operands[2]));
END_IF;

IF
'GENERIC_EXPRESSION_ARM.MULTIPLE_ARITY_GENERIC_EXPRESSION' 
	IN TYPEOF (arg)
THEN
	REPEAT i := 1 TO 
		SIZEOF(arg\Multiple_arity_generic_expression.operands);
		result := result + Used_variables(
			arg\Multiple_arity_generic_expression.operands[i]);
	END_REPEAT;
	
	RETURN (result);
END_IF;
RETURN ([ ]);      
			            
END_FUNCTION; 

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7720 - ISO/TS 10303-1681 Generic material aspects - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5401
*)

SCHEMA Generic_material_aspects_arm;

USE FROM Independent_property_representation_arm;	-- ISO/TS 10303-1038

  TYPE material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE material_property_select = SELECT (Material_property, General_material_property);
  END_TYPE;

  TYPE dependent_or_independent_property_representation = SELECT(
    Independent_property_representation,
    Property_representation);
  END_TYPE;

 ENTITY Applied_independent_material_property SUBTYPE OF
    (Material_property, Applied_independent_property);
     SELF\Applied_independent_property.base_independent_property: General_material_property;
  END_ENTITY;

 ENTITY Data_environment;
  environment_name : STRING;
  description : OPTIONAL STRING;
  environment_characterization: SET[1:?] OF dependent_or_independent_property_representation;
 END_ENTITY;

 ENTITY Material_identification;
  material_name : STRING;
  items : SET[1:?] OF material_item_select;
 END_ENTITY;

 ENTITY Material_property
  SUBTYPE OF (Assigned_property);
 END_ENTITY;

 ENTITY Material_property_association;
  described_material : Material_identification;
  associated_property_value : Material_property_value_representation;
  definitional : OPTIONAL BOOLEAN;
 END_ENTITY;

 ENTITY Material_property_value_representation
  SUBTYPE OF (Property_definition_representation);
    environment_condition                                               : Data_environment;
    SELF\Property_definition_representation.definition RENAMED property : material_property_select;
 END_ENTITY;

 ENTITY General_material_property
  SUBTYPE OF (Independent_property);
  WHERE
    WR1:  SIZEOF(QUERY( aip <* USEDIN(SELF,'PROPERTY_ASSIGNMENT_ARM.APPLIED_INDEPENDENT_PROPERTY.'+
                     'BASE_INDEPENDENT_PROPERTY') |
               NOT
			('GENERIC_MATERIAL_ASPECTS_ARM.APPLIED_INDEPENDENT_MATERIAL_PROPERTY' IN
                    TYPEOF(aip)))) = 0;
 END_ENTITY;


END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7849 - ISO/TS 10303-1789 Geometric constraints - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7205
*)

SCHEMA Geometric_constraints_arm;

USE FROM Basic_curve_arm;
USE FROM Composite_surface_arm;
USE FROM Explicit_constraints_arm;
USE FROM Primitive_solids_arm;
USE FROM Swept_solid_arm;

TYPE axial_geometry_element = EXTENSIBLE GENERIC_ENTITY SELECT
  (Circle,
   Circular_cone,
   Circular_cylinder,
   Conical_surface,
   Cylindrical_surface,
   Line,
   Plane,
   Point,
   Solid_of_revolution,
   Sphere,
   Spherical_surface,
   Surface_of_revolution,
   Toroidal_surface,
   Torus);
END_TYPE;

TYPE curve_or_surface = SELECT
  (Curve,
   Surface);
END_TYPE;

TYPE geometric_constraint_element = EXTENSIBLE GENERIC_ENTITY SELECT
  (Point,
   Curve,
   Surface,
   Direction);
END_TYPE;

TYPE linear_geometry_element = EXTENSIBLE GENERIC_ENTITY SELECT
  (Line,
   Plane,
   Direction);
END_TYPE;

TYPE parallel_offset_type = ENUMERATION OF
  (curve_2d_offset,
   curve_3d_offset,
   surface_offset);
END_TYPE;

TYPE point_curve_or_surface = SELECT
  (Curve,
   Point,
   Surface);
END_TYPE;

TYPE radial_geometry_element = SELECT
  (Circle,
   Cylindrical_surface,
   Conical_surface,
   Spherical_surface,
   Circular_cylinder,
   Circular_cone,
   Sphere);
END_TYPE;

TYPE swept_surface_or_solid = EXTENSIBLE GENERIC_ENTITY SELECT
  (Swept_surface,
   Swept_solid);
   END_TYPE;

TYPE tangent_contact_type = ENUMERATION OF
  (point_contact,
   curve_contact,
   surface_contact);
END_TYPE;

ENTITY Angle_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF linear_geometry_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF linear_geometry_element;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) = 1) OR
    (('GEOMETRIC_CONSTRAINTS_ARM.DIMENSIONED_ANGLE_CONSTRAINT' 
    IN TYPEOF(SELF)) AND 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
END_ENTITY;

ENTITY Coaxial_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF axial_geometry_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF axial_geometry_element;
WHERE
  WR1: SIZEOF(QUERY(q <* SELF\Explicit_constraint.reference_elements | 
    SIZEOF(TYPEOF(q) * ['GEOMETRIC_CONSTRAINTS_ARM.POINT','GEOMETRIC_CONSTRAINTS_ARM.PLANE',
    'GEOMETRIC_CONSTRAINTS_ARM.SPHERICAL_SURFACE','GEOMETRIC_CONSTRAINTS_ARM.SPHERE']) 
    > 0)) = 0;
END_ENTITY; 

ENTITY Curve_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:2] OF Curve;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:4] OF point_curve_or_surface;
  near_points : SET[0:4] OF Near_point_relationship;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR
    (('GEOMETRIC_CONSTRAINTS_ARM.DIMENSIONED_CURVE_DISTANCE_CONSTRAINT'
    IN TYPEOF(SELF)) 
    AND (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
  WR2: SIZEOF(near_points) <= 
    SIZEOF(SELF\Explicit_constraint.reference_elements);
  WR3: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;

ENTITY Curve_length_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF Curve;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;

ENTITY Curve_segment_set
  SUBTYPE OF (Detailed_geometric_model_element);
  segments : SET[1:?] OF Composite_curve_segment;
END_ENTITY;

ENTITY Curve_smoothness_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:1] OF Curve_segment_set;
  smoothness : curve_transition_code;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;

ENTITY Dimensioned_angle_constraint
  SUBTYPE OF (Angle_geometric_constraint);
  angle_value : plane_angle_measure;
END_ENTITY;

ENTITY Dimensioned_curve_distance_constraint
  SUBTYPE OF (Curve_distance_constraint);
  distance : length_measure;
WHERE
   WR1 : distance >= 0.0;
END_ENTITY;


ENTITY Dimensioned_curve_length_constraint
  SUBTYPE OF (Curve_length_constraint);
  curve_length : length_measure;
WHERE
   WR1 : curve_length > 0.0;
END_ENTITY;


ENTITY Dimensioned_parallel_constraint
  SUBTYPE OF (Parallel_constraint);
  distance : length_measure;
  negative_direction : BOOLEAN;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) = 1)
    OR (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: SIZEOF(QUERY(q <* (SELF\Explicit_constraint.reference_elements +
    SELF\Explicit_constraint.constrained_elements) | SIZEOF(TYPEOF(q) *
    ['EXPLICIT_CONSTRAINT.DIRECTION']) > 0)) = 0;
  WR3: distance >= 0.0;
END_ENTITY; 

ENTITY Dimensioned_parallel_offset_constraint 
  SUBTYPE OF (Parallel_offset_constraint); 
  offset_value : length_measure; 
  offset_direction_constrained : BOOLEAN; 
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) = 1)
    OR (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: (NOT (offset_direction_constrained = TRUE)
    AND ((offset_type = curve_2d_offset) 
    OR (offset_type = surface_offset))); 
   WR3 : offset_value > 0.0;
END_ENTITY; 

ENTITY Dimensioned_point_distance_constraint
  SUBTYPE OF (Point_distance_constraint);
  distance : length_measure;
WHERE
   WR1 : distance >= 0.0;
END_ENTITY;

ENTITY Dimensioned_radial_constraint
  SUBTYPE OF (Radius_geometric_constraint);
  radius_value : length_measure;
WHERE
   WR1 : radius_value > 0.0;
END_ENTITY;

ENTITY Dimensioned_surface_distance_constraint
  SUBTYPE OF (Surface_distance_constraint);
  distance : length_measure;
WHERE
   WR1 : distance >= 0.0;
END_ENTITY;

ENTITY Explicit_geometric_constraint
  ABSTRACT SUPERTYPE OF (ONEOF
    (Fixed_element_geometric_constraint,
     Parallel_constraint,
     Point_distance_constraint,
     Skew_line_distance_constraint,
     Curve_distance_constraint,
     Surface_distance_constraint,
     Radius_geometric_constraint,
     Curve_length_constraint,
     Parallel_offset_constraint,
     Angle_geometric_constraint,
     Perpendicular_geometric_constraint,
     Incidence_geometric_constraint,
     Coaxial_constraint,
     Tangent_constraint,
     Symmetry_geometric_constraint,
     Swept_point_curve_constraint,
     Swept_curve_surface_constraint,
     Curve_smoothness_constraint,
     Surface_smoothness_constraint))
  SUBTYPE OF (Defined_constraint, Detailed_geometric_model_element);
END_ENTITY;

ENTITY Fixed_element_geometric_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF geometric_constraint_element;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY; 

ENTITY Incidence_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF geometric_constraint_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET [0:?] OF geometric_constraint_element;
  near_points : SET[0:?] OF Near_point_relationship;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0)
    OR (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: SIZEOF(near_points) <= 
    SIZEOF(SELF\Explicit_constraint.reference_elements); 
  WR3: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;

ENTITY Near_point_relationship;
  relating_item : curve_or_surface;
  ref_point : Point;
END_ENTITY;

ENTITY Parallel_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF linear_geometry_element; 
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF linear_geometry_element;
END_ENTITY; 

ENTITY Parallel_offset_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF curve_or_surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:1] OF curve_or_surface;
  offset_type : parallel_offset_type;   
WHERE
  WR1: NOT(((offset_type = curve_2d_offset) 
    OR (offset_type = curve_3d_offset)) AND 
    (SIZEOF(QUERY( q <* (SELF\Explicit_constraint.constrained_elements 
    + SELF\Explicit_constraint.reference_elements) |
    'GEOMETRIC_CONSTRAINTS_ARM.SURFACE' IN TYPEOF(q))) > 0));
  WR2: NOT((offset_type = surface_offset) AND (SIZEOF(QUERY( q <* 
    (SELF\Explicit_constraint.constrained_elements +
    SELF\Explicit_constraint.reference_elements) | 
    'GEOMETRIC_CONSTRAINTS_ARM.CURVE' IN TYPEOF(q))) > 0));
END_ENTITY;

ENTITY Perpendicular_geometric_constraint 
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF linear_geometry_element;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:2] OF linear_geometry_element;
WHERE   
  WR1: NOT ((SIZEOF(SELF\Explicit_constraint.reference_elements) = 2) AND 
    NOT ((SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements + 
    SELF\Explicit_constraint.reference_elements | 
    'GEOMETRIC_CONSTRAINTS_ARM.LINE' IN TYPEOF(q))) =
    SIZEOF(SELF\Explicit_constraint.reference_elements + 
    SELF\Explicit_constraint.constrained_elements)) XOR 
    (SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements + 
    SELF\Explicit_constraint.reference_elements | 
    'GEOMETRIC_CONSTRAINTS_ARM.PLANE' IN TYPEOF(q))) =
    SIZEOF(SELF\Explicit_constraint.reference_elements + 
    SELF\Explicit_constraint.constrained_elements))));
  WR2: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) IN [2,3]);
  WR3: NOT ((SIZEOF(SELF\Explicit_constraint.reference_elements) = 0) AND 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 3)) AND NOT  
    ((SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements | 
    'GEOMETRIC_CONSTRAINTS_ARM.LINE' IN TYPEOF(q))) = 3) XOR
    (SIZEOF(QUERY(q <* SELF\Explicit_constraint.constrained_elements | 
    'GEOMETRIC_CONSTRAINTS_ARM.PLANE' IN TYPEOF(q))) = 3));
END_ENTITY; 

ENTITY Point_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:?] OF Point;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:4] OF point_curve_or_surface;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR
    (('EXPLICIT_GEOMETRIC_CONSTRAINT_SCHEMA.DIMENSIONED_POINT_DISTANCE_CONSTRAINT' 
    IN TYPEOF(SELF)) AND 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
END_ENTITY;

ENTITY Radius_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF radial_geometry_element;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;

ENTITY Skew_line_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:2] OF Line;
  SELF\Explicit_constraint.reference_elements   : SET[0:1] OF Line;
  distance : length_measure;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.constrained_elements +
    SELF\Explicit_constraint.reference_elements) = 2;
  WR2 : distance >= 0.0;
END_ENTITY;


ENTITY Surface_distance_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:2] OF Surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:4] OF point_curve_or_surface;
  near_points : SET[0:4] OF Near_point_relationship;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR 
    (('GEOMETRIC_CONSTRAINTS_ARM.DIMENSIONED_SURFACE_DISTANCE_CONSTRAINT' 
    IN TYPEOF(SELF)) 
    AND (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2));
  WR2: SIZEOF(near_points) <= 
    SIZEOF(SELF\Explicit_constraint.reference_elements);
  WR3: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;

ENTITY Surface_patch_set
  SUBTYPE OF (Detailed_geometric_model_element);
  patches : SET[1:?] OF Surface_patch;
END_ENTITY;

ENTITY Surface_smoothness_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET [1:1] OF surface_patch_set;
  u_smoothness : surface_transition_code;
  v_smoothness : surface_transition_code;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
END_ENTITY;

ENTITY Swept_curve_surface_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:?] OF Surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[1:1] OF swept_surface_or_solid;
END_ENTITY;

ENTITY Swept_point_curve_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : SET[1:?] OF Curve;
  SELF\Explicit_constraint.reference_elements   : 
    SET[1:1] OF Swept_solid;
END_ENTITY;

ENTITY Symmetry_geometric_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[2:2] OF Detailed_geometric_model_element;
  mirror_element : linear_geometry_element;
WHERE
  WR1: SIZEOF(SELF\Explicit_constraint.reference_elements) = 0;
  WR2: SIZEOF(TYPEOF(mirror_element) * 
    ['GEOMETRIC_CONSTRAINTS_ARM.DIRECTION']) = 0;
 END_ENTITY;

ENTITY Tangent_constraint
  SUBTYPE OF (Explicit_geometric_constraint);
  SELF\Explicit_constraint.constrained_elements : 
    SET[1:?] OF curve_or_surface;
  SELF\Explicit_constraint.reference_elements   : 
    SET[0:?] OF curve_or_surface;
  near_points         : SET[0:?] OF Near_point_relationship;
  tangent_contact     : tangent_contact_type;
WHERE
  WR1: (SIZEOF(SELF\Explicit_constraint.reference_elements) > 0) OR 
    (SIZEOF(SELF\Explicit_constraint.constrained_elements) = 2);
  WR2: SIZEOF(QUERY(q <* near_points | NOT
    (q.relating_item
    IN SELF\Explicit_constraint.reference_elements))) = 0;
END_ENTITY;

END_SCHEMA; -- Geometric_constraints_arm
(*
   ISO TC184/SC4/WG12 N8023 - ISO/TS 10303-1403 Geometric model relationship - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6905
*)
   
SCHEMA Geometric_model_relationship_arm;

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004
REFERENCE FROM Support_resource_arm (bag_to_set);  

TYPE geometric_representation_select = EXTENSIBLE GENERIC_ENTITY SELECT (
  Geometric_model);
END_TYPE;  

ENTITY Definitional_representation_relationship
  SUBTYPE OF (Representation_relationship);
    WHERE
      WR1: acyclic_representation_relationship(SELF,
        [SELF\representation_relationship.rep_2],
        'FOUNDATION_REPRESENTATION_ARM.'+
        'REPRESENTATION');
END_ENTITY;  

ENTITY Geometric_model_relationship
 SUBTYPE OF (Representation_relationship);
    SELF\Representation_relationship.rep_1 : geometric_representation_select;
    SELF\Representation_relationship.rep_2 : geometric_representation_select;
  WHERE
    WR1 : rep_1 <> rep_2;
END_ENTITY;

FUNCTION acyclic_representation_relationship
  (relation : representation_relationship; relatives : SET[1:?] OF representation; specific_relation : STRING) : BOOLEAN; 
  LOCAL
    x : SET OF representation_relationship;
  END_LOCAL;

  IF relation.rep_1 IN relatives THEN
    RETURN (FALSE);
  END_IF;
  x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'FOUNDATION_REPRESENTATION_ARM.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
  REPEAT i := 1 TO HIINDEX(x);
    IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  RETURN (TRUE);
END_FUNCTION; 

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N8026 - ISO/TS 10303-1051 Geometric tolerance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7448
*) 


SCHEMA Geometric_tolerance_arm;

 USE FROM Derived_shape_element_arm;    -- ISO/TS 10303-1130

 USE FROM Measure_representation_arm;    -- ISO/TS 10303-1118

 USE FROM Value_with_unit_extension_arm;    -- ISO/TS 10303-1753

 USE FROM Support_resource_arm;    -- ISO/TS 10303-1800

 USE FROM Shape_composition_arm;    -- ISO/TS 10303-1742

 USE FROM Dimension_tolerance_arm;    -- ISO/TS 10303-1050

 USE FROM Feature_and_connection_zone_arm;    -- ISO/TS 10303-1671


TYPE directed_or_oriented_geometric_tolerance_select = SELECT
    (Line_profile_tolerance, 
    Parallelism_tolerance, 
    Perpendicularity_tolerance, 
    Position_tolerance, 
    Straightness_tolerance, 
    Symmetry_tolerance);
END_TYPE; 

TYPE area_unit_type = EXTENSIBLE ENUMERATION OF 
   (circular,
    square,
    rectangular);
END_TYPE; 

TYPE collection_plane_orientation = EXTENSIBLE ENUMERATION OF
   (perpendicular, 
    parallel);
END_TYPE;

TYPE common_datum_list = LIST[1:?] OF Datum_reference_element;
END_TYPE; 

TYPE datum_or_common_datum = SELECT
    (common_datum_list, 
    Datum);
END_TYPE; 

TYPE datum_reference_modifier = EXTENSIBLE SELECT
    (Datum_reference_modifier_with_value, 
    simple_datum_reference_modifier);
END_TYPE; 

TYPE datum_reference_modifier_type = EXTENSIBLE ENUMERATION OF 
   (circular_or_cylindrical,
    spherical,
    distance,
    projected);
END_TYPE; 

TYPE directed_tolerance_zone_type = ENUMERATION OF
   (perpendicular, 
    parallel, 
    including);
END_TYPE;

TYPE geometric_tolerance_modifier = EXTENSIBLE ENUMERATION OF 
   (maximum_material_requirement,
    least_material_requirement,
    reciprocity_requirement,
    any_cross_section,
    free_state,
    common_zone,
    minor_diameter,
    major_diameter,
    pitch_diameter,
    line_element,
    not_convex,
    statistical_tolerance,
    tangent_plane,
    each_radial_element,
    separate_requirement);
END_TYPE; 

TYPE geometric_tolerance_target = EXTENSIBLE GENERIC_ENTITY SELECT
    (Dimensional_location, 
    Dimensional_size);
END_TYPE; 

TYPE oriented_tolerance_zone_type = ENUMERATION OF
   (perpendicular, 
    parallel, 
    angular);
END_TYPE;

TYPE simple_datum_reference_modifier = EXTENSIBLE ENUMERATION OF 
   (free_state,
    basic,
    translation,
    least_material_requirement,
    maximum_material_requirement,
    point,
    line,
    plane,
    orientation,
    any_cross_section,
    any_longitudinal_section,
    contacting_feature,
    distance_variable,
    degree_of_freedom_constraint_x,
    degree_of_freedom_constraint_y,
    degree_of_freedom_constraint_z,
    degree_of_freedom_constraint_u,
    degree_of_freedom_constraint_v,
    degree_of_freedom_constraint_w,
    minor_diameter,
    major_diameter,
    pitch_diameter);
END_TYPE; 

TYPE tolerance_zone_target = SELECT
    (Dimensional_location, 
    Dimensional_size, 
    General_datum_reference, 
    Geometric_tolerance);
END_TYPE; 

TYPE tolerance_zone_type = ENUMERATION OF 
   (within_a_circle,
    between_two_concentric_circles,
    between_two_equidistant_curves,
    within_a_cylinder,
    between_two_coaxial_cylinders,
    between_two_equidistant_surfaces,
    non_uniform,
    cylindrical_or_circular,
    spherical,
    not_known);
END_TYPE; 

ENTITY Affected_plane_tolerance_zone
   SUBTYPE OF (Directed_or_oriented_tolerance_zone);
   affected_plane : Axis_placement_shape_element;
END_ENTITY;

ENTITY All_around_shape_element
   SUBTYPE OF (Continuous_shape_element);
END_ENTITY;

ENTITY All_around_shape_element_along_collection_plane
   SUBTYPE OF (All_around_shape_element);
   base : Datum_system;
   orientation : collection_plane_orientation;  
END_ENTITY;

ENTITY Angularity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;

ENTITY Axis_placement_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Axis_placement := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;

ENTITY Between_shape_element
   SUBTYPE OF (Continuous_shape_element);
   start_features : SET[1:?] OF Definitional_shape_element;
   end_features : SET[1:?] OF Definitional_shape_element;
END_ENTITY;

ENTITY Circular_runout_tolerance
   SUBTYPE OF (Geometric_tolerance);
   angle : OPTIONAL REAL;
   datum_system : Datum_system;
END_ENTITY;

ENTITY Coaxiality_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;

ENTITY Concentricity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
END_ENTITY;

ENTITY Contacting_feature
   SUBTYPE OF (Non_definitional_shape_element);
END_ENTITY;

ENTITY Continuous_shape_element
   SUPERTYPE OF ( ONEOF (Between_shape_element, All_around_shape_element) )
   SUBTYPE OF (Composite_shape_element);
END_ENTITY;

ENTITY Cylindricity_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Datum
   SUBTYPE OF (Shape_element);
   identification : identifier;
END_ENTITY;

ENTITY Datum_feature
   SUPERTYPE OF (ONEOF (Dimensional_location_with_datum_feature,
                       Dimensional_size_with_datum_feature))
   SUBTYPE OF (Definitional_shape_element);
   of_datum : Datum;
UNIQUE
   UR1: of_datum;
END_ENTITY;

ENTITY Datum_reference_compartment
   SUBTYPE OF (General_datum_reference);
   point_situation_feature : OPTIONAL Point_shape_element;
   plane_situation_feature : OPTIONAL Plane_shape_element;
   straight_line_situation_feature : OPTIONAL Axis_placement_shape_element;
INVERSE
   owner : Datum_system FOR constituents;
END_ENTITY;

ENTITY Datum_reference_element
   SUBTYPE OF (General_datum_reference);
DERIVE
   usage : General_datum_reference := sts_get_general_datum_reference(SELF);
WHERE
   WR1: SELF <> usage;
   WR2: EXISTS(usage);
END_ENTITY;

ENTITY Datum_reference_modifier_with_value;
   modifier_type : datum_reference_modifier_type;
   modifier_value : Length_data_element;
END_ENTITY;

ENTITY Datum_system
   SUBTYPE OF (Non_definitional_shape_element);
   constituents : LIST[1:3] OF UNIQUE Datum_reference_compartment;
END_ENTITY;

ENTITY Datum_system_with_associated_model_coordinate_system
   SUBTYPE OF (Axis_placement_shape_element, Datum_system);
END_ENTITY;

ENTITY Datum_target
   ABSTRACT SUPERTYPE OF (ONEOF (Placed_target,
                                Target_area,
                                Target_curve))
   SUBTYPE OF (Shape_element);
   target_id : STRING;
   movement_direction : OPTIONAL Direction;
   of_datum : Datum;
   target_feature : OPTIONAL Shape_element;
UNIQUE
   UR1: of_datum, target_id;
END_ENTITY;

ENTITY Dimensional_location_with_datum_feature
   SUBTYPE OF (Datum_feature, Dimensional_location);
END_ENTITY;

ENTITY Dimensional_size_with_datum_feature
   SUBTYPE OF (Datum_feature, Dimensional_size);
END_ENTITY;

ENTITY Directed_or_oriented_tolerance_zone
  ABSTRACT SUPERTYPE OF ( ONEOF (Tolerance_zone_with_datum, Affected_plane_tolerance_zone))
  SUBTYPE OF (Tolerance_zone);
   SELF\Tolerance_zone.zone_for : SET[1:?] OF directed_or_oriented_geometric_tolerance_select;
END_ENTITY;  
  
ENTITY Directed_tolerance_zone
  SUBTYPE OF (Tolerance_zone_with_datum);
  direction : directed_tolerance_zone_type;
END_ENTITY;

ENTITY Flatness_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY General_datum_reference
   ABSTRACT SUPERTYPE OF (ONEOF (Datum_reference_compartment,
                                Datum_reference_element))
   SUBTYPE OF (Non_definitional_shape_element);
   base : datum_or_common_datum;
   modifiers : OPTIONAL SET[1:?] OF datum_reference_modifier;
END_ENTITY;

ENTITY Geometric_tolerance
   ABSTRACT SUPERTYPE OF (ONEOF (Angularity_tolerance,
                                Circular_runout_tolerance,
                                Coaxiality_tolerance,
                                Concentricity_tolerance,
                                Cylindricity_tolerance,
                                Flatness_tolerance,
                                Line_profile_tolerance,
                                Parallelism_tolerance,
                                Perpendicularity_tolerance,
                                Position_tolerance,
                                Roundness_tolerance,
                                Straightness_tolerance,
                                Surface_profile_tolerance,
                                Symmetry_tolerance,
                                Total_runout_tolerance));
   id : OPTIONAL identifier;
   name : OPTIONAL label;
   applied_to : geometric_tolerance_target;
   modifiers : SET[1:?] OF geometric_tolerance_modifier;
   qualifying_note : OPTIONAL STRING;
   first_unit_size : OPTIONAL Length_data_element;
   area_unit_type : OPTIONAL area_unit_type;
   second_unit_size : OPTIONAL Length_data_element;
   tolerance_value : Value_with_unit;
   unequally_disposed_tolerance_zone_displacement : OPTIONAL Length_data_element;
WHERE
   WR1: (NOT (EXISTS(first_unit_size))) OR ('GEOMETRIC_TOLERANCE_ARM.LENGTH_MEASURE' IN TYPEOF(first_unit_size.value_component));
END_ENTITY;

ENTITY Geometric_tolerance_relationship;
   relation_type : STRING;
   relating : Geometric_tolerance;
   related : Geometric_tolerance;
END_ENTITY;

ENTITY Line_profile_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Non_uniform_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
END_ENTITY;

ENTITY Parallelism_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Perpendicularity_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Placed_target
   ABSTRACT SUPERTYPE OF (ONEOF (Target_circle,
                                Target_circular_curve,
                                Target_point,
                                Target_rectangle,
                                Target_straight_line))
   SUBTYPE OF (Datum_target);
   defined_in : Geometric_coordinate_space;
   parameter_reference : Axis_placement;
END_ENTITY;

ENTITY Plane_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Plane := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;

ENTITY Point_shape_element
   SUBTYPE OF (Associated_shape_element);
DERIVE
   SELF\Associated_shape_element.associated_item : Point := SELF\Associated_shape_element.association\Geometric_item_specific_usage.identified_item;
END_ENTITY;

ENTITY Position_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Projected_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
   projection_end : Shape_element;
   projection_length : Length_data_element;
END_ENTITY;

ENTITY Projected_zone_definition_with_offset
   SUBTYPE OF (Projected_zone_definition);
   offset : Length_data_element;
END_ENTITY;

ENTITY Roundness_tolerance
   SUBTYPE OF (Geometric_tolerance);
END_ENTITY;

ENTITY Oriented_tolerance_zone
  SUBTYPE OF (Tolerance_zone_with_datum);
  orientation : oriented_tolerance_zone_type;
  angle : OPTIONAL Angle_data_element;
WHERE
  WR1 : (orientation <> oriented_tolerance_zone_type.angular) XOR EXISTS(angle);
END_ENTITY;

ENTITY Runout_zone_definition
   SUBTYPE OF (Tolerance_zone_definition);
   angle : Angle_data_element;
   orientation_defining_relationship : OPTIONAL Shape_element_relationship;
END_ENTITY;

ENTITY Straightness_tolerance
   SUBTYPE OF (Geometric_tolerance);
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Surface_profile_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : OPTIONAL Datum_system;
END_ENTITY;

ENTITY Symmetry_tolerance
   SUBTYPE OF (Geometric_tolerance);
   datum_system : Datum_system;
INVERSE
   directed_or_oriented_tolerance_zone : SET[0:1] OF Directed_or_oriented_tolerance_zone FOR zone_for;
END_ENTITY;

ENTITY Target_area
   SUBTYPE OF (Datum_target);
   is_defined_by : Shape_element;
END_ENTITY;

ENTITY Target_circle
   SUBTYPE OF (Placed_target);
   diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_circular_curve
   SUBTYPE OF (Placed_target);
   diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_curve
   SUBTYPE OF (Datum_target);
   is_defined_by : Shape_element;
END_ENTITY;

ENTITY Target_point
   SUBTYPE OF (Placed_target);
END_ENTITY;

ENTITY Target_rectangle
   SUBTYPE OF (Placed_target);
   target_length : Numerical_item_with_unit;
   target_width : Numerical_item_with_unit;
END_ENTITY;

ENTITY Target_straight_line
   SUBTYPE OF (Placed_target);
   target_length : Numerical_item_with_unit;
END_ENTITY;

ENTITY Tolerance_zone
   SUBTYPE OF (Shape_element);
   form_type : tolerance_zone_type;
   zone_for : SET[1:?] OF tolerance_zone_target;
END_ENTITY;

ENTITY Tolerance_zone_with_datum
  SUPERTYPE OF (ONEOF (Directed_tolerance_zone, Oriented_tolerance_zone))
  SUBTYPE OF (Directed_or_oriented_tolerance_zone);
  datum_reference : Datum_system;
END_ENTITY;

ENTITY Tolerance_zone_definition
   SUPERTYPE OF (ONEOF (Projected_zone_definition,
                       Non_uniform_zone_definition,
                       Runout_zone_definition));
   zone : Tolerance_zone;
   boundaries : SET[0:?] OF Shape_element;
END_ENTITY;
 

ENTITY Total_runout_tolerance
   SUBTYPE OF (Geometric_tolerance);
   angle : Angle_data_element;
   datum_system : Datum_system;
END_ENTITY;

SUBTYPE_CONSTRAINT composite_shape_element_subtypes FOR Composite_shape_element;
   ONEOF (Continuous_shape_element,
         Composite_group_shape_element);
 END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT gl_associated_shape_element_subtypes FOR Associated_shape_element;
   ONEOF (Axis_placement_shape_element,
         Plane_shape_element,
         Point_shape_element);
 END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT gl_non_definitional_shape_element_subtypes FOR Non_definitional_shape_element;
   ONEOF (Contacting_feature,
         Datum_system,
         General_datum_reference);
 END_SUBTYPE_CONSTRAINT;

SUBTYPE_CONSTRAINT gl_shape_element_subtypes FOR Shape_element;
   ONEOF (Datum,
         Datum_target,
         Tolerance_zone);
 END_SUBTYPE_CONSTRAINT;

FUNCTION sts_get_general_datum_reference
 (input : Datum_reference_element) : General_datum_reference; LOCAL
      general_datum_reference_bag : BAG OF General_datum_reference :=
      (USEDIN(input, 'GEOMETRIC_TOLERANCE_ARM.' + 'GENERAL_DATUM_REFERENCE.' + 'BASE'));
    END_LOCAL;

    IF SIZEOF(general_datum_reference_bag) = 1 THEN
      RETURN (general_datum_reference_bag[1]);
    ELSE
      RETURN (?);
    END_IF; END_FUNCTION; 

END_SCHEMA;  -- Geometric_tolerance_arm
(*
 ISO TC184/SC4/WG12 N1210 - ISO/TS 10303-1039 Geometric validation property representation - EXPRESS ARM
*)

SCHEMA Geometric_validation_property_representation_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM Foundation_representation_arm;

USE FROM Measure_representation_arm;

TYPE point_or_measure = SELECT (Cartesian_point, Measure_item);
END_TYPE;

ENTITY Geometric_validation_property;
  property_representation: Representation;
  property_value  : point_or_measure;
  validated_model : Geometric_model;
WHERE
WR1: 'GEOMETRIC_VALIDATION_PROPERTY_REPRESENTATION_ARM.NUMERICAL_REPRESENTATION_CONTEXT' IN TYPEOF(property_representation\Representation.context_of_items) ;
WR2: property_representation.name IN ['centroid', 'volume', 'surface area'];
WR3: property_value in property_representation\Representation.items;
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N7834 - ISO/TS 10303-1507 Geometrically bounded surface - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7235
*)

SCHEMA Geometrically_bounded_surface_arm;

USE FROM Basic_curve_arm;
USE FROM B_spline_geometry_arm;

TYPE geometrically_bounded_surface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Surface_set);
END_TYPE;

ENTITY Boundary_curve
  SUBTYPE OF (Closed_composite_curve);
END_ENTITY;

ENTITY Curve_bounded_surface
  SUBTYPE OF (Bounded_surface);
  basis_surface : Surface;
  boundaries : SET [1:?] OF Boundary_curve;
  implicit_outer : BOOLEAN;
WHERE
 WR1: (NOT(implicit_outer)) OR
   ('BASIC_GEOMETRY.BOUNDED_SURFACE' IN TYPEOF(basis_surface));
END_ENTITY;

ENTITY Geometrically_bounded_surface_shape_representation
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF
        geometrically_bounded_surface_shape_representation_item;
END_ENTITY;

ENTITY Surface_set
  SUBTYPE OF (Detailed_geometric_model_element);
  surface_elements : SET [1: ?] OF Surface;
END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N1279 - ISO/TS 10303-1510 Geometrically bounded wireframe - EXPRESS ARM
*)

SCHEMA Geometrically_bounded_wireframe_arm;

USE FROM Elemental_geometric_shape_arm; 

ENTITY Geometrically_bounded_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N4275 - ISO/TS 10303-1113 Group - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3245
 *) 


SCHEMA Group_arm;


TYPE groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT;
WHERE
  WR1: NOT ('GROUP_ARM.GROUP' IN TYPEOF(SELF));
END_TYPE; 

ENTITY Group;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  elements : SET[0:?] OF groupable_item;
  membership_meaning : OPTIONAL STRING;
END_ENTITY;

ENTITY Group_relationship;
  description : OPTIONAL STRING;
  relation_type : STRING;
  relating_group : Group;
  related_group : Group;
END_ENTITY;

END_SCHEMA;  -- Group_arm
(*
ISO TC184/SC4/WG12 N7114 - ISO/TS 10303-1021 Identification assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1111
*)
  
SCHEMA Identification_assignment_arm;


TYPE identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Identification_assignment;
  identifier : STRING;
  role : STRING;
  description : OPTIONAL STRING;
  items : SET[1:?] OF identification_item;
END_ENTITY;

END_SCHEMA;  -- Identification_assignment_arm
(*  
   ISO TC184/SC4/WG12 N8232 - ISO/TS 10303-1349 Incomplete data reference mechanism - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5407
*)
SCHEMA Incomplete_data_reference_mechanism_arm;

USE FROM Classification_assignment_arm;

USE FROM Document_definition_arm;

USE FROM Part_view_definition_arm;

  TYPE idrm_marked_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
    (Digital_document_definition,
     Digital_file,
     Part_view_definition);
  END_TYPE;

  ENTITY Incomplete_reference_marking
    SUBTYPE OF (Classification_assignment);
     SELF\Classification_assignment.items : SET [1:?] OF idrm_marked_item;
    WHERE
      WR1: SELF\Classification_assignment.assigned_class.id = 'reference';
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2964 - ISO/TS 10303-1036 Independent property - EXPRESS ARM
*) 


SCHEMA Independent_property_arm; 


ENTITY Independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;

END_SCHEMA;  -- Independent_property_arm
(*
 ISO TC184/SC4/WG12 N4371 - ISO/TS 10303-1038 Independent property representation - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2966
*) 


SCHEMA Independent_property_representation_arm; 

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030 

ENTITY Independent_property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition RENAMED property : Independent_property;
END_ENTITY;

END_SCHEMA;  -- Independent_property_representation_arm
(*
 ISO TC184/SC4/WG12 N8029 - ISO/TS 10303-1350 Inertia characteristics - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2637
*)

SCHEMA Inertia_characteristics_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM Shape_property_assignment_arm;

USE FROM Value_with_unit_arm;

ENTITY Centre_of_mass
SUBTYPE OF (Shape_dependent_property_representation);
WHERE
WR1: SIZEOF(SELF\Property_definition_representation.used_representation\Representation.items)=1;
WR2: SIZEOF(QUERY (it <* SELF\Property_definition_representation.used_representation\Representation.items |
   'INERTIA_CHARACTERISTICS_ARM.' + 'CARTESIAN_POINT' IN TYPEOF(it) ))=1;
WR3: 'INERTIA_CHARACTERISTICS_ARM.' + 'GEOMETRIC_COORDINATE_SPACE' IN 
	TYPEOF(SELF\Property_definition_representation.used_representation\Representation.context_of_items);
END_ENTITY;

ENTITY Inertia_matrix_item
SUBTYPE OF (Representation_item);
  inertia_values : ARRAY[1:6] OF REAL;
  common_unit: Unit;
END_ENTITY;

ENTITY Moments_of_inertia
SUBTYPE OF (Shape_dependent_property_representation);
WHERE
WR1: SIZEOF(QUERY (it <* SELF\Property_definition_representation.used_representation\Representation.items |
   'INERTIA_CHARACTERISTICS_ARM.' + 'AXIS_PLACEMENT'IN TYPEOF(it) ))=1;
WR2: SIZEOF(QUERY (it <* SELF\Property_definition_representation.used_representation\Representation.items |
   'INERTIA_CHARACTERISTICS_ARM.' + 'INERTIA_MATRIX_ITEM' IN TYPEOF(it) ))=1;
WR3: 'INERTIA_CHARACTERISTICS_ARM.' + 'GEOMETRIC_COORDINATE_SPACE' IN 
	TYPEOF(SELF\Property_definition_representation.used_representation\Representation.context_of_items);
END_ENTITY;


END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6237 - ISO/TS 10303-1761 Information product - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4227
*)

SCHEMA Information_product_arm;

USE FROM Product_view_definition_arm;    --  ISO/TS 10303-1019
USE FROM File_identification_arm;	--  ISO/TS 10303-1127

ENTITY Information_product
  ABSTRACT SUPERTYPE 
  	SUBTYPE OF (Product);
END_ENTITY;

ENTITY Information_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Information_product;
END_ENTITY;

ENTITY Information_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Information_version;
END_ENTITY;

RULE Information_product_version_constraint FOR
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT (
  'INFORMATION_PRODUCT_ARM.' + 'INFORMATION_VERSION' IN TYPEOF
  ( pv) ) ) AND ( 'INFORMATION_PRODUCT_ARM.' + 'INFORMATION_PRODUCT' IN TYPEOF (
pv.of_product) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7264 - ISO/TS 10303-1241 Information rights - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6123
*) 


SCHEMA Information_rights_arm;

USE FROM Contract_arm;    -- ISO/TS 10303-1062

USE FROM Management_resource_information_arm;    -- ISO/TS 10303-1288

TYPE information_usage_right_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE right_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_approval_item WITH 
   (Applied_information_usage_right, 
    Information_usage_right);
END_TYPE; 

TYPE right_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH 
   (Information_usage_right);
END_TYPE; 

TYPE right_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_date_or_date_time_item WITH 
   (Information_usage_right);
END_TYPE; 

TYPE right_person_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_organization_or_person_in_organization_item WITH 
   (Information_usage_right);
END_TYPE; 

ENTITY Applied_information_usage_right;
  item : SET[1:?] OF information_usage_right_item;
  right_applied : Information_usage_right;
END_ENTITY;

ENTITY Information_right;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  restriction : OPTIONAL STRING;
END_ENTITY;

ENTITY Information_usage_right;
  id : STRING;
  name : STRING;
  comment : OPTIONAL STRING;
  grants_right : SET[1:?] OF Information_right;
END_ENTITY;

ENTITY Information_usage_right_relationship;
  relating : Information_usage_right;
  related : Information_usage_right;
  relation_type : STRING;
END_ENTITY;

END_SCHEMA;  -- Information_rights_arm

(*
 ISO TC184/SC4/WG12 N7732 - ISO/TS 10303-1345 Item definition structure - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6911
*)

SCHEMA Item_definition_structure_arm;

USE FROM Effectivity_application_arm; -- ISO/TS 10303-1059
USE FROM Product_occurrence_arm; -- ISO/TS 10303-1715
USE FROM Product_structure_arm; -- ISO/TS 10303-1134

  TYPE effectivity_item_for_replacement  = SELECT BASED_ON effectivity_item WITH
    (Part_definition_relationship);
  END_TYPE;

  ENTITY Assembled_part_association
    SUBTYPE OF (Assembly_component_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Assembly_definition;
  END_ENTITY;

  ENTITY Assembly_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;

  ENTITY Effectivity_controlled_assembly_definition
    SUBTYPE OF (Assembly_definition);
  END_ENTITY;

  ENTITY Geometrical_relationship
    SUBTYPE OF (Part_definition_relationship);
      definition_placement: Geometric_model_relationship_with_transformation;
    DERIVE
      SELF\View_definition_relationship.relation_type : STRING := 'geometrical relationship';
  END_ENTITY;

  ENTITY Part_definition_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Part_view_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
  END_ENTITY;

  RULE definition_replacement_requires_effectivity_assignment FOR 
      (Part_definition_relationship);
    WHERE 
      WR1: SIZEOF( QUERY( pdr <* Part_definition_relationship | 
        (pdr\View_definition_relationship.relation_type = 'definition replacement') AND 
        (SIZEOF( USEDIN(pdr,'EFFECTIVITY_APPLICATION_ARM.EFFECTIVITY_ASSIGNMENT.ITEMS') ) = 0) ))
	     = 0; 
  END_RULE; 

  RULE mandatory_part_occurrence_definition_relationship FOR (Assembly_component_relationship);
    LOCAL
      assemblies_of_parts: SET OF Assembly_component_relationship := [];
    END_LOCAL;
    WHERE
      WR1: SIZEOF(QUERY(ar <* assemblies_of_parts | 
	    NOT ('ITEM_DEFINITION_STRUCTURE_ARM.ASSEMBLED_PART_ASSOCIATION' IN TYPEOF(ar)) ))= 0;
  END_RULE;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7900 - ISO/CD-TS - 10303-1817 Kinematic analysis control and result - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7337
*)
(* UNDER DEVELOPMENT *)
SCHEMA Kinematic_analysis_control_and_result_arm;

USE FROM Kinematic_motion_representation_arm;

TYPE kinematic_analysis_definition = SELECT
  (Interpolated_configuration_sequence,
   Prescribed_path);
END_TYPE;

TYPE kinematic_result = SELECT
  (Interpolated_configuration_sequence,
   Resulting_path);
END_TYPE;

ENTITY Kinematic_control;
  controlled_mechanism : Mechanism_representation; 
  contained_kinematic_programs : Kinematic_analysis_definition;
END_ENTITY;

ENTITY Prescribed_path
  SUBTYPE OF (Link_motion_representation_along_path);
  controlling_joints : OPTIONAL SET [1 : 6] OF Kinematic_joint;
END_ENTITY;

ENTITY Kinematic_analysis_result;
  analysed_mechanism : Mechanism_representation; 
  result : Kinematic_result;
(*  
WHERE
WR1: ('KINEMATIC_ANALYSIS_CONTROL_AND_RESULT_SCHEMA.RESULTING_PATH' IN TYPEOF (result))
     XOR
     (SIZEOF (QUERY (result <* contained_kinematic_results |
       (('KINEMATIC_ANALYSIS_CONTROL_AND_RESULT_SCHEMA.'+
         'INTERPOLATED_CONFIGURATION_SEQUENCE' IN TYPEOF (result))
              AND
       (SIZEOF (QUERY (sequence <* result\
                interpolated_configuration_sequence.interpolation |
                (sequence.interpolation <> undefined ))) > 0)))) = 0);
*)                
END_ENTITY;

ENTITY Kinematic_analysis_consistency;
  control : Kinematic_control;
  result  : Kinematic_analysis_result;
WHERE
  WR1: control.controlled_mechanism :=: result.analysed_mechanism;
END_ENTITY;

ENTITY Resulting_path
  SUBTYPE OF (Link_motion_representation_along_path);
  controlling_joints : SET [1 : ?] OF Kinematic_joint;
END_ENTITY;

SUBTYPE_CONSTRAINT link_motion_representation_along_path_subtypes FOR Link_motion_representation_along_path;
          ONEOF (Prescribed_path, Resulting_path);
END_SUBTYPE_CONSTRAINT; 

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7903 - ISO/CD-TS - 10303-1796 Kinematic motion representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7340
*)

SCHEMA Kinematic_motion_representation_arm;

USE FROM Kinematic_state_arm;
USE FROM B_spline_geometry_arm; --  ISO/TS 10303-1801
USE FROM Parametric_representation_arm;
USE FROM Contextual_shape_positioning_arm; -- ISO/TS 10303-1027
REFERENCE FROM Foundation_representation_arm(using_representations);

TYPE link_or_shape_representation = SELECT(
  Kinematic_link_representation,
  Geometric_model);
END_TYPE;

TYPE kmr_geometric_representation_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON geometric_representation_select WITH (
  Link_motion_representation_along_path);
END_TYPE;

TYPE interpolation_type = ENUMERATION OF
  (undefined_interpolation_type,
   discontinuous_interpolation_type,
   synchronous_interpolation_type,
   linear_interpolation_type);
END_TYPE;

ENTITY Interpolated_configuration_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Geometric_representation_context_with_parameter;
  SELF\Representation.items : SET[1:?] OF Interpolated_configuration_sequence;
END_ENTITY;

ENTITY Interpolated_configuration_sequence
  SUBTYPE OF (Representation_item);
  segments : LIST[2:?] OF Interpolated_configuration_segment;
DERIVE
  n_segments : INTEGER := SIZEOF(segments);
  closed_interpolation : LOGICAL := segments[n_segments].interpolation <> discontinuous_interpolation_type;
  configured_mechanism : mechanism_representation := segments[1].state.represented_mechanism;
WHERE
  WR1: SIZEOF( QUERY(ics <* segments | ics.state.represented_mechanism :<>: configured_mechanism)) = 0;
END_ENTITY;  

ENTITY Interpolated_configuration_segment;
--  SUBTYPE OF (Founded_item);
  state : mechanism_state_representation;
  t_parameter : parameter_value;
  interpolation : interpolation_type;
END_ENTITY;

ENTITY Link_motion_relationship
  SUBTYPE OF (Definitional_representation_relationship, Geometric_model_relationship_with_transformation);
  SELF\Geometric_model_relationship.rep_1 : link_or_shape_representation;
  SELF\Geometric_model_relationship.rep_2 : Link_motion_representation_along_path;
  transformation_operator : Link_motion_transformation;
WHERE
  WR1: transformation_operator.transform_item_1 IN rep_1.items;
  WR2: transformation_operator.transform_item_2 IN rep_2.items;
END_ENTITY;

ENTITY Item_link_motion_relationship
  SUBTYPE OF (Link_motion_relationship);
  SELF\Representation_relationship.rep_1 : Geometric_model;
  item : Detailed_geometric_model_element;
END_ENTITY;

ENTITY Link_motion_transformation;
--  SUBTYPE OF (Item_defined_transformation);
  transform_item_1 : Rigid_placement;
  transform_item_2 : Kinematic_path;
END_ENTITY;

ENTITY Link_motion_representation_along_path
  SUBTYPE OF (Representation);
  SELF\representation.items : SET [1:?] OF Kinematic_path;
  SELF\representation.context_of_items : Geometric_representation_context_with_parameter;
END_ENTITY;

ENTITY Geometric_representation_context_with_parameter 
  SUBTYPE OF (Geometric_coordinate_space);
  parameter_unit : OPTIONAL Unit;
END_ENTITY;

ENTITY Kinematic_path
  ABSTRACT SUPERTYPE OF (ONEOF (Kinematic_path_defined_by_nodes, Kinematic_path_defined_by_curves))
  SUBTYPE OF (Detailed_geometric_model_element);
  segments : LIST [1:?] OF Kinematic_path_segment;
  t_start : parameter_value;
DERIVE
  n_segments : INTEGER := SIZEOF(segments);
  closed_path : LOGICAL := segments[n_segments].transition <> curve_transition_code.discontinuous;
WHERE
  WR1: SIZEOF(QUERY(using_rep <* using_representations(SELF)| 
        NOT('KINEMATIC_MOTION_REPRESENTATION_SCHEMA.GEOMETRIC_REPRESENTATION_CONTEXT_WITH_PARAMETER' IN TYPEOF(using_rep.context_of_items))))= 0;
  WR2: ('KINEMATIC_MOTION_REPRESENTATION_SCHEMA.CURVE_BASED_PATH_WITH_ORIENTATION' IN TYPEOF(segments[1]))
      OR (n_segments > 1);
  -- WR2 - parameters are increasing
  -- WR3 - different end positions
END_ENTITY;

ENTITY Kinematic_path_defined_by_nodes
  SUBTYPE OF (Kinematic_path);
  SELF\Kinematic_path.segments : LIST [1:?] OF Path_node;
  placement_start : Axis_placement;
END_ENTITY;  

ENTITY Kinematic_path_defined_by_curves
  SUBTYPE OF (Kinematic_path);
  SELF\Kinematic_path.segments : LIST [1:?] OF Curve_based_path_with_orientation;
END_ENTITY;  

ENTITY Kinematic_path_segment
  ABSTRACT SUPERTYPE OF (ONEOF (
    Path_node,
    Curve_based_path_with_orientation)); 
--  SUBTYPE OF (founded_item);
  t_end : parameter_value;
  transition : curve_transition_code;
END_ENTITY;

ENTITY Path_parameter_representation
  SUBTYPE OF (Definitional_representation);
  SELF\representation.context_of_items : Path_parameter_representation_context;
  SELF\representation.items : SET[1:?] OF Bounded_curve;
WHERE
  WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;
END_ENTITY;

ENTITY Path_parameter_representation_context
  SUBTYPE OF (Geometric_coordinate_space, Parametric_representation_context);
END_ENTITY;  

ENTITY Path_node
  ABSTRACT SUPERTYPE OF (ONEOF (
    Point_to_point_path,
    Circular_path,
    Linear_path,
    Curve_based_path))
  SUBTYPE OF (Kinematic_path_segment);
  placement_end : Axis_placement;
END_ENTITY;

ENTITY Point_to_point_path
  SUBTYPE OF (Path_node);
DERIVE
  SELF\kinematic_path_segment.transition : curve_transition_code := curve_transition_code.discontinuous;
END_ENTITY;

ENTITY Circular_path
  SUBTYPE OF (Path_node);
  via_point : cartesian_point;
END_ENTITY;

ENTITY Linear_path
  SUBTYPE OF (Path_node);
DERIVE
  SELF\kinematic_path_segment.transition : curve_transition_code := curve_transition_code.continuous;
END_ENTITY;

ENTITY Curve_based_path
  SUBTYPE OF (Path_node);
  path_curve : Curve;
END_ENTITY;
-- IP1 : start and end point shall be on the curve

ENTITY Curve_based_path_with_orientation
  SUBTYPE OF (Kinematic_path_segment);
  position_curve : Bounded_curve;
  orientation_curve : Bounded_curve;
WHERE
  WR1: TYPEOF(position_curve) = TYPEOF(orientation_curve);
END_ENTITY;

ENTITY Curve_based_path_with_orientation_and_parameters
  SUBTYPE OF (Curve_based_path_with_orientation);
  parameters : Path_parameter_representation;
END_ENTITY;  

SUBTYPE_CONSTRAINT kmr_representation_subtypes FOR Representation;
  ONEOF (Interpolated_configuration_representation, Link_motion_representation_along_path);
END_SUBTYPE_CONSTRAINT; 

SUBTYPE_CONSTRAINT kmr_geometric_representation_item_subtypes FOR Detailed_geometric_model_element;
  ONEOF (
    Kinematic_path,
    Axis_placement);
END_SUBTYPE_CONSTRAINT; 

SUBTYPE_CONSTRAINT kmr_geometric_representation_context_subtypes FOR Geometric_coordinate_space;
  ONEOF (Geometric_representation_context_with_parameter, Path_parameter_representation_context);
END_SUBTYPE_CONSTRAINT; 

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7906 - ISO/CD-TS - 10303-1798 Kinematic state - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7343
*)

SCHEMA Kinematic_state_arm;

USE FROM Kinematic_structure_arm;

TYPE spatial_rotation = SELECT
  (ypr_rotation,
   rotation_about_direction);
END_TYPE;

TYPE ypr_rotation = ARRAY [ypr_index(yaw) : ypr_index(roll)]
                    OF plane_angle_measure;
END_TYPE;

TYPE ypr_enumeration = ENUMERATION OF
  (yaw,
   pitch,
   roll);
END_TYPE;

ENTITY Mechanism_state_representation 
  SUBTYPE OF (Representation);
  SELF\representation.items : SET[1:?] OF Pair_value; 
  represented_mechanism : Mechanism_representation;
DERIVE
  SELF\representation.context_of_items : Geometric_coordinate_space := represented_mechanism.context_of_items;
END_ENTITY;

ENTITY Pair_value
  ABSTRACT SUPERTYPE OF ( ONEOF (
	Sliding_surface_pair_value,
	Rolling_surface_pair_value,
	Revolute_pair_value,
	Prismatic_pair_value,
	Screw_pair_value,
	Cylindrical_pair_value,
	Spherical_pair_value,
	Sliding_curve_pair_value,
	Rolling_curve_pair_value,
	Gear_pair_value,
	Rack_and_pinion_pair_value,
	Universal_pair_value,
	Planar_pair_value,
	Unconstrained_pair_value,
	Point_on_surface_pair_value,
	Point_on_planar_curve_pair_value
  ))
  SUBTYPE OF (Detailed_geometric_model_element);
  applies_to_pair : Kinematic_pair;
END_ENTITY;

ENTITY Sliding_surface_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : sliding_surface_pair;
  actual_point_on_surface_1       : Point_on_surface;
  actual_point_on_surface_2       : Point_on_surface;
  actual_rotation                 : plane_angle_measure;
WHERE
  WR1: SELF\pair_value.applies_to_pair\surface_pair.surface_1 :=:
       actual_point_on_surface_1.supporting_surface;
  WR2: SELF\pair_value.applies_to_pair\surface_pair.surface_2 :=:
       actual_point_on_surface_2.supporting_surface;
END_ENTITY;

ENTITY Rolling_surface_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Rolling_surface_pair;
  actual_point_on_surface         : Point_on_surface;
  actual_rotation                 : plane_angle_measure;
WHERE
  WR1: SELF\pair_value.applies_to_pair\surface_pair.surface_1 :=:
       actual_point_on_surface.supporting_surface;
END_ENTITY;

ENTITY Revolute_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Revolute_pair;
  actual_rotation                 : plane_angle_measure ;
END_ENTITY;

ENTITY Prismatic_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Prismatic_pair;
  actual_translation              : length_measure;
END_ENTITY;

ENTITY Screw_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Screw_pair;
  actual_rotation                 : plane_angle_measure;
END_ENTITY;

ENTITY Cylindrical_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Cylindrical_pair;
  actual_translation              : length_measure;
  actual_rotation                 : plane_angle_measure;
END_ENTITY;

ENTITY Spherical_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Spherical_pair;
  input_orientation               : spatial_rotation;
END_ENTITY;

ENTITY Sliding_curve_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Sliding_curve_pair;
  actual_point_on_curve_1         : Point_on_curve;
  actual_point_on_curve_2         : Point_on_curve;
WHERE
  WR1: SELF\pair_value.applies_to_pair\planar_curve_pair.curve_1 :=:
       actual_point_on_curve_1.supporting_curve;
  WR2: SELF\pair_value.applies_to_pair\planar_curve_pair.curve_2 :=:
       actual_point_on_curve_2.supporting_curve;
END_ENTITY;

ENTITY Rolling_curve_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Rolling_curve_pair;
  actual_point_on_curve_1         : Point_on_curve;
WHERE
  WR1: SELF\pair_value.applies_to_pair\planar_curve_pair.curve_1 :=:
       actual_point_on_curve_1.supporting_curve;
END_ENTITY;

ENTITY Gear_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Gear_pair;
  actual_rotation_1               : plane_angle_measure;
DERIVE
  actual_rotation_2               : plane_angle_measure
                                  := - actual_rotation_1 *
                                     SELF\pair_value.applies_to_pair\
                                     gear_pair.gear_ratio;
END_ENTITY;

ENTITY Rack_and_pinion_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Rack_and_pinion_pair;
  actual_displacement             : length_measure;
DERIVE
  actual_rotation : plane_angle_measure
   := 0.0; (*
                  := convert_plane_angle_for_pair_from_radian
                     (SELF\pair_value.applies_to_pair,
                      (- actual_displacement /
                       SELF\pair_value.applies_to_pair\
                       rack_and_pinion_pair.pinion_radius)); *)
END_ENTITY;

ENTITY Universal_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Universal_pair;
  first_rotation_angle            : plane_angle_measure;
  second_rotation_angle           : plane_angle_measure;
END_ENTITY;

ENTITY Planar_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Planar_pair;
  actual_rotation                 : plane_angle_measure;
  actual_translation_x            : length_measure;
  actual_translation_y            : length_measure;
END_ENTITY;

ENTITY Unconstrained_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Unconstrained_pair;
  actual_placement                : Axis_placement_3d;
END_ENTITY;

ENTITY Point_on_surface_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Point_on_surface_pair;
  actual_point_on_surface         : Point_on_surface;
  input_orientation               : spatial_rotation;
WHERE
  WR1: SELF\pair_value.applies_to_pair\Point_on_surface_pair.pair_surface :=:
       actual_point_on_surface.supporting_surface;
END_ENTITY;

ENTITY Point_on_planar_curve_pair_value
  SUBTYPE OF (Pair_value);
  SELF\pair_value.applies_to_pair : Point_on_planar_curve_pair;
  actual_point_on_curve           : Point_on_curve;
  input_orientation               : spatial_rotation;
WHERE
  WR1: SELF\pair_value.applies_to_pair\point_on_planar_curve_pair.pair_curve
       :=: actual_point_on_curve.supporting_curve;
END_ENTITY;

ENTITY Rotation_about_direction
  SUBTYPE OF (Detailed_geometric_model_element); -- LK
  direction_of_axis : Direction;
  rotation_angle    : plane_angle_measure;
WHERE
  WR1: SIZEOF (direction_of_axis.direction_ratios) = 3;
END_ENTITY;

FUNCTION ypr_index (ypr : ypr_enumeration) : INTEGER;
  CASE ypr OF
    yaw    : RETURN (1);
    pitch  : RETURN (2);
    roll   : RETURN (3);
  END_CASE;
  RETURN (?);
END_FUNCTION;


SUBTYPE_CONSTRAINT kss_geometric_representation_item_subtypes FOR Detailed_geometric_model_element;
  ONEOF (
         Rotation_about_direction,
         Su_parameters);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7909 - ISO/CD-TS - 10303-1797 Kinematic structure - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7346
*)

SCHEMA Kinematic_structure_arm;

USE FROM Kinematic_topology_arm;
REFERENCE FROM Kinematic_topology_arm(
   get_kinematic_joints_from_oriented_joints,
   get_kinematic_joints_from_kinematic_loops);
USE FROM Basic_curve_arm;
USE FROM Assembly_structure_arm; -- ISO/TS 10303-1026
USE FROM Geometric_model_relationship_arm; -- ISO/TS 10303-1403
USE FROM Composite_surface_arm; -- ISO/TS 10303-1525
USE FROM Shape_property_assignment_arm; --  ISO/TS 10303-1032
REFERENCE FROM Foundation_representation_arm(using_representations);

TYPE ks_geometric_representation_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON geometric_representation_select WITH (
  Kinematic_link_representation);
END_TYPE;

TYPE ks_property_assignment_select = SELECT BASED_ON property_assignment_select WITH (
  Assembly_component_relationship);
END_TYPE;

TYPE rigid_placement = SELECT
  (Axis_placement_3d,
   Su_parameters);
END_TYPE;

ENTITY Product_definition_relationship_kinematics
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : Assembly_component_relationship;
UNIQUE
  UR1 : described_element;   
END_ENTITY;

ENTITY Kinematic_property_mechanism_representation
  SUBTYPE OF (Kinematic_property_definition_representation);
  SELF\Property_definition_representation.used_representation : Mechanism_representation; 
  base : Kinematic_link_representation;
WHERE
   WR1: SIZEOF( QUERY( i <* used_representation.items |
        (base :=: i\Representation_relationship.rep_1) OR
        (base :=: i\Representation_relationship.rep_2))) > 0;
END_ENTITY;

ENTITY Context_dependent_kinematic_link_representation;
  representation_relation : Kinematic_link_representation_association;
  represented_product_relation : Product_definition_relationship_kinematics;
END_ENTITY; 

SUBTYPE_CONSTRAINT kps_property_definition_subtypes FOR Assigned_property;
  ONEOF (Product_definition_kinematics,
         Product_definition_relationship_kinematics);
END_SUBTYPE_CONSTRAINT;


ENTITY Mechanism_representation 
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Geometric_coordinate_space;
  SELF\Representation.items : SET[1:?] OF Pair_representation_relationship;
  represented_topology : Kinematic_topology_representation_select;
DERIVE
  represented_joints : SET[1:?] OF Kinematic_joint := collect_joints(items); 
WHERE  
  WR1: (('KINEMATIC_TOPOLOGY_SCHEMA.KINEMATIC_TOPOLOGY_STRUCTURE' IN TYPEOF(represented_topology))
         AND (represented_joints :=: represented_topology.items)) OR
       (('KINEMATIC_TOPOLOGY_SCHEMA.KINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE' IN TYPEOF(represented_topology))
         AND (represented_joints :=: get_kinematic_joints_from_oriented_joints(represented_topology.items))) OR
       (('KINEMATIC_TOPOLOGY_SCHEMA.KINEMATIC_TOPOLOGY_NETWORK_STRUCTURE' IN TYPEOF(represented_topology))
         AND (represented_joints :=: get_kinematic_joints_from_kinematic_loops(represented_topology.items)));          
END_ENTITY;

ENTITY Pair_representation_relationship
  SUBTYPE OF (Detailed_geometric_model_element, Geometric_model_relationship);
  SELF\Representation_relationship.rep_1 : Kinematic_link_representation;
  SELF\Representation_relationship.rep_2 : Kinematic_link_representation;
  transformation_operator : Kinematic_pair;
WHERE
  WR1: transformation_operator.transform_item_1 IN rep_1.items;
  WR2: transformation_operator.transform_item_2 IN rep_2.items;
  WR3: rep_1\kinematic_link_representation.represented_link = transformation_operator\kinematic_pair.joint.edge_start; 
  WR4: rep_2\kinematic_link_representation.represented_link = transformation_operator\kinematic_pair.joint.edge_end; 
END_ENTITY;

TYPE kinematic_link_representation_items = SELECT (
  Curve,
  Cartesian_point,
  Rigid_placement,
  Surface);
END_TYPE;
  
ENTITY Kinematic_link_representation
  ABSTRACT SUPERTYPE OF ( ONEOF (Linear_flexible_link_representation, Rigid_link_representation))
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Geometric_coordinate_space;
  SELF\Representation.items : SET[1:?] OF kinematic_link_representation_items;
  represented_link : Kinematic_link;
INVERSE
  associated_shape_representation : SET[0:1] OF Kinematic_link_representation_association FOR rep_1;
END_ENTITY;

ENTITY Linear_flexible_link_representation
  SUBTYPE OF (Kinematic_link_representation);
END_ENTITY;

ENTITY Rigid_link_representation
  SUBTYPE OF (Kinematic_link_representation);
END_ENTITY;

ENTITY Kinematic_link_representation_association
  SUBTYPE OF (Representation_relationship);
  SELF\Representation_relationship.rep_1 : Kinematic_link_representation;
  SELF\Representation_relationship.rep_2 : Geometric_model; 
WHERE
  WR1: (SELF\Representation_relationship.rep_2.context_of_items :=:
        SELF\Representation_relationship.rep_1.context_of_items) OR
       ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_MODEL_RELATIONSHIP_WITH_TRANSFORMATION' IN TYPEOF(SELF)); 
END_ENTITY;

ENTITY Su_parameters
  SUBTYPE OF (Detailed_geometric_model_element);
  a     : length_measure;
  alpha : plane_angle_measure;
  b     : length_measure;
  beta  : plane_angle_measure;
  c     : length_measure;
  gamma : plane_angle_measure;
END_ENTITY;

ENTITY Kinematic_pair
  ABSTRACT SUPERTYPE OF( ONEOF (
      High_order_kinematic_pair, 
      Low_order_kinematic_pair_with_motion_coupling, 
      Low_order_kinematic_pair) 
    ANDOR Actuated_kinematic_pair)  
  SUBTYPE OF (Detailed_geometric_model_element);
  joint : Kinematic_joint;
  transform_item_1 : rigid_placement;
  transform_item_2 : rigid_placement;
DERIVE
  associated_link_representations_1 : SET[1:?] OF Kinematic_link_representation :=
    sort_link_associations(link_representation_associations, TRUE);
  associated_link_representations_2 : SET[1:?] OF Kinematic_link_representation :=
    sort_link_associations(link_representation_associations, FALSE);
INVERSE
  link_representation_associations : SET[1:?] OF Pair_representation_relationship FOR transformation_operator; 
END_ENTITY;

ENTITY High_order_kinematic_pair
  ABSTRACT SUPERTYPE OF( ONEOF (
    Linear_flexible_and_planar_curve_pair,
    Point_on_surface_pair,
    Point_on_planar_curve_pair,
    Planar_curve_pair,
    Surface_pair
  ))
  SUBTYPE OF (Kinematic_pair);
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_2 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Low_order_kinematic_pair_with_motion_coupling
  ABSTRACT SUPERTYPE OF( ONEOF (
    Gear_pair,
    Linear_flexible_and_pinion_pair,
    Rack_and_pinion_pair,
    Screw_pair
  ))
  SUBTYPE OF (Kinematic_pair);
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_2 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Low_order_kinematic_pair
  SUPERTYPE OF( ONEOF (
    Revolute_pair,
    Cylindrical_pair,
    Spherical_pair,
    Spherical_pair_with_pin,
    Planar_pair,
    Unconstrained_pair,
    Fully_constrained_pair,
    Prismatic_pair,
    Universal_pair
    ))  
  SUBTYPE OF (Kinematic_pair);
  t_x : BOOLEAN;
  t_y : BOOLEAN;
  t_z : BOOLEAN;
  r_x : BOOLEAN;
  r_y : BOOLEAN;
  r_z : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_2 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

TYPE actuated_direction = ENUMERATION OF (
	bidirectional,
	positive_only,
	negative_only,
	not_actuated);
END_TYPE;
   
ENTITY Actuated_kinematic_pair
  SUBTYPE OF (Kinematic_pair);
  t_x : OPTIONAL actuated_direction;
  t_y : OPTIONAL actuated_direction;
  t_z : OPTIONAL actuated_direction;
  r_x : OPTIONAL actuated_direction;
  r_y : OPTIONAL actuated_direction;
  r_z : OPTIONAL actuated_direction;
END_ENTITY;

ENTITY Revolute_pair_with_range
  SUBTYPE OF (Revolute_pair);
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
END_ENTITY;

ENTITY Prismatic_pair_with_range
  SUBTYPE OF (Prismatic_pair);
  lower_limit_actual_translation         : OPTIONAL length_measure;
  upper_limit_actual_translation         : OPTIONAL length_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_translation)
        OR
        NOT EXISTS(upper_limit_actual_translation))
       XOR
       (lower_limit_actual_translation < upper_limit_actual_translation);
END_ENTITY;

ENTITY Revolute_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;

ENTITY Prismatic_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := FALSE;
END_ENTITY;

ENTITY Screw_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  pitch : length_measure;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Screw_pair_with_range
  SUBTYPE OF (screw_pair);
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
END_ENTITY;

ENTITY Cylindrical_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;

ENTITY Cylindrical_pair_with_range
  SUBTYPE OF (Cylindrical_pair);
  lower_limit_actual_translation         : OPTIONAL length_measure;
  upper_limit_actual_translation         : OPTIONAL length_measure;
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_translation)
        OR
        NOT EXISTS(upper_limit_actual_translation))
       XOR
       (lower_limit_actual_translation < upper_limit_actual_translation);
  WR2: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
END_ENTITY;

ENTITY Spherical_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;

ENTITY Spherical_pair_with_range
  SUBTYPE OF (Spherical_pair);
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_pitch                      : OPTIONAL plane_angle_measure;
  upper_limit_pitch                      : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR2: (NOT EXISTS(lower_limit_pitch)
        OR
        NOT EXISTS(upper_limit_pitch))
       XOR
       (lower_limit_pitch < upper_limit_pitch);
  WR3: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
END_ENTITY;

ENTITY Spherical_pair_with_pin
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;

ENTITY Spherical_pair_with_pin_and_range
  SUBTYPE OF (Spherical_pair_with_pin);
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR2: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
END_ENTITY;

ENTITY Universal_pair
  SUBTYPE OF (Low_order_kinematic_pair);
  input_skew_angle : OPTIONAL plane_angle_measure;
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := TRUE;     
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
  skew_angle : plane_angle_measure := NVL (input_skew_angle, 0.0);
END_ENTITY;

ENTITY Universal_pair_with_range
  SUBTYPE OF (Universal_pair);
  lower_limit_first_rotation             : OPTIONAL plane_angle_measure;
  upper_limit_first_rotation             : OPTIONAL plane_angle_measure;
  lower_limit_second_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_second_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_first_rotation)
        OR
        NOT EXISTS(upper_limit_first_rotation))
       XOR
       (lower_limit_first_rotation < upper_limit_first_rotation);
  WR2: (NOT EXISTS(lower_limit_second_rotation)
        OR
        NOT EXISTS(upper_limit_second_rotation))
       XOR
       (lower_limit_second_rotation < upper_limit_second_rotation);
END_ENTITY;

ENTITY Homokinetic_pair
  SUBTYPE OF (Universal_pair);
WHERE
  WR1:  NOT EXISTS(SELF.input_skew_angle);       
END_ENTITY;

ENTITY Planar_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;

ENTITY Planar_pair_with_range
  SUBTYPE OF (Planar_pair);
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  lower_limit_actual_translation_x       : OPTIONAL length_measure;
  upper_limit_actual_translation_x       : OPTIONAL length_measure;
  lower_limit_actual_translation_y       : OPTIONAL length_measure;
  upper_limit_actual_translation_y       : OPTIONAL length_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
  WR2: (NOT EXISTS(lower_limit_actual_translation_x)
        OR
        NOT EXISTS(upper_limit_actual_translation_x))
       XOR
       (lower_limit_actual_translation_x < upper_limit_actual_translation_x);
  WR3: (NOT EXISTS(lower_limit_actual_translation_y)
        OR
        NOT EXISTS(upper_limit_actual_translation_y))
       XOR
       (lower_limit_actual_translation_y < upper_limit_actual_translation_y);
END_ENTITY;

ENTITY Tool_attachment_point_frame 
  SUBTYPE OF (Axis_placement_3d);
DERIVE  
  SELF\Representation_item.name : label := ?;
END_ENTITY;  

ENTITY Tool_centre_point_frame
  SUBTYPE OF (Axis_placement_3d);
DERIVE  
  SELF\Representation_item.name : label := ?;
END_ENTITY;  

ENTITY Unconstrained_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := TRUE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := TRUE;
END_ENTITY;

ENTITY Fully_constrained_pair
  SUBTYPE OF (Low_order_kinematic_pair);
DERIVE  
  SELF\Low_order_kinematic_pair.t_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.t_z : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_x : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_y : BOOLEAN := FALSE;
  SELF\Low_order_kinematic_pair.r_z : BOOLEAN := FALSE;
END_ENTITY;

ENTITY Point_on_surface_pair
  SUBTYPE OF (High_order_kinematic_pair);
  pair_surface : surface;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(pair_surface IN r.items))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Point_on_surface_pair_with_range
  SUBTYPE OF (Point_on_surface_pair);
  range_on_pair_surface                  : Trimmed_surface;
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_pitch                      : OPTIONAL plane_angle_measure;
  upper_limit_pitch                      : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_pitch)
        OR
        NOT EXISTS(upper_limit_pitch))
       XOR
       (lower_limit_pitch < upper_limit_pitch);
  WR2: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR3: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_pair_surface IN r.items))) = 0;
END_ENTITY;

ENTITY Surface_pair
  ABSTRACT SUPERTYPE OF ( ONEOF (Sliding_surface_pair, Rolling_surface_pair) ANDOR Surface_pair_with_range)
  SUBTYPE OF (High_order_kinematic_pair);
  surface_1   : Surface;
  surface_2   : Surface;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(surface_1 IN r.items))) = 0;
  WR2: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(surface_2 IN r.items))) = 0;
  WR3: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Surface_pair_with_range
  SUBTYPE OF (Surface_pair);
  range_on_surface_1                     : Trimmed_surface;
  range_on_surface_2                     : Trimmed_surface;
  lower_limit_actual_rotation            : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation            : OPTIONAL plane_angle_measure;
WHERE
  WR1: SELF\Surface_pair.surface_1 :=: range_on_surface_1.basis_surface;
  WR2: SELF\Surface_pair.surface_2 :=: range_on_surface_2.basis_surface;
  WR3: (NOT EXISTS(lower_limit_actual_rotation)
        OR
        NOT EXISTS(upper_limit_actual_rotation))
       XOR
       (lower_limit_actual_rotation < upper_limit_actual_rotation);
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_surface_1 IN r.items))) = 0;
  WR5: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(range_on_surface_2 IN r.items))) = 0;
END_ENTITY;

ENTITY Sliding_surface_pair
  SUBTYPE OF (Surface_pair);
END_ENTITY;

ENTITY Rolling_surface_pair
  SUBTYPE OF (Surface_pair);
END_ENTITY;

ENTITY Linear_flexible_and_planar_curve_pair
  SUBTYPE OF (High_order_kinematic_pair);
  pair_curve  : Curve;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(pair_curve IN r.items))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.LINEAR_FLEXIBLE_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Point_on_planar_curve_pair
  SUBTYPE OF (High_order_kinematic_pair);
  pair_curve  : Curve;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(pair_curve IN r.items))) = 0;
  WR2: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Point_on_planar_curve_pair_with_range
  SUBTYPE OF (Point_on_planar_curve_pair);
  range_on_pair_curve                    : Trimmed_curve;
  lower_limit_yaw                        : OPTIONAL plane_angle_measure;
  upper_limit_yaw                        : OPTIONAL plane_angle_measure;
  lower_limit_pitch                      : OPTIONAL plane_angle_measure;
  upper_limit_pitch                      : OPTIONAL plane_angle_measure;
  lower_limit_roll                       : OPTIONAL plane_angle_measure;
  upper_limit_roll                       : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_pitch)
        OR
        NOT EXISTS(upper_limit_pitch))
       XOR
       (lower_limit_pitch < upper_limit_pitch);
  WR2: (NOT EXISTS(lower_limit_yaw)
        OR
        NOT EXISTS(upper_limit_yaw))
       XOR
       (lower_limit_yaw < upper_limit_yaw);
  WR3: (NOT EXISTS(lower_limit_roll)
        OR
        NOT EXISTS(upper_limit_roll))
       XOR
       (lower_limit_roll < upper_limit_roll);
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_pair_curve IN r.items))) = 0;
END_ENTITY;

ENTITY Planar_curve_pair
  SUPERTYPE OF ( ONEOF(Sliding_curve_pair, Rolling_curve_pair) ANDOR Planar_curve_pair_range)
  SUBTYPE OF (High_order_kinematic_pair);
  curve_1     : Curve;
  curve_2     : Curve;
  orientation : BOOLEAN;
WHERE
  WR1: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(curve_1 IN r.items))) = 0;
  WR2: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(curve_2 IN r.items))) = 0;
  WR3: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Planar_curve_pair_range
  SUBTYPE OF (Planar_curve_pair);
  range_on_curve_1                       : Trimmed_curve;
  range_on_curve_2                       : Trimmed_curve;
WHERE
  WR1: SELF\Planar_curve_pair.curve_1 :=: range_on_curve_1.basis_curve;
  WR2: SELF\Planar_curve_pair.curve_2 :=: range_on_curve_2.basis_curve;
  WR3: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_1 | NOT(range_on_curve_1 IN r.items))) = 0;
  WR4: SIZEOF( QUERY(r <* SELF\Kinematic_pair.associated_link_representations_2 | NOT(range_on_curve_2 IN r.items))) = 0;
END_ENTITY;

ENTITY Sliding_curve_pair
  SUBTYPE OF (Planar_curve_pair);
END_ENTITY;

ENTITY Rolling_curve_pair
  SUBTYPE OF (Planar_curve_pair);
END_ENTITY;

ENTITY Gear_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  radius_first_link  : length_measure;
  radius_second_link : length_measure;
  bevel              : plane_angle_measure;
  helical_angle      : plane_angle_measure;
  gear_ratio         : REAL;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Gear_pair_with_range
  SUBTYPE OF (Gear_pair);
  lower_limit_actual_rotation_1          : OPTIONAL plane_angle_measure;
  upper_limit_actual_rotation_1          : OPTIONAL plane_angle_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_actual_rotation_1)
        OR
        NOT EXISTS(upper_limit_actual_rotation_1))
       XOR
       (lower_limit_actual_rotation_1 < upper_limit_actual_rotation_1);
END_ENTITY;

ENTITY Rack_and_pinion_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  pinion_radius : length_measure;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.RIGID_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

ENTITY Rack_and_pinion_pair_with_range
  SUBTYPE OF (Rack_and_pinion_pair);
  lower_limit_rack_displacement          : OPTIONAL length_measure;
  upper_limit_rack_displacement          : OPTIONAL length_measure;
WHERE
  WR1: (NOT EXISTS(lower_limit_rack_displacement)
        OR
        NOT EXISTS(upper_limit_rack_displacement))
       XOR
       (lower_limit_rack_displacement < upper_limit_rack_displacement);
END_ENTITY;

ENTITY Linear_flexible_and_pinion_pair
  SUBTYPE OF (Low_order_kinematic_pair_with_motion_coupling);
  pinion_radius : length_measure;
WHERE
  WR1: SIZEOF( QUERY(lr <* SELF\Kinematic_pair.associated_link_representations_1 | 
    NOT('KINEMATIC_STRUCTURE_SCHEMA.LINEAR_FLEXIBLE_LINK_REPRESENTATION' IN TYPEOF(lr)))) = 0;
END_ENTITY;

FUNCTION representation_of_link (link : Kinematic_link)
    : Kinematic_link_representation;
(*
  LOCAL
    link_rep_rel : BAG OF kinematic_link_representation_relation;
  END_LOCAL;

  link_rep_rel := USEDIN (link, 'KINEMATIC_STRUCTURE_SCHEMA.'+
                                'KINEMATIC_LINK_REPRESENTATION_RELATION.'+
                                'TOPOLOGICAL_ASPECTS');
  IF (SIZEOF (link_rep_rel) = 0) THEN
    RETURN (?);
  ELSE
    RETURN (link_rep_rel[1].geometric_aspects);
  END_IF;
*)
  RETURN (?);
END_FUNCTION;

FUNCTION sort_link_associations 
  (aprr : SET[1:?] OF Pair_representation_relationship; one_not_two : boolean) : SET OF Kinematic_link_representation;
LOCAL
  result : SET OF Kinematic_link_representation := [];
END_LOCAL;
  IF one_not_two THEN
    REPEAT i := 1 TO HIINDEX(aprr);
      result := result + aprr[i].rep_1;
    END_REPEAT;
  ELSE  
    REPEAT i := 1 TO HIINDEX(aprr);
      result := result + aprr[i].rep_2;
    END_REPEAT;
  END_IF;
  RETURN(result);
END_FUNCTION;

FUNCTION collect_joints 
  (items : SET[1:?] OF Pair_representation_relationship) : SET OF Kinematic_joint;
LOCAL
  result : SET OF kinematic_joint := [];
END_LOCAL;
  REPEAT i := 1 TO HIINDEX(items);
    result := result + items[i].transformation_operator.joint;
  END_REPEAT;
  RETURN(result);
END_FUNCTION;

SUBTYPE_CONSTRAINT kss_representation_subtypes FOR Representation;
  ONEOF (Kinematic_link_representation,
         Kinematic_topology_structure,
         Kinematic_topology_directed_structure,
         Kinematic_topology_network_structure,
         Mechanism_representation,
         Geometric_model);
END_SUBTYPE_CONSTRAINT;


SUBTYPE_CONSTRAINT ks_axis_placement_3d_subtypes FOR Axis_placement_3d;
  ONEOF (Tool_attachment_point_frame,
         Tool_centre_point_frame);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7912 - ISO/CD-TS - 10303-1799 Kinematic topology - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7349
*)

SCHEMA Kinematic_topology_arm;

USE FROM Elemental_topology_arm; -- ISO/TS 10303-1005
USE FROM Foundation_representation_arm; -- ISO/TS 10303-1006
USE FROM Part_view_definition_arm; -- ISO/TS 10303-1023
USE FROM Property_assignment_arm; -- ISO/TS 10303-1030
REFERENCE FROM Foundation_representation_arm(using_representations);

TYPE kinematic_topology_representation_select = SELECT (
  kinematic_topology_structure,
  kinematic_topology_directed_structure,
  kinematic_topology_network_structure
);
END_TYPE;

ENTITY Product_definition_kinematics
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : Part_view_definition;
INVERSE
  representation_relation : Kinematic_property_definition_representation FOR definition;
UNIQUE
  UR1 : described_element;   
END_ENTITY;

ENTITY Kinematic_property_definition_representation
  SUBTYPE OF (Property_definition_representation);
  SELF\property_definition_representation.definition : Product_definition_kinematics; 
END_ENTITY;

ENTITY Kinematic_property_topology_representation
  SUBTYPE OF (Kinematic_property_definition_representation);
  SELF\property_definition_representation.used_representation : kinematic_topology_representation_select; 
  base : kinematic_link;
WHERE
  WR1: SELF\property_definition_representation.used_representation IN using_representations(base);
END_ENTITY;

ENTITY Kinematic_topology_structure
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF Kinematic_joint; 
WHERE
  WR1: SIZEOF (QUERY (item <* items | 'FOUNDATION_REPRESENTATION_ARM.ORIENTED_EDGE' in TYPEOF(item))) = 0;
END_ENTITY;
(* WR1: None of the items shall be an oriented_edge *)

ENTITY Kinematic_topology_substructure
  SUBTYPE OF (Kinematic_topology_structure);
  parent : Kinematic_topology_structure;
WHERE
  WR1: SELF\Representation.context_of_items :=: parent\Representation.context_of_items;
  WR2: SELF\Representation.items <= parent\Representation.items;
END_ENTITY;
(* WR1: A kinematic_topology_substructure shall have the same context as the parent *)  
(* WR2: The items of a kinematic_topology_substructure shall also be items of the parent *)

ENTITY Kinematic_topology_directed_structure
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF Oriented_joint; 
  parent : Kinematic_topology_structure;
WHERE
  WR1: context_of_items :=: parent.context_of_items;
  WR2: get_kinematic_joints_from_oriented_joints(items) <= parent.items;
END_ENTITY;
(* WR1: A kinematic_topology_substructure shall have the same context as the parent *)  

ENTITY Kinematic_topology_tree_structure
  SUBTYPE OF (Kinematic_topology_directed_structure);
END_ENTITY;

ENTITY Kinematic_topology_network_structure
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET[1:?] OF Kinematic_loop; 
  parent : kinematic_topology_structure;
WHERE
  WR1: context_of_items :=: parent.context_of_items;
  WR2: get_kinematic_joints_from_kinematic_loops(items) <= parent.items;
END_ENTITY;

ENTITY Kinematic_joint 
  SUBTYPE OF (Edge); 
  SELF\edge.edge_start : Kinematic_link;
  SELF\edge.edge_end : Kinematic_link;
UNIQUE
  UR1: edge_start, edge_end; 
WHERE
  WR1: edge_start :<>: edge_end;
END_ENTITY;
(* WR1: Edge_start and edge_end shall be different instances. *)
(* UR1: There shall be at most one kinematic_joint for any two kinematic_links *)

ENTITY Kinematic_link
  SUBTYPE OF (Vertex); 
END_ENTITY;

ENTITY Kinematic_loop
  SUBTYPE OF (Edge_loop);
  SELF\path.edge_list : LIST [1:?] OF UNIQUE oriented_joint; 
END_ENTITY;

ENTITY Oriented_joint
  SUBTYPE OF (Oriented_edge);
  SELF\Oriented_edge.edge_definition : Kinematic_joint;
END_ENTITY;

FUNCTION get_kinematic_joints_from_oriented_joints(ors : SET OF Oriented_joint) : SET OF Kinematic_joint;
  LOCAL
    result : SET OF Kinematic_joint := [];
  END_LOCAL;
  IF SIZEOF(ors) > 0 THEN
    REPEAT i := 1 TO HIINDEX(ors);
      result := result + ors[i].edge_definition;
    END_REPEAT;
  END_IF;
  RETURN (result);
END_FUNCTION;

FUNCTION get_kinematic_joints_from_kinematic_loops(kls : SET OF Kinematic_loop) : SET OF Kinematic_joint;
  LOCAL
    result : SET OF Oriented_joint := [];
  END_LOCAL;
  IF SIZEOF(kls) > 0 THEN
    REPEAT i := 1 TO HIINDEX(kls);
      result := result + kls[i].edge_list;
    END_REPEAT;
  END_IF;
  RETURN (get_kinematic_joints_from_oriented_joints(result));
END_FUNCTION;

SUBTYPE_CONSTRAINT kts_representation_subtypes FOR Representation;
  ONEOF (
  Kinematic_topology_structure,
  Kinematic_topology_directed_structure,
  Kinematic_topology_network_structure
  );
END_SUBTYPE_CONSTRAINT; 

END_SCHEMA;
(*
	ISO TC184/SC4/WG12 N5413 - ISO/TS 10303-1008 Layer assignment - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N4750
*) 

SCHEMA Layer_assignment_arm; 

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006
 
USE FROM Group_arm;	-- ISO/TS 10303-1113
	
  TYPE structuring_method_select = EXTENSIBLE SELECT
    (Group, 
     Layer);
  END_TYPE; 

  ENTITY Layer;
    id               : STRING;
    description      : STRING;
    layered_elements : SET[1:?] OF Representation_item;
  END_ENTITY;

  ENTITY Structuring_method_hierarchy;
    relating : structuring_method_select;
    related  : Group;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7762 - ISO/TS 10303-1693 Layered 2d shape - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6420
*)

SCHEMA Layered_2d_shape_arm;

	USE FROM Constructive_solid_geometry_2d_arm;	-- ISO/TS 10303-1731
	USE FROM Wireframe_2d_arm; 	-- ISO/TS 10303-1347
	USE FROM Shape_feature_arm;	-- ISO/TS 10303-xxxx

  ENTITY Planar_projected_shape_model
    SUBTYPE OF (Planar_shape_model);
    WHERE
      WR1 : NOT EXISTS(SELF\Representation.name);
  END_ENTITY;

  ENTITY Planar_shape_model
    ABSTRACT SUPERTYPE OF(Planar_projected_shape_model) 
    SUBTYPE OF (Geometric_model);
    WHERE
      WR1 : SELF\Geometric_model.context_of_items.dimension_count = 2;
  END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7915 - ISO/TS 10303-1814 - Machining features - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7352
*)

SCHEMA Machining_features_arm;
         
USE FROM Elemental_geometric_shape_arm; -- ISO/TS 10303-1004
USE FROM Feature_and_connection_zone_arm; 
USE FROM Measure_representation_arm;
USE FROM Specification_document_arm;
USE FROM Value_with_unit_arm;

TYPE angle_or_directed_taper = SELECT( Angle_taper, Directed_taper);
END_TYPE;

TYPE compound_feature_select = SELECT (
  Machining_feature,
  Transition_feature);
END_TYPE;

TYPE end_type_select = SELECT(Complete_circular_path_feature_component, General_path_feature_component);
END_TYPE;

TYPE hole_bottom_condition_select = SELECT(Blind_bottom_condition, Through_bottom_condition);
END_TYPE;

TYPE manufacturing_group_select = SELECT(Manufacturing_feature, Manufacturing_feature_group);
END_TYPE;

TYPE pocket_bottom_condition_select = SELECT (
  Pocket_bottom_condition,
  Through_pocket_bottom_condition);
END_TYPE;

TYPE profile_select = SELECT(Profile_floor, Through_profile_floor);
END_TYPE;

TYPE replicate_base_select = SELECT(Machining_feature, Replicate_feature);
END_TYPE;

TYPE taper_select = SELECT( Angle_taper, Diameter_taper, Directed_taper);
END_TYPE;

TYPE volume_select = SELECT(Protrusion, Boss);
END_TYPE;

ENTITY Angle_taper;
  angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Bevel_gear
  ABSTRACT SUPERTYPE OF (ONEOF (Helical_bevel_gear, Straight_bevel_gear))
  SUBTYPE OF (Defined_gear);
  tip_angle : Numerical_item_with_unit;
  root_angle : Numerical_item_with_unit;
END_ENTITY; 

ENTITY Blind_bottom_condition
  ABSTRACT SUPERTYPE OF (ONEOF(
    Conical_hole_bottom,
    Flat_hole_bottom,
    Flat_with_radius_hole_bottom,
    Flat_with_taper_hole_bottom,
    Spherical_hole_bottom));
  start_or_end : BOOLEAN;
END_ENTITY;

ENTITY Boss
  ABSTRACT SUPERTYPE OF (ONEOF (
    Circular_boss,
    General_boss,
    Rectangular_boss))
  SUBTYPE OF (Multi_axis_feature);
  boss_height : Linear_path_feature_component;
  fillet_radius : OPTIONAL Numerical_item_with_unit;
  top_condition : Boss_top_condition;
END_ENTITY;  
  
ENTITY Boss_top_condition
  ABSTRACT SUPERTYPE OF (ONEOF (General_top_condition, Planar_top_condition));
  top_radius : OPTIONAL Numerical_item_with_unit;
  start_or_end : BOOLEAN;
END_ENTITY;

ENTITY Catalogue_gear
  SUBTYPE OF (Gear);
  documentation : Specification_definition;
END_ENTITY;

ENTITY Catalogue_knurl
  SUBTYPE OF (Knurl);
  documentation : Specification_definition;
END_ENTITY;

ENTITY Catalogue_marking
  SUBTYPE OF (Marking_feature);
  documentation : Specification_definition;
END_ENTITY; 

ENTITY Catalogue_thread
  SUBTYPE OF (Thread);
  documentation : Specification_definition;
  major_diameter : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY Chamfer
  SUBTYPE OF (Transition_feature);
  chamfer_face : Face_shape_element;
  first_parameter : First_chamfer_offset;
  second_parameter : Second_chamfer_parameter;
END_ENTITY;

ENTITY Chamfer_angle
  SUBTYPE OF (Second_chamfer_parameter);
  angle_amount : Numerical_item_with_unit;
END_ENTITY;
  
ENTITY Circular_boss
  SUBTYPE OF (Boss);
  circular_profile : Circular_closed_profile;
  change_in_diameter : OPTIONAL taper_select;
END_ENTITY;

ENTITY Circular_closed_profile
  SUBTYPE OF (Closed_profile);
  diameter : Numerical_item_with_unit;
END_ENTITY;  

ENTITY Circular_closed_shape_profile
  SUBTYPE OF (Shape_profile);
  closed_boundary : Circular_closed_profile;
END_ENTITY; 

ENTITY Circular_cutout
  SUBTYPE OF (Cutout_feature);
  circular_boundary : Circular_closed_profile;
END_ENTITY;  

ENTITY Circular_offset_pattern;
  index_number : INTEGER;
  angular_offset : Numerical_item_with_unit;
INVERSE
  relocated_base_feature_for : SET [1:?] OF Circular_pattern FOR relocated_base_feature;
END_ENTITY;  

ENTITY Circular_omit_pattern;
  omit_index : INTEGER;
INVERSE
  missing_base_feature_for : SET [1:?] OF Circular_pattern FOR missing_base_feature;
END_ENTITY;    

ENTITY Circular_path_feature_component
  ABSTRACT SUPERTYPE OF (ONEOF (Complete_circular_path_feature_component, Partial_circular_path_feature_component))
  SUBTYPE OF (Path_feature_component);
  radius : length_measure;
END_ENTITY;  

ENTITY Circular_pattern
  SUBTYPE OF (Replicate_feature); 
  relocated_base_feature : SET[0:?] of Circular_offset_pattern;
  missing_base_feature : SET[0:?] of Circular_omit_pattern;
  base_feature_rotation : Numerical_item_with_unit;
  number_of_features : INTEGER;
  base_feature_diameter : OPTIONAL Numerical_item_with_unit;
  angular_spacing : Numerical_item_with_unit;
END_ENTITY; 

ENTITY Closed_profile
  ABSTRACT SUPERTYPE OF ( ONEOF( 
    Circular_closed_profile, 
    General_closed_profile, 
    Ngon_profile,
    Rectangular_closed_profile))
  SUBTYPE OF (Profile);
END_ENTITY;  

ENTITY Closed_slot
  SUBTYPE OF (Slot);
  end_condition : Loop_slot_end_type;
  cource_of_travel : end_type_select;  
END_ENTITY; 

ENTITY Compound_feature
  SUBTYPE OF (Machining_feature);
  element : SET[2:?] OF Compound_feature_element;
END_ENTITY;  

ENTITY Compound_feature_element;
  element : compound_feature_select;
END_ENTITY;  

ENTITY Compound_feature_relationship;
  predecssor : Compound_feature_element;
  successor : Compound_feature_element;
END_ENTITY; 

ENTITY Conical_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  tip_angle : Numerical_item_with_unit;
  tip_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Constant_radius_fillet
  SUBTYPE OF (Fillet);
  first_face_offset : OPTIONAL Numerical_item_with_unit;
  second_face_offset : OPTIONAL Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY; 

ENTITY Constant_radius_edge_round
  SUBTYPE OF (Edge_round);
  first_face_offset : OPTIONAL Numerical_item_with_unit;
  second_face_offset : OPTIONAL Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Complete_circular_path_feature_component
  SUBTYPE OF (Circular_path_feature_component);
END_ENTITY; 

ENTITY Countersunk_hole
  SUBTYPE OF (Hole);
  constant_diameter_hole : Round_hole;
  tapered_hole : Round_hole;
END_ENTITY;  

ENTITY Counterbore_hole
  SUBTYPE OF (Hole);
  smaller_hole : Round_hole;
  larger_hole : Round_hole;
END_ENTITY;  

ENTITY Cutout_feature
  ABSTRACT SUPERTYPE OF (ONEOF( Circular_cutout, General_cutout))
  SUBTYPE OF (Pocket);
  SELF\Pocket.bottom_condition : Through_pocket_bottom_condition;
END_ENTITY;  

ENTITY Defined_gear
  ABSTRACT SUPERTYPE OF (ONEOF (Bevel_gear, Helical_gear, Spur_gear))
  SUBTYPE OF (Gear);
END_ENTITY;

ENTITY Defined_marking
  SUBTYPE OF (Marking_feature);
  font_name : OPTIONAL text;
  special_instruction : OPTIONAL text;
  character_spacing : OPTIONAL Numerical_item_with_unit;
  character_height : OPTIONAL Numerical_item_with_unit;
END_ENTITY;

ENTITY Defined_thread
  SUBTYPE OF (Thread);
  crest : OPTIONAL Numerical_item_with_unit;
  minor_diameter : OPTIONAL Numerical_item_with_unit;
  pitch_diameter : OPTIONAL Numerical_item_with_unit;
  major_diameter : Numerical_item_with_unit;
END_ENTITY;  

ENTITY Diagonal_knurl
  SUBTYPE OF (Turned_knurl);
  helix_hand : text;
  helix_angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Diameter_taper;
  final_diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Diamond_knurl
  SUBTYPE OF (Turned_knurl);
  helix_angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Direction_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;  

ENTITY Directed_taper;
  direction : Direction_element;
  angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Edge_round
  SUBTYPE OF (Transition_feature);
  edge_round_face : Face_shape_element;
  first_face_shape : Face_shape_element;
  second_face_shape : Face_shape_element;
END_ENTITY;

ENTITY Face_shape_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;

ENTITY Face_shape_element_relationship
  SUBTYPE OF (Shape_element_relationship);
  SELF\Shape_element_relationship.relating : Face_shape_element;
  SELF\Shape_element_relationship.related : Face_shape_element;
END_ENTITY;   

ENTITY Fillet
  SUBTYPE OF (Transition_feature);
  fillet_face : Face_shape_element;
  first_face_shape : Face_shape_element;
  second_face_shape : Face_shape_element;
END_ENTITY; 

ENTITY First_chamfer_offset;
  face_shape : Face_shape_element;
  offset_amount : Numerical_item_with_unit;
END_ENTITY;

ENTITY Flat_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
END_ENTITY;

ENTITY Flat_slot_end_type
  SUBTYPE OF (Slot_end_type);
  first_radius : Numerical_item_with_unit;
  second_radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Flat_with_radius_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  corner_radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Flat_with_taper_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  taper_diameter : Numerical_item_with_unit;
  final_diameter : Numerical_item_with_unit;
END_ENTITY;

ENTITY Gear
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_gear, Defined_gear))
  SUBTYPE OF (Machining_feature);
  nominal_tooth_depth : Numerical_item_with_unit;
  reference_preassure_angle : Numerical_item_with_unit;
  profile_shift : Numerical_item_with_unit;
  number_of_teeth : Numerical_item_with_unit;
  face_width : Numerical_item_with_unit;
  tip_diameter : Numerical_item_with_unit;
  normal_attribute : Numerical_item_with_unit;
  applied_shape : Definitional_shape_element;
  internal_or_external_gear : BOOLEAN;
  module_or_diametrical_pitch : BOOLEAN;
  root_fillet_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY General_boss
  SUBTYPE OF (Boss);
  enclosed_boundary : Closed_profile;
  change_in_boundary : OPTIONAL angle_or_directed_taper;
END_ENTITY;

ENTITY General_closed_profile
  SUBTYPE OF (Closed_profile);
  closed_profile_shape : Path_element;
END_ENTITY;  

ENTITY General_cutout
  SUBTYPE OF (Cutout_feature);
  boundary : Profile;
END_ENTITY;  

ENTITY General_open_profile
  SUBTYPE OF (Open_profile);
  enclosed_boundary : Path_element;
END_ENTITY;  

ENTITY General_outside_profile
  SUBTYPE OF (Profile_feature);
  boundary : Profile;
END_ENTITY;  

ENTITY General_pattern
  SUBTYPE OF (Replicate_feature); 
  feature_placement : SET[1:?] OF Axis_placement;
END_ENTITY; 

ENTITY General_path_feature_component
  SUBTYPE OF (Path_feature_component);
  sweep_path : Path_element;
END_ENTITY;  

ENTITY General_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  boundary : Profile;
END_ENTITY;

ENTITY General_pocket_bottom_condition
  SUBTYPE OF (Pocket_bottom_condition);
  floor : Face_shape_element;
  floor_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY General_profile_floor
  SUBTYPE OF (Profile_floor);
  floor : Face_shape_element;
END_ENTITY;

ENTITY General_removal_volume
  SUBTYPE OF (Multi_axis_feature);
  removal_volume : SET[1:?] OF Definitional_shape_element;
END_ENTITY; 

ENTITY General_revolution
  SUBTYPE OF (Revolved_feature);
  outer_edge_shape : General_open_profile;
END_ENTITY;

ENTITY General_rib_top_floor
  SUBTYPE OF (Rib_top_floor);
  rib_top_face : SET[1:?] OF Face_shape_element;
END_ENTITY;  

ENTITY General_shape_profile
  SUBTYPE OF (Shape_profile);
  profile_boundary : Profile;
END_ENTITY; 
  
ENTITY General_top_condition
  SUBTYPE OF (Boss_top_condition);
  top_face : Face_shape_element;
END_ENTITY;

ENTITY Groove
  SUBTYPE OF (Revolved_feature);
  sweep : Open_profile;
END_ENTITY;

ENTITY Helical_bevel_gear
  SUBTYPE OF (Bevel_gear);
  reference_helix_agle : Numerical_item_with_unit;
  left_or_right_hand_tooth : BOOLEAN;
END_ENTITY; 

ENTITY Helical_gear
  SUBTYPE OF (Defined_gear);
  left_or_right_hand_tooth : BOOLEAN;
  reference_helix_angle : Numerical_item_with_unit;
END_ENTITY;

ENTITY Hole
  ABSTRACT SUPERTYPE OF (ONEOF(
    Counterbore_hole,
    Countersunk_hole,
    Round_hole)) 
  SUBTYPE OF (Multi_axis_feature);
END_ENTITY;

ENTITY Knurl
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_knurl, Turned_knurl))
  SUBTYPE OF (Machining_feature);
  partial_profile : OPTIONAL Partial_area_definition;
  applied_shape : Definitional_shape_element;
END_ENTITY; 

ENTITY Linear_path_feature_component
  SUBTYPE OF (Path_feature_component);
  distance : length_measure;
  direction : Direction_element;
END_ENTITY;  

ENTITY Linear_profile
  SUBTYPE OF (Open_profile);
  profile_length : Numerical_item_with_unit;
END_ENTITY;  

ENTITY Location_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY;  

ENTITY Loop_slot_end_type;
END_ENTITY;

ENTITY Instanced_manufacturing_feature
  SUBTYPE OF (Instanced_feature);
  definition : Manufacturing_feature;
END_ENTITY;

ENTITY Machining_feature
  ABSTRACT SUPERTYPE OF (ONEOF (
    Compound_feature,
    Gear,
    Knurl,
    Marking_feature,
    Multi_axis_feature,  
    Outer_round,
    Revolved_feature,
    Spherical_cap,
    Thread))
  SUBTYPE OF (Manufacturing_feature);
  placement : Axis_placement_3d;
END_ENTITY;

ENTITY Path_feature_component
  ABSTRACT SUPERTYPE OF (ONEOF (Circular_path_feature_component, General_path_feature_component, Linear_path_feature_component))
  SUBTYPE OF (Shape_element);
  placement : Axis_placement;
END_ENTITY; 

ENTITY Manufacturing_feature
  ABSTRACT SUPERTYPE OF (ONEOF (Machining_feature, Replicate_feature, Transition_feature))
  SUBTYPE OF (Shape_feature_definition);
END_ENTITY;

ENTITY Manufacturing_feature_group;
  group_name : label;
  group_description : text;
  feature_groups : SET[1:?] OF manufacturing_group_select;
END_ENTITY;
  
ENTITY Marking_feature
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_marking, Defined_marking))
  SUBTYPE OF (Machining_feature);
  text : text;
  applied_to_shape : Shape_element;
END_ENTITY;
  
ENTITY Multi_axis_feature
  SUPERTYPE OF ( ONEOF(
    Boss,
    General_removal_volume,
    Hole,
    Planar_face,
    Pocket,
    Profile_feature,
    Protrusion,
    Rib_top,
    Rounded_end,
    Slot,
    Step))
  SUBTYPE OF (Machining_feature);
  maximum_feature_limit : OPTIONAL Planar_element;
END_ENTITY;  

ENTITY Ngon_profile
  SUBTYPE OF (Closed_profile);
  diameter : Numerical_item_with_unit;
  number_of_sides : Numerical_item_with_unit;
  corner_radius : OPTIONAL Numerical_item_with_unit;
  circumscribed_or_across_flat : BOOLEAN;  
END_ENTITY;  

ENTITY Open_profile
  ABSTRACT SUPERTYPE OF (ONEOF ( 
    General_open_profile,
    Linear_profile,
    Partial_circular_profile,
    Rounded_u_profile,
    Square_u_profile, 
    Tee_profile,
    Vee_profile))
  SUBTYPE OF (Profile);
  profile_limit : OPTIONAL Planar_element;
END_ENTITY;  

ENTITY Open_slot
  SUBTYPE OF (Slot);
  course_of_travel : Path_feature_component;
  end_conditions : SET[2:2] OF Slot_end_type; 
END_ENTITY;  

ENTITY Open_slot_end_type
  SUBTYPE OF (Slot_end_type);
END_ENTITY;

ENTITY Outer_diameter
  SUBTYPE OF (Outer_round);
  feature_length : Numerical_item_with_unit;
  diameter : Numerical_item_with_unit;
  reduced_size : taper_select;
END_ENTITY;
  
ENTITY Outer_diameter_to_shoulder
  SUBTYPE OF (Outer_round);
  feature_length : Numerical_item_with_unit;
  diameter : Numerical_item_with_unit;
  v_shape_boundary : Vee_profile;
END_ENTITY;
 
ENTITY Outer_round
  ABSTRACT SUPERTYPE OF (ONEOF (Outer_diameter, Outer_diameter_to_shoulder))
  SUBTYPE OF (Machining_feature);
END_ENTITY;

ENTITY Partial_area_definition;
  maximum_length : OPTIONAL Numerical_item_with_unit;
  effective_length : Numerical_item_with_unit;
  placement : Axis_placement;
END_ENTITY; 

ENTITY Partial_circular_path_feature_component
  SUBTYPE OF (Circular_path_feature_component);
  sweep_angle : length_measure;
END_ENTITY; 

ENTITY Partial_circular_profile
  SUBTYPE OF (Open_profile);
  sweep_angle : Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY; 

ENTITY Partial_circular_shape_profile
  SUBTYPE OF (Shape_profile);
  open_boundary : Partial_circular_profile;
END_ENTITY; 

ENTITY Path_element
  SUBTYPE OF (Definitional_shape_element);
END_ENTITY; 

ENTITY Planar_element
  SUBTYPE OF (Definitional_shape_element);
  normal : Direction_element;
  location : Location_element;
END_ENTITY;   

ENTITY Planar_face
  SUBTYPE OF (Multi_axis_feature);
  removal_boundary : Linear_profile;
  course_of_travel : Linear_path_feature_component;
  face_boundary : OPTIONAL Closed_profile;
  removal_direction : Direction_element;
  volume_not_removed : SET[0:?] OF volume_select;
  removal_depth : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY Planar_pocket_bottom_condition
  SUBTYPE OF (Pocket_bottom_condition);
  floor_normal : Direction_element;
  floor_location : Location_element;
  floor_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY Planar_profile_floor
  SUBTYPE OF (Profile_floor);
  floor : Planar_element;
END_ENTITY; 

ENTITY Planar_rib_top_floor
  SUBTYPE OF (Rib_top_floor);
  floor_face : Planar_element;
  boundary : Closed_profile;
END_ENTITY; 
  
ENTITY Planar_top_condition
  SUBTYPE OF (Boss_top_condition);
  top_normal : Direction_element;
  top_location : Location_element;
END_ENTITY;

ENTITY Pocket
  ABSTRACT SUPERTYPE OF (ONEOF(
    Cutout_feature,
    General_pocket,
    Recess,
    Rectangular_closed_pocket,
    Rectangular_open_pocket))
  SUBTYPE OF (Multi_axis_feature);
  base_radius : Numerical_item_with_unit;
  change_in_boundardy : OPTIONAL LIST[1:?] OF angle_or_directed_taper;
  bottom_condition : pocket_bottom_condition_select;
  pocket_depth : Linear_path_feature_component;
END_ENTITY;  

ENTITY Pocket_bottom_condition
  ABSTRACT SUPERTYPE OF (ONEOF (General_pocket_bottom_condition, Planar_pocket_bottom_condition));
  start_or_end : BOOLEAN;
END_ENTITY;

ENTITY Profile
  ABSTRACT SUPERTYPE OF ( ONEOF( Closed_profile, Open_profile));
END_ENTITY;

ENTITY Profile_feature
  ABSTRACT SUPERTYPE OF (ONEOF( General_outside_profile, Shape_profile))
  SUBTYPE OF (Multi_axis_feature);
  profile_swept_shape : Linear_path_feature_component;
END_ENTITY;

ENTITY Profile_floor
  ABSTRACT SUPERTYPE OF (ONEOF(General_profile_floor, Planar_profile_floor));
  floor_radius : OPTIONAL Numerical_item_with_unit;
  start_or_end : BOOLEAN;
END_ENTITY;  

ENTITY Protrusion
  SUBTYPE OF (Multi_axis_feature);
  shape_volume : SET[1:?] OF Definitional_shape_element;
END_ENTITY; 

ENTITY Radiused_slot_end_type
  SUBTYPE OF (Slot_end_type);
END_ENTITY;

ENTITY Recess
  SUBTYPE OF (Pocket);
  SELF\Pocket.bottom_condition : Pocket_bottom_condition;
  volume_not_removed : SET[0:?] OF volume_select;
  fillet_boundary : Profile;
END_ENTITY;  
  
ENTITY Rectangular_boss
  SUBTYPE OF (Boss);
  rectangular_profile : Rectangular_closed_profile;
  change_in_boundary : OPTIONAL angle_or_directed_taper;
END_ENTITY;

ENTITY Rectangular_closed_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  closed_boundary : Rectangular_closed_profile;
END_ENTITY;  

ENTITY Rectangular_closed_profile
  SUBTYPE OF (Closed_profile);
  profile_width : Numerical_item_with_unit;
  profile_length : Numerical_item_with_unit;
  corner_radius : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY Rectangular_closed_shape_profile
  SUBTYPE OF (Shape_profile);
  closed_boundary : Rectangular_closed_profile;
END_ENTITY;  

ENTITY Rectangular_offset_pattern;
  offset_direction : Direction_element;
  offset_distance : Numerical_item_with_unit;
  column_index : INTEGER;
  row_index : INTEGER;
INVERSE
  relocated_base_feature_for : SET [1:?] OF Rectangular_pattern FOR relocated_base_feature;
END_ENTITY;   

ENTITY Rectangular_omit_pattern;
  row_index : INTEGER;
  column_index : INTEGER;
INVERSE
  missing_base_feature_for : SET [1:?] OF Rectangular_pattern FOR missing_base_feature;
END_ENTITY;  

ENTITY Rectangular_open_pocket
  SUBTYPE OF (Pocket);
  volume_not_removed : SET[0:?] OF volume_select;
  open_boundary : Square_u_profile;
END_ENTITY;  

ENTITY Rectangular_open_shape_profile
  SUBTYPE OF (Shape_profile);
  open_boundary : Square_u_profile;
END_ENTITY; 

ENTITY Rectangular_pattern
  SUBTYPE OF (Replicate_feature);
  relocated_base_feature : SET[0:?] of Rectangular_offset_pattern;
  missing_base_feature : SET[0:?] of Rectangular_omit_pattern;
  column_layout_direction : Direction_element;
  row_spacing : Numerical_item_with_unit;
  rows : INTEGER;
  row_layout_direction : Direction_element;
  columns : INTEGER;
  column_spacing : Numerical_item_with_unit;
END_ENTITY;  

ENTITY Replicate_base;
  base_feature : replicate_base_select;
END_ENTITY;

ENTITY Replicate_feature
  ABSTRACT SUPERTYPE OF (ONEOF (
    Circular_pattern,
    General_pattern,
    Rectangular_pattern))
  SUBTYPE OF (Manufacturing_feature);
  placement : Axis_placement;
  replicate_feature_base : Replicate_base;
END_ENTITY;    

ENTITY Revolved_feature
  ABSTRACT SUPERTYPE OF (ONEOF(
    General_revolution,
    Groove,
    Revolved_flat,
    Revolved_round))
  SUBTYPE OF (Machining_feature);
  radius : Numerical_item_with_unit;
  material_side : Direction_element;
END_ENTITY;  

ENTITY Revolved_flat
  SUBTYPE OF (Revolved_feature);
  flat_edge_shape : Linear_profile;
END_ENTITY; 

ENTITY Revolved_round
  SUBTYPE OF (Revolved_feature);
  rounded_edge_shape : Partial_circular_profile;
END_ENTITY; 

ENTITY Rib_top
  SUBTYPE OF (Multi_axis_feature);
  removal_direction : Direction;
  floor_condition : Rib_top_floor;
END_ENTITY;  

ENTITY Rib_top_floor
  ABSTRACT SUPERTYPE OF (ONEOF ( General_rib_top_floor, Planar_rib_top_floor));
END_ENTITY;

ENTITY Round_hole
  SUBTYPE OF (Hole);
  hole_depth : Linear_path_feature_component;
  diameter : Circular_closed_profile;
  change_in_diameter : OPTIONAL taper_select;
  bottom_condition : hole_bottom_condition_select;
END_ENTITY;  

ENTITY Rounded_end
  SUBTYPE OF (Multi_axis_feature);
  partial_circular_boundary : Partial_circular_profile;
  course_of_travel : Linear_path_feature_component;
END_ENTITY; 

ENTITY Rounded_u_profile
  SUBTYPE OF (Open_profile);
  width : Numerical_item_with_unit;
  depth : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY Second_chamfer_offset
  SUBTYPE OF (Second_chamfer_parameter);
  offset_amount : Numerical_item_with_unit;
END_ENTITY;

ENTITY Second_chamfer_parameter
  SUPERTYPE OF (ONEOF( Chamfer_angle, Second_chamfer_offset));
  second_face : Face_shape_element;
END_ENTITY;

ENTITY Shape_profile
  ABSTRACT SUPERTYPE OF (ONEOF( 
    Circular_closed_shape_profile,
    General_shape_profile,
    Partial_circular_shape_profile,
    Rectangular_closed_shape_profile,
    Rectangular_open_shape_profile))
  SUBTYPE OF (Profile_feature);
  floor_condition : profile_select;
  removal_direction : Direction_element;
END_ENTITY;  
  
ENTITY Slot
  ABSTRACT SUPERTYPE OF (ONEOF (Closed_slot, Open_slot))
  SUBTYPE OF (Multi_axis_feature);
END_ENTITY;  

ENTITY Slot_end_type
  ABSTRACT SUPERTYPE OF (ONEOF (
    Flat_slot_end_type, 
    Open_slot_end_type,
    Radiused_slot_end_type, 
    Woodruff_slot_end_type));
  first_or_second : BOOLEAN;
END_ENTITY; 

ENTITY Spherical_cap
  SUBTYPE OF (Machining_feature);
  internal_angle : Numerical_item_with_unit;
  radius : Numerical_item_with_unit;
END_ENTITY; 

ENTITY Spherical_hole_bottom
  SUBTYPE OF (Blind_bottom_condition);
  radius : Numerical_item_with_unit;
END_ENTITY;

ENTITY Spur_gear
  SUBTYPE OF (Defined_gear);
END_ENTITY;

ENTITY Square_u_profile
  SUBTYPE OF (Open_profile);
  first_angle : Numerical_item_with_unit;
  second_angle : Numerical_item_with_unit;
  first_radius : OPTIONAL Numerical_item_with_unit;
  second_radius : OPTIONAL Numerical_item_with_unit;
  depth : Numerical_item_with_unit;
  width : OPTIONAL Numerical_item_with_unit;
END_ENTITY;  

ENTITY Step
  SUBTYPE OF (Multi_axis_feature);
  removal_boundary : Vee_profile;
  course_of_travel : Linear_path_feature_component;
  volume_not_removed : SET[0:?] OF Volume_select;
END_ENTITY;  

ENTITY Straight_bevel_gear
  SUBTYPE OF (Bevel_gear);
END_ENTITY;

ENTITY Straight_knurl
  SUBTYPE OF (Turned_knurl);
END_ENTITY;

ENTITY Tee_profile
  SUBTYPE OF (Open_profile);
  first_angle : Numerical_item_with_unit;
  second_angle : Numerical_item_with_unit;
  first_offset : Numerical_item_with_unit;
  second_offset : Numerical_item_with_unit;
  depth : Numerical_item_with_unit;
  radius : OPTIONAL Numerical_item_with_unit;
  width : Numerical_item_with_unit;
  cross_bar_width : Numerical_item_with_unit;
  cross_bar_depth : Numerical_item_with_unit;
END_ENTITY; 

ENTITY Thread
  ABSTRACT SUPERTYPE OF (ONEOF (Catalogue_thread, Defined_thread)) 
  SUBTYPE OF (Machining_feature);
  partial_profile : Partial_area_definition;
  runout : OPTIONAL Thread_runout;
  fit_class : text;
  form : text;
  number_of_threads : OPTIONAL Numerical_item_with_unit;
  thread_hand : text;
  inner_or_outer_thread : BOOLEAN;
  qualifier : text;
  nominal_size : OPTIONAL Numerical_item_with_unit;
  applied_shape : Definitional_shape_element;
  fit_class_2 : OPTIONAL text;
END_ENTITY;  

ENTITY Thread_runout;
  length_of_runout : Numerical_item_with_unit;
  pitch_or_dimension : BOOLEAN;
  included_or_extra : BOOLEAN;
END_ENTITY;  

ENTITY Through_bottom_condition;
END_ENTITY;

ENTITY Through_pocket_bottom_condition;
END_ENTITY;

ENTITY Through_profile_floor;
END_ENTITY; 

ENTITY Transition_feature
  SUPERTYPE OF ( ONEOF(
    Chamfer,
    Edge_round,
    Fillet))
  SUBTYPE OF (Manufacturing_feature);
END_ENTITY;

ENTITY Turned_knurl
  ABSTRACT SUPERTYPE OF (ONEOF (Diagonal_knurl, Diamond_knurl, Straight_knurl))
  SUBTYPE OF (Knurl);
  nominal_diameter : Numerical_item_with_unit;
  diametrical_pitch : Numerical_item_with_unit;
  root_fillet : OPTIONAL Numerical_item_with_unit;
  number_of_teeth : OPTIONAL Numerical_item_with_unit;
  tooth_depth : OPTIONAL Numerical_item_with_unit;
  major_diameter : Numerical_item_with_unit;
END_ENTITY;   
  
ENTITY Vee_profile
  SUBTYPE OF (Open_profile);
  profile_radius : OPTIONAL Numerical_item_with_unit;
  profile_angle : Numerical_item_with_unit;
  tilt_angle : Numerical_item_with_unit;
  first_length : OPTIONAL Numerical_item_with_unit;
  second_length : OPTIONAL Numerical_item_with_unit;
END_ENTITY;    

ENTITY Woodruff_slot_end_type
  SUBTYPE OF (Slot_end_type);
  radius : Numerical_item_with_unit;
END_ENTITY;
  
SUBTYPE_CONSTRAINT mf_shape_element_subtypes FOR Definitional_shape_element;
  ONEOF (Path_element, Planar_element, Direction_element, Location_element, Face_shape_element);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7711 - ISO/TS 10303-1288 Management resource information - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4287
*) 


SCHEMA Management_resource_information_arm;

USE FROM Alias_identification_arm;    -- ISO/TS 10303-1025

USE FROM Approval_arm;    -- ISO/TS 10303-1012

USE FROM Certification_arm;    -- ISO/TS 10303-1044

USE FROM Contract_arm;    -- ISO/TS 10303-1062

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Multi_linguism_arm;    -- ISO/TS 10303-1105

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013

USE FROM Project_arm;    -- ISO/TS 10303-1061

USE FROM Security_classification_arm;    -- ISO/TS 10303-1015


TYPE mri_alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON alias_identification_item WITH 
   (Approval_status, 
    Contract, 
    Organization, 
    Security_classification);
END_TYPE; 

TYPE mri_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH 
   (Certification, 
    Contract);
END_TYPE; 

TYPE mri_date_or_date_time_item = EXTENSIBLE SELECT BASED_ON date_or_date_time_item WITH 
   (Certification, 
    Contract, 
    Organization_or_person_in_organization_assignment, 
    Security_classification_assignment);
END_TYPE; 

TYPE mri_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (Approval_status, 
    Contract, 
    Organization, 
    Security_classification);
END_TYPE; 

TYPE mri_organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_or_person_in_organization_item WITH 
   (Contract, 
    Identification_assignment, 
    Security_classification_assignment);
END_TYPE; 

TYPE mri_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON string_select WITH 
   (Approval, 
    Approval_relationship, 
    Approval_status, 
    Certification, 
    Contract, 
    Date_or_date_time_assignment, 
    Identification_assignment, 
    Organization_relationship, 
    Person_in_organization, 
    Project, 
    Project_assignment, 
    Project_relationship);
END_TYPE; 

END_SCHEMA;  -- Management_resource_information_arm


(*
   ISO TC184/SC4/WG12 N8032 - ISO/TS 10303-1702 Manifold subsurface - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5416
*)

SCHEMA Manifold_subsurface_arm;

USE FROM Manifold_surface_arm;	-- ISO/TS 10303-1509

  TYPE manifold_subsurface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Connected_face_set);
  END_TYPE;

  TYPE open_shell_or_subsurface = SELECT
    (Manifold_surface_shape_representation,
     Manifold_subsurface_model);
  END_TYPE;

  ENTITY Manifold_subsurface_model
    SUBTYPE OF (Geometric_model);
      parent_surface : open_shell_or_subsurface;
    SELF\Representation.items : SET [1:?] OF
        manifold_subsurface_shape_representation_item;
    WHERE
      WR1 : SELF :<>: parent_surface;
      WR2 : SELF\Geometric_model.context_of_items :=: parent_surface\Geometric_model.context_of_items;
  END_ENTITY;

END_SCHEMA;
(*
	ISO TC184/SC4/WG12 N7837 - ISO/TS 10303-1509 Manifold surface - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7196
*)


SCHEMA Manifold_surface_arm;

USE FROM Topologically_bounded_surface_arm; --ISO/TS 10303-1511:2004

  TYPE manifold_surface_shape_representation_item = SELECT (
    Axis_placement_3d,
    Geometric_placement_operation,
    Shell_based_surface_model);
  END_TYPE;
  
  
  
  ENTITY Manifold_surface_shape_representation
    SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF
        manifold_surface_shape_representation_item;
  END_ENTITY;

  
  ENTITY Open_shell
     SUBTYPE OF (Connected_face_set);
  END_ENTITY;
  
  
  ENTITY Shell_based_surface_model
    SUBTYPE OF (Detailed_geometric_model_element);
     boundary : SET[1: ?] OF Connected_face_set;
  END_ENTITY;
  
  

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2798 - ISO/TS 10303-1091 Maths space - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1879
*)

SCHEMA Maths_space_arm;

USE FROM Maths_value_arm;    -- ISO/TS 10303-1092

TYPE maths_value_including_maths_space = EXTENSIBLE SELECT BASED_ON maths_value WITH (Maths_space);
END_TYPE; 

ENTITY Maths_space;
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2801 - ISO/TS 10303-1092 Maths value - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1876
*)

SCHEMA Maths_value_arm;

TYPE maths_atom = SELECT
  (maths_boolean,
  maths_complex,
  maths_integer,
  maths_real);
END_TYPE;

TYPE maths_boolean = BOOLEAN;
END_TYPE;

TYPE maths_integer = INTEGER;
END_TYPE;

TYPE maths_complex = LIST[2:2] OF REAL;
END_TYPE;

TYPE maths_real = REAL;
END_TYPE;

TYPE maths_tuple = LIST[0:?] OF maths_value;
END_TYPE;

TYPE maths_value = EXTENSIBLE SELECT
  (maths_atom,
  maths_tuple);
END_TYPE;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7918 - ISO/CD-TS - 10303-1815 Mating structure - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7355
*)

SCHEMA Mating_structure_arm;

USE FROM Item_definition_structure_arm;
USE FROM Assembly_technology_arm;

TYPE mating_type = EXTENSIBLE ENUMERATION OF (
  bolted_joint,
  brazing,
  clasping,
  clinching,
  clipping,
  doweling,
  flanging,
  foam_injection,
  gluing,
  laser_welding,
  press_fit,
  riveting,
  sewing,
  spot_welding,
  stapling,
  welding,
  soldering,
  friction_welding);
END_TYPE;

ENTITY Mated_part_relationship;
  mating_joints : OPTIONAL SET[1:?] OF Assembly_joint;
  mating_material : OPTIONAL SET [1:?] OF Definition_based_product_occurrence;
  mating_types : OPTIONAL SET [1:?] OF mating_type;
  relating : Assembled_part_association;
  related : Assembled_part_association;
WHERE
  WR1: relating.relating_view :=: related.relating_view;
  WR2: SIZEOF(QUERY(mj <* mating_joints | NOT(mj.associated_assembly.described_element :=: relating.relating_view)))= 0;
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2968 - ISO/TS 10303-1118 Measure representation - EXPRESS ARM
*) 


SCHEMA Measure_representation_arm;

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Measure_item
  ABSTRACT SUPERTYPE 
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))>0;
END_ENTITY;

ENTITY Numerical_item_with_global_unit
  SUBTYPE OF (Measure_item);
  value_component : measure_value;
WHERE
  WR1: SIZEOF(QUERY(pvr <* QUERY ( r <* USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS')| 'MEASURE_REPRESENTATION_ARM.PROPERTY_VALUE_REPRESENTATION' IN TYPEOF(r)) | EXISTS(pvr.context_of_items.units) )) > 0;
END_ENTITY;

ENTITY Numerical_item_with_unit
  SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY;

ENTITY Property_value_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY;

END_SCHEMA;  -- Measure_representation_arm
(* 
	ISO TC184/SC4/WG12 N5422 - ISO/TS 10303-1313 Mechanical design geometric presentation - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N4756
*)

SCHEMA Mechanical_design_geometric_presentation_arm;

USE FROM Camera_view_3d_arm; -- ISO/CD-TS 10303-1316

USE FROM Shape_appearance_layers_arm; -- ISO/CD-TS 10303-1009

  ENTITY Mechanical_design_view_area 
    SUBTYPE OF (View_area);
  END_ENTITY;

  ENTITY Mechanical_representation_styled_model  
    SUBTYPE OF (Styled_model);
  END_ENTITY;

END_SCHEMA;  
(*
   ISO TC184/SC4/WG12 N6682 - ISO/TS 10303-1315 Mechanical design presentation representation with draughting - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5425
*)

SCHEMA Mechanical_design_presentation_representation_with_draughting_arm;

USE FROM Associative_draughting_elements_arm; -- ISO/CD-TS 10303-1311

USE FROM Mechanical_design_geometric_presentation_arm; -- ISO/CD-TS 10303-1313

USE FROM Mechanical_design_shaded_presentation_arm; -- ISO/CD-TS 10303-1314

  TYPE mdprwd_draughting_model_element_select = SELECT BASED_ON draughting_model_element_select WITH 
    (Camera_model_d3);
  END_TYPE; 

  TYPE mdprwd_element_select = EXTENSIBLE GENERIC_ENTITY SELECT 
    (Axis_placement,
    Camera_model_d3); 
  END_TYPE;   

  TYPE mechanical_design_and_draughting_relationship_select = EXTENSIBLE GENERIC_ENTITY SELECT ( 
    Draughting_model,
    Geometric_model,
    Mechanical_design_shaded_styled_model, 
    Mechanical_design_presentation_representation_with_draughting,
    Mechanical_representation_styled_model); 
  END_TYPE; 

  ENTITY Mechanical_design_and_draughting_relationship
    SUBTYPE OF(Definitional_representation_relationship); 
      SELF\representation_relationship.rep_1 : mechanical_design_and_draughting_relationship_select; 
      SELF\representation_relationship.rep_2 : mechanical_design_and_draughting_relationship_select; 
    WHERE    
      WR1: NOT('ASSOCIATIVE_DRAUGHTING_ELEMENTS_ARM.'+'DRAUGHTING_MODEL' IN TYPEOF(rep_2)) OR 
        (SIZEOF(['ASSOCIATIVE_DRAUGHTING_ELEMENTS_ARM.'+'DRAUGHTING_MODEL', 
        'ELEMENTAL_GEOMETRIC_SHAPE_ARM.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
      WR2: NOT('MECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_ARM.'+'MECHANICAL_REPRESENTATION_STYLED_MODEL' IN TYPEOF(rep_2)) 
        OR (SIZEOF(['MECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_ARM.'+'MECHANICAL_REPRESENTATION_STYLED_MODEL', 
        'ELEMENTAL_GEOMETRIC_SHAPE_ARM.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
      WR3: NOT('MECHANICAL_DESIGN_SHADED_PRESENTATION_ARM.'+'MECHANICAL_DESIGN_SHADED_STYLED_MODEL' IN TYPEOF(rep_2)) 
        OR (SIZEOF(['MECHANICAL_DESIGN_SHADED_PRESENTATION_ARM.'+'MECHANICAL_DESIGN_SHADED_STYLED_MODEL',
        'ELEMENTAL_GEOMETRIC_SHAPE_ARM.'+'GEOMETRIC_MODEL'] * TYPEOF(rep_1)) = 1);
  END_ENTITY;  

  ENTITY Mechanical_design_presentation_representation_with_draughting
    SUBTYPE OF (Styled_model); 
      SELF\Representation.items : SET [1:?] OF mdprwd_element_select; 
    WHERE 
      WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 3;
  END_ENTITY; 
 
END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N5428 - ISO/TS 10303-1314 Mechanical design shaded presentation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4762
*)

SCHEMA Mechanical_design_shaded_presentation_arm;

USE FROM Camera_view_3d_arm; -- ISO/CD-TS 10303-1316
 
USE FROM Shape_appearance_layers_arm; -- ISO/CD-TS 10303-1009
 
 
  ENTITY Mechanical_design_shaded_presentation_area   
    SUBTYPE OF (View_area);
  END_ENTITY;
 
  ENTITY Mechanical_design_shaded_styled_model  
    SUBTYPE OF (Styled_model);
  END_ENTITY;

  ENTITY Surface_style_rendering 
    SUBTYPE OF (Surface_appearance_element); 
      assigned_colour : Colour;
  END_ENTITY;

  SUBTYPE_CONSTRAINT mdsp_surface_appearance_element_subtypes FOR Surface_appearance_element;         
    ONEOF (Surface_colour,
      Surface_related_curve_appearance,
      Surface_style_rendering);    
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6730 - ISO/CD-TS 10303-1384 Mesh connectivity - EXPRESS ARM
*)

SCHEMA Mesh_connectivity_arm;

USE FROM Mesh_topology_arm;

TYPE property_distribution_select = EXTENSIBLE SELECT;
END_TYPE; 

TYPE mismatched_region_type = EXTENSIBLE ENUMERATION OF
    (abutting,
     overset);
END_TYPE;

ENTITY Listed_real_data;
END_ENTITY; 

ENTITY Matched_mesh_connection
  SUBTYPE OF (Mesh_connectivity);
  SELF\Mesh_connectivity.current : Structured_mesh;
  range       : Indices_range;
  donor       : Structured_mesh;
  donor_range : Indices_range;
  transform   : ARRAY [1:index_count] OF INTEGER;
WHERE
  wr1 : current :<>: donor;
  wr2 : donor.index_count = index_count;
  wr3 : range.nindices = index_count;
  wr4 : donor_range.nindices = index_count;
END_ENTITY;

ENTITY Mesh_connectivity
 ABSTRACT SUPERTYPE OF(ONEOF
    (Matched_mesh_connection,
        Mismatched_mesh_connection));
  id          : identifier;
  name        : label;
  description : text;
  current     : Mesh;
DERIVE
  index_count : INTEGER := current.index_count;
END_ENTITY;


ENTITY Mesh_overset_hole
  SUBTYPE OF (Mismatched_mesh_connection);
END_ENTITY;

ENTITY Mismatched_donor_mesh
 ABSTRACT SUPERTYPE OF(ONEOF (Structured_donor_mesh, Unstructured_donor_mesh));
 donor: Mesh;
INVERSE
  connect : mismatched_mesh_region FOR donor;
END_ENTITY;

ENTITY Mismatched_mesh_connection
ABSTRACT SUPERTYPE OF (ONEOF(Mismatched_mesh_region,
        Mesh_overset_hole))
 SUBTYPE OF (Mesh_connectivity);
  points   : Indices_group;
  gridloc  : Mesh_location;
END_ENTITY;

ENTITY Mismatched_mesh_region
  SUBTYPE OF (Mismatched_mesh_connection);
  donor : Mismatched_donor_mesh;
  kind  : Mismatched_region_type;
WHERE
  wr1 : donor.donor :<>: SELF\Mesh_connectivity.current;
END_ENTITY;

ENTITY Multiple_mesh_block;
  id             : identifier;
  name           : label; 
  description    : text;
  connectivities : LIST OF Mesh_connectivity;
END_ENTITY;

ENTITY Property_distribution_description;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  physical_function : property_distribution_select;
END_ENTITY;

ENTITY Structured_donor_mesh
  SUBTYPE OF (Mismatched_donor_mesh);
  SELF\Mismatched_donor_mesh.donor  : Structured_mesh;
  points : Listed_real_data;
  vsize  : INTEGER;
DERIVE
  index_count : INTEGER := donor.index_count;
END_ENTITY;

ENTITY Unstructured_donor_mesh
  SUBTYPE OF (Mismatched_donor_mesh);
  SELF\Mismatched_donor_mesh.donor : Unstructured_mesh;
  cells       : Indices_group;
  interpolant : Property_distribution_description;
  vsize       : INTEGER;
DERIVE
  index_count : INTEGER := donor.index_count;
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N6733 - ISO/CD-TS 10303-1385 Mesh function - EXPRESS ARM
*)

SCHEMA Mesh_function_arm;

USE FROM Generic_expression_arm;

USE FROM Mesh_topology_arm;

ENTITY Mesh_function;
  mesh : Mesh;
  basis : LIST [0 : ?] OF Mesh_function_basis;
  uniform : BOOLEAN;
  vertex_values : BOOLEAN;
END_ENTITY;

ENTITY Mesh_function_basis;
  cell_topological_dimension : INTEGER;
  value_array_dimension : INTEGER;
  value_array_order : ARRAY [1 : value_array_dimension] OF INTEGER;
END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N6746 - ISO/CD-TS 10303-1386 Mesh topology - EXPRESS ARM
*)

SCHEMA Mesh_topology_arm;

USE FROM Basic_geometric_topology_arm;--  ISO/TS 10303-1323

USE FROM Elemental_topology_arm;--  ISO/TS 10303-1005

USE FROM Finite_elements_arm; --  ISO/CD-TS 10303-1383

USE FROM Maths_space_arm;--  ISO/TS 10303-1091

USE FROM Support_resource_arm;--  ISO/TS 10303-1800

TYPE cell_shape = EXTENSIBLE SELECT 
    (cell_shape_0d,
     cell_shape_1d,
     cell_shape_2d,
     cell_shape_3d);
END_TYPE;

TYPE cell_shape_0d = EXTENSIBLE ENUMERATION OF
    (single);
END_TYPE;

TYPE cell_shape_1d = EXTENSIBLE ENUMERATION OF
    (line);
END_TYPE;

TYPE cell_shape_2d = EXTENSIBLE ENUMERATION OF
    (quadrilateral,
     triangle);
END_TYPE;

TYPE cell_shape_3d = EXTENSIBLE ENUMERATION OF
    (hexahedron,
     wedge,
     tetrahedron,
     pyramid);
END_TYPE;

TYPE element_order = ENUMERATION OF 
  (linear,
   quadratic,
   cubic);
END_TYPE;

TYPE indices_group = SELECT
     (indices_list,
      indices_range);
END_TYPE;

TYPE mesh_location = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined,
      vertices,
      cell_centre,
      face_centre,
      iface_centre,
      jface_centre,
      kface_centre,
      edge_centre);
END_TYPE;

TYPE mesh_maths_space_type = EXTENSIBLE ENUMERATION OF
     (cells,
      vertices);
END_TYPE;

TYPE structured_mesh_type = EXTENSIBLE ENUMERATION OF
    (rectangular,
     pentahedral,
     pyramidal,
     tetrahedral);
END_TYPE;

ENTITY Array_based_unstructured_mesh
  SUBTYPE OF (Unstructured_mesh);
  cells        : ARRAY [1:cell_count] OF Vertex_defined_cell;
WHERE
  wr1 : SELF\Mesh.index_count = 1;
END_ENTITY;

ENTITY Array_based_unstructured_mesh_and_vertices
  SUBTYPE OF (Array_based_unstructured_mesh);
  vertex_count : INTEGER;
  vertices     : ARRAY [1:vertex_count] OF UNIQUE Vertex;
WHERE
  wr1 : all_mesh_vertices(SELF);
END_ENTITY;

ENTITY Cell
  SUPERTYPE OF (ONEOF(Cell_of_structured_mesh, Vertex_defined_cell))
  SUBTYPE OF (Detailed_topological_model_element);
  description : text;
  dimension   : INTEGER;
END_ENTITY;

ENTITY Cell_of_structured_mesh
  SUBTYPE OF (Cell);
  the_mesh : Structured_mesh;
  cell_identifier : ARRAY [1:index_count] OF INTEGER;
DERIVE
  index_count : INTEGER := the_mesh\Mesh.index_count;
END_ENTITY;

ENTITY Cell_with_explicit_boundary
  SUBTYPE OF (Cell);
  boundary : SET [1:?] OF Detailed_topological_model_element;
END_ENTITY;

ENTITY Explicit_unstructured_mesh
  SUBTYPE OF (Unstructured_mesh);
  explicit_model : Fea_model;
  cells          : ARRAY [1:cell_count] OF UNIQUE Element; -- element_representation;
END_ENTITY;

ENTITY Extraction_of_structured_submesh
SUBTYPE OF(Extraction_of_submesh);
  lower_vertex : ARRAY [1:whole_indices] OF INTEGER;
  used_indices : ARRAY [1:part_indices] OF INTEGER;
  used_senses  : ARRAY [1:part_indices] OF BOOLEAN;
DERIVE
  whole_indices : INTEGER := whole\Mesh.index_count;
  part_indices  : INTEGER := part\Mesh.index_count;
WHERE
  WR1: ('MESH_TOPOLOGY_SCHEMA.STRUCTURED_MESH' IN  TYPEOF(
             SELF\Extraction_of_submesh.whole));
  WR2: ('MESH_TOPOLOGY_SCHEMA.STRUCTURED_MESH' IN  TYPEOF(
             SELF\Extraction_of_submesh.part));

END_ENTITY;

ENTITY Extraction_of_submesh;
   whole:  mesh;
   part:   submesh;
END_ENTITY;
 
ENTITY Extraction_of_submesh_by_cells
  SUBTYPE OF (Extraction_of_submesh);
  cell_count: INTEGER;
  cells : ARRAY [1:cell_count] OF cell;
END_ENTITY;

ENTITY Extraction_of_submesh_by_vertices
  SUBTYPE OF (Extraction_of_submesh);
  vertex_count: INTEGER;
  vertices : ARRAY [1:vertex_count] OF Vertex;
END_ENTITY;

ENTITY Indices_list;
  nindices : INTEGER;
  indices  : LIST [1:?] OF ARRAY [1:nindices] OF INTEGER;
END_ENTITY;

ENTITY Indices_range;
  nindices : INTEGER;
  start    : ARRAY [1:nindices] OF INTEGER;
  finish   : ARRAY [1:nindices] OF INTEGER;
END_ENTITY;

ENTITY Mesh
  ABSTRACT SUPERTYPE OF (ONEOF(Structured_mesh,
        Unstructured_mesh) ANDOR Submesh)
   SUBTYPE OF (Detailed_topological_model_element);
  description : text;
  index_count : INTEGER;
END_ENTITY;

ENTITY Mesh_derived_maths_space
  SUBTYPE OF (maths_space);
  description : text;
  name        : label;
  id          : identifier;
  the_mesh    : Mesh;
  kind        : Mesh_maths_space_type;
END_ENTITY;

ENTITY Product_of_mesh;
  operands : LIST [2:2] OF Mesh;
  product  : Mesh;
WHERE
  wr1 : (this_schema+'.STRUCTURED_MESH' IN TYPEOF(operands[1])) AND
        (this_schema+'.STRUCTURED_MESH' IN TYPEOF(operands[2])) AND
        (this_schema+'.STRUCTURED_MESH' IN TYPEOF(product));
  wr2 : operands[1].index_count = 1;
  wr3 : operands[1].index_count + operands[2].index_count
        = product.index_count;
END_ENTITY;

ENTITY Rind;
  index_count : INTEGER;
  planes      : ARRAY [1:2*index_count] OF INTEGER;
END_ENTITY;

ENTITY Structured_mesh
  SUBTYPE OF (mesh);
  vertex_counts : ARRAY [1:SELF\mesh.index_count] OF INTEGER;
  cell_counts   : ARRAY [1:SELF\mesh.index_count] OF INTEGER;
  kind          : Structured_mesh_type;
END_ENTITY;

ENTITY Structured_mesh_with_rind
  SUBTYPE OF (Structured_mesh);
  rind_planes : Rind;
END_ENTITY;

ENTITY Submesh
  SUBTYPE OF (Mesh);
END_ENTITY;

ENTITY Unstructured_mesh
  ABSTRACT SUPERTYPE OF (ONEOF(Array_based_unstructured_mesh, 
        Explicit_unstructured_mesh))
  SUBTYPE OF (Mesh);
  cell_count   : INTEGER;
END_ENTITY;



ENTITY Vertex_defined_cell 
  SUBTYPE OF (Cell); 
  shape       : cell_shape;
  order       : element_order;
  vertices    : ARRAY [1:vn_count] OF OPTIONAL Vertex;
DERIVE
  bound_count       : INTEGER := cell_counts(SELF)[1];
  edge_node_count   : INTEGER := cell_counts(SELF)[2];
  opt_node_count    : INTEGER := cell_counts(SELF)[3];
  required_count    : INTEGER := bound_count + edge_node_count;
  vn_count          : INTEGER := required_count + opt_node_count;
  required_vertices : ARRAY [1:required_count] OF vertex
                        := shorten_array(vertices, vn_count, required_count);
END_ENTITY;

FUNCTION all_mesh_vertices(arg : Array_based_unstructured_mesh_and_vertices)
         : BOOLEAN;
LOCAL
  vertex_set : SET OF Vertex := [];
  cell : Vertex_defined_cell;
END_LOCAL;
  REPEAT i := 1 TO arg.cell_count;
    cell := arg.cells[i];
    REPEAT j := 1 TO cell.vn_count;
      vertex_set := vertex_set + cell.vertices[j];
    END_REPEAT;
  END_REPEAT;
  IF (SIZEOF(vertex_set) <> arg.index_count) THEN
    RETURN(FALSE);
  END_IF;
  REPEAT i := 1 TO arg.index_count;
    IF (NOT (arg.vertices[i] IN vertex_set) ) THEN
      RETURN(FALSE);
    END_IF;
  END_REPEAT;
  RETURN(TRUE);
END_FUNCTION;

FUNCTION cell_counts(arg : Vertex_defined_cell) : ARRAY[1:3] OF INTEGER;
LOCAL
  om1    : INTEGER := 0;      -- (order - 1)
  om1sq  : INTEGER := om1**2; -- (order - 1) squared
  vts    : INTEGER;           -- number of bounding vertices
  eds    : INTEGER;           -- number of edges
  qf     : INTEGER := 0;      -- number of quadrilateral faces
  tf     : INTEGER := 0;      -- number of triangular faces
  result : ARRAY [1:3] OF INTEGER := [0,0,0];
END_LOCAL;
  CASE arg.order OF
    element_order.linear    : om1 := 0;
    element_order.quadratic : om1 := 1;
    element_order.cubic     : om1 := 2;
    OTHERWISE : RETURN(result);
  END_CASE;
  om1sq := om1**2;
  CASE arg.shape OF
    cell_shape_0d.single : 
        BEGIN
          vts := 1; eds := 0; qf := 0; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 0, 0
          result[3] := 0;                         -- 0, 0, 0
        END;
    cell_shape_1d.line :
        BEGIN
          vts := 2; eds := 1; qf := 0; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 1, 2
          result[3] := 0;                         -- 0, 0, 0
        END;
    cell_shape_2d.quadrilateral : 
        BEGIN
          vts := 4; eds := 4; qf := 1; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 4, 8
          result[3] := om1sq*qf;                  -- 0, 1, 4
        END;
    cell_shape_2d.triangle : 
        BEGIN
          vts := 3; eds := 3; qf := 0; tf := 1;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 3, 6
          result[3] := (om1-1)*tf;                --    0, 1
          CASE arg.order OF
            element_order.linear : result[3] := 0;              -- 0
          END_CASE;
        END;
    cell_shape_3d.hexahedron :
        BEGIN
          vts := 8; eds := 12; qf := 6; tf := 0;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 12, 24
          result[3] := om1sq*(qf+om1);            -- 0, 7, 32
        END;
    cell_shape_3d.wedge :
        BEGIN
          vts := 6; eds := 9; qf := 3; tf := 2;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 9,  18
          result[3] := om1sq*qf + om1*tf;         -- 0, 3, 16
        END;
    cell_shape_3d.tetrahedron : 
        BEGIN
          vts := 4; eds := 6; qf := 0; tf := 4;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 6, 12
          result[3] := (om1-1)*tf;                --    0, 4
          CASE arg.order OF
            element_order.linear : result[3] := 0;              -- 0
          END_CASE;
        END;
    cell_shape_3d.pyramid : 
        BEGIN
          vts := 5; eds := 8; qf := 1; tf := 4;
          result[1] := vts;
          result[2] := om1*eds;                   -- 0, 8, 16
          result[3] := om1sq*qf + (om1-1)*tf;     --    1, 9
          CASE arg.order OF
            element_order.linear : result[3] := 0;              -- 0
          END_CASE;
        END;
  END_CASE;
RETURN(result);
END_FUNCTION;


FUNCTION shorten_array(longa : ARRAY OF GENERIC : T;
                      oldl, newl : INTEGER) : ARRAY OF GENERIC : T;
   LOCAL
     shorta : ARRAY [1:newl] OF GENERIC : T;
   END_LOCAL;

   IF (newl > oldl) THEN
     RETURN(?);
   ELSE
     REPEAT i := 1 TO newl;
       shorta[i] := longa[i];
     END_REPEAT;
     RETURN(shorta);
   END_IF;
END_FUNCTION;



FUNCTION this_schema : STRING;
  RETURN('MESH_TOPOLOGY_SCHEMA');
END_FUNCTION;



END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7921 - ISO/CD-TS - 10303-1816 Model based 3d geometrical dimensioning and tolerancing representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7358
*)

SCHEMA Model_based_3d_geometrical_dimensioning_and_tolerancing_representation_arm;

USE FROM Geometric_tolerance_arm; -- ISO/TS 10303-1051
USE FROM Part_shape_arm;
USE FROM Product_and_manufacturing_information_with_nominal_3d_models_arm;

TYPE nominal_3d_integral_feature_geometry = SELECT (
  Advanced_face, 
  Edge_curve,
  Vertex_point, 
  Connected_face_set,
  Edge_loop);
END_TYPE;

TYPE nominal_3d_derived_feature_geometry = SELECT (
  Curve,
  Point,
  Surface);
END_TYPE;

TYPE mb3gdtsr_geometric_tolerance_target = SELECT BASED_ON geometric_tolerance_target WITH (
  Nominal_3d_feature);
END_TYPE;

TYPE mb3gdtsr_dimension_target = SELECT BASED_ON dimension_target WITH (
  Nominal_3d_feature, Datum_reference_compartment);
END_TYPE;

TYPE mb3gdtsr_edge_of_undefined_shape_size_element = SELECT 
  BASED_ON edge_of_undefined_shape_size_element WITH (
  Nominal_3D_edge);  
END_TYPE;

ENTITY Gdt_representation_shape
  SUBTYPE OF (Nominal_3d_model_shape, Part_shape);
WHERE
  WR1: 'PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.GDT_REPRESENTATION_VIEW_CONTEXT' IN TYPEOF(described_element\Product_view_definition.additional_contexts); 
END_ENTITY;  
  
ENTITY Nominal_3d_edge
  SUBTYPE OF (Nominal_3d_integral_feature);
DERIVE
  SELF\Associated_shape_element.associated_item : Edge_curve := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: 'BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE' IN
     TYPEOF(SELF\Associated_shape_element.associated_item);
END_ENTITY;

ENTITY Nominal_3d_feature 
  ABSTRACT SUPERTYPE OF (ONEOF (Nominal_3d_integral_feature, Nominal_3d_derived_feature))
  SUBTYPE OF (Associated_shape_element, Part_shape_element);
  SELF\Shape_element.containing_shape : Gdt_representation_shape;
END_ENTITY;

ENTITY Nominal_3d_integral_feature
  SUBTYPE OF (General_part_feature, Nominal_3d_feature);
DERIVE
  SELF\Associated_shape_element.associated_item : nominal_3d_integral_feature_geometry := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: EXISTS(associated_item);
END_ENTITY;    

ENTITY Nominal_3d_derived_feature
  SUBTYPE OF (Nominal_3d_feature, Derived_shape_element);
  SELF\Derived_shape_element.derived_from: SET [1:?] OF Nominal_3d_feature;
DERIVE
  SELF\Associated_shape_element.associated_item : nominal_3d_derived_feature_geometry := association\Geometric_item_specific_usage.identified_item;
WHERE
  WR1: EXISTS(associated_item);
END_ENTITY;   

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N5431 - ISO/TS 10303-1322 Modified swept solid - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4765
*)

SCHEMA Modified_swept_solid_arm;

USE FROM Basic_geometric_topology_arm; -- ISO/CD-TS 10303-1323

USE FROM Swept_solid_arm; -- ISO/CD-TS 10303-1321

  TYPE trim_intent = ENUMERATION OF
    (blind,
     through_all,
     up_to_next,
     unspecified);
  END_TYPE;

  TYPE trim_select = SELECT
    (length_measure,
     plane_angle_measure,
     Advanced_face,
     Detailed_geometric_model_element);
  END_TYPE;

  ENTITY Extruded_solid_with_draft_angle
    SUBTYPE OF (Extruded_solid_with_trim_conditions);
      draft_angle : plane_angle_measure;
  END_ENTITY;

  ENTITY Extruded_solid_with_multiple_draft_angles
    SUBTYPE OF (Extruded_solid_with_trim_conditions);
      draft_edges  : LIST[2:?] OF SET[1:?] OF edge_curve;
      draft_angles : LIST[2:?] OF plane_angle_measure;
    WHERE
      WR1: SIZEOF(draft_edges) = SIZEOF(draft_angles);
      WR2: SIZEOF(QUERY(q <* draft_angles | q = 0)) = 0;
  END_ENTITY;

  ENTITY Extruded_solid_with_trim_conditions
    SUPERTYPE OF (ONEOF(Extruded_solid_with_draft_angle, Extruded_solid_with_multiple_draft_angles))
    SUBTYPE OF (Extruded_solid);
      start_condition        : trim_select;
      end_condition          : trim_select;
      start_condition_intent : trim_intent; 
      end_condition_intent   : trim_intent; 
  END_ENTITY;

  ENTITY Solid_of_revolution_with_trim_conditions
    SUBTYPE OF (Solid_of_revolution);
      start_condition : trim_select;
      end_condition   : trim_select;
  END_ENTITY;

END_SCHEMA;

(* 
 ISO TC184/SC4/WG12 N3242 - ISO/TS 10303-1105 Multi linguism - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2223
*)

SCHEMA Multi_linguism_arm;

TYPE string_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY Language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
UNIQUE
  UR1: language_code;
END_ENTITY;

ENTITY Language_indication;
   considered_instance: string_select;
   considered_attribute: STRING;
   used_language:  Language;
END_ENTITY;

ENTITY Attribute_translation_assignment;
   considered_instance: string_select;
   considered_attribute: STRING;
   translation_text : STRING;
   translation_language: Language;
UNIQUE
  UR1: considered_instance, considered_attribute, translation_language;
END_ENTITY;

END_SCHEMA; -- Multi_linguism_arm
(*
 ISO TC184/SC4/WG12 N3085 - ISO/TS 10303-1340 Name assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2282
*) 


SCHEMA Name_assignment_arm;


TYPE assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;

END_SCHEMA;  -- Name_assignment_arm


(*
   ISO TC184/SC4/WG12 N5434 - ISO/TS 10303-1324 Non manifold surface - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4768
*)

SCHEMA Non_manifold_surface_arm;

USE FROM Elemental_geometric_shape_arm; -- ISO/CD-TS 10303-1004

  ENTITY Non_manifold_shape_representation
    SUBTYPE OF (Geometric_model);
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7867 - ISO/TS 10303-1526 Numeric expression - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7220
*)
	
	SCHEMA Numeric_expression_arm;
	
	USE FROM Generic_expression_arm;
	USE FROM Numeric_function_arm;
	USE FROM Expression_arm;
		
	ENTITY And_expression
	SUBTYPE OF (Multiple_arity_boolean_expression);
	END_ENTITY;
	
	ENTITY Binary_boolean_expression
	ABSTRACT SUPERTYPE OF (ONEOF (Xor_expression, Equals_expression))
	SUBTYPE OF (Boolean_expression, Binary_generic_expression);
	END_ENTITY;
	
	ENTITY Binary_numeric_expression
	ABSTRACT SUPERTYPE OF (ONEOF (Minus_expression,
	Div_expression,
	Mod_expression,
	Slash_expression,
	Power_expression))
	SUBTYPE OF (Numeric_expression, Binary_generic_expression);
	SELF\Binary_generic_expression.operands : LIST [2:2] OF Numeric_expression;
	END_ENTITY;
	
	ENTITY Boolean_defined_function
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Defined_function, Boolean_expression);
	END_ENTITY ;
	
	ENTITY Boolean_expression
	ABSTRACT SUPERTYPE OF (ONEOF (Simple_boolean_expression,
	Unary_boolean_expression,
	Binary_boolean_expression,
	Multiple_arity_boolean_expression,
	Comparison_expression,	
	Boolean_defined_function,
	Interval_expression))
	SUBTYPE OF (Expression);
	END_ENTITY;
	
	ENTITY Boolean_literal
	SUBTYPE OF (Simple_boolean_expression, Generic_literal);
	the_value: BOOLEAN;
	END_ENTITY;
	
	ENTITY Boolean_variable
	SUBTYPE OF (Simple_boolean_expression, Variable);
	END_ENTITY;
	
	ENTITY Comparison_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
	
	ENTITY Comparison_expression
	ABSTRACT SUPERTYPE OF (ONEOF (Comparison_equal,
	Comparison_greater,
	Comparison_greater_equal,
	Comparison_less,
	Comparison_less_equal,
	Comparison_not_equal))
	SUBTYPE OF (Boolean_expression, Binary_generic_expression);
	SELF\Binary_generic_expression.operands : LIST [2:2] OF Expression;
	WHERE
	WR1: (
	('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
	AND
	('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[2])))
	OR
	(('NUMERIC_EXPRESSION_ARM.BOOLEAN_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
	AND
	('NUMERIC_EXPRESSION_ARM.BOOLEAN_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[2])))
	OR
	(('EXPRESSION_ARM.STRING_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[1]))
	AND
	('EXPRESSION_ARM.STRING_EXPRESSION'
	IN TYPEOF(SELF\Binary_generic_expression.operands[2])));
	END_ENTITY;

	ENTITY Comparison_greater
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
	
	ENTITY Comparison_greater_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
	
	ENTITY Comparison_less
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
	
	ENTITY Comparison_less_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
	
	ENTITY Comparison_not_equal
	SUBTYPE OF (Comparison_expression);
	END_ENTITY;
	
	ENTITY Defined_function
	ABSTRACT SUPERTYPE;
 	END_ENTITY;
 	
 	ENTITY Div_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
 	
 	ENTITY Equals_expression
 	SUBTYPE OF (Binary_boolean_expression);
        END_ENTITY;
        
        ENTITY Expression
 	ABSTRACT SUPERTYPE OF (ONEOF (Numeric_expression,Boolean_expression))
 	SUBTYPE OF (Generic_expression);
 	END_ENTITY;
 	 		
 	
 	
 	
 	
 	ENTITY Int_literal
	SUBTYPE OF (Literal_number);
	SELF\Literal_number.the_value: INTEGER;
	END_ENTITY;
  	
  	ENTITY Int_numeric_variable
  	SUBTYPE OF (Numeric_variable);
  	END_ENTITY;
	 
 	
(* WR2 corrected to reference Numeric_expression in second part of WR2 *) 	
 	ENTITY Interval_expression
	  SUBTYPE OF (Boolean_expression, Multiple_arity_generic_expression) ;
	   DERIVE
	    interval_low: Generic_expression
	      := SELF\Multiple_arity_generic_expression.operands[1];
	    interval_item: Generic_expression
	      := SELF\Multiple_arity_generic_expression.operands[2];
	    interval_high: Generic_expression
	      := SELF\Multiple_arity_generic_expression.operands[3];
	 WHERE
	  WR1:('NUMERIC_EXPRESSION_ARM.EXPRESSION'
	        IN TYPEOF(interval_low))
	     AND ('NUMERIC_EXPRESSION_ARM.EXPRESSION'
	        IN TYPEOF(interval_item) )
	     AND ('NUMERIC_EXPRESSION_ARM.EXPRESSION'
	        IN TYPEOF(interval_high));
	 WR2:(('EXPRESSION_ARM.STRING_EXPRESSION'
	       IN TYPEOF (SELF.Interval_low))
	     AND ('EXPRESSION_ARM.STRING_EXPRESSION'
	       IN TYPEOF (SELF.Interval_high))
	     AND ('EXPRESSION_ARM.STRING_EXPRESSION'
	       IN TYPEOF (SELF.Interval_item)))
	 OR
	    (('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION'
	       IN TYPEOF(SELF.Interval_low))
	    AND ('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION'
	       IN TYPEOF(SELF.Interval_item))
	    AND ('NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION'
	      IN TYPEOF(SELF.Interval_high)));
 	END_ENTITY; 	
 	
 	
 	
 	ENTITY Literal_number
 	ABSTRACT SUPERTYPE OF (ONEOF (Int_literal, Real_literal))
 	SUBTYPE OF (Simple_numeric_expression, Generic_literal);
 	the_value: NUMBER;
 	END_ENTITY;
 	
 	ENTITY Minus_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
 	
 	ENTITY Mod_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
 	
 	ENTITY Mult_expression
 	SUBTYPE OF (Multiple_arity_numeric_expression);
 	END_ENTITY;
 	
 	ENTITY Multiple_arity_boolean_expression
 	ABSTRACT SUPERTYPE OF (ONEOF (And_expression, Or_expression))
 	SUBTYPE OF (Boolean_expression, Multiple_arity_generic_expression);
 	SELF\Multiple_arity_generic_expression.operands : LIST [2:?] OF Boolean_expression;
 	END_ENTITY;
 	
 	ENTITY Multiple_arity_function_call
 	ABSTRACT SUPERTYPE
 	SUBTYPE OF (Multiple_arity_numeric_expression);
 	END_ENTITY;
 	
 	ENTITY Multiple_arity_numeric_expression
 	ABSTRACT SUPERTYPE OF (ONEOF (Plus_expression,
 	Mult_expression,
 	Multiple_arity_function_call))
 	SUBTYPE OF (Numeric_expression, Multiple_arity_generic_expression);
 	SELF\Multiple_arity_generic_expression.operands : LIST [2:?] OF Numeric_expression;
 	END_ENTITY;
 	
 	ENTITY Not_expression
 	SUBTYPE OF (Unary_boolean_expression);
 	SELF\Unary_generic_expression.operand: Boolean_expression;
 	END_ENTITY;
 	
 	ENTITY Numeric_expression
 	ABSTRACT SUPERTYPE
 	SUBTYPE OF (Expression);
 	DERIVE
 	is_int: BOOLEAN := Is_int_expr (SELF);
 	sql_mappable: BOOLEAN := Is_sql_mappable (SELF);
 	END_ENTITY;


 	ENTITY Numeric_variable
 	SUPERTYPE OF (ONEOF (Int_numeric_variable,
 	Real_numeric_variable))
 	SUBTYPE OF (Simple_numeric_expression, Variable);
 	WHERE
 	WR1: ('EXPRESSION_ARM.INT_NUMERIC_VARIABLE' IN TYPEOF(SELF) ) OR
 	('EXPRESSION_ARM.REAL_NUMERIC_VARIABLE' IN TYPEOF(SELF) );
 	END_ENTITY;
 
 
 	ENTITY Or_expression
 	SUBTYPE OF (Multiple_arity_boolean_expression);
 	END_ENTITY;
 	
 	ENTITY Plus_expression
 	SUBTYPE OF (Multiple_arity_numeric_expression);
 	END_ENTITY;
 	
 	ENTITY Power_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;
 	
 	ENTITY Real_literal
 	SUBTYPE OF (Literal_number);
 	SELF\Literal_number.the_value: REAL;
 	END_ENTITY;
 	
 	ENTITY Real_numeric_variable
 	SUBTYPE OF (Numeric_variable);
 	END_ENTITY;
 	
 	ENTITY Simple_boolean_expression
 	ABSTRACT SUPERTYPE OF (ONEOF (Boolean_literal, Boolean_variable))
 	SUBTYPE OF (Boolean_expression, Simple_generic_expression);
 	END_ENTITY;
 	
 	ENTITY Simple_numeric_expression
 	ABSTRACT SUPERTYPE OF (ONEOF (Literal_number, Numeric_variable))
 	SUBTYPE OF (Numeric_expression, Simple_generic_expression);
 	END_ENTITY;
 	
  	ENTITY Slash_expression
 	SUBTYPE OF (Binary_numeric_expression);
 	END_ENTITY;

       
 	ENTITY Unary_boolean_expression
 	ABSTRACT SUPERTYPE
 	SUBTYPE OF (Boolean_expression, Unary_generic_expression);
 	END_ENTITY;
 	
 	ENTITY Unary_numeric_expression
 	ABSTRACT SUPERTYPE
 	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
 	SELF\Unary_generic_expression.operand : Numeric_expression;
 	END_ENTITY;
 	
 	ENTITY Xor_expression
 	SUBTYPE OF (Binary_boolean_expression);
 	SELF\Binary_generic_expression.operands: LIST [2:2] OF Boolean_expression;
 	END_ENTITY;

 	
FUNCTION Is_sql_mappable (arg: expression) : BOOLEAN;

LOCAL
	i: INTEGER;
END_LOCAL;

IF 'EXPRESSION_ARM.SIMPLE_NUMERIC_EXPRESSION' IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'EXPRESSION_ARM.SQL_MAPPABLE_DEFINED_FUNCTION' IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'EXPRESSION_ARM.MINUS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_sql_mappable(arg\Unary_numeric_expression.operand)); 
END_IF;
IF ('ELEMENTARY_FUNCTION_ARM.ABS_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.SIN_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.COS_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.TAN_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.ASIN_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.ACOS_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.ATAN_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.EXP_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.LOG_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.LOG2_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.LOG10_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.SQUARE_ROOT_FUNCTION' IN TYPEOF(arg)) 
	OR ('NUMERIC_FUNCTION_ARM.FUNCTION_PARAMETER_VALUE' IN TYPEOF(arg)) 
	OR ('NUMERIC_FUNCTION_ARM.LENGTH_FUNCTION' IN TYPEOF(arg))
THEN 
	RETURN (FALSE);
END_IF;
IF ('NUMERIC_EXPRESSION_ARM.PLUS_EXPRESSION' IN TYPEOF(arg)) 
	OR('NUMERIC_EXPRESSION_ARM.MULT_EXPRESSION' IN TYPEOF(arg)) 
	OR('NUMERIC_EXPRESSION_ARM.MAXIMUM_FUNCTION' IN TYPEOF(arg)) 
	OR('NUMERIC_EXPRESSION_ARM.MAXIMUM_FUNCTION' IN TYPEOF(arg)) 
THEN 
	REPEAT i :=1 TO SIZEOF (arg\Multiple_arity_numeric_expression.operands);
		IF NOT Is_sql_mappable(
			arg\Multiple_arity_numeric_expression.operands[i])
		THEN 
			RETURN (FALSE);
		END_IF;
	END_REPEAT;
RETURN (TRUE);
END_IF;
IF ('EXPRESSION_ARM.MINUS_EXPRESSION' IN TYPEOF(arg)) 
	OR ('EXPRESSION_ARM.SLASH_EXPRESSION' IN TYPEOF(arg))
THEN
	RETURN (Is_sql_mappable(arg\Binary_numeric_expression.operands[1])
		AND Is_sql_mappable(arg\Binary_numeric_expression.operands[2]));
END_IF;
IF ('NUMERIC_EXPRESSION_ARM.DIV_EXPRESSION' IN TYPEOF(arg)) 
	OR ('NUMERIC_EXPRESSION_ARM.MOD_EXPRESSION' IN TYPEOF(arg)) 
	OR('NUMERIC_EXPRESSION_ARM.POWER_EXPRESSION' IN TYPEOF(arg))
THEN 
	RETURN (FALSE); 	
END_IF;
IF 'NUMERIC_EXPRESSION_ARM.SIMPLE_BOOLEAN_EXPRESSION' IN TYPEOF (arg) 
THEN 
	RETURN (TRUE);
END_IF;
IF 'NUMERIC_EXPRESSION_ARM.NOT_EXPRESSION' IN TYPEOF (arg) 
THEN 
	RETURN (Is_sql_mappable (arg\UNARY_GENERIC_EXPRESSION.OPERAND));
END_IF;
IF ('NUMERIC_FUNCTION_ARM.ODD_FUNCTION'IN TYPEOF (arg)) 
		OR ('NUMERIC_EXPRESSION_ARM.XOR_EXPRESSION' IN TYPEOF (arg)) 
THEN	
	RETURN (FALSE);
END_IF;
IF ('NUMERIC_EXPRESSION_ARM.AND_EXPRESSION' IN TYPEOF (arg)) 
		OR ('NUMERIC_EXPRESSION_ARM.OR_EXPRESSION' IN TYPEOF (arg)) 
THEN
	REPEAT i:=1 TO SIZEOF (
			arg\MULTIPLE_ARITY_BOOLEAN_EXPRESSION.OPERANDS);
		IF NOT Is_sql_mappable (
			arg\MULTIPLE_ARITY_BOOLEAN_EXPRESSION.OPERANDS[i]) 
		THEN 
			RETURN (FALSE);
		END_IF;
	END_REPEAT;
	RETURN (TRUE);
END_IF;
IF 'NUMERIC_EXPRESSION_ARM.EQUALS_EXPRESSION' IN TYPEOF (arg) 
THEN
	RETURN(Is_sql_mappable (
			arg\Binary_generic_expression.OPERANDS [1])
		AND Is_sql_mappable(
			arg\Binary_generic_expression.OPERANDS [2]));
END_IF;
IF	('NUMERIC_EXPRESSION_ARM.COMPARISON_EQUAL' IN TYPEOF (arg)) 
	OR ('NUMERIC_EXPRESSION_ARM.COMPARISON_GREATER' IN TYPEOF (arg)) 
	OR ('NUMERIC_EXPRESSION_ARM.COMPARISON_GREATER_EQUAL' 	IN TYPEOF (arg))
	OR ('NUMERIC_EXPRESSION_ARM.COMPARISON_LESS' IN TYPEOF (arg)) 
	OR ('NUMERIC_EXPRESSION_ARM.COMPARISON_LESS_EQUAL' IN TYPEOF (arg)) 
	OR ('NUMERIC_EXPRESSION_ARM.COMPARISON_NOT_EQUAL' IN TYPEOF (arg)) 
	OR ('EXPRESSION_ARM.LIKE_EXPRESSION'  IN TYPEOF (arg)) 
THEN
	RETURN (Is_sql_mappable (arg\COMPARISON_EXPRESSION.OPERANDS[1])
		AND Is_sql_mappable (arg\COMPARISON_EXPRESSION.OPERANDS[2]));
END_IF;
IF 'EXPRESSION_ARM.INTERVAL_EXPRESSION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_sql_mappable(arg\Interval_expression.interval_low) 
		AND Is_sql_mappable(arg\Interval_expression.interval_high)
		AND Is_sql_mappable(arg\Interval_expression.interval_item));
END_IF;
IF ('NUMERIC_FUNCTION_ARM.NUMERIC_DEFINED_FUNCTION' IN TYPEOF(arg)) 
	OR ('NUMERIC_EXPRESSION_ARM.BOOLEAN_DEFINED_FUNCTION' 	IN TYPEOF(arg))
	OR ('EXPRESSION_ARM.STRING_DEFINED_FUNCTION' IN TYPEOF(arg))  
THEN 
		RETURN (FALSE) ;
END_IF;

IF 'EXPRESSION_ARM.SIMPLE_STRING_EXPRESSION' IN TYPEOF(ARG) 
THEN 
	RETURN (TRUE);
END_IF;
IF 	('EXPRESSION_ARM.INDEX_EXPRESSION' IN TYPEOF(arg)) 
	OR ('EXPRESSION_ARM.SUBSTRING_EXPRESSION' IN TYPEOF(arg)) 
	OR ('EXPRESSION_ARM.CONCAT_EXPRESSION' 	IN TYPEOF(arg)) 
	OR ('EXPRESSION_ARM.FORMAT_FUNCTION' IN TYPEOF(arg)) 
THEN 
	RETURN (FALSE);
END_IF;
	RETURN (FALSE);
END_FUNCTION; 

FUNCTION Is_int_expr (arg: Numeric_expression) : BOOLEAN;

LOCAL
	i: INTEGER;
END_LOCAL;

IF 'NUMERIC_EXPRESSION_ARM.INT_LITERAL' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'NUMERIC_EXPRESSION_ARM.REAL_LITERAL' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 
END_IF;
IF 'NUMERIC_EXPRESSION_ARM.INT_NUMERIC_VARIABLE' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'NUMERIC_EXPRESSION_ARM.REAL_NUMERIC_VARIABLE' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 
END_IF;
IF 'ELEMENTARY_FUNCTION_ARM.ABS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_int_expr(arg\Unary_numeric_expression.operand));
END_IF;
IF 'NUMERIC_FUNCTION.MINUS_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (Is_int_expr(arg\Unary_numeric_expression.operand)); 
END_IF;
IF ('ELEMENTARY_FUNCTION_ARM.SIN_FUNCTION' IN TYPEOF(arg)) 
	OR ('ELEMENTARY_FUNCTION_ARM.COS_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.TAN_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.ASIN_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.ACOS_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.ATAN_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.EXP_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.LOG_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.LOG2_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.LOG10_FUNCTION' IN TYPEOF(arg))
	OR ('ELEMENTARY_FUNCTION_ARM.SQUARE_ROOT_FUNCTION' IN TYPEOF(arg))
THEN 
	RETURN (FALSE);
END_IF;
IF 	('NUMERIC_EXPRESSION_ARM.PLUS_EXPRESSION' IN TYPEOF(arg))
		OR ('NUMERIC_EXPRESSION_ARM.MULT_EXPRESSION' IN TYPEOF(arg))
		OR ('ELEMENTARY_FUNCTION_ARM.MAXIMUM_FUNCTION' IN TYPEOF(arg))
		OR ('ELEMENTARY_FUNCTION_ARM.MINIMUM_FUNCTION' IN TYPEOF(arg)) 
THEN 
	REPEAT i :=1 TO SIZEOF (
			arg\Multiple_arity_numeric_expression.operands);
	IF NOT 
		Is_int_expr(arg\Multiple_arity_numeric_expression.operands[i]) 
	THEN 
		RETURN (FALSE);
	END_IF;
	END_REPEAT;
	RETURN (TRUE);
END_IF;
IF 	('NUMERIC_EXPRESSION_ARM.MINUS_EXPRESSION' IN TYPEOF(arg))
		OR ('NUMERIC_EXPRESSION_ARM.POWER_EXPRESSION' 
								IN TYPEOF(arg))
THEN 
	RETURN (Is_int_expr(arg\Binary_numeric_expression.operands[1])
		AND Is_int_expr(arg\Binary_numeric_expression.operands[2]));
END_IF;
IF	('NUMERIC_EXPRESSION_ARM.DIV_EXPRESSION' IN TYPEOF(arg))
		OR ('NUMERIC_EXPRESSION_ARM.MOD_EXPRESSION' IN TYPEOF(arg))
THEN 
	RETURN(TRUE);	
END_IF;
IF 'NUMERIC_EXPRESSION_ARM.SLASH_EXPRESSION' IN TYPEOF(arg) 
THEN 
	RETURN (FALSE); 	
END_IF;
IF 'NUMERIC_FUNCTION_ARM.LENGTH_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN (TRUE); 
END_IF;
IF 'NUMERIC_FUNCTION_ARM.FUNCTION_PARAMETER_VALUE' IN TYPEOF(arg) 
THEN 
	IF 'NUMERIC_FUNCTION_ARM.INT_VALUE_FUNCTION' IN TYPEOF(arg) 
	THEN 
		RETURN (TRUE); 
	ELSE 
		RETURN (FALSE); 
	END_IF;
END_IF;
IF 'ELEMENTARY_FUNCTION_ARM.INTEGER_DEFINED_FUNCTION' IN TYPEOF(arg)
THEN 
	RETURN(TRUE) ;
END_IF;
IF'ELEMENTARY_FUNCTION_ARM.REAL_DEFINED_FUNCTION' IN TYPEOF(arg) 
THEN 
	RETURN(FALSE) ;
END_IF ;
IF 'NUMERIC_EXPRESSION_ARM.BOOLEAN_DEFINED_FUNCTION' IN TYPEOF(arg)
THEN 
	RETURN(FALSE) ;
END_IF ;
IF 'EXPRESSION_ARM.STRING_DEFINED_FUNCTION' IN TYPEOF(arg)
THEN 
	RETURN (FALSE) ;
END_IF ;

RETURN (FALSE);

END_FUNCTION; 
	
	
	
	END_SCHEMA;         
      
(*
 ISO TC184/SC4/WG12 N7870 - ISO/TS 10303-1346 Numeric function - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7226
*)

	SCHEMA Numeric_function_arm;
	
	USE FROM Expression_arm;
	REFERENCE FROM Numeric_expression_arm(Is_int_expr);
	
	USE FROM Elementary_function_arm;
	
	
	ENTITY Function_parameter_value
	SUPERTYPE OF (Int_value_function)
	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
	SELF\Unary_generic_expression.operand: String_expression;
	END_ENTITY;
	
	
	ENTITY Int_value_function
	SUBTYPE OF (Function_parameter_value);
	END_ENTITY;
	
	
	
	
	ENTITY Length_function
	SUBTYPE OF (Numeric_expression, Unary_generic_expression);
	SELF\Unary_generic_expression.operand: String_expression;
	END_ENTITY;
	
	
	
	ENTITY Odd_function
	SUBTYPE OF (Unary_boolean_expression);
	SELF\Unary_generic_expression.operand: Numeric_expression;
	WHERE
	WR1: Is_int_expr(SELF);
	END_ENTITY;
	
	

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N8035 - ISO/TS 10303-1344 Numerical interface - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7451
*)

SCHEMA Numerical_interface_arm;

USE FROM Generic_expression_arm;
USE FROM Expression_arm;

USE FROM Value_with_unit_arm;
USE FROM Measure_representation_arm;


TYPE property_variable_rep_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE expression_extension_select = SELECT (
      String_expression,
      Numeric_expression);
END_TYPE; 

ENTITY Expression_extension
    SUBTYPE OF (Value_with_unit);
    expression_associated: expression_extension_select;
END_ENTITY; 
 
ENTITY Variable_expression
    SUBTYPE OF (Variable_semantics);
    property_associated: property_variable_rep_select;
END_ENTITY; 
   

END_SCHEMA;   

(*
 ISO TC184/SC4/WG12 N7852 - ISO/TS 10303-1790 Parameterization and variational representation - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7208
*)

SCHEMA Parameterization_and_variational_representation_arm;

USE FROM Elemental_geometric_shape_arm;
USE FROM Maths_space_arm;

REFERENCE FROM Foundation_representation_arm;

TYPE attribute_identifier = STRING;
    WHERE
      WR1: validate_attribute_id(SELF);
END_TYPE;


ENTITY Auxiliary_geometric_representation_item
  SUBTYPE OF (Detailed_geometric_model_element, 
              Variational_representation_item);
END_ENTITY;


ENTITY Bound_parameter_environment;
   syntactic_representation : Bound_variational_parameter;
   semantics : Instance_attribute_reference;
END_ENTITY; 

ENTITY Bound_variational_parameter
 SUBTYPE OF (Variational_representation_item, Maths_variable);
   parameter_description : OPTIONAL STRING; 
 DERIVE
   SELF\Maths_variable.name : STRING := SELF\Representation_item.name;
 INVERSE
    interpretation : Bound_parameter_environment for syntactic_representation;
 END_ENTITY; 

ENTITY Fixed_instance_attribute_set
  SUBTYPE OF (Variational_representation_item);
  fixed_attributes : SET[1:?] OF Instance_attribute_reference;
WHERE
  WR1: SIZEOF(QUERY(q <* using_representations(SELF) | 
    SIZEOF(QUERY(r <* q.items |
    'PARAMETERIZATION_SCHEMA.FIXED_INSTANCE_ATTRIBUTE_SET' 
    IN TYPEOF(r))) > 1)) = 0;
END_ENTITY;

ENTITY Generated_finite_numeric_space
  SUBTYPE OF (Maths_space);
  start_value      : NUMBER;
  increment_value  : NUMBER;
  increments : maths_integer;
DERIVE
  members : SET [2:?] OF NUMBER 
    := make_numeric_set(start_value, increment_value, increments); 
WHERE
  WR1: increment_value <> 0.0;
  WR2: increments > 0;
END_ENTITY;


ENTITY Instance_attribute_reference;
  attribute_name  : attribute_identifier;
  owning_instance : Representation_item;
END_ENTITY; 

ENTITY Maths_variable;
  name         : STRING;
  values_space : Maths_space;
END_ENTITY;

ENTITY Unbound_parameter_environment;
     syntactic_representation : Unbound_variational_parameter;
     semantics : Unbound_variational_parameter_semantics;
END_ENTITY; 



ENTITY Unbound_variational_parameter_semantics;
END_ENTITY;


ENTITY Unbound_variational_parameter
  SUBTYPE OF (Variational_representation_item, Maths_variable);
   parameter_description : OPTIONAL STRING; 
   parameter_current_value : maths_value;
DERIVE
  SELF\Maths_variable.name : STRING := SELF\Representation_item.name;
INVERSE
   interpretation : Unbound_parameter_environment for syntactic_representation;
END_ENTITY; 

ENTITY Variational_current_representation_relationship
  SUBTYPE OF (Representation_relationship);
  SELF\Representation_relationship.rep_1 
                 : Variational_representation;
  current_result : Representation;
UNIQUE
  UR1: current_result;
WHERE
  WR1: QUERY(q <* SELF\Representation_relationship.rep_1.items | NOT
    ('VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION_ITEM'
    IN TYPEOF(q))) = SELF\Representation_relationship.rep_2.items;
  WR2: SELF\Representation_relationship.rep_1.context_of_items :=:
    SELF\Representation_relationship.rep_2.context_of_items;
  WR3: SIZEOF(QUERY(q <* SELF\Representation_relationship.rep_2.items |
    'VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION_ITEM' 
    IN TYPEOF(q))) = 0;
  WR4: current_result :=: SELF\Representation_relationship.rep_2;
END_ENTITY;


ENTITY Variational_representation 
  SUBTYPE OF (Representation);
INVERSE
  cm_link : Variational_current_representation_relationship FOR rep_1;
WHERE
  WR1: SIZEOF(QUERY(q <* SELF\representation.items | 
    'VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION_ITEM' 
    IN TYPEOF(q))) > 0;
(* replace WR2 by note to remove complex references to other schemas in ARM
WR2: SIZEOF(QUERY(q <* (SELF\representation.items - 
    cm_link.rep_2.items) | invalidate_vrep_item(q))) = 0;  *)
END_ENTITY;

ENTITY Variational_representation_item
  ABSTRACT SUPERTYPE OF (ONEOF(Auxiliary_geometric_representation_item, Bound_variational_parameter, 
  Unbound_variational_parameter))
  SUBTYPE OF (Representation_item);
WHERE
  WR1: SIZEOF(QUERY(q <* using_representations(SELF) |
    NOT ('VARIATIONAL_REPRESENTATION_SCHEMA.VARIATIONAL_REPRESENTATION'  
    IN TYPEOF(q)))) = 0;
  WR2: SIZEOF(QUERY(q <* using_representations(SELF) |
    NOT (SELF IN q.items))) = 0; 
END_ENTITY;




(*
FUNCTION invalidate_vrep_item(item : variational_representation_item) 
                                   : BOOLEAN;

  LOCAL
    reps    : SET[1:?] OF representation := using_representations(item);
    svri    : SET[1:?] OF variational_representation_item;
    iar     : instance_attribute_reference;
    i       : INTEGER;
    n       : INTEGER := HIINDEX(reps);
  END_LOCAL;

  IF ('PARAMETERIZATION_SCHEMA.BOUND_MODEL_PARAMETER' IN TYPEOF(item))
  THEN
    IF 'PARAMETERIZATION_SCHEMA.INSTANCE_ATTRIBUTE_REFERENCE' 
      IN TYPEOF(item\generic_variable.interpretation.semantics)
    THEN
      BEGIN
        iar := item\generic_variable.interpretation.semantics;
        IF (reps <> using_representations(iar.owning_instance))
        THEN
          RETURN(TRUE);
        END_IF;
      END;
    ELSE RETURN(TRUE); -- parameter not attached to an instance attribute
    END_IF;
  END_IF;

  IF ('PARAMETERIZATION_SCHEMA.UNBOUND_MODEL_PARAMETER' IN TYPEOF(item))
  THEN
    BEGIN 
      REPEAT i := 1 TO n;
        svri := QUERY(q <* reps[i].items | 
          'EXPLICIT_CONSTRAINT_SCHEMA.FREE_FORM_CONSTRAINT' IN TYPEOF(q));
        IF SIZEOF(QUERY(r <* svri | 
          item IN (r.reference_elements + r.constrained_elements))) = 0
        THEN 
          RETURN(TRUE);
        END_IF;
      END_REPEAT;
    END;
  END_IF;

  IF ('PARAMETERIZATION_SCHEMA.FIXED_INSTANCE_ATTRIBUTE_SET' 
    IN TYPEOF(item))
  THEN
    REPEAT i := 1 TO SIZEOF(item.fixed_attributes);
      IF (reps <> using_representations(item.fixed_attributes[i]))
      THEN
        RETURN(TRUE);
      END_IF;
    END_REPEAT;
  END_IF;

  IF ('EXPLICIT_CONSTRAINT_SCHEMA.EXPLICIT_CONSTRAINT' IN TYPEOF(item))
  THEN
    IF SIZEOF(QUERY(q <* 
      (item.reference_elements + item.constrained_elements) |
      reps <> using_representations(q))) > 0
    THEN
      RETURN(TRUE);
    END_IF;
  END_IF;

  IF ('VARIATIONAL_REPRESENTATION_SCHEMA.AUXILIARY_GEOMETRIC_REPRESENTATION_ITEM' IN TYPEOF(item))
  THEN
    BEGIN 
      REPEAT i := 1 TO n;
        svri := QUERY(q <* reps[i].items | 
          'EXPLICIT_GEOMETRIC_CONSTRAINT_SCHEMA.EXPLICIT_GEOMETRIC_CONSTRAINT' IN TYPEOF(q));
        IF SIZEOF(QUERY(r <* svri | 
          item IN r.reference_elements)) = 0
        THEN
          RETURN(TRUE);
        END_IF;
      END_REPEAT;
    END;
  END_IF;

  RETURN(FALSE); -- no invalid cases have been found

END_FUNCTION;

*)

FUNCTION make_numeric_set(start, delta : NUMBER; 
                          incs         : maths_integer) 
                                       : SET [2:?] OF NUMBER;

  LOCAL
    i : INTEGER;
    numeric_set : SET[2:?] OF NUMBER := [start, (start + delta)];
  END_LOCAL;

  IF incs > 1 THEN REPEAT i := 2 TO incs;
                     numeric_set := numeric_set + (start + (i*delta));
                   END_REPEAT;
  END_IF;
  RETURN(numeric_set);
END_FUNCTION;

FUNCTION validate_attribute_id(attid : attribute_identifier) : BOOLEAN;

  CONSTANT
    letters      : SET[52:52] OF STRING := 
      ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p',
       'q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F',
       'G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V',
       'W','X','Y','Z'];
    numbers_etc  : SET[15:15] OF STRING := 
      ['0','1','2','3','4','5','6','7','8','9','_','[',']','.','\'];
    valid_chars  : SET[67:67] OF STRING := letters + numbers_etc;
  END_CONSTANT;

  LOCAL
    id_length : INTEGER := LENGTH(attid);
    id_valid  : BOOLEAN := TRUE;
    i         : INTEGER;
  END_LOCAL;

  -- check that indentifier starts with a letter

  IF NOT (attid[1] IN letters) THEN 
    id_valid := FALSE; 
  END_IF;
  
  -- check that no invalid characters occur subsequently

  REPEAT i := 2 TO id_length
   WHILE id_valid = TRUE;
    IF NOT (attid[i] IN valid_chars) THEN 
      id_valid := FALSE;
    END_IF;
  END_REPEAT;
  RETURN(id_valid);

END_FUNCTION;




END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7924 - ISO/CD-TS - 10303-1813 Parametric representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7361
*)
(* UNDER DEVELOPMENT *)
SCHEMA Parametric_representation_arm;

USE FROM Foundation_representation_arm; --  ISO/TS 10303-1006

ENTITY Definitional_representation
  SUBTYPE OF (Representation);
  SELF\Representation.context_of_items : Parametric_representation_context;
END_ENTITY; 

ENTITY Parametric_representation_context
  SUBTYPE OF (Representation_context);
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7702 - ISO/TS 10303-1022 Part and version identification - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6051
*) 


SCHEMA Part_and_version_identification_arm;

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Part
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Part_version
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Part;
END_ENTITY;

END_SCHEMA;  -- Part_and_version_identification_arm
(*
   ISO TC184/SC4/WG12 N7783 - ISO/TS 10303-1770 Part and zone laminate tables - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6249
*)

SCHEMA Part_and_zone_laminate_tables_arm;

USE FROM Composite_constituent_shape_arm; -- ISO/TS 10303-1767

USE FROM Ply_orientation_specification_arm; -- ISO/TS 10303-1772

USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032

USE FROM Stock_material_arm; -- ISO/TS 10303-1771


  TYPE component_class_for_assembly = SELECT 
    (Composite_assembly,
     Filament_laminate,
     Part_view_definition,     
     Ply,
     Ply_laminate,
     Processed_core);
  END_TYPE;

 TYPE filament_assembly_material = SELECT 
    (Braided_assembly,
     Filament_laminate,
     Woven_assembly);
  END_TYPE;


  TYPE thickness_laminate_table_component = SELECT 
    (Filament_laminate,
     Ply,
     Processed_core);
  END_TYPE;

  ENTITY Composite_assembly
    SUBTYPE OF (Constituent_part);
      layup_part : Composite_assembly_table;
      shape      : OPTIONAL composite_assembly_shape;
  END_ENTITY;

  ENTITY Composite_assembly_sequence_definition;
    components_in_sequence : BAG [1:?] OF component_class_for_assembly;
  END_ENTITY;

  ENTITY Composite_assembly_table
    SUBTYPE OF (Part_laminate_table);
      sequence_groups : LIST [2:?] OF Composite_assembly_sequence_definition;
  END_ENTITY;

  ENTITY Constituent_part
    SUPERTYPE OF (ONEOF(Ply, Ply_piece, Ply_laminate, Filament_laminate, Processed_core, Composite_assembly))
    SUBTYPE OF (Part_view_definition);
      SELF\Product_view_definition.id RENAMED constituent_part_identification  : STRING;
      weight                                                                   : OPTIONAL Mass_data_element;  
  END_ENTITY;

  ENTITY Edge_zone_shape
    SUBTYPE OF (Zone_structural_makeup_shape_representation);
      boundary : boundary_class_zone;
  END_ENTITY;

  ENTITY Filament_laminate
    SUBTYPE OF (Constituent_part);
      made_from : Filament_assembly_material;
      shape     : OPTIONAL Filament_laminate_shape;
  END_ENTITY;

  ENTITY Filament_laminate_shape;
    cross_section : Shape_description_association;
  END_ENTITY;

  ENTITY Laminate_table
    SUPERTYPE OF (ONEOF(Part_laminate_table, Zone_structural_makeup))
    SUBTYPE OF (Part_view_definition);
      basis             : Reinforcement_orientation_basis;
      resulting_surface : OPTIONAL Surface;
      base_surface      : OPTIONAL Surface_with_direction;
  END_ENTITY;

  ENTITY Part_laminate_table
    SUPERTYPE OF (ONEOF(Composite_assembly_table, Ply_laminate_table))
    SUBTYPE OF (Laminate_table);
  END_ENTITY;

  ENTITY Percentage_laminate_table
    SUBTYPE OF (Zone_structural_makeup);
      table_components : SET [1:?] OF Percentage_ply;
      total_thickness  : Length_data_element;
  END_ENTITY;

  ENTITY Percentage_ply;
    strength_orientation  : OPTIONAL Ply_orientation_angle;
    material              : Stock_material;
    makeup_and_properties : OPTIONAL Zone_structural_makeup;
    volume_percent        : Ratio_data_element;
  END_ENTITY;

  ENTITY Ply
    SUBTYPE OF (Constituent_part);
      constituents         : OPTIONAL LIST [1:?] OF Ply_piece;
      ply_thickness        : Length_data_element;
      material_orientation : Direction_of_fiber_orientation_within_a_ply;
      material_type        : ply_stock_material;
      shape                : OPTIONAL Ply_shape;
    DERIVE
      material_orientation_angle : Ply_orientation_angle := material_orientation.orientations[1]; 
  END_ENTITY;

  ENTITY Ply_laminate
    SUBTYPE OF (Constituent_part);
      shape     : OPTIONAL ply_laminate_shape;
      ply_table : Ply_laminate_table;
  END_ENTITY;

  ENTITY Ply_laminate_sequence_definition;
    plies_in_sequence : SET [1:?] OF Ply;
  END_ENTITY;

  ENTITY Ply_laminate_table
    SUBTYPE OF (Part_laminate_table);
      sequence : LIST [2:?] OF Ply_laminate_sequence_definition;
  END_ENTITY;

  ENTITY Ply_piece
    SUBTYPE OF (Constituent_part);
      shape        : OPTIONAL ply_piece_shape;
      warp_surface : LOGICAL;
  END_ENTITY;

  ENTITY Point_zone_shape
    SUBTYPE OF (Zone_structural_makeup_shape_representation);
      location : Point;
  END_ENTITY;

  ENTITY Processed_core
    SUBTYPE OF (Constituent_part);
      added_material           : OPTIONAL LIST [0:?] OF Ply;
      cell_direction           : Direction_of_fiber_orientation_within_a_ply;
      made_from_stock          : Stock_core;
      made_from_processed_core : OPTIONAL SET [1:?] OF Processed_core;
      shape                    : OPTIONAL core_shape;
    DERIVE
      cell_orientation_angle   : Ply_orientation_angle := cell_direction.orientations[1]; 
  END_ENTITY;

  ENTITY Smeared_material
    SUBTYPE OF (Zone_structural_makeup);
      total_thickness : Length_data_element;
  END_ENTITY;

  ENTITY Surface_with_direction;
    defining_surface   : Surface;
    material_direction : Direction;
  END_ENTITY;

  ENTITY Thickness_laminate_table
    SUBTYPE OF (Zone_structural_makeup);
      table_components : LIST [2:?] OF thickness_laminate_table_component;
  END_ENTITY;

  ENTITY Zone_structural_makeup
    SUPERTYPE OF (ONEOF((Thickness_laminate_table AND Smeared_material), (Percentage_laminate_table AND Smeared_material), Thickness_laminate_table, Percentage_laminate_table, Smeared_material))
    SUBTYPE OF (Laminate_table);
      boundary : OPTIONAL Zone_structural_makeup_shape_representation;
  END_ENTITY;

  ENTITY Zone_structural_makeup_shape_representation
    SUPERTYPE OF (ONEOF(Point_zone_shape, Edge_zone_shape));
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7744 - ISO/TS 10303-1115 Part collection - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6914
*)

SCHEMA Part_collection_arm;

USE FROM Product_occurrence_arm;

  ENTITY Collected_item_association
    SUBTYPE OF (Product_occurrence_definition_relationship);
      SELF\Product_occurrence_definition_relationship.relating_view : Collection_definition;
    WHERE
      WR1: NOT ('PART_COLLECTION_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Collection_definition
    SUBTYPE OF (Part_view_definition);
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N1326 - ISO/TS 10303-1055 Part definition relationship - EXPRESS ARM
*)
  
SCHEMA Part_definition_relationship_arm;
 
USE FROM Product_view_definition_relationship_arm;
USE FROM Part_view_definition_arm;
USE FROM Value_with_unit_arm;
      
ENTITY Make_from_relationship
  SUBTYPE OF (View_definition_usage);
  SELF\View_definition_relationship.relating_view: Part_view_definition;
  SELF\View_definition_relationship.related_view: Part_view_definition;
  quantity  : OPTIONAL Value_with_unit;
  priority  : OPTIONAL INTEGER;
WHERE
WR1: SELF\View_definition_relationship.relating_view :<>: 
  SELF\View_definition_relationship.related_view ;
WR2: NOT(EXISTS(quantity)) XOR 
	((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) XOR (quantity.value_component > 0));
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7894 - ISO/TS 10303-1807 General part feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7331
*)

SCHEMA Part_shape_arm;

USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032
USE FROM Feature_and_connection_zone_arm; --          ISO/TS 10303-1671

ENTITY Part_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : Part_view_definition;
END_ENTITY;  

ENTITY Part_shape_element
  SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Part_shape; 
END_ENTITY;  

ENTITY General_part_feature
  SUBTYPE OF (Definitional_shape_element, Part_shape_element);
END_ENTITY;  

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N8038 - ISO/TS 10303-1023 Part view definition - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7454
*) 


SCHEMA Part_view_definition_arm;

USE FROM Part_and_version_identification_arm;    -- ISO/TS 10303-1022

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

ENTITY Part_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Part_version;
  SELF\Product_view_definition.initial_context: Part_view_definition_context;
  SELF\Product_view_definition.additional_contexts: SET [0:?] OF Part_view_definition_context;
END_ENTITY;

ENTITY Part_view_definition_context
  SUBTYPE OF (View_definition_context);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')
                        |  NOT ( 'PART_VIEW_DEFINITION_ARM.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
  WR2: SIZEOF ( QUERY ( pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')
                        |  NOT ( 'PART_VIEW_DEFINITION_ARM.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) ) =0 ;
END_ENTITY;

RULE part_view_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'PART_VIEW_DEFINITION_ARM.PART_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'PART_VIEW_DEFINITION_ARM.PART_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;  -- Part_view_definition_arm
(*
 ISO TC184/SC4/WG12 N2921 - ISO/TS 10303-1011 Person organization - EXPRESS ARM
*)
 


SCHEMA Person_organization_arm;


TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 

ENTITY Address;
  name : OPTIONAL STRING;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
WHERE
  WR1: (EXISTS (street_number) OR EXISTS (street) OR EXISTS (postal_box) OR EXISTS (town) OR EXISTS (region) OR EXISTS (postal_code) OR EXISTS (country) OR EXISTS (internal_location) OR EXISTS (facsimile_number) OR EXISTS (telephone_number) OR EXISTS (electronic_mail_address) OR EXISTS (telex_number));
END_ENTITY;

ENTITY Address_assignment;
  address_type : OPTIONAL STRING;
  assigned_address : Address;
  located_person_organizations : SET[1:?] OF organization_or_person_in_organization_select;
END_ENTITY;

ENTITY Organization;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;

ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : Organization;
  related_organization : Organization;
END_ENTITY;

ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL LIST[1:?] OF STRING;
  prefix_titles : OPTIONAL LIST[1:?] OF STRING;
  suffix_titles : OPTIONAL LIST[1:?] OF STRING;
END_ENTITY;

ENTITY Person_in_organization;
  concerned_person : Person;
  containing_organization : Organization;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Person_organization_arm
(*
ISO TC184/SC4/WG12 N7122 - ISO/TS 10303-1013 Person organization assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1090
*)
  
SCHEMA Person_organization_assignment_arm;

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011


TYPE organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role : STRING;
  items : SET[1:?] OF organization_or_person_in_organization_item;
END_ENTITY;

END_SCHEMA;  -- Person_organization_assignment_arm
(*
 ISO TC184/SC4/WG12 N5449 - ISO/TS 10303-1215 Physical breakdown - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4946
*) 

SCHEMA Physical_breakdown_arm;

USE FROM Product_breakdown_arm;    -- ISO/TS 10303-1248

  ENTITY Physical_breakdown
    SUBTYPE OF (Breakdown);
  END_ENTITY;

  ENTITY Physical_breakdown_context
    SUBTYPE OF (Breakdown_context);
      SELF\Breakdown_context.breakdown         : Physical_breakdown_version;
      SELF\Breakdown_context.breakdown_element : Physical_element_definition;
  END_ENTITY;

  ENTITY Physical_breakdown_version
    SUBTYPE OF (Breakdown_version);
      SELF\Breakdown_version.of_product : Physical_breakdown;
  END_ENTITY;

  ENTITY Physical_element
    SUBTYPE OF (Breakdown_element);
  END_ENTITY;

  ENTITY Physical_element_definition
    SUBTYPE OF (Breakdown_element_definition);
      SELF\Breakdown_element_definition.defined_version : Physical_element_version;
  END_ENTITY;

  ENTITY Physical_element_usage
    SUBTYPE OF (Breakdown_element_usage);
      SELF\Breakdown_element_usage.parent_element : Physical_element_definition;
      SELF\Breakdown_element_usage.child_element  : Physical_element_definition;
  END_ENTITY;

  ENTITY Physical_element_version
    SUBTYPE OF (Breakdown_element_version);
      SELF\Breakdown_element_version.of_product : Physical_element;
  END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7765 - ISO/TS 10303-1721 Physical component feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6492
*)

SCHEMA Physical_component_feature_arm; 

	USE FROM Component_feature_arm;	-- ISO/TS 10303-1657

  ENTITY Physical_component_feature
    SUBTYPE OF (Component_feature);
  END_ENTITY;

  ENTITY Physical_component_terminal
    SUBTYPE OF (Component_terminal,
 			Physical_component_feature);
      SELF\shape_element.description RENAMED terminal_type : OPTIONAL STRING;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6252 - ISO/TS 10303-1308 Picture representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5452
*)

SCHEMA Picture_representation_arm;

USE FROM Binary_representation_arm; -- ISO/TS 10303-1369
USE FROM External_item_identification_assignment_arm; -- ISO/TS 10303-1128
USE FROM Presentation_hierarchy_arm; -- ISO/TS 10303-1330
   
  CONSTANT 
    pre_defined_picture_representation_types : SET [0:?] OF STRING := [ 'JPEG', 'PNG', 'TIFF', 'BMP', 'GIF']; 
  END_CONSTANT;  
 
  TYPE picture_representation_element_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Styled_element, 
     Axis_placement_2d);
  END_TYPE; 

  TYPE pr_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Externally_defined_picture_representation_item);
  END_TYPE;
  
  ENTITY Externally_defined_picture_representation_item 
    SUBTYPE OF (Picture_representation_item); 
    INVERSE 
      source : External_source_identification FOR item; 
    WHERE 
      WR1: NOT (SELF\Representation_item.name IN pre_defined_picture_representation_types); 
  END_ENTITY; 

  ENTITY Picture_representation 
    SUBTYPE OF (View_area); 
      SELF\Representation.items : SET[1:?] OF picture_representation_element_select;
    WHERE
      WR1: SIZEOF(QUERY(item <* items | 
        'PICTURE_REPRESENTATION_ARM.STYLED_ELEMENT' IN TYPEOF(item))) = 1;
      WR2: SIZEOF (QUERY (se <* QUERY (item <* SELF.items 
                   | ('PICTURE_REPRESENTATION_ARM.STYLED_ELEMENT' IN TYPEOF (item))) 
         | NOT ('PICTURE_REPRESENTATION_ARM.PICTURE_REPRESENTATION_ITEM' 
                IN TYPEOF (se\Styled_element.element)) )) = 0;
  END_ENTITY; 
 
  ENTITY Picture_representation_item 
    ABSTRACT SUPERTYPE OF( ONEOF (
    	Externally_defined_picture_representation_item,
    	Predefined_picture_representation_item))
    SUBTYPE OF (Bytes_representation_item);
  END_ENTITY; 
 
  ENTITY Predefined_picture_representation_item 
    SUBTYPE OF (Picture_representation_item); 
    WHERE 
      WR1: SELF\Representation_item.name IN pre_defined_picture_representation_types; 
  END_ENTITY; 

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N8278 - ISO/TS 10303-1733 Planned characteristic - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4146
*)

SCHEMA Planned_characteristic_arm;

	USE FROM Group_arm; --  ISO/TS 10303-1113
	USE FROM Production_rule_arm;	-- ISO/TS 10303-1739
	USE FROM Requirement_assignment_arm;	-- ISO/TS 10303-1233
	USE FROM Process_plan_arm; -- ISO/TS 10303-1803
 
  TYPE evaluation_result_value = ENUMERATION OF
    (pass,
     fail,
     undefined);
  END_TYPE;

  TYPE evaluation_type = ENUMERATION OF
    (not_evaluatable,
     invalid,
     valid,
     to_be_evaluated);
  END_TYPE;
  
  TYPE evaluation_activity_select = SELECT 
     (Activity,
      Process_operation_occurrence);
  END_TYPE;  

  TYPE pc_groupable_item = SELECT BASED_ON groupable_item WITH (
    Evaluated_characteristic);
  END_TYPE;

  ENTITY Evaluated_characteristic
    SUPERTYPE OF (Rule_based_evaluated_characteristic);
      id : OPTIONAL STRING;
      name : OPTIONAL STRING;
      description : OPTIONAL STRING;
      planned_product_data          : Planned_characteristic;
      product_data_status           : evaluation_type;
      product_characterization_data : Property_representation; -- was OPTIONAL SET[1:?] OF Property_value_representation;
      evaluation_result             : evaluation_result_value;
	  evaluation_activity           : OPTIONAL evaluation_activity_select;
  WHERE
    WR1: product_characterization_data.property.described_element :=: planned_product_data.reference_requirement.assigned_to;
  END_ENTITY;

  ENTITY Evaluation_view_definition
    SUBTYPE OF (Product_view_definition);
      evaluated_product_definition : Product_view_definition;
      evaluation_data              : SET[1:?] OF Evaluated_characteristic;
    WHERE
      WR1 : TYPEOF(SELF) <> TYPEOF(evaluated_product_definition);
  END_ENTITY;

  ENTITY Planned_characteristic;
      reference_requirement              : Requirement_assignment;
      planned_coordinated_characteristic : Property_representation; -- from the Requirement_view_definition, was Property_value_representation;
  WHERE
    WR1: planned_coordinated_characteristic.property.described_element :=: reference_requirement.assigned_requirement; -- same Requirement_view_definition
  END_ENTITY;

  ENTITY Rule_based_evaluated_characteristic
    SUBTYPE OF (Evaluated_characteristic);
      evaluating_rule : Rule_definition;
  END_ENTITY;
  
END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N5455 - ISO/TS 10303-1291 Plib class reference - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4840
*) 


SCHEMA Plib_class_reference_arm; 

USE FROM External_class_arm;    -- ISO/TS 10303-1275

USE FROM External_item_identification_assignment_arm;    -- ISO/TS 10303-1128

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013


  ENTITY Plib_class_reference;
    code         : STRING;
    supplier_bsu : STRING;
    version      : STRING;
  END_ENTITY;

END_SCHEMA; 


(*
 ISO TC184/SC4/WG12 N7753 - ISO/TS 10303-1772 Ply orientation specification - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5458
*)

SCHEMA Ply_orientation_specification_arm;

USE FROM Part_and_zone_laminate_tables_arm; -- ISO/CD-TS 10303-1770

  TYPE angle_select = SELECT 
    (Axis_placement_3d,
     Curve,
     Direction,
     Point_path);
  END_TYPE;

  ENTITY Direction_of_fiber_orientation_within_a_ply
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space; 
      SELF\Representation.items            : SET[1:?] OF angle_select;
    INVERSE 
      orientations : SET[1:1] OF Ply_orientation_angle FOR rep_1;
  END_ENTITY;

  ENTITY Draped_orientation_angle
    SUBTYPE OF (Ply_orientation_angle);
  END_ENTITY;

  ENTITY Laid_orientation_angle
    SUBTYPE OF (Ply_orientation_angle);
  END_ENTITY;

  ENTITY Ply_orientation_angle 
    SUPERTYPE OF (ONEOF (Draped_orientation_angle, 
                         Laid_orientation_angle)) 
    SUBTYPE OF (Representation_relationship);  
      angle_reference                        : angle_select; 
      SELF\Representation_relationship.rep_1 : Direction_of_fiber_orientation_within_a_ply;
      SELF\Representation_relationship.rep_2 : Reinforcement_orientation_basis; 
  END_ENTITY;

  ENTITY Point_and_vector
    SUBTYPE OF (Detailed_geometric_model_element);
      location : Point;
      vector : LIST [1:2] OF Direction;
  END_ENTITY;

  ENTITY Point_path
    SUBTYPE OF (Detailed_geometric_model_element);
      directions : LIST [1:?] OF Point_and_vector;
  END_ENTITY;

  ENTITY Reinforcement_orientation_basis
    SUBTYPE OF (Representation);
      SELF\Representation.context_of_items : Geometric_coordinate_space; 
      SELF\Representation.items            : SET [1:1] OF Axis_placement_3d; 
    DERIVE
      basis_location : Cartesian_point := SELF\Representation.items[1]\Axis_placement.origin;
      orientation    : Direction       := SELF\Representation.items[1]\Axis_placement.x_axis;
    INVERSE 
      tables       : SET[1:?] OF Laminate_table FOR basis; 
      orientations : SET[1:?] OF Ply_orientation_angle FOR rep_2;
  END_ENTITY;

  SUBTYPE_CONSTRAINT pos_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
    ONEOF (Point_and_vector,
           Point_path);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7669 - ISO/CD-TS - 10303-1820 Point direction model - EXPRESS ARM
*)

SCHEMA Point_direction_model_arm;

USE FROM Elemental_geometric_shape_arm;

TYPE point_or_point_direction_sequence = SELECT (
  Point_direction_sequence,
  Point_sequence);
END_TYPE;  

TYPE point_or_point_direction = SELECT (
  Point,
  Point_direction);
END_TYPE;  

ENTITY Point_direction_model
  SUBTYPE OF (Geometric_model);
  SELF\Representation.items : SET [1:?] OF point_or_point_direction_sequence;
END_ENTITY;

ENTITY Point_direction
  SUBTYPE OF (Detailed_geometric_model_element);
  origin : Cartesian_point;
  axis : Direction;
END_ENTITY;  

ENTITY Point_direction_sequence
  SUBTYPE OF (Detailed_geometric_model_element);
  items : LIST [1:?] OF point_or_point_direction;
END_ENTITY;  

ENTITY Point_sequence
  SUBTYPE OF (Detailed_geometric_model_element);
  items : LIST [1:?] OF Cartesian_point;
END_ENTITY;  

SUBTYPE_CONSTRAINT pdim_exclusive_detailed_geometric_model_element FOR Detailed_geometric_model_element;
  ABSTRACT SUPERTYPE;
  ONEOF (Point_direction, Point_direction_sequence, Point_sequence, Point);
END_SUBTYPE_CONSTRAINT; 

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7798 - ISO/TS 10303-1760 Pre defined product data management specializations - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5546
*)
SCHEMA Pre_defined_product_data_management_specializations_arm;

USE FROM Activity_arm; -- ISO/TS 10303-1047
USE FROM Approval_arm; -- ISO/TS 10303-1012
USE FROM External_item_identification_assignment_arm; -- ISO/TS 10303-1128
USE FROM Person_organization_assignment_arm; -- ISO/TS 10303-1013
USE FROM Security_classification_arm; -- ISO/TS 10303-1015
USE FROM Work_request_arm; -- ISO/TS 10303-1042

CONSTANT
  Pre_defined_activity_relationship_types : SET OF STRING := [
	'alternative',
	'decomposition',
	'derivation',
	'exclusiveness',
	'precedence',
	'sequence',
	'simultaneity'];

  Pre_defined_security_classification_types : SET OF STRING := [
	'unclassified',
	'classified',
	'proprietary',
	'confidential',
	'secret',
	'top secret'];
	
  Pre_defined_address_assignment_types : SET OF STRING := [
	'delivery address',
	'postal address',
	'visitor address'];
	
  Pre_defined_organization_or_person_in_organization_assignment_types : SET OF STRING := [
	'author',
	'classification officer',
	'creator',
	'custodian',
	'customer',
	'design supplier',
	'editor',
	'id owner',
	'location',
	'manufacturer',
	'owner',
	'read access',
	'supplier',
	'wholesaler',
	'write access',
	'organization in contract'];

  Pre_defined_approval_status_types : SET OF STRING := [
	'approved',
	'disapproved',
	'withdrawn',
	'not yet approved']	;

  Pre_defined_approval_types : SET OF STRING := [
	'disposition',
	'equipment order',
	'planning'];
	
  Pre_defined_date_or_date_time_assignment_types : SET OF STRING := [
	'creation',
	'installation',
	'production',
	'registration',
	'update',
	'planned',
	'actual',
	'start date',
	'end date',
	'release date',
	'request date'];
	
  Pre_defined_work_request_types : SET OF STRING := [
	'change of standard',
	'cost reduction',
	'customer rejection',
	'customer request',
	'durability improvement',
	'government regulation',
	'production alignment',
	'procurement alignment',
	'production relief',
	'production requirement',
	'quality improvement',
	'security reason',
	'standardization',
	'supplier request',
	'technical improvement',
	'tool improvement'];
	
  Pre_defined_work_request_status_types : SET OF STRING := [
	'in work',
	'issued',
	'proposed',
	'resolved'];
END_CONSTANT;

  TYPE pdpdms_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
    Externally_defined_activity_relationship,
    Externally_defined_security_classification,
    Externally_defined_address_assignment,
    Externally_defined_organization_or_person_in_organization_assignment,
    Externally_defined_approval_status,
    Externally_defined_approval,
    Externally_defined_date_or_date_time_assignment,
    Externally_defined_work_request,
    Externally_defined_work_request_status);
  END_TYPE;
  
  ENTITY Externally_defined_activity_relationship
    SUBTYPE OF (Activity_relationship);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types);
  END_ENTITY;

  ENTITY Externally_defined_security_classification
    SUBTYPE OF (Security_classification);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Security_classification.classification_level IN Pre_defined_security_classification_types);
  END_ENTITY;

  ENTITY Externally_defined_address_assignment
    SUBTYPE OF (Address_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: (EXISTS(SELF\Address_assignment.address_type)) AND
        (NOT (SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types));
  END_ENTITY;

  ENTITY Externally_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF (Organization_or_person_in_organization_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types);
  END_ENTITY;

  ENTITY Externally_defined_approval_status
    SUBTYPE OF (Approval_status);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Approval_status.status_name IN Pre_defined_approval_status_types);
  END_ENTITY;

  ENTITY Externally_defined_approval
    SUBTYPE OF (Approval);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Approval.purpose IN Pre_defined_approval_types);
  END_ENTITY;

  ENTITY Externally_defined_date_or_date_time_assignment
    SUBTYPE OF (Date_or_date_time_assignment);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types);
  END_ENTITY;

  ENTITY Externally_defined_work_request
    SUBTYPE OF (Work_request);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Work_request.purpose IN Pre_defined_work_request_types);
  END_ENTITY;

  ENTITY Externally_defined_work_request_status
    SUBTYPE OF (Work_request_status);
    INVERSE
      source : External_source_identification FOR item;
    WHERE
      WR1: NOT (SELF\Work_request_status.status IN Pre_defined_work_request_status_types);
  END_ENTITY;

  ENTITY Person_in_organization_relationship;
    description   : OPTIONAL STRING; 
    relating      : Person_in_organization;
    related       : Person_in_organization;
    relation_type : STRING;
  END_ENTITY;

  ENTITY Pre_defined_activity_relationship
    SUBTYPE OF (Activity_relationship);
    WHERE
      WR1: SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types;
  END_ENTITY;

  ENTITY Pre_defined_security_classification
    SUBTYPE OF (Security_classification);
    WHERE
      WR1: SELF\Security_classification.classification_level IN Pre_defined_security_classification_types;
  END_ENTITY;

  ENTITY Pre_defined_address_assignment
    SUBTYPE OF (Address_assignment);
    WHERE
      WR1: SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types;
  END_ENTITY;

  ENTITY Pre_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF (Organization_or_person_in_organization_assignment);
    WHERE
      WR1: SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types; 
  END_ENTITY;

  ENTITY Pre_defined_approval_status
    SUBTYPE OF (Approval_status);
    WHERE
      WR1: SELF\Approval_status.status_name IN Pre_defined_approval_status_types;
  END_ENTITY;

  ENTITY Pre_defined_approval
    SUBTYPE OF (Approval);
    WHERE
      WR1: SELF\Approval.purpose IN Pre_defined_approval_types;
  END_ENTITY;

  ENTITY Pre_defined_date_or_date_time_assignment
    SUBTYPE OF (Date_or_date_time_assignment);
    WHERE
      WR1: SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types;
  END_ENTITY;

  ENTITY Pre_defined_work_request
    SUBTYPE OF (Work_request);
    WHERE
      WR1: SELF\Work_request.purpose IN Pre_defined_work_request_types;
  END_ENTITY;
  
  ENTITY Pre_defined_work_request_status
    SUBTYPE OF (Work_request_status);
    WHERE
      WR1: SELF\Work_request_status.status IN Pre_defined_work_request_status_types;
  END_ENTITY;
 
  SUBTYPE_CONSTRAINT pdpdms_activity_relationship_subtypes FOR Activity_relationship;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_activity_relationship,
           Externally_defined_activity_relationship);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_security_classification_subtypes FOR Security_classification;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_security_classification,
           Externally_defined_security_classification);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_address_assignment_subtypes FOR Address_assignment;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_address_assignment,
           Externally_defined_address_assignment);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_organization_or_person_in_organization_assignment_subtypes FOR Organization_or_person_in_organization_assignment;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_organization_or_person_in_organization_assignment,
           Externally_defined_organization_or_person_in_organization_assignment);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_approval_status_subtypes FOR Approval_status;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_approval_status,
           Externally_defined_approval_status);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_approval_subtypes FOR Approval;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_approval,
           Externally_defined_approval);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_date_or_date_time_assignment_subtypes FOR Date_or_date_time_assignment;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_date_or_date_time_assignment,
           Externally_defined_date_or_date_time_assignment);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_work_request_subtypes FOR Work_request;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_work_request,
           Externally_defined_work_request);
  END_SUBTYPE_CONSTRAINT;

  SUBTYPE_CONSTRAINT pdpdms_work_request_status_subtypes FOR Work_request_status;
    ABSTRACT SUPERTYPE;
    ONEOF (Pre_defined_work_request_status,
           Externally_defined_work_request_status);
  END_SUBTYPE_CONSTRAINT;
  
END_SCHEMA;
(*
	ISO TC184/SC4/WG12 N5461 - ISO/TS 10303-1330 Presentation hierarchy - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N4783
*)

SCHEMA Presentation_hierarchy_arm;

  USE FROM Appearance_assignment_arm;  -- ISO/CD-TS 10303-1001

  USE FROM Contextual_shape_positioning_arm; -- ISO/TS 10303-1027

  TYPE area_select = EXTENSIBLE SELECT
    (View_area);
  END_TYPE; 

  TYPE presentation_association_select = EXTENSIBLE GENERIC_ENTITY SELECT; 
  END_TYPE;

  TYPE view_area_element_select = EXTENSIBLE GENERIC_ENTITY SELECT ( 
     Styled_element, 
     View_area_replication, 
     Axis_placement_2d); 
  END_TYPE;   

  TYPE view_area_relation_type = ENUMERATION OF
    (copy,
     derivation,
     hierarchy,
     substitution,
     unspecified);
  END_TYPE;

  TYPE view_area_replication_model = SELECT 
    (View_area, View); 
  END_TYPE;

  TYPE view_element_select = EXTENSIBLE GENERIC_ENTITY SELECT ( 
     Styled_element, 
     Axis_placement_2d); 
  END_TYPE;   

  TYPE view_relation_type = ENUMERATION OF
    (dependency,
     unspecified);
  END_TYPE;

  ENTITY Presentation_set;
    areas : SET[1:?] OF View_area; 
  END_ENTITY;

  ENTITY Presentation_set_assignment; 
    associated_presentation : Presentation_set;
    is_describing           : presentation_association_select;
  END_ENTITY;

  ENTITY View 
    SUBTYPE OF (Styled_model); 
      SELF\Representation.items : SET [1:?] OF view_element_select; 
  WHERE 
    WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;      
  END_ENTITY;   

  ENTITY View_area
    SUBTYPE OF (Styled_model); 
      size : Planar_box;  
      SELF\Representation.items : SET [1:?] OF view_area_element_select; 
    WHERE 
      WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;
  END_ENTITY; 

  ENTITY View_area_assignment;
    associated_view_area : View_area;
    is_describing        : presentation_association_select;
  END_ENTITY;

  ENTITY View_area_relationship;
    relation_type : view_area_relation_type;
    description   : OPTIONAL STRING;
    relating      : View_area;
    related       : View_area;
  END_ENTITY;

  ENTITY View_area_replication 
    SUBTYPE OF (Styled_model_replication); 
      SELF\Styled_model_replication.replicated_model : view_area_replication_model; 
  END_ENTITY; 

  ENTITY View_relationship;
    relation_type : view_relation_type;
    description   : OPTIONAL STRING;
    relating      : View;
    related       : View;
  END_ENTITY;

  SUBTYPE_CONSTRAINT ph_styled_model_subtypes FOR Styled_model;
    ONEOF (View,
      View_area);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7819 - ISO/TS 10303-1791 Primitive solids - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6917
*)


SCHEMA Primitive_solids_arm;

USE FROM Basic_geometry_arm;   -- ISO/TS 10303-1652

ENTITY Circular_cone
   SUBTYPE OF (Detailed_geometric_model_element);
   axis_direction : Direction;
   axis_point : Cartesian_point;
   height     : length_measure;
   radius     : length_measure;
   semi_angle : plane_angle_measure;
 WHERE
   WR1: radius >= 0.0;
   WR2 : height > 0.0;
 END_ENTITY;

 ENTITY Circular_cylinder
   SUBTYPE OF (Detailed_geometric_model_element);
   axis_direction : Direction;
   axis_point : Cartesian_point;
   height     : length_measure;
   radius     : length_measure;
  WHERE
   WR1: radius > 0.0;
   WR2: height > 0.0; 
 END_ENTITY;

 ENTITY Sphere
   SUBTYPE OF (Detailed_geometric_model_element);
   radius : length_measure;
   centre : Cartesian_point;
 WHERE
    WR1: radius > 0.0;
 END_ENTITY;

ENTITY Rectangular_block
   SUBTYPE OF (Detailed_geometric_model_element);
   corner_location : Axis_placement_3d;
   xlength   : length_measure;
   width     : length_measure;
   height    : length_measure;
 WHERE
    WR1: xlength > 0.0;
    WR2: width > 0.0;
    WR3: height > 0.0;
 END_ENTITY;
 
ENTITY Torus
   SUBTYPE OF (Detailed_geometric_model_element);
   axis_direction : Direction;
   axis_point : Cartesian_point;
   radius       : length_measure;
   minor_radius : length_measure;
 WHERE
   WR1: radius > minor_radius;
   WR2: minor_radius > 0.0;
 END_ENTITY;

SUBTYPE_CONSTRAINT ps_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
  ONEOF (Circular_cone,
         Circular_cylinder,
         Sphere,
         Rectangular_block,
         Torus);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA; -- Primitive_solids_arm
(*
 ISO TC184/SC4/WG12 N7696 - ISO/TS 10303-1317 Procedural shape model - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5464
*)

SCHEMA Procedural_shape_model_arm;

USE FROM Elemental_geometric_shape_arm; -- ISO/CD-TS 10303-1004

USE FROM Elemental_topology_arm; -- ISO/TS 10303-1005

  TYPE shape_model_element = SELECT
    (Detailed_topological_model_element,
     Detailed_geometric_model_element);
  END_TYPE;

  ENTITY Explicit_procedural_shape_representation_relationship
    SUBTYPE OF (Representation_relationship);
      SELF\Representation_relationship.rep_1 : Procedural_shape_representation; 
      SELF\Representation_relationship.rep_2 : Geometric_model; 
    WHERE
      WR1 : NOT('PROCEDURAL_SHAPE_MODEL_ARM.PROCEDURAL_SHAPE_REPRESENTATION' 
           in TYPEOF(rep_2));
  END_ENTITY;

  ENTITY Explicit_procedural_geometric_representation_item_relationship;
      relating_item : Procedural_shape_representation_sequence; 
      related_item  : Detailed_geometric_model_element;
    WHERE
      WR1 : NOT('PROCEDURAL_SHAPE_MODEL_ARM.PROCEDURAL_SHAPE_REPRESENTATION_SEQUENCE' 
            IN TYPEOF(related_item)); 
  END_ENTITY;

  ENTITY Indirectly_selected_shape_elements
    SUBTYPE OF (User_selected_shape_elements);
      indirectly_selected_items : SET[1:?] OF shape_model_element;
  END_ENTITY;
 
  ENTITY Procedural_shape_representation
    SUBTYPE OF (Geometric_model);
      SELF\Representation.items: SET[1:?] OF Procedural_shape_representation_sequence;
  END_ENTITY;
   
  ENTITY Procedural_shape_representation_sequence
    SUBTYPE OF (Detailed_geometric_model_element);
      elements            : LIST [1:?] OF shape_model_element;
      suppressed_elements : SET[0:?] OF shape_model_element;
      rationale           : STRING;
  END_ENTITY;

  ENTITY User_selected_shape_elements
    SUBTYPE OF(Representation_item);
      selected_items : SET[1:?] OF shape_model_element; 
  END_ENTITY;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N5467 - ISO/TS 10303-1318 Procedural solid model - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4789
*)

SCHEMA Procedural_solid_model_arm;

USE FROM Procedural_shape_model_arm; -- ISO/CD-TS 10303-1317

  TYPE solid_select = SELECT
    (Modified_solid,
     Detailed_geometric_model_element);
  END_TYPE;
 
  ENTITY Modified_solid
    SUBTYPE OF (Detailed_geometric_model_element);
      rationale  : STRING;
      base_solid : solid_select;
  END_ENTITY;

  ENTITY Procedural_solid_representation_sequence
    SUBTYPE OF (Procedural_shape_representation_sequence);
  END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7927 - ISO/CD-TS - 10303-1803 Process plan - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7364
*)
(* UNDER DEVELOPMENT *)
SCHEMA Process_plan_arm;

USE FROM Activity_method_arm; -- ISO/TS 10303-1049
USE FROM Product_view_definition_arm; -- ISO/TS 10303-1019
USE FROM Support_resource_arm; -- ISO/TS 10303-1800
USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032
USE FROM Specification_control_arm; -- ISO/TS 10303-1112
USE FROM Item_definition_structure_arm; -- ISO/TS 10303-1345



TYPE process_operation_input_or_output_select = EXTENSIBLE GENERIC_ENTITY SELECT (
  Assembly_component_relationship,
  Part_view_definition,
  Product_occurrence);
END_TYPE; 

TYPE resource_definition_select = EXTENSIBLE GENERIC_ENTITY SELECT (
  Product_occurrence,
  Part_view_definition,
  Resource_requirement_type);
END_TYPE; 

TYPE process_state_relationship_direction = ENUMERATION OF (
  bidirectional_process_state_relationship,
  unidirectional_process_state_relationship);
END_TYPE;

ENTITY Resource_requirement_type; -- for descriptive_specification
  name : label;
  description : text;
END_ENTITY;

ENTITY Process_state_relationship
  SUBTYPE OF (Part_definition_relationship);
  direction : OPTIONAL process_state_relationship_direction;
END_ENTITY;

ENTITY Process_operation_definition;
  id : STRING;
  name : OPTIONAL label;
  process_type : STRING;
  description : OPTIONAL text;
  version_id : OPTIONAL STRING;
END_ENTITY;

ENTITY Process_operation_definition_relationship;
  relation_type : STRING;
  description : text;
  relating : process_operation_definition;
  related : process_operation_definition;
END_ENTITY;

ENTITY Process_operation_input_or_output;
  role : STRING;
  description : OPTIONAL text;
  operation : process_operation_occurrence;
  element : process_operation_input_or_output_select;
--  placement : OPTIONAL transformation;
  concerned_shape : SET [0:?] OF Shape_element;
END_ENTITY;

ENTITY Process_operation_occurrence;
  id : STRING;
  plan : process_plan;
--  is_defined_in : OPTIONAL cartesian_coordinate_space;
  operation_definition : Process_operation_definition;
END_ENTITY;

ENTITY Process_operation_occurrence_relationship;
  relation_type : STRING;
  description : OPTIONAL text;
  relating : Process_operation_occurrence;
  related : Process_operation_occurrence;
  waiting_time : OPTIONAL duration;
  cycle_time : OPTIONAL duration;
END_ENTITY;

ENTITY Process_operation_resource_assignment;
  reference_tool : BOOLEAN;
  operation : Process_operation_occurrence;
  reason : OPTIONAL STRING;
  resource_definition : resource_definition_select;
--  placement : OPTIONAL transformation;
END_ENTITY;

ENTITY Process_plan;
  plan_id : identifier;
  name : OPTIONAL label;
  description : OPTIONAL text;
  version_id : OPTIONAL identifier;
  produced_output : OPTIONAL SET [1:?] OF Part_version;
END_ENTITY;

ENTITY Process_plan_relationship;
  relation_type : STRING;
  description : OPTIONAL text;
  relating : Process_plan;
  related : Process_plan;
END_ENTITY;

ENTITY Same_time_machining_relationship
  SUBTYPE OF (Part_occurrence_relationship);  -- was item_instance_relationship
--  description : OPTIONAL text;
--  placement : OPTIONAL transformation_select;
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N5470 - ISO/TS 10303-1040 Process property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4952
*)


SCHEMA Process_property_assignment_arm; 

USE FROM Activity_arm;    -- ISO/TS 10303-1047

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


  TYPE characterized_activity_definition = EXTENSIBLE SELECT
    (Activity, 
    Activity_method);
  END_TYPE; 

  ENTITY Activity_property;
    name              : STRING;
    description       : STRING;
    described_element : characterized_activity_definition;
  END_ENTITY;

  ENTITY Activity_property_representation;
    description : OPTIONAL STRING;
    property    : Activity_property;
    rep         : Representation;
    role        : STRING;
  END_ENTITY;

  ENTITY Applied_independent_activity_property
    SUBTYPE OF (Activity_property);
      base_element_property : Independent_property;
    DERIVE
      SELF\Activity_property.name : STRING := base_element_property.property_type;
  END_ENTITY;

END_SCHEMA;


(*
 ISO TC184/SC4/WG12 N6737 - ISO/TS 10303-1387 Product analysis - EXPRESS ARM

*) 

SCHEMA Product_analysis_arm;

USE FROM Independent_property_arm;

ENTITY Behavioural_decomposition_of_temporal_spatial_domain;
  parts : SET [2 : ?] OF Temporal_spatial_domain;
  whole : Temporal_spatial_domain;
END_ENTITY;

ENTITY Domain_property;
  domain : Temporal_spatial_domain;
  property_type : Independent_property;
END_ENTITY;

ENTITY Physical_action_domain
SUBTYPE OF (Temporal_spatial_domain);
  initial : Physical_state_domain;
  final : Physical_state_domain;
END_ENTITY;

ENTITY Physical_product_domain
SUBTYPE OF (Temporal_spatial_domain);
  temporal_parts : SET [0: ?] OF Physical_action_domain;
END_ENTITY;

ENTITY Physical_state_domain
SUBTYPE OF (Temporal_spatial_domain);
END_ENTITY;

ENTITY Spatial_decomposition_of_temporal_spatial_domain;
  parts : SET [2 : ?] OF Temporal_spatial_domain;
  whole : Temporal_spatial_domain;
END_ENTITY;

ENTITY Temporal_decomposition_of_action_domain;
  parts : LIST [2 : ?] OF Physical_action_domain;
  whole : Physical_action_domain;
END_ENTITY;

ENTITY Temporal_spatial_domain;
  id : STRING;
  name : STRING;
  description : STRING;
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_temporal_spatial_domain FOR Temporal_spatial_domain;
  ABSTRACT SUPERTYPE;
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7930 - ISO/CD-TS - 10303-1812 Product and manufacturing annotation presentation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7367
*)
(* UNDER DEVELOPMENT *)
SCHEMA Product_and_manufacturing_annotation_presentation_arm;

USE FROM Product_and_manufacturing_information_with_nominal_3d_models_arm;

ENTITY Pmi_annotation_presentation_shape
  SUBTYPE OF (Nominal_3d_model_shape);
WHERE
  WR1: 'PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXT' IN TYPEOF(described_element\Product_view_definition.additional_contexts); 
--  WR2: TRUE; -- must have at least one draughting_model of the ABREP
END_ENTITY;  
  

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7933 - ISO/CD-TS - 10303-1810 Product and manufacturing information view context - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7370
*)
(* UNDER DEVELOPMENT *)
SCHEMA Product_and_manufacturing_information_view_context_arm;

USE FROM Part_view_definition_arm; -- ISO/TS 10303-1023
USE FROM Document_assignment_arm; -- ISO/TS 10303-1122

TYPE mbgdt_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select  WITH (
  Model_based_view_context,
  Gdt_representation_view_context,
  Model_based_3d_annotation_presentation_view_context);
END_TYPE;

ENTITY Model_based_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'model based product geometry';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;
-- TYPE dimensioning_document = ENUMERATION (ISO, ASME);
-- END_TYPE;

ENTITY Gdt_representation_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'geometrical dimensioning and tolerancing representation';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
--  dimensioning_standard : dimensioning_document := ISO; -- some expression through the documents, see wr4, may help writing further rules
-- note: when we write the rules we will decide which derived attribute to use
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
  WR2: SIZEOF ( QUERY(pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') |
         NOT('PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(pvd.initial_context) ) ) ) = 0 ; 
        -- Part_view_definition.initial_context shall be of type Model_based_view_context 
  -- WR4: TRUE; -- must have at least either ISO 1101 or ASME Y14.5 as associated dimension standard document
END_ENTITY;

ENTITY Model_based_3d_annotation_presentation_view_context
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'model based 3D annotation presentation';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
  WR2: SIZEOF ( QUERY(pvd <* USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') |
         NOT('PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(pvd.initial_context) ) ) ) = 0 ; 
        -- Part_view_definition.initial_context shall be of type Model_based_view_context 
  -- WR4: TRUE; -- must have at least either ISO 1101, ISO 16792, ASME Y14.41 or ASME Y14.5 as associated model standard document
END_ENTITY;

ENTITY Surface_finish_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'surface finish';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Machining_feature_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'machining feature';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Material_specification_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'material specification';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Process_state_view_context 
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'process state';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Kinematic_mechanism_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'kinematic_mechanism';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT') ) =0 ;  -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT;
END_ENTITY;

ENTITY Kinematic_state_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'kinematic state';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;

ENTITY Motion_context  
  SUBTYPE OF (Part_view_definition_context);
DERIVE
  SELF\View_definition_context.application_domain : STRING := 'motion';
  SELF\View_definition_context.life_cycle_stage : STRING := 'design';
WHERE
  WR1: SIZEOF ( USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS') ) =0 ; -- there shall be no users in the role PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXT;
END_ENTITY;

SUBTYPE_CONSTRAINT pmi_part_view_definition_context FOR Part_view_definition_context;
  ONEOF (
    Gdt_representation_view_context, 
    Kinematic_mechanism_context,
    Kinematic_state_context,
    Model_based_view_context, 
    Model_based_3d_annotation_presentation_view_context,
    Motion_context,
    Surface_finish_view_context,
    Machining_feature_view_context,
    Material_specification_view_context,
    Process_state_view_context);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7936 - ISO/CD-TS - 10303-1811 Product and manufacturing information with nominal 3d models - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7373
*)

SCHEMA Product_and_manufacturing_information_with_nominal_3d_models_arm;

USE FROM Product_and_manufacturing_information_view_context_arm;
USE FROM Shape_property_assignment_arm; -- ISO/TS 10303-1032
USE FROM Advanced_boundary_representation_arm; -- ISO/TS 10303-1514
USE FROM Manifold_surface_arm; -- ISO/TS 10303-1509
USE FROM Manifold_subsurface_arm; -- ISO/TS 10303-1702
USE FROM Construction_geometry_arm; -- ISO/TS 10303-1131

TYPE advanced_face_model = SELECT (
  Advanced_brep_shape_representation, 
  Manifold_surface_shape_representation, 
  Manifold_subsurface_model);
END_TYPE;

ENTITY Nominal_3d_model_shape
  SUBTYPE OF (Associated_item_shape);
DERIVE
   SELF\Associated_item_shape.associated_model : advanced_face_model := SELF\Associated_item_shape.association\Property_definition_representation.used_representation;  
WHERE
  WR1: 'PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXT_ARM.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF(described_element\Product_view_definition.initial_context); 
  WR2: EXISTS(associated_model);
END_ENTITY;  

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N7268 - ISO/TS 10303-1164 Product as individual - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6827
*)


SCHEMA Product_as_individual_arm;

USE FROM Configuration_item_arm; -- ISO/TS 10303-1056

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017

USE FROM Product_version_arm;    -- ISO/TS 10303-1018

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

TYPE product_as_individual_identification_item = SELECT BASED_ON identification_item WITH 
   (Product_as_individual, 
    Product_as_individual_version);
END_TYPE; 

TYPE product_version_or_configuration = SELECT (
  Product_version, Product_configuration);
END_TYPE;

TYPE product_design_view_or_configuration = SELECT (
  Product_view_definition, Product_configuration);
END_TYPE;

ENTITY Product_as_individual
  SUBTYPE OF (Product);
END_ENTITY;

ENTITY Product_as_individual_version
  ABSTRACT SUPERTYPE OF (ONEOF (Product_as_planned,
                                Product_as_realized))
  SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Product_as_individual;
END_ENTITY;

ENTITY Product_as_individual_view
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Product_as_individual_version;
END_ENTITY;

ENTITY Product_as_planned
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;

ENTITY Product_as_realized
  SUBTYPE OF (Product_as_individual_version);
END_ENTITY;

ENTITY Product_design_to_individual;
  product_design : Product;
  individual_product : Product_as_individual;
END_ENTITY;

ENTITY Product_design_version_to_individual;
  product_design_version : product_version_or_configuration;
  individual_product : Product_as_individual_version;
END_ENTITY;

ENTITY Product_design_view_to_individual;
  product_as_individual_view : Product_as_individual_view;
  product_view_definition : product_design_view_or_configuration;
END_ENTITY;

ENTITY Product_planned_to_realized;
  planned_product : Product_as_planned;
  realized_product : Product_as_realized;
END_ENTITY;

END_SCHEMA;  -- Product_as_individual_arm

(*
   ISO TC184/SC4/WG12 N7939 - ISO/CD-TS - 10303-1804 Product as individual assembly and test - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7376
*)

SCHEMA Product_as_individual_assembly_and_test_arm;

USE FROM Planned_characteristic_arm; -- ISO/TS 10303-1733
USE FROM Product_as_individual_arm; -- ISO/TS 10303-1164
USE FROM Property_assignment_arm; -- ISO/TS 10303-1030
USE FROM Process_plan_arm;
USE FROM Activity_arm; -- ISO/TS 10303-1047

TYPE paiaata_activity_item = SELECT BASED_ON activity_item WITH (
  Applied_independent_test_result_property);
END_TYPE;

ENTITY Product_as_individual_assembly
  SUBTYPE OF (Assembly_component_relationship);
  
  SELF\Product_occurrence_definition_relationship.relating_view: Product_as_individual_view;
  SELF\Product_occurrence_definition_relationship.related_view: Product_as_individual_view;
  is_realization_of : Product_occurrence;
WHERE
  WR1: NOT(EXISTS(SELF\Assembly_component_relationship.quantity));
END_ENTITY; 

ENTITY Product_as_individual_test_result
  SUBTYPE OF (Product_as_individual_view);
END_ENTITY; 

ENTITY Applied_independent_test_result_property
  SUBTYPE OF (Applied_independent_property);
  SELF\Assigned_property.described_element : Product_as_individual_test_result;
END_ENTITY; 
  
ENTITY Applied_test_activity
  SUBTYPE OF (Applied_activity_assignment);
 SELF\Applied_activity_assignment.items : SET [1:?] OF Applied_independent_test_result_property;
DERIVE  
  SELF\Applied_activity_assignment.role : STRING := 'test activity';
END_ENTITY;

ENTITY Applied_process_operation_occurrence;
  items : SET [1:?] OF Applied_independent_test_result_property;
  source : Process_operation_occurrence;
END_ENTITY;

ENTITY Evaluated_characteristic_of_product_as_individual_test_result
  SUBTYPE OF (Evaluated_characteristic);
WHERE      
   WR1: 'PRODUCT_AS_INDIVIDUAL_ASSEMBLY_AND_TEST_ARM.APPLIED_INDEPENDENT_TEST_RESULT_PROPERTY' IN
        TYPEOF(SELF\Evaluated_characteristic.product_characterization_data.definition);
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7774 - ISO/TS 10303-1248 Product breakdown - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5473
*) 


SCHEMA Product_breakdown_arm;

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030


  TYPE breakdown_of_target = EXTENSIBLE GENERIC_ENTITY SELECT (
    Product_view_definition);
  END_TYPE;
  
  TYPE breakdown_element_realization_property_assignment_select = SELECT BASED_ON property_assignment_select WITH 
    (Breakdown_element_realization, 
     Breakdown_element_usage);
  END_TYPE; 

  TYPE breakdown_item = EXTENSIBLE SELECT
    (Breakdown_element_definition, 
     Breakdown_element_usage);
  END_TYPE; 

  TYPE product_item = EXTENSIBLE SELECT
    (Product_view_definition, 
     View_definition_usage);
  END_TYPE; 

  ENTITY Breakdown
    SUBTYPE OF (Product);
  END_ENTITY;

  ENTITY Breakdown_context;
    id                : STRING;
    name              : STRING;
    description       : OPTIONAL STRING;
    breakdown         : Breakdown_version;
    breakdown_element : Breakdown_element_definition;
  END_ENTITY;

  ENTITY Breakdown_element
    SUBTYPE OF (Product);
  END_ENTITY;

  ENTITY Breakdown_element_definition
    SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Breakdown_element_version;
  END_ENTITY;

  ENTITY Breakdown_element_realization
    SUBTYPE OF (Product_definition_element_relationship);
  END_ENTITY;

  ENTITY Breakdown_element_usage
    SUBTYPE OF (View_definition_usage);
      name : STRING;
      SELF\View_definition_relationship.relating_view RENAMED parent_element : Breakdown_element_definition;
      SELF\View_definition_relationship.related_view RENAMED child_element : Breakdown_element_definition;
  END_ENTITY;

  ENTITY Breakdown_element_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown_element;
  END_ENTITY;

  ENTITY Breakdown_of;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : Breakdown_version;
    of_target   : breakdown_of_target;
  END_ENTITY;
  
  ENTITY Breakdown_version
    SUBTYPE OF (Product_version);
      SELF\Product_version.of_product : Breakdown;
    INVERSE
      breakdown_of : SET[1:?] OF Breakdown_of FOR breakdown;
  END_ENTITY;

  ENTITY Product_definition_element_relationship;
    id          : STRING;
    name        : STRING;
    description : OPTIONAL STRING;
    breakdown   : breakdown_item;
    product     : product_item;
  END_ENTITY;

END_SCHEMA; 

(*
 ISO TC184/SC4/WG12 N7792 - ISO/TS 10303-1103 Product class - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6255
*)

SCHEMA Product_class_arm;

USE FROM Identification_assignment_arm;

USE FROM Product_concept_identification_arm;

USE FROM Group_arm;

TYPE expression_operator = ENUMERATION OF (or_operator, and_operator, oneof_operator, not_operator);
END_TYPE;

TYPE specification_operand_select = SELECT
		(Specification_expression, Specification);
END_TYPE;

TYPE id_for_class = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (product_class);
END_TYPE; 

TYPE specification_for_category = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item;
END_TYPE;

 ENTITY Class_category_association;
  associated_product_class : Product_class;
  mandatory : BOOLEAN;
  associated_category : Specification_category;
 END_ENTITY;

 ENTITY Class_condition_association;
  condition_type : STRING;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_condition : Specification_expression;
 END_ENTITY;

 ENTITY Class_inclusion_association;
  associated_product_class : Product_class;
  description : OPTIONAL STRING;
  associated_inclusion : Specification_inclusion;
 END_ENTITY;

 ENTITY Class_specification_association;
  associated_product_class : Product_class;
  association_type : STRING;
  associated_specification : Specification;
 END_ENTITY;

ENTITY Product_class
  SUBTYPE OF (Product_concept);
  version_id : OPTIONAL STRING;
  level_type : OPTIONAL STRING;
WHERE
WR1: NOT EXISTS(SELF\Product_concept.target_market);
END_ENTITY;

 ENTITY Product_class_relationship;
  description : OPTIONAL STRING;
  relating : Product_class;
  related : Product_class;
  relation_type : STRING;
 END_ENTITY;

 ENTITY Specification;
  id : STRING;
  version_id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  category : Specification_category;
  package : BOOLEAN;
 END_ENTITY;

 ENTITY Specification_category;
  id : STRING;
  description : STRING;
  implicit_exclusive_condition : BOOLEAN;
 END_ENTITY;

 ENTITY Specification_category_hierarchy;
  sub_category : Specification_category;
  super_category : Specification_category;
 END_ENTITY;

 ENTITY Specification_expression;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  operation : expression_operator;
  operand : SET[1:?] OF specification_operand_select;
 WHERE
 WR1: (operation <> not_operator) OR (SIZEOF(operand)=1); 
 END_ENTITY;

 ENTITY Specification_inclusion;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  if_condition : specification_operand_select;
  included_specification : specification_operand_select;
 END_ENTITY;


END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N1177 - ISO/TS 10303-1060 Product concept identification - EXPRESS ARM
*)
   
SCHEMA Product_concept_identification_arm;
   
ENTITY Market;
  name                      : STRING;
  market_segment_type       : OPTIONAL STRING;
END_ENTITY;

   
ENTITY Product_concept;
  id                        : STRING;
  name                      : STRING;
  description               : OPTIONAL STRING;
  target_market             : OPTIONAL Market;
UNIQUE
  UR1: id;
END_ENTITY;

   
END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N6749 - ISO/TS 10303-1231 Product data management - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5479
*) 


SCHEMA Product_data_management_arm;

USE FROM Configuration_effectivity_arm;    -- ISO/TS 10303-1058

USE FROM Document_management_arm;    -- ISO/TS 10303-1290

USE FROM Effectivity_application_arm;    -- ISO/TS 10303-1059

USE FROM External_class_arm;    -- ISO/TS 10303-1275

USE FROM Incomplete_data_reference_mechanism_arm;    -- ISO/TS 10303-1349

USE FROM Independent_property_representation_arm;    -- ISO/TS 10303-1038

USE FROM Process_property_assignment_arm;    -- ISO/TS 10303-1040

USE FROM Product_structure_arm;    -- ISO/TS 10303-1134

USE FROM Product_view_definition_properties_arm;    -- ISO/TS 10303-1034

USE FROM Time_interval_assignment_arm;    -- ISO/TS 10303-1365

USE FROM Work_order_arm;    -- ISO/TS 10303-1043


TYPE pdm_activity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_item WITH
  (Assembly_component_relationship,
   Item_usage_effectivity,
   Product_version,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

TYPE pdm_affected_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON affected_item_select WITH
  (Assembly_component_relationship,
   Assigned_property,
   Product_version,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

TYPE pdm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH
  (Activity,
   Applied_activity_assignment,
   Item_usage_effectivity,
   Work_request);
END_TYPE;

TYPE pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON certification_item WITH
  (Product_version_relationship);
END_TYPE;

TYPE pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH
  (Activity,
   Activity_method,
   Activity_method_assignment,
   Activity_property,
   Activity_relationship,
   Address,
   Address_assignment,
   Affected_items_assignment,
   Alternate_product_relationship,
   Applied_activity_assignment,
   Approval,
   Approval_assignment,
   Approval_relationship,
   Approval_status,
   Approving_person_organization,
   Assembly_component_relationship,
   Assembly_relationship_substitution,
   Assigned_property,
   Attribute_translation_assignment,
   Calendar_date,
   Certification,
   Certification_assignment,
   Class,
   Context_dependent_unit,
   Contract,
   Contract_assignment,
   Conversion_based_unit,
   Date_or_date_time_assignment,
   Date_time,
   Derived_unit,
   Directed_activity,
   Document_assignment,
   Effectivity,
   Event,
   Event_assignment,
   External_source_identification,
   File,
   File_relationship,
   Identification_assignment,
   Independent_property,
   Independent_property_relationship,
   Independent_property_representation,
   Language,
   Numerical_item_with_unit,
   Organization,
   Organization_or_person_in_organization_assignment,
   Organization_relationship,
   Person,
   Product,
   Product_concept,
   Product_configuration,
   Product_version,
   Product_version_relationship,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   Representation,
   Representation_context,
   Representation_item,
   Security_classification,
   Security_classification_assignment,
   String_representation_item,
   Uncertainty_with_unit,
   Value_with_unit,
   View_definition_context,
   View_definition_relationship,
   Work_order,
   Work_request,
   Work_request_status);
END_TYPE;

TYPE pdm_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_or_date_time_item WITH
  (Activity,
   Applied_activity_assignment,
   Work_request);
END_TYPE;

TYPE pdm_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH
  (Activity,
   Activity_method,
   Product_version_relationship,
   Shape_element,
   Shape_element_relationship,
   Work_request);
END_TYPE;

TYPE pdm_effectivity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON effectivity_item WITH
  (Assembly_component_relationship,
   Product_version,
   Product_view_definition,
   View_definition_relationship);
END_TYPE;

TYPE pdm_event_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON event_item WITH
  (Project);
END_TYPE;

TYPE pdm_external_class_assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assigned_name_select WITH
  (External_class_library);
END_TYPE;

TYPE pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH
  (Shape_element_relationship);
END_TYPE;

TYPE pdm_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH
  (Activity,
   Applied_activity_assignment,
   Approval,
   Contract,
   Product_configuration,
   Security_classification,
   Work_request);
END_TYPE;

TYPE pdm_project_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON project_item WITH
  (Activity,
   Product_concept);
END_TYPE;

TYPE pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH
  (Assembly_component_relationship);
END_TYPE;

TYPE pdm_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON string_select WITH
  (Approval,
   Approval_relationship,
   Approval_status,
   Assembly_component_relationship,
   Certification,
   Contract,
   Document_assignment,
   External_item_identification,
   File_relationship,
   Organization_relationship,
   Person_in_organization,
   Product,
   Product_version,
   Product_view_definition,
   Project,
   Project_assignment,
   Project_relationship,
   View_definition_relationship);
END_TYPE;

TYPE pdm_time_interval_item = SELECT BASED_ON time_interval_item WITH
  (Activity);
END_TYPE;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N7807 - ISO/TS 10303-1521 Product data quality criteria - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7178
*)

SCHEMA Product_data_quality_criteria_arm;

  USE FROM Foundation_representation_arm;

  USE FROM Product_data_quality_inspection_result_arm;

  REFERENCE FROM Support_resource_arm
    (bag_to_set);

  TYPE detailed_report_type = ENUMERATION OF
    (measured_element,
     inferior_quality_element);
  END_TYPE;

  TYPE summary_report_type = ENUMERATION OF
    (unspecified,
     conclusion_only,
     number_of_quality_defects,
     number_of_inspections_and_conclusion,
     full_statistics);
  END_TYPE;

  TYPE preferred_ordering = ENUMERATION OF
    (extremity_order,
     detected_order);
  END_TYPE;

  ENTITY Data_quality_criteria_representation
    SUBTYPE OF(Representation);
    WHERE
      WR1 :  SIZEOF( QUERY( q <* SELF\representation.items|
                                'PRODUCT_DATA_QUALITY_CRITERIA_ARM.' +
                                'DATA_QUALITY_CRITERION' IN TYPEOF(q))) > 0;
  END_ENTITY;

  ENTITY Data_quality_criterion
    SUBTYPE OF(Representation_item);
    WHERE
      WR1 : SIZEOF(QUERY(q <*
              bag_to_set( USEDIN(SELF,
                'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))
              |'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
               'DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION'
               IN TYPEOF(q)))=0;
  END_ENTITY;

  ENTITY Data_quality_measurement_requirement
    SUBTYPE OF(Representation_item);
    WHERE
      WR1 : SIZEOF(QUERY(q <*
              bag_to_set( USEDIN(SELF,
                'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))
              |'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
               'DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION'
               IN TYPEOF(q)))=0;
  END_ENTITY;

  ENTITY Data_quality_criterion_measurement_association;
      relating_representation_item : Data_quality_criterion;
      related_representation_item  : Data_quality_measurement_requirement;
  END_ENTITY;

  ENTITY Data_quality_assessment_specification;
      description : STRING;
  END_ENTITY;

  ENTITY Data_quality_criterion_assessment_association;
      criterion                : Data_quality_criterion;
      assessment_specification : Data_quality_assessment_specification;
  END_ENTITY;

  ENTITY Data_quality_assessment_measurement_association;
      assessment_specification : Data_quality_criterion_assessment_association;
      measurement_requirement  : Data_quality_criterion_measurement_association;
    WHERE
      WR1 : SELF.measurement_requirement.relating_representation_item :=:
            SELF.assessment_specification.criterion;
  END_ENTITY;

  ENTITY Data_quality_report_request
    ABSTRACT SUPERTYPE OF (ONEOF(summary_report_request, detailed_report_request));
      description                 : STRING;
      criterion_of_report_request : Data_quality_criterion;
  END_ENTITY;

  ENTITY Summary_report_request
    SUBTYPE OF(data_quality_report_request);
      summary_report_request_type : summary_report_type;
  END_ENTITY;

  ENTITY Detailed_report_request
    SUBTYPE OF(data_quality_report_request);
      detailed_report_request_type : detailed_report_type;
      report_sequence              : preferred_ordering;
  END_ENTITY;

  ENTITY Detailed_report_request_with_number_of_data
    SUBTYPE OF(detailed_report_request);
      number_of_data : INTEGER;
    DERIVE
      SELF\detailed_report_request.detailed_report_request_type:detailed_report_type:= measured_element;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7804 - ISO/TS 10303-1520 Product data quality definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7175
*)

SCHEMA Product_data_quality_definition_arm;

  USE FROM Product_data_quality_criteria_arm;

  USE FROM Product_data_quality_inspection_result_arm;

  USE FROM Product_view_definition_arm;

  USE FROM Date_time_assignment_arm;

  USE FROM Person_organization_assignment_arm;

  TYPE used_quality_representation_select = SELECT
    (Data_quality_criteria_representation,
     Data_quality_inspection_result_representation);
  END_TYPE;

  TYPE pdq_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON Date_or_date_time_item WITH
    (Data_quality_definition);
  END_TYPE;

  TYPE pqd_organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON Organization_or_person_in_organization_item WITH
    (Data_quality_definition);
  END_TYPE;

  ENTITY Data_quality_definition;
      description : STRING;
  END_ENTITY;

  ENTITY Data_quality_definition_representation_relationship;
      description         : STRING;
      definition          : Data_quality_definition;
      used_representation : used_quality_representation_select;
  END_ENTITY;

  ENTITY Product_data_and_data_quality_relationship;
      description  : STRING;
      product_data : Product_view_definition;
      data_quality : Data_quality_definition;
  END_ENTITY;

  ENTITY Software_for_data_quality_check;
      description      : STRING;
      software_name    : STRING;
      software_version : STRING;
      data_quality     : Data_quality_definition_representation_relationship;
  END_ENTITY;

  ENTITY Data_quality_definition_relationship;
      description                      : STRING;
      relating_data_quality_definition : Data_quality_definition;
      related_data_quality_definition  : Data_quality_definition;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7810 - ISO/TS 10303-1522 Product data quality inspection result - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7181
*)

SCHEMA Product_data_quality_inspection_result_arm;

  USE FROM Foundation_representation_arm;

  USE FROM Product_data_quality_criteria_arm;

  USE FROM Product_data_quality_definition_arm;

  USE FROM Product_view_definition_arm;

  REFERENCE FROM Support_resource_arm
    (bag_to_set);

  TYPE inspected_element_select = EXTENSIBLE GENERIC_ENTITY SELECT;
  END_TYPE;

  TYPE statistical_value_type = ENUMERATION OF
    (number_of_inspected_instances,
     number_of_quality_defects_detected);
  END_TYPE;

  ENTITY Data_quality_inspection_result_representation
    SUBTYPE OF(Representation);
      criteria_inspected : Data_quality_criteria_representation;
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                                'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
                                'DATA_QUALITY_INSPECTION_RESULT' IN TYPEOF(q))) > 0;
      WR2 : SIZEOF(inspected_product_view_definition(SELF)) > 0;
  END_ENTITY;

  ENTITY Data_quality_inspection_result
    SUBTYPE OF(Representation_item);
      criterion_inspected : Data_quality_criterion;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))
                          |'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;

  ENTITY Data_quality_inspection_result_with_judgement
    SUBTYPE OF(Data_quality_inspection_result);
      judgement : BOOLEAN;
  END_ENTITY;

  ENTITY Data_quality_inspection_report
    SUPERTYPE OF (ONEOF(Data_quality_inspection_criterion_report, Data_quality_inspection_instance_report))
    SUBTYPE OF(Representation_item);
      inspection_result : data_quality_inspection_result;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))
                          |'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;

  ENTITY Data_quality_inspection_criterion_report
    SUBTYPE OF(Data_quality_inspection_report);
      statistical_values : SET [1:2] OF data_quality_inspection_criterion_report_item;
    WHERE
      WR1 : SIZEOF(QUERY(i1<*bag_to_set(USEDIN(
              SELF\data_quality_inspection_report.
              inspection_result.criterion_inspected,
              'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
              'DATA_QUALITY_REPORT_REQUEST.CRITERION_OF_REPORT_REQUEST'))|
              'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
              'SUMMARY_REPORT_REQUEST'
            IN TYPEOF(i1)))>0;
      WR2 : (SIZEOF(SELF.statistical_values) = 1 ) OR 
            (SELF.statistical_values[1].value_type <>
             SELF.statistical_values[2].value_type);
  END_ENTITY;

  ENTITY Data_quality_inspection_criterion_report_item
    SUBTYPE OF(Representation_item);
      statistical_value : INTEGER;
      value_type        : statistical_value_type;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))
                          |'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;

  ENTITY Data_quality_inspection_instance_report
    SUBTYPE OF(Data_quality_inspection_report);
      inspected_instances : LIST [1:?] OF data_quality_inspection_instance_report_item;
    WHERE
      WR1 : SIZEOF(QUERY(i1<*bag_to_set(USEDIN(
              SELF\data_quality_inspection_report.
              inspection_result.criterion_inspected,
              'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
              'DATA_QUALITY_REPORT_REQUEST.CRITERION_OF_REPORT_REQUEST'))|
              'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
              'DETAILED_REPORT_REQUEST'
            IN TYPEOF(i1)))>0;
  END_ENTITY;

  ENTITY Data_quality_inspection_instance_report_item
    SUBTYPE OF(Representation_item);
    inspected_elements : SET [1:?] OF inspected_element_select;
    WHERE
      WR1 : SIZEOF(QUERY(q <* bag_to_set( USEDIN(SELF,
                            'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))
                          |'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                           'DATA_QUALITY_CRITERIA_REPRESENTATION'
                           IN TYPEOF(q)))=0;
  END_ENTITY;

  ENTITY Data_quality_report_measurement_association;
      relating_representation_item : Data_quality_measurement_requirement;
      related_representation_item  : Data_quality_inspection_report;
  END_ENTITY;

  FUNCTION inspected_product_view_definition
    (dqir:Data_quality_inspection_result_representation)
    :BAG OF Product_view_definition;
    LOCAL
      dqdr :BAG OF Data_quality_definition_representation_relationship:= [];
      pdqdr :BAG OF Product_data_and_data_quality_relationship:= [];
      pd   :BAG OF Product_view_definition:= [];
    END_LOCAL;
    dqdr := USEDIN(dqir,'PRODUCT_DATA_QUALITY_DEFINITION_ARM.'
                       +'DATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP.'
                       +'USED_REPRESENTATION');
    REPEAT i:= 1 TO SIZEOF(dqdr);
      pdqdr := USEDIN(dqdr[i].definition,
                      'PRODUCT_DATA_QUALITY_DEFINITION_ARM.'
                     +'PRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP.'
                     +'DATA_QUALITY');
      REPEAT j:= 1 TO SIZEOF(pdqdr);
        pd := pd + pdqdr[j].product_data; 
      END_REPEAT;
    END_REPEAT;
    RETURN(pd);
  END_FUNCTION;

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N6065 - ISO/TS 10303-1017 Product identification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2925
*) 


SCHEMA Product_identification_arm;


ENTITY Product;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;  -- Product_identification_arm
(*
   ISO TC184/SC4/WG12 N7750 - ISO/TS 10303-1063 Product occurrence - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4266
*) 

SCHEMA Product_occurrence_arm;

  USE FROM Assembly_structure_arm;	-- ISO/TS 10303-1026
  USE FROM Product_view_definition_relationship_arm;	-- ISO/TS 10303-1041
  USE FROM Extended_measure_representation_arm;	-- ISO/TS 10303-1106	
  USE FROM Specified_product_arm;	-- ISO/TS 10303-1104	
  USE FROM Part_view_definition_arm;	-- ISO/TS 10303-1023

  TYPE extended_value_with_unit = EXTENSIBLE SELECT (
    Value_with_unit, 
    Value_limit, 
    Value_range);
  END_TYPE;

  ENTITY Definition_based_product_occurrence
    SUBTYPE OF (Product_occurrence);
      derived_from: Part_view_definition;
    WHERE
      WR1: SELF\Product_view_definition.defined_version = derived_from.defined_version;
  END_ENTITY;

  ENTITY Product_occurrence
    ABSTRACT SUPERTYPE OF ((ONEOF (Definition_based_product_occurrence,
         Specification_based_product_occurrence)) AND 
         ONEOF (Product_occurrence_with_quantity, 
         Single_instance))
    SUBTYPE OF (Product_view_definition);
      SELF\Product_view_definition.defined_version : Part_version;
    DERIVE
      SELF\Product_view_definition.initial_context : View_definition_context := View_definition_context('','',?);
    INVERSE
      occurrence_contexts : SET [0:?] OF Product_occurrence_definition_relationship FOR related_view;
      view_definition_contexts : SET [0:?] OF View_definition_relationship FOR related_view;
    WHERE
      WR1: SIZEOF(occurrence_contexts) + SIZEOF(view_definition_contexts) >= 1;
      WR2: NOT EXISTS(SELF\Product_view_definition.additional_characterization);
      WR3: SIZEOF(QUERY( oc <* occurrence_contexts |
            NOT( NOT('ASSEMBLY_STRUCTURE_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP' IN TYPEOF(oc)) OR
                 NOT EXISTS(oc\Assembly_component_relationship.quantity))
               )) = 0;
  END_ENTITY;

  ENTITY Product_occurrence_with_quantity
    ABSTRACT SUPERTYPE OF (ONEOF (Quantified_instance, Selected_instance))
    SUBTYPE OF (Product_occurrence);
      occurrence_quantity : OPTIONAL extended_value_with_unit;
  END_ENTITY;

  ENTITY Quantified_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      SELF\Product_occurrence_with_quantity.occurrence_quantity : Value_with_unit;
  END_ENTITY;

  ENTITY Selected_instance
    SUBTYPE OF (Product_occurrence_with_quantity);
      quantity_criterion : OPTIONAL STRING;
  END_ENTITY;

  ENTITY Single_instance
    SUBTYPE OF (Product_occurrence);
  END_ENTITY;

  ENTITY Specification_based_product_occurrence
    SUBTYPE OF (Product_occurrence);
      SELF\Product_view_definition.defined_version : Specification_based_part_version;
  END_ENTITY;

  ENTITY Specification_based_part_version
    SUBTYPE OF (Specification_based_product_version, Part_version);
  END_ENTITY;
  

END_SCHEMA; 
(*
 ISO TC184/SC4/WG12 N8247 - ISO/TS 10303-1343 Product placement - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7092
*)

SCHEMA Product_placement_arm;

USE FROM Contextual_shape_positioning_arm;
USE FROM Physical_breakdown_arm;
USE FROM Product_occurrence_arm;

ENTITY Occurrence_placement
ABSTRACT SUPERTYPE OF (ONEOF(Part_occurrence_placement,Physical_element_placement));
  reference_physical_element: Physical_element_definition;
  reference_geometric_space : Geometric_model;
  positioned_representation : template_instance;
END_ENTITY;

ENTITY Part_occurrence_placement
SUBTYPE OF(Occurrence_placement);
  placed_part_occurrence: Single_instance;
END_ENTITY;

ENTITY Physical_element_placement
SUBTYPE OF(Occurrence_placement);
  placed_physical_element: Physical_element_definition;
WHERE
WR1: placed_physical_element\Product_view_definition.defined_version :<>: 
	SELF\Occurrence_placement.reference_physical_element\Product_view_definition.defined_version;
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2935 - ISO/TS 10303-1024 Product relationship - EXPRESS ARM
*)


SCHEMA Product_relationship_arm; 

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017


ENTITY Product_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_product : Product;
  related_product : Product;
END_ENTITY;

END_SCHEMA;  -- Product_relationship_arm

(*
 ISO TC184/SC4/WG12 N4360 - ISO/TS 10303-1046 Product replacement - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1144
*)
  
SCHEMA Product_replacement_arm;

USE FROM Assembly_structure_arm; -- ISO/TS 10303-1026
USE FROM Product_identification_arm; -- ISO/TS 10303-1017
   
ENTITY Alternate_product_relationship;
   name : OPTIONAL STRING;
   description : OPTIONAL STRING;
   alternate_product : Product;
   base_product : Product;
   criteria : OPTIONAL STRING;
UNIQUE
   UR1: alternate_product , base_product ;
WHERE
   WR1: alternate_product  :<>: base_product ;
   WR2: EXISTS(criteria) OR (TYPEOF(SELF\Alternate_product_relationship) <> TYPEOF(SELF));
END_ENTITY;

   
ENTITY Assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship        : Assembly_component_relationship;
  substitute_relationship  : Assembly_component_relationship;
UNIQUE
  UR1 : base_relationship, substitute_relationship;
WHERE
  WR1: base_relationship.relating_view :=: substitute_relationship.relating_view;
  WR2: base_relationship :<>: substitute_relationship;
END_ENTITY;

   
END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2546 - ISO/TS 10303-1134 Product structure - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1670
*) 


SCHEMA Product_structure_arm;

USE FROM Assembly_structure_arm;    -- ISO/TS 10303-1026

USE FROM Contextual_shape_positioning_arm;    -- ISO/TS 10303-1027

USE FROM Part_and_version_identification_arm;    -- ISO/TS 10303-1022

USE FROM Part_definition_relationship_arm;    -- ISO/TS 10303-1055

USE FROM Product_replacement_arm;    -- ISO/TS 10303-1046

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030

USE FROM Single_part_representation_arm;    -- ISO/TS 10303-1133


TYPE ps_product_property_assignment = SELECT BASED_ON property_assignment_select WITH 
   (View_definition_relationship);
END_TYPE; 

ENTITY Alternate_part_relationship
  SUBTYPE OF (Alternate_product_relationship);
  SELF\Alternate_product_relationship.alternate_product : Part;
  SELF\Alternate_product_relationship.base_product : Part;
END_ENTITY;

END_SCHEMA;  -- Product_structure_arm

(*
 ISO TC184/SC4/WG12 N2527 - ISO/TS 10303-1018 Product version - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1105
*) 


SCHEMA Product_version_arm; 

USE FROM Product_identification_arm;    -- ISO/TS 10303-1017


ENTITY Product_version;
  id : STRING;
  description : OPTIONAL STRING;
  of_product : Product;
END_ENTITY;

END_SCHEMA;  -- Product_version_arm

(*
 ISO TC184/SC4/WG12 N4354 - ISO/TS 10303-1020 Product version relationship - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2937
*)

SCHEMA Product_version_relationship_arm; 

USE FROM Product_version_arm;    -- ISO/TS 10303-1018


ENTITY Product_version_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_version : Product_version;
  related_version : Product_version;
WHERE
  WR1: relating_version :<>: related_version;
  WR2: EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Supplied_part_relationship
  SUBTYPE OF (Product_version_relationship);
WHERE
  WR1: SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY;

END_SCHEMA;  -- Product_version_relationship_arm

(*
 ISO TC184/SC4/WG12 N4351 - ISO/TS 10303-1019 Product view definition - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1532
*)
   
SCHEMA Product_view_definition_arm;

USE FROM Product_version_arm;
         
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
   
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
   
END_SCHEMA;

(*
ISO TC184/SC4/WG12 N8289 - ISO/TS 10303-1034 Product view definition properties - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N3227
*) 


SCHEMA Product_view_definition_properties_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030


TYPE product_property_assignment = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON property_assignment_select WITH 
   (Product_view_definition, 
    View_definition_relationship);
END_TYPE; 

END_SCHEMA;  -- Product_view_definition_properties_arm
(*
   ISO TC184/SC4/WG12 N7768 - ISO/TS 10303-1823 Product view definition reference - EXPRESS ARM*)

SCHEMA Product_view_definition_reference_arm;

	USE FROM Support_resource_arm; -- ISO/TS 10303-1800
	USE FROM External_item_identification_assignment_arm;	-- ISO/TS 10303-1128
	USE FROM Product_view_definition_arm;	-- ISO/TS 10303-1019

 	TYPE pie_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH  
		(Generic_product_view_definition_reference);
	END_TYPE;

  ENTITY Generic_product_view_definition_reference
    ABSTRACT SUPERTYPE OF ( ONEOF ( Product_view_definition_reference, 
                  Product_view_definition_reference_with_local_representation) );
    source : External_source_identification;
  END_ENTITY;

  ENTITY Product_view_definition_reference
    SUBTYPE OF (Generic_product_view_definition_reference);
    product_id : identifier;
    product_definition_formation_id : identifier;
    product_definition_id : identifier;
    id_owning_organization_name : OPTIONAL label;
  END_ENTITY;

  ENTITY Product_view_definition_reference_with_local_representation
    SUBTYPE OF (Generic_product_view_definition_reference, Product_view_definition);
  END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2939 - ISO/TS 10303-1041 Product view definition relationship - EXPRESS ARM
*)


SCHEMA Product_view_definition_relationship_arm;

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019
USE FROM Product_view_definition_reference_arm; -- ISO/TS 10303-1738

TYPE as_product_view_definition_or_reference = SELECT (
    Product_view_definition, 
    Generic_product_view_definition_reference);
END_TYPE;

ENTITY View_definition_relationship;
  id : OPTIONAL STRING;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating_view : as_product_view_definition_or_reference;
  related_view : as_product_view_definition_or_reference;
END_ENTITY;

ENTITY View_definition_usage
  SUBTYPE OF (View_definition_relationship);
END_ENTITY;

END_SCHEMA;  -- Product_view_definition_relationship_arm
(*
   ISO TC184/SC4/WG12 N7034 - ISO/TS 10303-1739 Production rule - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6540 
*)

SCHEMA Production_rule_arm;

	USE FROM Specification_document_arm;    --  ISO/TS 10303-1747
	USE FROM Software_arm;	-- ISO/TS 10303-1746

	USE FROM Date_time_assignment_arm; -- ISO/TS 10303-1014
	USE FROM Activity_arm; -- ISO/TS 10303-1047

    USE FROM Identification_assignment_arm; -- ISO/TS 10303-1021
    USE FROM Product_identification_arm; -- ISO/TS 10303-1017

    REFERENCE FROM Specification_document_arm(get_document_definition);	-- ISO/TS 10303-1747
    REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765


TYPE pr_identification_item = SELECT BASED_ON identification_item WITH 
   (Rule_set);
END_TYPE; 

TYPE pr_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH
   (Rule_action);
END_TYPE;


TYPE clause_select = SELECT (Simple_clause, Complex_clause);
END_TYPE;

TYPE constants = EXTENSIBLE SELECT (any_number_value, any_string_value, Logical_representation_item);
END_TYPE;

TYPE function_symbol = SELECT (any_string_value, built_in_functions);
END_TYPE;

TYPE built_in_functions = EXTENSIBLE ENUMERATION OF (attr_val);
END_TYPE;

TYPE expression_syntax = EXTENSIBLE ENUMERATION OF (express);
END_TYPE;

TYPE pr_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
   (Rule_set);
END_TYPE; 

TYPE predicate_symbol = STRING;
END_TYPE;

TYPE scope_select = SELECT (Rule_definition, Rule_set, Rule_set_group);
END_TYPE;

TYPE term_select = SELECT (Symbol, constants, Func, Scalar_variable, Row_value, Row_variable); 
END_TYPE;


ENTITY Abstract_variable
  ABSTRACT SUPERTYPE OF (ONEOF (Scalar_variable, Row_variable));
  name : STRING;
  scope : scope_select;
 UNIQUE 
  UR1 : name, scope;
END_ENTITY;

ENTITY Atomic_formula
  ABSTRACT SUPERTYPE OF (ONEOF (Rule_condition, Ground_fact));
  predicate_symbol : predicate_symbol;  
  terms : LIST OF term_select;
END_ENTITY;

ENTITY Attribute_assertion
  SUBTYPE OF (Fact_type);
   entity_type : STRING;
   attribute : STRING;
END_ENTITY; 

ENTITY Back_chaining_rule
  SUBTYPE OF (Rule_definition);
  head : Rule_condition;
  body : LIST OF Rule_condition;
 WHERE
  WR1: SELF.head.positive = TRUE;
  WR2:  local_vars_of(SELF.head) <= local_vars_of(SELF.body);
END_ENTITY;

ENTITY Complex_clause
  ABSTRACT SUPERTYPE OF (ONEOF (Complex_conjunctive_clause, Complex_disjunctive_clause));
  clauses : LIST [2:?] OF clause_select;
END_ENTITY;

ENTITY Complex_conjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;

ENTITY Complex_disjunctive_clause
  SUBTYPE OF (Complex_clause); 
END_ENTITY;

ENTITY Entity_assertion
  SUBTYPE OF (Fact_type);
END_ENTITY;

ENTITY Enum_reference_prefix;
 prefix : STRING;
END_ENTITY;

ENTITY Extent;
  variable_id : OPTIONAL STRING;
  source : STRING;
  query_expression : STRING;
  syntax : OPTIONAL expression_syntax;
END_ENTITY;

ENTITY Fact_type
  ABSTRACT SUPERTYPE OF (ONEOF (Entity_assertion, Attribute_assertion));
   source : Extent;
   predicate_symbol : STRING;
END_ENTITY;

ENTITY Forward_chaining_rule
  SUBTYPE OF (Rule_definition);
  premise : clause_Select; 
  conclusion : Literal_conjunction;
  WHERE
  WR1:  local_vars_of(SELF.conclusion) <= local_vars_of(SELF.premise);
END_ENTITY;

ENTITY Func;
 func_sym : function_symbol;
 terms : LIST OF term_select;
END_ENTITY;

ENTITY Global_assignment;
  variable : Abstract_variable;
  val : term_select;
 WHERE
  WR1: NOT(contains_variable(SELF.val));
END_ENTITY;

ENTITY Ground_fact
 SUBTYPE OF (Atomic_formula);
 WHERE
  WR1: SIZEOF(QUERY(r <* SELF\Atomic_formula.terms | contains_variable(r))) = 0;
END_ENTITY;

ENTITY Literal_conjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;

ENTITY Literal_disjunction
  SUBTYPE OF (Simple_clause);
END_ENTITY;

ENTITY Row_value;
  values : LIST OF term_select;
 WHERE
  WR1: SIZEOF(QUERY(v <* SELF.values | contains_variable(v))) = 0;
  WR2: SIZEOF(QUERY(v <* SELF.values | 'PRODUCTION_RULE_ARM.ROW_VALUE' IN TYPEOF(v))) = 0;
END_ENTITY;

ENTITY Row_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;

ENTITY Rule_action
   ABSTRACT SUPERTYPE OF (ONEOF (Rule_submission,
                                 Rule_adoption,
                                 Rule_rejection,
                                 Rule_supersedence,
                                 Rule_creation,
                                 Rule_expiration,
                                 Rule_change_request,
                                 Rule_request,
                                 Rule_modification));
   subject_rule : Rule_version;
DERIVE
   subject_action_assignment : SET[0:?] OF Organization_or_person_in_organization_assignment := 
         bag_to_set(QUERY(temp <* USEDIN ( SELF , 'PERSON_ORGANIZATION_ASSIGNMENT_ARM.' + 
                                       'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS' ) 
                    | ( temp.role = 'subject action assignment')));
  UNIQUE
   UR1: SELF\Rule_action.subject_rule, SELF\Rule_action.subject_action_assignment;
  WHERE
   WR1: EXISTS (subject_action_assignment) AND (SIZEOF(subject_action_assignment) = 1 );
END_ENTITY;

ENTITY Rule_adoption
   SUBTYPE OF (Rule_action);
END_ENTITY;

ENTITY Rule_change_request
   SUBTYPE OF (Rule_action);
   change_reason : STRING;
END_ENTITY;

ENTITY Rule_condition
 SUBTYPE OF (Atomic_formula);
  positive : BOOLEAN;
END_ENTITY;

ENTITY Rule_creation
    SUBTYPE OF (Rule_action);
END_ENTITY;
  
ENTITY Rule_definition
  ABSTRACT SUPERTYPE OF (ONEOF (Forward_chaining_rule, Back_chaining_rule))
  SUBTYPE OF (Rule_software_definition);
END_ENTITY; 

ENTITY Rule_expiration
   SUBTYPE OF (Rule_action);
   expiration_rationale : STRING;
END_ENTITY;

ENTITY Rule_justification
   SUBTYPE OF (Rule_action);
   justified_action : Rule_action;
   justification_rationale : STRING;
WHERE
   WR1: SELF <> justified_action ;
END_ENTITY;

ENTITY Rule_modification
   SUBTYPE OF (Rule_action);
   modification_rationale : Rule_change_request;
END_ENTITY;

ENTITY Rule_priority;
   priority : INTEGER;
   prioritized_rule : Rule_definition;
WHERE
   WR1: priority >= 0 ;
END_ENTITY;

ENTITY Rule_product
   SUBTYPE OF (Software);
END_ENTITY;

ENTITY Rule_rejection
   SUBTYPE OF (Rule_action);
   rejection_reason : STRING;
END_ENTITY;

ENTITY Rule_request
   SUBTYPE OF (Rule_action);
END_ENTITY;

ENTITY Rule_set
   SUBTYPE OF (Rule_software_definition);
   conflict_resolution_strategy : OPTIONAL STRING;
   rule_member : SET[1:?] OF Rule_priority;
 DERIVE  
   engine: SET[1:1] OF Document_definition :=
		get_document_definition(SELF, 'engine', 
		'SPECIFICATION_DOCUMENT_ARM.LANGUAGE_REFERENCE_MANUAL');
 INVERSE
   purpose : Identification_assignment FOR items;
 WHERE
   WR1: purpose.role = 'purpose' ;
END_ENTITY;

ENTITY Rule_set_group
  SUBTYPE OF (Rule_software_definition);
  elements : SET[2:?] OF Rule_set;
END_ENTITY;

ENTITY Rule_software_definition
   SUPERTYPE OF (ONEOF (Rule_definition,
                       Rule_set_group,
                       Rule_set))
   SUBTYPE OF (Software_definition);
   SELF\Product_view_definition.defined_version : Rule_version;
END_ENTITY;

ENTITY Rule_submission
   SUBTYPE OF (Rule_action);
   submission_rationale : STRING;
END_ENTITY;

ENTITY Rule_supersedence
   SUBTYPE OF (Rule_action);
   superseded_rule : Rule_version;
END_ENTITY;

ENTITY Rule_version
   SUBTYPE OF (Software_version);
   SELF\Product_version.of_product : Rule_product;
INVERSE
   management_action : SET[1:?] OF Rule_action FOR subject_rule;
   product_definition : SET[1:?] OF Rule_software_definition FOR defined_version;
END_ENTITY;

ENTITY Scalar_variable
 SUBTYPE OF (Abstract_variable);
END_ENTITY;

ENTITY Simple_clause
  ABSTRACT SUPERTYPE OF (ONEOF (Literal_conjunction, Literal_disjunction));
  formulas : LIST [1:?] OF Rule_condition;
END_ENTITY;

ENTITY Symbol
  SUBTYPE OF(Representation_item);
 UNIQUE
  UR1 : SELF\Representation_item.name;
END_ENTITY;

FUNCTION contains_variable (x : Term_select) : BOOLEAN;
  IF ('PRODUCTION_RULE_ARM.ABSTRACT_VARIABLE' IN TYPEOF(x)) THEN RETURN (TRUE);
      ELSE IF (('PRODUCTION_RULE_ARM.FUNC' IN TYPEOF(X)) AND
              (SIZEOF(QUERY(y <* x.terms | contains_variable(y))) > 0)) 
              THEN RETURN (TRUE);
              ELSE RETURN (FALSE);
           END_IF;
  END_IF;
END_FUNCTION;

FUNCTION local_vars_aux (thing : GENERIC; accum : SET [0:?] OF Scalar_variable) 
                                                : SET [0:?] OF Scalar_variable;
  LOCAL i,j,k : INTEGER; END_LOCAL;
  IF (('PRODUCTION_RULE_ARM.ABSTRACT_VARIABLE' IN TYPEOF(thing)) AND 
      ('PRODUCTION_RULE_ARM.RULE_DEFINITION' IN (TYPEOF(thing.scope))))
   THEN accum := accum + thing;
   ELSE IF ('PRODUCTION_RULE_ARM.RULE_CONDITION' IN TYPEOF(thing))
        THEN REPEAT i := 1 TO HIINDEX(thing\Atomic_formula.terms);
                accum := local_vars_aux(thing\Atomic_formula.terms[i],accum);
             END_REPEAT;
        ELSE IF ('PRODUCTION_RULE_ARM.SIMPLE_CLAUSE' IN TYPEOF(thing))
             THEN REPEAT j := 1 TO HIINDEX(thing.formulas);
                        accum := local_vars_aux(thing.formulas[j],accum);
                  END_REPEAT;
             ELSE IF ('PRODUCTION_RULE_ARM.COMPLEX_CLAUSE' IN TYPEOF(thing))
                  THEN REPEAT k := 1 TO HIINDEX(thing.clauses);
                        accum := local_vars_aux(thing.clauses[k],accum);
                       END_REPEAT;
                  END_IF;
             END_IF;
        END_IF;
  END_IF;
  RETURN(accum);
END_FUNCTION;

FUNCTION local_vars_of (thing : GENERIC) : SET [0:?] OF Scalar_variable;
  LOCAL
    accum : SET [0:?] OF Scalar_variable := [];
  END_LOCAL;
  RETURN (local_vars_aux(thing, accum));
END_FUNCTION;

RULE max_one_entity_prefix FOR (Enum_reference_prefix);
 WHERE
   WR1: SIZEOF(QUERY(x <* Enum_reference_prefix | TRUE)) <= 1;
END_RULE;

RULE rule_software_definition_constraint FOR (Product_view_definition);
WHERE
   WR1: SIZEOF (QUERY ( pvd <* Product_view_definition | ( NOT('PRODUCTION_RULE_ARM.' + 'RULE_SOFTWARE_DEFINITION' 
                       IN TYPEOF(pvd))) 
                       AND ('PRODUCTION_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF (pvd . defined_version)))) = 0 ;
END_RULE; 

RULE rule_version_constraint FOR (Product_version);
WHERE
   WR1: SIZEOF (QUERY(pv <* Product_version | (NOT('PRODUCTION_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF(pv))) 
                      AND ( 'PRODUCTION_RULE_ARM.' + 'RULE_PRODUCT' IN TYPEOF(pv.of_product)))) = 0 ;
END_RULE;

END_SCHEMA; 

(*
 ISO TC184/SC4/WG12 N8293 - ISO/TS 10303-1061 Project - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4263
*)


SCHEMA Project_arm; 

USE FROM Date_time_arm;    -- ISO/TS 10303-1010

USE FROM Date_time_assignment_arm;    -- ISO/TS 10303-1014

USE FROM Event_arm;    -- ISO/TS 10303-1064

USE FROM Event_assignment_arm;    -- ISO/TS 10303-1364

USE FROM Person_organization_arm;    -- ISO/TS 10303-1011


TYPE project_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET[0:?] OF Organization;
  planned_start_date : OPTIONAL date_or_event;
  planned_end_date : OPTIONAL date_or_event;
  actual_start_date : OPTIONAL date_or_date_time_select;
  actual_end_date : OPTIONAL date_or_date_time_select;
END_ENTITY;

ENTITY Project_assignment;
  assigned_project : Project;
  role : STRING;
  items : SET[1:?] OF project_item;
END_ENTITY;

ENTITY Project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : Project;
  related_project : Project;
END_ENTITY;

END_SCHEMA;  -- Project_arm
(*
ISO TC184/SC4/WG12 N6582 - ISO/TS 10303-1399 Property as definition - EXPRESS ARM
*) 


SCHEMA Property_as_definition_arm;

USE FROM Product_view_definition_properties_arm;    -- ISO/TS 10303-1034


TYPE representation_proxy_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Representation_proxy_item
  SUBTYPE OF (Representation_item);
  item : representation_proxy_select;
END_ENTITY;

ENTITY Single_property_is_definition
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : Product_view_definition;
UNIQUE
  UR1: SELF\Assigned_property.described_element;
END_ENTITY;

END_SCHEMA;  -- Property_as_definition_arm

(*
 ISO TC184/SC4/WG12 N8041 - ISO/TS 10303-1030 Property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7457
*)


SCHEMA Property_assignment_arm; 

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE property_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE represented_definition = EXTENSIBLE GENERIC_ENTITY SELECT (
    Independent_property,
    Assigned_property);
END_TYPE;

ENTITY Applied_independent_property
  SUBTYPE OF (Assigned_property);
  base_independent_property : Independent_property;
DERIVE
  SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY;

ENTITY Assigned_property;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;

ENTITY Property_definition_representation
  ABSTRACT SUPERTYPE;
    name : OPTIONAL STRING;
    description : OPTIONAL STRING;
    definition : represented_definition;
    used_representation : Representation;
END_ENTITY;

ENTITY Property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition RENAMED property : Assigned_property;
END_ENTITY;

END_SCHEMA;  -- Property_assignment_arm
(*
   ISO TC184/SC4/WG12 N7723 - ISO/TS 10303-1782 Qualified measure - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N6558
*)

SCHEMA Qualified_measure_arm;

USE FROM Measure_representation_arm; -- ISO/TS 10303-1118

  CONSTANT
    pre_defined_type_qualifiers : SET OF STRING := ['minimum', 'maximum',
    'nominal', 'specified', 'typical', 'calculated', 'designed', 'estimated',
    'measured', 'required', 'set point',
    'basic', 'lower deviation', 'upper deviation'];
  END_CONSTANT;

  TYPE value_qualifier = SELECT
    (Precision_qualifier,
     Type_qualifier,
     Uncertainty_qualifier,
     Value_format_type_qualifier);
  END_TYPE;

  ENTITY Expanded_uncertainty
    SUBTYPE OF (Standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY;

  ENTITY Measure_qualification;
      name              : STRING; 
      description       : STRING; 
      qualified_measure : Value_with_unit;
      qualifiers        : SET[1:?] OF value_qualifier;
    WHERE
      WR1 : NOT('MEASURE_REPRESENTATION_ARM.'+'NUMERICAL_ITEM_WITH_UNIT' IN TYPEOF(qualified_measure));
      WR2 : SIZEOF(QUERY(temp <* qualifiers | 
        'QUALIFIED_MEASURE_ARM.PRECISION_QUALIFIER' IN TYPEOF(temp))) < 2;      
  END_ENTITY;

  ENTITY Precision_qualifier;
     significant_digits : INTEGER;
  END_ENTITY;

  ENTITY Pre_defined_type_qualifier
    SUBTYPE OF (Type_qualifier);
    WHERE
      WR1: SELF\Type_qualifier.name IN pre_defined_type_qualifiers;
  END_ENTITY;

  ENTITY Qualified_numerical_item_with_unit 
    SUBTYPE OF (Numerical_item_with_unit, Qualified_representation_item); 
  END_ENTITY; 

  ENTITY Qualified_representation_item 
    ABSTRACT SUPERTYPE
    SUBTYPE OF (Representation_item); 
       qualifiers : SET [1:?] OF value_qualifier; 
    WHERE 
      WR1: SIZEOF(QUERY(temp <* qualifiers | 
        'QUALIFIED_MEASURE_ARM.PRECISION_QUALIFIER' 
        IN TYPEOF(temp))) < 2; 
  END_ENTITY; 

  ENTITY Qualitative_uncertainty
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : STRING; 
  END_ENTITY;

  ENTITY Representation_with_uncertainty
    SUBTYPE OF (Representation);
    uncertainty : SET[1:?] OF Uncertainty_with_unit;
  END_ENTITY;

  ENTITY Standard_uncertainty
    SUPERTYPE OF (Expanded_uncertainty)
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY;

  ENTITY Type_qualifier
    ABSTRACT SUPERTYPE OF(Pre_defined_type_qualifier);
    name : STRING;
  END_ENTITY;

  ENTITY Uncertainty_qualifier
    SUPERTYPE OF (ONEOF (Standard_uncertainty,
      Qualitative_uncertainty));
      measure_name : STRING; 
      description  : STRING; 
  END_ENTITY;

  ENTITY Value_format_type_qualifier;
     value_format_type : STRING;
    WHERE
     WR1: LENGTH(value_format_type) <= 80;
  END_ENTITY;

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N7131 - ISO/TS 10303-1233 Requirement assignment - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6129
*) 


SCHEMA Requirement_assignment_arm;

USE FROM Requirement_view_definition_arm;    -- ISO/TS 10303-1141


TYPE requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

TYPE requirement_satisfaction_item = EXTENSIBLE GENERIC_ENTITY SELECT
   (requirement_assignment_item);
END_TYPE; 

TYPE requirement_source_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Requirement_assignment;
  id : STRING;
  description : OPTIONAL STRING;
  assigned_requirement : Requirement_view_definition;
  assigned_to : requirement_assignment_item;
END_ENTITY;

ENTITY Requirement_satisfied_by;
  id : STRING;
  description : OPTIONAL STRING;
  satisfied_by : requirement_satisfaction_item;
  satisfied_requirement : Requirement_view_definition;
  related_assignment : OPTIONAL Requirement_assignment;
END_ENTITY;

ENTITY Requirement_source;
  id : STRING;
  description : OPTIONAL STRING;
  source : requirement_source_item;
  sourced_requirement : Requirement_view_definition;
END_ENTITY;

END_SCHEMA;  -- Requirement_assignment_arm
(*
 ISO TC184/SC4/WG12 N5944 - ISO/TS 10303-1140 Requirement identification and version - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5488
*) 


SCHEMA Requirement_identification_and_version_arm;

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021

USE FROM Product_version_relationship_arm;    -- ISO/TS 10303-1020

TYPE requirement_identification_and_version_identification_item = SELECT BASED_ON identification_item WITH
  (Requirement,
   Requirement_version);
END_TYPE;

ENTITY Requirement
SUBTYPE OF (Product);
END_ENTITY;

ENTITY Requirement_version
SUBTYPE OF (Product_version);
  SELF\Product_version.of_product : Requirement;
END_ENTITY;

ENTITY Requirement_version_relationship
SUBTYPE OF (Product_version_relationship);
  SELF\Product_version_relationship.relating_version RENAMED predecessor : Requirement_version;
  SELF\Product_version_relationship.related_version RENAMED successor : Requirement_version;
END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N8295 - ISO/TS 10303-1141 Requirement view definition - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6842
*) 


SCHEMA Requirement_view_definition_arm;

USE FROM Property_as_definition_arm; -- ISO/TS 10303-1399
USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Requirement_identification_and_version_arm;    -- ISO/TS 10303-1140


ENTITY Requirement_view_definition
  SUBTYPE OF (Product_view_definition);
  SELF\Product_view_definition.defined_version : Requirement_version;
END_ENTITY;

ENTITY Single_requirement_view_definition
  SUBTYPE OF (Requirement_view_definition);
INVERSE
  definition : Single_property_is_definition FOR described_element;
END_ENTITY;

END_SCHEMA;  -- Requirement_view_definition_arm

(*
 ISO TC184/SC4/WG12 N6132 - ISO/TS 10303-1142 Requirement view definition relationship - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N3136
*) 


SCHEMA Requirement_view_definition_relationship_arm;

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Requirement_view_definition_arm;    -- ISO/TS 10303-1141


ENTITY Requirement_collection_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);
  SELF\Requirement_view_definition_relationship.primary RENAMED collection : Requirement_view_definition;
  SELF\Requirement_view_definition_relationship.secondary RENAMED member : Requirement_view_definition;
END_ENTITY;

ENTITY Requirement_view_definition_relationship
  SUPERTYPE OF (ONEOF (Requirement_collection_relationship,
                       Requirement_precedence_relationship,
                       Tracing_relationship))
  SUBTYPE OF (View_definition_relationship);
  SELF\View_definition_relationship.relating_view RENAMED primary : Requirement_view_definition;
  SELF\View_definition_relationship.related_view RENAMED secondary : Requirement_view_definition;
WHERE
  WR1: primary :<>: secondary;
END_ENTITY;

ENTITY Tracing_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);
  SELF\Requirement_view_definition_relationship.primary RENAMED traces_from : Requirement_view_definition;
  SELF\Requirement_view_definition_relationship.secondary RENAMED traces_to : Requirement_view_definition;
END_ENTITY;

ENTITY Requirement_precedence_relationship
  SUBTYPE OF (Requirement_view_definition_relationship);
END_ENTITY;

END_SCHEMA;  -- Requirement_view_definition_relationship_arm

(*
 ISO TC184/SC4/WG12 N3157 - ISO/TS 10303-1273 Resource property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2438
*) 


SCHEMA Resource_property_assignment_arm;

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE characterized_resource_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Applied_independent_resource_property
  SUBTYPE OF (Resource_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;

ENTITY Resource_property;
  name : STRING;
  description : STRING;
----  described_element : characterized_resource_select;
END_ENTITY;

ENTITY Resource_property_representation;
  description : OPTIONAL STRING;
  property : Resource_property;
  rep : Representation;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Resource_property_assignment_arm
(*
ISO TC184/SC4/WG12 N3221 - ISO/TS 10303-1015 Security classification - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N1096
*) 


SCHEMA Security_classification_arm;


TYPE security_classification_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Security_classification;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Security_classification_assignment;
  classification : Security_classification;
  items : SET[1:?] OF security_classification_item;
END_ENTITY;

END_SCHEMA;  -- Security_classification_arm
(* 
	ISO TC184/SC4/WG12 N6926 - ISO/TS 10303-1009 Shape appearance layers - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N6688
*)

SCHEMA Shape_appearance_layers_arm;

USE FROM Appearance_assignment_arm; -- ISO/CD-TS 10303-1001

USE FROM Fill_area_style_arm; -- ISO/TS 10303-1672

USE FROM General_surface_appearance_arm; -- ISO/CD-TS 10303-1007

USE FROM Layer_assignment_arm; -- ISO/CD-TS 10303-1008


  TYPE sal_appearance_context = SELECT BASED_ON appearance_context WITH 
     (Geometric_model_relationship,
      Group, 
      Layer);
  END_TYPE; 

  TYPE sal_appearance_select = SELECT BASED_ON appearance_select WITH 
    (Hatch_style,
     Solid_fill_area_style,
     Surface_appearance,
     Tile_style);
  END_TYPE;
  
  TYPE sal_overriding_style_context = SELECT BASED_ON overriding_style_context WITH 
     (Geometric_model_relationship,
      Layer);
  END_TYPE; 

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N8044 - ISO/TS 10303-1742 Shape composition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7460
*)

SCHEMA Shape_composition_arm; 

  	USE FROM Shape_property_assignment_arm;	-- ISO/TS 10303-1032

  ENTITY Composite_group_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;

  ENTITY Composite_shape_element
    ABSTRACT SUPERTYPE OF (ONEOF (Composite_group_shape_element, Composite_unit_shape_element))
    SUBTYPE OF (Shape_element);
    components : SET[2:?] OF Shape_element;
  END_ENTITY;

  ENTITY Composite_unit_shape_element
    SUBTYPE OF (Composite_shape_element);
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7813 - ISO/TS 10303-1523 Shape data quality criteria - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7184
*)

SCHEMA Shape_data_quality_criteria_arm;

  USE FROM Product_data_quality_criteria_arm;

  USE FROM Qualified_measure_arm;

  USE FROM Shape_data_quality_inspection_result_arm;

  REFERENCE FROM Support_resource_arm
    (bag_to_set);

  TYPE shape_data_quality_value_limit_type_select = SELECT
    (Shape_data_quality_value_range,
     Shape_data_quality_value_limit);
  END_TYPE;

  TYPE shape_data_quality_assessment_specification_select = SELECT
    (Shape_data_quality_assessment_by_numerical_test,
     Shape_data_quality_assessment_by_logical_test);
  END_TYPE;

  ENTITY Shape_data_quality_criteria_representation
    SUBTYPE OF(Data_quality_criteria_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
                               'SHAPE_DATA_QUALITY_CRITERION' IN TYPEOF(q))) > 0;
      WR2 :'FOUNDATION_REPRESENTATION_ARM.NUMERICAL_REPRESENTATION_CONTEXT' 
            IN TYPEOF(context_of_items);
  END_ENTITY;

  ENTITY Shape_data_quality_assessment_by_numerical_test
    SUBTYPE OF(Data_quality_assessment_specification);
      threshold : shape_data_quality_value_limit_type_select;
  END_ENTITY;


  ENTITY Shape_data_quality_value_range
    SUBTYPE OF(Measure_item);
      lower_limit : Numerical_item_with_unit;
      upper_limit : Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Shape_data_quality_value_limit
    ABSTRACT SUPERTYPE OF (ONEOF(Shape_data_quality_upper_value_limit, Shape_data_quality_lower_value_limit))
    SUBTYPE OF(Numerical_item_with_unit, Qualified_representation_item);
      SELF\Qualified_representation_item.qualifiers : SET[1:1] OF Pre_defined_type_qualifier;
  WHERE
    WR1: SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name in ['minimum', 'maximum'];
  END_ENTITY;

  ENTITY Shape_data_quality_upper_value_limit
    SUBTYPE OF(Shape_data_quality_value_limit);
    WHERE
      WR1 : SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'maximum';
  END_ENTITY;

  ENTITY Shape_data_quality_lower_value_limit
    SUBTYPE OF(Shape_data_quality_value_limit);
    WHERE
      WR1 : SELF\Qualified_representation_item.qualifiers[1]\Type_qualifier.name = 'minimum';
  END_ENTITY;

  ENTITY Shape_data_quality_assessment_by_logical_test
    SUBTYPE OF(Data_quality_assessment_specification);
  END_ENTITY;
 
  ENTITY Shape_data_quality_criterion
    SUPERTYPE OF (ONEOF(Erroneous_data, Inapt_data))
    SUBTYPE OF(Data_quality_criterion, Data_quality_measurement_requirement);
      assessment_specification : shape_data_quality_assessment_specification_select;
    WHERE
      WR1 : SIZEOF(USEDIN(SELF,
            'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
            'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'+
            'CRITERION'
            )) = 0;
(* 2009.12.26 F.Tanaka
 Shape_data_quality_criterion WR2 has no meaning

      WR2 : SIZEOF(USEDIN(SELF,
                    'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATED_REPRESENTATION_ITEM')) = 0;
      WR3 : SIZEOF(USEDIN(SELF,
                    'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATING_REPRESENTATION_ITEM')) = 0;
*)
      WR2 : SIZEOF(USEDIN(SELF,
                    'PRODUCT_DATA_QUALITY_CRITERIA_ARM.'+
                    'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'+
                    'RELATING_REPRESENTATION_ITEM')) = 0;
  END_ENTITY;

  ENTITY Erroneous_data
    ABSTRACT SUPERTYPE OF (ONEOF(Erroneous_topology, Erroneous_geometry, Erroneous_topology_and_geometry_relationship, Erroneous_manifold_solid_brep))
    SUBTYPE OF(Shape_data_quality_criterion);
  END_ENTITY;

  ENTITY Erroneous_topology
    ABSTRACT SUPERTYPE OF (ONEOF(Open_edge_loop, Open_closed_shell, Inconsistent_adjacent_face_normals, Disconnected_face_set))
    SUBTYPE OF(Erroneous_data);
  END_ENTITY;

  ENTITY Open_edge_loop
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.ORIENTED_EDGE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Open_closed_shell
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.CLOSED_SHELL']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Inconsistent_adjacent_face_normals
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'CLOSED_OR_OPEN_SHELL_SELECT']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Disconnected_face_set
    SUBTYPE OF(Erroneous_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Erroneous_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Inconsistent_curve_transition_code, Erroneous_b_spline_curve_definition, Inconsistent_surface_transition_code, Erroneous_b_spline_surface_definition))
    SUBTYPE OF(Erroneous_data);
  END_ENTITY;

  ENTITY Inconsistent_curve_transition_code
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      angle_tolerance                                            : plane_angle_measure;
      curvature_ratio_tolerance                                  : ratio_measure;
      distance_tolerance                                         : length_measure;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_CURVE_ARM.COMPOSITE_CURVE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'COMPOSITE_CURVE_TRANSITION_LOCATOR']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Erroneous_b_spline_curve_definition
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.CURVE_WITH_EXPLICIT_KNOTS']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Inconsistent_surface_transition_code
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      angle_tolerance                                            : plane_angle_measure;
      curvature_ratio_tolerance                                  : ratio_measure;
      distance_tolerance                                         : length_measure;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['COMPOSITE_SURFACE_ARM.RECTANGULAR_COMPOSITE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'RECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Erroneous_b_spline_surface_definition
    SUBTYPE OF(Erroneous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_EXPLICIT_KNOTS']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Erroneous_topology_and_geometry_relationship
    ABSTRACT SUPERTYPE OF (ONEOF(Inconsistent_edge_and_curve_directions, Inconsistent_face_and_surface_normals, Inconsistent_face_and_closed_shell_normals, Intersecting_loops_in_face, Wrongly_placed_loop))
    SUBTYPE OF(Erroneous_data);
  END_ENTITY;

  ENTITY Inconsistent_edge_and_curve_directions
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      distance_tolerance : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE') 
            ;
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE'])
            ;
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Inconsistent_face_and_surface_normals
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Inconsistent_face_and_closed_shell_normals
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Intersecting_loops_in_face
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.FACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE',
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Wrongly_placed_loop
    SUBTYPE OF(Erroneous_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.FACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.FACE_BOUND']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Erroneous_manifold_solid_brep
    ABSTRACT SUPERTYPE OF (ONEOF(Wrongly_oriented_void, Wrongly_placed_void, Intersecting_shells_in_solid, Solid_with_wrong_number_of_voids))
    SUBTYPE OF(Erroneous_data);
  END_ENTITY;

  ENTITY Wrongly_oriented_void
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.ORIENTED_CLOSED_SHELL']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Wrongly_placed_void
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.ORIENTED_CLOSED_SHELL']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Intersecting_shells_in_solid
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Solid_with_wrong_number_of_voids
    SUBTYPE OF(Erroneous_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE') ;
      WR2 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Inapt_data
    ABSTRACT SUPERTYPE OF (ONEOF(Inapt_topology, Inapt_geometry, Inapt_topology_and_geometry_relationship, Inapt_manifold_solid_brep))
    SUBTYPE OF(Shape_data_quality_criterion);
  END_ENTITY;

  ENTITY Inapt_topology
    ABSTRACT SUPERTYPE OF (ONEOF(Free_edge, Non_manifold_at_edge, Non_manifold_at_vertex, Over_used_vertex))
    SUBTYPE OF(Inapt_data);
  END_ENTITY;

  ENTITY Free_edge
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
      WR5 : SIZEOF(QUERY(sdqr <* bag_to_set(USEDIN(SELF,
             'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'DATA_QUALITY_INSPECTION_RESULT.'+
             'CRITERION_INSPECTED'))|
             ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
              'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(sdqr)) AND
              (SIZEOF(QUERY(sdqiir <* bag_to_set(USEDIN(sdqr,
                 'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                 'DATA_QUALITY_INSPECTION_REPORT.'+
                 'INSPECTION_RESULT'))|
                 ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                  'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
                   IN TYPEOF(sdqiir)) AND
                 (SIZEOF(QUERY(sdqiri <* sdqiir.inspected_instances|
                          ('ADVANCED_BOUNDARY_REPRESENTATION_ARM.CLOSED_SHELL'
                   IN TYPEOF(sdqiri.inspected_elements[1])))) = 0)
               )) = 0)
            )) = 0;
  END_ENTITY;

  ENTITY Non_manifold_at_edge
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Non_manifold_at_vertex
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Over_used_vertex
    SUBTYPE OF(Inapt_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Inapt_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Nearly_degenerate_geometry, Discontinuous_geometry, Self_intersecting_geometry, Geometry_with_local_near_degeneracy, Overlapping_geometry, Multiply_defined_geometry, Geometry_with_local_irregularity, Overcomplex_geometry))
    SUBTYPE OF(Inapt_data);
  END_ENTITY;

  ENTITY Nearly_degenerate_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Small_area_surface, Short_length_curve, Entirely_narrow_surface))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY Small_area_surface
    SUBTYPE OF(Nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE']);
  END_ENTITY;

  ENTITY Short_length_curve
    SUBTYPE OF(Nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Entirely_narrow_surface
    SUBTYPE OF(Nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.BOUNDED_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Discontinuous_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(G1_discontinuous_curve, G2_discontinuous_curve, G1_discontinuous_surface, G2_discontinuous_surface))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY G1_discontinuous_curve
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_CURVE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY G2_discontinuous_curve
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold)) ;
      WR3 : validate_measured_data_type(SELF,
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'PLANE_ANGLE_AND_RATIO_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_CURVE_KNOT_LOCATOR']);
      WR6 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY G1_discontinuous_surface
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) ;
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE']);
  END_ENTITY;

  ENTITY G2_discontinuous_surface
    SUBTYPE OF(Discontinuous_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold));
      WR3 : validate_measured_data_type(SELF,
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'PLANE_ANGLE_AND_RATIO_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR6 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.RATIO_MEASURE'])
            ;
  END_ENTITY;

  ENTITY Self_intersecting_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Self_intersecting_curve, Self_intersecting_surface))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY Self_intersecting_curve
    SUBTYPE OF(Self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      arc_length_separation_factor                               : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.CURVE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.POINT_ON_CURVE','BASIC_GEOMETRY_ARM.POINT_ON_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Self_intersecting_surface
    SUBTYPE OF(Self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      geodesic_separation_factor                                 : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE',
             'BASIC_GEOMETRY_ARM.POINT_ON_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Geometry_with_local_near_degeneracy
    ABSTRACT SUPERTYPE OF (ONEOF(Curve_with_small_curvature_radius, Short_length_curve_segment, Surface_with_small_curvature_radius, Small_area_surface_patch, Narrow_surface_patch, Indistinct_surface_knots, Indistinct_curve_knots, Nearly_degenerate_surface_boundary, Nearly_degenerate_surface_patch))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY Curve_with_small_curvature_radius
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.POINT_ON_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Short_length_curve_segment
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_CURVE_SEGMENT']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Surface_with_small_curvature_radius
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Small_area_surface_patch
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_PATCH']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE']);
  END_ENTITY;

  ENTITY Narrow_surface_patch
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_PATCH']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Indistinct_surface_knots
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.SURFACE_WITH_EXPLICIT_KNOTS']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Indistinct_curve_knots
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'B_SPLINE_GEOMETRY_ARM.PARAMETER_VALUE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.CURVE_WITH_EXPLICIT_KNOTS']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_CURVE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Nearly_degenerate_surface_boundary
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_VALUE_RANGE'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'BOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Nearly_degenerate_surface_patch
    SUBTYPE OF(Geometry_with_local_near_degeneracy);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_VALUE_RANGE'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_PATCH']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Overlapping_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Partly_overlapping_curves, Partly_overlapping_surfaces))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY Partly_overlapping_curves
    SUBTYPE OF(Overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.CURVE','BASIC_GEOMETRY_ARM.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_CURVE_ARM.TRIMMED_CURVE','BASIC_CURVE_ARM.TRIMMED_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Partly_overlapping_surfaces
    SUBTYPE OF(Overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.SURFACE','BASIC_GEOMETRY_ARM.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['GEOMETRICALLY_BOUNDED_SURFACE_ARM.CURVE_BOUNDED_SURFACE',
             'GEOMETRICALLY_BOUNDED_SURFACE_ARM.CURVE_BOUNDED_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE']);
  END_ENTITY;

  ENTITY Multiply_defined_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Multiply_defined_curves, Multiply_defined_surfaces, Multiply_defined_cartesian_points, Multiply_defined_directions, Multiply_defined_placements))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY Multiply_defined_curves
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.CURVE','BASIC_GEOMETRY_ARM.CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Multiply_defined_surfaces
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) AND
            ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.SURFACE','BASIC_GEOMETRY_ARM.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Multiply_defined_cartesian_points
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.CARTESIAN_POINT','ELEMENTAL_GEOMETRIC_SHAPE_ARM.CARTESIAN_POINT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Multiply_defined_directions
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.DIRECTION','ELEMENTAL_GEOMETRIC_SHAPE_ARM.DIRECTION']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Multiply_defined_placements
    SUBTYPE OF(Multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold));
      WR3 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
            'PLANE_ANGLE_AND_LENGTH_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_GEOMETRIC_SHAPE_ARM.AXIS_PLACEMENT','ELEMENTAL_GEOMETRIC_SHAPE_ARM.AXIS_PLACEMENT']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR6 : validate_accuracy_types(SELF,
            []);
      WR7 : SIZEOF(QUERY(sdqr <* bag_to_set(USEDIN(SELF,
             'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'DATA_QUALITY_INSPECTION_RESULT.'+
             'CRITERION_INSPECTED'))|
             ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
              'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(sdqr)) AND
              (SIZEOF(QUERY(sdqiir <* bag_to_set(USEDIN(sdqr,
                 'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                 'DATA_QUALITY_INSPECTION_REPORT.'+
                 'INSPECTION_RESULT'))|
                 ('SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                  'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
                   IN TYPEOF(sdqiir)) AND
                 (SIZEOF(QUERY(sdqiri <* sdqiir.inspected_instances|
                          (TYPEOF(sdqiri.inspected_elements[1])
                           <>TYPEOF(sdqiri.inspected_elements[2])))) = 0)
               )) = 0)
            )) = 0;
  END_ENTITY;

  ENTITY Geometry_with_local_irregularity
    ABSTRACT SUPERTYPE OF (ONEOF(Extreme_patch_width_variation, Zero_surface_normal, Abrupt_change_of_surface_normal))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY Extreme_patch_width_variation
    SUBTYPE OF(Geometry_with_local_irregularity);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.RATIO_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_KNOT_LOCATOR']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Zero_surface_normal
    SUBTYPE OF(Geometry_with_local_irregularity);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE']);
  END_ENTITY;

  ENTITY Abrupt_change_of_surface_normal
    SUBTYPE OF(Geometry_with_local_irregularity);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      small_vector_tolerance                                     : length_measure;
      test_point_distance_tolerance                              : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRY_ARM.SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE',
             'BASIC_GEOMETRY_ARM.POINT_ON_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Overcomplex_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Excessively_high_degree_curve, Excessively_high_degree_surface, Surface_with_excessive_patches_in_one_direction, Curve_with_excessive_segments, High_degree_linear_curve, High_degree_planar_surface, High_degree_conic, High_degree_axi_symmetric_surface))
    SUBTYPE OF(Inapt_geometry);
  END_ENTITY;

  ENTITY Excessively_high_degree_curve
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Excessively_high_degree_surface
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Surface_with_excessive_patches_in_one_direction
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Curve_with_excessive_segments
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_OR_COMPOSITE_CURVE_SELECT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY High_degree_linear_curve
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY High_degree_planar_surface
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY High_degree_conic
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY High_degree_axi_symmetric_surface
    SUBTYPE OF(Overcomplex_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                                    : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['B_SPLINE_GEOMETRY_ARM.B_SPLINE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Inapt_topology_and_geometry_relationship
    ABSTRACT SUPERTYPE OF (ONEOF(Topology_related_to_nearly_degenerate_geometry, Geometric_gap_in_topology, Non_smooth_geometry_transition_across_edge, Topology_related_to_self_intersecting_geometry, Steep_geometry_transition_across_edge, Topology_related_to_overlapping_geometry, Topology_related_to_multiply_defined_geometry, Overcomplex_topology_and_geometry_relationship))
    SUBTYPE OF(Inapt_data);
  END_ENTITY;

  ENTITY Topology_related_to_nearly_degenerate_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Short_length_edge, Small_area_face, Entirely_narrow_face))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY Short_length_edge
    SUBTYPE OF(Topology_related_to_nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
             AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Small_area_face
    SUBTYPE OF(Topology_related_to_nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE']);
  END_ENTITY;

  ENTITY Entirely_narrow_face
    SUBTYPE OF(Topology_related_to_nearly_degenerate_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Geometric_gap_in_topology
    ABSTRACT SUPERTYPE OF (ONEOF(Gap_between_adjacent_edges_in_loop, Gap_between_vertex_and_base_surface, Gap_between_vertex_and_edge, Gap_between_edge_and_base_surface, Gap_between_pcurves_related_to_an_edge, Gap_between_faces_related_to_an_edge))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY Gap_between_adjacent_edges_in_loop
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.ORIENTED_EDGE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Gap_between_vertex_and_base_surface
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT',
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_FACE_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Gap_between_vertex_and_edge
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT',
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Gap_between_edge_and_base_surface
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE',
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_FACE_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Gap_between_pcurves_related_to_an_edge
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['BASIC_GEOMETRY_ARM.POINT_ON_SURFACE',
             'BASIC_GEOMETRY_ARM.POINT_ON_SURFACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Gap_between_faces_related_to_an_edge
    SUBTYPE OF(Geometric_gap_in_topology);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Non_smooth_geometry_transition_across_edge
    ABSTRACT SUPERTYPE OF (ONEOF(G1_discontinuity_between_adjacent_faces, G2_discontinuity_between_adjacent_faces))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY G1_discontinuity_between_adjacent_faces
    SUBTYPE OF(Non_smooth_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE']);
  END_ENTITY;

  ENTITY G2_discontinuity_between_adjacent_faces
    SUBTYPE OF(Non_smooth_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2                                 : Shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance                            : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF.assessment_specification_2.threshold))
            AND ('VALUE_WITH_UNIT_ARM.RATIO_MEASURE'
            IN value_limit_type(SELF.assessment_specification_2.threshold));
      WR3 : validate_measured_data_type(SELF,
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'PLANE_ANGLE_AND_RATIO_PAIR');
      WR4 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR5 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE']);
      WR6 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.RATIO_MEASURE']);
  END_ENTITY;

  ENTITY Topology_related_to_self_intersecting_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Self_intersecting_loop, Self_intersecting_shell, Intersecting_connected_face_sets))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY Self_intersecting_loop
    SUBTYPE OF(Topology_related_to_self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      arc_length_distance_factor                                 : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE',
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Self_intersecting_shell
    SUBTYPE OF(Topology_related_to_self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      geodesic_separation_factor                                 : REAL;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_FACE_SURFACE',
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_FACE_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Intersecting_connected_face_sets
    SUBTYPE OF(Topology_related_to_self_intersecting_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET',
             'ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_FACE_SURFACE',
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_FACE_SURFACE']);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Steep_geometry_transition_across_edge
    ABSTRACT SUPERTYPE OF (ONEOF(Steep_angle_between_adjacent_edges, Steep_angle_between_adjacent_faces))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY Steep_angle_between_adjacent_edges
    SUBTYPE OF(Steep_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.EDGE_LOOP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.ORIENTED_EDGE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE']);
  END_ENTITY;

  ENTITY Steep_angle_between_adjacent_faces
    SUBTYPE OF(Steep_geometry_transition_across_edge);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.CONNECTED_FACE_SET']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'POINT_ON_EDGE_CURVE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.PLANE_ANGLE_MEASURE']);
  END_ENTITY;

  ENTITY Topology_related_to_overlapping_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Partly_overlapping_faces, Partly_overlapping_edges))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY Partly_overlapping_faces
    SUBTYPE OF(Topology_related_to_overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE',
             'BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.FACE','ELEMENTAL_TOPOLOGY_ARM.FACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE']);
  END_ENTITY;

  ENTITY Partly_overlapping_edges
    SUBTYPE OF(Topology_related_to_overlapping_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE',
             'BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.EDGE','ELEMENTAL_TOPOLOGY_ARM.EDGE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Topology_related_to_multiply_defined_geometry
    ABSTRACT SUPERTYPE OF (ONEOF(Multiply_defined_faces, Multiply_defined_vertices, Multiply_defined_edges))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY Multiply_defined_faces
    SUBTYPE OF(Topology_related_to_multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE',
             'BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Multiply_defined_vertices
    SUBTYPE OF(Topology_related_to_multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold)) AND
            ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT',
             'BASIC_GEOMETRIC_TOPOLOGY_ARM.VERTEX_POINT']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Multiply_defined_edges
    SUBTYPE OF(Topology_related_to_multiply_defined_geometry);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE',
             'BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Overcomplex_topology_and_geometry_relationship
    ABSTRACT SUPERTYPE OF (ONEOF(Unused_patches, Edge_with_excessive_segments, Face_surface_with_excessive_patches_in_one_direction))
    SUBTYPE OF(Inapt_topology_and_geometry_relationship);
  END_ENTITY;

  ENTITY Unused_patches
    SUBTYPE OF(Overcomplex_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
             AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'B_SPLINE_SURFACE_STRIP']);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Edge_with_excessive_segments
    SUBTYPE OF(Overcomplex_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.EDGE_CURVE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Face_surface_with_excessive_patches_in_one_direction
    SUBTYPE OF(Overcomplex_topology_and_geometry_relationship);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['BASIC_GEOMETRIC_TOPOLOGY_ARM.FACE_SURFACE']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Inapt_manifold_solid_brep
    ABSTRACT SUPERTYPE OF (ONEOF(Partly_overlapping_solids, Small_volume_solid, Multiply_defined_solids, Entirely_narrow_solid, Solid_with_excessive_number_of_voids))
    SUBTYPE OF(Inapt_data);
  END_ENTITY;

  ENTITY Partly_overlapping_solids
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                                     : length_measure;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
             AND ('VALUE_WITH_UNIT_ARM.AREA_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.AREA_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP',
             'ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            ['ELEMENTAL_TOPOLOGY_ARM.FACE','ELEMENTAL_TOPOLOGY_ARM.FACE']);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.AREA_MEASURE']);
  END_ENTITY;

  ENTITY Small_volume_solid
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.VOLUME_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.VOLUME_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.VOLUME_MEASURE']);
  END_ENTITY;

  ENTITY Multiply_defined_solids
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT'
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.LENGTH_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.LENGTH_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP',
             'ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Entirely_narrow_solid
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_logical_test;
      width_tolerance                                            : length_measure;
    WHERE
      WR1 : validate_measured_data_type(SELF,
            'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.BOOLEAN_VALUE');
      WR2 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR3 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR4 : validate_accuracy_types(SELF,
            ['VALUE_WITH_UNIT_ARM.LENGTH_MEASURE']);
  END_ENTITY;

  ENTITY Solid_with_excessive_number_of_voids
    SUBTYPE OF(Inapt_manifold_solid_brep);
      SELF\Shape_data_quality_criterion.assessment_specification : Shape_data_quality_assessment_by_numerical_test;
    WHERE
      WR1 : ('SHAPE_DATA_QUALITY_CRITERIA_ARM.' +
            'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' 
            IN TYPEOF(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold))
            AND ('VALUE_WITH_UNIT_ARM.COUNT_MEASURE'
            IN value_limit_type(SELF\Shape_data_quality_criterion.assessment_specification\Shape_data_quality_assessment_by_numerical_test.threshold));
      WR2 : validate_measured_data_type(SELF,
            'VALUE_WITH_UNIT_ARM.COUNT_MEASURE');
      WR3 : validate_inspected_elements_type(SELF,
            ['ADVANCED_BOUNDARY_REPRESENTATION_ARM.MANIFOLD_SOLID_BREP']);
      WR4 : validate_locations_of_extreme_value_type(SELF,
            []);
      WR5 : validate_accuracy_types(SELF,
            []);
  END_ENTITY;

  ENTITY Shape_summary_request_with_representative_value
    SUBTYPE OF(Summary_report_request);
  END_ENTITY;

  ENTITY Shape_criteria_representation_with_accuracy
    SUBTYPE OF(Shape_data_quality_criteria_representation);
      required_general_accuracy : SET [1:?] OF Shape_measurement_accuracy;
  END_ENTITY;

  ENTITY Shape_measurement_accuracy;
      description : text;
      range       : shape_data_quality_value_limit_type_select;
  END_ENTITY;

  ENTITY Shape_data_quality_criterion_and_accuracy_association;
      required_specific_accuracy   : Shape_measurement_accuracy;
      shape_data_quality_criterion : Shape_data_quality_criterion;
  END_ENTITY;



  FUNCTION validate_inspected_elements_type
      (ei:shape_data_quality_criterion;
       type_list:BAG OF STRING):LOGICAL;
       LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdiri: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all shape_data_quality_inspection_instance_report_item
       -- instances associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result and
       -- shape_data_quality_instance_report
  
       sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       IF(SIZEOF(sdir) = 0) THEN
         RETURN(TRUE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdiri := sdiri + QUERY(q <* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
  
       -- STEP-2
       -- check whether the types of inspected_elements attribute
       -- of collected instances include all the type names 
       -- in the type list given as an input argument of this 
       -- function and they do not include any other type names. 
  
       -- If there is no instance_report_item, then return true.
       IF(SIZEOF(sdiri) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- When reports exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(sdiri);
         -- If size of inspected_elements is not equal to the size of
         -- type_list, then return false.
         IF(SIZEOF(sdiri[i].inspected_elements) <> 
            SIZEOF(type_list)) THEN
           RETURN(FALSE);
         END_IF;
         -- check all elements of type_lists 
         -- for each elements of inspected_elements.
         t_type_list := type_list;
         REPEAT j:= 1 TO SIZEOF(sdiri[i].inspected_elements);
           REPEAT k:= 1 TO SIZEOF(t_type_list);
             IF(t_type_list[k] IN
                TYPEOF(sdiri[i].inspected_elements[j])) THEN
              t_type_list := t_type_list - t_type_list[k];
              ESCAPE;
             END_IF;
           END_REPEAT;
         END_REPEAT;
         IF(SIZEOF(t_type_list) > 0) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
      RETURN(TRUE);
  END_FUNCTION;

  FUNCTION validate_locations_of_extreme_value_type
      (ei:shape_data_quality_criterion;
       type_list:BAG OF STRING):LOGICAL;
       LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdei: SET OF
          INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
         t_type_list:BAG OF STRING:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all instance_report_item_with_extreme_instances instances
       -- associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result and
       -- shape_data_quality_instance_report.
  
       sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdei := sdei + QUERY(q <* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- STEP-2
       -- check whether the types of locations_of_extreme_value attributes of
       -- all extreme_instances of collected instances include all the type names
       -- in the type list given as an input argument of this function
       -- and they do not include any other type names. 
  
       -- If there is no instace report, then return true.
       IF(SIZEOF(sdei) = 0) THEN
         RETURN(TRUE);
       END_IF;
    
       -- If the type_list is empty and 
       -- instance_report_item_with_extreme_instances exists, then return false.
       IF((SIZEOF(type_list) = 0) AND (SIZEOF(sdei) <> 0)) THEN
         RETURN(FALSE);
       END_IF;
    
       -- When report_items exist, then perform checking process.
       REPEAT i:= 1 TO SIZEOF(sdei);
         REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
           -- If size of locations_of_extreme_value is not equal to
           -- the size of type_list, then return false.
           IF(SIZEOF(sdei[i].extreme_instances[j].
                             locations_of_extreme_value) <>
              SIZEOF(type_list)) THEN
              RETURN(FALSE);
           END_IF;
           t_type_list := type_list;
           -- check all elements of type_lists 
           --  for each elements of locations_of_extreme_value.
           REPEAT k:= 1 TO SIZEOF(sdei[i].extreme_instances[j]
                                    .locations_of_extreme_value);
             REPEAT l:= 1 TO SIZEOF(t_type_list);
               IF(t_type_list[l] IN
                 TYPEOF(sdei[i].extreme_instances[j].
                         locations_of_extreme_value[k])) THEN
                 t_type_list := t_type_list - t_type_list[l];
                 ESCAPE;
               END_IF;
             END_REPEAT;
           END_REPEAT;
           IF(SIZEOF(t_type_list) > 0) THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_REPEAT;
    
       RETURN(TRUE);
  END_FUNCTION;

  FUNCTION validate_measured_data_type
      (ei:shape_data_quality_criterion;
       type_string: STRING):LOGICAL;
       LOCAL
         sdqir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
         sdcr: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT:=[];
         sdir: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT:=[];
         sdii: SET OF
          SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM:=[];
         sdei: BAG OF
          INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES:=[];
       END_LOCAL;
    
       -- STEP-1
       -- collect all shape_data_quality_inspection_criterion_report instances,
       -- all shape_data_quality_inspection_instance_report_item instances, and
       -- instance_report_item_with_extreme_instances instances
       -- associated with the given shape_data_quality_criterion
       -- via shape_data_quality_inspection_result.
    
       sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_RESULT.'+
                     'CRITERION_INSPECTED'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
              IN TYPEOF(q));
       IF(SIZEOF(sdqir) = 0) THEN
         RETURN(TRUE);
       END_IF;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdcr := sdcr + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdqir);
         sdir := sdir + QUERY(q <* bag_to_set(USEDIN(sdqir[i],
                     'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                     'DATA_QUALITY_INSPECTION_REPORT.'+
                     'INSPECTION_RESULT'))|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- If there is no report, then return true.
       IF((SIZEOF(sdcr) = 0) AND (SIZEOF(sdir) = 0)) THEN
         RETURN(TRUE);
       END_IF;
    
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdii := sdii + QUERY(q <* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'
              IN TYPEOF(q));
       END_REPEAT;
       REPEAT i:= 1 TO SIZEOF(sdir);
         sdei := sdei + QUERY(q <* sdir[i].inspected_instances|
             'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
             'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES'
              IN TYPEOF(q));
       END_REPEAT;
    
       -- When reports exist, then perform checking process.
    
       -- Check representative_measured_value of 
       -- shape_data_quality_inspection_criterion_report
       REPEAT i:= 1 TO SIZEOF(sdcr);
        IF(NOT(type_string IN
           TYPEOF(sdcr[i].representative_measured_value))) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
       -- Check measured_value of shape_data_quality_inspection_
       -- instance_report_item
       REPEAT i:= 1 TO SIZEOF(sdii);
         IF(NOT(type_string IN
           TYPEOF(sdii[i].measured_value))) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    
       -- Check measured_value of extreme_instances of
       -- instance_report_item_with_extreme_instance
       REPEAT i:= 1 TO SIZEOF(sdei);
         REPEAT j:= 1 TO SIZEOF(sdei[i].extreme_instances);
           IF(NOT(type_string IN
             TYPEOF(sdei[i].extreme_instances[j].measured_value)))
           THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_REPEAT;
    
       RETURN(TRUE);
  END_FUNCTION;

  FUNCTION validate_accuracy_types
    (ei:shape_data_quality_criterion;
     type_list:BAG OF STRING):LOGICAL;
     LOCAL
       sdqca: BAG OF
        SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION:=[];
       sma: BAG OF SHAPE_MEASUREMENT_ACCURACY:=[];
       sdqir: SET OF
        SHAPE_DATA_QUALITY_INSPECTION_RESULT:=[];
       scraa: BAG OF
        SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION:=[];
       t_logic:BOOLEAN;
     END_LOCAL;
     -- STEP-1
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_data_criterion_and_accuracy_association 
     -- that refers to given shape_data_quality_criterion.
     sdqca := USEDIN(ei,
               'SHAPE_DATA_QUALITY_CRITERIA_ARM.'+
               'SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_CRITERION');
     IF(SIZEOF(sdqca) <> 0) THEN
       REPEAT i:= 1 TO SIZEOF(sdqca);
         sma := sma + sdqca[i].required_specific_accuracy;
       END_REPEAT;
  
       -- STEP-2
       -- check whether the collected types include all the type names
       -- in the type list given as an input argument of this function
       -- and they do not include any other type names. 
       IF(SIZEOF(type_list) < SIZEOF(sma)) THEN
         RETURN(FALSE);
       END_IF;
  
       REPEAT i:= 1 TO SIZEOF(sma);
         t_logic := FALSE;
         REPEAT j:= 1 TO SIZEOF(type_list);
           IF(type_list[j] IN value_limit_type(sma[i].range)) THEN
             t_logic := TRUE;
             ESCAPE;
           END_IF;
         END_REPEAT;
         IF(NOT(t_logic)) THEN
           RETURN(FALSE);
         END_IF;
       END_REPEAT;
    END_IF;
  
     -- STEP-3
     -- collect types of range attribute of shape_measurement_accuracy
     -- referred from shape_inspection_result_accuracy_association
     -- that refers to shape_data_quality_inspection_result
     -- for the given shape_data_quality_criterion.
     sdqir := QUERY(q <* bag_to_set(USEDIN(ei,
                   'PRODUCT_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                   'DATA_QUALITY_INSPECTION_RESULT.'+
                   'CRITERION_INSPECTED'))|
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
           'SHAPE_DATA_QUALITY_INSPECTION_RESULT'
            IN TYPEOF(q));
     IF(SIZEOF(sdqir) = 0) THEN
       RETURN(TRUE);
     END_IF;
  
     REPEAT i:= 1 TO SIZEOF(sdqir);
       scraa := USEDIN(sdqir[i],
               'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
               'SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION.'+
               'SHAPE_DATA_QUALITY_RESULT');
       IF(SIZEOF(scraa) <> 0) THEN
         sma := [];
         REPEAT j:= 1 TO SIZEOF(scraa);
           sma := sma + scraa[j].applied_specific_accuracy;
         END_REPEAT;
  
         -- STEP-4
         -- check whether the collected types include all the type
         -- names in the type list given as an input argument of
         -- this function and they do not include any other type names.
         IF(SIZEOF(type_list) < SIZEOF(sma)) THEN
           RETURN(FALSE);
         END_IF;
  
         REPEAT j:= 1 TO SIZEOF(sma);
           t_logic := FALSE;
           REPEAT k:= 1 TO SIZEOF(type_list);
             IF(type_list[k] IN value_limit_type(sma[j].range)) THEN
               t_logic := TRUE;
               ESCAPE;
             END_IF;
           END_REPEAT;
           IF(NOT(t_logic)) THEN
             RETURN(FALSE);
           END_IF;
         END_REPEAT;
       END_IF;
     END_REPEAT;
  
     RETURN(TRUE);
  END_FUNCTION;

  FUNCTION value_limit_type
    (iv:shape_data_quality_value_limit_type_select):SET OF STRING;
    LOCAL
      retval  : SET OF STRING := [];
    END_LOCAL;
    IF(('SHAPE_DATA_QUALITY_CRITERIA_ARM.'
       +'SHAPE_DATA_QUALITY_VALUE_RANGE') IN TYPEOF(iv)) THEN
      retval := TYPEOF(iv\Shape_data_quality_value_range.upper_limit\Value_with_unit.value_component);
    END_IF;
    IF(('SHAPE_DATA_QUALITY_CRITERIA_ARM.'
       +'SHAPE_DATA_QUALITY_VALUE_LIMIT') IN TYPEOF(iv)) THEN
      retval := TYPEOF(iv\Value_with_unit.value_component);
    END_IF;
    RETURN(retval);
  END_FUNCTION;
  
END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7816 - ISO/TS 10303-1524 shape_data_quality_inspection_result - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7187
*)

SCHEMA Shape_data_quality_inspection_result_arm;

  USE FROM Advanced_boundary_representation_arm;
  
  USE FROM Basic_curve_arm;
 
  USE FROM Basic_geometric_topology_arm;
  
  USE FROM B_spline_geometry_arm;

  USE FROM Composite_surface_arm;

  USE FROM Manifold_surface_arm;

  USE FROM Product_data_quality_inspection_result_arm;

  USE FROM Shape_data_quality_criteria_arm;
  
  USE FROM Shape_property_assignment_arm;
  
  REFERENCE FROM Foundation_representation_arm
    (using_representations);

  REFERENCE FROM Support_resource_arm
    (bag_to_set);

  REFERENCE FROM Product_data_quality_inspection_result_arm
    (inspected_product_view_definition);

  TYPE b_spline_or_composite_curve_select = SELECT
    (B_spline_curve,
     Composite_curve);
  END_TYPE;

  TYPE b_spline_or_rectangular_composite_surface_select = SELECT
    (B_spline_surface,
     Rectangular_composite_surface);
  END_TYPE;

  TYPE boolean_value = BOOLEAN;
  END_TYPE;

  TYPE closed_or_open_shell_select = SELECT
    (Closed_shell,
     Open_shell);
  END_TYPE;

  TYPE inspected_shape_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON inspected_element_select WITH
    (Axis_placement,
     b_spline_or_composite_curve_select,
     b_spline_or_rectangular_composite_surface_select,
     closed_or_open_shell_select,
     Connected_face_set,
     Curve,
     Direction,
     Edge_curve,
     Edge_loop,
     Face_surface,
 	 Manifold_solid_brep,
     Point,
     Surface,
     Vertex_point);
  END_TYPE;

  TYPE location_of_extreme_value_select = SELECT
    (B_spline_curve_knot_locator,
     B_spline_curve_segment,
     B_spline_surface_knot_locator,
     B_spline_surface_patch,
     B_spline_surface_strip,
     Boundary_curve_of_b_spline_or_rectangular_composite_surface,
     Composite_curve_transition_locator,
     Face_bound,
     inspected_shape_element_select,
     Oriented_edge,
     Point_on_edge_curve,
     Point_on_face_surface,
     Rectangular_composite_surface_transition_locator);
  END_TYPE;

  TYPE measured_value_select = SELECT
    (boolean_value,
     measure_value,
     Plane_angle_and_length_pair,
     Plane_angle_and_ratio_pair);
  END_TYPE;

  TYPE surface_boundary_type = ENUMERATION OF
    (u_parameter_min,
     v_parameter_min,
     u_parameter_max,
     v_parameter_max);
  END_TYPE;

  TYPE u_or_v_parameter = ENUMERATION OF
    (u_parameter,
     v_parameter);
  END_TYPE;

  ENTITY Shape_data_quality_inspection_criterion_report
    SUBTYPE OF(Data_quality_inspection_criterion_report);
      representative_measured_value : measured_value_select;
  END_ENTITY;

  ENTITY Plane_angle_and_ratio_pair;
      plane_angle_value : plane_angle_measure;
      ratio_value       : ratio_measure;
  END_ENTITY;

  ENTITY B_spline_curve_segment;
      basis_curve      : b_spline_curve;
      start_knot_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY Point_on_edge_curve
    SUBTYPE OF(point_on_curve);
      basis_edge_curve                : edge_curve;
    DERIVE
      SELF\point_on_curve.supporting_curve : curve := SELF.basis_edge_curve.edge_geometry;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_edge_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY Point_on_face_surface
    SUBTYPE OF(point_on_surface);
      basis_face_surface                  : face_surface;
    DERIVE
      SELF\point_on_surface.supporting_surface : surface := SELF.basis_face_surface.face_geometry;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_face_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY B_spline_curve_knot_locator;
      basis_curve : b_spline_curve;
      knot_index  : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY Composite_curve_transition_locator;
      basis_curve      : composite_curve;
      transition_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_curve) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY B_spline_surface_knot_locator;
      basis_surface     : b_spline_surface;
      knot_index        : INTEGER;
      surface_parameter : u_or_v_parameter;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY B_spline_surface_strip;
      basis_surface     : b_spline_surface;
      start_knot_index  : INTEGER;
      surface_parameter : u_or_v_parameter;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY B_spline_surface_patch;
      basis_surface      : b_spline_surface;
      u_start_knot_index : INTEGER;
      v_start_knot_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY Rectangular_composite_surface_transition_locator;
      basis_surface      : rectangular_composite_surface;
      surface_parameter  : u_or_v_parameter;
      u_transition_index : INTEGER;
      v_transition_index : INTEGER;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY Boundary_curve_of_b_spline_or_rectangular_composite_surface;
      basis_surface : b_spline_or_rectangular_composite_surface_select;
      boundary_type : surface_boundary_type;
    WHERE
      WR1 : SIZEOF(
            using_representations(SELF.basis_surface) *
            relating_geometric_models_of_extreme_values(SELF))>0;
  END_ENTITY;

  ENTITY Plane_angle_and_length_pair;
      plane_angle_value : plane_angle_measure;
      length_value      : length_measure;
  END_ENTITY;

  ENTITY Shape_data_quality_inspection_instance_report
    SUBTYPE OF(Data_quality_inspection_instance_report);
      SELF\data_quality_inspection_instance_report.inspected_instances : LIST [1:?] OF Shape_data_quality_inspection_instance_report_item;
  END_ENTITY;

  ENTITY Shape_data_quality_inspection_instance_report_item
    SUBTYPE OF(Data_quality_inspection_instance_report_item);
      SELF\Data_quality_inspection_instance_report_item.inspected_elements : SET [1:?] OF inspected_shape_element_select;
      measured_value     : measured_value_select;
  END_ENTITY;

  ENTITY Instance_report_item_with_extreme_instances
    SUBTYPE OF(Shape_data_quality_inspection_instance_report_item);
      extreme_instances : LIST [1:?] OF Extreme_instance;
  END_ENTITY;

  ENTITY Extreme_instance;
      locations_of_extreme_value : SET [1:?] OF location_of_extreme_value_select;
      measured_value             : measured_value_select;
  END_ENTITY;

  ENTITY Shape_data_quality_inspection_result
    SUBTYPE OF(Data_quality_inspection_result);
    SELF\data_quality_inspection_result.criterion_inspected:shape_data_quality_criterion;
  END_ENTITY;

  ENTITY Shape_data_quality_inspection_result_representation
    SUBTYPE OF(Data_quality_inspection_result_representation);
    WHERE
      WR1 : SIZEOF( QUERY( q <* SELF\representation.items|
                               'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
                               'SHAPE_DATA_QUALITY_INSPECTION_RESULT' IN TYPEOF(q))) > 0;
      WR2 : 'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_COORDINATE_SPACE' IN
            TYPEOF(SELF\representation.context_of_items);
      WR3 : SIZEOF(USEDIN(SELF,
                   'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.'+
                   'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'+
                   'REP_2'))>0;
  END_ENTITY;

  ENTITY Shape_inspection_result_representation_with_accuracy
    SUBTYPE OF(Shape_data_quality_inspection_result_representation);
      applied_general_accuracy : SET [1:?] OF Shape_measurement_accuracy;
  END_ENTITY;

  ENTITY Shape_inspection_result_accuracy_association;
      applied_specific_accuracy : Shape_measurement_accuracy;
      shape_data_quality_result : Shape_data_quality_inspection_result;
  END_ENTITY;

  ENTITY Shape_data_quality_inspected_shape_and_result_relationship
      SUBTYPE OF(Representation_relationship);
      SELF\Representation_relationship.rep_1 : Geometric_model;
      SELF\Representation_relationship.rep_2 : Shape_data_quality_inspection_result_representation;
    WHERE
      WR1 : SIZEOF(
            using_product_view_definition_of_geometric_model(SELF.rep_1)
            *
            bag_to_set(inspected_product_view_definition(SELF.rep_2))
            ) > 0;
      WR2 : SELF.rep_1\representation.context_of_items :=: 
            SELF.rep_2\representation.context_of_items;
  END_ENTITY;


  FUNCTION using_product_view_definition_of_geometric_model
  (item: Geometric_model) : SET OF Product_view_definition;
  LOCAL
    local_s_d_a: SET OF Shape_description_association := [];
    local_p_d: SET OF Product_view_definition := [];
    i : INTEGER;
  END_LOCAL;
  -- find Shape_description_association 
   local_s_d_a  := bag_to_set (USEDIN (item, 
   'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION')); 
  
  -- find Product_view_definitions
  REPEAT i := 1 TO HIINDEX (local_s_d_a);
     IF ('SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE' IN 
       TYPEOF (local_s_d_a[i].definition)) THEN
       IF ('PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF
         (local_s_d_a[i].definition\Item_shape.described_element))  THEN
         local_p_d := local_p_d + local_s_d_a[i].definition\Item_shape.described_element;
       END_IF;
     END_IF;
  END_REPEAT;

  RETURN (local_p_d);
  END_FUNCTION;

  FUNCTION relating_geometric_models_of_extreme_values
  (item:location_of_extreme_value_select)
   : SET OF Geometric_model;
  
  LOCAL
    results   : SET OF Geometric_model:=[];
    exti      : SET OF extreme_instance:=[];
    ii_ei     : SET OF 
         instance_report_item_with_extreme_instances:=[];
    sdiir        : SET OF 
         shape_data_quality_inspection_instance_report:=[];
    sdqr      : SET OF 
         shape_data_quality_inspection_result_representation:=[];
    sdisr     : SET OF 
         shape_data_quality_inspected_shape_and_result_relationship:=[];
  END_LOCAL;
  -- find extreme_instances 
  exti := exti + 
     bag_to_set( USEDIN(item,
       'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
       'EXTREME_INSTANCE.'+
       'LOCATIONS_OF_EXTREME_VALUE')); 
  
  -- find instance_report_item_with_extreme_instances 
  REPEAT i := 1 TO HIINDEX (exti);
    ii_ei := ii_ei + 
      bag_to_set( USEDIN(exti[i],
        'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
        'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES.'+
        'EXTREME_INSTANCES')); 
  END_REPEAT;
  
  -- find shape_data_quality_inspection_instance_report
  REPEAT i := 1 TO HIINDEX (ii_ei);
    sdiir := sdiir + 
      bag_to_set( USEDIN(ii_ei[i],
        'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
        'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT.'+
        'INSPECTED_INSTANCES')); 
  END_REPEAT;
  
  -- find shape_data_quality_inspection_result_representation
  REPEAT i := 1 TO HIINDEX (sdiir);
   sdqr := sdqr + 
     QUERY(i1<* bag_to_set( USEDIN(sdiir[i].inspection_result,
       'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))|
     'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
     'SHAPE_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION' 
      IN TYPEOF(i1)); 
  END_REPEAT;
  
  -- find shape_data_quality_inspected_shape_and_result_relationship
  REPEAT i := 1 TO HIINDEX (sdqr);
    sdisr := sdisr +  bag_to_set(USEDIN(sdqr[i],
       'SHAPE_DATA_QUALITY_INSPECTION_RESULT_ARM.' +
       'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'+
       'REP_2')); 
  END_REPEAT;
  
  -- find shape_representation
  REPEAT i := 1 TO HIINDEX (sdisr);
    results := results + sdisr[i].rep_1;
  END_REPEAT;
  
  RETURN (results);
  END_FUNCTION;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N8047 - ISO/TS 10303-1764 Shape feature - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7463
*)

SCHEMA Shape_feature_arm;

USE FROM Characterizable_object_arm; -- ISO/TS 10303-1765 
USE FROM Contextual_shape_positioning_arm; -- ISO/TS 10303-1027
REFERENCE FROM Support_resource_arm(bag_to_set);  -- ISO/TS 10303-1765
USE FROM Property_assignment_arm; --  ISO/TS 10303-1030

TYPE sf_shapeable_item = SELECT BASED_ON shapeable_item WITH 
  (Characterizable_object);
END_TYPE; 

TYPE sf_property_assignment_select = SELECT BASED_ON property_assignment_select WITH ( 
  Characterizable_object);
END_TYPE; 

ENTITY Shape_feature_definition
  SUBTYPE OF (Characterizable_object);
  DERIVE
    feature_model : SET [1:?] OF Geometric_model := get_geometric_model(of_shape); 
  INVERSE
    of_shape : Item_shape FOR described_element;
  WHERE
    WR1: EXISTS(feature_model);
END_ENTITY;

ENTITY Instanced_feature  
  SUBTYPE OF (Shape_element, Shape_feature_definition);
END_ENTITY;

ENTITY Placed_feature  
  SUBTYPE OF (Shape_element);
   definition : Shape_feature_definition;
END_ENTITY;

ENTITY General_feature
  SUBTYPE OF (Shape_feature_definition);
END_ENTITY; 

FUNCTION get_geometric_model(input : Item_shape) : SET OF Geometric_model;
  LOCAL
    sda : SET OF Shape_description_association := [];
    gm : SET OF Geometric_model := [];
  END_LOCAL;
 
  sda := bag_to_set(USEDIN(input,
	 	'PROPERTY_ASSIGNMENT_ARM.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'));
 
  REPEAT i := 1 to SIZEOF(sda) BY 1;
    IF 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF (sda[i]) THEN
      gm := gm + sda[i]\Property_definition_representation.used_representation;
    END_IF;
  END_REPEAT;
  RETURN(gm);
END_FUNCTION;

SUBTYPE_CONSTRAINT sf_shape_element FOR Shape_element;
  ONEOF (Instanced_feature, Placed_feature);
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(* 
	ISO TC184/SC4/WG12 N8050 - ISO/TS 10303-1032 Shape property assignment - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N7466
*)


SCHEMA Shape_property_assignment_arm; 

USE FROM Property_assignment_arm;
(*REFERENCE FROM*) USE FROM Assembly_structure_arm; -- ISO/TS 10303-1026

(*REFERENCE FROM*) USE FROM External_model_arm; -- ISO/TS 10303-1033

USE FROM Geometric_model_relationship_arm; -- ISO/TS 10303-1403 
USE FROM Product_view_definition_relationship_arm; -- ISO/TS 10303-1041

TYPE spa_property_assignment_select = SELECT BASED_ON property_assignment_select WITH ( 
  Item_shape,
  Shape_element, 
  Shape_element_relationship);
END_TYPE; 

TYPE chained_geometric_model_link = SELECT (
    Geometric_placement_operation,
    Geometric_coordinate_space,
    Geometric_model_relationship);
END_TYPE;

TYPE described_element_select = SELECT (
  View_definition_relationship,
  Product_occurrence_definition_relationship);
END_TYPE;  

TYPE shape_element_or_relationship_select = SELECT (
  Shape_element,
  Shape_element_relationship);
END_TYPE;  

TYPE geometric_item_specific_usage_select = SELECT (
  Shape_element, 
  Shape_element_relationship);
END_TYPE; 

TYPE spa_represented_definition = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON represented_definition WITH (
    Item_shape,
    Shape_element,
    Shape_element_relationship);
END_TYPE;

TYPE assigned_shape_property_select = EXTENSIBLE GENERIC_ENTITY SELECT (
    Item_shape,
    Shape_element,
    Shape_element_relationship);
END_TYPE;

TYPE shape_model = EXTENSIBLE GENERIC_ENTITY SELECT
  (External_geometric_model, 
   Geometric_model);
END_TYPE; 

TYPE shapeable_item = EXTENSIBLE GENERIC_ENTITY SELECT
  (Product_occurrence_definition_relationship, 
   Product_view_definition, 
   View_definition_relationship);
END_TYPE; 

ENTITY Associated_item_shape
  SUBTYPE OF (Item_shape);
DERIVE
  associated_model : shape_model := association\Property_definition_representation.used_representation;
INVERSE  
  association : Shape_description_association FOR definition;
END_ENTITY;  

ENTITY Associated_shape_element 
  SUBTYPE OF (Shape_element);
  SELF\Shape_element.containing_shape : Associated_item_shape;
DERIVE
  associated_item : geometric_model_item := association\Geometric_item_specific_usage.identified_item;
INVERSE 
  association : Geometric_item_specific_usage FOR definition;
WHERE
  WR1: EXISTS(associated_item);
  WR2: association\Geometric_item_specific_usage.used_model\Geometric_model.context_of_items = 
  SELF\Shape_element.containing_shape\Associated_item_shape.association\Property_definition_representation.used_representation\Geometric_model.context_of_items;
END_ENTITY;

ENTITY Contextual_item_shape
  SUBTYPE OF (Item_shape);
    SELF\Item_shape.described_element : described_element_select;
  DERIVE
    shaped_product : Product_view_definition := spa_get_definition(SELF);
END_ENTITY;

ENTITY Geometric_item_specific_usage;
    name            : STRING;
    description     : OPTIONAL STRING;
    definition      : geometric_item_specific_usage_select;
    identified_item : geometric_model_item;
    used_model      : shape_model;      
END_ENTITY;

ENTITY Chain_based_geometric_item_specific_usage
    SUBTYPE OF (Geometric_item_specific_usage);
    nodes : LIST [2:?] OF UNIQUE Geometric_model;
    undirected_link : LIST [1:?] OF UNIQUE chained_geometric_model_link;
END_ENTITY;

ENTITY Item_shape;
  id                : OPTIONAL STRING;
  description       : OPTIONAL STRING;
  described_element : shapeable_item;
UNIQUE
  UR1: described_element;
END_ENTITY;

ENTITY Assigned_shape_property
  SUBTYPE OF (Assigned_property);
  SELF\Assigned_property.described_element : assigned_shape_property_select;
END_ENTITY; 

ENTITY Shape_dependent_property_representation -- maps to property_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : Assigned_shape_property;
END_ENTITY;

ENTITY Shape_description_association -- maps to shape_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : Associated_item_shape;
  SELF\Property_definition_representation.used_representation : shape_model;
END_ENTITY;

ENTITY Shape_element_description_association -- maps to shape_def_rep
  SUBTYPE OF (Property_definition_representation);
  SELF\Property_definition_representation.definition : shape_element_or_relationship_select;
  SELF\Property_definition_representation.used_representation : shape_model;
END_ENTITY;

ENTITY Shape_element;
    id               : OPTIONAL STRING;
    element_name     : STRING;
    description      : OPTIONAL STRING;
    containing_shape : Item_shape;
UNIQUE
    UR1: id, containing_shape;    
WHERE
    WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Shape_element_relationship;
    relation_type : OPTIONAL STRING;
    description   : OPTIONAL STRING;
    relating      : Shape_element;
    related       : Shape_element;
  WHERE
    WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
END_ENTITY;

SUBTYPE_CONSTRAINT property_definition_representation_subtype FOR Property_definition_representation;
  ONEOF (Shape_description_association, Shape_dependent_property_representation, Shape_element_description_association);
END_SUBTYPE_CONSTRAINT;

FUNCTION spa_get_definition ( input : Contextual_item_shape ): Product_view_definition;
  IF ('PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_USAGE'
    IN TYPEOF(input\Item_shape.described_element))
    THEN
      RETURN(input\Item_shape.described_element\View_definition_relationship.related_view);
  END_IF;
  IF ('ASSEMBLY_STRUCTURE_ARM.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP' IN
      TYPEOF(input\Item_shape.described_element))
    THEN
      RETURN(input\Item_shape.described_element\Product_occurrence_definition_relationship.related_view);
  END_IF;    
  RETURN(?);
END_FUNCTION;

END_SCHEMA;  
(*
 ISO TC184/SC4/WG12 N1270 - ISO/TS 10303-1502 Shell based wireframe - EXPRESS ARM
*)

SCHEMA Shell_based_wireframe_arm;

USE FROM Elemental_geometric_shape_arm; -- ISO 10303-1004

ENTITY Shell_based_wireframe_shape_representation
SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N7139 - ISO/TS 10303-1133 Single part representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N6087
*) 


SCHEMA Single_part_representation_arm;

USE FROM Document_assignment_arm;    -- ISO/TS 10303-1122

USE FROM Extended_measure_representation_arm;    -- ISO/TS 10303-1106

USE FROM Part_view_definition_arm;    -- ISO/TS 10303-1023

USE FROM Person_organization_assignment_arm;    -- ISO/TS 10303-1013

USE FROM Property_assignment_arm;    -- ISO/TS 10303-1030

USE FROM Shape_property_assignment_arm;    -- ISO/TS 10303-1032


TYPE spr_documented_element_select = SELECT BASED_ON documented_element_select WITH 
   (Part, 
    Part_version, 
    Part_view_definition);
END_TYPE; 

TYPE spr_organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_or_person_in_organization_item WITH 
   (Document, 
    Document_definition, 
    Document_version, 
    Part, 
    Part_version, 
    Part_view_definition);
END_TYPE; 

TYPE spr_product_property_assignment = SELECT BASED_ON property_assignment_select WITH 
   (Part_view_definition);
END_TYPE; 

END_SCHEMA;  -- Single_part_representation_arm
(*
 ISO TC184/SC4/WG12 N7855 - ISO/TS 10303-1792 Sketch - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7211
*)


SCHEMA Sketch_arm;

USE FROM Geometric_constraints_arm;
USE FROM Solid_model_arm; -- ISO/TS 10303-1793

TYPE planar_curve_select = EXTENSIBLE SELECT
  (Line,
   Conic);
END_TYPE;

TYPE sketch_basis_select = EXTENSIBLE SELECT
  (planar_curve_select,
   Advanced_face);
END_TYPE;

TYPE sketch_element_select = EXTENSIBLE SELECT
  (Point,
   Curve);
WHERE
  WR1: 'ELEMENTAL_GEOMETRIC_SHAPE_ARM.DETAILED_GEOMETRIC_MODEL_ELEMENT' IN TYPEOF(SELF);
END_TYPE;

TYPE sketch_type_select = SELECT
  (Sketch_2d_representation,
   Positioned_sketch,
   Subsketch);
END_TYPE;

TYPE surface_or_solid_model = EXTENSIBLE GENERIC_ENTITY SELECT
  (Solid_model);
END_TYPE;

TYPE curves_or_area = ENUMERATION OF
  (curves, area);
END_TYPE;

ENTITY Implicit_explicit_sketch_relationship;
    implicit_sketch :  Repositioned_sketch_2d_in_3d; 
    explicit_sketch :  Positioned_sketch;
END_ENTITY;

ENTITY Implicit_planar_intersection_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  external_surface : Surface;
END_ENTITY;

ENTITY Implicit_planar_intersection_point
    SUBTYPE OF (Auxiliary_geometric_representation_item);
    using_sketch   : Positioned_sketch;
    computed_representation  : Cartesian_point;
    external_curve : Curve;
END_ENTITY;

ENTITY Implicit_planar_model_intersection_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  intersected_model : surface_or_solid_model;
END_ENTITY;

ENTITY Implicit_planar_projected_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  external_curve       : Curve;
  projection_direction : Direction;
END_ENTITY;

ENTITY Implicit_planar_projection_point
    SUBTYPE OF (Auxiliary_geometric_representation_item);
    using_sketch   : Positioned_sketch;
    computed_representation  : Cartesian_point;
    external_point       : Point;
    projection_direction : Direction;
END_ENTITY;

ENTITY Implicit_planar_silhouette_curve
  SUBTYPE OF (Curve, Auxiliary_geometric_representation_item);
  using_sketch                  : Positioned_sketch;
  computed_representation       : Curve;
  silhouetted_model : surface_or_solid_model;
  view_direction    : Direction;
END_ENTITY;

ENTITY Positioned_sketch
  SUBTYPE OF (Detailed_geometric_model_element);
  sketch_basis       : sketch_basis_select;
  auxiliary_elements : 
    SET[0:?] OF Auxiliary_geometric_representation_item;
END_ENTITY;

ENTITY Repositioned_sketch_2d_in_3d
  SUBTYPE OF (Detailed_geometric_model_element);
     source : Sketch_2d_representation;
     mapping_origin : Axis_placement;
     mapping_target : Axis_placement;
   WHERE
    WR1: mapping_origin.dim = 2;
    WR2: mapping_target.dim = 3;
 END_ENTITY;

ENTITY Rigid_subsketch
  SUBTYPE OF (Subsketch); 
END_ENTITY;

ENTITY Sketch_2d_representation
  SUBTYPE OF (Geometric_model);
  sketch_2d_semantics  : curves_or_area; 
  SELF\representation.items : SET[1:?] OF sketch_element_select;
WHERE
  WR1: SELF\Representation.context_of_items\Geometric_coordinate_space.dimension_count = 2;
END_ENTITY;

ENTITY Subsketch
  SUBTYPE OF (Detailed_geometric_model_element);
  subsketch_elements : SET[1:?] OF sketch_element_select; 
  owning_sketch      : sketch_type_select;
END_ENTITY;

END_SCHEMA; -- sketch_schema
(*
   ISO TC184/SC4/WG12 N6261 - ISO/TS 10303-1746 Software - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N4185
*)



SCHEMA Software_arm;

	USE FROM Document_definition_arm;	-- ISO/TS 10303-1123
	USE FROM Information_product_arm;	-- ISO/TS 10303-xxxx

  ENTITY Software 
    SUBTYPE OF (Information_product);
    UNIQUE 
      UR1: SELF\Product.id;
  END_ENTITY;

  ENTITY Software_definition 
    SUBTYPE OF (Information_definition);
    SELF\Product_view_definition.defined_version : Software_version;
  END_ENTITY;

  ENTITY Software_version
    SUBTYPE OF (Information_version);
    SELF\Product_version.of_product : Software;
  END_ENTITY;

RULE software_version_constraint FOR 
(Product_version);
WHERE
  WR1: SIZEOF ( QUERY ( pv <* Product_version | ( NOT ( 'SOFTWARE_ARM.' + 'SOFTWARE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'SOFTWARE_ARM.' + 'SOFTWARE' IN TYPEOF ( pv.of_product) ) ) ) =0 ;
END_RULE; 

RULE software_definition_constraint FOR 
(Product_view_definition);
WHERE
  WR1: SIZEOF ( QUERY ( pvd <* Product_view_definition | ( NOT ( 'SOFTWARE_ARM.' + 'SOFTWARE_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'SOFTWARE_ARM.' + 'SOFTWARE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0 ;
END_RULE; 

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N6932 - ISO/TS 10303-1793 Solid model - EXPRESS ARM
*)
SCHEMA Solid_model_arm;

USE FROM Elemental_geometric_shape_arm; -- ISO/TS 10303-1004

ENTITY Solid_model
  SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY;
  
END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N7795 - ISO/TS 10303-1319 Solid with local modification - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N5497
 *)

SCHEMA Solid_with_local_modification_arm;

USE FROM Basic_geometric_topology_arm; -- ISO/TS 10303-1323

USE FROM Procedural_solid_model_arm; -- ISO/TS 10303-131

USE FROM Topologically_bounded_surface_arm; -- ISO/TS 10303-1511

  TYPE blend_end_condition = SELECT
    (Edge_curve,
    Point_on_curve,
    Vertex);
  END_TYPE;

  TYPE blend_radius_variation = ENUMERATION OF
    (linear,
     cubic,
     unspecified);
  END_TYPE;

  TYPE sculpting_surface = SELECT
    (Advanced_face,
     Advanced_open_shell,
     Surface);
  END_TYPE;
 
  TYPE solid_with_placed_feature = SELECT
    (Solid_with_depression,
    Solid_with_protrusion,
    Solid_with_circular_pattern,
    Solid_with_rectangular_pattern);
  END_TYPE;

  ENTITY Advanced_open_shell
    SUBTYPE OF (Detailed_topological_model_element);    
      shell_faces : SET [1:?] OF Advanced_face;
  END_ENTITY;

  ENTITY Complex_deleted_face_solid
    SUBTYPE OF (Deleted_face_solid);
      thickened_face_list :  LIST [1:?] OF SET[1:?] OF Advanced_face;
      thickness_list      :  LIST [1:?] OF length_measure;
    WHERE
      WR1: SIZEOF(thickened_face_list) = SIZEOF(thickness_list);
  END_ENTITY; 

  ENTITY Conical_stepped_hole_transition
    SUBTYPE OF (Detailed_geometric_model_element);
      apex_angle         : plane_angle_measure;
      cone_base_radius   : length_measure;    
      transition_number  : INTEGER;
    WHERE
      WR1 : transition_number > 0;
      WR2 : cone_base_radius  > 0.0; 
  END_ENTITY;

  ENTITY Deleted_face_solid
    SUPERTYPE OF (ONEOF(Deleted_face_solid_with_offsets, Complex_deleted_face_solid))
    SUBTYPE OF (Modified_solid);
      deleted_faces : SET [1:?] OF Advanced_face;
      thickness     : length_measure;
    WHERE
      WR1 : thickness <> 0.0;
  END_ENTITY; 

  ENTITY Deleted_face_solid_with_offsets
    SUBTYPE OF (Deleted_face_solid);
      thickness2 : length_measure;
    WHERE
      WR1: thickness2 <> 0.0;
      WR2: SELF\Deleted_face_solid.thickness <> thickness2;
  END_ENTITY; 

  ENTITY Path_modified_solid
    SUBTYPE OF (Solid_with_edge_modification);
  END_ENTITY;

  ENTITY Path_modified_solid_with_end_conditions
    SUBTYPE OF (Path_modified_solid);
      end_conditions :  LIST [2:2] OF blend_end_condition; 
  END_ENTITY;

  ENTITY Sculptured_solid
    SUBTYPE OF (Modified_solid);
      cutting_surface : sculpting_surface;
      positive_side   : BOOLEAN;
  END_ENTITY;

  ENTITY Sculptured_solid_with_selection
    SUBTYPE OF (Sculptured_solid);
      retained_part : Detailed_topological_model_element;
  END_ENTITY;

  ENTITY Solid_with_angled_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      offset_distance             : length_measure;
      left_offset                 : BOOLEAN;
      offset_angle                : plane_angle_measure;
    WHERE
      WR1: offset_distance > 0.0;   
      WR2: offset_angle > 0.0; 
  END_ENTITY; 

  ENTITY Solid_with_circular_pattern
    SUBTYPE OF (Modified_solid);
      location : Axis_placement;
      replicated_element : solid_with_placed_feature;
      replicate_count  : INTEGER;
      angular_spacing  : plane_angle_measure;
      radial_alignment : BOOLEAN;
      reference_point  : Cartesian_point;
    WHERE
     WR1 : replicate_count > 0;
  END_ENTITY;

  ENTITY Solid_with_circular_pocket
    SUBTYPE OF (Solid_with_pocket);
      pocket_radius      : length_measure; 
    WHERE 
      WR1: SELF\Solid_with_pocket.floor_blend_radius <= pocket_radius;
      WR2: pocket_radius > 0.0;
  END_ENTITY;

  ENTITY Solid_with_circular_protrusion
    SUBTYPE OF (Solid_with_protrusion);
      radius : length_measure;
    WHERE
      WR1: radius >= 0.0; 
  END_ENTITY;

  ENTITY Solid_with_conical_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      semi_apex_angle : plane_angle_measure;
      tip_radius      : length_measure;
    WHERE
      WR1 : tip_radius < 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
      WR2 : tip_radius >= 0.0;
      WR3 : semi_apex_angle > 0.0;  
  END_ENTITY;

  ENTITY Solid_with_curved_slot
    SUBTYPE OF (Solid_with_slot);
     slot_centreline : Detailed_geometric_model_element;
  END_ENTITY;

  ENTITY Solid_with_depression
    ABSTRACT SUPERTYPE OF (Solid_with_through_depression
      ANDOR (ONEOF (Solid_with_stepped_round_hole,
                	Solid_with_pocket,
                 	Solid_with_slot,
                 	Solid_with_groove)))
    SUBTYPE OF (Modified_Solid);
      location : Axis_placement; 
      depth    : length_measure;
    WHERE
      WR1 : depth > 0.0;
  END_ENTITY;

  ENTITY Solid_with_double_offset_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      left_offset_distance  : length_measure;  
      right_offset_distance : length_measure;
    WHERE
      WR1: left_offset_distance > 0.0;   
      WR2: right_offset_distance > 0.0; 
  END_ENTITY; 

  ENTITY Solid_with_edge_modification
    SUPERTYPE OF (Path_modified_solid ANDOR (ONEOF
              (Solid_with_fixed_radius_edge_blend,
               Solid_with_simple_chamfer,
               Solid_with_double_offset_chamfer,
               Solid_with_angled_chamfer)))
    SUBTYPE OF (Modified_solid);    
      blended_edges : LIST [1:?] OF Edge;
  END_ENTITY;

  ENTITY Solid_with_fixed_radius_edge_blend
    SUBTYPE OF (Solid_with_edge_modification);
      radius : length_measure;
    WHERE
      WR1: radius > 0.0; 
  END_ENTITY;

  ENTITY Solid_with_flat_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      fillet_radius : length_measure;
    WHERE
      WR1 : fillet_radius < 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
      WR2 : fillet_radius  >= 0.0;    
  END_ENTITY;

  ENTITY Solid_with_general_pocket  
    SUBTYPE OF (Solid_with_pocket);
      profile            : Detailed_geometric_model_element;
      reference_point    : Cartesian_point;
  END_ENTITY;

  ENTITY Solid_with_general_protrusion
    SUBTYPE OF (Solid_with_protrusion);
    profile         : Detailed_geometric_model_element;
    reference_point : Cartesian_point;
  END_ENTITY;

  ENTITY Solid_with_groove
    SUBTYPE OF (Solid_with_depression);
      groove_radius       : length_measure;
      groove_width        : length_measure;
      draft_angle         : plane_angle_measure;
      floor_fillet_radius : length_measure;
      external_groove     : BOOLEAN;
    WHERE
      WR1: NOT('SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_THROUGH_DEPRESSION' 
          IN TYPEOF(SELF));
      WR2: groove_radius > 0.0; 
      WR3: groove_width > 0.0;       
      WR4: floor_fillet_radius >= 0.0;
  END_ENTITY; 

  ENTITY Solid_with_incomplete_circular_pattern
    SUBTYPE OF (Solid_with_circular_pattern);
      omitted_instances : SET[1:?] OF INTEGER;
    WHERE
      WR1: SIZEOF(omitted_instances) <
           SELF\Solid_with_circular_pattern.replicate_count;
      WR2: SIZEOF(QUERY(q <* omitted_instances | q > 
           SELF\Solid_with_circular_pattern.replicate_count)) = 0;
  END_ENTITY;

  ENTITY Solid_with_incomplete_rectangular_pattern
    SUBTYPE OF (Solid_with_rectangular_pattern);
      omitted_instances : SET[1:?] OF LIST [1:2] OF INTEGER;
    WHERE
      WR1: NOT([1,1] IN omitted_instances);
      WR2: SIZEOF(omitted_instances) <
            ((SELF\Solid_with_rectangular_pattern.row_count *
               SELF\Solid_with_rectangular_pattern.column_count) - 1);
      WR3: SIZEOF(QUERY(q <* omitted_instances |   
             ((q[1] > SELF\Solid_with_rectangular_pattern.row_count) OR
              (q[2] > SELF\Solid_with_rectangular_pattern.column_count)))) = 0;
  END_ENTITY;

  ENTITY Solid_with_offset_faces
    SUBTYPE OF (Modified_solid);
      offset_faces : LIST [1:?] OF SET[1:?] OF Advanced_face;
      offset_distances : LIST [1:?] OF length_measure;
    WHERE
      WR1: SIZEOF(offset_faces) = SIZEOF(offset_distances); 
  END_ENTITY;

  ENTITY Solid_with_pocket
    ABSTRACT SUPERTYPE OF (ONEOF 
                      (Solid_with_rectangular_pocket,
                       Solid_with_circular_pocket,
                       Solid_with_general_pocket))
    SUBTYPE OF (Solid_with_depression);
      floor_blend_radius : length_measure;
      draft_angle        : plane_angle_measure;
    WHERE
      WR1 : floor_blend_radius >= 0.0;
  END_ENTITY;

  ENTITY Solid_with_protrusion
    ABSTRACT SUPERTYPE OF (ONEOF 
                        (Solid_with_circular_protrusion,
                         Solid_with_rectangular_protrusion,
                         Solid_with_general_protrusion))
    SUBTYPE OF (Modified_solid);
      location : Axis_placement; 
      height      : length_measure;
      draft_angle : plane_angle_measure;
    WHERE
      WR1: height > 0.0; 
  END_ENTITY;

  ENTITY Solid_with_rectangular_pattern
    SUBTYPE OF (Modified_solid);
      location : Axis_placement; 
      replicated_element : solid_with_placed_feature;
      row_count      : INTEGER;
      column_count   : INTEGER;
      row_spacing    : length_measure;
      column_spacing : length_measure; 
    WHERE
      WR1 : (row_count * column_count) > 1;
      WR2 : row_spacing > 0.0;
      WR3 : column_spacing > 0.0;
  END_ENTITY;

  ENTITY Solid_with_rectangular_pocket
    SUBTYPE OF (Solid_with_pocket);
      pocket_length      : length_measure;
      pocket_width       : length_measure;
      corner_radius      : length_measure;
    WHERE
      WR1: (corner_radius < pocket_width/2) 
        AND (corner_radius < pocket_length/2);
      WR2: pocket_length > 0.0;
      WR3: pocket_width > 0.0;
      WR4: corner_radius >= 0.0;
  END_ENTITY;

  ENTITY Solid_with_rectangular_protrusion
    SUBTYPE OF (Solid_with_protrusion);
    protrusion_length : length_measure;
    width             : length_measure;
    corner_radius     : length_measure;
  WHERE
    WR1: (corner_radius <= width/2) 
           AND (corner_radius <= protrusion_length/2);
    WR2: protrusion_length > 0.0; 
    WR3: width > 0.0; 
    WR4: corner_radius >= 0.0; 
  END_ENTITY;

  ENTITY Solid_with_simple_chamfer
    SUBTYPE OF (Solid_with_edge_modification);
      offset_distance : length_measure;
    WHERE
      WR1: offset_distance > 0.0; 
  END_ENTITY;

  ENTITY Solid_with_slot
    ABSTRACT SUPERTYPE OF ((ONEOF (Solid_with_straight_slot,
                                 Solid_with_curved_slot))
                     AND (ONEOF (Solid_with_trapezoidal_slot,
                                 Solid_with_tee_slot)))
    SUBTYPE OF (Solid_with_depression);
      slot_width     : length_measure;
      closed_ends    : LIST[2:2] OF LOGICAL;
      end_exit_faces : LIST[2:2] OF SET[0:?] OF Advanced_face;
  WHERE
    WR1: NOT(('SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_THROUGH_DEPRESSION' 
          IN TYPEOF(SELF)) AND (closed_ends = [FALSE,FALSE]));
    WR2: NOT(((closed_ends[1] = TRUE) AND (SIZEOF(end_exit_faces[1]) <> 0))
        OR ((closed_ends[2] = TRUE) AND (SIZEOF(end_exit_faces[2]) <> 0)));
    WR3 : slot_width > 0.0;       
  END_ENTITY;

  ENTITY Solid_with_spherical_bottom_hole
    SUBTYPE OF (Solid_with_stepped_round_hole);
      sphere_radius : length_measure;
    WHERE
      WR1 : sphere_radius >= 
          SELF\Solid_with_stepped_round_hole.segment_radii[segments];
  END_ENTITY;

  ENTITY Solid_with_stepped_round_hole
    SUPERTYPE OF (Solid_with_stepped_round_hole_and_conical_transitions
    ANDOR ONEOF (Solid_with_flat_bottom_hole,
                 Solid_with_conical_bottom_hole,
                 Solid_with_spherical_bottom_hole))
    SUBTYPE OF (Solid_with_depression);
      segments           : INTEGER;
      segment_radii      : LIST[1:segments] OF length_measure;
      segment_depths     : LIST[1:segments] OF length_measure;
    DERIVE
      SELF\Solid_with_depression.depth : length_measure := calculate_depth(SELF);
    WHERE
      WR1: NOT (('SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_THROUGH_DEPRESSION'
        IN TYPEOF(SELF)) AND (SIZEOF(TYPEOF(SELF) *
        ['SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_FLAT_BOTTOM_HOLE',
        'SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_CONICAL_BOTTOM_HOLE',
        'SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_SPHERICAL_BOTTOM_HOLE']) 
        <> 0)); 
  END_ENTITY;

  ENTITY Solid_with_stepped_round_hole_and_conical_transitions
    SUBTYPE OF (Solid_with_stepped_round_hole);
      conical_transitions : SET[1:?] OF Conical_stepped_hole_transition; 
    WHERE
      WR1: SIZEOF (conical_transitions) <= 
         (SELF\Solid_with_stepped_round_hole.segments + 1);
      WR2: ('SOLID_SHAPE_ELEMENT_SCHEMA.SOLID_WITH_THROUGH_DEPRESSION'
         IN TYPEOF(SELF)) XOR (SIZEOF(conical_transitions) <= 
         SELF\Solid_with_stepped_round_hole.segments);
  END_ENTITY;

  ENTITY Solid_with_straight_slot
    SUBTYPE OF (Solid_with_slot);
      slot_length : length_measure;
    WHERE
      WR1: slot_length > 0.0; 
  END_ENTITY;

  ENTITY Solid_with_tee_slot
    SUBTYPE OF (Solid_with_slot);
      tee_section_width  : length_measure;
      collar_depth       : length_measure;
    WHERE
      WR1: collar_depth < SELF\Solid_with_depression.depth;
      WR2: tee_section_width > SELF\solid_with_slot.slot_width; 
      WR3: tee_section_width > 0.0;       
      WR4: collar_depth > 0.0;       
  END_ENTITY;

  ENTITY Solid_with_through_depression
    SUBTYPE OF (Solid_with_depression);
      exit_faces : SET[1:?] OF Advanced_face;
  END_ENTITY;

  ENTITY Solid_with_trapezoidal_slot
    SUBTYPE OF (Solid_with_slot);
      draft_angle         : plane_angle_measure;
      floor_fillet_radius : length_measure;
    WHERE
      WR1: floor_fillet_radius >= 0.0; 
  END_ENTITY;

  ENTITY Solid_with_variable_radius_edge_blend
    SUBTYPE OF (Path_modified_solid);
      interpolation_points : LIST [2:?] OF Cartesian_point;
      radii                : LIST [2:?] OF length_measure;
      variations           : LIST [2:?] OF blend_radius_variation; 
    WHERE
      WR1: SIZEOF(blended_edges) = SIZEOF(radii);
      WR2: SIZEOF(variations) = SIZEOF(interpolation_points) - 1;
      WR3: SIZEOF(['SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_FIXED_RADIUS_EDGE_BLEND',
              'SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_SIMPLE_CHAMFER',
              'SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_DOUBLE_OFFSET_CHAMFER',
              'SOLID_WITH_LOCAL_MODIFICATION_ARM.SOLID_WITH_ANGLED_CHAMFER'] * TYPEOF(SELF)) = 0;
  END_ENTITY;

  FUNCTION calculate_depth (swsrh : Solid_with_stepped_round_hole) 
                              : length_measure;
    LOCAL
      i  : INTEGER;
      td : length_measure := 0;
    END_LOCAL;
    REPEAT i := 1 TO swsrh.segments;
      td := td + swsrh.segment_depths[i];
    END_REPEAT;
    RETURN(td); 
  END_FUNCTION;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N7705 - ISO/TS 10303-1108 Specification based configuration - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2595
*)

SCHEMA Specification_based_configuration_arm;

USE FROM Effectivity_application_arm;

USE FROM Product_class_arm;


TYPE configured_item_select = EXTENSIBLE GENERIC_ENTITY SELECT ; 
END_TYPE;

TYPE configuration_kind = ENUMERATION OF (usage, design);
END_TYPE;

TYPE configuration_inheritance_types = ENUMERATION OF (exception_case, full_inheritance, no_inheritance);
END_TYPE;

TYPE configured_specification_select = SELECT(Class_condition_association, Class_specification_association);
END_TYPE;

TYPE effectivity_for_configuration = SELECT BASED_ON effectivity_item WITH (Configuration);
END_TYPE;

ENTITY Configuration;
  configured_element : configured_item_select;
  is_solution_for : configured_specification_select;
  configuration_type : configuration_kind;
  inheritance_type : configuration_inheritance_types;
WHERE
WR1: consistent_configuration_type(SELF);
END_ENTITY;

RULE restrict_to_dated_effectivity FOR (Effectivity_assignment);
LOCAL
  ndea_set : SET OF Effectivity_assignment := [];
END_LOCAL;
  ndea_set := QUERY(ea <* Effectivity_assignment | 
	NOT ('EFFECTIVITY_ARM.DATED_EFFECTIVITY' IN TYPEOF(ea.assigned_effectivity)));
WHERE
  WR1: SIZEOF(QUERY(ea <* ndea_set | 
		(SIZEOF(['SPECIFICATION_BASED_CONFIGURATION_ARM.CONFIGURATION']*type_of_set(ea.items))>0) )) =0;
END_RULE;

FUNCTION type_of_set(items: SET OF GENERIC_ENTITY): SET OF STRING;
LOCAL
  result: SET OF STRING:= [];
END_LOCAL;

REPEAT i:=1 TO HIINDEX(items);
  result := result + TYPEOF(items[i]);
END_REPEAT;
RETURN(result);
END_FUNCTION;

FUNCTION consistent_configuration_type(config: Configuration): BOOLEAN;
IF ('PRODUCT_CLASS_ARM.CLASS_CONDITION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(config.is_solution_for\Class_condition_association.condition_type ='part usage');
  ELSE
    RETURN(config.is_solution_for\Class_condition_association.condition_type ='design case');
  END_IF;
END_IF;

IF ('PRODUCT_CLASS_ARM.CLASS_SPECIFICATION_ASSOCIATION' IN TYPEOF(config.is_solution_for)) THEN
  IF config.configuration_type = configuration_kind.usage THEN
    RETURN(config.is_solution_for\Class_specification_association.association_type ='part usage');
  ELSE 
    RETURN(config.is_solution_for\Class_specification_association.association_type ='design case');
  END_IF;
END_IF;

RETURN(FALSE);
END_FUNCTION;


END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N8053 - ISO/TS 10303-1112 Specification control - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N6673
*)


SCHEMA Specification_control_arm;

USE FROM Alternative_solution_arm; -- ISO/TS 10303-1109

USE FROM Part_collection_arm; -- ISO/TS 10303-1115

USE FROM Product_placement_arm; -- ISO/TS 10303-1343

USE FROM Requirement_view_definition_arm; 

USE FROM Specification_based_configuration_arm; -- ISO/TS 10303-1108

  TYPE breakdown_element_select = SELECT (
	Functional_element_definition,
	Physical_element_definition);
  END_TYPE;

  TYPE constraint_context_select = SELECT (Product_class);
  END_TYPE;

  TYPE effectivity_specification_for_replacement  = SELECT BASED_ON effectivity_item WITH
    (Replaced_usage_relationship);
  END_TYPE;

  TYPE instance_usage_context_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Collected_item_association, 
	Solution_element);
  END_TYPE;

  TYPE sc_configured_element = SELECT BASED_ON configured_item_select WITH (
    Alternative_solution);
  END_TYPE;

  ENTITY Breakdown_node_relationship;
      description   : OPTIONAL STRING;
      relating      : complex_product_select;
      related       : breakdown_element_select;
      relation_type : STRING;  
    WHERE
      WR1: (NOT (relation_type IN ['functionality', 'realization'])) OR
	    (TYPEOF(related) <> TYPEOF(relating));
      WR2: (NOT (relation_type IN ['decomposition', 'specialization', 'occurrence'])) OR
	    (aggregate1_in_aggregate2(TYPEOF(related),TYPEOF(relating)) OR aggregate1_in_aggregate2(TYPEOF(relating),TYPEOF(related)) ) ;
      WR3: (NOT (relation_type IN ['occurrence'])) OR 
	    ('SPECIFICATION_CONTROL_ARM.PHYSICAL_ELEMENT_DEFINITION' IN TYPEOF(relating));
  END_ENTITY;

  ENTITY Class_breakdown_association;
    description       : OPTIONAL STRING;
    considered_class  : Product_class;
    breakdown_element : breakdown_element_select;
    relation_type     : STRING;
  END_ENTITY;

  ENTITY Complex_node_relationship;
      description   : OPTIONAL STRING;
      relating      : complex_product_select;
      related       : complex_product_select;
      relation_type : STRING;  
    WHERE
      WR1: (aggregate1_in_aggregate2(TYPEOF(related),TYPEOF(relating)) OR aggregate1_in_aggregate2(TYPEOF(relating),TYPEOF(related)) ) ;
  END_ENTITY;

  ENTITY Design_constraint_association;
    name                  : OPTIONAL STRING;	
    constrained_object    : complex_product_select;
    constraint_definition : Design_constraint_definition;  
  END_ENTITY;

  ENTITY Design_constraint_context_association;
    constraint_definition : Design_constraint_definition;
    constraint_context    : constraint_context_select;
  END_ENTITY;

  ENTITY Design_constraint_definition
    SUBTYPE OF (Requirement_view_definition);
  END_ENTITY;

  ENTITY Part_function_association
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Functional_element_definition;
      SELF\View_definition_relationship.related_view  : Part_view_definition;
  END_ENTITY;

  ENTITY Part_occurrence_relationship
    SUBTYPE OF (View_definition_relationship);
      SELF\View_definition_relationship.relating_view : Product_occurrence;
      SELF\View_definition_relationship.related_view  : Product_occurrence;
  END_ENTITY;

  ENTITY Replaced_usage_relationship
    SUBTYPE OF (Part_occurrence_relationship);
      usage_context : instance_usage_context_select;
    DERIVE
      SELF\View_definition_relationship.relation_type : STRING := 'usage replacement';
  END_ENTITY;

  ENTITY Specification_category_breakdown_influence;
    influencing_category      : Class_category_association;
    influenced_breakdown_node : breakdown_element_select;
  END_ENTITY;

  FUNCTION aggregate1_in_aggregate2 (agg1, agg2: AGGREGATE OF GENERIC): LOGICAL;
    RETURN(SIZEOF(QUERY (ele <* agg1 | VALUE_IN(agg2, ele)))= SIZEOF(agg1));
  END_FUNCTION;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N6935 - ISO/TS 10303-1747 Specification document - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5503
*)

SCHEMA Specification_document_arm;

USE FROM Characteristic_arm;	-- ISO/TS 10303-1654
USE FROM Configuration_item_arm;	-- ISO/TS 10303-1056
USE FROM Tagged_text_representation_arm; -- ISO/TS 10303-1366

REFERENCE FROM Support_resource_arm(bag_to_set);

  TYPE sd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
    Product_configuration,
    Product_view_definition,
    Product_version,
    Product);
  END_TYPE;

  ENTITY Design_specification
    SUPERTYPE OF (Interface_specification_document_definition)
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Fabrication_technology_specification
    SUBTYPE OF (Process_specification);
  END_ENTITY;

  ENTITY Interface_specification_document_definition
    SUBTYPE OF (Design_specification);
  END_ENTITY;

  ENTITY Language_reference_manual
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Material_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Partial_document_with_structured_text_representation_assignment
    SUBTYPE OF(Partial_document_assignment);
      structured_portion : string_representation_item_select;
    UNIQUE
      UR1: SELF\Partial_document_assignment.document_portion,
      SELF\Document_assignment.assigned_document;
  END_ENTITY;

  ENTITY Process_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  ENTITY Specification_allocation
  	SUBTYPE OF (Document_assignment);
      SELF\Document_assignment.assigned_document RENAMED allocated_specification : Specification_definition;
  END_ENTITY;

  ENTITY Specification_definition
  	SUPERTYPE OF(ONEOF (Design_specification,
	 Process_specification,
	 Material_specification,
	 Test_specification,
	 Language_reference_manual))
    SUBTYPE OF (Document_definition);
	DERIVE
  		source: SET[0:?] OF Organization_or_person_in_organization_assignment :=
         bag_to_set(QUERY(temp <* USEDIN(SELF,'PERSON_ORGANIZATION_ASSIGNMENT_ARM.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS') |
                         (temp.role = 'document source') ));
	WHERE
      WR1: EXISTS (source) AND (SIZEOF(source) = 1);
  END_ENTITY;

  ENTITY Surface_finish_specification
    SUBTYPE OF (Material_specification);
  END_ENTITY;

  ENTITY Test_specification
    SUBTYPE OF (Specification_definition);
    WHERE
      WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
  END_ENTITY;

  FUNCTION get_document_definition(
      input : documented_element_select;
      role : STRING;
      type_name : STRING) : SET OF Document_definition; 
    LOCAL
      dd : SET[0:?] OF Document_definition := [];  --this gives us access to the information base
      da : SET[0:?] OF Document_assignment :=[];
    END_LOCAL;
    da := bag_to_set(QUERY(dr <* USEDIN (input, 'DOCUMENT_ASSIGNMENT_ARM.'+
	  'DOCUMENT_ASSIGNMENT.IS_ASSIGNED_TO') | (dr.role = role)));
    -- iterate over da
    REPEAT i := 1 to SIZEOF(da) by 1;
      IF(type_name IN TYPEOF (da[i].assigned_document))THEN
        dd := dd + da[i].assigned_document;
      END_IF;
    END_REPEAT;
    RETURN(dd);
  END_FUNCTION;
	
END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N5506 - ISO/TS 10303-1104 Specified product - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4816
*)

SCHEMA Specified_product_arm;

USE FROM Configuration_item_arm; -- ISO/TS 10303-1056

USE FROM Product_class_arm; -- ISO/TS 10303-1103

  ENTITY Product_specification
    SUBTYPE OF (Product_configuration);
      version_id                              : OPTIONAL STRING;
      SELF\Product_configuration.item_context : Product_class;
      defining_specifications                 : SET [0:?] OF Specification;
  END_ENTITY;

  ENTITY Specification_based_product_version
    SUBTYPE OF (Product_version);
    INVERSE
      specification_source : Item_design_association FOR design;
    WHERE
      WR1 : 'SPECIFIED_PRODUCT_ARM.PRODUCT_SPECIFICATION' IN TYPEOF(specification_source.configuration);
  END_ENTITY;
  
END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7287 - ISO/TS 10303-1255 State definition - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5917
*) 

SCHEMA State_definition_arm;

USE FROM Activity_arm;    -- ISO/TS 10303-1047

USE FROM Classification_assignment_arm;    -- ISO/TS 10303-1114

USE FROM Foundation_state_definition_arm;    -- ISO/TS 10303-1469

USE FROM Identification_assignment_arm;    -- ISO/TS 10303-1021


TYPE state_definition_activity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_item WITH 
   (Applied_state_definition_assignment);
END_TYPE; 

TYPE state_definition_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH 
   (Applied_state_definition_assignment, 
    State_definition, 
    State_definition_relationship);
END_TYPE; 

TYPE state_definition_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH 
   (State_definition, 
    State_definition_relationship);
END_TYPE; 

ENTITY And_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;

ENTITY Or_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;

ENTITY Sequence_of_state_definition
  SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.relating RENAMED successor : SET[1:?] OF State_definition;
  SELF\State_definition_relationship.related RENAMED predecessor : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY State_cause_effect_definition
  SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.relating RENAMED effect : SET[1:?] OF State_definition;
  SELF\State_definition_relationship.related RENAMED cause : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY State_complement_definition
  SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.relating RENAMED universe : SET[1:?] OF State_definition;
  SELF\State_definition_relationship.related RENAMED set_1 : SET[1:?] OF State_definition;
  set_2 : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY State_proper_subset_definition
  SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.related RENAMED proper_subset : SET[1:?] OF State_definition;
  SELF\State_definition_relationship.relating RENAMED proper_superset : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY State_subset_definition
  SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.relating RENAMED superset : SET[1:?] OF State_definition;
  SELF\State_definition_relationship.related RENAMED subset : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY State_symptom_definition
  SUBTYPE OF (State_definition_relationship);
  SELF\State_definition_relationship.relating RENAMED symptom_effect : SET[1:?] OF State_definition;
  SELF\State_definition_relationship.related RENAMED symptom_cause : SET[1:?] OF State_definition;
END_ENTITY;

ENTITY Xor_state_cause_effect_definition
  SUBTYPE OF (State_cause_effect_definition);
END_ENTITY;

END_SCHEMA;  -- State_definition_arm


(*
	ISO TC184/SC4/WG12 N7786 - ISO/TS 10303-1771 Stock material - EXPRESS ARM
	Supersedes ISO TC184/SC4/WG12 N6364
*)

SCHEMA Stock_material_arm;

USE FROM Approval_arm; -- ISO/TS 10303-1012

USE FROM Elemental_geometric_shape_arm; -- ISO/TS 10303-1004

USE FROM Generic_material_aspects_arm; -- ISO/TS 10303-1681

USE FROM Specification_document_arm; -- ISO/TS 10303-1747

USE FROM Part_view_definition_arm; -- ISO/TS 10303-1023

  TYPE ply_stock_material = SELECT 
    (Anisotropic_material,
     Braided_assembly,
     Discontinuous_fiber_assembly,
     Filament_assembly,
     Isotropic_material,
     Woven_assembly);
  END_TYPE;

  TYPE sma_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH
    (Stock_material);
  END_TYPE;

  ENTITY Anisotropic_material
    SUBTYPE OF (Stock_material);
  END_ENTITY;

  ENTITY Braided_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;

  ENTITY Discontinuous_fiber_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;

  ENTITY Filament_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;

  ENTITY Isotropic_material
    SUBTYPE OF (Stock_material);
  END_ENTITY;

  ENTITY Material_direction;
    material_orientation : Direction;
  END_ENTITY;

  ENTITY Stock_core
    SUBTYPE OF (Stock_material);
  END_ENTITY;

  ENTITY Stock_material 
    SUPERTYPE OF (ONEOF(Anisotropic_material, Braided_assembly, Discontinuous_fiber_assembly, Filament_assembly, Isotropic_material, Stock_core, Woven_assembly))
    SUBTYPE OF (Part_view_definition);
      property                                     : SET [1:?] OF Material_property_value_representation;
      reference_direction                          : OPTIONAL Material_direction;
      specified_material                           : Material_specification;
  END_ENTITY;

  ENTITY Woven_assembly
    SUBTYPE OF (Stock_material);
  END_ENTITY;

END_SCHEMA;


(*
   ISO TC184/SC4/WG12 N8056 - ISO/TS 10303-1749 Styled curve - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7469
*)

SCHEMA Styled_curve_arm;

USE FROM Colour_arm;    -- ISO/TS 10303-1002

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

  ENTITY Curve_font
    SUPERTYPE OF (ONEOF (Externally_defined_curve_font,
                         Predefined_curve_font,
                         User_defined_curve_font));
      curve_font_name : STRING;
  END_ENTITY;

  ENTITY Curve_font_pattern;
    on_segment : REAL;
    off_segment : REAL;
  END_ENTITY;

  ENTITY Externally_defined_curve_font
    SUBTYPE OF (Curve_font);
      curve_font_reference : STRING;
  END_ENTITY;

  ENTITY Predefined_curve_font
    SUBTYPE OF (Curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous', 'chain', 'chain double dash', 'dashed', 'dotted'];
  END_ENTITY;

  ENTITY Solid_curve_font
    SUBTYPE OF (Predefined_curve_font);
    WHERE
      WR1: SELF.curve_font_name IN ['continuous'];
  END_ENTITY;

  ENTITY User_defined_curve_font
    SUBTYPE OF (Curve_font);
      pattern        : SET[1:?] OF Curve_font_pattern;
      segment_symbol : Geometric_model;
  END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N8059 - ISO/TS 10303-1800 Support resource - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7472
*)
SCHEMA Support_resource_arm;

TYPE identifier = STRING;
END_TYPE;

TYPE label = STRING;
END_TYPE;

TYPE text = STRING;
END_TYPE; 


FUNCTION bag_to_set
   (the_bag : BAG [0:?] OF GENERIC:intype) : SET [0:?] OF GENERIC:intype;

LOCAL the_set : SET OF GENERIC : intype := [];
  i : INTEGER;
END_LOCAL;
  IF SIZEOF(the_bag)> 0 THEN 
  	REPEAT i := 1 TO HIINDEX(the_bag);
      the_set := the_set + the_bag[i];
    END_REPEAT;
  END_IF;
  RETURN(the_set);
END_FUNCTION;


FUNCTION type_check_function
  (the_type : GENERIC; sub_names : SET [0:?] OF STRING; criterion : INTEGER) : LOGICAL;

  IF((NOT EXISTS(the_type)) OR (SIZEOF(sub_names)= 0))
  THEN 
    RETURN (UNKNOWN);
  ELSE 
    CASE criterion OF 
      0: RETURN (SIZEOF(sub_names * TYPEOF(the_type))> 0);
      1: RETURN (SIZEOF(sub_names * TYPEOF(the_type))= 0);
      2: RETURN (SIZEOF(sub_names * TYPEOF(the_type))= 1);
      3: RETURN(SIZEOF(sub_names * TYPEOF(the_type))<= 1); 
      OTHERWISE : RETURN (UNKNOWN);
    END_CASE;
  END_IF;
END_FUNCTION; 

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N8062 - ISO/TS 10303-1110 Surface conditions - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7475
*)

SCHEMA Surface_conditions_arm;

USE FROM Dimension_tolerance_arm;

USE FROM Generic_material_aspects_arm;

USE FROM Part_view_definition_arm;

USE FROM Value_with_unit_extension_arm;

TYPE sc_dimension_target = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON dimension_target WITH (
   Coating_layer);
END_TYPE; 


  TYPE measuring_gauge_select = EXTENSIBLE GENERIC_ENTITY SELECT (
    Part_view_definition);
  END_TYPE;

  TYPE sf_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH
	(Coating_layer);
  END_TYPE;

  TYPE shaped_element_select = SELECT
    (Shape_element, Item_shape);
  END_TYPE;

  ENTITY Coating_layer
    SUBTYPE OF (Shape_element);
    INVERSE
      thickness : SET[0:1] OF Thickness_size FOR is_applied_to;
    WHERE
      WR1: SIZEOF(USEDIN(SELF, 'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS'))=1;
  END_ENTITY;

  ENTITY Contact_ratio
   SUBTYPE OF (Surface_condition);
     ratio_value     : Measure_item;
     measuring_gauge : measuring_gauge_select;
  DERIVE
    SELF\Assigned_property.name : STRING := 'contact ratio';
  END_ENTITY;

  ENTITY Extended_visual_appearance
    SUBTYPE OF (Visual_appearance);
      opacity          : OPTIONAL Measure_item;
      orientation      : OPTIONAL Angle_data_element;
      refraction_index : OPTIONAL Measure_item;  
      texture_map      : Digital_file;  
  END_ENTITY;

  ENTITY Hardness
    SUBTYPE OF (Surface_condition);
      depth                 : OPTIONAL Measure_item;      
      environment_condition : SET[0:?] OF STRING;
      hardness_value        : Measure_item;
      measuring_method      : STRING;      
      measuring_position    : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'hardness';
  END_ENTITY;

  ENTITY Surface_condition
    ABSTRACT SUPERTYPE OF ( ONEOF(
      Contact_ratio,
      Hardness,
      Tactile_appearance,
      Treatment_result,
      Visual_appearance,
      Surface_texture))
    SUBTYPE OF (Assigned_shape_property);
    value_determination : OPTIONAL STRING;
    SELF\Assigned_property.described_element : shaped_element_select;
  INVERSE
    generic_representation : SET[0:0] OF Property_definition_representation FOR definition; 
  END_ENTITY;

  ENTITY Surface_texture
    SUBTYPE OF (Surface_condition);
      measuring_method    : STRING;
      measuring_direction : OPTIONAL Measurement_path;
      parameters : SET[0:?] OF Surface_texture_parameter;
  DERIVE
    SELF\Assigned_property.name : STRING := 'surface texture';
  END_ENTITY;
  
  TYPE measure_qualification_or_value_with_unit = SELECT (Measure_qualification, Value_with_unit); 
  END_TYPE;

  ENTITY Surface_texture_parameter;
    parameter_value : measure_qualification_or_value_with_unit;
    parameter_name : STRING;
  END_ENTITY;

  ENTITY Tactile_appearance
    SUBTYPE OF (Surface_condition);
      depth       : OPTIONAL Measure_item;
  DERIVE
    SELF\Assigned_property.name : STRING := 'tactile appearance';
  END_ENTITY;

  ENTITY Treatment_result
    SUBTYPE OF (Surface_condition);
      purpose     : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'treatment result';
  END_ENTITY;

  ENTITY Visual_appearance
    SUBTYPE OF (Surface_condition);
      colour_id    : STRING;
      colour_name  : OPTIONAL STRING;
      lustre       : STRING;
      transparency : OPTIONAL STRING;
      pattern      : OPTIONAL STRING;
  DERIVE
    SELF\Assigned_property.name : STRING := 'visual appearance';
  END_ENTITY;
 
END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N5518 - ISO/TS 10303-1321 Swept solid - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N4822
*)

SCHEMA Swept_solid_arm;

USE FROM Topologically_bounded_surface_arm; -- ISO 10303-1511

  ENTITY Axis1_placement
    SUBTYPE OF (Detailed_geometric_model_element);
      axis     : Direction;
      position : Cartesian_point;
  END_ENTITY;

  ENTITY Extruded_solid
    SUBTYPE OF (Swept_solid);
      depth              : length_measure;
      extruded_direction : Direction;
  END_ENTITY;

  ENTITY Solid_of_revolution
    SUBTYPE OF (Swept_solid);
      angle : plane_angle_measure;
      axis  : Axis1_placement;
  END_ENTITY;

  ENTITY Swept_solid
    SUPERTYPE OF (ONEOF(Extruded_solid, Solid_of_revolution))
    SUBTYPE OF (Detailed_geometric_model_element);
      swept_face : Advanced_face;
  END_ENTITY;

END_SCHEMA;

(*
   ISO TC184/SC4/WG12 N5521 - ISO/TS 10303-1366 Tagged text representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5009
*)

SCHEMA Tagged_text_representation_arm;

USE FROM Foundation_representation_arm;    --  ISO/TS 10303-1006

TYPE string_representation_item_select = SELECT(
    String_representation_item, 
    Included_text_block,
    Structured_text_composition);
END_TYPE; 

TYPE string_representation_item_list = LIST[1:?] OF
string_representation_item_select;
END_TYPE;

TYPE string_representation_item_set = SET[1:?] OF string_representation_item_select;
END_TYPE;

TYPE string_representation_item_list_or_set =
 SELECT(string_representation_item_list, string_representation_item_set); 
END_TYPE;

SUBTYPE_CONSTRAINT ttr_string_representation_item_subtypes FOR String_representation_item;
  ONEOF (Tagged_text_item,
         Uniform_resource_identifier);
END_SUBTYPE_CONSTRAINT;

ENTITY Included_text_block
  SUBTYPE OF (Representation_item);
  source : Structured_text_representation;
END_ENTITY;

 ENTITY Structured_text_composition
   SUBTYPE OF (Representation_item);
  content: string_representation_item_list_or_set;
 END_ENTITY;

ENTITY Structured_text_representation
  SUBTYPE OF (Representation);
  SELF\Representation.items : SET [1:1] OF string_representation_item_select; 
END_ENTITY;

ENTITY Tagged_text_item
  SUBTYPE OF (String_representation_item);
WHERE
  WR1: SIZEOF (QUERY (using_rep <* USEDIN(SELF,
       'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS') |
  NOT ('TAGGED_TEXT_REPRESENTATION_ARM.TAGGED_TEXT_FORMAT' IN
  TYPEOF (using_rep.context_of_items))
       )) = 0;
END_ENTITY;

ENTITY Tagged_text_format
  SUBTYPE OF (Representation_context);
END_ENTITY;

ENTITY Uniform_resource_identifier
  SUBTYPE OF (String_representation_item);
END_ENTITY;

END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N7666 - ISO/CD-TS 10303-1819 Tessellated geometry - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7641
*)

SCHEMA Tessellated_geometry_arm;

USE FROM Advanced_boundary_representation_arm;
USE FROM Basic_curve_arm;
USE FROM Basic_geometry_arm;
USE FROM Basic_geometric_topology_arm;
USE FROM Draughting_element_arm; -- ISO/TS 10303-1310
USE FROM Elemental_geometric_shape_arm;
USE FROM Elemental_topology_arm;
REFERENCE FROM Foundation_representation_arm(Using_representations);

TYPE edge_or_curve = SELECT
  (Edge,
   Curve);
END_TYPE;

TYPE face_or_surface = SELECT
  (Face,
   Surface);
END_TYPE;  

TYPE path_or_composite_curve = SELECT
 (Path,
  Composite_curve);
END_TYPE;  

TYPE tessellated_edge_or_vertex = SELECT
   (Tessellated_edge,
    Tessellated_vertex);
END_TYPE;

TYPE tg_draughting_callout_content_select = SELECT BASED_ON draughting_callout_content_select WITH (
  Tessellated_anotation);
END_TYPE;

ENTITY Tessellated_anotation
   SUBTYPE OF (Annotation_element);
   SELF\Styled_element.element : Tessellated_item;
END_ENTITY;

 ENTITY Tessellated_shape_representation
    SUBTYPE OF (Geometric_model);
     SELF\Representation.items : SET[1 : ?] OF Tessellated_item;
 WHERE
   WR1:'ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEORMETRIC_COORDINATE_SPACE' IN
        TYPEOF(SELF\Representation.context_of_items);
 END_ENTITY;

  ENTITY Tessellated_item
     ABSTRACT SUPERTYPE OF (ONEOF (
       Coordinates_list, 
       Tessellated_solid, 
       Tessellated_shell, 
       Tessellated_wire, 
       Tessellated_geometric_set, Tessellated_curve_set, Tessellated_point_set, Tessellated_surface_set, 
       Tessellated_structured_item))
     SUBTYPE OF (Detailed_geometric_model_element);
     WHERE
      WR1: SIZEOF (QUERY (using_rep <* using_representations (SELF) |
          NOT ('GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SHAPE_REPRESENTATION' IN
         TYPEOF(using_rep)))) = 0; 
 END_ENTITY;
 
  
 ENTITY Repositioned_tessellated_item
     SUBTYPE OF(Tessellated_item);
     location: Axis_placement_3d;
 WHERE  
   WR1: NOT (SIZEOF (['GEOMETRIC_MODEL_SCHEMA.TESSELLATED_CURVE_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_GEOMETRIC_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_POINT_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SURFACE_SET',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SHELL',
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SOLID',                
                    'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_WIRE'] * TYPEOF(SELF)) = 0);
 END_ENTITY; 
 
 
 ENTITY Tessellated_geometric_set
     SUBTYPE OF (Tessellated_item);
      children: SET [1:?] OF Tessellated_item;
 END_ENTITY;
 
 ENTITY Tessellated_solid
    SUBTYPE OF (Tessellated_item);
      items: SET [1:?] OF Tessellated_structured_item ;
    geometric_link: OPTIONAL Manifold_solid_brep;
 END_ENTITY;
 
 
 ENTITY Tessellated_shell
    SUBTYPE OF (Tessellated_item);
    items: SET [1:?] OF Tessellated_structured_item ;
    topological_link: OPTIONAL Connected_face_set;
 END_ENTITY;
 
 
 ENTITY Tessellated_wire
    SUBTYPE OF (Tessellated_item);
    items: SET [1:?] OF tessellated_edge_or_vertex;
    geometric_model_link: OPTIONAL path_or_composite_curve;
 END_ENTITY;
 
 
 ENTITY Tessellated_curve_set
    SUBTYPE OF (Tessellated_item);
    coordinates : coordinates_list;
    line_strips : LIST [1:?] OF LIST [2:?] OF INTEGER;
 END_ENTITY;
 
 
 ENTITY Tessellated_structured_item
    SUPERTYPE OF (ONEOF (Tessellated_face, Tessellated_edge, Tessellated_vertex))
    SUBTYPE OF (Tessellated_item);
 END_ENTITY;

 
 ENTITY Tessellated_edge
    SUBTYPE OF (Tessellated_structured_item);
    coordinates: coordinates_list;
    geometric_link: OPTIONAL edge_or_curve;
    line_strip : LIST [2:?] OF INTEGER;
 END_ENTITY;
 
 ENTITY Tessellated_connecting_edge
    SUBTYPE OF (Tessellated_edge);
    smooth: LOGICAL;
    face1: Tessellated_face;
    face2: Tessellated_face;
    line_strip_face1 : LIST [2:?] OF INTEGER;
    line_strip_face2 : LIST [2:?] OF INTEGER;
 WHERE
   WR1 : SIZEOF(line_strip_face1) = SIZEOF(line_strip_face2);
   WR2:  SIZEOF(line_strip_face1) = SIZEOF(SELF\Tessellated_edge.line_strip);
 END_ENTITY;
 
 ENTITY Tessellated_point_set
    SUBTYPE OF (Tessellated_item);
    coordinates: coordinates_list;
    point_list: LIST [1:?] OF INTEGER;
 END_ENTITY;
 
 
 ENTITY Tessellated_vertex
    SUBTYPE OF (Tessellated_structured_item);
    coordinates: COORDINATES_LIST;
    topological_link: OPTIONAL Vertex_point;
    point_index : INTEGER;
 END_ENTITY;
 
 ENTITY Tessellated_surface_set
   ABSTRACT SUPERTYPE OF (ONEOF(Triangulated_surface_set, Complex_triangulated_surface_set)) 
   SUBTYPE OF (Tessellated_item);
    coordinates : coordinates_list;
    pnmax : INTEGER;
    normals : LIST [0:?] OF LIST [3:3] OF REAL;
  WHERE
     WR1: ((SIZEOF(normals) = 0) OR (SIZEOF(normals) = 1) OR (SIZEOF(normals) = pnmax));
 END_ENTITY;
 
 ENTITY Triangulated_surface_set
   SUBTYPE OF (Tessellated_surface_set);
     pnindex :  LIST [0:?] OF INTEGER;
     triangles : LIST [1:?] OF LIST [3:3] OF INTEGER;
 WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_surface_set.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_surface_set.pnmax <> coordinates.npoints));
 END_ENTITY;   
 
 ENTITY Complex_triangulated_surface_set
   SUBTYPE OF (Tessellated_surface_set);
     pnindex :  LIST [0:?] OF INTEGER;
     triangle_strips : LIST [0:?] OF LIST [3:?] OF INTEGER;
     triangle_fans : LIST [0:?] OF LIST [3:?] OF INTEGER;
  WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_surface_set.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_surface_set.pnmax <> coordinates.npoints));
     WR3: NOT ((SIZEOF(triangle_strips) = 0) AND (SIZEOF(triangle_fans) = 0));
 END_ENTITY; 
 
 
 
 ENTITY Tessellated_face
   ABSTRACT SUPERTYPE OF (ONEOF(Triangulated_face, Complex_triangulated_face)) 
   SUBTYPE OF (Tessellated_structured_item);
    coordinates : coordinates_list;
    pnmax : INTEGER;
    normals : LIST [0:?] OF LIST [3:3] OF REAL;
    geometric_link: OPTIONAL face_or_surface;
 WHERE
     WR1: ((SIZEOF(normals) = 0) OR (SIZEOF(normals) = 1) OR (SIZEOF(normals) = pnmax));
 END_ENTITY;
 
 ENTITY Triangulated_face
   SUBTYPE OF (Tessellated_face);
     pnindex :  LIST [0:?] OF INTEGER;
     triangles : LIST [1:?] OF LIST [3:3] OF INTEGER;
 WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_face.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_face.pnmax <> coordinates.npoints));
 END_ENTITY;   
 
 ENTITY Complex_triangulated_face
   SUBTYPE OF (Tessellated_face);
     pnindex :  LIST [0:?] OF INTEGER;
     triangle_strips : LIST [0:?] OF LIST [3:?] OF INTEGER;
     triangle_fans : LIST [0:?] OF LIST [3:?] OF INTEGER;
  WHERE
     WR1: ((SIZEOF(pnindex) = 0)  OR (SIZEOF(pnindex) = SELF\Tessellated_face.pnmax));
     WR2: NOT((SIZEOF(pnindex) = 0) AND (SELF\Tessellated_face.pnmax <> coordinates.npoints));
     WR3: NOT ((SIZEOF(triangle_strips) = 0) AND (SIZEOF(triangle_fans) = 0));
 END_ENTITY; 
 
 
 ENTITY Coordinates_list
    SUBTYPE OF (Tessellated_item);
    npoints : INTEGER;
    position_coords : LIST [1:?] OF LIST [3:3] OF REAL;
 WHERE
    WR1: npoints = SIZEOF(position_coords);
    WR2: SIZEOF (['GEOMETRIC_MODEL_SCHEMA.REPOSITIONED_TESSELLATED_ITEM'] * TYPEOF(SELF)) = 0;
 END_ENTITY;


END_SCHEMA;
(*
   ISO TC184/SC4/WG12 N4218 - ISO/TS 10303-1757 Test select product - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N3679
*)
SCHEMA Test_select_product_arm;

	USE FROM Product_replacement_arm;	-- ISO/TS 10303-1046

  ENTITY Test_select_product
    SUBTYPE OF (Alternate_product_relationship);
  WHERE
    WR1: NOT EXISTS (SELF\Alternate_product_relationship.criteria);
  END_ENTITY;

END_SCHEMA;
(*
ISO TC184/SC4/WG12 N8065 - ISO/TS 10303-1136 Text appearance - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N5524
*) 


SCHEMA Text_appearance_arm;

USE FROM Basic_geometry_arm;   -- ISO/TS 10303-1652

  TYPE composite_text_element_select = EXTENSIBLE GENERIC_ENTITY SELECT
    (Composite_presentable_text, 
     Defined_character_glyph,
     Text_literal);
  END_TYPE; 

  TYPE font_select = EXTENSIBLE GENERIC_ENTITY SELECT (
    Draughting_pre_defined_text_font,
    Externally_defined_text_font);
  END_TYPE;

  TYPE text_alignment = EXTENSIBLE ENUMERATION OF( 
    top_right,
    top_centre,
    top_left,
    centre_right,
    centre_centre,
    centre_left,
    bottom_right,
    bottom_centre,
    bottom_left);
  END_TYPE;

  TYPE text_delineation = EXTENSIBLE ENUMERATION OF(
    underline,
    overline);
  END_TYPE;

  TYPE text_path = ENUMERATION OF(
    left,
    right,
    up,
    down);
  END_TYPE;

  ENTITY Composite_presentable_text
    SUBTYPE OF (Detailed_geometric_model_element);
      collected_text : LIST[2:?] OF composite_text_element_select;
  END_ENTITY;

  ENTITY Defined_character_glyph
    SUBTYPE OF (Detailed_geometric_model_element);
      placement : Axis_placement;
  END_ENTITY;

  ENTITY Draughting_pre_defined_text_font;
  END_ENTITY;

  ENTITY Externally_defined_text_font;
    name : STRING;
  END_ENTITY; 

  ENTITY Text_literal
    SUPERTYPE OF (
      Text_literal_with_extent ANDOR 
      Text_literal_with_delineation ANDOR 
      Text_literal_with_associated_curves ANDOR 
      Text_literal_with_blanking_box)
    SUBTYPE OF (Detailed_geometric_model_element);
      alignment : text_alignment;
      font : font_select;
      literal : STRING;
      path : text_path;
      placement : Axis_placement;
  END_ENTITY;

  ENTITY Text_literal_with_associated_curves
    SUBTYPE OF (Text_literal);
      associated_curves : SET [1:?] OF Curve;
  END_ENTITY;  

  ENTITY Text_literal_with_blanking_box
    SUBTYPE OF (Text_literal);
  END_ENTITY;  

  ENTITY Text_literal_with_delineation
    SUBTYPE OF (Text_literal);
      delineation: text_delineation;
  END_ENTITY;  

  ENTITY Text_literal_with_extent
    SUBTYPE OF (Text_literal);
      width : length_measure; 
      height : length_measure;
  END_ENTITY;  

  SUBTYPE_CONSTRAINT ta_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
    ONEOF(Composite_presentable_text, Text_literal, Defined_character_glyph);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;  
(*
   ISO TC184/SC4/WG12 N8068 - ISO/TS 10303-1750 Text representation - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N7077
*)

SCHEMA Text_representation_arm;

USE FROM Text_appearance_arm; -- ISO/TS 10303-1136
USE FROM Associative_text_arm; -- ISO/TS 10303-1132 

  TYPE tr_text_or_composite_text = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON text_or_composite_text WITH (
    Annotation_text_character);
  END_TYPE;
  
  TYPE tr_composite_text_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON composite_text_element_select WITH (
    Annotation_text_character);
  END_TYPE; 

  TYPE tr_font_select  = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON font_select WITH
    (Text_font);
  END_TYPE;
  
  TYPE label1 = label;
   WHERE
    WR1 : LENGTH(SELF) = 1; 
  END_TYPE;
  
  ENTITY Annotation_text_character 
    SUBTYPE OF (Detailed_geometric_model_element);
    replicated_model : Character_glyph_symbol; 
    source           : Axis_placement;
    target           : Axis_placement;
  END_ENTITY;

  ENTITY Character_glyph_font_usage; 
    character : Character_glyph_symbol;
    font      : Text_font;
  END_ENTITY;

  ENTITY Character_glyph_symbol
    SUBTYPE OF (Representation);
      SELF\Representation.name RENAMED character : label1; 
  END_ENTITY; 

  ENTITY Text_font; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    glyphs: SET [1:?] OF Character_glyph_font_usage FOR font;
  END_ENTITY;

  ENTITY Text_font_family; 
    id           : STRING; 
    name         : STRING; 
    description  : STRING;
   INVERSE          
    fonts: SET [1:?] OF Text_font_in_family FOR family;
  END_ENTITY; 

  ENTITY Text_font_in_family;
    font   : Text_font;
    family : Text_font_family;
  END_ENTITY;

END_SCHEMA;
(*
  ISO TC184/SC4/WG12 N8071 - ISO/TS 10303-1320 Thickened face solid - EXPRESS ARM
  Supersedes ISO TC184/SC4/WG12 N7478
*)

SCHEMA Thickened_face_solid_arm;

USE FROM Topologically_bounded_surface_arm; -- ISO/TS 10303-1511

  ENTITY Solid_model_element
    SUBTYPE OF (Detailed_geometric_model_element);
  END_ENTITY;

  ENTITY Thickened_face_solid_model_element
    SUBTYPE OF (Solid_model_element);
      base_face        : Advanced_face;
      base_thickness   : length_measure;       
      top_thickness    : length_measure;
  END_ENTITY;

  SUBTYPE_CONSTRAINT tbsa_detailed_geometric_model_element_subtypes FOR Detailed_geometric_model_element;
    ONEOF (Axis_placement, 
           Cartesian_transformation_2d, 
           Cartesian_transformation_3d,
           Direction, 
           Solid_model_element);
  END_SUBTYPE_CONSTRAINT;

END_SCHEMA;

(*
 ISO TC184/SC4/WG12 N2955 - ISO/TS 10303-1065 Time interval - EXPRESS ARM
*)


SCHEMA Time_interval_arm; 

USE FROM Event_arm;    -- ISO/TS 10303-1064

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Time_interval;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : Time_interval;
  related_time_interval : Time_interval;
END_ENTITY;

ENTITY Time_interval_with_bounds
  SUBTYPE OF (Time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL Duration;
WHERE
  WR1: NOT (EXISTS (secondary_bound) AND EXISTS (duration_from_primary_bound));
  WR2: EXISTS (primary_bound) OR EXISTS (secondary_bound);
END_ENTITY;

END_SCHEMA;  -- Time_interval_arm
(*
 ISO TC184/SC4/WG12 N2120 - ISO/TS 10303-1365 Time interval assignment - EXPRESS ARM
*) 


SCHEMA Time_interval_assignment_arm; 

USE FROM Time_interval_arm;    -- ISO/TS 10303-1065


TYPE time_interval_item = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Time_interval_assignment;
  assigned_time_interval : Time_interval;
  role : Time_interval_role;
  items : SET[1:?] OF time_interval_item;
END_ENTITY;

ENTITY Time_interval_role;
  name : STRING;
  description : STRING;
END_ENTITY;

END_SCHEMA;  -- Time_interval_assignment_arm

(*
 ISO TC184/SC4/WG12 N7840 - ISO/TS 10303-1511 Topologically bounded surface - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7199
*)

SCHEMA Topologically_bounded_surface_arm;

USE FROM Basic_geometric_topology_arm;
USE FROM B_spline_geometry_arm;

ENTITY Advanced_face
  SUBTYPE OF (Face_surface);
END_ENTITY;

END_SCHEMA;

(*
ISO TC184/SC4/WG12 N7843 - ISO/TS 10303-1054 Value with unit - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N7238
*) 


SCHEMA Value_with_unit_arm;


TYPE any_number_value = NUMBER;
END_TYPE; 

TYPE any_string_value = STRING;
END_TYPE; 

TYPE length_measure = REAL;
END_TYPE; 

TYPE measure_value = EXTENSIBLE SELECT
   (any_number_value, 
    any_string_value, 
    length_measure, 
    plane_angle_measure,
    area_measure,
    count_measure,
   ratio_measure,
   volume_measure);
END_TYPE; 

TYPE plane_angle_measure = REAL;
END_TYPE; 

TYPE ratio_measure = REAL;
END_TYPE;

TYPE area_measure = REAL;
END_TYPE;

TYPE volume_measure = REAL;
END_TYPE;

TYPE count_measure = NUMBER;
END_TYPE;

ENTITY Area_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;

ENTITY Amount_of_substance_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Context_dependent_unit
  SUBTYPE OF (Unit);
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Conversion_based_unit
  SUBTYPE OF (Unit);
  conversion_factor : Value_with_unit;
WHERE
  WR1: EXISTS(SELF\Unit.name);
END_ENTITY;

ENTITY Derived_unit
 SUPERTYPE OF (ONEOF (Area_unit,
                       Volume_unit))
 SUBTYPE OF (Unit);
  elements : SET[1:?] OF Derived_unit_element;
END_ENTITY;


ENTITY Derived_unit_element;
  base_unit : Unit;
  exponent : REAL;
END_ENTITY;

ENTITY Duration
  SUBTYPE OF (Value_with_unit);
WHERE
  WR1: 'VALUE_WITH_UNIT_ARM.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY;

ENTITY Electric_current_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Length_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Luminous_intensity_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Mass_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Plane_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Ratio_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Solid_angle_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Thermodynamic_temperature_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Time_unit
  SUBTYPE OF (Unit);
END_ENTITY;

ENTITY Uncertainty_with_unit
  SUBTYPE OF (Value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Unit
  SUPERTYPE OF (ONEOF (Amount_of_substance_unit,
                       Electric_current_unit,
                       Length_unit,
                       Luminous_intensity_unit,
                       Mass_unit,
                       Plane_angle_unit,
                       Ratio_unit,
                       Solid_angle_unit,
                       Thermodynamic_temperature_unit,
                       Time_unit));
  name : STRING;
  si_unit : BOOLEAN;
END_ENTITY;

ENTITY Value_with_unit;
  unit : Unit;
  value_component : measure_value;
END_ENTITY;

ENTITY Volume_unit
  SUBTYPE OF (Derived_unit);
END_ENTITY;

END_SCHEMA;  -- Value_with_unit_arm
(*
   ISO TC184/SC4/WG12 N8244 - ISO/TS 10303-1753 Value with unit extension - EXPRESS ARM
   Supersedes ISO TC184/SC4/WG12 N5533
*)

SCHEMA Value_with_unit_extension_arm;

	USE FROM Value_with_unit_arm;	-- ISO/TS 10303-1054
	
ENTITY Absorbed_dose_data_element
  SUBTYPE OF (Value_with_unit);
END_ENTITY;

  ENTITY Radioactivity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Acceleration_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Amount_of_substance_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Area_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Capacitance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Celsius_temperature_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Conductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Dielectric_constant_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Dose_equivalent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Electric_charge_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Electric_current_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Electric_potential_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Energy_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Force_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Frequency_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Illuminance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Inductance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Length_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
      WR1 : SELF\Value_with_unit.value_component >= 0.0;
	  WR2 : 'VALUE_WITH_UNIT_ARM.LENGTH_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Loss_tangent_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Luminous_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Luminous_intensity_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Magnetic_flux_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Magnetic_flux_density_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Mass_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.MASS_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Power_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Pressure_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Ratio_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.RATIO_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Solid_angle_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Thermal_resistance_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Thermodynamic_temperature_data_element
    SUBTYPE OF (Value_with_unit);
    WHERE
		WR1 : 'VALUE_WITH_UNIT_ARM.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
  END_ENTITY;

  ENTITY Velocity_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

  ENTITY Volume_data_element
    SUBTYPE OF (Value_with_unit);
  END_ENTITY;

SUBTYPE_CONSTRAINT value_with_unit_subtypes FOR Value_with_unit; 
  ONEOF (Acceleration_data_element,
 Absorbed_dose_data_element,
 Radioactivity_data_element,
 Amount_of_substance_data_element,
 Angle_data_element,
 Area_data_element,
 Capacitance_data_element,
 Celsius_temperature_data_element,
 Conductance_data_element,
 Dielectric_constant_data_element,
 Dose_equivalent_data_element,
 Electric_charge_data_element,
 Electric_current_data_element,
 Electric_potential_data_element,
 Energy_data_element,
 Force_data_element,
 Frequency_data_element,
 Illuminance_data_element,
 Inductance_data_element,
 Length_data_element,
 Loss_tangent_data_element,
 Luminous_flux_data_element,
 Luminous_intensity_data_element,
 Magnetic_flux_data_element,
 Magnetic_flux_density_data_element,
 Mass_data_element,
 Power_data_element,
 Pressure_data_element,
 Ratio_data_element,
 Resistance_data_element,
 Solid_angle_data_element,
 Thermal_resistance_data_element,
 Thermodynamic_temperature_data_element,
 Velocity_data_element,
 Volume_data_element); 
END_SUBTYPE_CONSTRAINT;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N2625 - ISO/TS 10303-1347 Wireframe 2d - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1775
*)

SCHEMA Wireframe_2d_arm;

USE FROM Elemental_geometric_shape_arm;

ENTITY Geometrically_bounded_2d_wireframe_shape_representation
  SUBTYPE OF (Geometric_model);
END_ENTITY;

END_SCHEMA;
(*
 ISO TC184/SC4/WG12 N8074 - ISO/TS 10303-1043 Work order - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N7481
*)


SCHEMA Work_order_arm; 

USE FROM Activity_arm;    -- ISO/TS 10303-1047

USE FROM Work_request_arm;    -- ISO/TS 10303-1042


ENTITY Directed_activity
  SUBTYPE OF (Activity);
  directive : Work_order;
END_ENTITY;

ENTITY Work_order;
  name : STRING;
  description : OPTIONAL STRING;
  in_response_to : SET[0:?] OF Work_request;
END_ENTITY;

END_SCHEMA;  -- Work_order_arm
(*
 ISO TC184/SC4/WG12 N8077 - ISO/TS 10303-1042 Work request - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2947
*)



SCHEMA Work_request_arm; 

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE affected_item_select = EXTENSIBLE SELECT;
END_TYPE; 

ENTITY Activity_method_assignment;
  relation_type : STRING;
  assigned_method : Activity_method;
  associated_request : Work_request;
END_ENTITY;

ENTITY Affected_items_assignment;
  assigned_work_request : Work_request;
  items : SET[1:?] OF affected_item_select;
END_ENTITY;

ENTITY Work_request;
  request_id : STRING;
  version_id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;

ENTITY Work_request_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Work_request;
  related : Work_request;
END_ENTITY;

ENTITY Work_request_status;
  status : STRING;
  work_request : Work_request;
END_ENTITY;

END_SCHEMA;  -- Work_request_arm

