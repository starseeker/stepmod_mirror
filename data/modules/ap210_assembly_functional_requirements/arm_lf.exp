(*
 $Id: arm_lf.exp,v 1.16 2005/03/09 01:07:43 thendrix Exp $
 ISO TC184/SC4/WG3 N1951 - ISO/TS 10303-1605 AP210 assembly functional requirements - EXPRESS ARM Long form
 Supersedes ISO TC184/SC4/WG3 N1690
*)

SCHEMA ap210_assembly_functional_requirements_arm_lf;

CONSTANT
	Pre_defined_activity_relationship_types : SET [0:?] OF STRING := [
	'alternative',
	'decomposition',
	'derivation',
	'exclusiveness',
	'precedence',
	'sequence',
	'simultaneity'];


	Pre_defined_address_assignment_types : SET [0:?] OF STRING := [
	'delivery address',
	'postal address',
	'visitor address'];


	Pre_defined_approval_status_types : SET [0:?] OF STRING := [
	'approved',
	'disapproved',
	'withdrawn',
	'not yet approved'];


	Pre_defined_approval_types : SET [0:?] OF STRING := [
	'disposition',
	'equipment order',
	'planning'];


	Pre_defined_date_or_date_time_assignment_types : SET [0:?] OF STRING := [
	'creation',
	'installation',
	'production',
	'registration',
	'update',
	'planned',
	'actual',
	'start date',
	'end date',
	'release date',
	'request date'];


	Pre_defined_organization_or_person_in_organization_assignment_types : SET [0:?] OF STRING := [
	'author',
	'classification officer',
	'creator',
	'custodian',
	'customer',
	'design supplier',
	'editor',
	'id owner',
	'location',
	'manufacturer',
	'owner',
	'read access',
	'supplier',
	'wholesaler',
	'write access',
	'organization in contract'];


	Pre_defined_security_classification_types : SET [0:?] OF STRING := [
	'unclassified',
	'classified',
	'proprietary',
	'confidential',
	'secret',
	'top secret'];


	Pre_defined_work_request_status_types : SET [0:?] OF STRING := [
	'in work',
	'issued',
	'proposed',
	'resolved'];


	Pre_defined_work_request_types : SET [0:?] OF STRING := [
	'change of standard',
	'cost reduction',
	'customer rejection',
	'customer request',
	'durability improvement',
	'government regulation',
	'production alignment',
	'procurement alignment',
	'production relief',
	'production requirement',
	'quality improvement',
	'security reason',
	'standardization',
	'supplier request',
	'technical improvement',
	'tool improvement'];



END_CONSTANT;

TYPE activity_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- activity_item

TYPE activity_method_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- activity_method_item

TYPE alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- alias_identification_item

TYPE ap_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Surface_prepped_terminal);
END_TYPE; -- ap_documented_element_select

TYPE ap_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Altered_package);
END_TYPE; -- ap_external_identification_item

TYPE predefined_geometric_status = ENUMERATION OF (
	undefined,
	standard_datum_condition,
	perpendicular_primary_datum_axis,
	perpendicular_primary_datum_plane );
END_TYPE; -- predefined_geometric_status

TYPE am_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Analytical_model_definition);
END_TYPE; -- am_documented_element_select

TYPE am_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Digital_analytical_model_vector_port);
END_TYPE; -- am_external_identification_item

TYPE analytical_model_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- analytical_model_port_assignment_select

TYPE model_parameter_type = ENUMERATION OF (
	string_property_type,
	boolean_property_type,
	logical_property_type,
	numeric_property_type,
	physical_property_type );
END_TYPE; -- model_parameter_type

TYPE signal_flow_direction = ENUMERATION OF (
	unknown_direction,
	not_applicable,
	output_direction,
	input_direction,
	bidirectional );
END_TYPE; -- signal_flow_direction

TYPE approval_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- approval_item

TYPE assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Bare_die_component_terminal,
	Component_mounting_feature,
	Packaged_component_join_terminal);
END_TYPE; -- assembled_feature_select

TYPE assembly_module_or_assembly_group_component = EXTENSIBLE GENERIC_ENTITY SELECT (
	Assembly_module);
END_TYPE; -- assembly_module_or_assembly_group_component

TYPE amwpcc_assembled_feature_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assembled_feature_select WITH (
	Packaged_connector_component_interface_terminal);
END_TYPE; -- amwpcc_assembled_feature_select

TYPE at_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Assembly_bond_definition);
END_TYPE; -- at_external_identification_item

TYPE at_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH (
	Assembly_bond_definition);
END_TYPE; -- at_material_item_select

TYPE at_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Assembly_joint);
END_TYPE; -- at_requirement_assignment_item

TYPE degree_of_freedom = ENUMERATION OF (
	x,
	y,
	z,
	u,
	v,
	w );
END_TYPE; -- degree_of_freedom

TYPE classified_attribute_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- classified_attribute_select

TYPE bd_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH (
	Bare_die);
END_TYPE; -- bd_ee_product_definition_with_annotation_elements

TYPE bd_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH (
	Bare_die_terminal,
	Bare_die_template_terminal);
END_TYPE; -- bd_material_item_select

TYPE derived_zone_shape_class = ENUMERATION OF (
	area,
	edge );
END_TYPE; -- derived_zone_shape_class

TYPE constructive_element_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Axis_placement,
	Curve,
	point_select,
	Surface);
END_TYPE; -- constructive_element_select

TYPE point_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Cartesian_point,
	Point_on_curve,
	Point_on_surface);
END_TYPE; -- point_select

TYPE certification_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- certification_item

TYPE c_documented_element_select = EXTENSIBLE SELECT BASED_ON documented_element_select WITH (
	Property_value_representation);
END_TYPE; -- c_documented_element_select

TYPE characteristic = SELECT (
	String_representation_item,
	Numerical_item_with_unit,
	Value_list,
	Value_set);
END_TYPE; -- characteristic

TYPE list_characteristic = LIST [1:?] OF characteristic;
END_TYPE; -- list_characteristic

TYPE range_class = ENUMERATION OF (
	closed,
	lower_open,
	upper_open,
	open );
END_TYPE; -- range_class

TYPE scalar_or_coordinated_characteristics = SELECT (
	Property_value_representation,
	characteristic);
END_TYPE; -- scalar_or_coordinated_characteristics

TYPE value_qualifier = SELECT (
	Precision_qualifier,
	Type_qualifier,
	Uncertainty_qualifier);
END_TYPE; -- value_qualifier

TYPE classification_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- classification_item

TYPE classification_item_extended = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
	Part,
	Part_version,
	Part_view_definition);
END_TYPE; -- classification_item_extended

TYPE classified_element_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Part,
	Part_version,
	Part_view_definition);
END_TYPE; -- classified_element_select

TYPE definable_objects = SELECT (
	Part,
	Part_version,
	Part_view_definition);
END_TYPE; -- definable_objects

TYPE external_class_select = SELECT (
	Plib_class_reference,
	External_class);
END_TYPE; -- external_class_select

TYPE feature_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Part_feature);
END_TYPE; -- feature_select

TYPE cma_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
	Material_identification_with_conductivity_classification);
END_TYPE; -- cma_classification_item

TYPE cma_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH (
	Part_view_definition);
END_TYPE; -- cma_material_item_select

TYPE version_or_definition = SELECT (
	Product_version,
	Product_view_definition);
END_TYPE; -- version_or_definition

TYPE template_definition_select = EXTENSIBLE SELECT (
	Geometric_model);
END_TYPE; -- template_definition_select

TYPE template_instance = SELECT (
	Geometric_placement_operation,
	Geometric_model_relationship_with_transformation);
END_TYPE; -- template_instance

TYPE contract_item = EXTENSIBLE SELECT ;
END_TYPE; -- contract_item

TYPE date_or_date_time_select = SELECT (
	Calendar_date,
	Date_time);
END_TYPE; -- date_or_date_time_select

TYPE day_in_month_number = INTEGER;
WHERE
	WR1 : {1 <= SELF <= 31};
END_TYPE; -- day_in_month_number

TYPE hour_in_day = INTEGER;
WHERE
	WR1 : { 0 <= SELF < 24 };
END_TYPE; -- hour_in_day

TYPE minute_in_hour = INTEGER;
WHERE
	WR1 : { 0 <= SELF <= 59 };
END_TYPE; -- minute_in_hour

TYPE month_in_year_number = INTEGER;
WHERE
	WR1 : { 1 <= SELF <= 12 };
END_TYPE; -- month_in_year_number

TYPE offset_orientation = ENUMERATION OF (
	ahead,
	exact,
	behind );
END_TYPE; -- offset_orientation

TYPE second_in_minute = REAL;
WHERE
	WR1 : { 0 <= SELF <= 60.0 };
END_TYPE; -- second_in_minute

TYPE year_number = INTEGER;
END_TYPE; -- year_number

TYPE date_or_date_time_item = EXTENSIBLE SELECT ;
END_TYPE; -- date_or_date_time_item

TYPE cell_entry_select = SELECT (
	Plus_minus_toleranced_datum,
	Upper_lower_toleranced_datum);
END_TYPE; -- cell_entry_select

TYPE default_context_select = SELECT (
	Item_shape);
END_TYPE; -- default_context_select

TYPE default_setting_select = EXTENSIBLE SELECT (
	General_tolerances);
END_TYPE; -- default_setting_select

TYPE general_tolerance_table_select = EXTENSIBLE SELECT (
	General_tolerance_table);
END_TYPE; -- general_tolerance_table_select

TYPE limit_select = SELECT (
	Significant_number_of_digits,
	Upper_lower_limit);
END_TYPE; -- limit_select

TYPE dm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH (
	Frozen_assignment);
END_TYPE; -- dm_approval_item

TYPE managed_design_object = EXTENSIBLE SELECT ;
END_TYPE; -- managed_design_object

TYPE design_activity_method_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_method_item WITH (
	Document,
	Document_version);
END_TYPE; -- design_activity_method_item

TYPE design_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_approval_item WITH (
	Certification,
	Document_definition,
	Effectivity,
	Independent_property_relationship,
	Product_configuration,
	Product_version,
	Product_view_definition,
	Requirement_assignment,
	Security_classification,
	Supplied_part_relationship,
	Work_order);
END_TYPE; -- design_approval_item

TYPE design_pdm_affected_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_affected_item_select WITH (
	Work_request);
END_TYPE; -- design_pdm_affected_item_select

TYPE design_pdm_assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assigned_name_select WITH (
	Product,
	Product_view_definition);
END_TYPE; -- design_pdm_assigned_name_select

TYPE design_pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_certification_item WITH (
	Alternate_product_relationship,
	Product_version);
END_TYPE; -- design_pdm_certification_item

TYPE design_pdm_classified_attribute_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classified_attribute_select WITH (
	Activity,
	Activity_method,
	Activity_method_assignment,
	Activity_property,
	Activity_property_representation,
	Activity_relationship,
	Address_assignment,
	Affected_items_assignment,
	Alternate_part_relationship,
	Applied_activity_assignment,
	Approval,
	Approval_assignment,
	Approval_relationship,
	Approval_status,
	Approving_person_organization,
	Assigned_property,
	Certification,
	Certification_assignment,
	Context_dependent_unit,
	Contract,
	Date_or_date_time_assignment,
	Descriptive_document_property,
	Digital_file,
	Document_assignment,
	Document_definition_relationship,
	Document_location_identification,
	Document_property_representation,
	Effectivity,
	Effectivity_assignment,
	Event_assignment,
	Event_relationship,
	External_item_identification,
	External_source_identification,
	File_location_identification,
	File_relationship,
	Hardcopy,
	Identification_assignment,
	Independent_property,
	Independent_property_relationship,
	Independent_property_representation,
	Language,
	Market,
	Numerical_document_property,
	Organization_or_person_in_organization_assignment,
	Organization_relationship,
	Part_view_definition,
	Partial_document_assignment,
	Person_in_organization,
	Product,
	Product_category,
	Product_concept,
	Product_version,
	Product_version_relationship,
	Product_view_definition,
	Project_assignment,
	Project_relationship,
	Property_representation,
	Representation,
	Representation_context,
	Representation_item,
	Security_classification,
	Time_interval_relationship,
	Uncertainty_with_unit,
	Unit,
	Value_with_unit,
	View_definition_context,
	View_definition_relationship,
	Work_order,
	Work_request,
	Work_request_status);
END_TYPE; -- design_pdm_classified_attribute_select

TYPE design_pdm_contract_item = EXTENSIBLE SELECT BASED_ON contract_item WITH (
	organization_or_person_in_organization_select,
	Product_version,
	Work_order);
END_TYPE; -- design_pdm_contract_item

TYPE design_pdm_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_date_or_date_time_item WITH (
	Contract,
	Document_definition,
	Product_view_definition,
	Security_classification,
	Work_order);
END_TYPE; -- design_pdm_date_or_date_time_item

TYPE design_pdm_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_documented_element_select WITH (
	External_item_identification,
	Material_identification,
	Product_category,
	Product_view_definition,
	Representation_item);
END_TYPE; -- design_pdm_documented_element_select

TYPE design_pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_identification_item WITH (
	Material_identification,
	Organization,
	Product,
	Product_category,
	Product_configuration,
	Product_concept,
	Product_version);
END_TYPE; -- design_pdm_identification_item

TYPE design_pdm_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH (
	Alias_identification,
	Document_definition,
	Supplied_part_relationship,
	Work_order);
END_TYPE; -- design_pdm_organization_or_person_in_organization_item

TYPE design_pdm_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Product_configuration,
	Product_view_definition,
	Product_version,
	Product);
END_TYPE; -- design_pdm_requirement_assignment_item

TYPE design_pdm_requirement_source_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_source_item WITH (
	Product_view_definition,
	Product_version,
	Product,
	Shape_element,
	Characterizable_object,
	View_definition_relationship);
END_TYPE; -- design_pdm_requirement_source_item

TYPE design_pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON pdm_security_classification_item WITH (
	Document_definition,
	Product_version,
	Product_view_definition,
	Promissory_usage);
END_TYPE; -- design_pdm_security_classification_item

TYPE dimension_tolerance_document_element_select = EXTENSIBLE SELECT BASED_ON documented_element_select WITH (
	Externally_defined_size_dimension);
END_TYPE; -- dimension_tolerance_document_element_select

TYPE dimension_value_select = SELECT (
	Dimension_value_with_limitation,
	Numerical_item_with_unit,
	Tolerance_range,
	Value_limit);
END_TYPE; -- dimension_value_select

TYPE element_with_dimension_select = EXTENSIBLE GENERIC_ENTITY SELECT (
	Shape_element);
END_TYPE; -- element_with_dimension_select

TYPE limitation_definition_select = SELECT (
	Limits_and_fits,
	Plus_minus_bounds);
END_TYPE; -- limitation_definition_select

TYPE placed_element_select = EXTENSIBLE SELECT (
	constructive_element_select,
	Derived_geometry,
	element_with_dimension_select);
END_TYPE; -- placed_element_select

TYPE assigned_document_select = SELECT (
	Document,
	Document_definition,
	Document_version,
	File);
END_TYPE; -- assigned_document_select

TYPE documented_element_select = EXTENSIBLE SELECT ;
END_TYPE; -- documented_element_select

TYPE document_location_select = SELECT BASED_ON external_identification_item WITH (
	Document_definition);
END_TYPE; -- document_location_select

TYPE document_management_alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON alias_identification_item WITH (
	Digital_document_definition,
	Digital_file,
	Document,
	Document_version,
	Hardcopy,
	Physical_document_definition);
END_TYPE; -- document_management_alias_identification_item

TYPE document_management_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_approval_item WITH (
	Digital_document_definition,
	Document_definition_relationship,
	Document_version,
	Physical_document_definition);
END_TYPE; -- document_management_approval_item

TYPE document_management_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH (
	Document_version);
END_TYPE; -- document_management_contract_item

TYPE document_management_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_date_or_date_time_item WITH (
	Digital_document_definition,
	Digital_file,
	Document_definition_relationship,
	Document_version,
	Hardcopy,
	Physical_document_definition);
END_TYPE; -- document_management_date_or_date_time_item

TYPE document_management_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_identification_item WITH (
	Digital_document_definition,
	Digital_file,
	Document,
	Document_version,
	Hardcopy,
	Physical_document_definition);
END_TYPE; -- document_management_identification_item

TYPE document_management_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_organization_or_person_in_organization_item WITH (
	Digital_document_definition,
	Digital_file,
	Document,
	Document_version,
	Hardcopy,
	Physical_document_definition);
END_TYPE; -- document_management_person_and_organization_item

TYPE document_management_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH (
	Digital_document_definition,
	Digital_file,
	Document,
	Document_version,
	Hardcopy,
	Physical_document_definition);
END_TYPE; -- document_management_security_classification_item

TYPE document_management_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_string_select WITH (
	Digital_document_definition,
	Document,
	Document_assignment,
	Document_definition_relationship,
	Document_version,
	External_item_identification,
	External_source_identification,
	File_relationship,
	Physical_document_definition,
	Product_category);
END_TYPE; -- document_management_string_select

TYPE descriptive_or_numerical = SELECT (
	Descriptive_document_property,
	Numerical_document_property);
END_TYPE; -- descriptive_or_numerical

TYPE document_property_item = SELECT BASED_ON property_assignment_select WITH (
	Document_definition,
	File);
END_TYPE; -- document_property_item

TYPE effectivity_item = EXTENSIBLE SELECT ;
END_TYPE; -- effectivity_item

TYPE cartesian_transformation = SELECT (
	Cartesian_transformation_2d,
	Cartesian_transformation_3d);
END_TYPE; -- cartesian_transformation

TYPE geometric_mapping_target = SELECT (
	Axis_placement,
	cartesian_transformation);
END_TYPE; -- geometric_mapping_target

TYPE date_or_event = SELECT (
	Calendar_date,
	Date_time,
	Event);
END_TYPE; -- date_or_event

TYPE event_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- event_item

TYPE axis_placement_or_cto2d = SELECT (
	Axis_placement,
	Cartesian_transformation_2d);
END_TYPE; -- axis_placement_or_cto2d

TYPE centre_type = ENUMERATION OF (
	centred_on_arc,
	centred_on_radial );
END_TYPE; -- centre_type

TYPE constraining_element_definitions = SELECT (
	Tolerance_zone_definition,
	Profile_related_positional_boundary_definition,
	Positional_boundary_member_definition,
	Conical_tolerance_zone_boundary_diametrical_size_characteristic);
END_TYPE; -- constraining_element_definitions

TYPE descriptive_or_geometric_orientation = SELECT (
	measure_orientation,
	Direction);
END_TYPE; -- descriptive_or_geometric_orientation

TYPE dimension_qualifiers = ENUMERATION OF (
	free_state,
	average );
END_TYPE; -- dimension_qualifiers

TYPE dimensional_location_or_dimensional_size = SELECT (
	Size_dimension,
	Location_dimension);
END_TYPE; -- dimensional_location_or_dimensional_size

TYPE egt_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Externally_defined_dimension_representation);
END_TYPE; -- egt_external_identification_item

TYPE egt_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Restraint_condition,
	Statistical_dimensional_location,
	Statistical_dimensional_size,
	Statistical_geometric_tolerance);
END_TYPE; -- egt_requirement_assignment_item

TYPE geometric_or_dimension_select = SELECT (
	Geometric_tolerance,
	Geometric_dimension);
END_TYPE; -- geometric_or_dimension_select

TYPE geometric_tolerance_qualifiers = ENUMERATION OF (
	pitch_diameter,
	minor_diameter,
	each_element,
	major_diameter,
	each_radial_element,
	not_concave,
	not_convex,
	free_state );
END_TYPE; -- geometric_tolerance_qualifiers

TYPE locating_or_refinement_linear_profile_tolerance = SELECT (
	Line_profile_tolerance,
	Composite_linear_profile_refinement_tolerance);
END_TYPE; -- locating_or_refinement_linear_profile_tolerance

TYPE locating_or_refinement_surface_profile_tolerance = SELECT (
	Surface_profile_tolerance,
	Composite_surface_profile_refinement_tolerance);
END_TYPE; -- locating_or_refinement_surface_profile_tolerance

TYPE measure_orientation = ENUMERATION OF (
	reversed,
	normal );
END_TYPE; -- measure_orientation

TYPE offset_types = ENUMERATION OF (
	towards_material,
	away_from_material );
END_TYPE; -- offset_types

TYPE orientation_select = SELECT (
	Datum_axis_related_orientation,
	Viewing_plane_based_orientation,
	Datum_based_vector_orientation);
END_TYPE; -- orientation_select

TYPE physical_feature_or_part_template = EXTENSIBLE GENERIC_ENTITY SELECT (
	Datum_feature);
END_TYPE; -- physical_feature_or_part_template

TYPE restrained_item_select = SELECT (
	Single_datum,
	physical_feature_or_part_template);
END_TYPE; -- restrained_item_select

TYPE true_profile_representations = EXTENSIBLE SELECT (
	Dimension_set,
	Document_definition,
	Func);
END_TYPE; -- true_profile_representations

TYPE limit_qualifier_list = ENUMERATION OF (
	minimum,
	maximum );
END_TYPE; -- limit_qualifier_list

TYPE external_class_assigned_name_select = SELECT BASED_ON assigned_name_select WITH (
	External_class_library);
END_TYPE; -- external_class_assigned_name_select

TYPE external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- external_identification_item

TYPE located_select = SELECT BASED_ON external_identification_item WITH (
	File);
END_TYPE; -- located_select

TYPE design_composition_path_or_root = SELECT (
	Design_composition_path,
	Functional_unit_network_definition);
END_TYPE; -- design_composition_path_or_root

TYPE fs_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Signal_specification);
END_TYPE; -- fs_documented_element_select

TYPE fs_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Functional_specification);
END_TYPE; -- fs_external_identification_item

TYPE fuuv_am_port_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON analytical_model_port_assignment_select WITH (
	Functional_unit_usage_view_terminal_definition);
END_TYPE; -- fuuv_am_port_assignment_select

TYPE dependent_or_independent_property_representation = SELECT (
	Independent_property_representation,
	Property_representation);
END_TYPE; -- dependent_or_independent_property_representation

TYPE material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- material_item_select

TYPE extended_value_with_unit = EXTENSIBLE SELECT (
	Value_with_unit,
	Value_limit,
	Value_range);
END_TYPE; -- extended_value_with_unit

TYPE tolerance_condition = ENUMERATION OF (
	maximum_material_condition,
	least_material_condition,
	regardless_of_feature_size );
END_TYPE; -- tolerance_condition

TYPE groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
WHERE
	WR1 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.GROUP' IN TYPEOF(SELF));
END_TYPE; -- groupable_item

TYPE identification_item = EXTENSIBLE SELECT ;
END_TYPE; -- identification_item

TYPE idrm_marked_item = EXTENSIBLE SELECT BASED_ON classification_item WITH (
	Digital_document_definition,
	Digital_file,
	Part_view_definition);
END_TYPE; -- idrm_marked_item

TYPE effectivity_for_replacement = SELECT BASED_ON effectivity_item WITH (
	Part_definition_relationship);
END_TYPE; -- effectivity_for_replacement

TYPE mri_alias_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON alias_identification_item WITH (
	Approval_status,
	Contract,
	Organization,
	Security_classification);
END_TYPE; -- mri_alias_identification_item

TYPE mri_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH (
	Certification,
	Contract);
END_TYPE; -- mri_approval_item

TYPE mri_date_or_date_time_item = EXTENSIBLE SELECT BASED_ON date_or_date_time_item WITH (
	Certification,
	Contract,
	Organization_or_person_in_organization_assignment,
	Security_classification_assignment);
END_TYPE; -- mri_date_or_date_time_item

TYPE mri_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH (
	Approval_status,
	Contract,
	Organization,
	Security_classification);
END_TYPE; -- mri_identification_item

TYPE mri_organization_or_person_in_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_or_person_in_organization_item WITH (
	Contract,
	Identification_assignment,
	Security_classification_assignment);
END_TYPE; -- mri_organization_or_person_in_organization_item

TYPE mri_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON string_select WITH (
	Approval,
	Approval_relationship,
	Approval_status,
	Certification,
	Contract,
	Date_or_date_time_assignment,
	Identification_assignment,
	Organization_relationship,
	Person_in_organization,
	Project,
	Project_assignment,
	Project_relationship);
END_TYPE; -- mri_string_select

TYPE mp_activity_method_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_method_item WITH (
	Test_method_based_parameter_assignment);
END_TYPE; -- mp_activity_method_item_select

TYPE mp_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Model_parameter);
END_TYPE; -- mp_documented_element_select

TYPE mp_groupable_item = SELECT BASED_ON groupable_item WITH (
	Group_relationship);
END_TYPE; -- mp_groupable_item

TYPE string_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- string_select

TYPE assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- assigned_name_select

TYPE bus_structural_definition_or_node = SELECT (
	Functional_unit_network_node_definition,
	Bus_structural_definition);
END_TYPE; -- bus_structural_definition_or_node

TYPE nfdw_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Functional_unit);
END_TYPE; -- nfdw_requirement_assignment_item

TYPE ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- ee_product_definition_with_annotation_elements

TYPE nfse_feature_or_non_feature_usage = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON feature_or_non_feature_usage WITH (
	Usage_view_level_non_feature_shape_model);
END_TYPE; -- nfse_feature_or_non_feature_usage

TYPE nfse_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH (
	Non_feature_shape_element);
END_TYPE; -- nfse_usage_concept

TYPE view_shape_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- view_shape_select

TYPE interface_plane_or_seating_plane = SELECT (
	Seating_plane,
	Interface_plane);
END_TYPE; -- interface_plane_or_seating_plane

TYPE mounting_technology_type = ENUMERATION OF (
	surface_mount,
	through_hole );
END_TYPE; -- mounting_technology_type

TYPE pa_ee_product_definition_with_annotation_elements = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON ee_product_definition_with_annotation_elements WITH (
	Package);
END_TYPE; -- pa_ee_product_definition_with_annotation_elements

TYPE pa_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Package);
END_TYPE; -- pa_external_identification_item

TYPE pa_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH (
	Package_body,
	Package_terminal_template_definition);
END_TYPE; -- pa_material_item_select

TYPE predefined_lead_form = ENUMERATION OF (
	gull_wing,
	j_lead,
	reversed_j_lead,
	integral_terminal,
	undefined,
	ball,
	straight );
END_TYPE; -- predefined_lead_form

TYPE seating_plane_intersection_type = ENUMERATION OF (
	surface_intersection,
	through_intersection,
	does_not_intersect );
END_TYPE; -- seating_plane_intersection_type

TYPE package_or_package_external_reference = SELECT (
	Package,
	Package_external_reference);
END_TYPE; -- package_or_package_external_reference

TYPE ppbbm_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH (
	Packaged_part);
END_TYPE; -- ppbbm_material_item_select

TYPE physical_unit_or_part_template = SELECT (
	Template_definition,
	Part_view_definition);
END_TYPE; -- physical_unit_or_part_template

TYPE feature_or_non_feature_usage = EXTENSIBLE GENERIC_ENTITY SELECT (
	part_template_or_physical_unit_shape_model_select);
END_TYPE; -- feature_or_non_feature_usage

TYPE part_template_or_physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- part_template_or_physical_unit_shape_model_select

TYPE usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- usage_concept

TYPE organization_or_person_in_organization_select = SELECT (
	Organization,
	Person_in_organization);
END_TYPE; -- organization_or_person_in_organization_select

TYPE organization_or_person_in_organization_item = EXTENSIBLE SELECT ;
END_TYPE; -- organization_or_person_in_organization_item

TYPE pcd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Physical_connectivity_element,
	Physical_connectivity_definition);
END_TYPE; -- pcd_documented_element_select

TYPE pcd_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Physical_connectivity_element,
	Physical_connectivity_definition,
	Physical_connectivity_definition_relationship);
END_TYPE; -- pcd_requirement_assignment_item

TYPE termination_or_junction = EXTENSIBLE GENERIC_ENTITY SELECT (
	Component_terminal,
	Topological_junction);
END_TYPE; -- termination_or_junction

TYPE correlated_or_independent = SELECT (
	Property_value_representation,
	characteristic);
END_TYPE; -- correlated_or_independent

TYPE physical_unit_or_part_template_or_fp_or_pd = EXTENSIBLE GENERIC_ENTITY SELECT (
	Part_view_definition,
	Template_definition);
END_TYPE; -- physical_unit_or_part_template_or_fp_or_pd

TYPE pudv_extended_value_with_unit = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON extended_value_with_unit WITH (
	textual_quantity_specification);
END_TYPE; -- pudv_extended_value_with_unit

TYPE pudv_physical_unit = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON physical_unit WITH (
	Part_design_view);
END_TYPE; -- pudv_physical_unit

TYPE pudv_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Assembly_item_number,
	Assembly_component_relationship);
END_TYPE; -- pudv_requirement_assignment_item

TYPE textual_quantity_specification = STRING;
END_TYPE; -- textual_quantity_specification

TYPE mass_property_quality = ENUMERATION OF (
	high,
	medium,
	low,
	is_unknown );
END_TYPE; -- mass_property_quality

TYPE puswp_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Physical_unit_keepout_shape_model);
END_TYPE; -- puswp_external_identification_item

TYPE puswp_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Physical_unit_keepout_shape_model,
	Physical_unit_shape_model);
END_TYPE; -- puswp_requirement_assignment_item

TYPE shape_approximation_level = ENUMERATION OF (
	coarse,
	detailed,
	is_unknown );
END_TYPE; -- shape_approximation_level

TYPE shape_extent = ENUMERATION OF (
	envelope,
	over_body,
	over_lands,
	over_breakout );
END_TYPE; -- shape_extent

TYPE material_state_change_enumeration = ENUMERATION OF (
	material_addition,
	material_removal );
END_TYPE; -- material_state_change_enumeration

TYPE physical_unit = EXTENSIBLE GENERIC_ENTITY SELECT (
	Part_usage_view);
END_TYPE; -- physical_unit

TYPE puuv_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Part_feature);
END_TYPE; -- puuv_documented_element_select

TYPE puuv_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Part_feature,
	Part_view_definition);
END_TYPE; -- puuv_requirement_assignment_item

TYPE puuv_usage_concept = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON usage_concept WITH (
	Part_feature);
END_TYPE; -- puuv_usage_concept

TYPE evaluation_result_value = ENUMERATION OF (
	pass,
	fail,
	undefined );
END_TYPE; -- evaluation_result_value

TYPE evaluation_type = ENUMERATION OF (
	not_evaluatable,
	invalid,
	valid,
	to_be_evaluated );
END_TYPE; -- evaluation_type

TYPE pdpdms_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Externally_defined_activity_relationship,
	Externally_defined_security_classification,
	Externally_defined_address_assignment,
	Externally_defined_organization_or_person_in_organization_assignment,
	Externally_defined_approval_status,
	Externally_defined_approval,
	Externally_defined_date_or_date_time_assignment,
	Externally_defined_work_request,
	Externally_defined_work_request_status);
END_TYPE; -- pdpdms_external_identification_item

TYPE characterized_activity_definition = EXTENSIBLE SELECT (
	Activity,
	Activity_method);
END_TYPE; -- characterized_activity_definition

TYPE expression_operator = ENUMERATION OF (
	or_operator,
	and_operator,
	oneof_operator,
	not_operator );
END_TYPE; -- expression_operator

TYPE specification_operand_select = SELECT (
	Specification_expression,
	Specification);
END_TYPE; -- specification_operand_select

TYPE pdm_activity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON activity_item WITH (
	Item_usage_effectivity,
	Product_version,
	Product_view_definition,
	View_definition_relationship);
END_TYPE; -- pdm_activity_item

TYPE pdm_affected_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON affected_item_select WITH (
	Assigned_property,
	Product_version,
	Product_view_definition,
	View_definition_relationship);
END_TYPE; -- pdm_affected_item_select

TYPE pdm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH (
	Activity,
	Applied_activity_assignment,
	Item_usage_effectivity,
	Work_request);
END_TYPE; -- pdm_approval_item

TYPE pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON certification_item WITH (
	Product_version_relationship);
END_TYPE; -- pdm_certification_item

TYPE pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
	Activity,
	Activity_method,
	Activity_method_assignment,
	Activity_property,
	Activity_relationship,
	Address,
	Address_assignment,
	Affected_items_assignment,
	Alternate_product_relationship,
	Applied_activity_assignment,
	Approval,
	Approval_assignment,
	Approval_relationship,
	Approval_status,
	Approving_person_organization,
	Assembly_relationship_substitution,
	Assigned_property,
	Attribute_translation_assignment,
	Calendar_date,
	Certification,
	Certification_assignment,
	Class,
	Context_dependent_unit,
	Contract,
	Contract_assignment,
	Conversion_based_unit,
	Date_or_date_time_assignment,
	Date_time,
	Derived_unit,
	Directed_activity,
	Document_assignment,
	Effectivity,
	Event,
	Event_assignment,
	External_source_identification,
	File,
	File_relationship,
	Identification_assignment,
	Independent_property,
	Independent_property_relationship,
	Independent_property_representation,
	Language,
	Numerical_item_with_unit,
	Organization,
	Organization_or_person_in_organization_assignment,
	Organization_relationship,
	Person,
	Product,
	Product_category,
	Product_concept,
	Product_configuration,
	Product_version,
	Product_version_relationship,
	Product_view_definition,
	Project,
	Project_assignment,
	Project_relationship,
	Representation,
	Representation_context,
	Representation_item,
	Security_classification,
	Security_classification_assignment,
	String_representation_item,
	Uncertainty_with_unit,
	Value_with_unit,
	View_definition_context,
	View_definition_relationship,
	Work_order,
	Work_request,
	Work_request_status);
END_TYPE; -- pdm_classification_item

TYPE pdm_date_or_date_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_or_date_time_item WITH (
	Activity,
	Applied_activity_assignment,
	Work_request);
END_TYPE; -- pdm_date_or_date_time_item

TYPE pdm_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Activity,
	Activity_method,
	Product_version_relationship,
	Shape_element,
	Shape_element_relationship,
	Work_request);
END_TYPE; -- pdm_documented_element_select

TYPE pdm_effectivity_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON effectivity_item WITH (
	Product_version,
	Product_view_definition,
	View_definition_relationship);
END_TYPE; -- pdm_effectivity_item

TYPE pdm_event_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON event_item WITH (
	Project);
END_TYPE; -- pdm_event_item

TYPE pdm_external_class_assigned_name_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON assigned_name_select WITH (
	External_class_library);
END_TYPE; -- pdm_external_class_assigned_name_select

TYPE pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH (
	Shape_element_relationship);
END_TYPE; -- pdm_identification_item

TYPE pdm_organization_or_person_in_organization_item = SELECT BASED_ON organization_or_person_in_organization_item WITH (
	Activity,
	Applied_activity_assignment,
	Approval,
	Contract,
	Product_configuration,
	Security_classification,
	Work_request);
END_TYPE; -- pdm_organization_or_person_in_organization_item

TYPE pdm_project_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON project_item WITH (
	Activity,
	Product_concept);
END_TYPE; -- pdm_project_item

TYPE pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH (
	Assembly_component_relationship);
END_TYPE; -- pdm_security_classification_item

TYPE pdm_string_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON string_select WITH (
	Approval,
	Approval_relationship,
	Approval_status,
	Certification,
	Contract,
	Document_assignment,
	External_item_identification,
	File_relationship,
	Organization_relationship,
	Person_in_organization,
	Product,
	Product_category,
	Product_version,
	Product_view_definition,
	Project,
	Project_assignment,
	Project_relationship,
	View_definition_relationship);
END_TYPE; -- pdm_string_select

TYPE pdm_time_interval_item = SELECT BASED_ON time_interval_item WITH (
	Activity);
END_TYPE; -- pdm_time_interval_item

TYPE pie_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Externally_defined_view_definition);
END_TYPE; -- pie_external_identification_item

TYPE ps_product_property_assignment = SELECT BASED_ON property_assignment_select WITH (
	View_definition_relationship);
END_TYPE; -- ps_product_property_assignment

TYPE product_property_assignment = EXTENSIBLE SELECT BASED_ON property_assignment_select WITH (
	Product_view_definition,
	View_definition_relationship);
END_TYPE; -- product_property_assignment

TYPE built_in_functions = ENUMERATION OF (
	attr_val );
END_TYPE; -- built_in_functions

TYPE clause_select = SELECT (
	Simple_clause,
	Complex_clause);
END_TYPE; -- clause_select

TYPE constants = EXTENSIBLE SELECT (
	any_number_value,
	any_string_value,
	Logical_representation_item);
END_TYPE; -- constants

TYPE expression_syntax = ENUMERATION OF (
	express );
END_TYPE; -- expression_syntax

TYPE function_symbol = SELECT (
	any_string_value,
	built_in_functions);
END_TYPE; -- function_symbol

TYPE pr_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Rule_set);
END_TYPE; -- pr_documented_element_select

TYPE pr_identification_item = SELECT BASED_ON identification_item WITH (
	Rule_set);
END_TYPE; -- pr_identification_item

TYPE predicate_symbol = STRING;
END_TYPE; -- predicate_symbol

TYPE scope_select = SELECT (
	Rule_definition,
	Rule_set,
	Rule_set_group);
END_TYPE; -- scope_select

TYPE term_select = SELECT (
	Symbol,
	constants,
	Func,
	Scalar_variable,
	Row_value,
	Row_variable);
END_TYPE; -- term_select

TYPE project_item = EXTENSIBLE SELECT ;
END_TYPE; -- project_item

TYPE puipc_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH (
	Promissory_usage_in_product_concept_relationship);
END_TYPE; -- puipc_security_classification_item

TYPE property_assignment_select = EXTENSIBLE SELECT ;
END_TYPE; -- property_assignment_select

TYPE requirement_assignment_item = EXTENSIBLE SELECT ;
END_TYPE; -- requirement_assignment_item

TYPE requirement_source_item = EXTENSIBLE SELECT ;
END_TYPE; -- requirement_source_item

TYPE characteristic_select = SELECT (
	Property_value_representation,
	characteristic);
END_TYPE; -- characteristic_select

TYPE material_conductivity_classification = ENUMERATION OF (
	conductive,
	resistive,
	semi_conductive,
	non_conductive );
END_TYPE; -- material_conductivity_classification

TYPE rd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Predefined_requirement_view_definition);
END_TYPE; -- rd_documented_element_select

TYPE rd_material_item_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON material_item_select WITH (
	Predefined_requirement_view_definition);
END_TYPE; -- rd_material_item_select

TYPE rd_property_assignment_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON property_assignment_select WITH (
	Requirement_view_definition);
END_TYPE; -- rd_property_assignment_select

TYPE relationship_operation = ENUMERATION OF (
	and_operation,
	or_operation );
END_TYPE; -- relationship_operation

TYPE requirement_view_relationship_type = ENUMERATION OF (
	derived_from,
	precedence,
	reference_to,
	supplemental );
END_TYPE; -- requirement_view_relationship_type

TYPE requirement_identification_and_version_identification_item = SELECT BASED_ON identification_item WITH (
	Requirement,
	Requirement_version);
END_TYPE; -- requirement_identification_and_version_identification_item

TYPE requirement_view_definition_identification_item = SELECT BASED_ON identification_item WITH (
	Requirement_view_definition);
END_TYPE; -- requirement_view_definition_identification_item

TYPE security_classification_item = EXTENSIBLE SELECT ;
END_TYPE; -- security_classification_item

TYPE application_environment = ENUMERATION OF (
	end_user_application,
	manufacturing );
END_TYPE; -- application_environment

TYPE keepout_product_design_object_category = ENUMERATION OF (
	assembly_module_assembly_component,
	assembly_module_component_feature,
	assembly_ee_material,
	interconnect_ee_material,
	interconnect_module_assembly_component,
	interconnect_module_via,
	interconnect_module_inter_stratum_feature,
	interconnect_module_cutout,
	interconnect_module_fill_area,
	interconnect_module_laminate_component,
	interconnect_module_stratum_feature );
END_TYPE; -- keepout_product_design_object_category

TYPE material_condition = ENUMERATION OF (
	nominal_material_condition,
	minimum_material_condition,
	maximum_material_condition );
END_TYPE; -- material_condition

TYPE material_condition_property_names = ENUMERATION OF (
	maximum_material_principle,
	least_material_requirement );
END_TYPE; -- material_condition_property_names

TYPE physical_unit_shape_model_select = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- physical_unit_shape_model_select

TYPE predefined_keepout_purpose = ENUMERATION OF (
	thermal,
	generic_clearance,
	shock,
	vibration,
	electromagnetic_compatibility );
END_TYPE; -- predefined_keepout_purpose

TYPE shape_dependent_select = SELECT (
	Item_shape,
	Shape_element);
END_TYPE; -- shape_dependent_select

TYPE shape_model = SELECT (
	External_geometric_model,
	Geometric_model);
END_TYPE; -- shape_model

TYPE shape_select = SELECT (
	Item_shape,
	Shape_element,
	Shape_element_relationship);
END_TYPE; -- shape_select

TYPE shapeable_item = SELECT (
	Characterizable_object,
	Product_view_definition,
	View_definition_usage);
END_TYPE; -- shapeable_item

TYPE s_external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON external_identification_item WITH (
	Composite_signal_property_relationship,
	Signal_property,
	Signal);
END_TYPE; -- s_external_identification_item

TYPE spr_documented_element_select = SELECT BASED_ON documented_element_select WITH (
	Part_view_definition,
	Part,
	Part_version);
END_TYPE; -- spr_documented_element_select

TYPE spr_organization_or_person_in_organization_item = EXTENSIBLE SELECT BASED_ON organization_or_person_in_organization_item WITH (
	Document,
	Document_version,
	Document_definition,
	Part,
	Part_view_definition,
	Part_version);
END_TYPE; -- spr_organization_or_person_in_organization_item

TYPE spr_product_property_assignment = SELECT BASED_ON property_assignment_select WITH (
	Part_view_definition);
END_TYPE; -- spr_product_property_assignment

TYPE sd_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH (
	Product_configuration,
	Product_view_definition,
	Product_version,
	Product);
END_TYPE; -- sd_documented_element_select

TYPE string_representation_item_list = LIST [1:?] OF string_representation_item_select;
END_TYPE; -- string_representation_item_list

TYPE string_representation_item_list_or_set = SELECT (
	string_representation_item_list,
	string_representation_item_set);
END_TYPE; -- string_representation_item_list_or_set

TYPE string_representation_item_select = SELECT (
	String_representation_item,
	Included_text_block,
	Structured_text_composition);
END_TYPE; -- string_representation_item_select

TYPE string_representation_item_set = SET [1:?] OF string_representation_item_select;
END_TYPE; -- string_representation_item_set

TYPE tra_requirement_assignment_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assignment_item WITH (
	Product_version);
END_TYPE; -- tra_requirement_assignment_item

TYPE time_interval_item = EXTENSIBLE SELECT ;
END_TYPE; -- time_interval_item

TYPE any_number_value = NUMBER;
END_TYPE; -- any_number_value

TYPE any_string_value = STRING;
END_TYPE; -- any_string_value

TYPE length_measure = REAL;
END_TYPE; -- length_measure

TYPE measure_value = EXTENSIBLE SELECT (
	any_number_value,
	any_string_value,
	length_measure,
	plane_angle_measure);
END_TYPE; -- measure_value

TYPE plane_angle_measure = REAL;
END_TYPE; -- plane_angle_measure

TYPE affected_item_select = EXTENSIBLE SELECT ;
END_TYPE; -- affected_item_select

ENTITY Activity;
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
	chosen_method : Activity_method;
END_ENTITY; -- Activity


ENTITY Activity_relationship;
	name : STRING;
	description : OPTIONAL STRING;
	relating_activity : Activity;
	related_activity : Activity;
END_ENTITY; -- Activity_relationship


ENTITY Activity_status;
	assigned_activity : Activity;
	status : STRING;
END_ENTITY; -- Activity_status


ENTITY Applied_activity_assignment;
	assigned_activity : Activity;
	items : SET [1:?] OF activity_item;
	role : STRING;
END_ENTITY; -- Applied_activity_assignment


ENTITY Activity_method;
	name : STRING;
	description : OPTIONAL STRING;
	consequence : OPTIONAL STRING;
	purpose : STRING;
END_ENTITY; -- Activity_method


ENTITY Activity_method_relationship;
	name : STRING;
	description : OPTIONAL STRING;
	relating_method : Activity_method;
	related_method : Activity_method;
END_ENTITY; -- Activity_method_relationship


ENTITY Applied_activity_method_assignment;
	assigned_activity_method : Activity_method;
	items : SET [1:?] OF activity_method_item;
	role : STRING;
END_ENTITY; -- Applied_activity_method_assignment


ENTITY Alias_identification
	SUBTYPE OF (Identification_assignment);
DERIVE
	SELF\Identification_assignment.role : STRING := 'alias';
WHERE
	WR1 : SIZEOF(QUERY(item <* SELF\Identification_assignment.items |
NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ALIAS_IDENTIFICATION_ITEM' IN TYPEOF(item))))= 0;
END_ENTITY; -- Alias_identification


ENTITY Altered_package
	SUBTYPE OF (Package);
	of_geometric_status : OPTIONAL predefined_geometric_status;
	modified_terminal_separation : OPTIONAL Length_data_element;
	package_to_be_altered : Package;
INVERSE
	of_external_geometric_status: SET [0:1] OF External_source_identification FOR item;
WHERE
	WR1 : (EXISTS(of_geometric_status))XOR((SIZEOF(of_external_geometric_status))= 1);
	WR2 : NOT EXISTS(SELF\Product_view_definition.name);
END_ENTITY; -- Altered_package


ENTITY Altered_package_terminal
	ABSTRACT SUPERTYPE OF (((Shape_formed_terminal ANDOR Surface_prepped_terminal) ANDOR Length_trimmed_terminal))
	SUBTYPE OF (Package_terminal);
	terminal_to_be_altered : Package_terminal;
	SELF\Part_feature.associated_definition : Altered_package;
END_ENTITY; -- Altered_package_terminal


ENTITY Length_trimmed_terminal
	SUBTYPE OF (Altered_package_terminal);
	trimmed_length : Length_tolerance_characteristic;
END_ENTITY; -- Length_trimmed_terminal


ENTITY Shape_formed_terminal
	SUBTYPE OF (Altered_package_terminal);
END_ENTITY; -- Shape_formed_terminal


ENTITY Surface_prepped_terminal
	SUBTYPE OF (Altered_package_terminal);
DERIVE
	surface_preparation : SET [1:1] OF Document_definition := get_document_definition(SELF, 'surface preparation', 
  			'SPECIFICATION_DOCUMENT_ARM.SURFACE_FINISH_SPECIFICATION');
END_ENTITY; -- Surface_prepped_terminal


ENTITY Across_port_variable
	SUBTYPE OF (Analog_port_variable);
WHERE
	WR1 : EXISTS(SELF\Analog_port_variable.unit_of_measure);
END_ENTITY; -- Across_port_variable


ENTITY Analog_analytical_model_port
	SUBTYPE OF (Analytical_model_port);
INVERSE
	signal_variable: SET [1:?] OF Analog_port_variable FOR associated_port;
END_ENTITY; -- Analog_analytical_model_port


ENTITY Analog_port_variable
	SUPERTYPE OF (ONEOF (Through_port_variable, Across_port_variable, Transform_port_variable));
	associated_port : Analog_analytical_model_port;
	variable_name : STRING;
	unit_of_measure : OPTIONAL Unit;
UNIQUE
	UR1 : variable_name, associated_port;
END_ENTITY; -- Analog_port_variable


ENTITY Analytical_model
	SUBTYPE OF (Information_product);
UNIQUE
	UR1 : id;
WHERE
	WR1 : SIZEOF(['analytical model', 'information'] * types_of_product(SELF))= 2;
END_ENTITY; -- Analytical_model


ENTITY Analytical_model_application
	SUBTYPE OF (Representation);
	model_parameter_assignment : SET [1:?] OF Parameter_assignment;
	model_representation : Analytical_model_definition;
UNIQUE
	UR1 : name;
END_ENTITY; -- Analytical_model_application


ENTITY Analytical_model_definition
	SUBTYPE OF (Information_definition);
	source_code : SET [1:1] OF Digital_file;
	SELF\Product_view_definition.defined_version : Analytical_model_version;
DERIVE
	representation_language : SET [1:1] OF Document_definition := get_document_definition(SELF, 'representation language', 
  			'SPECIFICATION_DOCUMENT_ARM.LANGUAGE_REFERENCE_MANUAL');
INVERSE
	access_mechanism: SET [1:?] OF Analytical_model_port FOR accessed_analytical_model;
	parameter: SET [1:?] OF Analytical_model_parameter FOR accessed_analytical_model;
	reference_document: Document_assignment FOR is_assigned_to;
END_ENTITY; -- Analytical_model_definition


ENTITY Analytical_model_make_from_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.related_view RENAMED resultant_model : Analytical_model_definition;
	SELF\View_definition_relationship.relating_view RENAMED reusable_model : Analytical_model_definition;
UNIQUE
	UR1 : reusable_model, resultant_model;
WHERE
	WR1 : reusable_model :<>: resultant_model;
END_ENTITY; -- Analytical_model_make_from_relationship


ENTITY Analytical_model_parameter
	SUBTYPE OF (Model_parameter);
	accessed_analytical_model : Analytical_model_definition;
UNIQUE
	UR1 : id, accessed_analytical_model;
END_ENTITY; -- Analytical_model_parameter


ENTITY Analytical_model_port
	SUPERTYPE OF ((Analytical_model_vector_port ANDOR ONEOF (Analog_analytical_model_port, Digital_analytical_model_port)));
	accessed_analytical_model : Analytical_model_definition;
	port_name : STRING;
UNIQUE
	UR1 : port_name, accessed_analytical_model;
END_ENTITY; -- Analytical_model_port


ENTITY Analytical_model_port_assignment;
	assigned_analytical_model_port : Analytical_model_port;
	assigned_item : analytical_model_port_assignment_select;
	associated_analytical_model_application : Analytical_model_application;
UNIQUE
	UR1 : assigned_analytical_model_port, assigned_item, associated_analytical_model_application;
WHERE
	WR1 : assigned_analytical_model_port.accessed_analytical_model =
   associated_analytical_model_application.model_representation;
END_ENTITY; -- Analytical_model_port_assignment


ENTITY Analytical_model_port_make_from_relationship;
	associated_make_from : Analytical_model_make_from_relationship;
	reusable_feature : Analytical_model_port;
	resultant_feature : Analytical_model_port;
UNIQUE
	UR1 : reusable_feature, resultant_feature;
WHERE
	WR1 : reusable_feature :<>: resultant_feature;
	WR2 : reusable_feature.accessed_analytical_model :<>: resultant_feature.accessed_analytical_model;
END_ENTITY; -- Analytical_model_port_make_from_relationship


ENTITY Analytical_model_scalar_port
	SUBTYPE OF (Analytical_model_vector_port);
WHERE
	WR1 : SIZEOF(SELF\Analytical_model_vector_port.element_port)= 1;
	WR2 : SELF = SELF\Analytical_model_vector_port.element_port[1];
END_ENTITY; -- Analytical_model_scalar_port


ENTITY Analytical_model_vector_port
	SUPERTYPE OF (Analytical_model_scalar_port)
	SUBTYPE OF (Analytical_model_port);
	element_port : LIST [1:?] OF Analytical_model_scalar_port;
DERIVE
	size : INTEGER := SIZEOF(element_port);
END_ENTITY; -- Analytical_model_vector_port


ENTITY Analytical_model_version
	SUBTYPE OF (Information_version);
	SELF\Product_version.of_product : Analytical_model;
END_ENTITY; -- Analytical_model_version


ENTITY Digital_analytical_model_port
	ABSTRACT SUPERTYPE OF (Digital_analytical_model_vector_port)
	SUBTYPE OF (Analytical_model_port);
	nominal_signal_flow_direction : signal_flow_direction;
	port_type : model_parameter_type;
WHERE
	WR1 : not_applicable <> nominal_signal_flow_direction;
	WR2 : numeric_property_type <> port_type;
	WR3 : physical_property_type <> port_type;
	WR4 : unknown_direction <> nominal_signal_flow_direction;
END_ENTITY; -- Digital_analytical_model_port


ENTITY Digital_analytical_model_scalar_port
	SUBTYPE OF (Digital_analytical_model_vector_port, Analytical_model_scalar_port);
END_ENTITY; -- Digital_analytical_model_scalar_port


ENTITY Digital_analytical_model_vector_port
	SUBTYPE OF (Digital_analytical_model_port, Analytical_model_vector_port);
INVERSE
	data_encoding_method: External_source_identification FOR item;
WHERE
	WR1 : SELF\Digital_analytical_model_port.port_type = model_parameter_type.string_property_type;
END_ENTITY; -- Digital_analytical_model_vector_port


ENTITY Terminal_pair_port_equivalence_relationship;
	equivalent_port : Analytical_model_port;
	scalar_ports : Analytical_model_vector_port;
WHERE
	WR1 : (SIZEOF(scalar_ports.element_port)= 2);
END_ENTITY; -- Terminal_pair_port_equivalence_relationship


ENTITY Through_port_variable
	SUBTYPE OF (Analog_port_variable);
WHERE
	WR1 : EXISTS(SELF\Analog_port_variable.unit_of_measure);
END_ENTITY; -- Through_port_variable


ENTITY Transform_port_variable
	SUBTYPE OF (Analog_port_variable);
	nominal_signal_flow_direction : signal_flow_direction;
WHERE
	WR1 : not_applicable <> nominal_signal_flow_direction;
	WR2 : bidirectional <> nominal_signal_flow_direction;
END_ENTITY; -- Transform_port_variable


ENTITY Approval;
	status : Approval_status;
	purpose : STRING;
	planned_date : OPTIONAL date_or_date_time_select;
	actual_date : OPTIONAL date_or_date_time_select;
END_ENTITY; -- Approval


ENTITY Approval_assignment;
	assigned_approval : Approval;
	items : SET [1:?] OF approval_item;
	role : OPTIONAL STRING;
END_ENTITY; -- Approval_assignment


ENTITY Approval_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating_approval : Approval;
	related_approval : Approval;
END_ENTITY; -- Approval_relationship


ENTITY Approval_status;
	status_name : STRING;
END_ENTITY; -- Approval_status


ENTITY Approving_person_organization;
	person_organization : organization_or_person_in_organization_select;
	approval_date : OPTIONAL date_or_date_time_select;
	authorized_approval : Approval;
	role : OPTIONAL STRING;
END_ENTITY; -- Approving_person_organization


ENTITY Assembly_connection_zone_position_relationship;
	associating_design_view_shape : Geometric_model;
	associated_usage : Connection_zone_in_design_view;
	associated_connection_zone_shape_definition : Geometric_model;
	associated_usage_placement : Axis_placement;
	associating_design_view : Assembly_module;
END_ENTITY; -- Assembly_connection_zone_position_relationship


ENTITY Assembly_module
	SUBTYPE OF (Assembly_definition, Part_design_view);
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
END_ENTITY; -- Assembly_module


ENTITY Bare_die_component
	SUBTYPE OF (Physical_component);
	SELF\Definition_based_product_occurrence.derived_from : Bare_die;
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.name);
END_ENTITY; -- Bare_die_component


ENTITY Bare_die_component_terminal
	SUBTYPE OF (Physical_component_terminal);
	SELF\Component_feature.associated_component : Bare_die_component;
	SELF\Component_feature.definition : Bare_die_terminal;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Bare_die_component_terminal


ENTITY Component_external_reference;
	design_owner : STRING;
	part_number : STRING;
	revision_code : STRING;
	product_definition_id : STRING;
	reference_designation : STRING;
END_ENTITY; -- Component_external_reference


ENTITY Component_feature_external_reference;
	name : STRING;
	associated_component : Component_external_reference;
UNIQUE
	UR1 : associated_component, name;
END_ENTITY; -- Component_feature_external_reference


ENTITY Component_mounting_clearance_relationship;
	feature_relationship : Component_feature_relationship;
	mounting_clearance : Length_tolerance_characteristic;
END_ENTITY; -- Component_mounting_clearance_relationship


ENTITY Component_mounting_feature
	SUBTYPE OF (Physical_component_feature);
	SELF\Component_feature.definition : Part_mounting_feature;
END_ENTITY; -- Component_mounting_feature


ENTITY Component_overlap_relationship;
	previously_placed_component : Next_assembly_usage;
	current_component : Next_assembly_usage;
	added_clearance : Length_tolerance_characteristic;
END_ENTITY; -- Component_overlap_relationship


ENTITY Minimally_defined_component_terminal
	SUBTYPE OF (Physical_component_terminal);
	SELF\Component_feature.definition : Part_terminal_external_reference;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Minimally_defined_component_terminal


ENTITY Movable_packaged_component_join_terminal
	SUBTYPE OF (Packaged_component_join_terminal);
	wire_terminal_length : Length_tolerance_characteristic;
WHERE
	WR1 : SIZEOF(QUERY(pt <* SELF\Component_feature.definition\Packaged_part_terminal.terminal_of_package | 
            NOT('PACKAGE_ARM.WIRE_TERMINAL' IN TYPEOF(pt))))= 0;
END_ENTITY; -- Movable_packaged_component_join_terminal


ENTITY Package_terminal_occurrence;
	definition : Package_terminal;
	associated_component : Packaged_component;
END_ENTITY; -- Package_terminal_occurrence


ENTITY Packaged_component
	SUBTYPE OF (Physical_component);
	selected_package_alternate : OPTIONAL Altered_package;
	SELF\Definition_based_product_occurrence.derived_from : Packaged_part;
INVERSE
	access_mechanism: SET [1:?] OF Packaged_component_join_terminal FOR associated_component;
END_ENTITY; -- Packaged_component


ENTITY Packaged_component_join_terminal
	SUBTYPE OF (Physical_component_terminal);
	SELF\Component_feature.associated_component : Packaged_component;
	SELF\Component_feature.definition : Packaged_part_join_terminal;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Packaged_component_join_terminal


ENTITY Pca
	SUBTYPE OF (Assembly_module);
	SELF\Part_design_view.usage_view : Pca_usage_view;
END_ENTITY; -- Pca


ENTITY Routed_interconnect_component
	SUBTYPE OF (Physical_component);
	routed_centreline_shape : Curve;
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.name);
END_ENTITY; -- Routed_interconnect_component


ENTITY Routed_physical_component
	SUBTYPE OF (Physical_component);
	routed_centreline_shape : Curve;
END_ENTITY; -- Routed_physical_component


ENTITY Assembly_module_interface_terminal
	SUBTYPE OF (Assembly_module_terminal);
END_ENTITY; -- Assembly_module_interface_terminal


ENTITY Assembly_module_terminal
	SUPERTYPE OF ((Assembly_module_interface_terminal ANDOR Pca_terminal))
	SUBTYPE OF (Part_terminal, Shape_feature);
	reference_terminal : OPTIONAL Packaged_part_interface_terminal;
	related_connector : OPTIONAL Next_assembly_usage;
	SELF\Part_feature.associated_definition : Assembly_module_usage_view;
	SELF\Shape_feature.connection_area : OPTIONAL SET [1:?] OF Connection_zone_in_usage_view;
WHERE
	WR1 : NOT EXISTS(related_connector)OR 
           (SELF\Shape_element.containing_shape.described_element = 
             related_connector\View_definition_relationship.related_view);
	WR2 : NOT EXISTS(related_connector)OR EXISTS(related_connector.location_indicator);
	WR3 : EXISTS(related_connector)OR 
           (SELF\Shape_element.containing_shape.described_element = 
             SELF\Part_feature.associated_definition);
END_ENTITY; -- Assembly_module_terminal


ENTITY Assembly_module_usage_view
	SUPERTYPE OF (Pca_usage_view)
	SUBTYPE OF (Part_usage_view, Assembly_definition);
	implemented_function : Functional_unit_usage_view;
INVERSE
	access_mechanisms: SET [0:?] OF Assembly_module_terminal FOR associated_definition;
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
END_ENTITY; -- Assembly_module_usage_view


ENTITY Pca_terminal
	SUBTYPE OF (Assembly_module_terminal);
	SELF\Part_feature.associated_definition : Pca_usage_view;
END_ENTITY; -- Pca_terminal


ENTITY Pca_usage_view
	SUBTYPE OF (Assembly_module_usage_view);
	maximum_negative_component_height : OPTIONAL Datum_based_length_measure;
	maximum_positive_component_height : OPTIONAL Datum_based_length_measure;
END_ENTITY; -- Pca_usage_view


ENTITY Interface_mounted_join;
	connection_to_interconnect_module_component : Packaged_connector_component_interface_terminal;
	access_to_interface_mounted_component : Physical_component_terminal;
END_ENTITY; -- Interface_mounted_join


ENTITY Packaged_connector_component
	SUBTYPE OF (Interface_component, Packaged_component);
	SELF\Definition_based_product_occurrence.derived_from : Packaged_connector;
INVERSE
	interface_access_mechanism: SET [1:?] OF Packaged_connector_component_interface_terminal FOR associated_component;
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.name);
END_ENTITY; -- Packaged_connector_component


ENTITY Packaged_connector_component_interface_terminal
	SUBTYPE OF (Physical_component_interface_terminal);
	SELF\Component_feature.associated_component : Packaged_connector_component;
	SELF\Component_feature.definition : Packaged_part_interface_terminal;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Packaged_connector_component_interface_terminal


ENTITY Assembly_component_relationship
	ABSTRACT SUPERTYPE OF (ONEOF (Next_assembly_usage, Promissory_usage, Component_upper_level_identification))
	SUBTYPE OF (View_definition_usage);
	quantity : OPTIONAL Value_with_unit;
	location_indicator : OPTIONAL STRING;
WHERE
	WR1 : NOT(EXISTS(quantity))OR((NOT('NUMBER' IN TYPEOF(quantity.value_component)))XOR(quantity.value_component > 0));
END_ENTITY; -- Assembly_component_relationship


ENTITY Component_upper_level_identification
	SUBTYPE OF (Assembly_component_relationship);
	upper_assembly_relationship : Assembly_component_relationship;
	sub_assembly_relationship : Next_assembly_usage;
UNIQUE
	UR1 : upper_assembly_relationship, sub_assembly_relationship;
WHERE
	WR1 : SELF :<>: upper_assembly_relationship;
	WR2 : SELF\View_definition_relationship.relating_view :=: upper_assembly_relationship\View_definition_relationship.relating_view;
	WR3 : SELF\View_definition_relationship.related_view :=: sub_assembly_relationship\View_definition_relationship.related_view;
	WR4 : (upper_assembly_relationship\View_definition_relationship.related_view :=: sub_assembly_relationship\View_definition_relationship.relating_view)OR(SIZEOF(QUERY(pdr <* USEDIN(upper_assembly_relationship\View_definition_relationship.related_view, 'PRODUCT_VIEW_DEFINITION_RELATIONSHIP_ARM.VIEW_DEFINITION_RELATIONSHIP.RELATED_VIEW')| pdr.relating_view :=: sub_assembly_relationship\View_definition_relationship.relating_view))= 1);
	WR5 : SIZEOF(['AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.NEXT_ASSEMBLY_USAGE', 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.COMPONENT_UPPER_LEVEL_IDENTIFICATION'] * TYPEOF(upper_assembly_relationship))= 1;
END_ENTITY; -- Component_upper_level_identification


ENTITY Next_assembly_usage
	SUBTYPE OF (Assembly_component_relationship);
END_ENTITY; -- Next_assembly_usage


ENTITY Promissory_usage
	SUBTYPE OF (Assembly_component_relationship);
END_ENTITY; -- Promissory_usage


ENTITY Assembled_with_bonding
	SUBTYPE OF (Assembly_joint);
	default_bond_definition : Assembly_bond_definition;
WHERE
	WR1 : SELF\Assembly_joint.assembly_feature_1.definition :=: default_bond_definition.bonded_feature_1;
	WR2 : SELF\Assembly_joint.assembly_feature_2.definition :=: default_bond_definition.bonded_feature_2;
END_ENTITY; -- Assembled_with_bonding


ENTITY Assembled_with_fasteners
	SUBTYPE OF (Assembly_joint);
	SELF\Assembly_joint.associated_assembly : Assembly_group_component;
END_ENTITY; -- Assembled_with_fasteners


ENTITY Assembly_bond_definition;
	name : STRING;
	analytical_assembly_bond_representation : OPTIONAL SET [1:?] OF Analytical_model_application;
	associated_definition : Externally_defined_view_definition;
	bonded_feature_1 : Part_feature;
	bonded_feature_2 : Part_feature;
INVERSE
	bond_category: External_source_identification FOR item;
	bond_material: Material_identification FOR items;
	default_shape: SET [0:1] OF Default_assembly_bond_shape_model FOR shape_characterized_definition;
UNIQUE
	UR2 : associated_definition;
	UR1 : name;
WHERE
	WR1 : bonded_feature_1 <> bonded_feature_2;
	WR2 : 'CONDUCTIVITY_MATERIAL_ASPECTS.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF(bond_material);
END_ENTITY; -- Assembly_bond_definition


ENTITY Assembly_joint
	SUPERTYPE OF ((Assembled_with_fasteners ANDOR Assembled_with_bonding))
	SUBTYPE OF (Component_feature_joint);
	SELF\Component_feature_joint.feature_1 RENAMED assembly_feature_1 : assembled_feature_select;
	SELF\Component_feature_joint.feature_2 RENAMED assembly_feature_2 : assembled_feature_select;
	SELF\Component_feature_joint.associated_definition RENAMED associated_assembly : assembly_module_or_assembly_group_component;
UNIQUE
	UR1 : element_name, associated_assembly;
WHERE
	WR1 : assembly_feature_1 :<>: assembly_feature_2;
	WR2 : ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN  TYPEOF(SELF))OR 
            (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_1))AND 
            (SIZEOF(QUERY(ay <* assembly_feature_1\Component_feature.associated_component\Product_occurrence.occurrence_contexts | ay.related_view <> associated_assembly))= 0));
	WR3 : ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN  TYPEOF(SELF))OR 
            (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.COMPONENT_FEATURE' IN TYPEOF(assembly_feature_2))AND 
            (SIZEOF(QUERY(ay <* assembly_feature_2\Component_feature.associated_component\Product_occurrence.occurrence_contexts | ay.related_view <> associated_assembly))= 0));
END_ENTITY; -- Assembly_joint


ENTITY Assembly_technology_specification
	SUBTYPE OF (Process_specification);
END_ENTITY; -- Assembly_technology_specification


ENTITY Component_mating_constraint_condition;
	name : STRING;
	constraining_joint : SET [1:3] OF Assembly_joint;
	constrained_degree_of_freedom : SET [1:5] OF degree_of_freedom;
	of_context : Part_design_view;
UNIQUE
	UR1 : name, of_context;
END_ENTITY; -- Component_mating_constraint_condition


ENTITY Connection_zone_based_assembly_joint
	SUBTYPE OF (Assembly_joint);
	zone_1 : Connection_zone_in_design_view;
	zone_2 : Connection_zone_in_design_view;
WHERE
	WR1 : zone_1 :<>: zone_2;
END_ENTITY; -- Connection_zone_based_assembly_joint


ENTITY Default_assembly_bond_shape_model
	SUBTYPE OF (Geometric_model);
	shape_characterized_definition : Assembly_bond_definition;
WHERE
	WR1 : NOT EXISTS(SELF\Representation.description);
	WR2 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;
END_ENTITY; -- Default_assembly_bond_shape_model


ENTITY Attribute_classification;
	allowed_value : Class;
	attribute_name : STRING;
	classified_entity : SET [1:?] OF classified_attribute_select;
END_ENTITY; -- Attribute_classification


ENTITY Bare_die
	SUBTYPE OF (Part_usage_view);
	least_material_condition_centroid_location : OPTIONAL Cartesian_point;
	maximum_height_above_seating_plane : OPTIONAL Length_data_element;
	maximum_material_condition_centroid_location : OPTIONAL Cartesian_point;
	implemented_function : Functional_unit_usage_view;
INVERSE
	access_mechanisms: SET [2:?] OF Minimally_defined_bare_die_terminal FOR associated_definition;
	die_seating_plane: Non_feature_shape_element FOR scope;
WHERE
	WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE')|('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'BARE_DIE_TOP_SURFACE' IN TYPEOF(pf))))<= 1;
	WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE')|('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'BARE_DIE_BOTTOM_SURFACE' IN TYPEOF(pf))))<= 1;
	WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE')|('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'BARE_DIE_EDGE_SURFACE' IN TYPEOF(pf))))<= 1;
	WR4 : 'NON_FEATURE_SHAPE_ELEMENT_ARM.SEATING_PLANE' IN TYPEOF(die_seating_plane);
END_ENTITY; -- Bare_die


ENTITY Bare_die_bottom_surface
	SUBTYPE OF (Bare_die_surface);
END_ENTITY; -- Bare_die_bottom_surface


ENTITY Bare_die_edge_segment_surface
	SUBTYPE OF (Bare_die_surface);
	composed_surface : Bare_die_edge_surface;
	start_vertex : Edge_segment_vertex;
	end_vertex : Edge_segment_vertex;
WHERE
	WR1 : start_vertex :<>: end_vertex;
	WR2 : SELF\Shape_element.containing_shape :=: composed_surface\Shape_element.containing_shape;
END_ENTITY; -- Bare_die_edge_segment_surface


ENTITY Bare_die_edge_surface
	SUBTYPE OF (Bare_die_surface);
END_ENTITY; -- Bare_die_edge_surface


ENTITY Bare_die_surface
	ABSTRACT SUPERTYPE OF (ONEOF (Bare_die_top_surface, Bare_die_bottom_surface, Bare_die_edge_segment_surface, Bare_die_edge_surface))
	SUBTYPE OF (Part_mounting_feature);
	SELF\Part_feature.associated_definition : Bare_die;
END_ENTITY; -- Bare_die_surface


ENTITY Bare_die_template_terminal
	SUBTYPE OF (Part_feature_template_definition, Shape_feature);
	seating_plane_zone : OPTIONAL Connection_zone_bare_die_interface_plane_relationship;
	SELF\Shape_feature.connection_area : OPTIONAL SET [1:?] OF Connection_zone_in_usage_view;
INVERSE
	material: Material_identification FOR items;
WHERE
	WR1 : 'CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF(material);
END_ENTITY; -- Bare_die_template_terminal


ENTITY Bare_die_terminal
	SUBTYPE OF (Minimally_defined_bare_die_terminal, Placed_feature);
	SELF\Placed_feature.definition : Bare_die_template_terminal;
END_ENTITY; -- Bare_die_terminal


ENTITY Bare_die_terminal_surface_constituent_relationship
	SUBTYPE OF (Shape_element_constituent_relationship);
	SELF\Shape_element_relationship.related : Bare_die_terminal;
	SELF\Shape_element_relationship.relating : Bare_die_surface;
END_ENTITY; -- Bare_die_terminal_surface_constituent_relationship


ENTITY Bare_die_top_surface
	SUBTYPE OF (Bare_die_surface);
END_ENTITY; -- Bare_die_top_surface


ENTITY Connection_zone_bare_die_interface_plane_relationship;
	interface_plane : Seating_plane;
	mating_zone : Connection_zone_in_usage_view;
	derived_zone : Connection_zone_in_usage_view;
	derived_zone_shape_class : derived_zone_shape_class;
INVERSE
	associated_bare_die_terminal: SET [0:1] OF Bare_die_template_terminal FOR seating_plane_zone;
UNIQUE
	UR1 : interface_plane, mating_zone;
END_ENTITY; -- Connection_zone_bare_die_interface_plane_relationship


ENTITY Guided_wave_bare_die_terminal
	SUBTYPE OF (Minimally_defined_bare_die_terminal);
END_ENTITY; -- Guided_wave_bare_die_terminal


ENTITY Minimally_defined_bare_die_terminal
	SUPERTYPE OF ((Guided_wave_bare_die_terminal ANDOR Bare_die_terminal))
	SUBTYPE OF (Part_terminal);
	SELF\Part_feature.associated_definition : Bare_die;
END_ENTITY; -- Minimally_defined_bare_die_terminal


ENTITY Closed_curve
	SUBTYPE OF (Curve);
END_ENTITY; -- Closed_curve


ENTITY Composite_curve
	SUBTYPE OF (Curve);
	curve_segment : LIST [1:?] OF  UNIQUE Composite_curve_segment;
END_ENTITY; -- Composite_curve


ENTITY Composite_curve_segment;
	segment_curve : Curve;
INVERSE
	using_curves: SET [1:?] OF Composite_curve FOR curve_segment;
END_ENTITY; -- Composite_curve_segment


ENTITY Measurement_path;
	defined_by : Curve;
	defined_in : Geometric_coordinate_space;
END_ENTITY; -- Measurement_path


ENTITY Trimmed_curve
	SUBTYPE OF (Curve);
	start_point : Cartesian_point;
	end_point : Cartesian_point;
END_ENTITY; -- Trimmed_curve


ENTITY Curve
	SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY; -- Curve


ENTITY Line
	SUBTYPE OF (Curve);
END_ENTITY; -- Line


ENTITY Plane
	SUBTYPE OF (Surface);
END_ENTITY; -- Plane


ENTITY Point_on_curve
	SUBTYPE OF (Detailed_geometric_model_element);
	supporting_curve : Curve;
END_ENTITY; -- Point_on_curve


ENTITY Point_on_surface
	SUBTYPE OF (Detailed_geometric_model_element);
	supporting_surface : Surface;
END_ENTITY; -- Point_on_surface


ENTITY Surface
	SUBTYPE OF (Detailed_geometric_model_element);
END_ENTITY; -- Surface


ENTITY Certification;
	name : STRING;
	description : OPTIONAL STRING;
	kind : STRING;
END_ENTITY; -- Certification


ENTITY Certification_assignment;
	assigned_certification : Certification;
	items : SET [1:?] OF certification_item;
	role : STRING;
END_ENTITY; -- Certification_assignment


ENTITY Characteristic_data_table
	SUBTYPE OF (Characterizable_object, Measure_item);
	property_value : LIST [1:?] OF Characteristic_data_table_row;
	index_value : LIST [1:?] OF INTEGER;
UNIQUE
	UR1 : name;
WHERE
	WR1 : SIZEOF(property_value)= SIZEOF(index_value);
	WR2 : SIZEOF(QUERY(pv <* property_value |
                  NOT(SIZEOF(pv.property_value)= SIZEOF(property_value[1].property_value))
                 ))= 0;
	WR3 : SIZEOF(USEDIN
                (SELF,'PROPERTY_ASSIGNMENT_ARM.ASSIGNED_PROPERTY.DESCRIBED_ELEMENT'))= 0;
END_ENTITY; -- Characteristic_data_table


ENTITY Characteristic_data_table_row
	SUBTYPE OF (Measure_item);
	property_value : LIST [1:?] OF list_characteristic;
END_ENTITY; -- Characteristic_data_table_row


ENTITY Expanded_uncertainty
	SUBTYPE OF (Standard_uncertainty);
	coverage_factor : REAL;
END_ENTITY; -- Expanded_uncertainty


ENTITY Length_tolerance_characteristic
	SUBTYPE OF (Tolerance_characteristic);
WHERE
	WR1 : ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN  TYPEOF(SELF))OR
       ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN  TYPEOF(SELF))OR
       (SIZEOF(QUERY(it <* SELF\Representation.items |
          NOT('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
        ))= 0);
	WR2 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN  TYPEOF(SELF))OR
       (SIZEOF(QUERY(it <* SELF\Representation.items |
       ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
          ))= 1);
	WR3 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.STASTICAL_TOLERANCE_CHARACTERISTIC' IN  TYPEOF(SELF))OR
       (SIZEOF(QUERY(it <* SELF\Representation.items |
       ('VALUE_WITH_UNIT_EXTENSION_ARM.LENGTH_DATA_ELEMENT' IN TYPEOF(it))
          ))= 1);
	WR4 : NOT EXISTS(SELF\Representation.description);
END_ENTITY; -- Length_tolerance_characteristic


ENTITY Logical_representation_item
	SUBTYPE OF (String_representation_item);
WHERE
	WR1 : SELF\Representation_item.name IN ['.BOOLEAN.', '.LOGICAL.'];
	WR2 : SELF\String_representation_item.string_value IN ['.TRUE.', '.FALSE.','.UNKNOWN.', '.UNDEFINED.'];
	WR3 : NOT(SELF\Representation_item.name = '.BOOLEAN.')OR
       (SELF\String_representation_item.string_value IN ['.TRUE.', '.FALSE.', '.UNDEFINED.']);
END_ENTITY; -- Logical_representation_item


ENTITY Maximum_tolerance_characteristic
	SUBTYPE OF (Tolerance_characteristic);
	SELF\Representation.items : SET [1:1] OF Value_limit;
WHERE
	WR1 : SELF\Representation.items[1]\Value_limit.limit_qualifier = limit_qualifier_list.maximum;
END_ENTITY; -- Maximum_tolerance_characteristic


ENTITY Measure_qualification;
	name : STRING;
	description : STRING;
	qualified_measure : Value_with_unit;
	qualifiers : SET [1:?] OF value_qualifier;
END_ENTITY; -- Measure_qualification


ENTITY Minimum_tolerance_characteristic
	SUBTYPE OF (Tolerance_characteristic);
	SELF\Representation.items : SET [1:1] OF Value_limit;
WHERE
	WR1 : SELF\Representation.items[1]\Value_limit.limit_qualifier = limit_qualifier_list.minimum;
END_ENTITY; -- Minimum_tolerance_characteristic


ENTITY Nominal_tolerance_characteristic
	SUBTYPE OF (Tolerance_characteristic);
	SELF\Representation.items : SET [1:1] OF Numerical_item_with_unit;
END_ENTITY; -- Nominal_tolerance_characteristic


ENTITY Plus_minus_tolerance_characteristic
	SUBTYPE OF (Tolerance_characteristic);
	SELF\Representation.items : SET [1:1] OF Value_with_tolerances;
END_ENTITY; -- Plus_minus_tolerance_characteristic


ENTITY Precision_qualifier;
	precision_value : INTEGER;
END_ENTITY; -- Precision_qualifier


ENTITY Qualitative_uncertainty
	SUBTYPE OF (Uncertainty_qualifier);
	uncertainty_value : STRING;
END_ENTITY; -- Qualitative_uncertainty


ENTITY Range_characteristic
	SUBTYPE OF (Property_value_representation);
	range_type : range_class;
	SELF\Representation.items : SET [2:2] OF Numerical_item_with_unit;
WHERE
	WR1 : TYPEOF(SELF\Representation.items[1])=
          TYPEOF(SELF\Representation.items[2]);
	WR2 : TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit)=
          TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
	WR3 : valid_range(SELF\Representation.items[1],
                      SELF\Representation.items[2]);
END_ENTITY; -- Range_characteristic


ENTITY Standard_uncertainty
	SUPERTYPE OF (Expanded_uncertainty)
	SUBTYPE OF (Uncertainty_qualifier);
	uncertainty_value : REAL;
END_ENTITY; -- Standard_uncertainty


ENTITY Statistical_tolerance_characteristic
	SUBTYPE OF (Tolerance_characteristic);
	SELF\Representation.items : SET [2:?] OF Numerical_item_with_unit;
END_ENTITY; -- Statistical_tolerance_characteristic


ENTITY Symmetrical_tolerance_characteristic
	SUBTYPE OF (Tolerance_characteristic);
	SELF\Representation.items : SET [2:2] OF Numerical_item_with_unit;
WHERE
	WR1 : SIZEOF(QUERY(ri <* 
         SELF\representation.items |
        'VALUE_WITH_UNIT_EXTENSION.RATIO_DATA_ELEMENT' IN TYPEOF(ri)))= 1;
END_ENTITY; -- Symmetrical_tolerance_characteristic


ENTITY Text_representation_item
	SUBTYPE OF (String_representation_item);
END_ENTITY; -- Text_representation_item


ENTITY Tolerance_characteristic
	ABSTRACT SUPERTYPE OF ((ONEOF (Minimum_tolerance_characteristic, Statistical_tolerance_characteristic, Symmetrical_tolerance_characteristic, Maximum_tolerance_characteristic, Plus_minus_tolerance_characteristic, Nominal_tolerance_characteristic) ANDOR Length_tolerance_characteristic))
	SUBTYPE OF (Property_value_representation);
WHERE
	WR1 : SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
	WR2 : NOT EXISTS(SELF\Representation.name);
END_ENTITY; -- Tolerance_characteristic


ENTITY Type_qualifier;
	name : STRING;
END_ENTITY; -- Type_qualifier


ENTITY Uncertainty_qualifier
	SUPERTYPE OF (ONEOF (Standard_uncertainty, Qualitative_uncertainty));
	measure_name : STRING;
	description : STRING;
END_ENTITY; -- Uncertainty_qualifier


ENTITY Characterizable_object;
	name : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Characterizable_object


ENTITY Class
	SUPERTYPE OF (ONEOF (Class_by_extension, Class_by_intension));
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Class


ENTITY Class_by_extension
	SUBTYPE OF (Class);
END_ENTITY; -- Class_by_extension


ENTITY Class_by_intension
	SUBTYPE OF (Class);
END_ENTITY; -- Class_by_intension


ENTITY Classification_assignment;
	assigned_class : Class;
	items : SET [1:?] OF classification_item;
	role : OPTIONAL STRING;
END_ENTITY; -- Classification_assignment


ENTITY Class_hierarchy;
	super_class : Class_with_attributes;
	sub_class : Class_with_attributes;
END_ENTITY; -- Class_hierarchy


ENTITY Class_with_attributes
	SUBTYPE OF (Class);
	version_id : OPTIONAL STRING;
	used_classification_system : OPTIONAL Classification_system;
INVERSE
	characterization_attributes: SET [0:?] OF Classification_attribute FOR characterized_class;
END_ENTITY; -- Class_with_attributes


ENTITY Classification_association
	SUBTYPE OF (Classification_assignment);
	definitional : LOGICAL;
	SELF\Classification_assignment.assigned_class : Class_with_attributes;
WHERE
	WR1 : SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.DEFINABLE_OBJECTS' IN TYPEOF(it))AND definitional))=0;
	WR2 : SIZEOF(QUERY(it<* SELF\Classification_assignment.items |
     NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.CLASSIFIED_ELEMENT_SELECT' IN TYPEOF(it))))=0;
END_ENTITY; -- Classification_association


ENTITY Classification_attribute;
	id : STRING;
	name : OPTIONAL STRING;
	description : OPTIONAL STRING;
	allowed_values : OPTIONAL SET [1:?] OF Measure_item;
	characterized_class : Class_with_attributes;
END_ENTITY; -- Classification_attribute


ENTITY Classification_system;
	id : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Classification_system


ENTITY External_class_with_attributes
	SUBTYPE OF (Class_with_attributes);
	source : external_class_select;
END_ENTITY; -- External_class_with_attributes


ENTITY Component_feature
	ABSTRACT
	SUBTYPE OF (Shape_element);
	definition : OPTIONAL feature_select;
	SELF\Shape_element.containing_shape RENAMED associated_component : Assembly_component;
	SELF\Shape_element.element_name : STRING;
UNIQUE
	UR2 : element_name, associated_component;
	UR1 : definition, associated_component;
END_ENTITY; -- Component_feature


ENTITY Component_feature_joint
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Component_feature_relationship, Shape_element);
	SELF\Shape_element.containing_shape RENAMED associated_definition : Item_shape;
	SELF\Shape_element.element_name : STRING;
	SELF\Shape_element_relationship.relating RENAMED feature_1 : Component_feature;
	SELF\Shape_element_relationship.related RENAMED feature_2 : Component_feature;
WHERE
	WR1 : feature_1 <> feature_2;
	WR2 : 'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION' IN TYPEOF(associated_definition);
	WR3 : SELF\Shape_element.containing_shape\Item_shape.described_element = feature_1\Shape_element.containing_shape\Item_shape.described_element;
END_ENTITY; -- Component_feature_joint


ENTITY Component_feature_make_from_relationship
	SUBTYPE OF (Component_feature_relationship);
	SELF\Shape_element_relationship.related RENAMED resultant_feature : Component_feature;
	SELF\Shape_element_relationship.relating RENAMED reusable_feature : Component_feature;
END_ENTITY; -- Component_feature_make_from_relationship


ENTITY Component_feature_relationship
	SUPERTYPE OF (ONEOF (Component_feature_joint, Component_feature_make_from_relationship))
	SUBTYPE OF (Shape_element_relationship);
	SELF\Shape_element_relationship.related : Component_feature;
	SELF\Shape_element_relationship.relating : Component_feature;
END_ENTITY; -- Component_feature_relationship


ENTITY Component_feature_to_physical_usage_view_assignment;
	defined_part_feature : Part_feature;
	assigned_design_object : Component_feature;
UNIQUE
	UR2 : defined_part_feature;
	UR1 : assigned_design_object;
END_ENTITY; -- Component_feature_to_physical_usage_view_assignment


ENTITY Component_terminal
	SUBTYPE OF (Component_feature);
	local_swappable : OPTIONAL BOOLEAN;
	global_swappable : OPTIONAL BOOLEAN;
	swap_code : OPTIONAL STRING;
END_ENTITY; -- Component_terminal


ENTITY Array_placement_group
	ABSTRACT SUPERTYPE OF (ONEOF (Linear_array_placement_group_component, Rectangular_array_placement_group_component))
	SUBTYPE OF (Assembly_group_component);
END_ENTITY; -- Array_placement_group


ENTITY Assembly_component_placement_link;
	precedent_element : Assembly_component;
	subsequent_element : Assembly_component;
INVERSE
	referenced_by: Linear_array_placement_group_component FOR element;
END_ENTITY; -- Assembly_component_placement_link


ENTITY Assembly_group_component
	SUBTYPE OF (Assembly_component);
INVERSE
	components: SET [1:?] OF Next_assembly_usage FOR relating_view;
WHERE
	WR1 : components[1].relation_type = 'group component';
END_ENTITY; -- Assembly_group_component


ENTITY Interfaced_group_component
	SUBTYPE OF (Assembly_group_component);
	group_interface_component : SET [1:?] OF Interface_component;
END_ENTITY; -- Interfaced_group_component


ENTITY Linear_array_placement_group_component
	SUBTYPE OF (Array_placement_group);
	element : SET [1:?] OF Assembly_component_placement_link;
	initial_node_positive_x_displacement : Length_data_element;
	terminus_node_positive_x_displacement : Length_data_element;
	location_uncertainty : Length_data_element;
END_ENTITY; -- Linear_array_placement_group_component


ENTITY Linear_array_placement_group_component_link;
	precedent_element : Linear_array_placement_group_component;
	subsequent_element : Linear_array_placement_group_component;
INVERSE
	referenced_by: Rectangular_array_placement_group_component FOR element;
END_ENTITY; -- Linear_array_placement_group_component_link


ENTITY Rectangular_array_placement_group_component
	SUBTYPE OF (Array_placement_group);
	element : SET [1:?] OF Linear_array_placement_group_component_link;
	initial_row_positive_y_displacement : Length_data_element;
	terminus_row_positive_y_displacement : Length_data_element;
	location_uncertainty : Length_data_element;
END_ENTITY; -- Rectangular_array_placement_group_component


ENTITY Conductivity_material_property_class
	ABSTRACT SUPERTYPE OF (ONEOF (Material_electrical_conductivity_class, Material_thermal_conductivity_class))
	SUBTYPE OF (Class);
WHERE
	WR1 : SELF\Class.name IN 
       ['conductive', 'non conductive', 'resistive', 'semi conductive', 'super conductive'];
	WR2 : NOT EXISTS(SELF\Class.description);
END_ENTITY; -- Conductivity_material_property_class


ENTITY Material_electrical_conductivity_class
	SUBTYPE OF (Conductivity_material_property_class);
END_ENTITY; -- Material_electrical_conductivity_class


ENTITY Material_identification_with_conductivity_classification
	SUBTYPE OF (Material_identification);
DERIVE
	dielectric_permittivity_classification : STRING := get_cond_class(SELF,'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS');
	electrical_conductivity_classification : STRING := get_cond_class(SELF,'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS');
	magnetic_permeability_classification : STRING := get_cond_class(SELF,'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS');
	optical_insertion_loss_classification : STRING := get_cond_class(SELF,'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS');
	thermal_conductivity_classification : STRING := get_cond_class(SELF,'MATERIAL_THERMAL_CONDUCTIVITY_CLASS');
WHERE
	WR1 : (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')|
	 	('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.'+
	 	'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS' IN TYPEOF(ca.assigned_class))))= 1);
	WR2 : (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')|
	 	('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.'+
	 	'MATERIAL_THERMAL_CONDUCTIVITY_CLASS' IN TYPEOF(ca.assigned_class))))<= 1);
	WR3 : (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')|
	 	('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.'+
	 	'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS' IN TYPEOF(ca.assigned_class))))<= 1);
	WR4 : (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')|
	 	('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.'+
	 	'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS' IN TYPEOF(ca.assigned_class))))<= 1);
	WR5 : (SIZEOF(QUERY(ca <* USEDIN(SELF,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')|
	 	('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.'+
	 	'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS' IN TYPEOF(ca.assigned_class))))<= 1);
END_ENTITY; -- Material_identification_with_conductivity_classification


ENTITY Material_thermal_conductivity_class
	SUBTYPE OF (Conductivity_material_property_class);
END_ENTITY; -- Material_thermal_conductivity_class


ENTITY Relative_optical_insertion_loss_material_property_class
	SUBTYPE OF (Class);
WHERE
	WR1 : SELF\Class.name IN 
       ['vacuum', 'very low loss', 'low loss', 'medium loss', 'high loss'];
	WR2 : NOT EXISTS(SELF\Class.description);
END_ENTITY; -- Relative_optical_insertion_loss_material_property_class


ENTITY Relative_permeability_material_property_class
	SUBTYPE OF (Class);
WHERE
	WR1 : SELF\Class.name IN 
       ['free space permeabilty', 'low permeability', 'medium permeability', 'highly permeable'];
	WR2 : NOT EXISTS(SELF\Class.description);
END_ENTITY; -- Relative_permeability_material_property_class


ENTITY Relative_permittivity_material_property_class
	SUBTYPE OF (Class);
WHERE
	WR1 : SELF\Class.name IN 
       ['vacuum permittivity', 'low permittivity', 'medium permittivity', 'high permittivity'];
	WR2 : NOT EXISTS(SELF\Class.description);
END_ENTITY; -- Relative_permittivity_material_property_class


ENTITY Item_usage_effectivity;
	effectivity_domain : Effectivity;
	item_usage_relationship : View_definition_usage;
	resolved_configuration : Item_design_association;
END_ENTITY; -- Item_usage_effectivity


ENTITY Item_design_association;
	configuration : Product_configuration;
	design : version_or_definition;
UNIQUE
	UR1 : configuration, design;
END_ENTITY; -- Item_design_association


ENTITY Product_configuration;
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
	item_context : Product_concept;
INVERSE
	corresponding_design: SET [0:1] OF Item_design_association FOR configuration;
END_ENTITY; -- Product_configuration


ENTITY Contextual_shape_representation;
	contextual_shape : Contextual_item_shape;
	representing_relationship : Geometric_model_relationship;
DERIVE
	context_representation : Geometric_model := representing_relationship.rep_2;
	positioned_representation : Geometric_model := representing_relationship.rep_1;
END_ENTITY; -- Contextual_shape_representation


ENTITY Geometric_composition_with_operator_transformation
	SUBTYPE OF (Geometric_relationship_with_operator_transformation, Definitional_representation_relationship);
END_ENTITY; -- Geometric_composition_with_operator_transformation


ENTITY Geometric_composition_with_placement_transformation
	SUBTYPE OF (Geometric_relationship_with_placement_transformation, Definitional_representation_relationship);
END_ENTITY; -- Geometric_composition_with_placement_transformation


ENTITY Geometric_model_relationship_with_transformation
	ABSTRACT SUPERTYPE OF (ONEOF (Geometric_relationship_with_placement_transformation, Geometric_relationship_with_operator_transformation))
	SUBTYPE OF (Geometric_model_relationship);
WHERE
	WR1 : rep_1.context_of_items <> rep_2.context_of_items;
END_ENTITY; -- Geometric_model_relationship_with_transformation


ENTITY Geometric_operator_transformation
	SUBTYPE OF (Geometric_placement_operation);
	target : cartesian_transformation;
END_ENTITY; -- Geometric_operator_transformation


ENTITY Geometric_placement
	SUBTYPE OF (Geometric_placement_operation);
	target : Axis_placement;
END_ENTITY; -- Geometric_placement


ENTITY Geometric_placement_model
	SUBTYPE OF (Geometric_model);
	SELF\Representation.items : SET [1:1] OF Geometric_placement_operation;
END_ENTITY; -- Geometric_placement_model


ENTITY Geometric_placement_operation
	ABSTRACT SUPERTYPE OF (ONEOF (Geometric_placement, Geometric_operator_transformation))
	SUBTYPE OF (Detailed_geometric_model_element);
	source : Axis_placement;
	template_definition : template_definition_select;
END_ENTITY; -- Geometric_placement_operation


ENTITY Geometric_relationship_with_operator_transformation
	SUBTYPE OF (Geometric_model_relationship_with_transformation);
	transformation : cartesian_transformation;
WHERE
	WR1 : rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
END_ENTITY; -- Geometric_relationship_with_operator_transformation


ENTITY Geometric_relationship_with_placement_transformation
	SUBTYPE OF (Geometric_model_relationship_with_transformation);
	transformation : Axis_placement_mapping;
WHERE
	WR1 : rep_1.context_of_items\Geometric_coordinate_space.dimension_count :=:
        rep_2.context_of_items\Geometric_coordinate_space.dimension_count;
END_ENTITY; -- Geometric_relationship_with_placement_transformation


ENTITY Shape_placement_association
	SUBTYPE OF (Shape_description_association);
	SELF\Shape_description_association.representation : Geometric_placement_model;
	SELF\Shape_description_association.represented_characteristic : Contextual_item_shape;
END_ENTITY; -- Shape_placement_association


ENTITY Contract;
	id : STRING;
	purpose : STRING;
	kind : STRING;
END_ENTITY; -- Contract


ENTITY Contract_assignment;
	assigned_contract : Contract;
	items : SET [1:?] OF contract_item;
END_ENTITY; -- Contract_assignment


ENTITY Calendar_date;
	year_component : year_number;
	month_component : month_in_year_number;
	day_component : day_in_month_number;
END_ENTITY; -- Calendar_date


ENTITY Date_time;
	date_component : Calendar_date;
	time_component : Local_time;
END_ENTITY; -- Date_time


ENTITY Local_time;
	hour_component : hour_in_day;
	minute_component : OPTIONAL minute_in_hour;
	second_component : OPTIONAL second_in_minute;
	zone : Time_offset;
END_ENTITY; -- Local_time


ENTITY Time_offset;
	hour_offset : INTEGER;
	minute_offset : OPTIONAL INTEGER;
	sense : offset_orientation;
DERIVE
	actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
	WR1 : { 0 <= hour_offset < 24 };
	WR2 : { 0 <= actual_minute_offset <= 59 };
	WR3 : NOT(((hour_offset <> 0)OR(actual_minute_offset <>0))AND(sense = exact));
END_ENTITY; -- Time_offset


ENTITY Date_or_date_time_assignment;
	assigned_date : date_or_date_time_select;
	role : STRING;
	items : SET [1:?] OF date_or_date_time_item;
END_ENTITY; -- Date_or_date_time_assignment


ENTITY Default_setting_association;
	default_value : SET [0:?] OF default_setting_select;
	default_context : default_context_select;
END_ENTITY; -- Default_setting_association


ENTITY General_tolerance_table;
	tolerance_type : STRING;
INVERSE
	cell: SET [1:?] OF Tolerance_table_cell FOR tolerance_table;
END_ENTITY; -- General_tolerance_table


ENTITY General_tolerances;
	table_definition : general_tolerance_table_select;
	tolerance_class : STRING;
END_ENTITY; -- General_tolerances


ENTITY Plus_minus_toleranced_datum;
	tolerance_value : Numerical_item_with_unit;
END_ENTITY; -- Plus_minus_toleranced_datum


ENTITY Significant_number_of_digits;
	number_of_digits : STRING;
END_ENTITY; -- Significant_number_of_digits


ENTITY Tolerance_table_cell;
	cell_value : cell_entry_select;
	description : STRING;
	limit : limit_select;
	tolerance_class : STRING;
	tolerance_table : General_tolerance_table;
END_ENTITY; -- Tolerance_table_cell


ENTITY Upper_lower_limit;
	upper_limit : Numerical_item_with_unit;
	lower_limit : Numerical_item_with_unit;
END_ENTITY; -- Upper_lower_limit


ENTITY Upper_lower_toleranced_datum;
	lower_tolerance_value : Numerical_item_with_unit;
	upper_tolerance_value : Numerical_item_with_unit;
END_ENTITY; -- Upper_lower_toleranced_datum


ENTITY Derived_geometry;
	derived_from : SET [1:?] OF Shape_element;
	geometry : constructive_element_select;
	role : STRING;
END_ENTITY; -- Derived_geometry


ENTITY Derived_shape_element
	SUBTYPE OF (Shape_element);
	derived_from : SET [1:?] OF Shape_element;
	SELF\Shape_element.description RENAMED role : STRING;
END_ENTITY; -- Derived_shape_element


ENTITY Offset_shape_element
	SUBTYPE OF (Derived_shape_element);
	offset : Value_with_unit;
END_ENTITY; -- Offset_shape_element


ENTITY Add_design_object_management_relationship
	SUBTYPE OF (Design_object_management_relationship);
	current_design_object : managed_design_object;
UNIQUE
	UR1 : current_design_object;
END_ENTITY; -- Add_design_object_management_relationship


ENTITY Change_design_object_management_relationship
	SUBTYPE OF (Design_object_management_relationship);
	current_design_object : managed_design_object;
	previous_design_object : OPTIONAL managed_design_object;
	attribute_name : OPTIONAL STRING;
WHERE
	WR1 : TYPEOF(current_design_object)= TYPEOF(previous_design_object);
	WR2 : current_design_object <> previous_design_object;
END_ENTITY; -- Change_design_object_management_relationship


ENTITY Delete_design_object_management_relationship
	SUBTYPE OF (Design_object_management_relationship);
	previous_design_object : managed_design_object;
UNIQUE
	UR1 : previous_design_object;
END_ENTITY; -- Delete_design_object_management_relationship


ENTITY Design_object_management_relationship
	ABSTRACT SUPERTYPE OF ((ONEOF (Change_design_object_management_relationship, Delete_design_object_management_relationship, Add_design_object_management_relationship) ANDOR View_dependent_design_object_management_relationship))
	SUBTYPE OF (Activity);
WHERE
	WR1 : NOT EXISTS(SELF\Activity.name);
END_ENTITY; -- Design_object_management_relationship


ENTITY Frozen_assignment;
	frozen_item : SET [1:?] OF managed_design_object;
END_ENTITY; -- Frozen_assignment


ENTITY View_dependent_design_object_management_relationship
	SUBTYPE OF (Design_object_management_relationship);
	previous_design : Product_view_definition;
	current_design : Product_view_definition;
END_ENTITY; -- View_dependent_design_object_management_relationship


ENTITY Angular_location_dimension
	SUBTYPE OF (Location_dimension);
	orientation : Axis_placement;
END_ENTITY; -- Angular_location_dimension


ENTITY Angular_size_dimension
	SUBTYPE OF (Size_dimension);
	full : BOOLEAN;
	major_angle : BOOLEAN;
END_ENTITY; -- Angular_size_dimension


ENTITY Curved_distance_dimension
	SUBTYPE OF (Location_dimension);
	used_path : Measurement_path;
END_ENTITY; -- Curved_distance_dimension


ENTITY Curved_size_dimension
	SUBTYPE OF (Size_dimension);
END_ENTITY; -- Curved_size_dimension


ENTITY Diameter_size_dimension
	SUBTYPE OF (Size_dimension);
END_ENTITY; -- Diameter_size_dimension


ENTITY Dimension_value_with_limitation;
	defined_by : limitation_definition_select;
	limited_value : Numerical_item_with_unit;
END_ENTITY; -- Dimension_value_with_limitation


ENTITY Externally_defined_size_dimension
	SUBTYPE OF (Size_dimension);
	name : STRING;
	used_path : OPTIONAL Measurement_path;
END_ENTITY; -- Externally_defined_size_dimension


ENTITY Geometric_dimension
	ABSTRACT SUPERTYPE OF (ONEOF (Location_dimension, Size_dimension));
	id : STRING;
	dimension_value : dimension_value_select;
	notes : SET [0:?] OF STRING;
END_ENTITY; -- Geometric_dimension


ENTITY Height_size_dimension
	SUBTYPE OF (Size_dimension);
	used_path : OPTIONAL Measurement_path;
END_ENTITY; -- Height_size_dimension


ENTITY Length_size_dimension
	SUBTYPE OF (Size_dimension);
	used_path : OPTIONAL Measurement_path;
END_ENTITY; -- Length_size_dimension


ENTITY Limits_and_fits;
	deviation : STRING;
	fitting_type : OPTIONAL STRING;
	grade : STRING;
END_ENTITY; -- Limits_and_fits


ENTITY Linear_distance_dimension
	SUBTYPE OF (Location_dimension);
	orientation : OPTIONAL Axis_placement;
END_ENTITY; -- Linear_distance_dimension


ENTITY Location_dimension
	ABSTRACT SUPERTYPE OF (ONEOF (Angular_location_dimension, Curved_distance_dimension, Linear_distance_dimension))
	SUBTYPE OF (Geometric_dimension);
	description : OPTIONAL STRING;
	directed : OPTIONAL BOOLEAN;
	origin : placed_element_select;
	target : placed_element_select;
END_ENTITY; -- Location_dimension


ENTITY Plus_minus_bounds;
	lower_bound : Value_with_unit;
	significant_digits : OPTIONAL INTEGER;
	upper_bound : Value_with_unit;
	value_determination : OPTIONAL STRING;
END_ENTITY; -- Plus_minus_bounds


ENTITY Radial_size_dimension
	SUBTYPE OF (Size_dimension);
	radius_type : STRING;
END_ENTITY; -- Radial_size_dimension


ENTITY Size_dimension
	ABSTRACT SUPERTYPE OF (ONEOF (Angular_size_dimension, Curved_size_dimension, Diameter_size_dimension, Externally_defined_size_dimension, Height_size_dimension, Length_size_dimension, Radial_size_dimension, Thickness_size_dimension, Width_size_dimension))
	SUBTYPE OF (Geometric_dimension);
	envelope_principle : OPTIONAL BOOLEAN;
	is_applied_to : element_with_dimension_select;
END_ENTITY; -- Size_dimension


ENTITY Thickness_size_dimension
	SUBTYPE OF (Size_dimension);
	used_path : OPTIONAL Measurement_path;
END_ENTITY; -- Thickness_size_dimension


ENTITY Tolerance_range;
	lower_range : Numerical_item_with_unit;
	significant_digits : OPTIONAL INTEGER;
	upper_range : Numerical_item_with_unit;
END_ENTITY; -- Tolerance_range


ENTITY Width_size_dimension
	SUBTYPE OF (Size_dimension);
	used_path : OPTIONAL Measurement_path;
END_ENTITY; -- Width_size_dimension


ENTITY Document
	SUBTYPE OF (Product);
END_ENTITY; -- Document


ENTITY Document_version
	SUBTYPE OF (Product_version);
	SELF\Product_version.of_product : Document;
END_ENTITY; -- Document_version


ENTITY Document_assignment;
	assigned_document : assigned_document_select;
	is_assigned_to : documented_element_select;
	role : STRING;
END_ENTITY; -- Document_assignment


ENTITY Partial_document_assignment
	SUBTYPE OF (Document_assignment);
	document_portion : STRING;
END_ENTITY; -- Partial_document_assignment


ENTITY Digital_document_definition
	SUBTYPE OF (Document_definition);
	files : SET [0:?] OF Digital_file;
END_ENTITY; -- Digital_document_definition


ENTITY Document_definition
	SUPERTYPE OF (ONEOF (Digital_document_definition, Physical_document_definition))
	SUBTYPE OF (Product_view_definition);
	SELF\Product_view_definition.defined_version RENAMED associated_document_version : Document_version;
	SELF\Product_view_definition.name RENAMED description : OPTIONAL STRING;
END_ENTITY; -- Document_definition


ENTITY Document_location_identification
	SUBTYPE OF (External_source_identification);
WHERE
	WR1 : 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.DOCUMENT_DEFINITION' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY; -- Document_location_identification


ENTITY Physical_document_definition
	SUBTYPE OF (Document_definition);
	components : SET [0:?] OF Hardcopy;
END_ENTITY; -- Physical_document_definition


ENTITY Assigned_document_property
	SUBTYPE OF (Assigned_property);
	SELF\Assigned_property.described_element : document_property_item;
DERIVE
	SELF\Assigned_property.name : STRING := 'document property';
UNIQUE
	UR1 : described_element;
WHERE
	WR1 : SIZEOF(['AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.DOCUMENT_DEFINITION', 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FILE']*TYPEOF(SELF\Assigned_property.described_element))= 1;
END_ENTITY; -- Assigned_document_property


ENTITY Descriptive_document_property
	SUBTYPE OF (String_representation_item);
INVERSE
	valued_characteristic: SET [1:1] OF Document_property_representation FOR items;
END_ENTITY; -- Descriptive_document_property


ENTITY Document_property_representation
	SUBTYPE OF (Representation);
	SELF\Representation.items : SET [1:?] OF descriptive_or_numerical;
WHERE
	WR1 : SIZEOF(QUERY(pr <* USEDIN(SELF, 'PROPERTY_ASSIGNMENT_ARM.PROPERTY_REPRESENTATION.REP')| 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ASSIGNED_PROPERTY' IN TYPEOF(pr.property)))> 0;
	WR2 : SELF\Representation.context_of_items.kind = 'document parameters';
	WR3 : valid_document_property_representation(SELF);
	WR4 : SIZEOF(QUERY(it1 <* SELF\Representation.items | SIZEOF(QUERY(it2 <* SELF\Representation.items | it1.name = it2.name))> 1))= 0;
END_ENTITY; -- Document_property_representation


ENTITY Numerical_document_property
	SUBTYPE OF (Numerical_item_with_unit);
INVERSE
	valued_characteristic: SET [1:1] OF Document_property_representation FOR items;
END_ENTITY; -- Numerical_document_property


ENTITY Document_definition_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating_document_definition : Document_definition;
	related_document_definition : Document_definition;
WHERE
	WR1 : relating_document_definition :<>: related_document_definition;
END_ENTITY; -- Document_definition_relationship


ENTITY File_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating_document_file : File;
	related_document_file : File;
WHERE
	WR1 : relating_document_file:<>: related_document_file;
END_ENTITY; -- File_relationship


ENTITY Effectivity_assignment;
	assigned_effectivity : Effectivity;
	role : STRING;
	items : SET [1:?] OF effectivity_item;
END_ENTITY; -- Effectivity_assignment


ENTITY Dated_effectivity
	SUBTYPE OF (Effectivity);
	start_bound : date_or_event;
	end_bound : OPTIONAL date_or_event;
END_ENTITY; -- Dated_effectivity


ENTITY Effectivity
	SUPERTYPE OF (ONEOF (Serial_effectivity, Dated_effectivity, Lot_effectivity, Time_interval_effectivity));
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Effectivity


ENTITY Effectivity_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating_effectivity : Effectivity;
	related_effectivity : Effectivity;
END_ENTITY; -- Effectivity_relationship


ENTITY Lot_effectivity
	SUBTYPE OF (Effectivity);
	lot_id : STRING;
	lot_size : Value_with_unit;
END_ENTITY; -- Lot_effectivity


ENTITY Serial_effectivity
	SUBTYPE OF (Effectivity);
	start_id : STRING;
	end_id : OPTIONAL STRING;
END_ENTITY; -- Serial_effectivity


ENTITY Time_interval_effectivity
	SUBTYPE OF (Effectivity);
	effectivity_period : Time_interval;
END_ENTITY; -- Time_interval_effectivity


ENTITY Axis_placement
	SUBTYPE OF (Detailed_geometric_model_element);
	origin : Cartesian_point;
	x_axis : Direction;
	y_axis : Direction;
DERIVE
	dim : INTEGER := SIZEOF(origin.coordinates);
WHERE
	WR1 : dim >1;
	WR2 : dim = SIZEOF(x_axis.coordinates);
	WR3 : dim = SIZEOF(y_axis.coordinates);
END_ENTITY; -- Axis_placement


ENTITY Axis_placement_mapping;
	source : Axis_placement;
	target : Axis_placement;
WHERE
	WR1 : source\Axis_placement.dim = target\Axis_placement.dim;
END_ENTITY; -- Axis_placement_mapping


ENTITY Cartesian_point
	SUBTYPE OF (Detailed_geometric_model_element);
	coordinates : LIST [1:3] OF length_measure;
END_ENTITY; -- Cartesian_point


ENTITY Cartesian_transformation_2d
	SUBTYPE OF (Detailed_geometric_model_element);
	multiplication_matrix : ARRAY [1:2] OF Direction;
	translation : Cartesian_point;
WHERE
	WR1 : SIZEOF(multiplication_matrix[1]\Direction.coordinates)=2;
	WR2 : SIZEOF(multiplication_matrix[2]\Direction.coordinates)=2;
	WR3 : SIZEOF(translation.coordinates)=2;
END_ENTITY; -- Cartesian_transformation_2d


ENTITY Cartesian_transformation_3d
	SUBTYPE OF (Detailed_geometric_model_element);
	multiplication_matrix : ARRAY [1:3] OF Direction;
	translation : Cartesian_point;
WHERE
	WR1 : SIZEOF(multiplication_matrix[1]\Direction.coordinates)=3;
	WR2 : SIZEOF(multiplication_matrix[2]\Direction.coordinates)=3;
	WR3 : SIZEOF(multiplication_matrix[3]\Direction.coordinates)=3;
	WR4 : SIZEOF(translation.coordinates)=3;
END_ENTITY; -- Cartesian_transformation_3d


ENTITY Detailed_geometric_model_element
	ABSTRACT SUPERTYPE OF (ONEOF (Cartesian_point, Direction, Axis_placement, Cartesian_transformation_2d, Cartesian_transformation_3d))
	SUBTYPE OF (Representation_item);
END_ENTITY; -- Detailed_geometric_model_element


ENTITY Direction
	SUBTYPE OF (Detailed_geometric_model_element);
	coordinates : LIST [2:3] OF length_measure;
END_ENTITY; -- Direction


ENTITY Geometric_coordinate_space
	SUBTYPE OF (Numerical_representation_context);
	dimension_count : INTEGER;
WHERE
	WR1 : dimension_count >0;
END_ENTITY; -- Geometric_coordinate_space


ENTITY Geometric_model
	SUBTYPE OF (Representation);
	version_id : OPTIONAL STRING;
	model_extent : OPTIONAL length_measure;
	SELF\Representation.context_of_items : Geometric_coordinate_space;
	SELF\Representation.items : SET [1:?] OF Detailed_geometric_model_element;
END_ENTITY; -- Geometric_model


ENTITY Event;
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
	actual_start_date : OPTIONAL date_or_date_time_select;
	planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY; -- Event


ENTITY Event_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating_event : Event;
	related_event : Event;
END_ENTITY; -- Event_relationship


ENTITY Relative_event
	SUBTYPE OF (Event);
	base_event : Event;
	offset : Duration;
END_ENTITY; -- Relative_event


ENTITY Event_assignment;
	assigned_event : Event;
	items : SET [1:?] OF event_item;
	role : STRING;
END_ENTITY; -- Event_assignment


ENTITY Axis_placement_2d
	SUBTYPE OF (Axis_placement);
END_ENTITY; -- Axis_placement_2d


ENTITY Axis_placement_3d
	SUBTYPE OF (Axis_placement);
END_ENTITY; -- Axis_placement_3d


ENTITY Definitional_representation_relationship
	SUBTYPE OF (Representation_relationship);
WHERE
	WR1 : acyclic_representation_relationship(SELF,
       [SELF\representation_relationship.rep_2],
       'FOUNDATION_REPRESENTATION_ARM.'+
       'REPRESENTATION');
END_ENTITY; -- Definitional_representation_relationship


ENTITY Detailed_geometric_model_element_relationship;
	item_1 : Detailed_geometric_model_element;
	item_2 : Detailed_geometric_model_element;
WHERE
	WR1 : item_1 <> item_2;
END_ENTITY; -- Detailed_geometric_model_element_relationship


ENTITY Geometric_model_element_relationship
	SUBTYPE OF (Detailed_geometric_model_element_relationship, Detailed_geometric_model_element);
END_ENTITY; -- Geometric_model_element_relationship


ENTITY Geometric_model_relationship
	SUBTYPE OF (Representation_relationship);
	SELF\Representation_relationship.rep_1 : Geometric_model;
	SELF\Representation_relationship.rep_2 : Geometric_model;
WHERE
	WR1 : rep_1 <> rep_2;
END_ENTITY; -- Geometric_model_relationship


ENTITY Vector
	SUBTYPE OF (Detailed_geometric_model_element);
	orientation : Direction;
	magnitude : length_measure;
WHERE
	WR1 : magnitude >= 0.0;
END_ENTITY; -- Vector


ENTITY Apex
	SUBTYPE OF (Derived_non_feature_shape_element);
END_ENTITY; -- Apex


ENTITY Boundary_size_characteristic
	ABSTRACT SUPERTYPE OF (ONEOF (Diametrical_boundary_size_characteristic, Opposing_boundary_set_size_characteristic));
	tolerance_value : Length_data_element;
	maximum_tolerance_value : OPTIONAL Length_data_element;
END_ENTITY; -- Boundary_size_characteristic


ENTITY Centre_axis
	SUBTYPE OF (Centre_of_symmetry);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Centre_axis


ENTITY Centre_of_symmetry
	ABSTRACT SUPERTYPE OF (ONEOF (Centre_axis, Centre_plane, Centre_point))
	SUBTYPE OF (Derived_non_feature_shape_element);
END_ENTITY; -- Centre_of_symmetry


ENTITY Centre_plane
	SUBTYPE OF (Centre_of_symmetry);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Centre_plane


ENTITY Centre_point
	SUBTYPE OF (Centre_of_symmetry);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Centre_point


ENTITY Composite_linear_profile_refinement_tolerance
	SUBTYPE OF (Line_profile_tolerance);
	refined_control : locating_or_refinement_linear_profile_tolerance;
WHERE
	WR1 : NOT EXISTS(SELF\Geometric_tolerance.name);
END_ENTITY; -- Composite_linear_profile_refinement_tolerance


ENTITY Composite_surface_profile_refinement_tolerance
	SUBTYPE OF (Surface_profile_tolerance);
	refined_control : locating_or_refinement_surface_profile_tolerance;
WHERE
	WR1 : NOT EXISTS(SELF\Geometric_tolerance.name);
END_ENTITY; -- Composite_surface_profile_refinement_tolerance


ENTITY Conical_tolerance_zone_boundary
	SUBTYPE OF (Tolerance_zone_boundary);
INVERSE
	boundary_and_surface_relationships: SET [2:2] OF Conical_tolerance_zone_boundary_and_surface_relationship FOR sized_tolerance_zone_boundary;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Conical_tolerance_zone_boundary


ENTITY Conical_tolerance_zone_boundary_and_surface_relationship;
	sized_tolerance_zone_boundary : Conical_tolerance_zone_boundary;
	terminating_surface : physical_feature_or_part_template;
INVERSE
	size_characteristic: Conical_tolerance_zone_boundary_diametrical_size_characteristic FOR sized_boundary_at_surface;
END_ENTITY; -- Conical_tolerance_zone_boundary_and_surface_relationship


ENTITY Conical_tolerance_zone_boundary_diametrical_size_characteristic;
	sized_boundary_at_surface : Conical_tolerance_zone_boundary_and_surface_relationship;
	tolerance_value : Length_data_element;
END_ENTITY; -- Conical_tolerance_zone_boundary_diametrical_size_characteristic


ENTITY Conical_tolerance_zone_definition
	SUBTYPE OF (Tolerance_zone_definition);
END_ENTITY; -- Conical_tolerance_zone_definition


ENTITY Datum_axis
	SUBTYPE OF (Datum_shape_element);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Datum_axis


ENTITY Datum_axis_and_tolerance_zone_orienting_relationship;
	oriented_tolerance_zone : Tolerance_zone;
	orienting_datum_axis : Datum_axis;
INVERSE
	zone_orientation: Datum_axis_related_orientation FOR orienting_relationship;
END_ENTITY; -- Datum_axis_and_tolerance_zone_orienting_relationship


ENTITY Datum_axis_related_orientation;
	orienting_relationship : Datum_axis_and_tolerance_zone_orienting_relationship;
	orientation_type : centre_type;
END_ENTITY; -- Datum_axis_related_orientation


ENTITY Datum_based_direction_vector;
	direction_vector_representation : Axis_placement;
	vector_of : Datum_plane;
	positive_direction_vector : BOOLEAN;
END_ENTITY; -- Datum_based_direction_vector


ENTITY Datum_based_length_measure;
	measure : Length_data_element;
	measure_orientation : descriptive_or_geometric_orientation;
	of_datum : Datum_plane;
END_ENTITY; -- Datum_based_length_measure


ENTITY Datum_based_vector_orientation;
	direction_components : SET [2:2] OF Direction_element;
END_ENTITY; -- Datum_based_vector_orientation


ENTITY Datum_difference
	SUBTYPE OF (Shape_element_relationship);
	SELF\Shape_element_relationship.relating RENAMED precedent_datum : Datum_shape_element;
	SELF\Shape_element_relationship.related RENAMED subsequent_datum : Datum_shape_element;
END_ENTITY; -- Datum_difference


ENTITY Datum_difference_based_characteristic
	SUBTYPE OF (Representation_item);
	of_datum_difference : Datum_difference;
END_ENTITY; -- Datum_difference_based_characteristic


ENTITY Datum_feature
	SUPERTYPE OF (Datum_target_set)
	SUBTYPE OF (Shape_element);
END_ENTITY; -- Datum_feature


ENTITY Datum_plane
	SUBTYPE OF (Datum_shape_element);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Datum_plane


ENTITY Datum_point
	SUBTYPE OF (Datum_shape_element);
END_ENTITY; -- Datum_point


ENTITY Datum_shape_element
	SUBTYPE OF (Datum, Non_feature_shape_element);
END_ENTITY; -- Datum_shape_element


ENTITY Datum_target_set
	SUBTYPE OF (Datum_feature);
INVERSE
	included_datum_targets: SET [1:?] OF Datum_target_usage_in_datum_target_set_relationship FOR defined_datum_target_set;
END_ENTITY; -- Datum_target_set


ENTITY Datum_target_usage_in_datum_target_set_relationship;
	defined_datum_target_set : Datum_target_set;
	used_datum_target : Datum_target;
	datum_target_number : INTEGER;
UNIQUE
	UR2 : datum_target_number, defined_datum_target_set;
	UR1 : used_datum_target, defined_datum_target_set;
END_ENTITY; -- Datum_target_usage_in_datum_target_set_relationship


ENTITY Derived_non_feature_shape_element
	ABSTRACT SUPERTYPE OF (ONEOF (Apex, Centre_of_symmetry, Linear_extension, Geometric_intersection, Geometric_alignment, Tangent_shape_element))
	SUBTYPE OF (Non_feature_shape_element);
INVERSE
	deriving_relationships: SET [1:?] OF Shape_element_deriving_relationship FOR relating;
END_ENTITY; -- Derived_non_feature_shape_element


ENTITY Diametrical_boundary_size_characteristic
	SUBTYPE OF (Boundary_size_characteristic);
	sized_boundary : Tolerance_zone_circular_or_cylindrical_or_spherical_boundary;
END_ENTITY; -- Diametrical_boundary_size_characteristic


ENTITY Dimension_qualifier
	ABSTRACT SUPERTYPE OF (ONEOF (Pre_defined_dimension_qualifier, User_defined_dimension_qualifier));
	qualified_dimensions : SET [1:?] OF Geometric_dimension;
END_ENTITY; -- Dimension_qualifier


ENTITY Dimension_related_positional_boundary
	SUBTYPE OF (Positional_boundary);
	boundary_members : SET [1:?] OF Positional_boundary_member;
	constrained_physical_feature : physical_feature_or_part_template;
END_ENTITY; -- Dimension_related_positional_boundary


ENTITY Dimension_related_positional_boundary_definition
	SUBTYPE OF (Positional_boundary_definition);
	characterized_boundary_member_definitions : SET [1:?] OF Positional_boundary_member_definition;
	SELF\Positional_boundary_definition.defined_positional_boundary : Dimension_related_positional_boundary;
END_ENTITY; -- Dimension_related_positional_boundary_definition


ENTITY Dimension_set;
	associated_dimensions : SET [1:?] OF Geometric_dimension;
END_ENTITY; -- Dimension_set


ENTITY Dimensional_characteristic_representation;
	representation : Shape_dimension_representation;
	dimension : dimensional_location_or_dimensional_size;
	auxiliary_dimension_representation : BOOLEAN;
END_ENTITY; -- Dimensional_characteristic_representation


ENTITY Dimensional_size_based_on_opposing_boundaries
	SUBTYPE OF (Size_dimension);
	boundary_separation : Shape_element_locating_relationship;
	SELF\Size_dimension.is_applied_to : Composite_unit_shape_element;
END_ENTITY; -- Dimensional_size_based_on_opposing_boundaries


ENTITY Directed_axis
	SUBTYPE OF (Non_feature_shape_element);
	axis_to_be_oriented : Centre_axis;
	start_shape_element : Shape_element;
	end_shape_element : Shape_element;
UNIQUE
	UR1 : axis_to_be_oriented, start_shape_element;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Directed_axis


ENTITY Direction_element;
	direction : Datum_based_direction_vector;
	angle_value : Angle_data_element;
	base_datum_plane : Datum_plane;
	direction_of_half_datum_plane : Datum_based_direction_vector;
INVERSE
	elements_of: SET [1:?] OF Datum_based_vector_orientation FOR direction_components;
END_ENTITY; -- Direction_element


ENTITY Edge_segment_vertex
	SUBTYPE OF (Datum_point);
END_ENTITY; -- Edge_segment_vertex


ENTITY Externally_defined_dimension_representation
	SUBTYPE OF (Shape_dimension_representation);
	dimension_value : OPTIONAL Value_with_unit;
INVERSE
	definitions: SET [1:?] OF External_source_identification FOR item;
END_ENTITY; -- Externally_defined_dimension_representation


ENTITY Geometric_alignment
	SUBTYPE OF (Derived_non_feature_shape_element);
END_ENTITY; -- Geometric_alignment


ENTITY Geometric_intersection
	SUBTYPE OF (Derived_non_feature_shape_element);
END_ENTITY; -- Geometric_intersection


ENTITY Geometric_tolerance_qualifier
	ABSTRACT SUPERTYPE OF (ONEOF (Pre_defined_geometric_tolerance_qualifier, User_defined_geometric_tolerance_qualifier));
	qualified_geometric_tolerances : SET [1:?] OF Geometric_tolerance;
END_ENTITY; -- Geometric_tolerance_qualifier


ENTITY Geometric_tolerance_with_applied_material_condition_property
	SUBTYPE OF (Geometric_tolerance);
	applied_material_condition_property_name : material_condition_property_names;
END_ENTITY; -- Geometric_tolerance_with_applied_material_condition_property


ENTITY Limit_dimension_representation
	SUBTYPE OF (Shape_dimension_representation);
	upper_dimension_value : Value_with_unit;
	lower_dimension_value : Value_with_unit;
END_ENTITY; -- Limit_dimension_representation


ENTITY Linear_extension
	SUBTYPE OF (Derived_non_feature_shape_element);
END_ENTITY; -- Linear_extension


ENTITY Maximum_dimension_representation
	SUBTYPE OF (Singular_dimension_representation);
END_ENTITY; -- Maximum_dimension_representation


ENTITY Minimum_dimension_representation
	SUBTYPE OF (Singular_dimension_representation);
END_ENTITY; -- Minimum_dimension_representation


ENTITY Opposing_boundary_set_size_characteristic
	SUBTYPE OF (Boundary_size_characteristic);
	sized_boundary_set : Tolerance_zone_opposing_boundary_set;
END_ENTITY; -- Opposing_boundary_set_size_characteristic


ENTITY Parallel_shape_element_relationship
	SUBTYPE OF (Shape_element_relationship);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element_relationship.relation_type);
END_ENTITY; -- Parallel_shape_element_relationship


ENTITY Perpendicular_shape_element_relationship
	SUBTYPE OF (Shape_element_relationship);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element_relationship.relation_type);
END_ENTITY; -- Perpendicular_shape_element_relationship


ENTITY Positional_boundary
	ABSTRACT SUPERTYPE OF (ONEOF (Profile_related_positional_boundary, Dimension_related_positional_boundary))
	SUBTYPE OF (Non_feature_shape_element);
INVERSE
	boundary_definition: Positional_boundary_definition FOR defined_positional_boundary;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Positional_boundary


ENTITY Positional_boundary_and_profile_boundary_member_relationship;
	offset_positional_boundary : Profile_related_positional_boundary;
	base_profile_tolerance_zone_boundary_member : Tolerance_zone_boundary_member;
INVERSE
	offset: Positional_boundary_offset FOR offset_boundary_relationship;
END_ENTITY; -- Positional_boundary_and_profile_boundary_member_relationship


ENTITY Positional_boundary_definition
	ABSTRACT SUPERTYPE OF (ONEOF (Profile_related_positional_boundary_definition, Dimension_related_positional_boundary_definition));
	defined_positional_boundary : Positional_boundary;
END_ENTITY; -- Positional_boundary_definition


ENTITY Positional_boundary_member
	SUBTYPE OF (Non_feature_shape_element);
INVERSE
	boundary_member_definition: Positional_boundary_member_definition FOR defined_positional_boundary_member;
	composed_positional_boundary: Dimension_related_positional_boundary FOR boundary_members;
END_ENTITY; -- Positional_boundary_member


ENTITY Positional_boundary_member_definition;
	defined_positional_boundary_member : Positional_boundary_member;
	tolerance_value : Length_data_element;
	associated_dimension : Size_dimension;
INVERSE
	boundary_definition: Dimension_related_positional_boundary_definition FOR characterized_boundary_member_definitions;
END_ENTITY; -- Positional_boundary_member_definition


ENTITY Positional_boundary_offset;
	offset_boundary_relationship : Positional_boundary_and_profile_boundary_member_relationship;
	tolerance_value : Length_data_element;
INVERSE
	boundary_definition: Profile_related_positional_boundary_definition FOR boundary_offset;
END_ENTITY; -- Positional_boundary_offset


ENTITY Pre_defined_dimension_qualifier
	SUBTYPE OF (Dimension_qualifier);
	description : dimension_qualifiers;
END_ENTITY; -- Pre_defined_dimension_qualifier


ENTITY Pre_defined_geometric_tolerance_qualifier
	SUBTYPE OF (Geometric_tolerance_qualifier);
	description : geometric_tolerance_qualifiers;
END_ENTITY; -- Pre_defined_geometric_tolerance_qualifier


ENTITY Profile_related_positional_boundary
	SUBTYPE OF (Positional_boundary);
INVERSE
	associating_relationship: Positional_boundary_and_profile_boundary_member_relationship FOR offset_positional_boundary;
END_ENTITY; -- Profile_related_positional_boundary


ENTITY Profile_related_positional_boundary_definition
	SUBTYPE OF (Positional_boundary_definition);
	boundary_offset : Positional_boundary_offset;
	SELF\Positional_boundary_definition.defined_positional_boundary : Profile_related_positional_boundary;
END_ENTITY; -- Profile_related_positional_boundary_definition


ENTITY Projected_zone_and_base_relationship;
	base_physical_feature : physical_feature_or_part_template;
	projected_zone : Tolerance_zone;
INVERSE
	size_characteristic: Projected_zone_height_characteristic FOR defined_height_of;
END_ENTITY; -- Projected_zone_and_base_relationship


ENTITY Projected_zone_height_characteristic;
	defined_height_of : Projected_zone_and_base_relationship;
	projected_height_value : Length_data_element;
END_ENTITY; -- Projected_zone_height_characteristic


ENTITY Restraint_condition
	SUPERTYPE OF (Tolerance_specific_restraint_condition);
	applied_to : restrained_item_select;
DERIVE
	restraint_description : SET [0:?] OF Requirement_view_definition := get_rvd(SELF, 'restraint description');
WHERE
	WR1 : EXISTS(restraint_description)AND(SIZEOF(restraint_description)= 1);
END_ENTITY; -- Restraint_condition


ENTITY Runout_tolerance_zone_definition_with_specified_angle
	SUBTYPE OF (Tolerance_zone_definition);
	runout_orientation : Runout_zone_orientation;
END_ENTITY; -- Runout_tolerance_zone_definition_with_specified_angle


ENTITY Runout_tolerance_zone_orienting_relationship;
	oriented_zone : Tolerance_zone;
	orienting_axis : Directed_axis;
INVERSE
	angular_size_characteristic: Runout_zone_orientation FOR oriented_relationship;
END_ENTITY; -- Runout_tolerance_zone_orienting_relationship


ENTITY Runout_zone_orientation;
	oriented_relationship : Runout_tolerance_zone_orienting_relationship;
	semi_angle_value : Angle_data_element;
INVERSE
	zone_definition: Runout_tolerance_zone_definition_with_specified_angle FOR runout_orientation;
END_ENTITY; -- Runout_zone_orientation


ENTITY Separate_geometric_tolerance_requirement;
	separated_geometric_tolerances : SET [1:?] OF Geometric_tolerance;
END_ENTITY; -- Separate_geometric_tolerance_requirement


ENTITY Shape_dimension_representation
	ABSTRACT SUPERTYPE OF (ONEOF (Limit_dimension_representation, Singular_dimension_representation, Externally_defined_dimension_representation));
END_ENTITY; -- Shape_dimension_representation


ENTITY Shape_element_deriving_relationship
	SUBTYPE OF (Shape_element_relationship);
	SELF\Shape_element_relationship.relating : Derived_non_feature_shape_element;
UNIQUE
	UR1 : related, relating;
END_ENTITY; -- Shape_element_deriving_relationship


ENTITY Simultaneous_geometric_tolerance_requirement;
	grouped_geometric_tolerances : SET [2:?] OF Geometric_tolerance;
END_ENTITY; -- Simultaneous_geometric_tolerance_requirement


ENTITY Singular_dimension_representation
	ABSTRACT SUPERTYPE OF (ONEOF (Theoretically_exact_dimension_representation, Maximum_dimension_representation, Minimum_dimension_representation))
	SUBTYPE OF (Shape_dimension_representation);
	dimension_value : Value_with_unit;
END_ENTITY; -- Singular_dimension_representation


ENTITY Statistical_dimensional_location
	SUBTYPE OF (Geometric_dimension);
	alternate_dimension : OPTIONAL Geometric_dimension;
DERIVE
	statistical_control_requirement : SET [0:?] OF Requirement_view_definition := get_rvd(SELF, 'statistical control requirement');
WHERE
	WR1 : EXISTS(statistical_control_requirement)AND(SIZEOF(statistical_control_requirement)= 1);
END_ENTITY; -- Statistical_dimensional_location


ENTITY Statistical_dimensional_size
	SUBTYPE OF (Geometric_dimension);
	alternate_dimension : OPTIONAL Geometric_dimension;
DERIVE
	statistical_control_requirement : SET [0:?] OF Requirement_view_definition := get_rvd(SELF, 'statistical control requirement');
WHERE
	WR1 : EXISTS(statistical_control_requirement)AND(SIZEOF(statistical_control_requirement)= 1);
END_ENTITY; -- Statistical_dimensional_size


ENTITY Statistical_geometric_tolerance
	SUBTYPE OF (Geometric_tolerance);
	alternate_tolerance : OPTIONAL Geometric_tolerance;
DERIVE
	statistical_control_requirement : SET [0:?] OF Requirement_view_definition := get_rvd(SELF, 'statistical control requirement');
WHERE
	WR1 : EXISTS(statistical_control_requirement)AND(SIZEOF(statistical_control_requirement)= 1);
END_ENTITY; -- Statistical_geometric_tolerance


ENTITY Tangent_plane
	SUBTYPE OF (Tangent_shape_element);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Tangent_plane


ENTITY Tangent_shape_element
	SUPERTYPE OF (Tangent_plane)
	SUBTYPE OF (Derived_non_feature_shape_element);
END_ENTITY; -- Tangent_shape_element


ENTITY Theoretically_exact_dimension_representation
	SUBTYPE OF (Singular_dimension_representation);
END_ENTITY; -- Theoretically_exact_dimension_representation


ENTITY Tolerance_specific_restraint_condition
	SUBTYPE OF (Restraint_condition);
	affected_tolerances : SET [1:?] OF geometric_or_dimension_select;
END_ENTITY; -- Tolerance_specific_restraint_condition


ENTITY Tolerance_zone_and_viewing_plane_orienting_relationship;
	orienting_viewing_plane : Viewing_plane;
	oriented_tolerance_zone : Tolerance_zone;
INVERSE
	zone_orientation: Viewing_plane_based_orientation FOR orienting_relationship;
END_ENTITY; -- Tolerance_zone_and_viewing_plane_orienting_relationship


ENTITY Tolerance_zone_boundary
	ABSTRACT SUPERTYPE OF (ONEOF (Tolerance_zone_circular_or_cylindrical_or_spherical_boundary, Tolerance_zone_opposing_boundary_set, Conical_tolerance_zone_boundary))
	SUBTYPE OF (Non_feature_shape_element);
END_ENTITY; -- Tolerance_zone_boundary


ENTITY Tolerance_zone_boundary_member
	SUBTYPE OF (Non_feature_shape_element);
INVERSE
	explicit_opposing_boundary_set: Tolerance_zone_explicit_opposing_boundary_set FOR boundary_members;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Tolerance_zone_boundary_member


ENTITY Tolerance_zone_boundary_member_offset;
	offset_tolerance_zone_boundary_member : Tolerance_zone_boundary_member;
	offset_value : Length_data_element;
	type_of_offset : offset_types;
END_ENTITY; -- Tolerance_zone_boundary_member_offset


ENTITY Tolerance_zone_circular_or_cylindrical_or_spherical_boundary
	SUBTYPE OF (Tolerance_zone_boundary);
INVERSE
	size_characteristic: Diametrical_boundary_size_characteristic FOR sized_boundary;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Tolerance_zone_circular_or_cylindrical_or_spherical_boundary


ENTITY Tolerance_zone_definition_with_per_unit_size_specification
	SUBTYPE OF (Tolerance_zone_definition);
	per_unit_size_specification : Tolerance_zone_per_unit_size_specification;
END_ENTITY; -- Tolerance_zone_definition_with_per_unit_size_specification


ENTITY Tolerance_zone_definition_with_specified_orientation
	SUBTYPE OF (Tolerance_zone_definition);
	zone_orientation : orientation_select;
END_ENTITY; -- Tolerance_zone_definition_with_specified_orientation


ENTITY Tolerance_zone_explicit_opposing_boundary_set
	SUBTYPE OF (Tolerance_zone_opposing_boundary_set);
	boundary_members : SET [2:2] OF Tolerance_zone_boundary_member;
END_ENTITY; -- Tolerance_zone_explicit_opposing_boundary_set


ENTITY Tolerance_zone_form;
	name : STRING;
	characterized_tolerance_zone : Tolerance_zone;
END_ENTITY; -- Tolerance_zone_form


ENTITY Tolerance_zone_implicit_opposing_boundary_set
	SUBTYPE OF (Tolerance_zone_opposing_boundary_set);
END_ENTITY; -- Tolerance_zone_implicit_opposing_boundary_set


ENTITY Tolerance_zone_opposing_boundary_set
	ABSTRACT SUPERTYPE OF (ONEOF (Tolerance_zone_explicit_opposing_boundary_set, Tolerance_zone_implicit_opposing_boundary_set))
	SUBTYPE OF (Tolerance_zone_boundary);
INVERSE
	size_characteristic: Opposing_boundary_set_size_characteristic FOR sized_boundary_set;
END_ENTITY; -- Tolerance_zone_opposing_boundary_set


ENTITY Tolerance_zone_per_unit_size_specification;
	specified_tolerance_zone : Tolerance_zone;
	per_unit_size : SET [1:2] OF Length_data_element;
INVERSE
	zone_definition: Tolerance_zone_definition_with_per_unit_size_specification FOR per_unit_size_specification;
END_ENTITY; -- Tolerance_zone_per_unit_size_specification


ENTITY True_profile;
	profiled_surface : physical_feature_or_part_template;
	profile_representation : true_profile_representations;
END_ENTITY; -- True_profile


ENTITY User_defined_dimension_qualifier
	SUBTYPE OF (Dimension_qualifier);
	name : STRING;
	description : STRING;
END_ENTITY; -- User_defined_dimension_qualifier


ENTITY User_defined_geometric_tolerance_qualifier
	SUBTYPE OF (Geometric_tolerance_qualifier);
	name : STRING;
	description : STRING;
END_ENTITY; -- User_defined_geometric_tolerance_qualifier


ENTITY Viewing_plane
	SUBTYPE OF (Non_feature_shape_element);
INVERSE
	viewing_plane_specification: Viewing_plane_definition FOR defined_viewing_plane;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Viewing_plane


ENTITY Viewing_plane_based_orientation;
	orienting_relationship : Tolerance_zone_and_viewing_plane_orienting_relationship;
	viewing_plane_specification : Viewing_plane_definition;
END_ENTITY; -- Viewing_plane_based_orientation


ENTITY Viewing_plane_definition;
	defined_viewing_plane : Viewing_plane;
	viewing_plane_representation : Axis_placement;
INVERSE
	zone_orientation: Viewing_plane_based_orientation FOR viewing_plane_specification;
END_ENTITY; -- Viewing_plane_definition


ENTITY Measure_item_with_precision
	SUBTYPE OF (Measure_item);
	significant_digits : INTEGER;
END_ENTITY; -- Measure_item_with_precision


ENTITY Qualified_property_value_representation
	SUBTYPE OF (Property_value_representation);
	value_determination : OPTIONAL STRING;
	qualifier : OPTIONAL STRING;
END_ENTITY; -- Qualified_property_value_representation


ENTITY Value_limit
	SUBTYPE OF (Measure_item);
	limit_qualifier : limit_qualifier_list;
	limit : Value_with_unit;
END_ENTITY; -- Value_limit


ENTITY Value_limit_with_global_unit
	SUBTYPE OF (Measure_item);
	limit : Numerical_item_with_global_unit;
	limit_qualifier : limit_qualifier_list;
END_ENTITY; -- Value_limit_with_global_unit


ENTITY Value_list
	SUBTYPE OF (Measure_item);
	values : LIST [1:?] OF Measure_item;
END_ENTITY; -- Value_list


ENTITY Value_range
	SUBTYPE OF (Measure_item);
	lower_limit : Numerical_item_with_unit;
	upper_limit : Numerical_item_with_unit;
END_ENTITY; -- Value_range


ENTITY Value_range_with_global_unit
	SUBTYPE OF (Measure_item);
	lower_limit : Numerical_item_with_global_unit;
	upper_limit : Numerical_item_with_global_unit;
END_ENTITY; -- Value_range_with_global_unit


ENTITY Value_set
	SUBTYPE OF (Measure_item);
	values : SET [1:?] OF Measure_item;
END_ENTITY; -- Value_set


ENTITY Value_with_tolerances
	SUBTYPE OF (Measure_item);
	item_value : Numerical_item_with_unit;
	lower_limit : REAL;
	upper_limit : REAL;
END_ENTITY; -- Value_with_tolerances


ENTITY External_class
	SUBTYPE OF (Class);
	external_source : External_class_library;
END_ENTITY; -- External_class


ENTITY External_class_library;
	id : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- External_class_library


ENTITY External_item_identification
	SUBTYPE OF (External_source_identification);
	external_id : STRING;
END_ENTITY; -- External_item_identification


ENTITY External_source_identification;
	source_id : STRING;
	source_type : STRING;
	item : external_identification_item;
	description : OPTIONAL STRING;
END_ENTITY; -- External_source_identification


ENTITY External_geometric_model
	SUBTYPE OF (Geometric_model);
	external_file : Digital_file;
	SELF\Representation.items : SET [1:1] OF Axis_placement;
WHERE
	WR1 : SELF\Representation.context_of_items.dimension_count = 3;
	WR2 : SELF\Representation.context_of_items.kind = 'external';
END_ENTITY; -- External_geometric_model


ENTITY Connection_zone
	ABSTRACT
	SUBTYPE OF (Feature_occurrence);
WHERE
	WR1 : (SIZEOF(USEDIN(SELF, 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FEATURE_DEFINITION_WITH_CONNECTION_AREA.CONNECTION_AREA'))+
             SIZEOF(USEDIN(SELF, 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.SHAPE_FEATURE.CONNECTION_AREA')))
            = 1;
	WR2 : NOT EXISTS(SELF\Shape_element.description);
	WR3 : NOT EXISTS(SELF\Shape_element.element_name);
END_ENTITY; -- Connection_zone


ENTITY Feature_definition_with_connection_area
	SUBTYPE OF (Feature_definition);
	connection_area : SET [1:?] OF Connection_zone;
END_ENTITY; -- Feature_definition_with_connection_area


ENTITY Location_shape_model
	SUBTYPE OF (Geometric_model);
END_ENTITY; -- Location_shape_model


ENTITY Shape_feature
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Shape_element);
	connection_area : OPTIONAL SET [1:?] OF Connection_zone;
	SELF\Shape_element.element_name : STRING;
UNIQUE
	UR1 : element_name, containing_shape;
END_ENTITY; -- Shape_feature


ENTITY Digital_file
	SUBTYPE OF (File);
END_ENTITY; -- Digital_file


ENTITY File
	ABSTRACT SUPERTYPE OF (ONEOF (Digital_file, Hardcopy));
	id : STRING;
	version : OPTIONAL STRING;
	contained_data_type : OPTIONAL STRING;
END_ENTITY; -- File


ENTITY File_location_identification
	SUBTYPE OF (External_item_identification);
WHERE
	WR1 : 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FILE' IN TYPEOF(SELF\External_source_identification.item);
END_ENTITY; -- File_location_identification


ENTITY Hardcopy
	SUBTYPE OF (File);
END_ENTITY; -- Hardcopy


ENTITY Numerical_representation_context
	SUBTYPE OF (Representation_context);
	units : OPTIONAL SET [1:?] OF Unit;
	accuracies : OPTIONAL SET [1:?] OF Uncertainty_with_unit;
END_ENTITY; -- Numerical_representation_context


ENTITY Representation;
	id : OPTIONAL STRING;
	name : OPTIONAL STRING;
	description : OPTIONAL STRING;
	context_of_items : Representation_context;
	items : SET [1:?] OF Representation_item;
WHERE
	WR1 : EXISTS(name)OR(TYPEOF(SELF\Representation)<> TYPEOF(SELF));
END_ENTITY; -- Representation


ENTITY Representation_context;
	id : STRING;
	kind : STRING;
INVERSE
	representations_in_context: SET [1:?] OF Representation FOR context_of_items;
END_ENTITY; -- Representation_context


ENTITY Representation_item
	ABSTRACT SUPERTYPE;
	name : OPTIONAL STRING;
END_ENTITY; -- Representation_item


ENTITY Representation_relationship;
	relation_type : OPTIONAL STRING;
	description : OPTIONAL STRING;
	rep_1 : Representation;
	rep_2 : Representation;
WHERE
	WR1 : EXISTS(relation_type)OR(TYPEOF(SELF\Representation_relationship)<> TYPEOF(SELF));
	WR2 : EXISTS(description)OR(TYPEOF(SELF\Representation_relationship)<> TYPEOF(SELF));
END_ENTITY; -- Representation_relationship


ENTITY String_representation_item
	SUBTYPE OF (Representation_item);
	string_value : STRING;
END_ENTITY; -- String_representation_item


ENTITY Functional_usage_view_to_part_terminal_assignment;
	physical_usage_view_terminal : Part_terminal;
	functional_usage_view_terminal : Scalar_terminal_definition;
UNIQUE
	UR1 : functional_usage_view_terminal, physical_usage_view_terminal;
END_ENTITY; -- Functional_usage_view_to_part_terminal_assignment


ENTITY Part_connected_terminals_definition;
	name : STRING;
	associated_definition : Part_usage_view;
	connected_terminals : SET [2:?] OF Part_terminal;
UNIQUE
	UR1 : name, associated_definition;
WHERE
	WR1 : SIZEOF(QUERY(ct <* connected_terminals | NOT(associated_definition = ct\Shape_element.containing_shape)))= 0;
END_ENTITY; -- Part_connected_terminals_definition


ENTITY Part_terminal
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Part_feature);
INVERSE
	connection_requirement: SET [0:1] OF Part_connected_terminals_definition FOR connected_terminals;
	functional_usage_view_terminal: SET [0:1] OF Functional_usage_view_to_part_terminal_assignment FOR physical_usage_view_terminal;
END_ENTITY; -- Part_terminal


ENTITY Design_functional_unit_allocation_to_assembly_joint;
	functional_design_definition_path : Design_composition_path;
	implementation : Assembly_joint;
UNIQUE
	UR1 : functional_design_definition_path;
END_ENTITY; -- Design_functional_unit_allocation_to_assembly_joint


ENTITY Component_swap_specification
	SUBTYPE OF (Change_design_object_management_relationship);
	SELF\Change_design_object_management_relationship.current_design_object : Design_functional_unit_allocation_to_assembly_component;
	SELF\Change_design_object_management_relationship.previous_design_object : Design_functional_unit_allocation_to_assembly_component;
END_ENTITY; -- Component_swap_specification


ENTITY Design_composition_path;
	path_element : SET [1:?] OF Functional_unit;
	design_functional_unit : Functional_unit;
END_ENTITY; -- Design_composition_path


ENTITY Design_functional_unit_allocation_to_assembly_component;
	functional_design_definition_path : Design_composition_path;
	implementation : Assembly_component;
	global_swappable : BOOLEAN;
	local_swappable : BOOLEAN;
	of_property : OPTIONAL SET [1:?] OF Property_value_representation;
	path_alias : STRING;
	swap_code : STRING;
UNIQUE
	UR1 : implementation, path_alias;
END_ENTITY; -- Design_functional_unit_allocation_to_assembly_component


ENTITY Design_functional_unit_allocation_to_reference_functional_unit;
	reference_definition_path : Reference_composition_path;
	design_definition_path : Design_composition_path;
END_ENTITY; -- Design_functional_unit_allocation_to_reference_functional_unit


ENTITY Gate_path_swap_specification
	SUBTYPE OF (Change_design_object_management_relationship);
	SELF\Change_design_object_management_relationship.current_design_object : Design_functional_unit_allocation_to_reference_functional_unit;
	SELF\Change_design_object_management_relationship.previous_design_object : Design_functional_unit_allocation_to_reference_functional_unit;
END_ENTITY; -- Gate_path_swap_specification


ENTITY Reference_composition_path;
	path_element : SET [1:?] OF Functional_unit;
	reference_functional_unit : Functional_unit;
END_ENTITY; -- Reference_composition_path


ENTITY Reference_functional_unit_assignment_to_part;
	functional_design_definition_path : Reference_composition_path;
	implementation : Part_view_definition;
	of_property : OPTIONAL SET [1:?] OF Property_value_representation;
	path_alias : STRING;
	swap_code : OPTIONAL STRING;
UNIQUE
	UR1 : implementation, path_alias;
END_ENTITY; -- Reference_functional_unit_assignment_to_part


ENTITY Reference_functional_unit_assignment_to_template;
	functional_design_definition_path : Reference_composition_path;
	implementation : Template_definition;
	of_property : OPTIONAL SET [1:?] OF Property_value_representation;
	path_alias : STRING;
	swap_code : OPTIONAL STRING;
UNIQUE
	UR1 : implementation, path_alias;
END_ENTITY; -- Reference_functional_unit_assignment_to_template


ENTITY Terminal_swap_specification
	SUBTYPE OF (Change_design_object_management_relationship);
	SELF\Change_design_object_management_relationship.current_design_object : Functional_unit_terminal_node_assignment;
	SELF\Change_design_object_management_relationship.previous_design_object : Functional_unit_terminal_node_assignment;
END_ENTITY; -- Terminal_swap_specification


ENTITY Aggregate_connectivity_requirement;
	connectivity_requirement : Functional_unit_network_node_definition;
	design_definition_path : design_composition_path_or_root;
UNIQUE
	UR1 : design_definition_path, connectivity_requirement;
WHERE
	WR1 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FUNCTIONAL_UNIT_NETWORK_DEFINITION' IN TYPEOF(design_definition_path))OR(connectivity_requirement.associated_functional_unit_definition = design_definition_path);
	WR2 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.DESIGN_COMPOSITION_PATH' IN TYPEOF(design_definition_path))OR(connectivity_requirement.associated_functional_unit_definition = design_definition_path.design_functional_unit.definition);
END_ENTITY; -- Aggregate_connectivity_requirement


ENTITY Connectivity_allocation;
	implementation : Physical_connectivity_definition;
	connectivity_requirement : Aggregate_connectivity_requirement;
UNIQUE
	UR1 : implementation;
END_ENTITY; -- Connectivity_allocation


ENTITY Functional_specification;
	associated_definition : Functional_specification_definition;
	reference_signal : Signal_specification;
	characterizing_functional_unit : Functional_unit;
	characterizing_signal : Signal_specification;
INVERSE
	characteristic_category: External_source_identification FOR item;
WHERE
	WR1 : characterizing_functional_unit.composed_network = associated_definition;
END_ENTITY; -- Functional_specification


ENTITY Functional_specification_definition
	SUBTYPE OF (Functional_unit_network_definition);
INVERSE
	composing_specification: SET [1:?] OF Functional_specification FOR associated_definition;
END_ENTITY; -- Functional_specification_definition


ENTITY Signal_specification;
	measurement_access_mechanism : Functional_unit_terminal;
	reference_access_mechanism : OPTIONAL Functional_unit_terminal;
	minimum_characteristic : Signal_property;
	maximum_characteristic : Signal_property;
	characterization_network : Functional_unit_network_definition;
DERIVE
	measurement_condition : SET [1:1] OF Document_definition := get_document_definition(SELF, 'measurement condition', 
  			'SPECIFICATION_DOCUMENT_ARM.TEST_SPECIFICATION');
END_ENTITY; -- Signal_specification


ENTITY Equivalent_functional_terminals_assignment;
	name : STRING;
	equivalent_terminals : SET [2:?] OF Functional_unit_usage_view_terminal_definition;
END_ENTITY; -- Equivalent_functional_terminals_assignment


ENTITY Equivalent_functional_unit_definition_assignment;
	name : STRING;
	equivalent_functional_unit_definitions : SET [2:?] OF Functional_unit_definition;
END_ENTITY; -- Equivalent_functional_unit_definition_assignment


ENTITY Functional_product
	SUBTYPE OF (Information_product);
UNIQUE
	UR1 : id;
WHERE
	WR1 : SIZEOF([ 'functional' ] * types_of_product(SELF))= 1;
END_ENTITY; -- Functional_product


ENTITY Functional_terminal_group;
	name : STRING;
	group_description : STRING;
	group_type : STRING;
UNIQUE
	UR1 : name;
END_ENTITY; -- Functional_terminal_group


ENTITY Functional_terminal_group_assignment;
	composed_group : Functional_terminal_group;
	functional_usage_view_terminal : Scalar_terminal_definition;
END_ENTITY; -- Functional_terminal_group_assignment


ENTITY Functional_unit_definition
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Information_definition);
	SELF\Product_view_definition.defined_version : Functional_version;
END_ENTITY; -- Functional_unit_definition


ENTITY Functional_unit_make_from_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.related_view : Functional_unit_usage_view;
	SELF\View_definition_relationship.relating_view : Functional_unit_usage_view;
END_ENTITY; -- Functional_unit_make_from_relationship


ENTITY Functional_unit_usage_view
	SUBTYPE OF (Functional_unit_definition);
DERIVE
	analytical_model_application_reference : SET [0:?] OF Analytical_model_application := bag_to_set(USEDIN(access_mechanism[1],'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'));
INVERSE
	access_mechanism: SET [1:?] OF Functional_unit_usage_view_terminal_definition FOR associated_functional_unit_definition;
WHERE
	WR1 : SIZEOF(analytical_model_application_reference)<= 1;
	WR2 : NOT(SIZEOF(analytical_model_application_reference)= 1)OR
       (SIZEOF(QUERY(am <* access_mechanism |
           NOT((SIZEOF(USEDIN(am,'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'))= 0)OR
             (SIZEOF(QUERY(ampa <* USEDIN(am, 'ANALYTICAL_MODEL_ARM.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM')|
                 NOT(analytical_model_application_reference[1] :=: ampa.associated_analytical_model_application)
                ))= 0))
       ))= 0);
END_ENTITY; -- Functional_unit_usage_view


ENTITY Functional_unit_usage_view_terminal_definition
	SUPERTYPE OF (Scalar_terminal_definition);
	associated_functional_unit_definition : Functional_unit_usage_view;
	signal_name : STRING;
UNIQUE
	UR1 : signal_name, associated_functional_unit_definition;
END_ENTITY; -- Functional_unit_usage_view_terminal_definition


ENTITY Functional_unit_usage_view_terminal_definition_make_from_relationship;
	associated_make_from : Functional_unit_make_from_relationship;
	reusable_feature : Functional_unit_usage_view_terminal_definition;
	resultant_feature : Functional_unit_usage_view_terminal_definition;
UNIQUE
	UR1 : reusable_feature, resultant_feature;
WHERE
	WR1 : reusable_feature :<>: resultant_feature;
	WR2 : reusable_feature.associated_functional_unit_definition :<>: resultant_feature.associated_functional_unit_definition;
END_ENTITY; -- Functional_unit_usage_view_terminal_definition_make_from_relationship


ENTITY Functional_version
	SUBTYPE OF (Information_version);
	SELF\Product_version.of_product : Functional_product;
END_ENTITY; -- Functional_version


ENTITY Scalar_terminal_definition
	SUBTYPE OF (Functional_unit_usage_view_terminal_definition);
END_ENTITY; -- Scalar_terminal_definition


ENTITY Scalar_terminal_definition_link;
	precedent_terminal_definition : Scalar_terminal_definition;
	subsequent_terminal_definition : Scalar_terminal_definition;
UNIQUE
	UR1 : precedent_terminal_definition, subsequent_terminal_definition;
WHERE
	WR1 : precedent_terminal_definition :<>: subsequent_terminal_definition;
END_ENTITY; -- Scalar_terminal_definition_link


ENTITY Data_environment;
	environment_name : STRING;
	description : OPTIONAL STRING;
	environment_characterization : SET [1:?] OF dependent_or_independent_property_representation;
END_ENTITY; -- Data_environment


ENTITY Material_identification;
	material_name : STRING;
	items : SET [1:?] OF material_item_select;
END_ENTITY; -- Material_identification


ENTITY Material_property_association;
	described_material : Material_identification;
	associated_property_value : Material_property_value_representation;
	definitional : OPTIONAL BOOLEAN;
END_ENTITY; -- Material_property_association


ENTITY Material_property_value_representation
	SUBTYPE OF (Property_representation);
	environment_condition : Data_environment;
	SELF\Property_representation.property : Applied_independent_property;
WHERE
	WR1 : 'MATERIAL_ASPECTS_ARM.PDM_MATERIAL_PROPERTY' IN TYPEOF(SELF\Property_representation.property.base_independent_property);
END_ENTITY; -- Material_property_value_representation


ENTITY Pdm_material_property
	SUBTYPE OF (Independent_property);
END_ENTITY; -- Pdm_material_property


ENTITY Definition_based_product_occurrence
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Product_occurrence);
	derived_from : Product_view_definition;
WHERE
	WR1 : SELF\Product_view_definition.defined_version = derived_from.defined_version;
END_ENTITY; -- Definition_based_product_occurrence


ENTITY Product_occurrence
	ABSTRACT SUPERTYPE OF ((ONEOF (Definition_based_product_occurrence, Specification_based_product_occurrence) AND ONEOF (Product_occurrence_with_quantity, Single_instance)))
	SUBTYPE OF (Product_view_definition);
INVERSE
	occurrence_contexts: SET [1:?] OF View_definition_relationship FOR related_view;
END_ENTITY; -- Product_occurrence


ENTITY Product_occurrence_with_quantity
	ABSTRACT SUPERTYPE OF (ONEOF (Quantified_instance, Selected_instance))
	SUBTYPE OF (Product_occurrence);
	occurrence_quantity : OPTIONAL extended_value_with_unit;
END_ENTITY; -- Product_occurrence_with_quantity


ENTITY Quantified_instance
	SUBTYPE OF (Product_occurrence_with_quantity);
	SELF\Product_occurrence_with_quantity.occurrence_quantity : Value_with_unit;
END_ENTITY; -- Quantified_instance


ENTITY Selected_instance
	SUBTYPE OF (Product_occurrence_with_quantity);
	quantity_criterion : OPTIONAL STRING;
END_ENTITY; -- Selected_instance


ENTITY Single_instance
	SUBTYPE OF (Product_occurrence);
END_ENTITY; -- Single_instance


ENTITY Specification_based_product_occurrence
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Product_occurrence);
	SELF\Product_view_definition.defined_version : Specification_based_product_version;
END_ENTITY; -- Specification_based_product_occurrence


ENTITY Angularity_tolerance
	SUBTYPE OF (Geometric_tolerance);
	reference_datum : SET [1:2] OF Datum_reference;
END_ENTITY; -- Angularity_tolerance


ENTITY Circular_runout_tolerance
	SUBTYPE OF (Geometric_tolerance);
	angle : OPTIONAL REAL;
	reference_datum : SET [1:2] OF Datum_reference;
END_ENTITY; -- Circular_runout_tolerance


ENTITY Coaxiality_tolerance
	SUBTYPE OF (Geometric_tolerance);
	reference_datum : SET [1:2] OF Datum_reference;
END_ENTITY; -- Coaxiality_tolerance


ENTITY Common_datum
	SUBTYPE OF (Datum);
	made_up_by : SET [2:?] OF Single_datum;
END_ENTITY; -- Common_datum


ENTITY Concentricity_tolerance
	SUBTYPE OF (Geometric_tolerance);
	reference_datum : SET [1:2] OF Datum_reference;
END_ENTITY; -- Concentricity_tolerance


ENTITY Cylindricity_tolerance
	SUBTYPE OF (Geometric_tolerance);
END_ENTITY; -- Cylindricity_tolerance


ENTITY Datum;
END_ENTITY; -- Datum


ENTITY Datum_defined_by_derived_shape
	SUBTYPE OF (Derived_geometry, Single_datum);
END_ENTITY; -- Datum_defined_by_derived_shape


ENTITY Datum_defined_by_feature
	SUBTYPE OF (Single_datum);
	defined_by : Shape_element;
END_ENTITY; -- Datum_defined_by_feature


ENTITY Datum_defined_by_targets
	SUBTYPE OF (Single_datum);
	defined_by : SET [1:?] OF Datum_target;
	rule_description : STRING;
END_ENTITY; -- Datum_defined_by_targets


ENTITY Datum_reference;
	precedence : INTEGER;
	referenced_datum : Datum;
END_ENTITY; -- Datum_reference


ENTITY Datum_target;
	id : STRING;
END_ENTITY; -- Datum_target


ENTITY Flatness_tolerance
	SUBTYPE OF (Geometric_tolerance);
END_ENTITY; -- Flatness_tolerance


ENTITY Geometric_tolerance
	ABSTRACT SUPERTYPE OF (ONEOF (Angularity_tolerance, Circular_runout_tolerance, Coaxiality_tolerance, Concentricity_tolerance, Cylindricity_tolerance, Flatness_tolerance, Line_profile_tolerance, Parallelism_tolerance, Perpendicularity_tolerance, Position_tolerance, Roundness_tolerance, Straightness_tolerance, Surface_profile_tolerance, Symmetry_tolerance, Total_runout_tolerance));
	name : OPTIONAL STRING;
	applied_to : Shape_element;
	modification : OPTIONAL tolerance_condition;
	qualifying_note : OPTIONAL STRING;
	segment_size : OPTIONAL Value_with_unit;
	significant_digits : OPTIONAL INTEGER;
	tolerance_value : Value_with_unit;
	value_determination : OPTIONAL STRING;
WHERE
	WR1 : (NOT(EXISTS(segment_size)))OR('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.LENGTH_MEASURE' IN TYPEOF(segment_size.value_component));
	WR2 : (NOT(EXISTS(tolerance_value)))OR('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.LENGTH_MEASURE' IN TYPEOF(tolerance_value.value_component));
	WR3 : (NOT(EXISTS(significant_digits)))OR(significant_digits > 0);
END_ENTITY; -- Geometric_tolerance


ENTITY Geometric_tolerance_relationship;
	relation_type : STRING;
	relating : Geometric_tolerance;
	related : Geometric_tolerance;
END_ENTITY; -- Geometric_tolerance_relationship


ENTITY Line_profile_tolerance
	SUBTYPE OF (Geometric_tolerance);
	affected_plane : OPTIONAL Axis_placement;
	reference_datum : SET [0:3] OF Datum_reference;
END_ENTITY; -- Line_profile_tolerance


ENTITY Parallelism_tolerance
	SUBTYPE OF (Geometric_tolerance);
	affected_plane : OPTIONAL Axis_placement;
	reference_datum : SET [1:2] OF Datum_reference;
END_ENTITY; -- Parallelism_tolerance


ENTITY Perpendicularity_tolerance
	SUBTYPE OF (Geometric_tolerance);
	affected_plane : OPTIONAL Axis_placement;
	reference_datum : SET [1:3] OF Datum_reference;
END_ENTITY; -- Perpendicularity_tolerance


ENTITY Placed_target
	ABSTRACT SUPERTYPE OF (ONEOF (Target_circle, Target_point, Target_rectangle, Target_straight_line))
	SUBTYPE OF (Datum_target);
	defined_in : Geometric_coordinate_space;
	parameter_reference : Axis_placement;
END_ENTITY; -- Placed_target


ENTITY Position_tolerance
	SUBTYPE OF (Geometric_tolerance);
	affected_plane : OPTIONAL Axis_placement;
	reference_datum : SET [0:3] OF Datum_reference;
END_ENTITY; -- Position_tolerance


ENTITY Projection
	SUBTYPE OF (Tolerance_zone_definition);
	projection_end : Shape_element;
	projection_length : Value_with_unit;
END_ENTITY; -- Projection


ENTITY Roundness_tolerance
	SUBTYPE OF (Geometric_tolerance);
END_ENTITY; -- Roundness_tolerance


ENTITY Single_datum
	SUBTYPE OF (Datum);
	datum_name : STRING;
	modification : OPTIONAL tolerance_condition;
END_ENTITY; -- Single_datum


ENTITY Straightness_tolerance
	SUBTYPE OF (Geometric_tolerance);
	affected_plane : OPTIONAL Axis_placement;
END_ENTITY; -- Straightness_tolerance


ENTITY Surface_profile_tolerance
	SUBTYPE OF (Geometric_tolerance);
	reference_datum : SET [0:3] OF Datum_reference;
END_ENTITY; -- Surface_profile_tolerance


ENTITY Symmetry_tolerance
	SUBTYPE OF (Geometric_tolerance);
	affected_plane : OPTIONAL Axis_placement;
	reference_datum : SET [1:3] OF Datum_reference;
END_ENTITY; -- Symmetry_tolerance


ENTITY Target_area
	SUBTYPE OF (Datum_target);
END_ENTITY; -- Target_area


ENTITY Target_circle
	SUBTYPE OF (Placed_target);
	diameter : Numerical_item_with_unit;
END_ENTITY; -- Target_circle


ENTITY Target_point
	SUBTYPE OF (Placed_target);
END_ENTITY; -- Target_point


ENTITY Target_rectangle
	SUBTYPE OF (Placed_target);
	target_length : Numerical_item_with_unit;
	target_width : Numerical_item_with_unit;
END_ENTITY; -- Target_rectangle


ENTITY Target_straight_line
	SUBTYPE OF (Placed_target);
END_ENTITY; -- Target_straight_line


ENTITY Tolerance_zone;
	form_type : STRING;
	zone_for : SET [1:?] OF Geometric_tolerance;
END_ENTITY; -- Tolerance_zone


ENTITY Tolerance_zone_definition;
	defining : Tolerance_zone;
	first_element : Shape_element;
	second_element : OPTIONAL Shape_element;
END_ENTITY; -- Tolerance_zone_definition


ENTITY Total_runout_tolerance
	SUBTYPE OF (Geometric_tolerance);
	angle : REAL;
	reference_datum : SET [1:2] OF Datum_reference;
END_ENTITY; -- Total_runout_tolerance


ENTITY Group;
	id : OPTIONAL STRING;
	name : STRING;
	description : OPTIONAL STRING;
	elements : SET [0:?] OF groupable_item;
	membership_meaning : OPTIONAL STRING;
END_ENTITY; -- Group


ENTITY Group_relationship;
	description : OPTIONAL STRING;
	relation_type : STRING;
	relating_group : Group;
	related_group : Group;
END_ENTITY; -- Group_relationship


ENTITY Identification_assignment;
	identifier : STRING;
	role : STRING;
	description : OPTIONAL STRING;
	items : SET [1:?] OF identification_item;
END_ENTITY; -- Identification_assignment


ENTITY Incomplete_reference_marking
	SUBTYPE OF (Classification_assignment);
WHERE
	WR1 : SIZEOF(QUERY(item <* SELF\Classification_assignment.items | 
	NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.IDRM_MARKED_ITEM' IN TYPEOF(item))))= 0;
	WR2 : SELF\Classification_assignment.assigned_class.id = 'reference';
END_ENTITY; -- Incomplete_reference_marking


ENTITY Independent_property;
	id : STRING;
	property_type : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Independent_property


ENTITY Independent_property_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating : Independent_property;
	related : Independent_property;
END_ENTITY; -- Independent_property_relationship


ENTITY Independent_property_representation;
	description : OPTIONAL STRING;
	property : Independent_property;
	rep : Representation;
	role : OPTIONAL STRING;
END_ENTITY; -- Independent_property_representation


ENTITY Information_definition
	SUBTYPE OF (Product_view_definition);
	SELF\Product_view_definition.defined_version : Information_version;
END_ENTITY; -- Information_definition


ENTITY Information_product
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Product);
WHERE
	WR1 : SIZEOF(['document', 'information'] * types_of_product(SELF))= 0;
END_ENTITY; -- Information_product


ENTITY Information_version
	SUBTYPE OF (Product_version);
	SELF\Product_version.of_product : Information_product;
END_ENTITY; -- Information_version


ENTITY Interface_component
	SUBTYPE OF (Physical_component);
INVERSE
	access_mechanism: SET [1:?] OF Physical_component_interface_terminal FOR associated_component;
END_ENTITY; -- Interface_component


ENTITY Physical_component_interface_terminal
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Physical_component_feature);
	SELF\Component_feature.associated_component : Interface_component;
END_ENTITY; -- Physical_component_interface_terminal


ENTITY Assembled_part_association
	SUBTYPE OF (Part_occurrence_definition_relationship, Assembly_component_relationship);
	SELF\View_definition_relationship.relating_view : Assembly_definition;
END_ENTITY; -- Assembled_part_association


ENTITY Assembly_definition
	SUBTYPE OF (Part_view_definition);
WHERE
	WR1 : 'assembly' IN types_of_product(SELF\Product_view_definition.defined_version.of_product);
END_ENTITY; -- Assembly_definition


ENTITY Geometrical_relationship
	SUBTYPE OF (Part_definition_relationship);
	definition_placement : template_instance;
DERIVE
	SELF\View_definition_relationship.relation_type : STRING := 'geometrical relationship';
END_ENTITY; -- Geometrical_relationship


ENTITY Part_definition_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.related_view : Part_view_definition;
	SELF\View_definition_relationship.relating_view : Part_view_definition;
END_ENTITY; -- Part_definition_relationship


ENTITY Measure_item
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Representation_item);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS'))>0;
END_ENTITY; -- Measure_item


ENTITY Numerical_item_with_global_unit
	SUBTYPE OF (Measure_item);
	value_component : measure_value;
WHERE
	WR1 : SIZEOF(QUERY(pvr <* QUERY(r <* USEDIN(SELF, 'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS')| 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PROPERTY_VALUE_REPRESENTATION' IN TYPEOF(r))| EXISTS(pvr.context_of_items.units)))> 0;
END_ENTITY; -- Numerical_item_with_global_unit


ENTITY Numerical_item_with_unit
	SUBTYPE OF (Measure_item, Value_with_unit);
END_ENTITY; -- Numerical_item_with_unit


ENTITY Property_value_representation
	SUBTYPE OF (Representation);
	SELF\Representation.context_of_items : Numerical_representation_context;
END_ENTITY; -- Property_value_representation


ENTITY Category_model_parameter
	SUBTYPE OF (Model_parameter, Classification_attribute);
END_ENTITY; -- Category_model_parameter


ENTITY Model_parameter
	SUBTYPE OF (Independent_property);
	unit_of_measure : OPTIONAL Unit;
	valid_range : OPTIONAL SET [1:?] OF Value_range;
	default_value : OPTIONAL scalar_or_coordinated_characteristics;
DERIVE
	reference_document : SET [0:?] OF Document_definition := get_document_definition(SELF, 'reference document', 
  			'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION');
WHERE
	WR1 : EXISTS(reference_document)AND(SIZEOF(reference_document)= 1);
END_ENTITY; -- Model_parameter


ENTITY Parameter_assignment
	SUBTYPE OF (Independent_property_representation);
	SELF\Independent_property_representation.property : Model_parameter;
END_ENTITY; -- Parameter_assignment


ENTITY Parameter_assignment_override;
	overridden_parameter_assignment : Parameter_assignment;
	overriding_parameter_assignment : Parameter_assignment;
END_ENTITY; -- Parameter_assignment_override


ENTITY Product_specific_parameter_value_assignment;
	of_product : Product;
	assigned_parameter : Parameter_assignment;
DERIVE
	the_model_parameter : Model_parameter := assigned_parameter\Independent_property_representation.property;
UNIQUE
	UR1 : the_model_parameter, of_product;
END_ENTITY; -- Product_specific_parameter_value_assignment


ENTITY Schema_based_model_parameter
	SUBTYPE OF (Model_parameter);
	entity_name : STRING;
	attribute_name : OPTIONAL STRING;
	SELF\Independent_property.property_type RENAMED schema_identifier : STRING;
UNIQUE
	UR1 : entity_name, attribute_name, schema_identifier;
END_ENTITY; -- Schema_based_model_parameter


ENTITY Test_method_based_parameter_assignment
	SUBTYPE OF (Parameter_assignment);
WHERE
	WR1 : SIZEOF(USEDIN(SELF,'ACTIVITY_METHOD_ASSIGNMENT_ARM.APPLIED_ACTIVITY_METHOD_ASSIGNMENT.ITEMS'))= 1;
END_ENTITY; -- Test_method_based_parameter_assignment


ENTITY Attribute_translation_assignment;
	considered_instance : string_select;
	considered_attribute : STRING;
	translation_text : STRING;
	translation_language : Language;
UNIQUE
	UR1 : considered_instance, considered_attribute, translation_language;
END_ENTITY; -- Attribute_translation_assignment


ENTITY Language;
	language_code : STRING;
	country_code : OPTIONAL STRING;
UNIQUE
	UR1 : language_code;
END_ENTITY; -- Language


ENTITY Language_indication;
	considered_instance : string_select;
	considered_attribute : STRING;
	used_language : Language;
END_ENTITY; -- Language_indication


ENTITY Name_assignment;
	name : STRING;
	role : STRING;
	items : assigned_name_select;
END_ENTITY; -- Name_assignment


ENTITY Bus_element_link;
	precedent_element : bus_structural_definition_or_node;
	subsequent_element : bus_structural_definition_or_node;
UNIQUE
	UR1 : precedent_element, subsequent_element;
WHERE
	WR1 : precedent_element <> subsequent_element;
END_ENTITY; -- Bus_element_link


ENTITY Bus_structural_definition;
	bus_name : STRING;
	composition : SET [1:?] OF Bus_element_link;
INVERSE
	external_bus_access: SET [0:1] OF Functional_unit_network_terminal_definition_bus_assignment FOR connected_bus;
UNIQUE
	UR1 : bus_name;
WHERE
	WR1 : consistent_bus_structural_definition(composition);
END_ENTITY; -- Bus_structural_definition


ENTITY Functional_unit
	SUBTYPE OF (Definition_based_product_occurrence);
	functional_property : OPTIONAL SET [1:?] OF Parameter_assignment_override;
	SELF\Definition_based_product_occurrence.derived_from RENAMED definition : Functional_unit_definition;
	SELF\Product_view_definition.id RENAMED reference_designation : STRING;
DERIVE
	composed_network : Functional_unit_network_definition := SELF\Product_occurrence.occurrence_contexts[1].relating_view;
	SELF\Product_view_definition.defined_version : Product_version := SELF\Definition_based_product_occurrence.derived_from.defined_version;
INVERSE
	access_mechanisms: SET [1:?] OF Functional_unit_terminal FOR accessed_functional_unit;
UNIQUE
	UR1 : reference_designation, composed_network;
WHERE
	WR1 : SIZEOF(SELF\Product_occurrence.occurrence_contexts)= 1;
	WR2 : EXISTS(composed_network);
END_ENTITY; -- Functional_unit


ENTITY Functional_unit_network_definition
	SUBTYPE OF (Functional_unit_definition);
	usage_view : Functional_unit_usage_view;
END_ENTITY; -- Functional_unit_network_definition


ENTITY Functional_unit_network_node_definition
	SUBTYPE OF (Product_view_definition);
	associated_functional_unit_definition : Functional_unit_network_definition;
	SELF\Product_view_definition.additional_characterization RENAMED functional_unit_network_node_name : STRING;
DERIVE
	SELF\Product_view_definition.defined_version : Functional_version := associated_functional_unit_definition.defined_version;
	valid_conservative_node : BOOLEAN := ((SIZEOF (USEDIN(SELF  ,
        'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.BUS_ELEMENT_LINK.PRECEDENT_ELEMENT'))
        + SIZEOF(USEDIN(SELF  ,
        'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.BUS_ELEMENT_LINK.SUBSEQUENT_ELEMENT')
      )+ SIZEOF (USEDIN(SELF ,
        'NETWORK_FUNCTIONAL_DESIGN_VIEW_ARM.FUNCTIONAL_UNIT_TERMINAL_NODE_ASSIGNMENT.COMPOSED_NODE'
       ))+ SIZEOF(external_node_access))> 1);
INVERSE
	external_node_access: SET [0:1] OF Functional_unit_network_terminal_definition_node_assignment FOR composed_node;
UNIQUE
	UR1 : functional_unit_network_node_name, associated_functional_unit_definition;
WHERE
	WR1 : EXISTS(valid_conservative_node);
END_ENTITY; -- Functional_unit_network_node_definition


ENTITY Functional_unit_network_terminal_definition_bus_assignment;
	connected_bus : Bus_structural_definition;
	connected_terminal : Functional_unit_usage_view_terminal_definition;
UNIQUE
	UR1 : connected_bus, connected_terminal;
END_ENTITY; -- Functional_unit_network_terminal_definition_bus_assignment


ENTITY Functional_unit_network_terminal_definition_node_assignment;
	composed_node : Functional_unit_network_node_definition;
	connected_terminal : Functional_unit_usage_view_terminal_definition;
UNIQUE
	UR1 : composed_node, connected_terminal;
END_ENTITY; -- Functional_unit_network_terminal_definition_node_assignment


ENTITY Functional_unit_terminal;
	accessed_functional_unit : Functional_unit;
	definition : Functional_unit_usage_view_terminal_definition;
INVERSE
	bus_assignment: SET [0:1] OF Functional_unit_terminal_bus_assignment FOR connected_terminal;
	node_assignment: SET [0:1] OF Functional_unit_terminal_node_assignment FOR connected_terminal;
END_ENTITY; -- Functional_unit_terminal


ENTITY Functional_unit_terminal_bus_assignment;
	connected_bus : Bus_structural_definition;
	connected_terminal : Functional_unit_terminal;
END_ENTITY; -- Functional_unit_terminal_bus_assignment


ENTITY Functional_unit_terminal_node_assignment;
	composed_node : Functional_unit_network_node_definition;
	connected_terminal : Functional_unit_terminal;
END_ENTITY; -- Functional_unit_terminal_node_assignment


ENTITY Design_view_level_non_feature_shape_model
	SUBTYPE OF (Non_feature_shape_model);
	SELF\Non_feature_shape_model.model_shape : Physical_unit_shape_model;
WHERE
	WR1 : SELF\Geometric_model.context_of_items :=: SELF\Non_feature_shape_model.model_shape\Geometric_model.context_of_items;
	WR2 : SIZEOF(USEDIN(SELF, 'EXTENDED_BASIC_GEOMETRY_ARM.GEOMETRIC_MODEL_RELATIONSHIP.REP_1'))= 0;
	WR3 : SIZEOF(USEDIN(SELF, 'CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT_OPERATION.TEMPLATE_DEFINITION'))= 0;
	WR4 : SELF\Non_feature_shape_model.associated_element.scope :=:
           SELF\Non_feature_shape_model.model_shape\Physical_unit_shape_model.shape_characterized_definition;
END_ENTITY; -- Design_view_level_non_feature_shape_model


ENTITY Interface_plane
	SUBTYPE OF (Non_feature_shape_element);
WHERE
	WR1 : (SELF\Shape_element.element_name = 'interface plane');
END_ENTITY; -- Interface_plane


ENTITY Non_feature_shape_element
	SUBTYPE OF (Shape_element);
	SELF\Shape_element.element_name : STRING;
	SELF\Shape_element.containing_shape RENAMED scope : ee_product_definition_with_annotation_elements;
INVERSE
	associated_usage_concept: SET [0:?] OF Geometric_model_constituent_relationship FOR constituent_element;
	element_shape: SET [0:?] OF Non_feature_shape_model FOR associated_element;
UNIQUE
	UR1 : element_name, scope;
WHERE
	WR1 : (NOT(SIZEOF(associated_usage_concept)> 0))OR(SIZEOF(SELF\Placed_feature.feature_shape)> 0);
END_ENTITY; -- Non_feature_shape_element


ENTITY Non_feature_shape_element_relationship
	SUBTYPE OF (Shape_element_relationship);
	SELF\Shape_element_relationship.related : Non_feature_shape_element;
	SELF\Shape_element_relationship.relating : Non_feature_shape_element;
UNIQUE
	UR1 : related, relating;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element_relationship.relation_type);
END_ENTITY; -- Non_feature_shape_element_relationship


ENTITY Non_feature_shape_model
	SUPERTYPE OF (ONEOF (Design_view_level_non_feature_shape_model, Usage_view_level_non_feature_shape_model))
	SUBTYPE OF (Geometric_model);
	associated_element : Non_feature_shape_element;
	model_shape : OPTIONAL Geometric_model;
WHERE
	WR1 : TYPEOF(SELF)<> TYPEOF(model_shape);
	WR2 : NOT EXISTS(SELF\Representation.id);
	WR3 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;
END_ENTITY; -- Non_feature_shape_model


ENTITY Reference_graphic_registration_mark
	SUBTYPE OF (Non_feature_shape_element);
END_ENTITY; -- Reference_graphic_registration_mark


ENTITY Seating_plane
	SUBTYPE OF (Non_feature_shape_element);
END_ENTITY; -- Seating_plane


ENTITY Usage_view_level_non_feature_shape_model
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Non_feature_shape_model);
	SELF\Non_feature_shape_model.model_shape : view_shape_select;
WHERE
	WR1 : SELF\Geometric_model.context_of_items = SELF\Non_feature_shape_model.model_shape\Geometric_model.context_of_items;
END_ENTITY; -- Usage_view_level_non_feature_shape_model


ENTITY View_level_non_feature_shape_element
	SUBTYPE OF (Non_feature_shape_element);
WHERE
	WR1 : NOT(SIZEOF(SELF\Non_feature_shape_element.element_shape)> 0)OR
      valid_es('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.USAGE_VIEW_LEVEL_NON_FEATURE_SHAPE_MODEL',
     (SELF\Non_feature_shape_element.element_shape));
	WR2 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- View_level_non_feature_shape_element


ENTITY Connection_zone_in_part_feature_template_definition
	SUBTYPE OF (Connection_zone);
DERIVE
	associated_definition : Part_feature_template_definition := containing_shape.described_element;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.element_name);
END_ENTITY; -- Connection_zone_in_part_feature_template_definition


ENTITY Connection_zone_package_interface_plane_relationship;
	interface_plane : interface_plane_or_seating_plane;
	mating_zone : Connection_zone_in_part_feature_template_definition;
	derived_zone : Connection_zone_in_part_feature_template_definition;
	derived_zone_shape_class : STRING;
INVERSE
	associated_package_terminal: SET [0:1] OF Package_terminal_template_definition FOR seating_plane_zone;
UNIQUE
	UR1 : interface_plane, mating_zone;
WHERE
	WR1 : derived_zone_shape_class IN ['area','edge'];
END_ENTITY; -- Connection_zone_package_interface_plane_relationship


ENTITY Functional_orientation_feature
	SUBTYPE OF (Part_feature);
	associated_body_vertical_extent : OPTIONAL SET [1:2] OF Package_body_surface;
	associated_terminal : Primary_reference_terminal;
END_ENTITY; -- Functional_orientation_feature


ENTITY Guided_wave_terminal
	SUBTYPE OF (Package_terminal);
END_ENTITY; -- Guided_wave_terminal


ENTITY Package
	SUBTYPE OF (Part_usage_view);
	mounting_technology : mounting_technology_type;
	maximum_seating_plane_installation_offset : OPTIONAL Length_data_element;
	surface_mount_lead_form : OPTIONAL predefined_lead_form;
	nominal_mounting_lead_pitch : OPTIONAL Length_data_element;
	nominal_mounting_lead_span : OPTIONAL Length_data_element;
	maximum_body_height_above_seating_plane : Length_data_element;
	maximum_body_height_below_seating_plane : OPTIONAL Length_data_element;
	body_clearance_above_seating_plane : OPTIONAL Length_tolerance_characteristic;
	body_clearance_below_seating_plane : OPTIONAL Length_tolerance_characteristic;
	maximum_lead_length_below_seating_plane : OPTIONAL Length_data_element;
	least_lead_length_below_seating_plane : OPTIONAL Length_data_element;
DERIVE
	cutout_required : BOOLEAN := (maximum_body_height_below_seating_plane\Value_with_unit.value_component > 0.0);
	maximum_installed_height : Length_data_element := add_data_element(maximum_body_height_above_seating_plane,
 maximum_seating_plane_installation_offset);
	maximum_package_total_vertical_extent : Length_data_element := max_data_element(add_data_element(maximum_body_height_above_seating_plane,
 maximum_body_height_below_seating_plane),
 add_data_element(maximum_body_height_above_seating_plane,
 maximum_lead_length_below_seating_plane));
INVERSE
	body: SET [0:1] OF Package_body FOR associated_definition;
	external_surface_mount_lead_form: SET [0:1] OF External_source_identification FOR item;
	interface_plane: SET [0:?] OF Interface_plane FOR scope;
	package_accesses: SET [0:?] OF Package_terminal FOR associated_definition;
	package_polarity_indication: SET [0:1] OF Polarity_indication_feature FOR associated_definition;
	package_primary_orientation_feature: SET [0:1] OF Primary_orientation_feature FOR associated_definition;
	package_seating_plane: Seating_plane FOR scope;
	package_secondary_orientation_feature: SET [0:1] OF Secondary_orientation_feature FOR associated_definition;
	package_tertiary_orientation_feature: SET [0:1] OF Tertiary_orientation_feature FOR associated_definition;
WHERE
	WR1 : NOT(mounting_technology = surface_mount)OR (NOT(EXISTS(maximum_lead_length_below_seating_plane)OR EXISTS(least_lead_length_below_seating_plane)));
	WR2 : NOT(EXISTS(maximum_lead_length_below_seating_plane))OR(maximum_lead_length_below_seating_plane\Value_with_unit.value_component > 0.0);
	WR3 : NOT(EXISTS(least_lead_length_below_seating_plane))OR(least_lead_length_below_seating_plane\Value_with_unit.value_component > 0.0);
	WR4 : (NOT(mounting_technology = surface_mount)AND  NOT(EXISTS(surface_mount_lead_form)))OR((mounting_technology = surface_mount)AND(EXISTS(surface_mount_lead_form)));
	WR5 : package_seating_plane\Shape_element.element_name = 'package seating plane';
	WR6 : 'package' IN types_of_product(SELF\Product_view_definition.defined_version.of_product);
	WR7 : SIZEOF(QUERY(pa <* package_accesses | 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PRIMARY_REFERENCE_TERMINAL' IN TYPEOF(pa)))= 1;
	WR8 : (EXISTS(surface_mount_lead_form))XOR((SIZEOF(external_surface_mount_lead_form))= 1);
	WR9 : SIZEOF(QUERY(nt <* package_accesses |
	                      EXISTS(nt\Part_feature.precedent_feature)
	              ))=(SIZEOF(package_accesses)- 1);
	WR10 : SIZEOF(QUERY(nt <* package_accesses |
	                    (SIZEOF(nt\Part_feature.subsequent_feature)= 1)
	              ))=(SIZEOF(package_accesses)- 1);
END_ENTITY; -- Package


ENTITY Package_body
	SUBTYPE OF (Part_feature);
	SELF\Part_feature.associated_definition : Package;
INVERSE
	body_material: Material_identification FOR items;
WHERE
	WR1 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY')|('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PACKAGE_BODY_TOP_SURFACE' IN TYPEOF(pf))))<= 1;
	WR2 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY')|('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PACKAGE_BODY_BOTTOM_SURFACE' IN TYPEOF(pf))))<= 1;
	WR3 : SIZEOF(QUERY(pf <* USEDIN(SELF,
 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY')|('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PACKAGE_BODY_EDGE_SURFACE' IN TYPEOF(pf))))<= 1;
	WR4 : 'CONDUCTIVITY_MATERIAL_ASPECTS.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF(body_material);
END_ENTITY; -- Package_body


ENTITY Package_body_bottom_surface
	SUBTYPE OF (Package_body_surface);
END_ENTITY; -- Package_body_bottom_surface


ENTITY Package_body_edge_segment_surface
	SUBTYPE OF (Package_body_surface);
	composed_surface : Package_body_edge_surface;
	start_vertex : Edge_segment_vertex;
	end_vertex : Edge_segment_vertex;
WHERE
	WR1 : start_vertex :<>: end_vertex;
END_ENTITY; -- Package_body_edge_segment_surface


ENTITY Package_body_edge_surface
	SUBTYPE OF (Package_body_surface);
END_ENTITY; -- Package_body_edge_surface


ENTITY Package_body_surface
	ABSTRACT SUPERTYPE OF (ONEOF (Package_body_bottom_surface, Package_body_top_surface, Package_body_edge_segment_surface, Package_body_edge_surface))
	SUBTYPE OF (Part_feature);
	associated_package_body : Package_body;
END_ENTITY; -- Package_body_surface


ENTITY Package_body_top_surface
	SUBTYPE OF (Package_body_surface);
END_ENTITY; -- Package_body_top_surface


ENTITY Package_orientation_feature
	ABSTRACT SUPERTYPE OF (ONEOF (Primary_orientation_feature, Secondary_orientation_feature, Tertiary_orientation_feature))
	SUBTYPE OF (Part_feature, Datum_feature);
	associated_body_vertical_extent : OPTIONAL SET [1:2] OF Package_body_surface;
END_ENTITY; -- Package_orientation_feature


ENTITY Package_terminal
	SUBTYPE OF (Part_feature, Placed_feature);
	SELF\Part_feature.associated_definition : Package;
	SELF\Placed_feature.definition : Package_terminal_template_definition;
INVERSE
	SELF\Placed_feature.feature_shape: SET [1:?] OF Geometric_model_constituent_relationship FOR constituent_element;
END_ENTITY; -- Package_terminal


ENTITY Package_terminal_surface_constituent_relationship
	SUBTYPE OF (Shape_element_constituent_relationship);
	SELF\Shape_element_relationship.related : Package_terminal;
	SELF\Shape_element_relationship.relating : Package_body_surface;
END_ENTITY; -- Package_terminal_surface_constituent_relationship


ENTITY Package_terminal_template_definition
	SUBTYPE OF (Part_feature_template_definition);
	external_connection_zone : OPTIONAL SET [1:?] OF Connection_zone_in_part_feature_template_definition;
	internal_connection_zone : OPTIONAL SET [1:?] OF Connection_zone_in_part_feature_template_definition;
	seating_plane_intersection : seating_plane_intersection_type;
	terminal_characteristic : OPTIONAL SET [1:?] OF characteristic;
	terminal_diametrical_extent : Length_tolerance_characteristic;
	seating_plane_zone : OPTIONAL Connection_zone_package_interface_plane_relationship;
DERIVE
	mates_with_substrate : BOOLEAN := (EXISTS(seating_plane_zone));
	terminal_core_material : SET [0:1] OF Material_identification := bag_to_set(QUERY(temp <* USEDIN(SELF,
     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS')| 
    (SIZEOF(QUERY(cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' + 
 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')| cla.role = 'terminal core material'))= 1)));
	terminal_surface_material : SET [1:1] OF Material_identification := bag_to_set(QUERY(temp <* USEDIN(SELF,
     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS')| 
    (SIZEOF(QUERY(cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' + 
 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')| cla.role = 'terminal surface material'))= 1)));
WHERE
	WR1 : NOT EXISTS(seating_plane_zone)OR(SIZEOF(QUERY(cz <* external_connection_zone |(seating_plane_zone.derived_zone = cz)))= 1);
	WR2 : NOT EXISTS(seating_plane_zone)OR(SIZEOF(QUERY(cz <* external_connection_zone |(seating_plane_zone.mating_zone = cz)))= 1);
	WR4 : NOT EXISTS(seating_plane_zone)OR ((seating_plane_intersection = surface_intersection)OR(seating_plane_intersection = through_intersection));
	WR5 : NOT((seating_plane_intersection = does_not_intersect)AND(EXISTS(seating_plane_zone)));
	WR8 : NOT(SIZEOF(terminal_core_material)= 1)OR
               ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF(terminal_core_material[1]));
	WR9 : EXISTS(terminal_core_material);
	WR10 : NOT EXISTS(terminal_surface_material)OR
               ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF(terminal_surface_material[1]));
END_ENTITY; -- Package_terminal_template_definition


ENTITY Polarity_indication_feature
	SUBTYPE OF (Part_feature);
	associated_body_vertical_extent : OPTIONAL SET [1:2] OF Package_body_surface;
	associated_terminal : Package_terminal;
END_ENTITY; -- Polarity_indication_feature


ENTITY Primary_orientation_feature
	SUBTYPE OF (Package_orientation_feature);
END_ENTITY; -- Primary_orientation_feature


ENTITY Primary_reference_terminal
	SUBTYPE OF (Package_terminal);
WHERE
	WR1 : NOT(EXISTS(SELF\Part_feature.precedent_feature));
END_ENTITY; -- Primary_reference_terminal


ENTITY Secondary_orientation_feature
	SUBTYPE OF (Package_orientation_feature);
END_ENTITY; -- Secondary_orientation_feature


ENTITY Tertiary_orientation_feature
	SUBTYPE OF (Package_orientation_feature);
END_ENTITY; -- Tertiary_orientation_feature


ENTITY Wire_terminal
	SUBTYPE OF (Package_terminal);
WHERE
	WR1 : SIZEOF(SELF\Placed_feature.feature_shape)= 0;
END_ENTITY; -- Wire_terminal


ENTITY Wire_terminal_template_definition
	SUBTYPE OF (Package_terminal_template_definition);
	wire_terminal_length : Length_tolerance_characteristic;
	SELF\Package_terminal_template_definition.internal_connection_zone : SET [1:?] OF Connection_zone_in_part_feature_template_definition;
END_ENTITY; -- Wire_terminal_template_definition


ENTITY Mating_connector_relationship
	SUBTYPE OF (Part_definition_relationship);
	SELF\View_definition_relationship.related_view : Packaged_connector;
	SELF\View_definition_relationship.relating_view : Packaged_connector;
WHERE
	WR1 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
END_ENTITY; -- Mating_connector_relationship


ENTITY Packaged_connector
	SUBTYPE OF (Packaged_part);
INVERSE
	characterized_connector_terminal_relationship: SET [1:?] OF Packaged_connector_terminal_relationship FOR connector;
END_ENTITY; -- Packaged_connector


ENTITY Packaged_connector_terminal_relationship;
	connector : Packaged_connector;
	join_terminal : Packaged_part_join_terminal;
	interface_terminal : Packaged_part_interface_terminal;
UNIQUE
	UR2 : interface_terminal, connector;
	UR1 : join_terminal;
END_ENTITY; -- Packaged_connector_terminal_relationship


ENTITY Packaged_part_interface_terminal
	SUBTYPE OF (Packaged_part_terminal);
INVERSE
	external_connector_function: SET [0:?] OF Packaged_connector_terminal_relationship FOR interface_terminal;
END_ENTITY; -- Packaged_part_interface_terminal


ENTITY Packaged_part
	SUBTYPE OF (Part_usage_view);
	used_package : SET [1:?] OF package_or_package_external_reference;
	implemented_function : OPTIONAL Functional_unit_usage_view;
DERIVE
	potting_compound : SET [0:1] OF Material_identification := bag_to_set(QUERY(temp <* USEDIN(SELF,
		     'GENERIC_MATERIAL_ASPECTS_ARM.MATERIAL_IDENTIFICATION.ITEMS')| 
		    (SIZEOF(QUERY(cla <* USEDIN(temp,'CLASSIFICATION_ASSIGNMENT_ARM.' + 
		 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS')| cla.role = 'potting compound'))= 1)));
INVERSE
	access_mechanisms: SET [0:?] OF Packaged_part_terminal FOR associated_definition;
WHERE
	WR1 : NOT(EXISTS(implemented_function)XOR(SIZEOF(access_mechanisms)> 0));
	WR2 : single_package_version(SELF);
END_ENTITY; -- Packaged_part


ENTITY Packaged_part_join_terminal
	SUBTYPE OF (Packaged_part_terminal);
END_ENTITY; -- Packaged_part_join_terminal


ENTITY Packaged_part_terminal
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Part_terminal);
	terminal_of_package : SET [1:?] OF Package_terminal;
	SELF\Part_feature.associated_definition : Packaged_part;
WHERE
	WR1 : disjoint_package_terminals(SELF);
	WR2 : NOT EXISTS(SELF\Part_feature.precedent_feature);
END_ENTITY; -- Packaged_part_terminal


ENTITY Part
	SUBTYPE OF (Product);
WHERE
	WR1 : SIZEOF(['part', 'raw material', 'tool']*types_of_product(SELF))=1;
END_ENTITY; -- Part


ENTITY Part_version
	SUBTYPE OF (Product_version);
	SELF\Product_version.of_product : Part;
END_ENTITY; -- Part_version


ENTITY Make_from_relationship
	SUBTYPE OF (View_definition_usage);
	quantity : OPTIONAL Value_with_unit;
	priority : OPTIONAL INTEGER;
	SELF\View_definition_relationship.related_view : Part_view_definition;
	SELF\View_definition_relationship.relating_view : Part_view_definition;
WHERE
	WR1 : SELF\View_definition_relationship.relating_view :<>: 
  SELF\View_definition_relationship.related_view;
	WR2 : NOT(EXISTS(quantity))XOR  
	((NOT('NUMBER' IN TYPEOF(quantity.value_component)))XOR(quantity.value_component > 0));
END_ENTITY; -- Make_from_relationship


ENTITY Package_external_reference;
	design_owner : STRING;
	part_number : STRING;
	revision_code : STRING;
	product_definition_id : STRING;
END_ENTITY; -- Package_external_reference


ENTITY Package_terminal_external_reference;
	name : STRING;
	associated_definition : Package_external_reference;
UNIQUE
	UR1 : associated_definition, name;
END_ENTITY; -- Package_terminal_external_reference


ENTITY Part_terminal_external_reference;
	associated_definition : physical_unit_or_part_template;
	feature_name : STRING;
	feature_type : STRING;
UNIQUE
	UR1 : associated_definition, feature_name, feature_type;
END_ENTITY; -- Part_terminal_external_reference


ENTITY Fiducial_part_feature
	SUBTYPE OF (Part_tooling_feature);
END_ENTITY; -- Fiducial_part_feature


ENTITY Part_interface_access_feature
	SUBTYPE OF (Part_feature, Shape_feature);
	accessed_interface : Part_feature;
	SELF\Shape_feature.connection_area : OPTIONAL SET [1:?] OF Connection_zone_in_usage_view;
WHERE
	WR1 : SELF\Part_feature.material_state_change = material_removal;
	WR2 : SELF <> accessed_interface;
	WR3 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_TERMINAL' IN TYPEOF(SELF));
	WR4 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGE_BODY' IN TYPEOF(SELF));
	WR5 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
	WR6 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
	WR7 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGE_TERMINAL' IN TYPEOF(SELF));
	WR8 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGE_BODY_SURFACE' IN TYPEOF(SELF));
	WR9 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.POLARITY_INDICATION_FEATURE' IN TYPEOF(SELF));
END_ENTITY; -- Part_interface_access_feature


ENTITY Part_mating_feature
	SUBTYPE OF (Part_feature, Shape_feature);
	SELF\Shape_feature.connection_area : OPTIONAL SET [1:?] OF Connection_zone_in_usage_view;
WHERE
	WR1 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_MOUNTING_FEATURE' IN TYPEOF(SELF));
	WR2 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.INTERCONNECT_MODULE_SURFACE_FEATURE' IN TYPEOF(SELF));
	WR3 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGE_TERMINAL' IN TYPEOF(SELF));
	WR4 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_TERMINAL' IN TYPEOF(SELF));
END_ENTITY; -- Part_mating_feature


ENTITY Part_mounting_feature
	SUBTYPE OF (Part_feature, Shape_feature);
	SELF\Shape_feature.connection_area : OPTIONAL SET [1:?] OF Connection_zone_in_usage_view;
END_ENTITY; -- Part_mounting_feature


ENTITY Part_tooling_feature
	SUPERTYPE OF ((ONEOF (Fiducial_part_feature, Tool_registration_mark) ANDOR Test_point_part_feature))
	SUBTYPE OF (Part_feature);
END_ENTITY; -- Part_tooling_feature


ENTITY Test_point_part_feature
	SUBTYPE OF (Part_tooling_feature);
WHERE
	WR1 : 'FUNCTIONAL_ASSIGNMENT_TO_PART_ARM.PART_TERMINAL' IN TYPEOF(SELF);
END_ENTITY; -- Test_point_part_feature


ENTITY Thermal_feature
	SUBTYPE OF (Part_feature);
END_ENTITY; -- Thermal_feature


ENTITY Tool_registration_mark
	SUBTYPE OF (Part_tooling_feature);
END_ENTITY; -- Tool_registration_mark


ENTITY Usage_concept_usage_relationship
	SUBTYPE OF (Geometric_model_constituent_relationship);
	associating_usage_shape : feature_or_non_feature_usage;
	SELF\Geometric_model_constituent_relationship.constituent_model RENAMED associated_shape_definition : Geometric_model;
	SELF\Geometric_model_constituent_relationship.constituent_element RENAMED associated_usage : usage_concept;
WHERE
	WR1 : (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.NON_FEATURE_SHAPE_MODEL' IN  
                 TYPEOF(associated_shape_definition))AND  
              ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.NON_FEATURE_SHAPE_MODEL' IN  
                 TYPEOF(associating_usage_shape)))OR 
           (('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN  
               TYPEOF(associated_shape_definition))AND 
            ('ELEMENTAL_GEOMETRIC_SHAPE_ARM.GEOMETRIC_MODEL' IN TYPEOF(associating_usage_shape)));
	WR2 : NOT 
        (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.GEOMETRIC_OPERATOR_TRANSFORMATION' IN
              TYPEOF(SELF))AND
           ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.CARTESIAN_TRANSFORMATION_2D' IN  
              TYPEOF(SELF\Geometric_operator_transformation.target)))OR 
           ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.NON_FEATURE_SHAPE_MODEL' IN 
              TYPEOF(associating_usage_shape));
	WR3 : associating_usage_shape = SELF\Geometric_model_constituent_relationship.composed_model[1];
	WR4 : NOT EXISTS(SELF\Representation_item.name);
END_ENTITY; -- Usage_concept_usage_relationship


ENTITY Definition_based_part_occurrence
	SUBTYPE OF (Definition_based_product_occurrence, Part_occurrence);
	SELF\Definition_based_product_occurrence.derived_from : Part_view_definition;
END_ENTITY; -- Definition_based_part_occurrence


ENTITY Part_occurrence
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Product_occurrence);
	SELF\Product_view_definition.defined_version : Part_version;
END_ENTITY; -- Part_occurrence


ENTITY Part_occurrence_definition_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.related_view : Part_occurrence;
	SELF\View_definition_relationship.relating_view : Part_view_definition;
DERIVE
	SELF\View_definition_relationship.id : STRING := SELF\View_definition_relationship.related_view\Product_view_definition.id;
WHERE
	WR1 : NOT(('ASSEMBLY_STRUCTURE_ARM.ASSEMBLY_COMPONENT_RELATIONSHIP' IN
TYPEOF(SELF))AND(EXISTS(SELF\Assembly_component_relationship.quantity)));
END_ENTITY; -- Part_occurrence_definition_relationship


ENTITY Specification_based_part_occurrence
	SUBTYPE OF (Specification_based_product_occurrence, Part_occurrence);
END_ENTITY; -- Specification_based_part_occurrence


ENTITY Part_view_definition
	SUBTYPE OF (Product_view_definition);
	SELF\Product_view_definition.defined_version : Part_version;
END_ENTITY; -- Part_view_definition


ENTITY Address;
	name : OPTIONAL STRING;
	street_number : OPTIONAL STRING;
	street : OPTIONAL STRING;
	postal_box : OPTIONAL STRING;
	town : OPTIONAL STRING;
	region : OPTIONAL STRING;
	postal_code : OPTIONAL STRING;
	country : OPTIONAL STRING;
	internal_location : OPTIONAL STRING;
	facsimile_number : OPTIONAL STRING;
	telephone_number : OPTIONAL STRING;
	electronic_mail_address : OPTIONAL STRING;
	telex_number : OPTIONAL STRING;
	url : OPTIONAL STRING;
WHERE
	WR1 : (EXISTS(street_number)OR  EXISTS (street)OR  EXISTS (postal_box)OR  EXISTS (town)OR  EXISTS (region)OR  EXISTS (postal_code)OR  EXISTS (country)OR  EXISTS (internal_location)OR  EXISTS (facsimile_number)OR  EXISTS (telephone_number)OR  EXISTS (electronic_mail_address)OR EXISTS(telex_number));
END_ENTITY; -- Address


ENTITY Address_assignment;
	address_type : OPTIONAL STRING;
	assigned_address : Address;
	located_person_organizations : SET [1:?] OF organization_or_person_in_organization_select;
END_ENTITY; -- Address_assignment


ENTITY Organization;
	id : OPTIONAL STRING;
	name : STRING;
END_ENTITY; -- Organization


ENTITY Organization_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating_organization : Organization;
	related_organization : Organization;
END_ENTITY; -- Organization_relationship


ENTITY Person;
	last_name : STRING;
	first_name : OPTIONAL STRING;
	middle_names : OPTIONAL LIST [1:?] OF STRING;
	prefix_titles : OPTIONAL LIST [1:?] OF STRING;
	suffix_titles : OPTIONAL LIST [1:?] OF STRING;
END_ENTITY; -- Person


ENTITY Person_in_organization;
	concerned_person : Person;
	containing_organization : Organization;
	role : STRING;
END_ENTITY; -- Person_in_organization


ENTITY Organization_or_person_in_organization_assignment;
	assigned_entity : organization_or_person_in_organization_select;
	role : STRING;
	items : SET [1:?] OF organization_or_person_in_organization_item;
END_ENTITY; -- Organization_or_person_in_organization_assignment


ENTITY Physical_component_feature
	SUBTYPE OF (Component_feature);
END_ENTITY; -- Physical_component_feature


ENTITY Physical_component_terminal
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Component_terminal, Physical_component_feature);
END_ENTITY; -- Physical_component_terminal


ENTITY Physical_connectivity_definition
	SUPERTYPE OF (Physical_connectivity_structure_definition)
	SUBTYPE OF (Shape_element);
	associated_terminals : SET [2:?] OF Physical_component_terminal;
	SELF\Shape_element.element_name : STRING;
DERIVE
	associated_definition : Physical_unit_network_definition := SELF\Shape_element.containing_shape.described_element;
UNIQUE
	UR1 : element_name, associated_definition;
END_ENTITY; -- Physical_connectivity_definition


ENTITY Physical_connectivity_definition_relationship;
	previous_definition : Physical_connectivity_definition;
	current_definition : Physical_connectivity_definition;
DERIVE
	requirement : SET [1:1] OF Requirement_view_definition := get_rvd(SELF, 'requirement');
WHERE
	WR1 : EXISTS(requirement);
END_ENTITY; -- Physical_connectivity_definition_relationship


ENTITY Physical_connectivity_element;
	name : STRING;
	start_terminus : termination_or_junction;
	end_terminus : termination_or_junction;
	connectivity_context : Physical_connectivity_structure_definition;
UNIQUE
	UR1 : name, connectivity_context;
WHERE
	WR1 : start_terminus <> end_terminus;
END_ENTITY; -- Physical_connectivity_element


ENTITY Physical_connectivity_make_from_relationship;
	reusable_definition : Physical_connectivity_definition;
	resultant_definition : Physical_connectivity_definition;
END_ENTITY; -- Physical_connectivity_make_from_relationship


ENTITY Physical_connectivity_structure_definition
	SUBTYPE OF (Physical_connectivity_definition);
DERIVE
	structural_junction_nodes : SET [0:?] OF Topological_junction := get_tj(structural_element);
	structural_terminal_nodes : SET [0:?] OF Physical_component_terminal := get_pct(structural_element);
	tree_structure : BOOLEAN := ((SIZEOF(structural_terminal_nodes)+ SIZEOF(structural_junction_nodes))=(SIZEOF(structural_element)+ 1));
INVERSE
	structural_element: SET [1:?] OF Physical_connectivity_element FOR connectivity_context;
WHERE
	WR1 : SIZEOF(QUERY(stn <* structural_terminal_nodes |
                   NOT(stn IN SELF\Physical_connectivity_definition.associated_terminals)
                  ))= 0;
	WR2 : SIZEOF(structural_terminal_nodes)= 
            SIZEOF(SELF\Physical_connectivity_definition.associated_terminals);
END_ENTITY; -- Physical_connectivity_structure_definition


ENTITY Physical_unit_network_definition
	SUBTYPE OF (Part_design_view);
DERIVE
	terminals : SET [0:?] OF Component_terminal := get_terminals(bag_to_set(USEDIN(SELF,'PHYSICAL_CONNECTIVITY_DEFINITION_ARM.PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_DEFINITION')));
WHERE
	WR1 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_VIEW_DEFINITION' IN  TYPEOF(SELF))OR 
               ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_DESIGN_VIEW' IN TYPEOF(SELF));
	WR2 : NOT(SIZEOF(terminals)> 1)OR
          (SIZEOF(QUERY(t <* terminals | NOT(SIZEOF(USEDIN(t, 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 
                          'PHYSICAL_CONNECTIVITY_DEFINITION.ASSOCIATED_TERMINALS'))= 1)))= 0);
END_ENTITY; -- Physical_unit_network_definition


ENTITY Topological_junction;
	name : STRING;
	scope : Physical_connectivity_structure_definition;
UNIQUE
	UR1 : name, scope;
END_ENTITY; -- Topological_junction


ENTITY Connection_zone_in_layout_template
	SUBTYPE OF (Connection_zone, Instanced_feature);
	SELF\Shape_element.containing_shape : Template_definition;
END_ENTITY; -- Connection_zone_in_layout_template


ENTITY Reference_part_template_for_analytical_model;
	template : Template_definition;
	analytical_representation : Analytical_model_definition;
UNIQUE
	UR1 : template;
END_ENTITY; -- Reference_part_template_for_analytical_model


ENTITY Template
	SUBTYPE OF (Product);
UNIQUE
	UR1 : id;
WHERE
	WR1 : SIZEOF([ 'template model' ] * types_of_product(SELF))= 1;
END_ENTITY; -- Template


ENTITY Template_definition
	SUBTYPE OF (Item_shape, Product_view_definition);
	physical_characteristic : OPTIONAL SET [1:?] OF correlated_or_independent;
	SELF\Product_view_definition.defined_version : Template_version;
DERIVE
	SELF\Item_shape.described_element : Template_definition := SELF;
WHERE
	WR1 : SIZEOF(QUERY(prpc <* USEDIN(SELF\Product_view_definition.defined_version.of_product,
 'PRODUCT_IDENTIFICATION_ARM.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS')|(prpc.category\Product_category.name = 'template model')))> 0;
END_ENTITY; -- Template_definition


ENTITY Template_version
	SUBTYPE OF (Product_version);
	SELF\Product_version.of_product : Template;
END_ENTITY; -- Template_version


ENTITY Physical_node_requirement_to_implementing_component_allocation;
	physical_node_requirement : Physical_connectivity_definition;
	implementation_component : Assembly_component;
	implementation_interface_joint_set : OPTIONAL SET [1:?] OF Interface_mounted_join;
	implementation_joint_set : OPTIONAL SET [1:?] OF Assembly_joint;
DERIVE
	implementation_connection_definition_1 : SET [0:1] OF Part_connected_terminals_definition := get_pctd(implementation_component,
 implementation_joint_set);
	implementation_connection_definition_2 : SET [0:1] OF Packaged_connector_terminal_relationship := get_pctr(implementation_component,
 implementation_interface_joint_set);
WHERE
	WR1 : EXISTS(implementation_interface_joint_set)XOR EXISTS(implementation_joint_set);
	WR2 : (SIZEOF(implementation_connection_definition_1)+ SIZEOF(implementation_connection_definition_2)= 1)OR (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.INTERFACE_COMPONENT' IN  TYPEOF(implementation_component))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PHYSICAL_COMPONENT_INTERFACE_TERMINAL' IN  TYPEOF(get_cit(implementation_component,
 implementation_joint_set))))OR('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ROUTED_INTERCONNECT_COMPONENT' IN TYPEOF(implementation_component));
	WR3 : SIZEOF(QUERY(pct <* physical_node_requirement.associated_terminals | pct\Component_feature.associated_component = implementation_component))= 0;
END_ENTITY; -- Physical_node_requirement_to_implementing_component_allocation


ENTITY Assembly_alternate_product
	SUBTYPE OF (Alternate_product_relationship);
	basis_context : Part_design_view;
WHERE
	WR1 : NOT EXISTS(SELF\Alternate_product_relationship.criteria);
END_ENTITY; -- Assembly_alternate_product


ENTITY Assembly_component
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Definition_based_product_occurrence, Item_shape);
	SELF\Definition_based_product_occurrence.derived_from : physical_unit_or_part_template_or_fp_or_pd;
DERIVE
	SELF\Item_shape.described_element : shapeable_item := SELF;
INVERSE
	SELF\Product_occurrence.occurrence_contexts: SET [1:?] OF Assembly_component_relationship FOR related_view;
WHERE
	WR1 : NOT(EXISTS(SELF\Definition_based_product_occurrence.derived_from))OR ((('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FOOTPRINT_OCCURRENCE' IN  TYPEOF(SELF))AND ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FOOTPRINT_DEFINITION' IN  TYPEOF(derived_from)))OR (NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FOOTPRINT_OCCURRENCE' IN  TYPEOF(SELF))AND  NOT ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FOOTPRINT_DEFINITION' IN  TYPEOF(SELF\Definition_based_product_occurrence.derived_from)))OR (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PADSTACK_OCCURRENCE' IN  TYPEOF(SELF))AND ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PADSTACK_DEFINITION' IN  TYPEOF(SELF\Definition_based_product_occurrence.derived_from)))OR(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PADSTACK_OCCURRENCE' IN  TYPEOF(SELF))AND NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PADSTACK_DEFINITION' IN TYPEOF(SELF\Definition_based_product_occurrence.derived_from))));
	WR2 : SELF\Product_view_definition.defined_version :=: SELF\Definition_based_product_occurrence.derived_from.defined_version;
END_ENTITY; -- Assembly_component


ENTITY Assembly_item_number;
	assembly_usage : SET [1:?] OF Assembly_component_relationship;
	item_number : STRING;
DERIVE
	assembly : Product_view_definition := assembly_usage[1].related_view;
	part : Product := assembly_usage[1].relating_view\Definition_based_product_occurrence.derived_from\Product_view_definition.defined_version.of_product;
UNIQUE
	UR1 : assembly, item_number;
WHERE
	WR1 : SIZEOF(QUERY(au <* assembly_usage | NOT(au.relating_view\Definition_based_product_occurrence.derived_from\Product_view_definition.defined_version.of_product = Part)))= 0;
	WR2 : SIZEOF(QUERY(au <* assembly_usage | NOT(au.related_view = assembly)))= 0;
END_ENTITY; -- Assembly_item_number


ENTITY Component_make_from_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.related_view RENAMED resultant_component : Assembly_component;
	SELF\View_definition_relationship.relating_view RENAMED reusable_component : Assembly_component;
WHERE
	WR1 : resultant_component <> reusable_component;
END_ENTITY; -- Component_make_from_relationship


ENTITY Component_to_physical_usage_view_assignment
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.relating_view RENAMED design_view_component : Assembly_component;
	SELF\View_definition_relationship.related_view RENAMED usage_view_component : Assembly_component;
WHERE
	WR1 : design_view_component <> usage_view_component;
	WR2 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
END_ENTITY; -- Component_to_physical_usage_view_assignment


ENTITY Connection_zone_in_design_view
	SUBTYPE OF (Connection_zone);
DERIVE
	associated_definition : Part_design_view := SELF\Shape_element.containing_shape.described_element;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.element_name);
END_ENTITY; -- Connection_zone_in_design_view


ENTITY Next_assembly_usage_occurrence_relationship
	SUBTYPE OF (Next_assembly_usage);
	SELF\View_definition_relationship.related_view : Product_occurrence;
UNIQUE
	UR1 : relating_view, location_indicator;
END_ENTITY; -- Next_assembly_usage_occurrence_relationship


ENTITY Part_design_view
	SUBTYPE OF (Item_shape, Part_view_definition);
	usage_view : OPTIONAL Part_usage_view;
DERIVE
	SELF\Item_shape.described_element : shapeable_item := SELF;
WHERE
	WR1 : ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.LAYOUT_MACRO_DEFINITION' IN TYPEOF(SELF))OR EXISTS(usage_view);
END_ENTITY; -- Part_design_view


ENTITY Physical_component
	SUBTYPE OF (Assembly_component, Definition_based_part_occurrence);
END_ENTITY; -- Physical_component


ENTITY Thermal_component
	SUBTYPE OF (Assembly_component);
END_ENTITY; -- Thermal_component


ENTITY Physical_unit_keepout_shape_model
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Geometric_model);
	constrained_design_object_category : keepout_product_design_object_category;
	shape_characterized_definition : Part_usage_view;
	shape_material_condition : material_condition;
	shape_purpose : OPTIONAL predefined_keepout_purpose;
	shape_environment : application_environment;
	shape_extent : shape_extent;
	shape_approximation_level : shape_approximation_level;
	centroid_location : OPTIONAL Cartesian_point;
INVERSE
	external_shape_purpose: SET [0:1] OF External_source_identification FOR item;
WHERE
	WR1 : (EXISTS(shape_purpose))XOR((SIZEOF(external_shape_purpose))= 1);
END_ENTITY; -- Physical_unit_keepout_shape_model


ENTITY Physical_unit_shape_model
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Geometric_model);
	shape_characterized_definition : physical_unit;
	shape_material_condition : material_condition;
	centroid_location : OPTIONAL Cartesian_point;
	shape_environment : application_environment;
	shape_extent : shape_extent;
	shape_approximation_level : shape_approximation_level;
	mass_property_quality : mass_property_quality;
WHERE
	WR1 : NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGED_PART' IN TYPEOF(shape_characterized_definition));
	WR2 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;
END_ENTITY; -- Physical_unit_shape_model


ENTITY Connection_zone_in_usage_view
	SUBTYPE OF (Connection_zone);
DERIVE
	associated_definition : Part_usage_view := containing_shape.described_element;
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element.element_name);
END_ENTITY; -- Connection_zone_in_usage_view


ENTITY Connection_zone_map_identification;
	reference_connection_zone_shape : Usage_view_connection_zone_terminal_shape_relationship;
	mapped_connection_zone_shape : Usage_view_connection_zone_terminal_shape_relationship;
UNIQUE
	UR1 : reference_connection_zone_shape, mapped_connection_zone_shape;
WHERE
	WR1 : reference_connection_zone_shape <> mapped_connection_zone_shape;
	WR2 : reference_connection_zone_shape.associated_connection_zone_shape_definition <> mapped_connection_zone_shape.associated_connection_zone_shape_definition;
END_ENTITY; -- Connection_zone_map_identification


ENTITY Derived_part_view_definition_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.related_view : Part_view_definition;
	SELF\View_definition_relationship.relating_view : Part_view_definition;
WHERE
	WR1 : SIZEOF(get_derived_shape_element(SELF\View_definition_relationship.related_view))> 0;
	WR2 : SIZEOF(QUERY(gdrse <* get_derived_shape_element(SELF\View_definition_relationship.related_view)|
            (SIZEOF(QUERY(se <* gdrse.derived_from |
              SELF\View_definition_relationship.relating_view <> se.containing_shape.described_element
             ))= 0)
            ))= SIZEOF(get_derived_shape_element(SELF\View_definition_relationship.related_view));
	WR3 : NOT EXISTS(SELF\View_definition_relationship.relation_type);
END_ENTITY; -- Derived_part_view_definition_relationship


ENTITY Part_feature
	SUBTYPE OF (Shape_feature);
	material_state_change : OPTIONAL material_state_change_enumeration;
	precedent_feature : OPTIONAL Part_feature;
	SELF\Shape_element.containing_shape RENAMED associated_definition : Part_usage_view;
INVERSE
	subsequent_feature: SET [0:1] OF Part_feature FOR precedent_feature;
WHERE
	WR1 : NOT EXISTS(precedent_feature)OR
                NOT(precedent_feature IN subsequent_feature);
	WR2 : NOT EXISTS(SELF\Shape_element.description);
END_ENTITY; -- Part_feature


ENTITY Part_feature_make_from_relationship
	SUBTYPE OF (Shape_element_relationship);
	associated_make_from : View_definition_relationship;
	SELF\Shape_element_relationship.related RENAMED resultant_feature : Part_feature;
	SELF\Shape_element_relationship.relating RENAMED reusable_feature : Part_feature;
UNIQUE
	UR1 : reusable_feature, resultant_feature;
WHERE
	WR1 : reusable_feature :<>: resultant_feature;
	WR2 : reusable_feature.associated_definition :<>: resultant_feature.associated_definition;
END_ENTITY; -- Part_feature_make_from_relationship


ENTITY Part_feature_template_definition
	SUBTYPE OF (Feature_definition);
	id : STRING;
UNIQUE
	UR1 : id;
END_ENTITY; -- Part_feature_template_definition


ENTITY Part_feature_template_shape_model
	SUBTYPE OF (Geometric_model);
WHERE
	WR1 : NOT(SIZEOF(USEDIN(SELF, ''))> 1)OR 
      (SIZEOF(QUERY(foo <* USEDIN(SELF,'')| 
       NOT(SIZEOF(['AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.USAGE_CONCEPT_USAGE_RELATIONSHIP',
        'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_FEATURE_TEMPLATE_DEFINITION'] * TYPEOF(foo))= 1)
       ))
        = 0);
	WR2 : NOT EXISTS(SELF\Representation.description);
	WR3 : SIZEOF(USEDIN(SELF, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_DESCRIPTION_ASSOCIATION.REPRESENTATION'))=0;
END_ENTITY; -- Part_feature_template_shape_model


ENTITY Part_usage_view
	SUBTYPE OF (Part_view_definition, Item_shape);
DERIVE
	SELF\Item_shape.described_element : shapeable_item := SELF;
WHERE
	WR1 : SIZEOF(QUERY(acr <* USEDIN(SELF,
 'PART_OCCURRENCE_ARM.' + 'PART_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATED_VIEW')| NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGED_CONNECTOR_COMPONENT' IN TYPEOF(acr.related_view))))= 0;
END_ENTITY; -- Part_usage_view


ENTITY Usage_view_connection_zone_terminal_shape_relationship;
	associating_terminal_shape : Part_feature_template_shape_model;
	associated_usage : Connection_zone_in_usage_view;
	associated_connection_zone_shape_definition : Geometric_model;
	associated_usage_placement : Axis_placement;
WHERE
	WR1 : associating_terminal_shape :<>: associated_connection_zone_shape_definition;
END_ENTITY; -- Usage_view_connection_zone_terminal_shape_relationship


ENTITY Evaluated_characteristic
	SUPERTYPE OF (Rule_based_evaluated_characteristic);
	planned_product_data : Planned_characteristic;
	product_data_status : evaluation_type;
	product_characterization_data : OPTIONAL SET [1:?] OF Property_value_representation;
	evaluation_result : evaluation_result_value;
END_ENTITY; -- Evaluated_characteristic


ENTITY Evaluation_view_definition
	SUBTYPE OF (Product_view_definition);
	evaluated_product_definition : Product_view_definition;
	evaluation_data : SET [1:?] OF Evaluated_characteristic;
WHERE
	WR1 : TYPEOF(SELF)<> TYPEOF(evaluated_product_definition);
END_ENTITY; -- Evaluation_view_definition


ENTITY Planned_characteristic;
	reference_requirement : Requirement_assignment;
	planned_coordinated_characteristic : Property_value_representation;
END_ENTITY; -- Planned_characteristic


ENTITY Rule_based_evaluated_characteristic
	SUBTYPE OF (Evaluated_characteristic);
	evaluating_rule : Rule_definition;
END_ENTITY; -- Rule_based_evaluated_characteristic


ENTITY Plib_class_reference;
	code : STRING;
	supplier_bsu : STRING;
	version : STRING;
END_ENTITY; -- Plib_class_reference


ENTITY Externally_defined_activity_relationship
	SUBTYPE OF (Activity_relationship);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types);
END_ENTITY; -- Externally_defined_activity_relationship


ENTITY Externally_defined_address_assignment
	SUBTYPE OF (Address_assignment);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : (EXISTS(SELF\Address_assignment.address_type))AND
      (NOT(SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types));
END_ENTITY; -- Externally_defined_address_assignment


ENTITY Externally_defined_approval
	SUBTYPE OF (Approval);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Approval.purpose IN Pre_defined_approval_types);
END_ENTITY; -- Externally_defined_approval


ENTITY Externally_defined_approval_status
	SUBTYPE OF (Approval_status);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Approval_status.status_name IN Pre_defined_approval_status_types);
END_ENTITY; -- Externally_defined_approval_status


ENTITY Externally_defined_date_or_date_time_assignment
	SUBTYPE OF (Date_or_date_time_assignment);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types);
END_ENTITY; -- Externally_defined_date_or_date_time_assignment


ENTITY Externally_defined_organization_or_person_in_organization_assignment
	SUBTYPE OF (Organization_or_person_in_organization_assignment);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types);
END_ENTITY; -- Externally_defined_organization_or_person_in_organization_assignment


ENTITY Externally_defined_security_classification
	SUBTYPE OF (Security_classification);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Security_classification.classification_level IN Pre_defined_security_classification_types);
END_ENTITY; -- Externally_defined_security_classification


ENTITY Externally_defined_work_request
	SUBTYPE OF (Work_request);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Work_request.purpose IN Pre_defined_work_request_types);
END_ENTITY; -- Externally_defined_work_request


ENTITY Externally_defined_work_request_status
	SUBTYPE OF (Work_request_status);
INVERSE
	source: External_source_identification FOR item;
WHERE
	WR1 : NOT(SELF\Work_request_status.status IN Pre_defined_work_request_status_types);
END_ENTITY; -- Externally_defined_work_request_status


ENTITY Person_in_organization_relationship;
	description : OPTIONAL STRING;
	relating : Person_in_organization;
	related : Person_in_organization;
	relation_type : STRING;
END_ENTITY; -- Person_in_organization_relationship


ENTITY Pre_defined_activity_relationship
	SUBTYPE OF (Activity_relationship);
WHERE
	WR1 : SELF\Activity_relationship.name IN Pre_defined_activity_relationship_types;
END_ENTITY; -- Pre_defined_activity_relationship


ENTITY Pre_defined_address_assignment
	SUBTYPE OF (Address_assignment);
WHERE
	WR1 : SELF\Address_assignment.address_type IN Pre_defined_address_assignment_types;
END_ENTITY; -- Pre_defined_address_assignment


ENTITY Pre_defined_approval
	SUBTYPE OF (Approval);
WHERE
	WR1 : SELF\Approval.purpose IN Pre_defined_approval_types;
END_ENTITY; -- Pre_defined_approval


ENTITY Pre_defined_approval_status
	SUBTYPE OF (Approval_status);
WHERE
	WR1 : SELF\Approval_status.status_name IN Pre_defined_approval_status_types;
END_ENTITY; -- Pre_defined_approval_status


ENTITY Pre_defined_date_or_date_time_assignment
	SUBTYPE OF (Date_or_date_time_assignment);
WHERE
	WR1 : SELF\Date_or_date_time_assignment.role IN Pre_defined_date_or_date_time_assignment_types;
END_ENTITY; -- Pre_defined_date_or_date_time_assignment


ENTITY Pre_defined_organization_or_person_in_organization_assignment
	SUBTYPE OF (Organization_or_person_in_organization_assignment);
WHERE
	WR1 : SELF\Organization_or_person_in_organization_assignment.role IN Pre_defined_organization_or_person_in_organization_assignment_types;
END_ENTITY; -- Pre_defined_organization_or_person_in_organization_assignment


ENTITY Pre_defined_security_classification
	SUBTYPE OF (Security_classification);
WHERE
	WR1 : SELF\Security_classification.classification_level IN Pre_defined_security_classification_types;
END_ENTITY; -- Pre_defined_security_classification


ENTITY Pre_defined_work_request
	SUBTYPE OF (Work_request);
WHERE
	WR1 : SELF\Work_request.purpose IN Pre_defined_work_request_types;
END_ENTITY; -- Pre_defined_work_request


ENTITY Pre_defined_work_request_status
	SUBTYPE OF (Work_request_status);
WHERE
	WR1 : SELF\Work_request_status.status IN Pre_defined_work_request_status_types;
END_ENTITY; -- Pre_defined_work_request_status


ENTITY Activity_property;
	name : STRING;
	description : STRING;
	described_element : characterized_activity_definition;
END_ENTITY; -- Activity_property


ENTITY Activity_property_representation;
	description : OPTIONAL STRING;
	property : Activity_property;
	rep : Representation;
	role : STRING;
END_ENTITY; -- Activity_property_representation


ENTITY Applied_independent_activity_property
	SUBTYPE OF (Activity_property);
	base_element_property : Independent_property;
DERIVE
	SELF\Activity_property.name : STRING := base_element_property.property_type;
END_ENTITY; -- Applied_independent_activity_property


ENTITY Product_category;
	id : OPTIONAL STRING;
	name : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Product_category


ENTITY Product_category_hierarchy;
	super_category : Product_category;
	sub_category : Product_category;
END_ENTITY; -- Product_category_hierarchy


ENTITY Class_category_association;
	associated_product_class : Product_class;
	mandatory : BOOLEAN;
	associated_category : Specification_category;
END_ENTITY; -- Class_category_association


ENTITY Class_condition_association;
	condition_type : STRING;
	associated_product_class : Product_class;
	description : OPTIONAL STRING;
	associated_condition : Specification_expression;
END_ENTITY; -- Class_condition_association


ENTITY Class_inclusion_association;
	associated_product_class : Product_class;
	description : OPTIONAL STRING;
	associated_inclusion : Specification_inclusion;
END_ENTITY; -- Class_inclusion_association


ENTITY Class_specification_association;
	associated_product_class : Product_class;
	association_type : STRING;
	associated_specification : Specification;
END_ENTITY; -- Class_specification_association


ENTITY Product_class
	SUBTYPE OF (Product_concept);
	version_id : OPTIONAL STRING;
	level_type : OPTIONAL STRING;
WHERE
	WR1 : NOT EXISTS(SELF\Product_concept.target_market);
END_ENTITY; -- Product_class


ENTITY Product_class_relationship;
	description : OPTIONAL STRING;
	relating : Product_class;
	related : Product_class;
	relation_type : STRING;
END_ENTITY; -- Product_class_relationship


ENTITY Specification;
	id : STRING;
	version_id : OPTIONAL STRING;
	name : OPTIONAL STRING;
	description : OPTIONAL STRING;
	category : Specification_category;
	package : BOOLEAN;
END_ENTITY; -- Specification


ENTITY Specification_category;
	id : STRING;
	description : STRING;
	implicit_exclusive_condition : BOOLEAN;
END_ENTITY; -- Specification_category


ENTITY Specification_category_hierarchy;
	sub_category : Specification_category;
	super_category : Specification_category;
END_ENTITY; -- Specification_category_hierarchy


ENTITY Specification_expression;
	id : OPTIONAL STRING;
	description : OPTIONAL STRING;
	operation : expression_operator;
	operand : SET [1:?] OF specification_operand_select;
WHERE
	WR1 : (operation <> not_operator)OR(SIZEOF(operand)=1);
END_ENTITY; -- Specification_expression


ENTITY Specification_inclusion;
	id : OPTIONAL STRING;
	description : OPTIONAL STRING;
	if_condition : specification_operand_select;
	included_specification : specification_operand_select;
END_ENTITY; -- Specification_inclusion


ENTITY Market;
	name : STRING;
	market_segment_type : OPTIONAL STRING;
END_ENTITY; -- Market


ENTITY Product_concept;
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
	target_market : OPTIONAL Market;
UNIQUE
	UR1 : id;
END_ENTITY; -- Product_concept


ENTITY Product;
	id : STRING;
	name : OPTIONAL STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Product


ENTITY Product_category_assignment;
	category : Product_category;
	products : SET [1:?] OF Product;
END_ENTITY; -- Product_category_assignment


ENTITY Externally_defined_view_definition
	SUBTYPE OF (Product_view_definition);
INVERSE
	source: External_source_identification FOR item;
END_ENTITY; -- Externally_defined_view_definition


ENTITY Library_view_definition
	SUBTYPE OF (Externally_defined_view_definition);
DERIVE
	library : STRING := SELF\Externally_defined_view_definition.source.source_id;
END_ENTITY; -- Library_view_definition


ENTITY Alternate_product_relationship;
	name : OPTIONAL STRING;
	description : OPTIONAL STRING;
	alternate_product : Product;
	base_product : Product;
	criteria : OPTIONAL STRING;
UNIQUE
	UR1 : alternate_product, base_product;
WHERE
	WR1 : alternate_product  :<>: base_product;
	WR2 : EXISTS(criteria)OR(TYPEOF(SELF\Alternate_product_relationship)<> TYPEOF(SELF));
END_ENTITY; -- Alternate_product_relationship


ENTITY Assembly_relationship_substitution;
	name : OPTIONAL STRING;
	description : OPTIONAL STRING;
	base_relationship : Assembly_component_relationship;
	substitute_relationship : Assembly_component_relationship;
UNIQUE
	UR1 : base_relationship, substitute_relationship;
WHERE
	WR1 : base_relationship.relating_view :=: substitute_relationship.relating_view;
	WR2 : base_relationship :<>: substitute_relationship;
END_ENTITY; -- Assembly_relationship_substitution


ENTITY Alternate_part_relationship
	SUBTYPE OF (Alternate_product_relationship);
	SELF\Alternate_product_relationship.alternate_product : Part;
	SELF\Alternate_product_relationship.base_product : Part;
END_ENTITY; -- Alternate_part_relationship


ENTITY Product_version;
	id : STRING;
	description : OPTIONAL STRING;
	of_product : Product;
END_ENTITY; -- Product_version


ENTITY Product_version_relationship;
	relation_type : OPTIONAL STRING;
	description : OPTIONAL STRING;
	relating_version : Product_version;
	related_version : Product_version;
WHERE
	WR1 : relating_version :<>: related_version;
	WR2 : EXISTS(relation_type)OR(TYPEOF(SELF\Product_version_relationship)<> TYPEOF(SELF));
END_ENTITY; -- Product_version_relationship


ENTITY Supplied_part_relationship
	SUBTYPE OF (Product_version_relationship);
WHERE
	WR1 : SELF\Product_version_relationship.relation_type IN ['supplied item', 'supplied document'];
END_ENTITY; -- Supplied_part_relationship


ENTITY Product_view_definition;
	id : OPTIONAL STRING;
	name : OPTIONAL STRING;
	additional_characterization : OPTIONAL STRING;
	initial_context : View_definition_context;
	additional_contexts : SET [0:?] OF View_definition_context;
	defined_version : Product_version;
WHERE
	WR1 : NOT(initial_context IN additional_contexts);
	WR2 : EXISTS(id)OR(TYPEOF(SELF\Product_view_definition)<> TYPEOF(SELF));
END_ENTITY; -- Product_view_definition


ENTITY View_definition_context;
	application_domain : STRING;
	life_cycle_stage : STRING;
	description : OPTIONAL STRING;
WHERE
	WR1 : (SIZEOF(USEDIN(SELF, 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT'))> 0)OR
   (SIZEOF(USEDIN(SELF, 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS'))> 0);
END_ENTITY; -- View_definition_context


ENTITY View_definition_relationship;
	id : OPTIONAL STRING;
	relation_type : OPTIONAL STRING;
	description : OPTIONAL STRING;
	relating_view : Product_view_definition;
	related_view : Product_view_definition;
END_ENTITY; -- View_definition_relationship


ENTITY View_definition_usage
	SUBTYPE OF (View_definition_relationship);
END_ENTITY; -- View_definition_usage


ENTITY Abstract_variable
	ABSTRACT SUPERTYPE OF (ONEOF (Scalar_variable, Row_variable));
	name : STRING;
	scope : scope_select;
UNIQUE
	UR1 : name, scope;
END_ENTITY; -- Abstract_variable


ENTITY Atomic_formula
	ABSTRACT SUPERTYPE OF (ONEOF (Rule_condition, Ground_fact));
	predicate_symbol : predicate_symbol;
	terms : LIST [0:?] OF term_select;
END_ENTITY; -- Atomic_formula


ENTITY Attribute_assertion
	SUBTYPE OF (Fact_type);
	entity_type : STRING;
	attribute : STRING;
END_ENTITY; -- Attribute_assertion


ENTITY Back_chaining_rule
	SUBTYPE OF (Rule_definition);
	head : Rule_condition;
	body : LIST [0:?] OF Rule_condition;
WHERE
	WR1 : SELF.head.positive = TRUE;
	WR2 : local_vars_of(SELF.head)<= local_vars_of(SELF.body);
END_ENTITY; -- Back_chaining_rule


ENTITY Complex_clause
	ABSTRACT SUPERTYPE OF (ONEOF (Complex_conjunctive_clause, Complex_disjunctive_clause));
	clauses : LIST [2:?] OF clause_select;
END_ENTITY; -- Complex_clause


ENTITY Complex_conjunctive_clause
	SUBTYPE OF (Complex_clause);
END_ENTITY; -- Complex_conjunctive_clause


ENTITY Complex_disjunctive_clause
	SUBTYPE OF (Complex_clause);
END_ENTITY; -- Complex_disjunctive_clause


ENTITY Entity_assertion
	SUBTYPE OF (Fact_type);
END_ENTITY; -- Entity_assertion


ENTITY Enum_reference_prefix;
	prefix : STRING;
END_ENTITY; -- Enum_reference_prefix


ENTITY Extent;
	source : STRING;
	query_expression : STRING;
	syntax : OPTIONAL expression_syntax;
END_ENTITY; -- Extent


ENTITY Fact_type
	ABSTRACT SUPERTYPE OF (ONEOF (Entity_assertion, Attribute_assertion));
	source : Extent;
	predicate_symbol : STRING;
END_ENTITY; -- Fact_type


ENTITY Forward_chaining_rule
	SUBTYPE OF (Rule_definition);
	premise : clause_select;
	conclusion : Literal_conjunction;
WHERE
	WR1 : local_vars_of(SELF.conclusion)<= local_vars_of(SELF.premise);
END_ENTITY; -- Forward_chaining_rule


ENTITY Func;
	func_sym : function_symbol;
	terms : LIST [0:?] OF term_select;
END_ENTITY; -- Func


ENTITY Global_assignment;
	variable : Abstract_variable;
	val : term_select;
WHERE
	WR1 : NOT(contains_variable(SELF.val));
END_ENTITY; -- Global_assignment


ENTITY Ground_fact
	SUBTYPE OF (Atomic_formula);
WHERE
	WR1 : SIZEOF(QUERY(r <* SELF\Atomic_formula.terms | contains_variable(r)))= 0;
END_ENTITY; -- Ground_fact


ENTITY Literal_conjunction
	SUBTYPE OF (Simple_clause);
END_ENTITY; -- Literal_conjunction


ENTITY Literal_disjunction
	SUBTYPE OF (Simple_clause);
END_ENTITY; -- Literal_disjunction


ENTITY Row_value;
	values : LIST [0:?] OF term_select;
WHERE
	WR1 : SIZEOF(QUERY(v <* SELF.values | contains_variable(v)))= 0;
	WR2 : SIZEOF(QUERY(v <* SELF.values | 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ROW_VALUE' IN TYPEOF(v)))= 0;
END_ENTITY; -- Row_value


ENTITY Row_variable
	SUBTYPE OF (Abstract_variable);
END_ENTITY; -- Row_variable


ENTITY Rule_action
	ABSTRACT SUPERTYPE OF (ONEOF (Rule_submission, Rule_adoption, Rule_rejection, Rule_supersedence, Rule_creation, Rule_expiration, Rule_change_request, Rule_request, Rule_modification));
	subject_rule : Rule_version;
DERIVE
	subject_action_assignment : SET [0:?] OF Organization_or_person_in_organization_assignment := bag_to_set(QUERY(temp <* USEDIN(SELF, 'PERSON_ORGANIZATION_ASSIGNMENT_ARM.' + 
                                       'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS')
                    |(temp.role = 'subject action assignment')));
UNIQUE
	UR1 : subject_rule, subject_action_assignment;
WHERE
	WR1 : EXISTS(subject_action_assignment)AND(SIZEOF(subject_action_assignment)= 1);
END_ENTITY; -- Rule_action


ENTITY Rule_adoption
	SUBTYPE OF (Rule_action);
END_ENTITY; -- Rule_adoption


ENTITY Rule_change_request
	SUBTYPE OF (Rule_action);
	change_reason : STRING;
END_ENTITY; -- Rule_change_request


ENTITY Rule_condition
	SUBTYPE OF (Atomic_formula);
	positive : BOOLEAN;
END_ENTITY; -- Rule_condition


ENTITY Rule_creation
	SUBTYPE OF (Rule_action);
END_ENTITY; -- Rule_creation


ENTITY Rule_definition
	ABSTRACT SUPERTYPE OF (ONEOF (Forward_chaining_rule, Back_chaining_rule))
	SUBTYPE OF (Rule_software_definition);
END_ENTITY; -- Rule_definition


ENTITY Rule_expiration
	SUBTYPE OF (Rule_action);
	expiration_rationale : STRING;
END_ENTITY; -- Rule_expiration


ENTITY Rule_justification
	SUBTYPE OF (Rule_action);
	justified_action : Rule_action;
	justification_rationale : STRING;
WHERE
	WR1 : SELF <> justified_action;
END_ENTITY; -- Rule_justification


ENTITY Rule_modification
	SUBTYPE OF (Rule_action);
	modification_rationale : Rule_change_request;
END_ENTITY; -- Rule_modification


ENTITY Rule_priority;
	priority : INTEGER;
	prioritized_rule : Rule_definition;
WHERE
	WR1 : priority >= 0;
END_ENTITY; -- Rule_priority


ENTITY Rule_product
	SUBTYPE OF (Software);
WHERE
	WR1 : SIZEOF([ 'rule' ] * types_of_product(SELF))= 1;
END_ENTITY; -- Rule_product


ENTITY Rule_rejection
	SUBTYPE OF (Rule_action);
	rejection_reason : STRING;
END_ENTITY; -- Rule_rejection


ENTITY Rule_request
	SUBTYPE OF (Rule_action);
END_ENTITY; -- Rule_request


ENTITY Rule_set
	SUBTYPE OF (Rule_software_definition);
	conflict_resolution_strategy : OPTIONAL STRING;
	rule_member : SET [1:?] OF Rule_priority;
DERIVE
	engine : SET [1:1] OF Document_definition := get_document_definition(SELF, 'engine', 
		'SPECIFICATION_DOCUMENT_ARM.LANGUAGE_REFERENCE_MANUAL');
INVERSE
	purpose: Identification_assignment FOR items;
WHERE
	WR1 : purpose.role = 'purpose';
END_ENTITY; -- Rule_set


ENTITY Rule_set_group
	SUBTYPE OF (Rule_software_definition);
	elements : SET [2:?] OF Rule_set;
END_ENTITY; -- Rule_set_group


ENTITY Rule_software_definition
	SUPERTYPE OF (ONEOF (Rule_definition, Rule_set_group, Rule_set))
	SUBTYPE OF (Software_definition);
	SELF\Product_view_definition.defined_version : Rule_version;
END_ENTITY; -- Rule_software_definition


ENTITY Rule_submission
	SUBTYPE OF (Rule_action);
	submission_rationale : STRING;
END_ENTITY; -- Rule_submission


ENTITY Rule_supersedence
	SUBTYPE OF (Rule_action);
	superseded_rule : Rule_version;
END_ENTITY; -- Rule_supersedence


ENTITY Rule_version
	SUBTYPE OF (Software_version);
	SELF\Product_version.of_product : Rule_product;
INVERSE
	management_action: SET [1:?] OF Rule_action FOR subject_rule;
	product_definition: SET [1:?] OF Rule_software_definition FOR defined_version;
END_ENTITY; -- Rule_version


ENTITY Scalar_variable
	SUBTYPE OF (Abstract_variable);
END_ENTITY; -- Scalar_variable


ENTITY Simple_clause
	ABSTRACT SUPERTYPE OF (ONEOF (Literal_conjunction, Literal_disjunction));
	formulas : LIST [1:?] OF Rule_condition;
END_ENTITY; -- Simple_clause


ENTITY Symbol;
	name : STRING;
END_ENTITY; -- Symbol


ENTITY Project;
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
	responsible_organizations : SET [0:?] OF Organization;
	planned_start_date : OPTIONAL date_or_event;
	planned_end_date : OPTIONAL date_or_event;
	actual_start_date : OPTIONAL date_or_date_time_select;
	actual_end_date : OPTIONAL date_or_date_time_select;
END_ENTITY; -- Project


ENTITY Project_assignment;
	assigned_project : Project;
	role : STRING;
	items : SET [0:?] OF project_item;
END_ENTITY; -- Project_assignment


ENTITY Project_relationship;
	relation_type : STRING;
	description : OPTIONAL STRING;
	relating_project : Project;
	related_project : Project;
END_ENTITY; -- Project_relationship


ENTITY Promissory_usage_in_product_concept_relationship
	SUBTYPE OF (Product_configuration);
INVERSE
	security_code: SET [0:1] OF Security_classification_assignment FOR items;
WHERE
	WR1 : SIZEOF(SELF\Product_configuration.corresponding_design)= 1;
END_ENTITY; -- Promissory_usage_in_product_concept_relationship


ENTITY Applied_independent_property
	SUBTYPE OF (Assigned_property);
	base_independent_property : Independent_property;
DERIVE
	SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY; -- Applied_independent_property


ENTITY Assigned_property;
	id : OPTIONAL STRING;
	name : STRING;
	description : OPTIONAL STRING;
	described_element : property_assignment_select;
END_ENTITY; -- Assigned_property


ENTITY Property_representation;
	description : OPTIONAL STRING;
	property : Assigned_property;
	rep : Representation;
	role : OPTIONAL STRING;
END_ENTITY; -- Property_representation


ENTITY Requirement_assignment;
	id : STRING;
	description : OPTIONAL STRING;
	assigned_requirement : Requirement_view_definition;
	assigned_to : requirement_assignment_item;
END_ENTITY; -- Requirement_assignment


ENTITY Requirement_source;
	id : STRING;
	description : OPTIONAL STRING;
	source : requirement_source_item;
	sourced_requirement : Requirement_view_definition;
END_ENTITY; -- Requirement_source


ENTITY Constraint_occurrence
	SUPERTYPE OF (View_based_constraint_occurrence)
	SUBTYPE OF (Predefined_requirement_view_definition);
	logical_relation : OPTIONAL Complex_clause;
WHERE
	WR1 : (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'VIEW_BASED_CONSTRAINT_OCCURRENCE')IN TYPEOF(SELF))OR EXISTS(logical_relation);
	WR2 : NOT EXISTS(SELF\Product_view_definition.id);
END_ENTITY; -- Constraint_occurrence


ENTITY Design_characteristic_occurrence
	SUBTYPE OF (Predefined_requirement_view_definition);
END_ENTITY; -- Design_characteristic_occurrence


ENTITY Material_electrical_conductivity_requirement_occurrence
	SUBTYPE OF (Predefined_requirement_view_definition);
	electrical_conductivity_characteristic : material_conductivity_classification;
END_ENTITY; -- Material_electrical_conductivity_requirement_occurrence


ENTITY Operational_requirement_occurrence_relationship
	SUBTYPE OF (Assigned_property, View_definition_relationship);
	relationship_type : relationship_operation;
	SELF\View_definition_relationship.relating_view RENAMED operand_1 : Requirement_view_definition;
	SELF\View_definition_relationship.related_view RENAMED operand_2 : Requirement_view_definition;
	SELF\Assigned_property.described_element RENAMED result : Requirement_view_definition;
WHERE
	WR1 : operand_1 :<>: operand_2;
END_ENTITY; -- Operational_requirement_occurrence_relationship


ENTITY Predefined_requirement_view_definition
	SUPERTYPE OF (ONEOF (Constraint_occurrence, Design_characteristic_occurrence))
	SUBTYPE OF (Requirement_view_definition);
	required_analytical_representation : OPTIONAL SET [1:?] OF Analytical_model_application;
	required_functional_specification : OPTIONAL SET [1:?] OF Functional_specification;
	required_characteristic : OPTIONAL characteristic_select;
DERIVE
	reference_clause : SET [0:1] OF Document_definition := get_document_definition(SELF, 'reference clause', 
  			'SPECIFICATION_DOCUMENT_ARM.DOCUMENT_DEFINITION');
	requirement_specification : SET [1:?] OF Document_definition := get_document_definition(SELF, 'requirement specification', 
  			'SPECIFICATION_DOCUMENT_ARM.SPECIFICATION_DEFINITION');
INVERSE
	required_material: SET [0:1] OF Material_identification FOR items;
WHERE
	WR1 : NOT(SIZEOF(required_material)= 1)OR
           ('CONDUCTIVITY_MATERIAL_ASPECTS_ARM.'+ 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION' IN TYPEOF(required_material));
	WR2 : SELF\Product_view_definition.initial_context.application_domain IN 
          ['mechanical', 'thermal', 'electromechancial', 'electromagnetic compatibility', 'electrical'];
	WR3 : SELF\Product_view_definition.initial_context.life_cycle_stage IN ['design', 'qualify', 'inspect', 'test'];
	WR4 : NOT EXISTS(SELF\Product_view_definition.name);
END_ENTITY; -- Predefined_requirement_view_definition


ENTITY Requirement_view_definition_relationship
	SUBTYPE OF (View_definition_relationship);
	relationship_type : requirement_view_relationship_type;
	SELF\View_definition_relationship.relating_view RENAMED primary : Requirement_view_definition;
	SELF\View_definition_relationship.related_view RENAMED secondary : Requirement_view_definition;
WHERE
	WR1 : primary :<>: secondary;
END_ENTITY; -- Requirement_view_definition_relationship


ENTITY Shape_and_view_based_constraint_occurrence
	SUBTYPE OF (View_based_constraint_occurrence);
	constraining_shape : SET [1:?] OF Geometric_model;
WHERE
	WR1 : valid_constraining_shape(constraining_shape,
 SELF\View_based_constraint_occurrence.constraining_part);
END_ENTITY; -- Shape_and_view_based_constraint_occurrence


ENTITY View_based_constraint_occurrence
	SUPERTYPE OF (Shape_and_view_based_constraint_occurrence)
	SUBTYPE OF (Constraint_occurrence);
	constraining_part : Product_view_definition;
END_ENTITY; -- View_based_constraint_occurrence


ENTITY Requirement
	SUBTYPE OF (Product);
END_ENTITY; -- Requirement


ENTITY Requirement_version
	SUBTYPE OF (Product_version);
	SELF\Product_version.of_product : Requirement;
END_ENTITY; -- Requirement_version


ENTITY Requirement_version_relationship
	SUBTYPE OF (Product_version_relationship);
	SELF\Product_version_relationship.relating_version RENAMED predecessor : Requirement_version;
	SELF\Product_version_relationship.related_version RENAMED successor : Requirement_version;
END_ENTITY; -- Requirement_version_relationship


ENTITY Requirement_view_definition
	SUBTYPE OF (Product_view_definition);
	SELF\Product_view_definition.defined_version : Requirement_version;
END_ENTITY; -- Requirement_view_definition


ENTITY Requirement_collection_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.relating_view RENAMED collection : Requirement_view_definition;
	SELF\View_definition_relationship.related_view RENAMED member : Requirement_view_definition;
END_ENTITY; -- Requirement_collection_relationship


ENTITY Tracing_relationship
	SUBTYPE OF (View_definition_relationship);
	SELF\View_definition_relationship.relating_view RENAMED traces_from : Requirement_view_definition;
	SELF\View_definition_relationship.related_view RENAMED traces_to : Requirement_view_definition;
END_ENTITY; -- Tracing_relationship


ENTITY Security_classification;
	classification_level : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Security_classification


ENTITY Security_classification_assignment;
	classification : Security_classification;
	items : SET [1:?] OF security_classification_item;
END_ENTITY; -- Security_classification_assignment


ENTITY Composite_group_shape_element
	SUBTYPE OF (Composite_shape_element);
END_ENTITY; -- Composite_group_shape_element


ENTITY Composite_shape_element
	ABSTRACT SUPERTYPE OF (ONEOF (Composite_group_shape_element, Composite_unit_shape_element))
	SUBTYPE OF (Shape_element);
INVERSE
	composing_relationships: SET [2:?] OF Shape_element_composing_relationship FOR relating;
END_ENTITY; -- Composite_shape_element


ENTITY Composite_unit_shape_element
	SUBTYPE OF (Composite_shape_element);
END_ENTITY; -- Composite_unit_shape_element


ENTITY Shape_element_boundary_relationship
	SUBTYPE OF (Shape_element_relationship);
WHERE
	WR1 : NOT EXISTS(SELF\Shape_element_relationship.relation_type);
END_ENTITY; -- Shape_element_boundary_relationship


ENTITY Shape_element_composing_relationship
	SUBTYPE OF (Shape_element_constituent_relationship);
	SELF\Shape_element_relationship.relating : Composite_shape_element;
END_ENTITY; -- Shape_element_composing_relationship


ENTITY Shape_element_constituent_relationship
	SUPERTYPE OF (Shape_element_composing_relationship)
	SUBTYPE OF (Shape_element_relationship);
UNIQUE
	UR1 : related, relating;
WHERE
	WR1 : SELF\Shape_element_relationship.related <> SELF\Shape_element_relationship.relating;
	WR2 : NOT EXISTS(SELF\Shape_element_relationship.relation_type);
END_ENTITY; -- Shape_element_constituent_relationship


ENTITY Shape_element_locating_relationship
	SUBTYPE OF (Shape_element_constituent_relationship);
	SELF\Shape_element_relationship.related RENAMED located_shape_element : Shape_element;
	SELF\Shape_element_relationship.relating RENAMED locating_shape_element : Shape_element;
UNIQUE
	UR1 : located_shape_element, locating_shape_element;
END_ENTITY; -- Shape_element_locating_relationship


ENTITY Feature_definition
	SUBTYPE OF (Characterizable_object);
DERIVE
	feature_model : SET [1:?] OF Geometric_model := get_geometric_model(of_shape);
INVERSE
	of_shape: Item_shape FOR described_element;
WHERE
	WR1 : EXISTS(feature_model);
END_ENTITY; -- Feature_definition


ENTITY Feature_occurrence
	ABSTRACT SUPERTYPE OF (ONEOF (Instanced_feature, Placed_feature))
	SUBTYPE OF (Shape_element);
END_ENTITY; -- Feature_occurrence


ENTITY Geometric_model_constituent_relationship
	ABSTRACT SUPERTYPE
	SUBTYPE OF (Geometric_placement_operation);
	constituent_element : Shape_element;
	SELF\Geometric_placement_operation.template_definition RENAMED constituent_model : Geometric_model;
INVERSE
	composed_model: SET [1:1] OF Geometric_model FOR items;
WHERE
	WR1 : ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT' IN  TYPEOF(SELF))OR
  ('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_OPERATOR_TRANSFORMATION' IN TYPEOF(SELF));
	WR2 : NOT('CONTEXTUAL_SHAPE_POSITIONING_ARM.GEOMETRIC_PLACEMENT_MODEL' IN TYPEOF(composed_model[1]));
END_ENTITY; -- Geometric_model_constituent_relationship


ENTITY Instanced_feature
	SUBTYPE OF (Feature_occurrence, Feature_definition);
END_ENTITY; -- Instanced_feature


ENTITY Placed_feature
	SUBTYPE OF (Feature_occurrence);
	definition : Feature_definition;
INVERSE
	feature_shape: SET [0:?] OF Geometric_model_constituent_relationship FOR constituent_element;
END_ENTITY; -- Placed_feature


ENTITY Contextual_item_shape
	SUBTYPE OF (Item_shape);
	SELF\Item_shape.described_element : View_definition_usage;
DERIVE
	shaped_product : Product_view_definition := described_element\View_definition_relationship.related_view;
END_ENTITY; -- Contextual_item_shape


ENTITY Item_shape;
	id : OPTIONAL STRING;
	description : OPTIONAL STRING;
	described_element : shapeable_item;
END_ENTITY; -- Item_shape


ENTITY Shape_dependent_property_representation;
	characteristic_type : STRING;
	description : OPTIONAL STRING;
	described_element : shape_dependent_select;
	property_representation : Representation;
END_ENTITY; -- Shape_dependent_property_representation


ENTITY Shape_description_association;
	represented_characteristic : shape_select;
	representation : shape_model;
	role : OPTIONAL STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Shape_description_association


ENTITY Shape_element;
	id : OPTIONAL STRING;
	element_name : OPTIONAL STRING;
	description : OPTIONAL STRING;
	containing_shape : Item_shape;
WHERE
	WR1 : EXISTS(element_name)OR(TYPEOF(SELF\Shape_element)<> TYPEOF(SELF));
END_ENTITY; -- Shape_element


ENTITY Shape_element_relationship;
	relation_type : OPTIONAL STRING;
	description : OPTIONAL STRING;
	relating : Shape_element;
	related : Shape_element;
WHERE
	WR1 : EXISTS(relation_type)OR(TYPEOF(SELF\Shape_element_relationship)<> TYPEOF(SELF));
END_ENTITY; -- Shape_element_relationship


ENTITY Composite_signal_property
	SUBTYPE OF (Signal_property);
INVERSE
	signal_property_structure: SET [1:?] OF Composite_signal_property_relationship FOR composition;
END_ENTITY; -- Composite_signal_property


ENTITY Composite_signal_property_relationship;
	composition : Composite_signal_property;
	signal_property_structural_element : Signal_property;
INVERSE
	aggregation_operation: External_source_identification FOR item;
END_ENTITY; -- Composite_signal_property_relationship


ENTITY Signal;
	name : STRING;
INVERSE
	signal_category: External_source_identification FOR item;
UNIQUE
	UR1 : name;
END_ENTITY; -- Signal


ENTITY Signal_property
	SUPERTYPE OF (Composite_signal_property);
	signal_property_representation : Characteristic_data_table;
	characterized_signal : Signal;
INVERSE
	signal_property_category: External_source_identification FOR item;
END_ENTITY; -- Signal_property


ENTITY Software
	SUBTYPE OF (Information_product);
UNIQUE
	UR1 : id;
WHERE
	WR1 : SIZEOF(['software', 'information'] * types_of_product(SELF))= 2;
END_ENTITY; -- Software


ENTITY Software_definition
	SUBTYPE OF (Information_definition);
	SELF\Product_view_definition.defined_version : Software_version;
END_ENTITY; -- Software_definition


ENTITY Software_version
	SUBTYPE OF (Information_version);
	SELF\Product_version.of_product : Software;
END_ENTITY; -- Software_version


ENTITY Design_specification
	SUPERTYPE OF (Interface_specification_document_definition)
	SUBTYPE OF (Specification_definition);
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
END_ENTITY; -- Design_specification


ENTITY Fabrication_technology_specification
	SUBTYPE OF (Process_specification);
END_ENTITY; -- Fabrication_technology_specification


ENTITY Interface_specification_document_definition
	SUBTYPE OF (Design_specification);
END_ENTITY; -- Interface_specification_document_definition


ENTITY Language_reference_manual
	SUBTYPE OF (Specification_definition);
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
END_ENTITY; -- Language_reference_manual


ENTITY Material_specification
	SUBTYPE OF (Specification_definition);
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
END_ENTITY; -- Material_specification


ENTITY Partial_document_with_structured_text_representation_assignment
	SUBTYPE OF (Partial_document_assignment);
	structured_portion : Structured_text_representation;
UNIQUE
	UR1 : document_portion, assigned_document;
END_ENTITY; -- Partial_document_with_structured_text_representation_assignment


ENTITY Process_specification
	SUBTYPE OF (Specification_definition);
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
END_ENTITY; -- Process_specification


ENTITY Specification_allocation
	SUBTYPE OF (Document_assignment);
	purpose : STRING;
	SELF\Document_assignment.assigned_document RENAMED allocated_specification : Specification_definition;
END_ENTITY; -- Specification_allocation


ENTITY Specification_definition
	SUPERTYPE OF (ONEOF (Design_specification, Process_specification, Material_specification, Test_specification, Language_reference_manual))
	SUBTYPE OF (Document_definition);
DERIVE
	source : SET [0:?] OF Organization_or_person_in_organization_assignment := bag_to_set(QUERY(temp <* USEDIN(SELF,'PERSON_ORGANIZATION_ASSIGNMENT_ARM.'+
         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS')|
                        (temp.role = 'document source')));
WHERE
	WR1 : EXISTS(source)AND(SIZEOF(source)= 1);
END_ENTITY; -- Specification_definition


ENTITY Surface_finish_specification
	SUBTYPE OF (Material_specification);
END_ENTITY; -- Surface_finish_specification


ENTITY Test_specification
	SUBTYPE OF (Specification_definition);
WHERE
	WR1 : NOT EXISTS(SELF\Product_view_definition.additional_characterization);
END_ENTITY; -- Test_specification


ENTITY Product_specification
	SUBTYPE OF (Product_configuration);
	version_id : OPTIONAL STRING;
	defining_specifications : SET [0:?] OF Specification;
	SELF\Product_configuration.item_context : Product_class;
END_ENTITY; -- Product_specification


ENTITY Specification_based_product_version
	SUBTYPE OF (Product_version);
INVERSE
	specification_source: Item_design_association FOR design;
WHERE
	WR1 : 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PRODUCT_SPECIFICATION' IN TYPEOF(specification_source.configuration);
END_ENTITY; -- Specification_based_product_version


ENTITY Included_text_block
	SUBTYPE OF (Representation_item);
	source : Structured_text_representation;
END_ENTITY; -- Included_text_block


ENTITY Structured_text_composition
	SUBTYPE OF (Representation_item);
	content : string_representation_item_list_or_set;
END_ENTITY; -- Structured_text_composition


ENTITY Structured_text_representation
	SUBTYPE OF (Representation);
	SELF\Representation.items : SET [1:1] OF string_representation_item_select;
END_ENTITY; -- Structured_text_representation


ENTITY Tagged_text_format
	SUBTYPE OF (Class, Representation_context);
	SELF\Class.id RENAMED version_identifier : STRING;
END_ENTITY; -- Tagged_text_format


ENTITY Tagged_text_item
	SUBTYPE OF (String_representation_item);
WHERE
	WR1 : SIZEOF(QUERY(using_rep <* USEDIN(SELF,
       'FOUNDATION_REPRESENTATION_ARM.REPRESENTATION.ITEMS')|
  NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.TAGGED_TEXT_FORMAT' IN
  TYPEOF(using_rep.context_of_items))
      ))= 0;
END_ENTITY; -- Tagged_text_item


ENTITY Uniform_resource_indicator
	SUBTYPE OF (String_representation_item);
END_ENTITY; -- Uniform_resource_indicator


ENTITY Test_requirement_allocation
	SUBTYPE OF (Requirement_assignment);
	analytical_model_based_test_access : OPTIONAL SET [1:?] OF Analytical_model_port_assignment;
	functional_specification_based_test_access : OPTIONAL SET [1:?] OF Functional_usage_view_to_part_terminal_assignment;
	SELF\Requirement_assignment.assigned_requirement RENAMED assigned_requirement_property : Predefined_requirement_view_definition;
	SELF\Requirement_assignment.assigned_to : Product_version;
WHERE
	WR1 : EXISTS(analytical_model_based_test_access)XOR EXISTS(functional_specification_based_test_access);
	WR2 : NOT(EXISTS(functional_specification_based_test_access))OR 
     (SIZEOF(QUERY(fa <* functional_specification_based_test_access | NOT 
     (fa.physical_usage_view_terminal\Shape_element.containing_shape.defined_version = SELF\Requirement_assignment.assigned_to)))= 0);
	WR3 : assigned_requirement_property\Product_view_definition.initial_context\View_definition_context.life_cycle_stage = 'test';
END_ENTITY; -- Test_requirement_allocation


ENTITY Test_select_product
	SUBTYPE OF (Alternate_product_relationship);
WHERE
	WR1 : NOT EXISTS(SELF\Alternate_product_relationship.criteria);
END_ENTITY; -- Test_select_product


ENTITY Time_interval;
	id : STRING;
	name : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Time_interval


ENTITY Time_interval_relationship;
	relation_type : STRING;
	description : STRING;
	relating_time_interval : Time_interval;
	related_time_interval : Time_interval;
END_ENTITY; -- Time_interval_relationship


ENTITY Time_interval_with_bounds
	SUBTYPE OF (Time_interval);
	primary_bound : OPTIONAL date_or_event;
	secondary_bound : OPTIONAL date_or_event;
	duration_from_primary_bound : OPTIONAL Duration;
WHERE
	WR1 : NOT(EXISTS(secondary_bound)AND EXISTS(duration_from_primary_bound));
	WR2 : EXISTS(primary_bound)OR EXISTS(secondary_bound);
END_ENTITY; -- Time_interval_with_bounds


ENTITY Time_interval_assignment;
	assigned_time_interval : Time_interval;
	role : Time_interval_role;
	items : SET [1:?] OF time_interval_item;
END_ENTITY; -- Time_interval_assignment


ENTITY Time_interval_role;
	name : STRING;
	description : STRING;
END_ENTITY; -- Time_interval_role


ENTITY Amount_of_substance_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Amount_of_substance_unit


ENTITY Context_dependent_unit
	SUBTYPE OF (Unit);
WHERE
	WR1 : EXISTS(SELF\Unit.name);
END_ENTITY; -- Context_dependent_unit


ENTITY Conversion_based_unit
	SUBTYPE OF (Unit);
	conversion_factor : Value_with_unit;
WHERE
	WR1 : EXISTS(SELF\Unit.name);
END_ENTITY; -- Conversion_based_unit


ENTITY Derived_unit
	SUBTYPE OF (Unit);
	elements : SET [1:?] OF Derived_unit_element;
END_ENTITY; -- Derived_unit


ENTITY Derived_unit_element;
	base_unit : Unit;
	exponent : REAL;
END_ENTITY; -- Derived_unit_element


ENTITY Duration
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF\Value_with_unit.unit);
END_ENTITY; -- Duration


ENTITY Electric_current_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Electric_current_unit


ENTITY Length_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Length_unit


ENTITY Luminous_intensity_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Luminous_intensity_unit


ENTITY Mass_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Mass_unit


ENTITY Plane_angle_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Plane_angle_unit


ENTITY Ratio_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Ratio_unit


ENTITY Solid_angle_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Solid_angle_unit


ENTITY Thermodynamic_temperature_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Thermodynamic_temperature_unit


ENTITY Time_unit
	SUBTYPE OF (Unit);
END_ENTITY; -- Time_unit


ENTITY Uncertainty_with_unit
	SUBTYPE OF (Value_with_unit);
	name : STRING;
	description : OPTIONAL STRING;
END_ENTITY; -- Uncertainty_with_unit


ENTITY Unit
	SUPERTYPE OF (ONEOF (Amount_of_substance_unit, Electric_current_unit, Length_unit, Luminous_intensity_unit, Mass_unit, Plane_angle_unit, Ratio_unit, Solid_angle_unit, Thermodynamic_temperature_unit, Time_unit));
	name : STRING;
	si_unit : BOOLEAN;
END_ENTITY; -- Unit


ENTITY Value_with_unit;
	unit : Unit;
	value_component : measure_value;
END_ENTITY; -- Value_with_unit


ENTITY Absorbed_dose_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Absorbed_dose_data_element


ENTITY Activity_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Activity_data_element


ENTITY Amount_of_substance_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Amount_of_substance_data_element


ENTITY Angle_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Angle_data_element


ENTITY Area_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Area_data_element


ENTITY Capacitance_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Capacitance_data_element


ENTITY Celsius_temperature_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Celsius_temperature_data_element


ENTITY Conductance_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Conductance_data_element


ENTITY Dose_equivalent_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Dose_equivalent_data_element


ENTITY Electric_charge_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Electric_charge_data_element


ENTITY Electric_current_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Electric_current_data_element


ENTITY Electromotive_force_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Electromotive_force_data_element


ENTITY Energy_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Energy_data_element


ENTITY Force_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Force_data_element


ENTITY Frequency_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Frequency_data_element


ENTITY Illuminance_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Illuminance_data_element


ENTITY Inductance_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Inductance_data_element


ENTITY Length_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : SELF\Value_with_unit.value_component >= 0.0;
	WR2 : 'VALUE_WITH_UNIT_ARM.LENGTH_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Length_data_element


ENTITY Luminous_flux_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Luminous_flux_data_element


ENTITY Luminous_intensity_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Luminous_intensity_data_element


ENTITY Magnetic_flux_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Magnetic_flux_data_element


ENTITY Magnetic_flux_density_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Magnetic_flux_density_data_element


ENTITY Mass_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.MASS_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Mass_data_element


ENTITY Power_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Power_data_element


ENTITY Pressure_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Pressure_data_element


ENTITY Ratio_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.RATIO_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Ratio_data_element


ENTITY Resistance_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Resistance_data_element


ENTITY Scattering_parameter_data_element
	SUBTYPE OF (Value_with_unit);
	angle : REAL;
	SELF\Value_with_unit.value_component RENAMED radius : REAL;
WHERE
	WR1 : radius >= 0;
	WR2 : {0<=angle<6.28218519999};
END_ENTITY; -- Scattering_parameter_data_element


ENTITY Solid_angle_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Solid_angle_data_element


ENTITY Thermodynamic_temperature_data_element
	SUBTYPE OF (Value_with_unit);
WHERE
	WR1 : 'VALUE_WITH_UNIT_ARM.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\Value_with_unit.Unit);
END_ENTITY; -- Thermodynamic_temperature_data_element


ENTITY Volume_data_element
	SUBTYPE OF (Value_with_unit);
END_ENTITY; -- Volume_data_element


ENTITY Directed_activity
	SUBTYPE OF (Activity);
	directive : Work_order;
END_ENTITY; -- Directed_activity


ENTITY Work_order;
	name : STRING;
	description : OPTIONAL STRING;
	in_response_to : SET [0:?] OF Work_request;
END_ENTITY; -- Work_order


ENTITY Activity_method_assignment;
	relation_type : STRING;
	assigned_method : Activity_method;
	associated_request : Work_request;
END_ENTITY; -- Activity_method_assignment


ENTITY Affected_items_assignment;
	assigned_work_request : Work_request;
	items : SET [1:?] OF affected_item_select;
END_ENTITY; -- Affected_items_assignment


ENTITY Work_request;
	request_id : STRING;
	version_id : STRING;
	description : OPTIONAL STRING;
	purpose : STRING;
END_ENTITY; -- Work_request


ENTITY Work_request_status;
	status : STRING;
	work_request : Work_request;
END_ENTITY; -- Work_request_status


SUBTYPE_CONSTRAINT physical_component_subtypes FOR Physical_component;
	ONEOF (Bare_die_component, Packaged_component, Routed_interconnect_component, Routed_physical_component);
END_SUBTYPE_CONSTRAINT; -- physical_component_subtypes

SUBTYPE_CONSTRAINT physical_component_terminal_subtypes FOR Physical_component_terminal;
	ONEOF (Bare_die_component_terminal, Minimally_defined_component_terminal, Packaged_component_join_terminal);
END_SUBTYPE_CONSTRAINT; -- physical_component_terminal_subtypes

SUBTYPE_CONSTRAINT process_specification_subtypes FOR Process_specification;
	ONEOF (Assembly_technology_specification, Fabrication_technology_specification);
END_SUBTYPE_CONSTRAINT; -- process_specification_subtypes

SUBTYPE_CONSTRAINT curve_subtypes FOR Curve;
	ONEOF (Composite_curve, Trimmed_curve);
END_SUBTYPE_CONSTRAINT; -- curve_subtypes

SUBTYPE_CONSTRAINT alternate_geometry_items FOR Detailed_geometric_model_element;
	ONEOF (Cartesian_point, Direction, Axis_placement, Cartesian_transformation_2d, Cartesian_transformation_3d, Curve, Point_on_curve, Point_on_surface, Surface);
END_SUBTYPE_CONSTRAINT; -- alternate_geometry_items

SUBTYPE_CONSTRAINT exclusive_property_value_representation_characteristic FOR Property_value_representation;
	ONEOF (Range_characteristic, Tolerance_characteristic);
END_SUBTYPE_CONSTRAINT; -- exclusive_property_value_representation_characteristic

SUBTYPE_CONSTRAINT cma_class_subtypes FOR Class;
	ONEOF (Conductivity_material_property_class, Relative_permeability_material_property_class, Relative_optical_insertion_loss_material_property_class, Relative_permittivity_material_property_class);
END_SUBTYPE_CONSTRAINT; -- cma_class_subtypes

SUBTYPE_CONSTRAINT alternate_extended_geometry_items FOR Detailed_geometric_model_element;
	ONEOF (Cartesian_point, Direction, Axis_placement, Cartesian_transformation_2d, Cartesian_transformation_3d, Curve, Point_on_curve, Point_on_surface, Surface, Vector);
END_SUBTYPE_CONSTRAINT; -- alternate_extended_geometry_items

SUBTYPE_CONSTRAINT axis_placement_subtypes FOR Axis_placement;
	ONEOF (Axis_placement_2d, Axis_placement_3d);
END_SUBTYPE_CONSTRAINT; -- axis_placement_subtypes

SUBTYPE_CONSTRAINT egt_non_feature_shape_element_subtypes FOR Non_feature_shape_element;
	ONEOF (Derived_non_feature_shape_element, Directed_axis, Positional_boundary, Positional_boundary_member, Tolerance_zone_boundary, Tolerance_zone_boundary_member, Viewing_plane, Seating_plane, Reference_graphic_registration_mark);
END_SUBTYPE_CONSTRAINT; -- egt_non_feature_shape_element_subtypes

SUBTYPE_CONSTRAINT alternate_measure_items FOR Measure_item;
	ABSTRACT SUPERTYPE;
	ONEOF (Measure_item_with_precision, Numerical_item_with_global_unit, Numerical_item_with_unit, Value_limit, Value_limit_with_global_unit, Value_list, Value_range, Value_range_with_global_unit, Value_set, Value_with_tolerances);
END_SUBTYPE_CONSTRAINT; -- alternate_measure_items

SUBTYPE_CONSTRAINT facz_shape_element_subtypes FOR Shape_element;
	ONEOF (Shape_feature, Connection_zone);
END_SUBTYPE_CONSTRAINT; -- facz_shape_element_subtypes

SUBTYPE_CONSTRAINT change_design_object_management_relationship_subtypes FOR Change_design_object_management_relationship;
	ONEOF (Terminal_swap_specification, Gate_path_swap_specification, Component_swap_specification);
END_SUBTYPE_CONSTRAINT; -- change_design_object_management_relationship_subtypes

SUBTYPE_CONSTRAINT physical_component_feature_subtypes FOR Physical_component_feature;
	ONEOF (Physical_component_terminal, Physical_component_interface_terminal);
END_SUBTYPE_CONSTRAINT; -- physical_component_feature_subtypes

SUBTYPE_CONSTRAINT functional_unit_definition_subtypes FOR Functional_unit_definition;
	ONEOF (Functional_unit_network_definition, Functional_unit_usage_view);
END_SUBTYPE_CONSTRAINT; -- functional_unit_definition_subtypes

SUBTYPE_CONSTRAINT part_feature_subtypes FOR Part_feature;
	ONEOF (Package_orientation_feature, Package_body);
END_SUBTYPE_CONSTRAINT; -- part_feature_subtypes

SUBTYPE_CONSTRAINT packaged_part_terminal_subtypes FOR Packaged_part_terminal;
	ONEOF (Packaged_part_interface_terminal, Packaged_part_join_terminal);
END_SUBTYPE_CONSTRAINT; -- packaged_part_terminal_subtypes

SUBTYPE_CONSTRAINT pudv_connection_zone_subtypes FOR Connection_zone;
	ONEOF (Connection_zone_in_usage_view, Connection_zone_in_design_view, Connection_zone_in_layout_template);
END_SUBTYPE_CONSTRAINT; -- pudv_connection_zone_subtypes

SUBTYPE_CONSTRAINT pudv_part_view_definition_subtypes FOR Part_view_definition;
	ONEOF (Part_usage_view, Part_design_view);
END_SUBTYPE_CONSTRAINT; -- pudv_part_view_definition_subtypes

SUBTYPE_CONSTRAINT puswp_geometric_model_subtypes FOR Geometric_model;
	ONEOF (Physical_unit_keepout_shape_model, Physical_unit_shape_model);
END_SUBTYPE_CONSTRAINT; -- puswp_geometric_model_subtypes

SUBTYPE_CONSTRAINT pdpdms_activity_relationship_subtypes FOR Activity_relationship;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_activity_relationship, Externally_defined_activity_relationship);
END_SUBTYPE_CONSTRAINT; -- pdpdms_activity_relationship_subtypes

SUBTYPE_CONSTRAINT pdpdms_address_assignment_subtypes FOR Address_assignment;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_address_assignment, Externally_defined_address_assignment);
END_SUBTYPE_CONSTRAINT; -- pdpdms_address_assignment_subtypes

SUBTYPE_CONSTRAINT pdpdms_approval_status_subtypes FOR Approval_status;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_approval_status, Externally_defined_approval_status);
END_SUBTYPE_CONSTRAINT; -- pdpdms_approval_status_subtypes

SUBTYPE_CONSTRAINT pdpdms_approval_subtypes FOR Approval;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_approval, Externally_defined_approval);
END_SUBTYPE_CONSTRAINT; -- pdpdms_approval_subtypes

SUBTYPE_CONSTRAINT pdpdms_date_or_date_time_assignment_subtypes FOR Date_or_date_time_assignment;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_date_or_date_time_assignment, Externally_defined_date_or_date_time_assignment);
END_SUBTYPE_CONSTRAINT; -- pdpdms_date_or_date_time_assignment_subtypes

SUBTYPE_CONSTRAINT pdpdms_organization_or_person_in_organization_assignment_subtypes FOR Organization_or_person_in_organization_assignment;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_organization_or_person_in_organization_assignment, Externally_defined_organization_or_person_in_organization_assignment);
END_SUBTYPE_CONSTRAINT; -- pdpdms_organization_or_person_in_organization_assignment_subtypes

SUBTYPE_CONSTRAINT pdpdms_security_classification_subtypes FOR Security_classification;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_security_classification, Externally_defined_security_classification);
END_SUBTYPE_CONSTRAINT; -- pdpdms_security_classification_subtypes

SUBTYPE_CONSTRAINT pdpdms_work_request_status_subtypes FOR Work_request_status;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_work_request_status, Externally_defined_work_request_status);
END_SUBTYPE_CONSTRAINT; -- pdpdms_work_request_status_subtypes

SUBTYPE_CONSTRAINT pdpdms_work_request_subtypes FOR Work_request;
	ABSTRACT SUPERTYPE;
	ONEOF (Pre_defined_work_request, Externally_defined_work_request);
END_SUBTYPE_CONSTRAINT; -- pdpdms_work_request_subtypes

SUBTYPE_CONSTRAINT ttr_string_representation_item_subtypes FOR String_representation_item;
	ONEOF (Tagged_text_item, Uniform_resource_indicator);
END_SUBTYPE_CONSTRAINT; -- ttr_string_representation_item_subtypes

SUBTYPE_CONSTRAINT value_with_unit_subtypes FOR Value_with_unit;
	ONEOF (Absorbed_dose_data_element, Activity_data_element, Amount_of_substance_data_element, Angle_data_element, Area_data_element, Capacitance_data_element, Celsius_temperature_data_element, Conductance_data_element, Dose_equivalent_data_element, Electric_charge_data_element, Electric_current_data_element, Electromotive_force_data_element, Energy_data_element, Force_data_element, Frequency_data_element, Illuminance_data_element, Inductance_data_element, Length_data_element, Luminous_flux_data_element, Luminous_intensity_data_element, Magnetic_flux_data_element, Magnetic_flux_density_data_element, Mass_data_element, Power_data_element, Pressure_data_element, Ratio_data_element, Resistance_data_element, Scattering_parameter_data_element, Solid_angle_data_element, Thermodynamic_temperature_data_element, Volume_data_element);
END_SUBTYPE_CONSTRAINT; -- value_with_unit_subtypes

RULE analytical_model_definition_constraint FOR (Product_view_definition);
WHERE
	WR1 : SIZEOF(QUERY(pvd <* Product_view_definition |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'ANALYTICAL_MODEL_DEFINITION' IN  TYPEOF (pvd)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'ANALYTICAL_MODEL_VERSION' IN TYPEOF(pvd.defined_version))))=0;
END_RULE; -- analytical_model_definition_constraint

RULE analytical_model_version_constraint FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'ANALYTICAL_MODEL_VERSION' IN  TYPEOF(pv)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'ANALYTICAL_MODEL' IN TYPEOF(pv.of_product))))=0;
END_RULE; -- analytical_model_version_constraint

RULE unique_document_id FOR (Document);
WHERE
	WR1 : SIZEOF(QUERY(p1 <* Document | SIZEOF(QUERY(p2 <* Document | 
             (NOT(p1 :=: p2)AND(p1.id = p2.id))))> 0))= 0;
END_RULE; -- unique_document_id

RULE unique_part_id FOR (Part);
WHERE
	WR1 : SIZEOF(QUERY(p1 <* Part | SIZEOF(QUERY(p2 <* Part | 
             (NOT(p1 :=: p2)AND(p1.id = p2.id))))> 0))= 0;
END_RULE; -- unique_part_id

RULE unique_product_version_id FOR (Product);
WHERE
	WR1 : SIZEOF(QUERY(p <* Product | 
  (SIZEOF(QUERY(pv1 <*
USEDIN(p,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VERSION.OF_PRODUCT')|  
  (SIZEOF(QUERY(pv2 <*
USEDIN(p,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VERSION.OF_PRODUCT')
|  pv1.id = pv2.id))> 1)
    ))> 0)
  ))= 0;
END_RULE; -- unique_product_version_id

RULE unique_product_view_definition_id FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version | 
  (SIZEOF(QUERY(pvd1 <*
USEDIN(pv,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION')|  
    (SIZEOF(QUERY(pvd2 <*
USEDIN(pv,'PRODUCT_VIEW_DEFINITION_ARM.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION')
|  pvd1.id = pvd2.id))> 1)
    ))> 0)
  ))= 0;
END_RULE; -- unique_product_view_definition_id

RULE unique_requirement_id FOR (Requirement);
WHERE
	WR1 : SIZEOF(QUERY(p1 <* Requirement | SIZEOF(QUERY(p2 <* Requirement | 
             (NOT(p1 :=: p2)AND(p1.id = p2.id))))> 0))= 0;
END_RULE; -- unique_requirement_id

RULE document_version_constraint FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'DOCUMENT_VERSION' IN  TYPEOF(pv)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'DOCUMENT' IN TYPEOF(pv.of_product))))= 0;
END_RULE; -- document_version_constraint

RULE document_definition_constraint FOR (Product_view_definition);
WHERE
	WR1 : SIZEOF(QUERY(dd <* Product_view_definition |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'DOCUMENT_DEFINITION' IN  TYPEOF (dd)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'DOCUMENT_VERSION' IN TYPEOF(dd.defined_version))))=0;
END_RULE; -- document_definition_constraint

RULE Information_product_version_constraint FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version |(NOT(
  'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'INFORMATION_VERSION' IN  TYPEOF
(pv)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'INFORMATION_PRODUCT' IN TYPEOF(
pv.of_product))))=0;
END_RULE; -- Information_product_version_constraint

RULE Definition_replacement_requires_effectivity_assignment FOR (Part_definition_relationship);
WHERE
	WR1 : SIZEOF(QUERY(pdr <* Part_definition_relationship | 
	(pdr\View_definition_relationship.relation_type = 'definition replacement')AND 
	(SIZEOF(USEDIN(pdr,'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.EFFECTIVITY_ASSIGNMENT.ITEMS'))= 0)))
	 = 0;
END_RULE; -- Definition_replacement_requires_effectivity_assignment

RULE Mandatory_part_occurrence_definition_relationship FOR (Assembly_component_relationship);LOCAL

  assemblies_of_parts: SET OF Assembly_component_relationship := [];

END_LOCAL
;

WHERE
	WR1 : SIZEOF(QUERY(ar <* assemblies_of_parts | 
	NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ASSEMBLED_PART_ASSOCIATION' IN TYPEOF(ar))))= 0;
END_RULE; -- Mandatory_part_occurrence_definition_relationship

RULE part_version_constraint FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PART_VERSION' IN  TYPEOF(pv)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PART' IN TYPEOF(pv.of_product))))=0;
END_RULE; -- part_version_constraint

RULE part_view_definition_constraint FOR (Product_view_definition);
WHERE
	WR1 : SIZEOF(QUERY(pvd <* Product_view_definition |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PART_VIEW_DEFINITION' IN  TYPEOF (pvd)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PART_VERSION' IN TYPEOF(pvd.defined_version))))=0;
END_RULE; -- part_view_definition_constraint

RULE template_definition_constraint FOR (Product_view_definition);
WHERE
	WR1 : SIZEOF(QUERY(pvd <* Product_view_definition |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'TEMPLATE_DEFINITION' IN  TYPEOF (pvd)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'TEMPLATE_VERSION' IN TYPEOF(pvd.defined_version))))=0;
END_RULE; -- template_definition_constraint

RULE template_version_constraint FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'TEMPLATE_VERSION' IN  TYPEOF(pv)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'TEMPLATE' IN TYPEOF(pv.of_product))))=0;
END_RULE; -- template_version_constraint

RULE unique_assembly_component_relationship FOR (Assembly_component_relationship);LOCAL

     gee : SET  OF  GENERIC_ENTITY  := [];

     gei : SET OF GENERIC_ENTITY := [];

   END_LOCAL
;

   REPEAT i := 1 TO SIZEOF(Assembly_component_relationship)BY 1;

     gee  := gee + Assembly_component_relationship[i]\View_definition_relationship.related_view;

     gei  := gei + Assembly_component_relationship[i]\View_definition_relationship.relating_view;

   END_REPEAT;

WHERE
	WR1 : (SIZEOF(gee)= SIZEOF(gei))AND(SIZEOF(gee)= SIZEOF(Assembly_component_relationship));
END_RULE; -- unique_assembly_component_relationship

RULE unique_assembly_item_number FOR (Assembly_item_number);LOCAL

     acr : BAG OF Assembly_component_relationship := [];

   END_LOCAL
;

   REPEAT i := 1 TO SIZEOF(Assembly_item_number)BY 1;

     acr  := acr + Assembly_item_number[i].assembly_usage;

   END_REPEAT;

WHERE
	WR1 : SIZEOF(acr)= SIZEOF(bag_to_set(acr));
END_RULE; -- unique_assembly_item_number

RULE max_one_entity_prefix FOR (Enum_reference_prefix);
WHERE
	WR1 : SIZEOF(QUERY(x <* Enum_reference_prefix | TRUE))<= 1;
END_RULE; -- max_one_entity_prefix

RULE rule_software_definition_constraint FOR (Product_view_definition);
WHERE
	WR1 : SIZEOF(QUERY(pvd <* Product_view_definition |(NOT('PRODUCT_RULE_ARM.' + 'RULE_SOFTWARE_DEFINITION' 
                       IN  TYPEOF(pvd)))
                       AND('PRODUCT_RULE_ARM.' + 'RULE_VERSION' IN TYPEOF(pvd.defined_version))))= 0;
END_RULE; -- rule_software_definition_constraint

RULE rule_version_constraint FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version |(NOT('PRODUCT_RULE_ARM.' + 'RULE_VERSION' IN  TYPEOF(pv)))
                      AND('PRODUCT_RULE_ARM.' + 'RULE_PRODUCT' IN TYPEOF(pv.of_product))))= 0;
END_RULE; -- rule_version_constraint

RULE software_definition_constraint FOR (Product_view_definition);
WHERE
	WR1 : SIZEOF(QUERY(pvd <* Product_view_definition |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'SOFTWARE_DEFINITION' IN  TYPEOF (pvd)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'SOFTWARE_VERSION' IN TYPEOF(pvd.defined_version))))=0;
END_RULE; -- software_definition_constraint

RULE software_version_constraint FOR (Product_version);
WHERE
	WR1 : SIZEOF(QUERY(pv <* Product_version |(NOT('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'SOFTWARE_VERSION' IN  TYPEOF(pv)))AND('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'SOFTWARE' IN TYPEOF(pv.of_product))))=0;
END_RULE; -- software_version_constraint

FUNCTION get_value
	(input1 : STRING; np : SET [0:?] OF Representation_item) : Numerical_item_with_unit;
REPEAT i := 1 TO SIZEOF(np)BY 1;

  IF input1 = np[i]\Representation_item.name THEN
       RETURN(np[i]);

  END_IF;

END_REPEAT;

  RETURN(?);
END_FUNCTION; -- get_value

FUNCTION valid_range
	(input1 : Numerical_item_with_unit; input2 : Numerical_item_with_unit) : BOOLEAN;
RETURN(TRUE);
END_FUNCTION; -- valid_range

FUNCTION valid_relationship
	(input1 : Numerical_item_with_unit; input2 : Numerical_item_with_unit) : BOOLEAN;
RETURN(TRUE);
END_FUNCTION; -- valid_relationship

FUNCTION bag_to_set
	(the_bag : BAG [0:?] OF GENERIC) : SET [0:?] OF GENERIC;
LOCAL

      the_set : SET OF GENERIC : intype := [];

      i       : INTEGER;

    END_LOCAL
;


    IF SIZEOF(the_bag)> 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);

        the_set := the_set + the_bag[i];

      END_REPEAT;

    END_IF;

    RETURN(the_set);
END_FUNCTION; -- bag_to_set

FUNCTION get_cond_class
	(input1 : Material_identification_with_conductivity_classification; input2 : STRING) : STRING;
LOCAL

  car : SET OF Classification_assignment := [];

 END_LOCAL
;

  car := QUERY(ca <* bag_to_set(USEDIN(input1,
	 	'CLASSIFICATION_ASSIGNMENT_ARM.' + 
	 	'CLASSIFICATION_ASSIGNMENT.' + 'ITEMS'))|
	 	('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.'+
	 	input2 IN TYPEOF(ca.assigned_class)));

 IF SIZEOF(car)= 1
  THEN
    RETURN(car[1].assigned_class\class.name);

  ELSE
    RETURN('?');

 END_IF;
END_FUNCTION; -- get_cond_class

FUNCTION valid_document_property_representation
	(rep : Document_property_representation) : LOGICAL;
CASE rep.name OF
'document content': 
   BEGIN
RETURN(
  SIZEOF(QUERY(items <* rep\Representation.items | 
  NOT (items.name IN  ['detail level', 'geometry type', 'real world scale'])))= 0
);

   END;


'document creation': 
   BEGIN
IF NOT (SIZEOF(QUERY(items <* rep\Representation.items | 
  NOT (items.name IN  ['creating interface', 'creating system', 'operating system'])))= 0
)THEN
  RETURN(FALSE);

END_IF;

IF NOT (SIZEOF(QUERY(items <* rep\Representation.items | 
  NOT (items.name IN  ['creating system'])))= 1
)THEN
  RETURN(FALSE);

ELSE
  RETURN(TRUE);

END_IF;


   END;


'document format': 
   BEGIN
RETURN(
  SIZEOF(QUERY(items <* rep\Representation.items | 
  NOT (items.name IN  ['character code', 'data format', 'size format', 'size format standard'])))= 0
);

   END;


'document size': 
   BEGIN
RETURN(
  SIZEOF(QUERY(items <* rep\Representation.items | 
  NOT(items.name IN ['file size', 'page count'])))= 0
);

   END;


OTHERWISE:
  RETURN(UNKNOWN);

END_CASE;
END_FUNCTION; -- valid_document_property_representation

FUNCTION acyclic_representation_relationship
	(relation : Representation_relationship; relatives : SET [1:?] OF Representation; specific_relation : STRING) : BOOLEAN;
LOCAL

      x : SET OF representation_relationship;

    END_LOCAL
;


    IF  relation.rep_1 IN  relatives THEN
      RETURN (FALSE);

    END_IF;

    x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'FOUNDATION_REPRESENTATION_ARM.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2'))| specific_relation IN TYPEOF(r));

    REPEAT i := 1 TO HIINDEX(x);

      IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation)THEN
        RETURN (FALSE);

      END_IF;

    END_REPEAT;

    RETURN(TRUE);
END_FUNCTION; -- acyclic_representation_relationship

FUNCTION consistent_bus_structural_definition
	(input : SET [0:?] OF Bus_element_link) : BOOLEAN;
LOCAL

      vertex        : SET OF bus_structural_definition_or_node := [];

      edge          : INTEGER  := SIZEOF(input);

      vc            : INTEGER  := 0;

      vertex_degree : INTEGER := 0;

    END_LOCAL
;


    REPEAT  i := 1 TO  SIZEOF(input)BY  1;

      vertex := vertex + input[i].precedent_element;

      vertex := vertex + input[i].subsequent_element;

    END_REPEAT;

    vc := SIZEOF(vertex);

    IF (vc <>(edge + 1))THEN
      RETURN(FALSE);

    END_IF;

    REPEAT  i := 1 TO  vc BY  1;

      vertex_degree := 0;

      REPEAT j := 1 TO SIZEOF(input)BY 1;

        IF  input[j].precedent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;

        END_IF;

        IF  input[j].subsequent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;

        END_IF;

      END_REPEAT;

      IF(vertex_degree > 2)THEN
        RETURN(FALSE);

      END_IF;

    END_REPEAT;

    RETURN(TRUE);
END_FUNCTION; -- consistent_bus_structural_definition

FUNCTION valid_es
	(input1 : STRING; input2 : SET [0:?] OF Non_feature_shape_model) : BOOLEAN;
REPEAT i := 1 TO HIINDEX(input2);

    IF NOT(input1 IN TYPEOF(input2))THEN RETURN(FALSE);

    END_IF;

   END_REPEAT;

    RETURN(TRUE);
END_FUNCTION; -- valid_es

FUNCTION add_data_element
	(input1 : Length_data_element; input2 : Length_data_element) : Length_data_element;
RETURN(input1);
END_FUNCTION; -- add_data_element

FUNCTION max_data_element
	(input1 : Length_data_element; input2 : Length_data_element) : Length_data_element;
RETURN(input1);
END_FUNCTION; -- max_data_element

FUNCTION disjoint_package_terminals
	(input : Packaged_part_terminal) : BOOLEAN;
RETURN(TRUE);
END_FUNCTION; -- disjoint_package_terminals

FUNCTION single_package_version
	(input : Packaged_part) : BOOLEAN;
RETURN(TRUE);
END_FUNCTION; -- single_package_version

FUNCTION get_pct
	(input : SET [0:?] OF Physical_connectivity_element) : SET [0:?] OF Physical_component_terminal;
LOCAL

   pct : SET OF Physical_component_terminal := [];

    i : INTEGER := 0;

  END_LOCAL
;

  REPEAT  i := 1 TO SIZEOF(input)BY 1;

   IF ('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN  TYPEOF(input[i].start_terminus))THEN
   pct := pct + input[i].start_terminus;

   END_IF;

   IF('PHYSICAL_COMPONENT_FEATURE_ARM.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF(input[i].end_terminus))THEN
   pct := pct + input[i].end_terminus;

   END_IF;

  END_REPEAT;

  RETURN(pct);
END_FUNCTION; -- get_pct

FUNCTION get_terminals
	(input : SET [0:?] OF Physical_connectivity_definition) : SET [0:?] OF Component_terminal;
LOCAL

   ct : SET OF Component_terminal := [];

    i : INTEGER := 0;

  END_LOCAL
;

  REPEAT  i := 1 TO SIZEOF(input)BY 1;

   ct := ct + input[i].associated_terminals;

  END_REPEAT;

  RETURN(ct);
END_FUNCTION; -- get_terminals

FUNCTION get_tj
	(input : SET [0:?] OF Physical_connectivity_element) : SET [0:?] OF Topological_junction;
LOCAL

   tj : SET OF Topological_junction := [];

    i : INTEGER := 0;

  END_LOCAL
;

  REPEAT  i := 1 TO SIZEOF(input)BY 1;

   IF ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.TOPOLOGICAL_JUNCTION' IN  TYPEOF(input[i].start_terminus))THEN
   tj := tj + input[i].start_terminus;

   END_IF;

   IF('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.TOPOLOGICAL_JUNCTION' IN TYPEOF(input[i].end_terminus))THEN
   tj := tj + input[i].end_terminus;

   END_IF;

  END_REPEAT;

  RETURN(tj);
END_FUNCTION; -- get_tj

FUNCTION get_cit
	(ac : Assembly_component; ajb : SET [0:?] OF Assembly_joint) : Physical_component_interface_terminal;
LOCAL

      cf  : LIST[0:?] OF component_feature := [];

      cit : Physical_component_interface_terminal;

    END_LOCAL
;


    REPEAT i := 1 TO 2 BY 1;

      cf[1] := ajb[1].assembly_feature_1;

      cf[2] := ajb[1].assembly_feature_2;

      IF  ac :=: cf[i].associated_component THEN
        IF('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.INTERFACE_COMPONENT' IN TYPEOF(cf[i].associated_component))THEN
          RETURN(cf[i]);

        ELSE
          RETURN(?);

        END_IF;

      ELSE
        RETURN(?);

      END_IF;

    END_REPEAT;

    RETURN(?);
END_FUNCTION; -- get_cit

FUNCTION get_pctd
	(ac : Assembly_component; ajb : SET [0:?] OF Assembly_joint) : SET [0:?] OF Part_connected_terminals_definition;
LOCAL

      cf   : LIST[1:?] OF  Component_feature;

      pctd : SET OF part_connected_terminals_definition := [];

    END_LOCAL
;


    REPEAT i := 1 TO 2 BY 1;

      cf[1] := ajb[1].assembly_feature_1;

      cf[2] := ajb[1].assembly_feature_2;

      IF  ac :=: cf[i].associated_component THEN
        IF('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PART_TERMINAL' IN TYPEOF(cf[i].definition))THEN
          pctd := cf[i].definition.connection_requirement;

          RETURN(pctd);

        ELSE
          RETURN(pctd);

        END_IF;

      ELSE
        RETURN(pctd);

      END_IF;

    END_REPEAT;

    RETURN(?);
END_FUNCTION; -- get_pctd

FUNCTION get_pctr
	(ac : Assembly_component; imjb : SET [0:?] OF Interface_mounted_join) : SET [0:?] OF Packaged_connector_terminal_relationship;
LOCAL

      cf   : Component_feature;

      pctr : SET OF packaged_connector_terminal_relationship := [];

    END_LOCAL
;


    cf := imjb[1].connection_to_interconnect_module_component;

    IF  ac :=: cf.associated_component THEN
      IF('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.PACKAGED_PART_INTERFACE_TERMINAL' IN TYPEOF(cf.definition))THEN
        pctr := cf.definition.external_connector_function;

        RETURN(pctr);

      ELSE
        RETURN(pctr);

      END_IF;

    ELSE
      RETURN(pctr);

    END_IF;

    RETURN(?);
END_FUNCTION; -- get_pctr

FUNCTION get_derived_shape_element
	(input : Part_view_definition) : SET [0:?] OF Derived_shape_element;
LOCAL

 is : SET  OF  Item_shape := bag_to_set(USEDIN(input, 'SHAPE_PROPERTY_ASSIGNMENT_ARM.ITEM_SHAPE.DESCRIBED_ELEMENT'));

 se : SET OF Shape_element := [];

END_LOCAL
;
 
REPEAT i := 1 TO SIZEOF(is)BY 1;

   se  := se + bag_to_set(USEDIN(is[i], 'SHAPE_PROPERTY_ASSIGNMENT_ARM.SHAPE_ELEMENT.CONTAINING_SHAPE'));

END_REPEAT;
  

RETURN(QUERY(dse <* se | 'DERIVED_SHAPE_ELEMENT_ARM.DERIVED_SHAPE_ELEMENT' IN TYPEOF(se)));
END_FUNCTION; -- get_derived_shape_element

FUNCTION types_of_product
	(obj : Product) : SET [0:?] OF STRING;
LOCAL

 	category_assignments: BAG OF  Product_category_assignment;

 	categories: SET OF STRING:=[];

 	i: INTEGER;

 END_LOCAL
;

 
 category_assignments := USEDIN(obj,'AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.' + 'PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS');

    
 REPEAT i := LOINDEX(category_assignments)TO HIINDEX(category_assignments)BY 1;

       categories := categories + category_assignments[i].category.name;

 END_REPEAT;

 
 RETURN(categories);
END_FUNCTION; -- types_of_product

FUNCTION contains_variable
	(x : term_select) : BOOLEAN;
IF('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ABSTRACT_VARIABLE' IN  TYPEOF(x))THEN  RETURN (TRUE);

      ELSE  IF(('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.FUNC' IN TYPEOF(X))AND
             (SIZEOF(QUERY(y <* x.terms | contains_variable(y)))> 0))
              THEN RETURN (TRUE);

              ELSE RETURN(FALSE);

           END_IF;

  END_IF;
END_FUNCTION; -- contains_variable

FUNCTION local_vars_aux
	(thing : GENERIC; accum : SET [0:?] OF Scalar_variable) : SET [0:?] OF Scalar_variable;
LOCAL
 i,j,k : INTEGER;
 END_LOCAL
;

  IF (('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.ABSTRACT_VARIABLE' IN  TYPEOF(thing))AND 
     ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.RULE_DEFINITION' IN (TYPEOF(thing.scope))))
   THEN  accum := accum + thing;

   ELSE  IF ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.RULE_CONDITION' IN  TYPEOF(thing))
        THEN  REPEAT  i := 1 TO  HIINDEX(thing\Atomic_formula.terms);

                accum := local_vars_aux(thing\Atomic_formula.terms[i],accum);

             END_REPEAT;

        ELSE  IF ('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.SIMPLE_CLAUSE' IN  TYPEOF(thing))
             THEN  REPEAT  j := 1 TO  HIINDEX(thing.formulas);

                        accum := local_vars_aux(thing.formulas[j],accum);

                  END_REPEAT;

             ELSE IF('AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_ARM_LF.COMPLEX_CLAUSE' IN TYPEOF(thing))
                  THEN REPEAT k := 1 TO HIINDEX(thing.clauses);

                        accum := local_vars_aux(thing.clauses[k],accum);

                       END_REPEAT;

                  END_IF;

             END_IF;

        END_IF;

  END_IF;

  RETURN(accum);
END_FUNCTION; -- local_vars_aux

FUNCTION local_vars_of
	(thing : GENERIC) : SET [0:?] OF Scalar_variable;
LOCAL

    accum : SET [0:?] OF Scalar_variable := [];

  END_LOCAL
;

  RETURN(local_vars_aux(thing, accum));
END_FUNCTION; -- local_vars_of

FUNCTION get_rvd
	(input : requirement_assignment_item; id : STRING) : SET [0:?] OF Requirement_view_definition;
LOCAL

	rvd : SET[0:?] OF  Requirement_view_definition := [];
  --this gives us access TO  the information base
	ra : SET[0:?] OF Requirement_assignment :=[];

END_LOCAL
;

	ra := bag_to_set((QUERY(rai <* USEDIN(input, 'REQUIREMENT_ASSIGNMENT_ARM.'+
	'REQUIREMENT_ASSIGNMENT.ASSIGNED_TO')|(rai.id = id))));


	-- iterate over ra
	REPEAT i := 1 TO SIZEOF(ra)BY 1;

		rvd := rvd + ra[i].assigned_requirement;

	END_REPEAT;


	RETURN(rvd);
END_FUNCTION; -- get_rvd

FUNCTION valid_constraining_shape
	(sd : SET [0:?] OF Geometric_model; eepd : Product_view_definition) : BOOLEAN;
RETURN(TRUE);
END_FUNCTION; -- valid_constraining_shape

FUNCTION get_geometric_model
	(input : Item_shape) : SET [0:?] OF Geometric_model;
LOCAL

  sda : SET  OF  Shape_description_association := [];

  gm : SET OF Geometric_model := [];

 END_LOCAL
;

 
  sda := bag_to_set(USEDIN(input,
	 	'SHAPE_PROPERTY_ASSIGNMENT_ARM.' + 
	 	'SHAPE_DESCRIPTION_ASSOCIATION.' + 'REPRESENTED_CHARACTERISTIC'));

 
 REPEAT i := 1 TO SIZEOF(sda)BY 1;

  gm := gm + sda[i].representation;

 END_REPEAT;

 RETURN(gm);
END_FUNCTION; -- get_geometric_model

FUNCTION get_document_definition
	(input : documented_element_select; role : STRING; type_name : STRING) : SET [0:?] OF Document_definition;
LOCAL

	dd : SET[0:?] OF  Document_definition := [];
  --this gives us access TO  the information base
	da : SET[0:?] OF Document_assignment :=[];

END_LOCAL
;

	da := bag_to_set(QUERY(dr <* USEDIN(input, 'DOCUMENT_ASSIGNMENT_ARM.'+
	'DOCUMENT_ASSIGNMENT.IS_ASSIGNED_TO')|(dr.role = role)));


	-- iterate over da
	REPEAT i := 1 TO SIZEOF(da)BY 1;

		IF(type_name IN TYPEOF(da[i].assigned_document))THEN
			dd := dd + da[i].assigned_document;

		END_IF;

	END_REPEAT;

	RETURN(dd);
END_FUNCTION; -- get_document_definition

END_SCHEMA; --ap210_assembly_functional_requirements_arm_lf

