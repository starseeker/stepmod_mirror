(* This file was generated by the EXPRESS Pretty Printer exppp,
part of STEPcode (formerly NIST's SCL). exppp version:
git commit id: v0.7-349-gc686fc1, build timestamp 24 Feb 2014 21:24

WARNING: If you modify this file and want to save the changes,
delete this comment block or else the file will be rewritten
the next time exppp processes this schema. *)

SCHEMA ap210_electronic_assembly_interconnect_and_packaging_design_arm_lf;

  CONSTANT
    chemical_elements                           : LIST OF STRING :=
                                                   [ 'HYDROGEN' , 
                                                     'HELIUM' , 
                                                     'LITHIUM' , 
                                                     'BERYLLIUM' , 
                                                     'BORON' , 
                                                     'CARBON' , 
                                                     'NITROGEN' , 
                                                     'OXYGEN' , 
                                                     'FLUORINE' , 
                                                     'NEON' , 
                                                     'SODIUM' , 
                                                     'MAGNESIUM' , 
                                                     'ALUMINIUM' , 
                                                     'SILICON' , 
                                                     'PHOSPHORUS' , 
                                                     'SULPHUR' , 
                                                     'CHLORINE' , 
                                                     'ARGON' , 
                                                     'POTASSIUM' , 
                                                     'CALCIUM' , 
                                                     'SCANDIUM' , 
                                                     'TITANIUM' , 
                                                     'VANADIUM' , 
                                                     'CHROMIUM' , 
                                                     'MANGANESE' , 
                                                     'IRON' , 
                                                     'COBALT' , 
                                                     'NICKEL' , 
                                                     'COPPER' , 
                                                     'ZINC' , 
                                                     'GALLIUM' , 
                                                     'GERMANIUM' , 
                                                     'ARSENIC' , 
                                                     'SELENIUM' , 
                                                     'BROMINE' , 
                                                     'KRYPTON' , 
                                                     'RUBIDIUM' , 
                                                     'STRONTIUM' , 
                                                     'YTTRIUM' , 
                                                     'ZIRCONIUM' , 
                                                     'NIOBIUM' , 
                                                     'MOLYBDENUM' , 
                                                     'TECHNETIUM' , 
                                                     'RUTHENIUM' , 
                                                     'RHODIUM' , 
                                                     'PALLADIUM' , 
                                                     'SILVER' , 
                                                     'CADMIUM' , 
                                                     'INDIUM' , 
                                                     'TIN' , 
                                                     'ANTIMONY' , 
                                                     'TELLURIUM' , 
                                                     'IODINE' , 
                                                     'XENON' , 
                                                     'CAESIUM' , 
                                                     'BARIUM' , 
                                                     'LANTHANUM' , 
                                                     'CERIUM' , 
                                                     'PRASEODYMIUM' , 
                                                     'NEODYMIUM' , 
                                                     'PROMETHIUM' , 
                                                     'SAMARIUM' , 
                                                     'EUROPIUM' , 
                                                     'GADOLINIUM' , 
                                                     'TERBIUM' , 
                                                     'DYSPROSIUM' , 
                                                     'HOLMIUM' , 
                                                     'ERBIUM' , 
                                                     'THULIUM' , 
                                                     'YTTERBIUM' , 
                                                     'LUTETIUM' , 
                                                     'HAFNIUM' , 
                                                     'TANTALUM' , 
                                                     'TUNGSTEN' , 
                                                     'RHENIUM' , 
                                                     'OSMIUM' , 
                                                     'IRIDIUM' , 
                                                     'PLATINUM' , 
                                                     'GOLD' , 
                                                     'MERCURY' , 
                                                     'THALLIUM' , 
                                                     'LEAD' , 
                                                     'BISMUTH' , 
                                                     'POLONIUM' , 
                                                     'ASTATINE' , 
                                                     'RADON' , 
                                                     'FRANCIUM' , 
                                                     'RADIUM' , 
                                                     'ACTINIUM' , 
                                                     'THORIUM' , 
                                                     'PROTACTINIUM' , 
                                                     'URANIUM' , 
                                                     'NEPTUNIUM' , 
                                                     'PLUTONIUM' , 
                                                     'AMERICIUM' , 
                                                     'CURIUM' , 
                                                     'BERKELIUM' , 
                                                     'CALIFORNIUM' , 
                                                     'EINSTEINIUM' , 
                                                     'FERMIUM' , 
                                                     'MENDELEVIUM' , 
                                                     'NOBELIUM' , 
                                                     'LAWRENCIUM' , 
                                                     'RUTHERFORDIUM' , 
                                                     'DUBNIUM' , 
                                                     'SEABORGIUM' , 
                                                     'BOHRIUM' , 
                                                     'HASSIUM' , 
                                                     'MEITNERIUM' , 
                                                     'DARMSTADTIUM' , 
                                                     'ROENTGENIUM' ];
    pre_defined_activity_relationship_types     : SET OF STRING :=
                                                   [ 'alternative' , 
                                                     'decomposition' , 
                                                     'derivation' , 
                                                     'exclusiveness' , 
                                                     'precedence' , 
                                                     'sequence' , 
                                                     'simultaneity' ];
    pre_defined_address_assignment_types        : SET OF STRING :=
                                                   [ 'delivery address' , 
                                                     'postal address' , 
                                                     'visitor address' ];
    pre_defined_approval_status_types           : SET OF STRING :=
                                                   [ 'approved' , 
                                                     'disapproved' , 
                                                     'withdrawn' , 
                                                     'not yet approved' ];
    pre_defined_approval_types                  : SET OF STRING :=
                                                   [ 'disposition' , 
                                                     'equipment order' , 
                                                     'planning' ];
    pre_defined_date_or_date_time_assignment_types : SET OF STRING :=
                                                   [ 'creation' , 
                                                     'installation' , 
                                                     'production' , 
                                                     'registration' , 
                                                     'update' , 
                                                     'planned' , 
                                                     'actual' , 
                                                     'start date' , 
                                                     'end date' , 
                                                     'release date' , 
                                                     'request date' ];
    pre_defined_organization_or_person_in_organization_assignment_types : SET OF STRING :=
                                                   [ 'author' , 
                                                     'classification officer' , 
                                                     'creator' , 
                                                     'custodian' , 
                                                     'customer' , 
                                                     'design supplier' , 
                                                     'editor' , 
                                                     'id owner' , 
                                                     'location' , 
                                                     'manufacturer' , 
                                                     'owner' , 
                                                     'read access' , 
                                                     'supplier' , 
                                                     'wholesaler' , 
                                                     'write access' , 
                                                     'organization in contract' ];
    pre_defined_physical_network_group_relation_types : SET OF STRING :=
                                                   [ 'group to higher order group' , 
                                                     'group to higher ranking group' , 
                                                     'element to ordered multiple line bus' ];
    pre_defined_physical_network_group_types    : SET OF STRING :=
                                                   [ 'differential pair' , 
                                                     'balanced length' , 
                                                     'coaxial group' , 
                                                     'multi line bus' ];
    pre_defined_picture_representation_types    : SET [0 : ?] OF STRING :=
                                                   [ 'JPEG' , 
                                                     'PNG' , 
                                                     'TIFF' , 
                                                     'BMP' , 
                                                     'GIF' ];
    pre_defined_security_classification_types   : SET OF STRING :=
                                                   [ 'unclassified' , 
                                                     'classified' , 
                                                     'proprietary' , 
                                                     'confidential' , 
                                                     'secret' , 
                                                     'top secret' ];
    pre_defined_type_qualifiers                 : SET OF STRING :=
                                                   [ 'minimum' , 
                                                     'maximum' , 
                                                     'nominal' , 
                                                     'specified' , 
                                                     'typical' , 
                                                     'calculated' , 
                                                     'designed' , 
                                                     'estimated' , 
                                                     'measured' , 
                                                     'required' , 
                                                     'set point' , 
                                                     'basic' , 
                                                     'lower deviation' , 
                                                     'upper deviation' ];
    pre_defined_work_request_status_types       : SET OF STRING :=
                                                   [ 'in work' , 
                                                     'issued' , 
                                                     'proposed' , 
                                                     'resolved' ];
    pre_defined_work_request_types              : SET OF STRING :=
                                                   [ 'change of standard' , 
                                                     'cost reduction' , 
                                                     'customer rejection' , 
                                                     'customer request' , 
                                                     'durability improvement' , 
                                                     'government regulation' , 
                                                     'production alignment' , 
                                                     'procurement alignment' , 
                                                     'production relief' , 
                                                     'production requirement' , 
                                                     'quality improvement' , 
                                                     'security reason' , 
                                                     'standardization' , 
                                                     'supplier request' , 
                                                     'technical improvement' , 
                                                     'tool improvement' ];
  END_CONSTANT;

  TYPE activity_item = SELECT
    ( applied_independent_test_result_property,
     assembly_component_relationship,
     item_usage_effectivity,
     product_version,
     product_view_definition,
     view_definition_relationship );
  END_TYPE;

  TYPE activity_method_item = SELECT
    ( activity,
     activity_method,
     activity_property,
     applied_activity_assignment,
     assembly_component_relationship,
     assigned_property,
     contract,
     event,
     file,
     organization,
     person,
     person_in_organization,
     product,
     product_concept,
     product_configuration,
     product_version,
     product_version_relationship,
     product_view_definition,
     project,
     test_method_based_parameter_assignment,
     view_definition_relationship );
  END_TYPE;

  TYPE actuated_direction = ENUMERATION OF
    ( bidirectional,
     positive_only,
     negative_only,
     not_actuated );
  END_TYPE;

  TYPE adjoining_or_centred = ENUMERATION OF
    ( adjoining,
     centred );
  END_TYPE;

  TYPE advanced_brep_shape_representation_item = SELECT
    ( axis_placement_3d,
     geometric_placement_operation,
     manifold_solid_brep );
  END_TYPE;

  TYPE advanced_face_model = SELECT
    ( advanced_brep_shape_representation,
     manifold_surface_shape_representation,
     manifold_subsurface_model );
  END_TYPE;

  TYPE affected_item_select = SELECT
    ( assembly_component_relationship,
     assigned_property,
     product_version,
     product_view_definition,
     view_definition_relationship,
     work_request );
  END_TYPE;

  TYPE alias_identification_item = identification_item;
  END_TYPE;

  TYPE analytical_model_port_assignment_select = SELECT
    ( connection_zone,
     datum_difference,
     functional_unit_usage_view_terminal_definition,
     part_device_terminal,
     part_feature );
  END_TYPE;

  TYPE angle_or_directed_taper = SELECT
    ( angle_taper,
     directed_taper );
  END_TYPE;

  TYPE angle_reference_enumeration = ENUMERATION OF
    ( profile_normal,
     punch_direction,
     surface_normal );
  END_TYPE;

  TYPE angle_relator = ENUMERATION OF
    ( equal,
     large,
     small );
  END_TYPE;

  TYPE angle_select = SELECT
    ( axis_placement_3d,
     curve,
     direction,
     point_path );
  END_TYPE;

  TYPE annotation_occurrence_associativity_item = SELECT
    ( fill_area,
     leader,
     projection_curve );
  END_TYPE;

  TYPE annotation_plane_element = SELECT
    ( draughting_callout,
     styled_element );
  END_TYPE;

  TYPE any_number_value = NUMBER;
  END_TYPE;

  TYPE any_string_value = STRING;
  END_TYPE;

  TYPE appearance_context = SELECT
    ( geometric_model_relationship,
     group,
     layer,
     representation,
     visual_appearance );
  END_TYPE;

  TYPE appearance_select = SELECT
    ( curve_appearance,
     hatch_style,
     point_appearance,
     solid_fill_area_style,
     surface_appearance,
     text_style,
     tile_style );
  END_TYPE;

  TYPE application_environment = ENUMERATION OF
    ( end_user_application,
     manufacturing );
  END_TYPE;

  TYPE approval_item = SELECT
    ( activity,
     alternate_part_relationship,
     applied_activity_assignment,
     applied_information_usage_right,
     assembly_relationship_substitution,
     certification,
     contract,
     digital_document_definition,
     document,
     document_definition,
     document_definition_relationship,
     document_version,
     effectivity,
     file,
     frozen_assignment,
     group,
     group_relationship,
     independent_property_relationship,
     information_usage_right,
     item_usage_effectivity,
     part_version,
     part_view_definition,
     physical_document_definition,
     product_configuration,
     product_version,
     product_view_definition,
     requirement_assignment,
     security_classification,
     stock_material,
     supplied_part_relationship,
     work_order,
     work_request );
  END_TYPE;

  TYPE area_component_templates = SELECT
    ( stratum_feature_template,
     fill_area_template );
  END_TYPE;

  TYPE area_measure = REAL;
  END_TYPE;

  TYPE area_unit_type = ENUMERATION OF
    ( circular,
     rectangular,
     square );
  END_TYPE;

  TYPE as_product_view_definition_or_reference = SELECT
    ( product_view_definition,
     generic_product_view_definition_reference );
  END_TYPE;

  TYPE assembly_component_or_component_feature = SELECT
    ( assembly_component,
     component_feature );
  END_TYPE;

  TYPE assembly_component_or_item_number = SELECT
    ( assembly_item_number,
     assembly_component_relationship );
  END_TYPE;

  TYPE assembly_item_number_or_process_specification = SELECT
    ( assembly_item_number,
     process_specification );
  END_TYPE;

  TYPE assembly_or_interconnect_design_object_select = SELECT
    ( assembly_component,
     component_feature,
     interconnect_module_design_object_select );
  END_TYPE;

  TYPE assembly_product_design_object_category = ENUMERATION OF
    ( assembly_component_category,
     assembly_module_component_category,
     assembly_module_component_terminal_category,
     assembly_module_macro_component_category,
     assembly_module_macro_component_join_terminal_category,
     bare_die_component_category,
     bare_die_component_terminal_category,
     buried_via_category,
     cable_component_category,
     component_feature_category,
     component_termination_passage_category,
     conductive_interconnect_element_with_pre_defined_transitions_category,
     cutout_category,
     cutout_edge_segment_category,
     dielectric_material_passage_category,
     embedded_physical_component_terminal_category,
     fiducial_category,
     fill_area_category,
     inter_stratum_feature_category,
     interconnect_component_interface_terminal_category,
     interconnect_component_join_terminal_category,
     interconnect_module_component_category,
     interconnect_module_component_stratum_based_terminal_category,
     interconnect_module_component_surface_feature_category,
     interconnect_module_component_terminal_category,
     interconnect_module_edge_category,
     interconnect_module_edge_segment_category,
     interconnect_module_macro_component_category,
     interconnect_module_macro_component_join_terminal_category,
     interface_access_material_removal_laminate_component_category,
     interface_access_stratum_feature_template_component_category,
     interface_component_category,
     interfacial_connection_category,
     internal_probe_access_area_category,
     laminate_component_category,
     minimally_defined_component_terminal_category,
     packaged_component_category,
     packaged_component_join_terminal_category,
     packaged_connector_component_category,
     packaged_connector_component_interface_terminal_category,
     physical_component_category,
     plated_passage_or_unsupported_passage_category,
     routed_interconnect_component_category,
     routed_physical_component_category,
     stratum_feature_category,
     via_category );
  END_TYPE;

  TYPE assembly_product_design_object_category_or_group = SELECT
    ( assembly_product_design_object_category,
     group );
  END_TYPE;

  TYPE assembly_spacing_type = ENUMERATION OF
    ( centroid,
     furthest_boundary,
     nearest_boundary );
  END_TYPE;

  TYPE assigned_document_select = SELECT
    ( document,
     document_definition,
     document_version,
     file );
  END_TYPE;

  TYPE assigned_name_select = SELECT
    ( external_class_library,
     group,
     group_relationship,
     product,
     product_view_definition );
  END_TYPE;

  TYPE assigned_shape_property_select = SELECT
    ( item_shape,
     shape_element,
     shape_element_relationship );
  END_TYPE;

  TYPE attribute_identifier = STRING;
  WHERE
    wr1: validate_attribute_id( SELF );
  END_TYPE;

  TYPE axial_geometry_element = SELECT
    ( circle,
     circular_cone,
     circular_cylinder,
     conical_surface,
     cylindrical_surface,
     line,
     plane,
     point,
     solid_of_revolution,
     sphere,
     spherical_surface,
     surface_of_revolution,
     toroidal_surface,
     torus );
  END_TYPE;

  TYPE b_spline_or_composite_curve_select = SELECT
    ( b_spline_curve,
     composite_curve );
  END_TYPE;

  TYPE b_spline_or_rectangular_composite_surface_select = SELECT
    ( b_spline_surface,
     rectangular_composite_surface );
  END_TYPE;

  TYPE bare_die_component_or_packaged_component = SELECT
    ( bare_die_component,
     packaged_component );
  END_TYPE;

  TYPE bare_die_terminal_or_packaged_part_terminal = SELECT
    ( bare_die_terminal,
     packaged_part_terminal );
  END_TYPE;

  TYPE blend_end_condition = SELECT
    ( edge_curve,
     point_on_curve,
     vertex );
  END_TYPE;

  TYPE blend_radius_variation = ENUMERATION OF
    ( linear,
     cubic,
     unspecified );
  END_TYPE;

  TYPE board_side = ENUMERATION OF
    ( primary,
     secondary );
  END_TYPE;

  TYPE bond_feature = SELECT
    ( physical_component_feature );
  END_TYPE;

  TYPE bonding_or_coating = ENUMERATION OF
    ( bonding,
     coating );
  END_TYPE;

  TYPE boolean_value = BOOLEAN;
  END_TYPE;

  TYPE boundary_class_zone = SELECT
    ( boundary_curve_representation,
     loop );
  END_TYPE;

  TYPE breakdown_element_select = SELECT
    ( functional_element_definition,
     physical_element_definition );
  END_TYPE;

  TYPE breakdown_item = SELECT
    ( breakdown_element_definition,
     breakdown_element_usage );
  END_TYPE;

  TYPE breakdown_of_target = SELECT
    ( product_concept,
     product_configuration,
     product_view_definition );
  END_TYPE;

  TYPE built_in_functions = ENUMERATION OF
    ( attr_val );
  END_TYPE;

  TYPE bus_structural_definition_or_node = SELECT
    ( functional_unit_network_node_definition,
     bus_structural_definition );
  END_TYPE;

  TYPE cartesian_transformation = SELECT
    ( cartesian_transformation_2d,
     cartesian_transformation_3d );
  END_TYPE;

  TYPE cavity_reference_select = SELECT
    ( interconnect_module_primary_surface,
     interconnect_module_secondary_surface );
  END_TYPE;

  TYPE cell_entry_select = SELECT
    ( plus_minus_toleranced_datum,
     upper_lower_toleranced_datum );
  END_TYPE;

  TYPE certification_item = SELECT
    ( alternate_product_relationship,
     product_version,
     product_version_relationship );
  END_TYPE;

  TYPE chained_geometric_model_link = SELECT
    ( geometric_placement_operation,
     geometric_coordinate_space,
     geometric_model_relationship );
  END_TYPE;

  TYPE chained_or_parallel = ENUMERATION OF
    ( chained,
     parallel );
  END_TYPE;

  TYPE chained_representation_link = SELECT
    ( geometric_placement_operation,
     representation_context,
     representation_relationship );
  END_TYPE;

  TYPE change_management_object = SELECT
    ( activity,
     activity_relationship,
     adjacent_stratum_surface_embedded_physical_component_surface_definition,
     alias_identification,
     alternate_product_relationship,
     analytical_model_application,
     analytical_model_port,
     analytical_model_port_assignment,
     approval,
     assembly_bond_definition,
     assembly_component_placement_link,
     assembly_component_relationship,
     assembly_connection_zone_position_relationship,
     assembly_item_number,
     assembly_relationship_substitution,
     bond_assembly_position,
     bus_element_link,
     bus_structural_definition,
     calendar_date,
     certification,
     complex_clause,
     component_2d_location,
     component_3d_location,
     component_external_reference,
     component_feature_external_reference,
     component_feature_to_layout_feature_relationship,
     component_feature_to_physical_usage_view_assignment,
     component_group_assignment,
     component_mounting_clearance_relationship,
     component_overlap_relationship,
     component_placement_restriction_assignment,
     composite_curve_segment,
     composite_signal_property_relationship,
     conductive_interconnect_element_terminal_link,
     configuration_controlled_message,
     connection_zone_bare_die_interface_plane_relationship,
     connection_zone_map_identification,
     connection_zone_package_interface_plane_relationship,
     connectivity_allocation,
     connectivity_allocation_to_physical_network,
     connector_based_interconnect_definition,
     curve_appearance,
     curve_style_parameters,
     date_time,
     datum,
     datum_difference_functional_unit_usage_view_terminal_assignment,
     design_composition_path,
     design_functional_unit_allocation_to_assembly_component,
     design_functional_unit_allocation_to_assembly_joint,
     design_functional_unit_allocation_to_fabrication_joint,
     design_functional_unit_allocation_to_reference_functional_unit,
     design_view_terminal_component_shape_relationship,
     device_2d_position,
     device_3d_position,
     device_terminal_map,
     device_terminal_map_relationship,
     dielectric_crossover_area,
     direct_stratum_component_join_implementation,
     draughting_pre_defined_text_font,
     effectivity,
     equivalent_functional_terminals_assignment,
     equivalent_functional_unit_definition_assignment,
     evaluated_characteristic,
     external_item_identification,
     externally_defined_curve_font,
     externally_defined_text_font,
     frozen_assignment,
     func,
     functional_specification,
     functional_terminal_group,
     functional_terminal_group_assignment,
     functional_unit_network_terminal_definition_bus_assignment,
     functional_unit_network_terminal_definition_node_assignment,
     functional_unit_terminal,
     functional_unit_terminal_bus_assignment,
     functional_unit_terminal_node_assignment,
     functional_unit_usage_view_terminal_definition,
     functional_usage_view_to_part_terminal_assignment,
     functional_usage_view_to_printed_part_template_terminal_assignment,
     generic_physical_network,
     geometric_coordinate_space,
     geometric_dimension,
     geometric_model,
     geometric_tolerance,
     identification_assignment,
     independent_property_relationship,
     inter_stratum_join_implementation,
     interconnect_connection_zone_position_relationship,
     interconnect_module_product_assembly_view_fabrication_joint,
     interconnect_module_stratum_assembly_relationship,
     interface_component_allocation,
     interface_mounted_join,
     internal_stratum_access,
     join_relationship,
     junction_vertex_allocation,
     layout_junction,
     layout_spacing_requirement_non_conforming_design_object,
     line_width_class,
     linear_array_placement_group_component_link,
     located_interconnect_module_thickness_requirement,
     marking,
     material_identification,
     mating_connector_placement_relationship,
     mating_connector_termination,
     model_parameter,
     next_higher_assembly_interface_requirement,
     organization,
     organization_or_person_in_organization_assignment,
     package_external_reference,
     package_terminal_external_reference,
     packaged_connector_terminal_relationship,
     parameter_assignment,
     parameter_assignment_override,
     part_connected_terminals_definition,
     part_device,
     part_device_terminal,
     passage_technology,
     person,
     person_in_organization,
     physical_connectivity_abstraction_map,
     physical_connectivity_definition_relationship,
     physical_connectivity_element,
     physical_connectivity_make_from_relationship,
     physical_node_requirement_to_implementing_component_allocation,
     pitch_class,
     placement_group_area_assignment,
     planned_characteristic,
     port_variable,
     printed_connector_template_terminal_relationship,
     printed_part_template_connected_terminals_definition,
     printed_part_template_material,
     printed_part_template_material_link,
     product,
     product_concept,
     product_configuration,
     product_occurrence_definition_relationship,
     product_specific_parameter_value_assignment,
     product_version,
     product_version_relationship,
     product_view_definition,
     property_value_representation,
     reference_composition_path,
     reference_functional_unit_assignment_to_part,
     representation,
     representation_context,
     representation_item,
     requirement_assignment,
     rule_justification,
     rule_priority,
     scalar_terminal_definition_link,
     security_classification,
     shape_element,
     shape_element_relationship,
     signal,
     signal_property,
     signal_specification,
     simple_clause,
     solid_curve_font,
     specification_allocation,
     stratum_concept_to_physical_usage_view_assignment,
     stratum_feature_based_derived_pattern,
     stratum_feature_conductive_join,
     stratum_interconnect_module_3d_position,
     stratum_interconnect_module_planar_position,
     stratum_surface,
     stratum_technology,
     stratum_technology_occurrence_link,
     sub_model_placement_2d,
     sub_model_placement_3d,
     terminal_pair_port_equivalence_relationship,
     text_font,
     tolerance_zone_definition,
     topological_junction,
     transmission_line_functional_unit_terminal_allocation,
     usage_view_connection_zone_terminal_shape_relationship,
     value_with_unit,
     view_definition_relationship,
     work_order,
     work_request );
  END_TYPE;

  TYPE change_relationship_select = SELECT
    ( process_operation_occurrence_relationship,
     process_plan_relationship,
     product_version_relationship,
     replaced_usage_relationship,
     shape_element_relationship );
  END_TYPE;

  TYPE characteristic = SELECT
    ( string_representation_item,
     numerical_item_with_unit,
     value_list,
     value_set );
  END_TYPE;

  TYPE characteristic_data_table_cell = SELECT
    ( null_representation_item,
     string_representation_item,
     numerical_item_with_global_unit,
     numerical_item_with_unit,
     value_list,
     value_set );
  END_TYPE;

  TYPE characteristic_select = SELECT
    ( characteristic,
     boolean_representation_item,
     date_time_representation_item,
     integer_representation_item,
     logical_representation_item,
     property_value_representation,
     rational_representation_item,
     real_representation_item,
     sequence_representation_item,
     set_representation_item );
  END_TYPE;

  TYPE characterized_activity_definition = SELECT
    ( activity,
     activity_method );
  END_TYPE;

  TYPE classification_item = SELECT
    ( activity,
     activity_method,
     activity_method_assignment,
     activity_property,
     activity_relationship,
     address,
     address_assignment,
     affected_items_assignment,
     alternate_product_relationship,
     applied_activity_assignment,
     approval,
     approval_assignment,
     approval_relationship,
     approval_status,
     approving_person_organization,
     assembly_component_relationship,
     assembly_relationship_substitution,
     assigned_property,
     attribute_translation_assignment,
     calendar_date,
     certification,
     certification_assignment,
     characterizable_object,
     class,
     classified_element_select,
     context_dependent_unit,
     contract,
     contract_assignment,
     conversion_based_unit,
     date_or_date_time_assignment,
     date_time,
     derived_unit,
     digital_document_definition,
     digital_file,
     directed_activity,
     document_assignment,
     effectivity,
     event,
     event_assignment,
     external_source_identification,
     file,
     file_relationship,
     functional_unit_usage_view_terminal_definition,
     identification_assignment,
     independent_property,
     independent_property_relationship,
     independent_property_representation,
     information_right,
     information_usage_right,
     information_usage_right_relationship,
     language,
     material_identification_with_conductivity_classification,
     numerical_item_with_unit,
     organization,
     organization_or_person_in_organization_assignment,
     organization_relationship,
     part_view_definition,
     person,
     product,
     product_concept,
     product_configuration,
     product_version,
     product_version_relationship,
     product_view_definition,
     project,
     project_assignment,
     project_relationship,
     representation,
     representation_context,
     representation_item,
     security_classification,
     security_classification_assignment,
     stratum_technology_occurrence_relationship,
     string_representation_item,
     uncertainty_with_unit,
     value_with_unit,
     view_definition_context,
     view_definition_relationship,
     work_order,
     work_request,
     work_request_status );
  END_TYPE;

  TYPE classified_attribute_select = SELECT
    ( activity,
     activity_method,
     activity_method_assignment,
     activity_property,
     activity_property_representation,
     activity_relationship,
     address_assignment,
     affected_items_assignment,
     alternate_part_relationship,
     applied_activity_assignment,
     approval,
     approval_assignment,
     approval_relationship,
     approval_status,
     approving_person_organization,
     assigned_property,
     certification,
     certification_assignment,
     contract,
     date_or_date_time_assignment,
     digital_file,
     document_assignment,
     document_definition_relationship,
     effectivity,
     effectivity_assignment,
     event_assignment,
     event_relationship,
     external_source_identification,
     file_relationship,
     group,
     group_relationship,
     hardcopy,
     identification_assignment,
     independent_property,
     independent_property_relationship,
     independent_property_representation,
     information_right,
     information_usage_right,
     information_usage_right_relationship,
     language,
     market,
     organization_or_person_in_organization_assignment,
     organization_relationship,
     person_in_organization,
     product,
     product_concept,
     product_version,
     product_version_relationship,
     product_view_definition,
     project_assignment,
     project_relationship,
     property_representation,
     representation,
     representation_context,
     representation_item,
     security_classification,
     time_interval_relationship,
     unit,
     value_with_unit,
     view_definition_context,
     view_definition_relationship,
     work_order,
     work_request,
     work_request_status );
  END_TYPE;

  TYPE classified_element_select = SELECT
    ( product,
     product_version,
     product_view_definition );
  END_TYPE;

  TYPE clause_select = SELECT
    ( simple_clause,
     complex_clause );
  END_TYPE;

  TYPE clipping_element = SELECT
    ( plane,
     clipping_operator );
  END_TYPE;

  TYPE clipping_mode = ENUMERATION OF
    ( union,
     intersection );
  END_TYPE;

  TYPE closed_curve = SELECT
    ( circle,
     closed_composite_curve );
  END_TYPE;

  TYPE closed_or_open_shell_select = SELECT
    ( closed_shell,
     open_shell );
  END_TYPE;

  TYPE collection_plane_orientation = ENUMERATION OF
    ( parallel,
     perpendicular );
  END_TYPE;

  TYPE common_datum_list = LIST [1 : ?] OF datum_reference_element;
  END_TYPE;

  TYPE complex_product_select = SELECT
    ( alternative_solution,
     functional_element_definition,
     physical_element_definition );
  END_TYPE;

  TYPE component_based_message_type = ENUMERATION OF
    ( component_reference_designation,
     terminal_designation );
  END_TYPE;

  TYPE component_class_for_assembly = SELECT
    ( composite_assembly,
     filament_laminate,
     part_view_definition,
     ply,
     ply_laminate,
     processed_core );
  END_TYPE;

  TYPE component_feature_or_stratum_surface = SELECT
    ( component_feature,
     stratum_surface );
  END_TYPE;

  TYPE component_or_component_feature = SELECT
    ( assembly_component,
     component_external_reference,
     component_feature,
     component_feature_external_reference );
  END_TYPE;

  TYPE component_or_feature = SELECT
    ( assembly_component,
     assembly_joint,
     component_feature );
  END_TYPE;

  TYPE composite_assembly_shape = SELECT
    ( advanced_brep_shape_representation,
     edge_based_wireframe_shape_representation,
     faceted_brep_shape_representation,
     geometrically_bounded_surface_shape_representation,
     geometrically_bounded_wireframe_shape_representation,
     manifold_surface_shape_representation,
     shell_based_wireframe_shape_representation,
     tessellated_shape_representation,
     three_d_geometry_set );
  END_TYPE;

  TYPE composite_text_element_select = SELECT
    ( annotation_text,
     annotation_text_character,
     composite_presentable_text,
     defined_character_glyph,
     text_literal );
  END_TYPE;

  TYPE compound_feature_select = SELECT
    ( machining_feature,
     transition_feature );
  END_TYPE;

  TYPE compound_in_panel_select = SELECT
    ( process_feature_in_panel,
     transition_feature );
  END_TYPE;

  TYPE conductive_interconnect_terminal_or_interconnect_component_join_terminal = SELECT
    ( interconnect_component_interface_terminal,
     interconnect_component_join_terminal,
     movable_packaged_component_join_terminal );
  END_TYPE;

  TYPE configuration_inheritance_types = ENUMERATION OF
    ( exception_case,
     full_inheritance,
     no_inheritance );
  END_TYPE;

  TYPE configuration_kind = ENUMERATION OF
    ( usage,
     design );
  END_TYPE;

  TYPE configured_item_select = SELECT
    ( alternative_solution,
     breakdown_element_definition,
     process_operation_occurrence,
     process_plan,
     product_occurrence );
  END_TYPE;

  TYPE configured_specification_select = SELECT
    ( class_condition_association,
     class_specification_association );
  END_TYPE;

  TYPE constants = SELECT
    ( any_number_value,
     any_string_value,
     logical_representation_item );
  END_TYPE;

  TYPE constraint_context_select = SELECT
    ( product_class );
  END_TYPE;

  TYPE constraint_group_member = SELECT
    ( explicit_constraint,
     simultaneous_constraint_group );
  END_TYPE;

  TYPE constructive_element_select = SELECT
    ( axis_placement,
     curve,
     point,
     surface );
  END_TYPE;

  TYPE constructive_geometry_select = SELECT
    ( constructive_geometry,
     geometric_model );
  END_TYPE;

  TYPE context_dependent_appearance_assignment_set = SET [2 : ?] OF context_dependent_appearance_assignment;
  END_TYPE;

  TYPE contract_item = SELECT
    ( activity,
     document_version,
     information_usage_right,
     organization,
     part_version,
     person_in_organization,
     product_version,
     work_order );
  END_TYPE;

  TYPE core_shape = SELECT
    ( advanced_brep_shape_representation,
     beveled_sheet_representation,
     faceted_brep_shape_representation );
  END_TYPE;

  TYPE correlated_or_independent = SELECT
    ( property_value_representation,
     characteristic );
  END_TYPE;

  TYPE count_measure = NUMBER;
  END_TYPE;

  TYPE curve_or_surface = SELECT
    ( curve,
     surface );
  END_TYPE;

  TYPE curve_transition_code = ENUMERATION OF
    ( discontinuous,
     continuous,
     cont_same_gradient,
     cont_same_gradient_same_curvature );
  END_TYPE;

  TYPE curves_or_area = ENUMERATION OF
    ( curves,
     area );
  END_TYPE;

  TYPE date_or_date_time_item = SELECT
    ( activity,
     applied_activity_assignment,
     certification,
     contract,
     data_quality_definition,
     digital_document_definition,
     digital_file,
     document_definition,
     document_definition_relationship,
     document_version,
     general_organizational_data_select,
     hardcopy,
     information_usage_right,
     organization_or_person_in_organization_assignment,
     physical_document_definition,
     product_view_definition,
     security_classification,
     security_classification_assignment,
     work_order,
     work_request );
  END_TYPE;

  TYPE date_or_date_time_select = SELECT
    ( calendar_date,
     date,
     date_time,
     ordinal_date,
     week_of_year_and_day_date,
     year_month );
  END_TYPE;

  TYPE date_or_event = SELECT
    ( calendar_date,
     date_time,
     event );
  END_TYPE;

  TYPE datum_or_common_datum = SELECT
    ( common_datum_list,
     datum );
  END_TYPE;

  TYPE datum_reference_modifier = SELECT
    ( datum_reference_modifier_with_value,
     simple_datum_reference_modifier );
  END_TYPE;

  TYPE datum_reference_modifier_type = ENUMERATION OF
    ( circular_or_cylindrical,
     distance,
     projected,
     spherical );
  END_TYPE;

  TYPE day_in_month_number = INTEGER;
  WHERE
    wr1: ( ( 1 <= SELF ) AND ( SELF <= 31 ) );
  END_TYPE;

  TYPE day_in_week_number = INTEGER;
  WHERE
    wr1: ( ( 1 <= SELF ) AND ( SELF <= 7 ) );
  END_TYPE;

  TYPE day_in_year_number = INTEGER;
  WHERE
    wr1: ( ( 1 <= SELF ) AND ( SELF <= 366 ) );
  END_TYPE;

  TYPE degree_of_freedom = ENUMERATION OF
    ( x,
     y,
     z,
     u,
     v,
     w );
  END_TYPE;

  TYPE dependent_or_independent_property_representation = SELECT
    ( independent_property_representation,
     property_representation );
  END_TYPE;

  TYPE derived_zone_shape_class = ENUMERATION OF
    ( area,
     edge );
  END_TYPE;

  TYPE described_element_select = SELECT
    ( view_definition_relationship,
     product_occurrence_definition_relationship );
  END_TYPE;

  TYPE descriptive_or_numerical = SELECT
    ( descriptive_document_property,
     numerical_document_property );
  END_TYPE;

  TYPE design_or_documentation_stratum = SELECT
    ( design_layer_stratum,
     documentation_layer_stratum );
  END_TYPE;

  TYPE detailed_report_type = ENUMERATION OF
    ( measured_element,
     inferior_quality_element );
  END_TYPE;

  TYPE diameter_qualifier_enumeration = ENUMERATION OF
    ( centre_outer,
     centre_inner,
     outer_centre,
     outer_outer,
     outer_inner,
     inner_centre,
     inner_outer,
     inner_inner );
  END_TYPE;

  TYPE diameter_type = ENUMERATION OF
    ( circular_or_cylindrical_diameter,
     spherical_diameter,
     toroidal_minor_diameter,
     toroidal_major_diameter,
     toroidal_high_major_diameter,
     toroidal_low_major_diameter );
  END_TYPE;

  TYPE dimension_callout_select = SELECT
    ( annotation_text_occurrence );
  END_TYPE;

  TYPE dimension_target = SELECT
    ( coating_layer,
     datum_reference_compartment,
     nominal_3d_feature );
  END_TYPE;

  TYPE dimension_type = ENUMERATION OF
    ( angular,
     curve,
     diameter,
     leader_directed,
     linear,
     ordinate,
     radius );
  END_TYPE;

  TYPE dimension_value_select = SELECT
    ( dimension_value_with_limitation,
     numerical_item_with_unit,
     tolerance_range,
     value_limit );
  END_TYPE;

  TYPE directed_or_oriented_geometric_tolerance_select = SELECT
    ( line_profile_tolerance,
     parallelism_tolerance,
     perpendicularity_tolerance,
     position_tolerance,
     straightness_tolerance,
     symmetry_tolerance );
  END_TYPE;

  TYPE directed_tolerance_zone_type = ENUMERATION OF
    ( perpendicular,
     parallel,
     including );
  END_TYPE;

  TYPE document_category = ENUMERATION OF
    ( catalogue,
     manual,
     specification );
  END_TYPE;

  TYPE document_property_item = property_assignment_select;
  END_TYPE;

  TYPE documented_element_select = SELECT
    ( activity,
     activity_method,
     analytical_model_definition,
     class_with_attributes,
     component_or_component_feature,
     external_item_identification,
     externally_conditioned_data_quality_criterion,
     gdt_representation_view_context,
     group,
     group_relationship,
     information_right,
     information_usage_right,
     information_usage_right_relationship,
     marking,
     material_identification,
     model_based_3d_annotation_presentation_view_context,
     model_based_view_context,
     model_parameter,
     part,
     part_feature,
     part_version,
     part_view_definition,
     passage_technology,
     physical_connectivity_definition,
     physical_connectivity_element,
     predefined_requirement_view_definition,
     product,
     product_configuration,
     product_version,
     product_version_relationship,
     product_view_definition,
     property_value_representation,
     protocol_physical_layer_definition,
     representation_item,
     rule_set,
     shape_element,
     shape_element_relationship,
     signal_specification,
     stratum_concept,
     stratum_surface_technology,
     stratum_technology,
     surface_prepped_terminal,
     view_definition_relationship,
     work_request );
  END_TYPE;

  TYPE draughting_callout_content_select = SELECT
    ( annotation_subfigure,
     annotation_symbol,
     annotation_text_occurrence,
     generic_annotation_curve,
     tessellated_anotation );
  END_TYPE;

  TYPE draughting_model_element_select = SELECT
    ( annotation_element,
     axis_placement,
     camera_model_d3,
     draughting_callout,
     styled_model_replication );
  END_TYPE;

  TYPE draughting_model_item_association_select = SELECT
    ( annotation_element,
     draughting_callout );
  END_TYPE;

  TYPE draughting_model_item_definition = SELECT
    ( dimensional_location,
     dimensional_size,
     geometric_tolerance,
     item_shape,
     shape_element,
     shape_element_relationship );
  END_TYPE;

  TYPE draughting_titled_item = SELECT
    ( drawing,
     drawing_sheet );
  END_TYPE;

  TYPE edge_of_undefined_shape_size_element = SELECT
    ( nominal_3d_edge );
  END_TYPE;

  TYPE edge_or_curve = SELECT
    ( edge,
     curve );
  END_TYPE;

  TYPE effectivity_item = SELECT
    ( assembly_component_relationship,
     assembly_relationship_substitution,
     configuration,
     document,
     document_definition,
     document_definition_relationship,
     document_version,
     part,
     part_definition_relationship,
     part_version,
     part_view_definition,
     product_version,
     product_view_definition,
     replaced_usage_relationship,
     view_definition_relationship );
  END_TYPE;

  TYPE end_type_select = SELECT
    ( complete_circular_path_feature_component,
     general_path_feature_component );
  END_TYPE;

  TYPE evaluation_activity_select = SELECT
    ( activity,
     process_operation_occurrence );
  END_TYPE;

  TYPE evaluation_result_value = ENUMERATION OF
    ( pass,
     fail,
     undefined );
  END_TYPE;

  TYPE evaluation_type = ENUMERATION OF
    ( not_evaluatable,
     invalid,
     valid,
     to_be_evaluated );
  END_TYPE;

  TYPE event_item = SELECT
    ( project );
  END_TYPE;

  TYPE expression_extension_select = SELECT
    ( string_expression,
     numeric_expression );
  END_TYPE;

  TYPE expression_operator = ENUMERATION OF
    ( or_operator,
     and_operator,
     oneof_operator,
     not_operator );
  END_TYPE;

  TYPE expression_syntax = ENUMERATION OF
    ( express );
  END_TYPE;

  TYPE extend_or_chord_2_extend_or_truncate_or_round = ENUMERATION OF
    ( truncate,
     chord_2_extend,
     round,
     extend );
  END_TYPE;

  TYPE extend_or_truncate = ENUMERATION OF
    ( truncate,
     extend );
  END_TYPE;

  TYPE extended_value_with_unit = SELECT
    ( textual_quantity_specification,
     value_limit,
     value_range,
     value_with_unit );
  END_TYPE;

  TYPE external_class_select = SELECT
    ( plib_class_reference,
     external_class );
  END_TYPE;

  TYPE external_identification_item = SELECT
    ( altered_package,
     assembly_bond_definition,
     composite_signal_property_relationship,
     design_layer_technology,
     digital_analytical_model_vector_port,
     document_definition,
     documentation_layer_technology,
     externally_defined_activity_relationship,
     externally_defined_address_assignment,
     externally_defined_approval,
     externally_defined_approval_status,
     externally_defined_date_or_date_time_assignment,
     externally_defined_organization_or_person_in_organization_assignment,
     externally_defined_physical_network_group,
     externally_defined_physical_network_group_element_relationship,
     externally_defined_picture_representation_item,
     externally_defined_security_classification,
     externally_defined_work_request,
     externally_defined_work_request_status,
     file,
     functional_specification,
     generic_product_view_definition_reference,
     laminate_component,
     land_physical_template,
     package,
     package_terminal_template_definition,
     part_template_keepout_shape_model,
     physical_unit_3d_shape_model,
     physical_unit_keepout_shape_model,
     physical_unit_planar_shape_model,
     printed_component,
     signal,
     signal_property,
     stratum,
     stratum_feature_based_derived_pattern,
     user_defined_library_or_dictionary );
  END_TYPE;

  TYPE fabricated_feature_select = SELECT
    ( component_termination_passage_join_terminal,
     conductive_interconnect_element_terminal,
     embedded_physical_component_terminal,
     land_join_terminal,
     printed_component_join_terminal,
     via_terminal );
  END_TYPE;

  TYPE face_or_surface = SELECT
    ( face,
     surface );
  END_TYPE;

  TYPE fatp_part_connected_terminals_definition_domain_enumeration = ENUMERATION OF
    ( electrical,
     magnetic,
     optical,
     thermal );
  END_TYPE;

  TYPE fatp_termination_or_junction = SELECT
    ( part_connected_terminals_topological_junction,
     part_terminal );
  END_TYPE;

  TYPE feature_or_non_feature_usage = SELECT
    ( part_template_or_physical_unit_2d_shape_select,
     part_template_or_physical_unit_3d_shape_model_select,
     usage_view_level_non_feature_shape_model );
  END_TYPE;

  TYPE filament_assembly_material = SELECT
    ( braided_assembly,
     filament_laminate,
     woven_assembly );
  END_TYPE;

  TYPE font_select = SELECT
    ( draughting_pre_defined_text_font,
     externally_defined_text_font,
     text_font );
  END_TYPE;

  TYPE form_feature_in_panel_type = ENUMERATION OF
    ( boss,
     pocket,
     stairstep );
  END_TYPE;

  TYPE fs_node_or_terminal = SELECT
    ( functional_unit_network_node_definition,
     functional_unit_terminal );
  END_TYPE;

  TYPE ft_terminus_condition = ENUMERATION OF
    ( bilateral_bond,
     bilateral_complete_removal,
     unilateral_bond );
  END_TYPE;

  TYPE ft_value_select = SELECT
    ( value_limit,
     value_range,
     numerical_item_with_unit );
  END_TYPE;

  TYPE function_symbol = SELECT
    ( any_string_value,
     built_in_functions );
  END_TYPE;

  TYPE general_end_select = SELECT
    ( connected_face_set,
     surface );
  END_TYPE;

  TYPE general_organizational_data_select = SELECT
    ( activity,
     activity_method_assignment,
     alternate_part_relationship,
     applied_activity_assignment,
     applied_independent_activity_property,
     applied_independent_property,
     approval_status,
     assembly_relationship_substitution,
     assigned_document_property,
     breakdown_element_definition,
     breakdown_element_realization,
     breakdown_element_usage,
     breakdown_node_relationship,
     certification,
     class,
     class_breakdown_association,
     class_category_association,
     class_condition_association,
     class_inclusion_association,
     class_specification_association,
     classification_association,
     classification_system,
     complex_node_relationship,
     configuration,
     contract,
     design_constraint_definition,
     document,
     document_definition,
     document_version,
     drawing,
     drawing_sheet,
     file,
     geometric_model,
     independent_property,
     item_usage_effectivity,
     material_identification,
     organization,
     organization_relationship,
     part,
     part_definition_relationship,
     part_occurrence_relationship,
     part_version,
     part_view_definition,
     person_in_organization,
     person_in_organization_relationship,
     process_operation_definition,
     process_operation_occurrence,
     process_operation_resource_assignment,
     process_plan,
     product_as_individual_assembly,
     product_as_individual_test_result,
     product_as_individual_view,
     product_class,
     product_configuration,
     product_occurrence,
     product_occurrence_definition_relationship,
     product_version_relationship,
     project,
     security_classification,
     specification,
     specification_category,
     specification_expression,
     specification_inclusion,
     styled_model,
     supplier_solution,
     technical_solution,
     view_area,
     work_order,
     work_request );
  END_TYPE;

  TYPE general_tolerance_table_select = SELECT
    ( general_tolerance_table,
     document_version,
     document );
  END_TYPE;

  TYPE geometric_constraint_element = SELECT
    ( curve,
     direction,
     point,
     surface );
  END_TYPE;

  TYPE geometric_dimension_modifier = ENUMERATION OF
    ( any_cross_section,
     any_part_of_the_feature,
     area_diameter_calculated_size,
     average_rank_order_size,
     circumference_diameter_calculated_size,
     common_tolerance,
     continuous_feature,
     controlled_radius,
     free_state_condition,
     least_square_association_criteria,
     local_size_defined_by_a_sphere,
     maximum_inscribed_association_criteria,
     maximum_rank_order_size,
     median_rank_order_size,
     mid_range_rank_order_size,
     minimum_circumscribed_association_criteria,
     minimum_rank_order_size,
     range_rank_order_size,
     specific_fixed_cross_section,
     square,
     statistical,
     two_point_size,
     volume_diameter_calculated_size );
  END_TYPE;

  TYPE geometric_item_specific_usage_select = SELECT
    ( shape_element,
     shape_element_relationship );
  END_TYPE;

  TYPE geometric_mapping_target = SELECT
    ( axis_placement,
     cartesian_transformation );
  END_TYPE;

  TYPE geometric_model_item = SELECT
    ( detailed_geometric_model_element,
     detailed_topological_model_element );
  END_TYPE;

  TYPE geometric_representation_select = SELECT
    ( geometric_model,
     kinematic_link_representation,
     link_motion_representation_along_path );
  END_TYPE;

  TYPE geometric_tolerance_modifier = ENUMERATION OF
    ( any_cross_section,
     common_zone,
     each_radial_element,
     free_state,
     least_material_requirement,
     line_element,
     major_diameter,
     maximum_material_requirement,
     minor_diameter,
     not_convex,
     pitch_diameter,
     reciprocity_requirement,
     separate_requirement,
     statistical_tolerance,
     tangent_plane );
  END_TYPE;

  TYPE geometric_tolerance_target = SELECT
    ( dimensional_location,
     dimensional_size,
     nominal_3d_feature );
  END_TYPE;

  TYPE geometrically_bounded_surface_shape_representation_item = SELECT
    ( axis_placement_3d,
     geometric_placement_operation,
     surface_set );
  END_TYPE;

  TYPE groupable_item = SELECT
    ( assembly_component,
     assembly_component_relationship,
     component_feature,
     detailed_geometric_model_element,
     detailed_topological_model_element,
     evaluated_characteristic,
     generic_physical_network,
     geometric_model_relationship_with_transformation,
     geometric_placement_operation,
     group_relationship,
     identification_assignment,
     interconnect_module_stratum_assembly_relationship,
     name_assignment,
     part_connected_terminals_definition,
     part_feature,
     physical_connectivity_definition,
     shape_element,
     stratum,
     styled_element );
  WHERE
    wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GROUP' IN TYPEOF( SELF ) ) );
  END_TYPE;

  TYPE hole_bottom_condition_select = SELECT
    ( blind_bottom_condition,
     through_bottom_condition );
  END_TYPE;

  TYPE hour_in_day = INTEGER;
  WHERE
    wr1: ( ( 0 <= SELF ) AND ( SELF < 24 ) );
  END_TYPE;

  TYPE identification_item = SELECT
    ( approval_status,
     contract,
     digital_document_definition,
     digital_file,
     document,
     document_definition,
     document_version,
     geometric_model,
     group,
     group_relationship,
     hardcopy,
     independent_property,
     information_right,
     information_usage_right,
     information_usage_right_relationship,
     material_identification,
     organization,
     part,
     part_version,
     part_view_definition,
     physical_document_definition,
     product,
     product_as_individual,
     product_as_individual_version,
     product_class,
     product_concept,
     product_configuration,
     product_version,
     requirement,
     requirement_version,
     rule_set,
     security_classification,
     shape_element_relationship );
  END_TYPE;

  TYPE identifier = STRING;
  END_TYPE;

  TYPE idrm_marked_item = classification_item;
  END_TYPE;

  TYPE information_usage_right_item = SELECT
    ( certification_item,
     characterizable_object,
     classification_item,
     documented_element_select,
     identification_item,
     organization,
     person_in_organization,
     product_version,
     requirement_assignment_item,
     work_order );
  END_TYPE;

  TYPE inspected_ecdq_element_select = inspected_element_select;
  END_TYPE;

  TYPE inspected_element_select = SELECT
    ( assembly_component_relationship,
     axis_placement,
     b_spline_or_composite_curve_select,
     b_spline_or_rectangular_composite_surface_select,
     cartesian_transformation_3d,
     closed_or_open_shell_select,
     connected_face_set,
     curve,
     direction,
     edge_curve,
     edge_loop,
     face_surface,
     group,
     layer,
     manifold_solid_brep,
     numerical_representation_context,
     point,
     representation_item,
     styled_element,
     surface,
     vertex_point );
  END_TYPE;

  TYPE inspected_shape_element_select = inspected_element_select;
  END_TYPE;

  TYPE instance_usage_context_select = SELECT
    ( collected_item_association,
     solution_element );
  END_TYPE;

  TYPE interconnect_module_design_object_category = ENUMERATION OF
    ( assembly_component_category,
     embedded_physical_component_terminal_category,
     interconnect_module_cutout,
     interconnect_module_fill_area,
     interconnect_module_inter_stratum_feature,
     interconnect_module_stratum_feature,
     interconnect_module_via );
  END_TYPE;

  TYPE interconnect_module_design_object_category_or_group = SELECT
    ( interconnect_module_design_object_category,
     group );
  END_TYPE;

  TYPE interconnect_module_design_object_select = SELECT
    ( component_termination_passage,
     conductive_filled_area,
     conductor,
     cutout,
     inter_stratum_feature,
     laminate_component,
     land,
     printed_component,
     stratum,
     stratum_feature,
     via );
  END_TYPE;

  TYPE interconnect_or_assembly_module_select = SELECT
    ( component_termination_passage_interface_terminal,
     printed_connector_component_interface_terminal,
     land_interface_terminal );
  END_TYPE;

  TYPE interface_plane_or_seating_plane = SELECT
    ( seating_plane,
     interface_plane );
  END_TYPE;

  TYPE internal_or_reflected_shape_element = SELECT
    ( shape_element,
     identifier );
  END_TYPE;

  TYPE interpolation_type = ENUMERATION OF
    ( undefined_interpolation_type,
     discontinuous_interpolation_type,
     synchronous_interpolation_type,
     linear_interpolation_type );
  END_TYPE;

  TYPE item_usage_relationship_item = SELECT
    ( assembly_component_relationship,
     product_occurrence,
     view_definition_usage );
  END_TYPE;

  TYPE keepout_product_design_object_category = ENUMERATION OF
    ( assembly_module_assembly_component,
     assembly_module_component_feature,
     assembly_ee_material,
     interconnect_ee_material,
     interconnect_module_assembly_component,
     interconnect_module_via,
     interconnect_module_inter_stratum_feature,
     interconnect_module_cutout,
     interconnect_module_fill_area,
     interconnect_module_laminate_component,
     interconnect_module_stratum_feature );
  END_TYPE;

  TYPE kinematic_analysis_definition = SELECT
    ( interpolated_configuration_sequence,
     prescribed_path );
  END_TYPE;

  TYPE kinematic_link_representation_items = SELECT
    ( curve,
     cartesian_point,
     rigid_placement,
     surface );
  END_TYPE;

  TYPE kinematic_result = SELECT
    ( interpolated_configuration_sequence,
     resulting_path );
  END_TYPE;

  TYPE kinematic_topology_representation_select = SELECT
    ( kinematic_topology_structure,
     kinematic_topology_directed_structure,
     kinematic_topology_network_structure );
  END_TYPE;

  TYPE knot_specification = ENUMERATION OF
    ( bezier,
     quasi_uniform,
     uniform );
  END_TYPE;

  TYPE label = STRING;
  END_TYPE;

  TYPE label1 = label;
  WHERE
    wr1: ( LENGTH( SELF ) = 1 );
  END_TYPE;

  TYPE lam_product_design_object_category = ENUMERATION OF
    ( assembly_component_category,
     assembly_module_category,
     assembly_module_component_category,
     assembly_module_component_terminal_category,
     assembly_module_macro_component_category,
     assembly_module_macro_component_join_terminal_category,
     bare_die_component_category,
     bare_die_component_terminal_category,
     buried_via_category,
     cable_component_category,
     component_feature_category,
     component_mounting_feature_category,
     component_termination_passage_category,
     component_termination_passage_and_contact_size_dependent_land_category,
     component_termination_passage_interface_terminal_category,
     component_termination_passage_join_terminal_category,
     conductive_interconnect_element_terminal_category,
     conductive_interconnect_element_with_pre_defined_transitions_category,
     conductive_interconnect_element_with_user_defined_single_transition_category,
     connected_area_component_category,
     contact_size_dependent_land_category,
     cutout_category,
     cutout_edge_segment_category,
     dielectric_material_passage_category,
     electrical_isolation_laminate_component_category,
     embedded_physical_component_terminal_category,
     fiducial_category,
     fill_area_category,
     inter_stratum_feature_category,
     interconnect_component_interface_terminal_category,
     interconnect_component_join_terminal_category,
     interconnect_module_component_category,
     interconnect_module_component_stratum_based_terminal_category,
     interconnect_module_component_surface_feature_category,
     interconnect_module_component_terminal_category,
     interconnect_module_edge_category,
     interconnect_module_edge_segment_category,
     interconnect_module_macro_component_category,
     interconnect_module_macro_component_join_terminal_category,
     interface_access_material_removal_laminate_component_category,
     interface_access_stratum_feature_template_component_category,
     interface_component_category,
     interfacial_connection_category,
     internal_probe_access_area_category,
     laminate_component_category,
     generic_laminate_text_component_category,
     laminate_text_string_component_category,
     land_category,
     land_interface_terminal_category,
     land_join_terminal_category,
     material_removal_laminate_component_category,
     minimally_defined_component_terminal_category,
     movable_packaged_component_join_terminal_category,
     multi_layer_material_removal_laminate_component_category,
     multi_stratum_special_symbol_component_category,
     non_conductive_base_blind_via_category,
     packaged_component_category,
     packaged_component_join_terminal_category,
     packaged_connector_component_category,
     packaged_connector_component_interface_terminal_category,
     partially_plated_cutout_category,
     partially_plated_interconnect_module_edge_category,
     physical_component_category,
     physical_connectivity_interrupting_cutout_category,
     physical_laminate_component_category,
     physical_network_supporting_inter_stratum_feature_category,
     plated_conductive_base_blind_via_category,
     plated_cutout_category,
     plated_cutout_edge_segment_category,
     plated_interconnect_module_edge_category,
     plated_interconnect_module_edge_segment_category,
     plated_passage_category,
     plated_passage_or_unsupported_passage_category,
     primary_stratum_indicator_symbol_category,
     printed_component_join_terminal_category,
     printed_connector_component_interface_terminal_category,
     probe_access_area_category,
     routed_interconnect_component_category,
     routed_physical_component_category,
     single_stratum_special_symbol_component_category,
     stratum_feature_category,
     stratum_feature_template_component_category,
     thermal_isolation_laminate_component_category,
     unrouted_conductive_interconnect_element_category,
     unsupported_passage_category,
     unsupported_passage_dependent_land_category,
     via_category,
     via_terminal_category );
  END_TYPE;

  TYPE lam_product_design_object_category_or_group = SELECT
    ( lam_product_design_object_category,
     stratum,
     group );
  END_TYPE;

  TYPE laminate_shieldable_item = SELECT
    ( component_external_reference,
     component_feature,
     component_feature_external_reference,
     component_group_external_reference,
     generic_physical_network,
     physical_connectivity_definition,
     physical_connectivity_definition_external_reference,
     stratum_feature_template_component );
  END_TYPE;

  TYPE land_connection_zone_class = ENUMERATION OF
    ( surface_point_class,
     edge_area_class,
     edge_curve_class,
     edge_point_class,
     surface_area_class );
  END_TYPE;

  TYPE land_physical_template_or_inter_stratum_feature_template = SELECT
    ( land_physical_template,
     inter_stratum_feature_template );
  END_TYPE;

  TYPE land_template_terminal_class = ENUMERATION OF
    ( surface_point_class,
     edge_area_class,
     edge_curve_class,
     edge_point_class,
     surface_area_class );
  END_TYPE;

  TYPE layer_position_type = ENUMERATION OF
    ( secondary,
     all,
     external,
     primary,
     internal );
  END_TYPE;

  TYPE layered_assembly_module_interface_select = SELECT
    ( interconnect_module_component_terminal,
     physical_component_interface_terminal,
     assembly_module_component_terminal,
     packaged_component_join_terminal );
  END_TYPE;

  TYPE length_measure = REAL;
  END_TYPE;

  TYPE lict_physical_unit_shape_model_select = physical_unit_shape_model_select;
  END_TYPE;

  TYPE light_type = ENUMERATION OF
    ( ambient,
     directional,
     spot,
     positional );
  END_TYPE;

  TYPE limd_restriction_basis_item = restriction_basis_item;
  END_TYPE;

  TYPE limd_sf_shape_select = SELECT
    ( primitive_2d,
     shell_based_surface_model,
     solid_model );
  END_TYPE;

  TYPE limd_stratum_shape_model_select = SELECT
    ( stratum_3d_shape_model,
     stratum_average_surface_shape_model,
     stratum_planar_shape_model,
     stratum_surface_shape_model );
  END_TYPE;

  TYPE limit_select = SELECT
    ( number_of_decimal_places,
     significant_number_of_digits,
     upper_lower_limit );
  END_TYPE;

  TYPE limitation_definition_select = SELECT
    ( limits_and_fits,
     plus_minus_bounds );
  END_TYPE;

  TYPE linear_geometry_element = SELECT
    ( direction,
     line,
     plane );
  END_TYPE;

  TYPE link_or_shape_representation = SELECT
    ( kinematic_link_representation,
     geometric_model );
  END_TYPE;

  TYPE location_of_extreme_value_select = SELECT
    ( b_spline_curve_knot_locator,
     b_spline_curve_segment,
     b_spline_surface_knot_locator,
     b_spline_surface_patch,
     b_spline_surface_strip,
     boundary_curve_of_b_spline_or_rectangular_composite_surface,
     composite_curve_transition_locator,
     face_bound,
     inspected_shape_element_select,
     oriented_edge,
     point_on_edge_curve,
     point_on_face_surface,
     rectangular_composite_surface_transition_locator );
  END_TYPE;

  TYPE location_stratum_technology_occurrence_or_stratum_technology = SELECT
    ( stratum_technology_occurrence_or_stratum_technology,
     template_location_in_structured_template );
  END_TYPE;

  TYPE manifold_subsurface_shape_representation_item = SELECT
    ( axis_placement_3d,
     geometric_placement_operation,
     connected_face_set );
  END_TYPE;

  TYPE manifold_surface_shape_representation_item = SELECT
    ( axis_placement_3d,
     geometric_placement_operation,
     shell_based_surface_model );
  END_TYPE;

  TYPE manufacturing_group_select = SELECT
    ( manufacturing_feature,
     manufacturing_feature_group );
  END_TYPE;

  TYPE map_link = SELECT
    ( conductive_interconnect_element_terminal_link,
     passage_terminal_based_fabrication_joint_link );
  END_TYPE;

  TYPE marked_message_select = SELECT
    ( configuration_controlled_message,
     text_representation_item );
  END_TYPE;

  TYPE marking_shape_select = SELECT
    ( part_template_3d_shape_model,
     physical_unit_3d_shape_model,
     part_template_non_planar_2d_shape_model,
     part_template_planar_shape_model,
     physical_unit_planar_shape_model );
  END_TYPE;

  TYPE mass_property_quality = ENUMERATION OF
    ( high,
     medium,
     low,
     is_unknown );
  END_TYPE;

  TYPE material_condition = ENUMERATION OF
    ( nominal_material_condition,
     minimum_material_condition,
     maximum_material_condition );
  END_TYPE;

  TYPE material_conductivity_classification = ENUMERATION OF
    ( conductive,
     resistive,
     semi_conductive,
     non_conductive );
  END_TYPE;

  TYPE material_item_select = SELECT
    ( anisotropic_material,
     assembly_bond_definition,
     bare_die_template_terminal,
     bare_die_terminal,
     braided_assembly,
     coating_layer,
     definition_based_product_occurrence,
     isotropic_material,
     item_shape,
     laminate_table,
     marking,
     package_body,
     package_terminal_template_definition,
     packaged_part,
     part_view_definition,
     passage_technology,
     predefined_requirement_view_definition,
     product_view_definition,
     shape_element,
     stratum_technology,
     substance_view_definition,
     template_definition,
     woven_assembly );
  END_TYPE;

  TYPE material_or_specification = SELECT
    ( predefined_requirement_view_definition,
     material_identification );
  END_TYPE;

  TYPE material_property_select = SELECT
    ( material_property,
     general_material_property );
  END_TYPE;

  TYPE material_removal_feature_template_or_parametric_template = SELECT
    ( material_removal_feature_template,
     parametric_template );
  END_TYPE;

  TYPE material_state_change_enumeration = ENUMERATION OF
    ( material_addition,
     material_removal );
  END_TYPE;

  TYPE maths_atom = SELECT
    ( maths_boolean,
     maths_complex,
     maths_integer,
     maths_real );
  END_TYPE;

  TYPE maths_boolean = BOOLEAN;
  END_TYPE;

  TYPE maths_complex = LIST [2 : 2] OF REAL;
  END_TYPE;

  TYPE maths_integer = INTEGER;
  END_TYPE;

  TYPE maths_real = REAL;
  END_TYPE;

  TYPE maths_tuple = LIST [0 : ?] OF maths_value;
  END_TYPE;

  TYPE maths_value = SELECT
    ( maths_atom,
     maths_space,
     maths_tuple );
  END_TYPE;

  TYPE mating_connector_definition_select = SELECT
    ( packaged_part_terminal,
     printed_part_template_terminal );
  END_TYPE;

  TYPE mating_type = ENUMERATION OF
    ( bolted_joint,
     brazing,
     clasping,
     clinching,
     clipping,
     doweling,
     flanging,
     foam_injection,
     friction_welding,
     gluing,
     laser_welding,
     press_fit,
     riveting,
     sewing,
     soldering,
     spot_welding,
     stapling,
     welding );
  END_TYPE;

  TYPE mdprwd_element_select = SELECT
    ( axis_placement,
     camera_model_d3 );
  END_TYPE;

  TYPE measure_orientation = ENUMERATION OF
    ( reversed,
     normal );
  END_TYPE;

  TYPE measure_qualification_or_value_with_unit = SELECT
    ( measure_qualification,
     value_with_unit );
  END_TYPE;

  TYPE measure_value = SELECT
    ( any_number_value,
     any_string_value,
     area_measure,
     count_measure,
     length_measure,
     plane_angle_measure,
     ratio_measure,
     volume_measure );
  END_TYPE;

  TYPE measured_value_select = SELECT
    ( boolean_value,
     measure_value,
     plane_angle_and_length_pair,
     plane_angle_and_ratio_pair );
  END_TYPE;

  TYPE measuring_gauge_select = SELECT
    ( part_view_definition );
  END_TYPE;

  TYPE mechanical_design_and_draughting_relationship_select = SELECT
    ( draughting_model,
     geometric_model,
     mechanical_design_presentation_representation_with_draughting,
     mechanical_design_shaded_styled_model,
     mechanical_representation_styled_model );
  END_TYPE;

  TYPE message_source_select = SELECT
    ( organization,
     approval,
     product_version );
  END_TYPE;

  TYPE message_type = ENUMERATION OF
    ( part_number,
     manufacturer_code,
     revision_identifier,
     approval_date );
  END_TYPE;

  TYPE metal_or_dielectric = ENUMERATION OF
    ( over_finished_conductor,
     over_finished_dielectric );
  END_TYPE;

  TYPE minute_in_hour = INTEGER;
  WHERE
    wr1: ( ( 0 <= SELF ) AND ( SELF <= 59 ) );
  END_TYPE;

  TYPE month_in_year_number = INTEGER;
  WHERE
    wr1: ( ( 1 <= SELF ) AND ( SELF <= 12 ) );
  END_TYPE;

  TYPE mounting_technology_type = ENUMERATION OF
    ( surface_mount,
     through_hole );
  END_TYPE;

  TYPE multi_or_next_assembly_usage_occurrence = SELECT
    ( multi_level_reference_designator,
     next_assembly_usage );
  END_TYPE;

  TYPE nfdv_pa_or_parameter_assignment_override = SELECT
    ( parameter_assignment,
     parameter_assignment_override );
  END_TYPE;

  TYPE nominal_3d_derived_feature_geometry = SELECT
    ( curve,
     point,
     surface );
  END_TYPE;

  TYPE nominal_3d_integral_feature_geometry = SELECT
    ( advanced_face,
     edge_curve,
     vertex_point,
     connected_face_set,
     edge_loop );
  END_TYPE;

  TYPE offset_orientation = ENUMERATION OF
    ( ahead,
     exact,
     behind );
  END_TYPE;

  TYPE open_shell_or_subsurface = SELECT
    ( manifold_surface_shape_representation,
     manifold_subsurface_model );
  END_TYPE;

  TYPE organization_or_person_in_organization_item = SELECT
    ( activity,
     alias_identification,
     alternate_part_relationship,
     applied_activity_assignment,
     approval,
     classification_assignment,
     classification_association,
     contract,
     data_quality_definition,
     digital_document_definition,
     digital_file,
     document,
     document_definition,
     document_version,
     general_organizational_data_select,
     hardcopy,
     identification_assignment,
     information_usage_right,
     part,
     part_version,
     part_view_definition,
     physical_document_definition,
     product_configuration,
     rule_action,
     security_classification,
     security_classification_assignment,
     supplied_part_relationship,
     work_order,
     work_request );
  END_TYPE;

  TYPE organization_or_person_in_organization_select = SELECT
    ( organization,
     person_in_organization );
  END_TYPE;

  TYPE oriented_tolerance_zone_type = ENUMERATION OF
    ( perpendicular,
     parallel,
     angular );
  END_TYPE;

  TYPE overriding_style_context = SELECT
    ( detailed_geometric_model_element,
     geometric_model_relationship,
     layer,
     styled_model );
  END_TYPE;

  TYPE package_or_package_external_reference = SELECT
    ( package,
     package_external_reference );
  END_TYPE;

  TYPE parallel_offset_type = ENUMERATION OF
    ( curve_2d_offset,
     curve_3d_offset,
     surface_offset );
  END_TYPE;

  TYPE parameter_assignment_select = SELECT
    ( analytical_model_parameter,
     model_parameter );
  END_TYPE;

  TYPE parameter_value = REAL;
  END_TYPE;

  TYPE part_category = ENUMERATION OF
    ( application_control,
     assembly,
     boxed,
     collection,
     completely_knocked_down,
     continuous,
     detail,
     discrete,
     in_process,
     inseparable_assembly,
     prototype,
     raw_material,
     raw_material_by_area,
     raw_material_by_length,
     raw_material_by_volume,
     regulated,
     safety,
     service,
     tool );
  END_TYPE;

  TYPE part_template_or_physical_unit_2d_shape_select = SELECT
    ( part_template_planar_shape_model,
     physical_unit_planar_shape_model );
  END_TYPE;

  TYPE part_template_or_physical_unit_3d_shape_model_select = SELECT
    ( part_template_3d_shape_model,
     part_template_non_planar_2d_shape_model,
     physical_unit_3d_shape_model );
  END_TYPE;

  TYPE path_or_composite_curve = SELECT
    ( path,
     composite_curve );
  END_TYPE;

  TYPE period_or_date_or_event_select = SELECT
    ( date_or_event,
     duration );
  END_TYPE;

  TYPE physical_connectivity_definition_domain_enumeration = ENUMERATION OF
    ( electrical,
     magnetic,
     optical,
     thermal );
  END_TYPE;

  TYPE physical_shieldable_item = SELECT
    ( assembly_component,
     component_feature,
     physical_connectivity_definition,
     placement_group_requirement_definition );
  END_TYPE;

  TYPE physical_unit = SELECT
    ( part_design_view,
     part_usage_view );
  END_TYPE;

  TYPE physical_unit_shape_model_select = SELECT
    ( physical_unit_3d_shape_model,
     physical_unit_planar_shape_model );
  END_TYPE;

  TYPE picture_representation_element_select = SELECT
    ( axis_placement_2d,
     styled_element );
  END_TYPE;

  TYPE planar_curve_select = SELECT
    ( conic,
     line );
  END_TYPE;

  TYPE plane_angle_measure = REAL;
  END_TYPE;

  TYPE plane_or_planar_box = SELECT
    ( planar_box,
     plane );
  END_TYPE;

  TYPE ply_laminate_shape = SELECT
    ( advanced_brep_shape_representation,
     composite_sheet_representation,
     csg_model,
     curve_swept_solid,
     elementary_brep_shape_representation,
     faceted_brep_shape_representation,
     tessellated_shape_representation,
     three_d_geometry_set );
  END_TYPE;

  TYPE ply_piece_shape = SELECT
    ( ply_shape );
  END_TYPE;

  TYPE ply_stock_material = SELECT
    ( anisotropic_material,
     braided_assembly,
     discontinuous_fiber_assembly,
     filament_assembly,
     isotropic_material,
     woven_assembly );
  END_TYPE;

  TYPE pocket_bottom_condition_select = SELECT
    ( pocket_bottom_condition,
     through_pocket_bottom_condition );
  END_TYPE;

  TYPE point_curve_or_surface = SELECT
    ( curve,
     point,
     surface );
  END_TYPE;

  TYPE point_or_measure = SELECT
    ( cartesian_point,
     measure_item );
  END_TYPE;

  TYPE point_or_point_direction = SELECT
    ( point,
     point_direction );
  END_TYPE;

  TYPE point_or_point_direction_sequence = SELECT
    ( point_direction_sequence,
     point_sequence );
  END_TYPE;

  TYPE port_property_type = ENUMERATION OF
    ( string_property_type,
     boolean_property_type,
     logical_property_type,
     numeric_property_type,
     physical_property_type );
  END_TYPE;

  TYPE predefined_3d_purpose = ENUMERATION OF
    ( analysis_input,
     analysis_output,
     shock_analysis_input,
     shock_analysis_output,
     design,
     vibration_analysis_input,
     vibration_analysis_output,
     electromagnetic_compatibility_analysis_input,
     electromagnetic_compatibility_analysis_output,
     thermal_analysis_input,
     thermal_analysis_output );
  END_TYPE;

  TYPE predefined_design_layer_purpose = ENUMERATION OF
    ( other_signal,
     lands_only,
     power_or_ground,
     embedded_passive_capacitor_dielectric,
     embedded_passive_resistor );
  END_TYPE;

  TYPE predefined_documentation_layer_purpose = ENUMERATION OF
    ( solderdam,
     soldermask,
     solderpaste,
     silkscreen,
     generic_layer,
     glue,
     gluemask,
     pastemask,
     finish_coating,
     coverlay );
  END_TYPE;

  TYPE predefined_geometric_status = ENUMERATION OF
    ( undefined,
     standard_datum_condition,
     perpendicular_primary_datum_axis,
     perpendicular_primary_datum_plane );
  END_TYPE;

  TYPE predefined_keepout_purpose = ENUMERATION OF
    ( thermal,
     generic_clearance,
     shock,
     vibration,
     electromagnetic_compatibility );
  END_TYPE;

  TYPE predefined_lead_form = ENUMERATION OF
    ( ball,
     gull_wing,
     integral_terminal,
     j_lead,
     reversed_j_lead,
     straight,
     undefined );
  END_TYPE;

  TYPE predefined_planar_purpose = ENUMERATION OF
    ( analysis_input,
     analysis_output,
     shock_analysis_input,
     shock_analysis_output,
     assembly_symbol,
     design,
     design_profile,
     vibration_analysis_input,
     vibration_analysis_output,
     electromagnetic_compatibility_analysis_input,
     electromagnetic_compatibility_analysis_output,
     physical_extent,
     thermal_analysis_input,
     thermal_analysis_output );
  END_TYPE;

  TYPE predicate_symbol = STRING;
  END_TYPE;

  TYPE preferred_ordering = ENUMERATION OF
    ( extremity_order,
     detected_order );
  END_TYPE;

  TYPE presentation_association_select = SELECT
    ( activity,
     activity_method,
     activity_relationship,
     design_constraint_definition,
     product_concept,
     product_version,
     product_view_definition,
     specification,
     specification_category,
     view_definition_relationship );
  END_TYPE;

  TYPE presented_model_select = SELECT
    ( external_geometric_model,
     styled_model );
  END_TYPE;

  TYPE primary_or_secondary = ENUMERATION OF
    ( primary,
     secondary );
  END_TYPE;

  TYPE primitive_or_boolean_result_2d = SELECT
    ( primitive_2d,
     boolean_result_2d );
  END_TYPE;

  TYPE printed_part_template_terminal_class = ENUMERATION OF
    ( curve_edge_segment,
     surface_point,
     area_edge_segment,
     surface_area );
  END_TYPE;

  TYPE process_operation_input_or_output_select = SELECT
    ( assembly_component_relationship,
     mated_part_relationship,
     part_view_definition,
     product_occurrence );
  END_TYPE;

  TYPE process_state_relationship_direction = ENUMERATION OF
    ( bidirectional_process_state_relationship,
     unidirectional_process_state_relationship );
  END_TYPE;

  TYPE product_design_view_or_configuration = SELECT
    ( product_view_definition,
     product_configuration );
  END_TYPE;

  TYPE product_item = SELECT
    ( product_view_definition,
     view_definition_usage );
  END_TYPE;

  TYPE product_version_or_configuration = SELECT
    ( product_version,
     product_configuration );
  END_TYPE;

  TYPE product_view_definition_or_reference = SELECT
    ( product_view_definition,
     generic_product_view_definition_reference );
  END_TYPE;

  TYPE profile_or_angle_select = SELECT
    ( closed_profile_usage,
     directed_angle );
  END_TYPE;

  TYPE profile_select = SELECT
    ( profile_floor,
     through_profile_floor );
  END_TYPE;

  TYPE project_item = SELECT
    ( activity,
     product_concept );
  END_TYPE;

  TYPE projection_method = ENUMERATION OF
    ( projection_reference,
     surface_normal );
  END_TYPE;

  TYPE property_assignment_select = SELECT
    ( analytical_model_definition,
     assembly_bond_definition,
     assembly_component_relationship,
     breakdown_element_realization,
     breakdown_element_usage,
     characterizable_object,
     characterized_item_within_representation,
     characterized_representation,
     document_definition,
     file,
     item_shape,
     part_view_definition,
     passage_technology,
     product_class,
     product_specification,
     product_view_definition,
     requirement_view_definition,
     shape_element,
     shape_element_relationship,
     stratum_technology,
     view_definition_relationship );
  END_TYPE;

  TYPE property_variable_rep_select = SELECT
    ( dimensional_size,
     property_value_representation );
  END_TYPE;

  TYPE ptswp_ptsm_definition = SELECT
    ( via_template,
     component_termination_passage_template );
  END_TYPE;

  TYPE ptswp_template_shape_model_context = ENUMERATION OF
    ( drilled_passage_context,
     finished_passage_context,
     unknown_context );
  END_TYPE;

  TYPE pu2ds_component_application = ENUMERATION OF
    ( compliant_components_permitted,
     no_components_permitted );
  END_TYPE;

  TYPE pu2ds_shape_location = ENUMERATION OF
    ( above,
     below,
     congruent );
  END_TYPE;

  TYPE pu2ds_shape_side = ENUMERATION OF
    ( same_side,
     opposite_side,
     both_sides );
  END_TYPE;

  TYPE pu3ds_component_application = ENUMERATION OF
    ( compliant_components_permitted,
     no_components_permitted );
  END_TYPE;

  TYPE pu3ds_shape_location = ENUMERATION OF
    ( above,
     below );
  END_TYPE;

  TYPE pu3ds_shape_side = ENUMERATION OF
    ( same_side,
     opposite_side,
     both_sides );
  END_TYPE;

  TYPE radial_geometry_element = SELECT
    ( circle,
     cylindrical_surface,
     conical_surface,
     spherical_surface,
     circular_cylinder,
     circular_cone,
     sphere );
  END_TYPE;

  TYPE radial_type = ENUMERATION OF
    ( circular_or_cylindrical_radius,
     spherical_radius,
     toroidal_minor_radius,
     toroidal_major_radius,
     toroidal_high_major_radius,
     toroidal_low_major_radius );
  END_TYPE;

  TYPE range_class = ENUMERATION OF
    ( closed,
     lower_open,
     upper_open,
     open );
  END_TYPE;

  TYPE ratio_measure = REAL;
  END_TYPE;

  TYPE relationship_operation = ENUMERATION OF
    ( and_operation,
     or_operation );
  END_TYPE;

  TYPE replicate_base_select = SELECT
    ( machining_feature,
     replicate_feature );
  END_TYPE;

  TYPE representation_proxy_select = SELECT
    ( document_version );
  END_TYPE;

  TYPE represented_definition = SELECT
    ( assigned_property,
     independent_property,
     item_shape,
     shape_element,
     shape_element_relationship );
  END_TYPE;

  TYPE requirement_assignment_item = SELECT
    ( assembly_component_relationship,
     assembly_item_number,
     assembly_joint,
     component_feature_to_layout_feature_relationship,
     component_material_relationship,
     component_or_feature,
     derived_laminate_assignment,
     dielectric_crossover_area,
     electrical_isolation_removal_template,
     functional_unit,
     group,
     group_relationship,
     interconnect_module_constraint_region,
     layered_interconnect_module_design_view,
     mating_connector_termination,
     part_connected_terminals_definition,
     part_connected_terminals_element,
     part_feature,
     part_template_3d_keepout_shape_model,
     part_template_3d_shape_model,
     part_template_keepout_shape_model,
     part_template_planar_keepout_shape_model,
     part_terminal,
     part_view_definition,
     passage_technology,
     physical_connectivity_definition,
     physical_connectivity_definition_relationship,
     physical_connectivity_element,
     physical_shield,
     physical_unit_3d_keepout_shape_model,
     physical_unit_3d_shape_model,
     physical_unit_keepout_shape_model,
     physical_unit_planar_keepout_shape_model,
     physical_unit_planar_shape_model,
     physical_unit_shape_model,
     placement_group_requirement_definition,
     product,
     product_class,
     product_configuration,
     product_version,
     product_view_definition,
     restriction_basis_item,
     sequential_laminate_assembly_relationship,
     stratum_constraint_region,
     stratum_feature_conductive_join,
     stratum_technology,
     stratum_technology_occurrence,
     stratum_technology_occurrence_relationship,
     structured_template,
     template_location_in_structured_template,
     termination_constraint,
     view_definition_relationship );
  END_TYPE;

  TYPE requirement_satisfaction_item = SELECT
    ( requirement_assignment_item );
  END_TYPE;

  TYPE requirement_source_item = SELECT
    ( characterizable_object,
     group,
     group_relationship,
     product,
     product_version,
     product_view_definition,
     shape_element,
     view_definition_relationship );
  END_TYPE;

  TYPE resource_definition_select = SELECT
    ( breakdown_element_definition,
     part_view_definition,
     product_as_individual_view,
     product_occurrence,
     resource_requirement_type );
  END_TYPE;

  TYPE restriction_basis_item = SELECT
    ( component_or_component_feature,
     part_feature,
     predefined_requirement_view_definition,
     stratum_concept );
  END_TYPE;

  TYPE rigid_placement = SELECT
    ( axis_placement_3d,
     su_parameters );
  END_TYPE;

  TYPE scalar_or_coordinated_characteristics = SELECT
    ( property_value_representation,
     characteristic );
  END_TYPE;

  TYPE scope_select = SELECT
    ( rule_definition,
     rule_set,
     rule_set_group );
  END_TYPE;

  TYPE sculpting_surface = SELECT
    ( advanced_face,
     advanced_open_shell,
     surface );
  END_TYPE;

  TYPE seating_plane_intersection_type = ENUMERATION OF
    ( surface_intersection,
     through_intersection,
     does_not_intersect );
  END_TYPE;

  TYPE second_in_minute = REAL;
  WHERE
    wr1: ( ( 0 <= SELF ) AND ( SELF <= 60 ) );
  END_TYPE;

  TYPE security_classification_item = SELECT
    ( assembly_component_relationship,
     digital_document_definition,
     digital_file,
     document,
     document_definition,
     document_version,
     file,
     hardcopy,
     part_version,
     part_view_definition,
     physical_document_definition,
     product_version,
     product_view_definition,
     promissory_usage,
     view_definition_usage );
  END_TYPE;

  TYPE shape_approximation_level = ENUMERATION OF
    ( coarse,
     detailed,
     is_unknown );
  END_TYPE;

  TYPE shape_class = ENUMERATION OF
    ( extrusion,
     manhattan_block,
     other,
     is_unknown );
  END_TYPE;

  TYPE shape_data_quality_assessment_specification_select = SELECT
    ( shape_data_quality_assessment_by_numerical_test,
     shape_data_quality_assessment_by_logical_test );
  END_TYPE;

  TYPE shape_data_quality_value_limit_type_select = SELECT
    ( shape_data_quality_value_range,
     shape_data_quality_value_limit );
  END_TYPE;

  TYPE shape_element_or_relationship_select = SELECT
    ( shape_element,
     shape_element_relationship );
  END_TYPE;

  TYPE shape_extent = ENUMERATION OF
    ( envelope,
     over_body,
     over_lands,
     over_breakout );
  END_TYPE;

  TYPE shape_model = SELECT
    ( constructive_geometry,
     external_geometric_model,
     geometric_model );
  END_TYPE;

  TYPE shape_model_element = SELECT
    ( detailed_topological_model_element,
     detailed_geometric_model_element );
  END_TYPE;

  TYPE shapeable_item = SELECT
    ( characterizable_object,
     product_occurrence_definition_relationship,
     product_view_definition,
     view_definition_relationship );
  END_TYPE;

  TYPE shaped_element_select = SELECT
    ( shape_element,
     item_shape );
  END_TYPE;

  TYPE signal_flow_direction = ENUMERATION OF
    ( unknown_direction,
     not_applicable,
     output_direction,
     input_direction,
     bidirectional );
  END_TYPE;

  TYPE simple_datum_reference_modifier = ENUMERATION OF
    ( any_cross_section,
     any_longitudinal_section,
     basic,
     contacting_feature,
     degree_of_freedom_constraint_u,
     degree_of_freedom_constraint_v,
     degree_of_freedom_constraint_w,
     degree_of_freedom_constraint_x,
     degree_of_freedom_constraint_y,
     degree_of_freedom_constraint_z,
     distance_variable,
     free_state,
     least_material_requirement,
     line,
     major_diameter,
     maximum_material_requirement,
     minor_diameter,
     orientation,
     pitch_diameter,
     plane,
     point,
     translation );
  END_TYPE;

  TYPE sketch_basis_select = SELECT
    ( advanced_face,
     planar_curve_select );
  END_TYPE;

  TYPE sketch_element_select = SELECT
    ( curve,
     point );
  WHERE
    wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DETAILED_GEOMETRIC_MODEL_ELEMENT' IN TYPEOF( SELF ) );
  END_TYPE;

  TYPE sketch_type_select = SELECT
    ( sketch_2d_representation,
     positioned_sketch,
     subsketch );
  END_TYPE;

  TYPE solid_select = SELECT
    ( modified_solid,
     detailed_geometric_model_element );
  END_TYPE;

  TYPE solid_with_placed_feature = SELECT
    ( solid_with_depression,
     solid_with_protrusion,
     solid_with_circular_pattern,
     solid_with_rectangular_pattern );
  END_TYPE;

  TYPE spacing_type = ENUMERATION OF
    ( nearest_boundary,
     centroid,
     furthest_boundary );
  END_TYPE;

  TYPE spatial_rotation = SELECT
    ( ypr_rotation,
     rotation_about_direction );
  END_TYPE;

  TYPE special_symbol_component = SELECT
    ( single_stratum_special_symbol_component,
     multi_stratum_special_symbol_component );
  END_TYPE;

  TYPE specification_operand_select = SELECT
    ( specification_expression,
     specification );
  END_TYPE;

  TYPE square_or_round = ENUMERATION OF
    ( square,
     round );
  END_TYPE;

  TYPE stack_or_sub_stack = SELECT
    ( design_stack_model,
     stratum_sub_stack );
  END_TYPE;

  TYPE starting_or_ending = ENUMERATION OF
    ( ending,
     starting );
  END_TYPE;

  TYPE statistical_value_type = ENUMERATION OF
    ( number_of_inspected_instances,
     number_of_quality_defects_detected );
  END_TYPE;

  TYPE stiffness_class = ENUMERATION OF
    ( fluid_like_with_constant_thickness,
     fluid_like_with_varying_thickness,
     stiff_laminate );
  END_TYPE;

  TYPE straight_or_tapered = ENUMERATION OF
    ( straight,
     tapered );
  END_TYPE;

  TYPE stratum_assembly_relationship_or_stratum_technology_occurrence = SELECT
    ( interconnect_module_stratum_assembly_relationship,
     stratum_technology_occurrence );
  END_TYPE;

  TYPE stratum_concept = SELECT
    ( inter_stratum_feature,
     laminate_component,
     stratum,
     stratum_feature,
     stratum_surface,
     structured_layout_component );
  END_TYPE;

  TYPE stratum_feature_or_stratum = SELECT
    ( stratum_feature,
     stratum );
  END_TYPE;

  TYPE stratum_feature_template_component_or_stratum = SELECT
    ( stratum_feature_template_component,
     stratum );
  END_TYPE;

  TYPE stratum_feature_template_or_parametric_template = SELECT
    ( stratum_feature_template,
     parametric_template );
  END_TYPE;

  TYPE stratum_surface_designation = ENUMERATION OF
    ( average_surface,
     primary_surface,
     secondary_surface );
  END_TYPE;

  TYPE stratum_technology_occurrence_or_stratum_technology = SELECT
    ( stratum_technology_occurrence,
     stratum_technology );
  END_TYPE;

  TYPE string_representation_item_list = LIST [1 : ?] OF string_representation_item_select;
  END_TYPE;

  TYPE string_representation_item_list_or_set = SELECT
    ( string_representation_item_list,
     string_representation_item_set );
  END_TYPE;

  TYPE string_representation_item_select = SELECT
    ( string_representation_item,
     included_text_block,
     structured_text_composition );
  END_TYPE;

  TYPE string_representation_item_set = SET [1 : ?] OF string_representation_item_select;
  END_TYPE;

  TYPE string_select = SELECT
    ( alias_identification,
     alternate_part_relationship,
     applied_independent_property,
     approval,
     approval_relationship,
     approval_status,
     assembly_component_relationship,
     assembly_relationship_substitution,
     certification,
     certification_assignment,
     contract,
     date_or_date_time_assignment,
     detailed_geometric_model_element,
     digital_document_definition,
     document,
     document_assignment,
     document_definition_relationship,
     document_version,
     effectivity,
     effectivity_relationship,
     event,
     external_geometric_model,
     external_item_identification,
     external_source_identification,
     file_relationship,
     identification_assignment,
     independent_property,
     independent_property_relationship,
     information_right,
     information_usage_right,
     information_usage_right_relationship,
     item_shape,
     make_from_relationship,
     organization_relationship,
     person_in_organization,
     physical_document_definition,
     product,
     product_version,
     product_version_relationship,
     product_view_definition,
     project,
     project_assignment,
     project_relationship,
     representation,
     security_classification_assignment,
     shape_element,
     shape_element_relationship,
     string_representation_item,
     uncertainty_with_unit,
     view_definition_context,
     view_definition_relationship );
  END_TYPE;

  TYPE structuring_method_select = SELECT
    ( group,
     layer );
  END_TYPE;

  TYPE styled_element_appearance = SELECT
    ( appearance_assignment,
     context_dependent_appearance_assignment_set );
  END_TYPE;

  TYPE substance_composition_basis = ENUMERATION OF
    ( atoms,
     mass,
     moles,
     volume );
  END_TYPE;

  TYPE summary_report_type = ENUMERATION OF
    ( unspecified,
     conclusion_only,
     number_of_quality_defects,
     number_of_inspections_and_conclusion,
     full_statistics );
  END_TYPE;

  TYPE surface_boundary_type = ENUMERATION OF
    ( u_parameter_min,
     v_parameter_min,
     u_parameter_max,
     v_parameter_max );
  END_TYPE;

  TYPE surface_or_solid_model = SELECT
    ( solid_model );
  END_TYPE;

  TYPE surface_side = ENUMERATION OF
    ( positive,
     negative,
     both );
  END_TYPE;

  TYPE surface_transition_code = ENUMERATION OF
    ( discontinuous,
     continuous,
     cont_same_gradient,
     cont_same_gradient_same_curvature );
  END_TYPE;

  TYPE swept_surface_or_solid = SELECT
    ( swept_solid,
     swept_surface );
  END_TYPE;

  TYPE symbol_definition_select = SELECT
    ( dimension_symbol,
     general_symbol,
     geometric_tolerance_symbol,
     marker,
     surface_condition_symbol,
     terminator );
  END_TYPE;

  TYPE tangent_contact_type = ENUMERATION OF
    ( point_contact,
     curve_contact,
     surface_contact );
  END_TYPE;

  TYPE taper_select = SELECT
    ( angle_taper,
     diameter_taper,
     directed_taper );
  END_TYPE;

  TYPE template_arrangement = ENUMERATION OF
    ( top,
     bottom,
     symmetrical,
     swappable );
  END_TYPE;

  TYPE template_definition_select = SELECT
    ( geometric_model );
  END_TYPE;

  TYPE template_instance = SELECT
    ( geometric_placement_operation,
     geometric_model_relationship_with_transformation );
  END_TYPE;

  TYPE template_location_placement_status = ENUMERATION OF
    ( is_fixed,
     must_be_moved_in_design,
     may_be_moved_in_design,
     is_unknown );
  END_TYPE;

  TYPE term_select = SELECT
    ( symbol,
     constants,
     func,
     scalar_variable,
     row_value,
     row_variable );
  END_TYPE;

  TYPE terminal_or_inter_stratum_feature = SELECT
    ( embedded_physical_component_terminal,
     inter_stratum_feature,
     interconnect_module_macro_component_join_terminal,
     interconnect_module_terminal,
     printed_component_join_terminal );
  END_TYPE;

  TYPE termination_or_junction = SELECT
    ( component_terminal,
     explicitly_located_layer_connection_point,
     inter_stratum_join_relationship,
     topological_junction );
  END_TYPE;

  TYPE tessellated_edge_or_vertex = SELECT
    ( tessellated_edge,
     tessellated_vertex );
  END_TYPE;

  TYPE text = STRING;
  END_TYPE;

  TYPE text_alignment = ENUMERATION OF
    ( bottom_centre,
     bottom_left,
     bottom_right,
     centre_centre,
     centre_left,
     centre_right,
     top_centre,
     top_left,
     top_right );
  END_TYPE;

  TYPE text_delineation = ENUMERATION OF
    ( overline,
     underline );
  END_TYPE;

  TYPE text_or_composite_text = SELECT
    ( annotation_text,
     annotation_text_character,
     composite_presentable_text,
     defined_character_glyph,
     text_literal );
  END_TYPE;

  TYPE text_path = ENUMERATION OF
    ( left,
     right,
     up,
     down );
  END_TYPE;

  TYPE text_string_representation_item_select = SELECT
    ( annotation_text,
     annotation_text_character,
     composite_presentable_text,
     defined_character_glyph,
     text_literal );
  END_TYPE;

  TYPE textual_quantity_specification = STRING;
  END_TYPE;

  TYPE thickness_laminate_table_component = SELECT
    ( filament_laminate,
     ply,
     processed_core );
  END_TYPE;

  TYPE three_dimensional_shape = SELECT
    ( advanced_brep_shape_representation,
     curve_swept_solid,
     geometrically_bounded_surface_shape_representation );
  END_TYPE;

  TYPE time_interval_item = SELECT
    ( activity,
     general_organizational_data_select,
     time_interval_effectivity );
  END_TYPE;

  TYPE tnd_location_select = SELECT
    ( cartesian_point,
     component_feature,
     non_feature_shape_element,
     part_feature );
  END_TYPE;

  TYPE tolerance_principle_type = ENUMERATION OF
    ( envelope_requirement,
     independency,
     default );
  END_TYPE;

  TYPE tolerance_zone_target = SELECT
    ( dimensional_location,
     dimensional_size,
     general_datum_reference,
     geometric_tolerance );
  END_TYPE;

  TYPE tolerance_zone_type = ENUMERATION OF
    ( within_a_circle,
     between_two_concentric_circles,
     between_two_equidistant_curves,
     within_a_cylinder,
     between_two_coaxial_cylinders,
     between_two_equidistant_surfaces,
     non_uniform,
     cylindrical_or_circular,
     spherical,
     not_known );
  END_TYPE;

  TYPE trace_junction_or_via = SELECT
    ( explicitly_located_layer_connection_point,
     inter_stratum_join_relationship );
  END_TYPE;

  TYPE trim_intent = ENUMERATION OF
    ( blind,
     through_all,
     up_to_next,
     unspecified );
  END_TYPE;

  TYPE trim_select = SELECT
    ( length_measure,
     plane_angle_measure,
     advanced_face,
     detailed_geometric_model_element );
  END_TYPE;

  TYPE u_or_v_parameter = ENUMERATION OF
    ( u_parameter,
     v_parameter );
  END_TYPE;

  TYPE undefined_edge_shape_enumeration_direction = ENUMERATION OF
    ( true_neighbor,
     false_neighbor,
     both_neighbors );
  END_TYPE;

  TYPE up_or_down = ENUMERATION OF
    ( independent,
     precedent,
     subsequent );
  END_TYPE;

  TYPE usage_concept = SELECT
    ( component_termination_passage_template_terminal,
     land_template_terminal,
     non_feature_shape_element,
     part_feature,
     printed_part_template_terminal,
     via_template_terminal );
  END_TYPE;

  TYPE used_quality_representation_select = SELECT
    ( data_quality_criteria_representation,
     data_quality_inspection_result_representation );
  END_TYPE;

  TYPE value_qualifier = SELECT
    ( precision_qualifier,
     type_qualifier,
     uncertainty_qualifier,
     value_format_type_qualifier );
  END_TYPE;

  TYPE variational_parameter_select = SELECT
    ( bound_variational_parameter,
     unbound_variational_parameter );
  END_TYPE;

  TYPE version_or_definition = SELECT
    ( product_version,
     product_view_definition );
  END_TYPE;

  TYPE view_area_element_select = SELECT
    ( axis_placement_2d,
     styled_element,
     view_area_replication );
  END_TYPE;

  TYPE view_area_relation_type = ENUMERATION OF
    ( copy,
     derivation,
     hierarchy,
     substitution,
     unspecified );
  END_TYPE;

  TYPE view_area_replication_model = SELECT
    ( view_area,
     view );
  END_TYPE;

  TYPE view_element_select = SELECT
    ( axis_placement_2d,
     camera_image_2d_with_scale,
     model_image_3d,
     styled_element );
  END_TYPE;

  TYPE view_projection_type = ENUMERATION OF
    ( central,
     parallel );
  END_TYPE;

  TYPE view_relation_type = ENUMERATION OF
    ( dependency,
     unspecified );
  END_TYPE;

  TYPE view_shape_select = SELECT
    ( part_template_shape_model,
     physical_unit_shape_model );
  END_TYPE;

  TYPE volume_measure = REAL;
  END_TYPE;

  TYPE volume_select = SELECT
    ( protrusion,
     boss );
  END_TYPE;

  TYPE week_in_year_number = INTEGER;
  WHERE
    wr1: ( ( 1 <= SELF ) AND ( SELF <= 53 ) );
  END_TYPE;

  TYPE year_number = INTEGER;
  END_TYPE;

  TYPE ypr_enumeration = ENUMERATION OF
    ( yaw,
     pitch,
     roll );
  END_TYPE;

  TYPE ypr_rotation = ARRAY [ypr_index( yaw ) : ypr_index( roll )] OF plane_angle_measure;
  END_TYPE;

  ENTITY abrupt_change_of_surface_normal
    SUBTYPE OF ( geometry_with_local_irregularity );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      small_vector_tolerance                 : length_measure;
      test_point_distance_tolerance          : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'POINT_ON_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POINT_ON_SURFACE'] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY abs_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY absorbed_dose_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY abstract_variable
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            scalar_variable, 
            row_variable ) );
      name   : STRING;
      scope  : scope_select;
    UNIQUE
      ur1 : name, scope;
  END_ENTITY;

  ENTITY acceleration_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY acos_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY across_port_variable
    SUBTYPE OF ( port_variable );
    WHERE
      wr1: EXISTS( SELF\port_variable.unit_of_measure );
  END_ENTITY;

  ENTITY activity;
      id             : STRING;
      name           : STRING;
      description    : OPTIONAL STRING;
      chosen_method  : activity_method;
  END_ENTITY;

  ENTITY activity_method;
      name         : STRING;
      description  : OPTIONAL STRING;
      consequence  : OPTIONAL STRING;
      purpose      : STRING;
  END_ENTITY;

  ENTITY activity_method_assignment;
      relation_type       : STRING;
      assigned_method     : activity_method;
      associated_request  : work_request;
  END_ENTITY;

  ENTITY activity_method_relationship;
      name             : STRING;
      description      : OPTIONAL STRING;
      relating_method  : activity_method;
      related_method   : activity_method;
  END_ENTITY;

  ENTITY activity_property;
      name               : STRING;
      description        : STRING;
      described_element  : characterized_activity_definition;
  END_ENTITY;

  ENTITY activity_property_representation;
      description  : OPTIONAL STRING;
      property     : activity_property;
      rep          : representation;
      role         : STRING;
  END_ENTITY;

  ENTITY activity_relationship
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_activity_relationship, 
            externally_defined_activity_relationship ) );
      name               : STRING;
      description        : OPTIONAL STRING;
      relating_activity  : activity;
      related_activity   : activity;
  END_ENTITY;

  ENTITY activity_status;
      assigned_activity  : activity;
      status             : STRING;
  END_ENTITY;

  ENTITY actuated_kinematic_pair
    SUBTYPE OF ( kinematic_pair );
      t_x  : OPTIONAL actuated_direction;
      t_y  : OPTIONAL actuated_direction;
      t_z  : OPTIONAL actuated_direction;
      r_x  : OPTIONAL actuated_direction;
      r_y  : OPTIONAL actuated_direction;
      r_z  : OPTIONAL actuated_direction;
  END_ENTITY;

  ENTITY add_element
    SUBTYPE OF ( change_element );
      current_design_object  : SET [1 : ?] OF change_management_object;
  END_ENTITY;

  ENTITY additive_laminate_text_component
    SUBTYPE OF ( generic_laminate_text_component );
      stratum_feature_implementation  : SET [1 : ?] OF stratum_feature;
    WHERE
      wr1: ( SIZEOF( QUERY ( sf <* stratum_feature_implementation | ( sf.resident_stratum :<>: stratum_feature_implementation[1].
               resident_stratum ) ) ) = 0 );
  END_ENTITY;

  ENTITY address;
      name                     : OPTIONAL STRING;
      street_number            : OPTIONAL STRING;
      street                   : OPTIONAL STRING;
      postal_box               : OPTIONAL STRING;
      town                     : OPTIONAL STRING;
      region                   : OPTIONAL STRING;
      postal_code              : OPTIONAL STRING;
      country                  : OPTIONAL STRING;
      internal_location        : OPTIONAL STRING;
      facsimile_number         : OPTIONAL STRING;
      telephone_number         : OPTIONAL STRING;
      electronic_mail_address  : OPTIONAL STRING;
      telex_number             : OPTIONAL STRING;
      url                      : OPTIONAL STRING;
    WHERE
      wr1: ( EXISTS( street_number ) OR EXISTS( street ) OR EXISTS( postal_box ) OR EXISTS( town ) OR EXISTS( region ) OR 
               EXISTS( postal_code ) OR EXISTS( country ) OR EXISTS( internal_location ) OR EXISTS( facsimile_number ) OR EXISTS( 
               telephone_number ) OR EXISTS( electronic_mail_address ) OR EXISTS( telex_number ) );
  END_ENTITY;

  ENTITY address_assignment
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_address_assignment, 
            externally_defined_address_assignment ) );
      address_type                  : OPTIONAL STRING;
      assigned_address              : address;
      located_person_organizations  : SET [1 : ?] OF organization_or_person_in_organization_select;
  END_ENTITY;

  ENTITY adjacent_stratum_surface_embedded_physical_component_surface_definition;
      name             : STRING;
      precedent_item   : component_feature_or_stratum_surface;
      subsequent_item  : component_feature_or_stratum_surface;
    UNIQUE
      ur1 : name;
      ur2 : precedent_item, subsequent_item;
    WHERE
      wr1: ( precedent_item <> subsequent_item );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF( 
               precedent_item ) ) ) OR ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'BARE_DIE_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE_BODY_SURFACE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_SECONDARY_SURFACE' ] * 
               TYPEOF( precedent_item.definition ) ) = 1 ) );
      wr3: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF( 
               subsequent_item ) ) ) OR ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'BARE_DIE_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE_BODY_SURFACE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_PRIMARY_SURFACE' ] * 
               TYPEOF( subsequent_item.definition ) ) = 1 ) );
      wr4: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_SURFACE' IN TYPEOF( 
               precedent_item ) ) ) OR ( precedent_item.name = stratum_surface_designation.secondary_surface ) );
      wr5: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_SURFACE' IN TYPEOF( 
               subsequent_item ) ) ) OR ( precedent_item.name = stratum_surface_designation.primary_surface ) );
  END_ENTITY;

  ENTITY adjacent_stratum_surface_embedded_sequential_laminate_surface_definition
    SUBTYPE OF ( adjacent_stratum_surface_embedded_physical_component_surface_definition );
    WHERE
      wr1: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF( 
               precedent_item ) ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTERCONNECT_MODULE_SECONDARY_SURFACE'  IN TYPEOF( precedent_item.definition ) ) );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF( 
               subsequent_item ) ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTERCONNECT_MODULE_PRIMARY_SURFACE'  IN TYPEOF( subsequent_item.definition ) ) );
  END_ENTITY;

  ENTITY advanced_brep_shape_representation
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : ?] OF advanced_brep_shape_representation_item;
    WHERE
      wr1: ( SIZEOF( QUERY ( msb <* QUERY ( it <* SELF.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP'  IN TYPEOF( it ) ) ) | ( 
               NOT ( SIZEOF( QUERY ( csh <* collect_shells( msb ) | ( NOT ( SIZEOF( QUERY ( fcs <* csh\connected_face_set.
               connected_faces | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ADVANCED_FACE' IN 
               TYPEOF( fcs ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY advanced_face
    SUBTYPE OF ( face_surface );
  END_ENTITY;

  ENTITY advanced_open_shell
    SUBTYPE OF ( detailed_topological_model_element );
      shell_faces  : SET [1 : ?] OF advanced_face;
  END_ENTITY;

  ENTITY affected_items_assignment;
      assigned_work_request  : work_request;
      items                  : SET [1 : ?] OF affected_item_select;
  END_ENTITY;

  ENTITY affected_plane_tolerance_zone
    SUBTYPE OF ( directed_or_oriented_tolerance_zone );
      affected_plane  : axis_placement_shape_element;
  END_ENTITY;

  ENTITY aggregate_connectivity_requirement;
      connectivity_requirement  : SET [1 : ?] OF functional_unit_network_node_definition;
  END_ENTITY;

  ENTITY alias_identification
    SUBTYPE OF ( identification_assignment );
      SELF\identification_assignment.items  : SET [1 : ?] OF alias_identification_item;
    DERIVE
      SELF\identification_assignment.role  : STRING := 'alias';
  END_ENTITY;

  ENTITY all_around_shape_element
    SUBTYPE OF ( continuous_shape_element );
  END_ENTITY;

  ENTITY all_around_shape_element_along_collection_plane
    SUBTYPE OF ( all_around_shape_element );
      base         : datum_system;
      orientation  : collection_plane_orientation;
  END_ENTITY;

  ENTITY allocated_passage_minimum_annular_ring
    SUBTYPE OF ( characterizable_object );
      supported_external_minimum_annular_ring : OPTIONAL length_data_element;
      supported_internal_minimum_annular_ring : OPTIONAL length_data_element;
      unsupported_minimum_annular_ring       : OPTIONAL length_data_element;
      minimum_fabrication_allowance          : OPTIONAL length_data_element;
      associated_passage_allocation          : SET [1 : ?] OF passage_technology_allocation_to_stack_model;
      associated_stratum_technology_occurrence : OPTIONAL stratum_technology_occurrence;
    DERIVE
      associated_model  : stratum_stack_model := associated_passage_allocation[1]\stratum_sub_stack.associated_stackup;
    WHERE
      wr1: ( EXISTS( supported_external_minimum_annular_ring ) OR EXISTS( supported_internal_minimum_annular_ring ) OR EXISTS( 
               unsupported_minimum_annular_ring ) OR EXISTS( minimum_fabrication_allowance ) );
      wr2: ( ( NOT EXISTS( associated_stratum_technology_occurrence ) ) OR ( associated_stratum_technology_occurrence IN 
               associated_model\stratum_stack_model.composing_occurrence ) );
      wr3: ( ( NOT EXISTS( supported_external_minimum_annular_ring ) ) OR ( SIZEOF( QUERY ( ptatsm <* 
               associated_passage_allocation | ( NOT ptatsm\passage_technology_allocation_to_stack_model.allocated_technology\
               passage_technology.plated_passage ) ) ) = 0 ) );
      wr4: ( ( NOT EXISTS( supported_internal_minimum_annular_ring ) ) OR ( SIZEOF( QUERY ( ptatsm <* 
               associated_passage_allocation | ( NOT ptatsm\passage_technology_allocation_to_stack_model.allocated_technology\
               passage_technology.plated_passage ) ) ) = 0 ) );
      wr5: ( NOT ( EXISTS( unsupported_minimum_annular_ring ) AND ( SIZEOF( QUERY ( ptatsm <* associated_passage_allocation | ( 
               NOT ptatsm\passage_technology_allocation_to_stack_model.allocated_technology\passage_technology.plated_passage ) ) ) 
               = 0 ) ) );
      wr6: ( SIZEOF( QUERY ( ptatsm <* associated_passage_allocation | ( NOT ( associated_model = ptatsm\stratum_sub_stack.
               associated_stackup ) ) ) ) = 0 );
      wr7: ( NOT ( EXISTS( associated_stratum_technology_occurrence ) AND EXISTS( supported_internal_minimum_annular_ring ) ) );
  END_ENTITY;

  ENTITY altered_package
    SUBTYPE OF ( package );
      of_geometric_status           : OPTIONAL predefined_geometric_status;
      modified_terminal_separation  : OPTIONAL length_data_element;
      package_to_be_altered         : package;
    INVERSE
      of_external_geometric_status : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( EXISTS( of_geometric_status ) XOR ( SIZEOF( of_external_geometric_status ) = 1 ) );
      wr2: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY altered_package_terminal
    ABSTRACT SUPERTYPE OF ( 
        shape_formed_terminal 
        ANDOR
        surface_prepped_terminal 
        ANDOR
        length_trimmed_terminal )
    SUBTYPE OF ( package_terminal );
      terminal_to_be_altered               : package_terminal;
      SELF\shape_element.containing_shape  : altered_package;
  END_ENTITY;

  ENTITY altered_packaged_part
    SUBTYPE OF ( packaged_part );
      base_packaged_part  : packaged_part;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr2: ( ( ( SIZEOF( SELF\packaged_part.used_package ) = 1 ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ALTERED_PACKAGE'  IN TYPEOF( used_package[1] ) ) ) 
               OR ( EXISTS( SELF\packaged_part.implemented_function ) AND ( SELF\packaged_part.implemented_function :<>: 
               base_packaged_part\packaged_part.implemented_function ) ) );
  END_ENTITY;

  ENTITY alternate_part_relationship
    SUBTYPE OF ( alternate_product_relationship );
      SELF\alternate_product_relationship.alternate_product : part;
      SELF\alternate_product_relationship.base_product : part;
  END_ENTITY;

  ENTITY alternate_product_relationship;
      name               : OPTIONAL STRING;
      description        : OPTIONAL STRING;
      alternate_product  : product;
      base_product       : product;
      criteria           : OPTIONAL STRING;
    UNIQUE
      ur1 : alternate_product, base_product;
    WHERE
      wr1: ( alternate_product :<>: base_product );
      wr2: ( EXISTS( criteria ) OR ( TYPEOF( SELF\alternate_product_relationship ) <> TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY alternative_solution;
      id            : STRING;
      version_id    : OPTIONAL STRING;
      base_element  : complex_product_select;
  END_ENTITY;

  ENTITY amount_of_substance_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF( SELF\
               value_with_unit.unit ) );
  END_ENTITY;

  ENTITY amount_of_substance_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY analog_analytical_model_port
    SUBTYPE OF ( analytical_model_port );
    INVERSE
      signal_variable : SET [1 : ?] OF port_variable FOR associated_port;
  END_ENTITY;

  ENTITY analytical_model
    SUBTYPE OF ( information_product );
    UNIQUE
      ur1 : SELF\product.id;
  END_ENTITY;

  ENTITY analytical_model_application
    SUBTYPE OF ( representation );
      model_parameter_assignment  : OPTIONAL SET [1 : ?] OF parameter_assignment;
      model_representation        : analytical_model_definition;
    UNIQUE
      ur1 : SELF\representation.name;
  END_ENTITY;

  ENTITY analytical_model_definition
    SUBTYPE OF ( information_definition );
      SELF\product_view_definition.defined_version : analytical_model_version;
      source_code                            : SET [1 : 1] OF digital_file;
    DERIVE
      representation_language  : SET [1 : 1] OF document_definition := get_document_definition( SELF, 'representation language', 
                                   'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LANGUAGE_REFERENCE_MANUAL'  );
    INVERSE
      access_mechanism : SET [1 : ?] OF analytical_model_port FOR accessed_analytical_model;
      parameter   : SET [1 : ?] OF analytical_model_parameter FOR described_element;
      reference_document : document_assignment FOR is_assigned_to;
  END_ENTITY;

  ENTITY analytical_model_make_from_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : analytical_model_definition;
      SELF\view_definition_relationship.related_view : analytical_model_definition;
    DERIVE
      resultant_model  : analytical_model_definition := SELF\view_definition_relationship.related_view;
      reusable_model   : analytical_model_definition := SELF\view_definition_relationship.relating_view;
    WHERE
      wr1: ( reusable_model :<>: resultant_model );
  END_ENTITY;

  ENTITY analytical_model_parameter
    SUBTYPE OF ( applied_independent_property );
      SELF\assigned_property.described_element : analytical_model_definition;
    DERIVE
      accessed_analytical_model  : analytical_model_definition := SELF\assigned_property.described_element;
    UNIQUE
      ur1 : SELF\assigned_property.id, accessed_analytical_model;
  END_ENTITY;

  ENTITY analytical_model_port
    SUPERTYPE OF ( 
        analytical_model_vector_port 
        ANDOR
        ONEOF ( 
            analog_analytical_model_port, 
            digital_analytical_model_port ) );
      accessed_analytical_model  : analytical_model_definition;
      port_name                  : STRING;
    UNIQUE
      ur1 : port_name, accessed_analytical_model;
  END_ENTITY;

  ENTITY analytical_model_port_assignment;
      assigned_analytical_model_port         : analytical_model_port;
      assigned_item                          : analytical_model_port_assignment_select;
      associated_analytical_model_application : analytical_model_application;
    UNIQUE
      ur1 : assigned_analytical_model_port, assigned_item, associated_analytical_model_application;
    WHERE
      wr1: ( assigned_analytical_model_port.accessed_analytical_model = associated_analytical_model_application.
               model_representation );
  END_ENTITY;

  ENTITY analytical_model_port_make_from_relationship;
      associated_make_from  : analytical_model_make_from_relationship;
      reusable_feature      : analytical_model_port;
      resultant_feature     : analytical_model_port;
    UNIQUE
      ur1 : reusable_feature, resultant_feature;
    WHERE
      wr1: ( reusable_feature :<>: resultant_feature );
      wr2: ( reusable_feature.accessed_analytical_model :<>: resultant_feature.accessed_analytical_model );
  END_ENTITY;

  ENTITY analytical_model_scalar_port
    SUBTYPE OF ( analytical_model_vector_port );
    WHERE
      wr1: ( SIZEOF( SELF\analytical_model_vector_port.element_port ) = 1 );
      wr2: ( SELF = SELF\analytical_model_vector_port.element_port[1] );
  END_ENTITY;

  ENTITY analytical_model_vector_port
    SUPERTYPE OF ( 
        analytical_model_scalar_port )
    SUBTYPE OF ( analytical_model_port );
      element_port  : LIST [1 : ?] OF analytical_model_scalar_port;
    DERIVE
      size  : INTEGER := SIZEOF( element_port );
  END_ENTITY;

  ENTITY analytical_model_version
    SUBTYPE OF ( information_version );
      SELF\product_version.of_product  : analytical_model;
  END_ENTITY;

  ENTITY and_expression
    SUBTYPE OF ( multiple_arity_boolean_expression );
  END_ENTITY;

  ENTITY angle_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_UNIT' IN TYPEOF( SELF\
               value_with_unit.unit ) );
  END_ENTITY;

  ENTITY angle_geometric_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF linear_geometry_element;
      SELF\explicit_constraint.reference_elements : SET [0 : 1] OF linear_geometry_element;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 1 ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIMENSIONED_ANGLE_CONSTRAINT'  IN TYPEOF( SELF ) ) 
               AND ( SIZEOF( SELF\explicit_constraint.constrained_elements ) = 2 ) ) );
  END_ENTITY;

  ENTITY angle_taper;
      angle  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY angular_location
    SUBTYPE OF ( dimensional_location );
      angle_selection  : angle_relator;
      orientation      : OPTIONAL axis_placement;
  END_ENTITY;

  ENTITY angular_size
    SUBTYPE OF ( dimensional_size );
      full             : BOOLEAN;
      angle_selection  : angle_relator;
  END_ENTITY;

  ENTITY angularity_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : datum_system;
  END_ENTITY;

  ENTITY anisotropic_material
    SUBTYPE OF ( stock_material );
  END_ENTITY;

  ENTITY annotation_curve
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            leader, 
            projection_curve, 
            dimension_curve ) 
        ANDOR
        generic_annotation_curve )
    SUBTYPE OF ( annotation_element );
      annotation_curve_type        : OPTIONAL STRING;
      SELF\styled_element.element  : curve;
  END_ENTITY;

  ENTITY annotation_element
    SUPERTYPE OF ( 
        ONEOF ( 
            annotation_text_occurrence, 
            annotation_curve ) 
        ANDOR
        ONEOF ( 
            annotation_subfigure, 
            annotation_symbol, 
            fill_area ) )
    SUBTYPE OF ( detailed_geometric_model_element, styled_element );
  END_ENTITY;

  ENTITY annotation_fill_area
    SUBTYPE OF ( detailed_geometric_model_element );
      boundaries  : SET [1 : ?] OF curve;
  END_ENTITY;

  ENTITY annotation_occurrence_associativity;
      relating_element  : annotation_element;
      related_element   : annotation_occurrence_associativity_item;
  END_ENTITY;

  ENTITY annotation_plane
    SUBTYPE OF ( annotation_element );
      elements                     : OPTIONAL SET [1 : ?] OF annotation_plane_element;
      SELF\styled_element.element  : plane_or_planar_box;
  END_ENTITY;

  ENTITY annotation_subfigure
    SUBTYPE OF ( annotation_element );
  END_ENTITY;

  ENTITY annotation_symbol
    SUBTYPE OF ( annotation_element );
      symbol_definition  : symbol_definition_select;
  END_ENTITY;

  ENTITY annotation_text
    SUBTYPE OF ( detailed_geometric_model_element );
      replicated_model  : text_string_representation;
      source            : axis_placement;
      target            : axis_placement;
  END_ENTITY;

  ENTITY annotation_text_character
    SUBTYPE OF ( detailed_geometric_model_element );
      replicated_model  : character_glyph_symbol;
      source            : axis_placement;
      target            : axis_placement;
  END_ENTITY;

  ENTITY annotation_text_occurrence
    SUBTYPE OF ( annotation_element );
      SELF\styled_element.element  : text_or_composite_text;
    DERIVE
      text  : text_or_composite_text := SELF\styled_element.element;
  END_ENTITY;

  ENTITY apex
    SUBTYPE OF ( derived_shape_element );
  END_ENTITY;

  ENTITY appearance_assignment;
      appearance_components  : SET [1 : ?] OF appearance_select;
  END_ENTITY;

  ENTITY applied_activity_assignment;
      assigned_activity  : activity;
      items              : SET [1 : ?] OF activity_item;
      role               : STRING;
  END_ENTITY;

  ENTITY applied_activity_method_assignment;
      assigned_activity_method  : activity_method;
      items                     : SET [1 : ?] OF activity_method_item;
      role                      : STRING;
  END_ENTITY;

  ENTITY applied_independent_activity_property
    SUBTYPE OF ( activity_property );
      base_element_property  : independent_property;
    DERIVE
      SELF\activity_property.name  : STRING := base_element_property.property_type;
  END_ENTITY;

  ENTITY applied_independent_material_property
    SUBTYPE OF ( material_property, applied_independent_property );
      SELF\applied_independent_property.base_independent_property : general_material_property;
  END_ENTITY;

  ENTITY applied_independent_property
    SUBTYPE OF ( assigned_property );
      base_independent_property  : independent_property;
    DERIVE
      SELF\assigned_property.name  : STRING := base_independent_property.property_type;
  END_ENTITY;

  ENTITY applied_independent_test_result_property
    SUBTYPE OF ( applied_independent_property );
      SELF\assigned_property.described_element : product_as_individual_test_result;
  END_ENTITY;

  ENTITY applied_information_usage_right;
      item           : SET [1 : ?] OF information_usage_right_item;
      right_applied  : information_usage_right;
  END_ENTITY;

  ENTITY applied_process_operation_occurrence;
      items   : SET [1 : ?] OF applied_independent_test_result_property;
      source  : process_operation_occurrence;
  END_ENTITY;

  ENTITY applied_test_activity
    SUBTYPE OF ( applied_activity_assignment );
      SELF\applied_activity_assignment.items : SET [1 : ?] OF applied_independent_test_result_property;
    DERIVE
      SELF\applied_activity_assignment.role  : STRING := 'test activity';
  END_ENTITY;

  ENTITY approval
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_approval, 
            externally_defined_approval ) );
      status        : approval_status;
      purpose       : STRING;
      planned_date  : OPTIONAL date_or_date_time_select;
      actual_date   : OPTIONAL date_or_date_time_select;
  END_ENTITY;

  ENTITY approval_assignment;
      assigned_approval  : approval;
      items              : SET [1 : ?] OF approval_item;
      role               : OPTIONAL STRING;
  END_ENTITY;

  ENTITY approval_relationship;
      relation_type      : STRING;
      description        : OPTIONAL STRING;
      relating_approval  : approval;
      related_approval   : approval;
  END_ENTITY;

  ENTITY approval_status
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_approval_status, 
            externally_defined_approval_status ) );
      status_name  : STRING;
  END_ENTITY;

  ENTITY approving_person_organization;
      person_organization  : organization_or_person_in_organization_select;
      approval_date        : OPTIONAL date_or_date_time_select;
      authorized_approval  : approval;
      role                 : OPTIONAL STRING;
  END_ENTITY;

  ENTITY area_component
    SUPERTYPE OF ( 
        connected_area_component )
    SUBTYPE OF ( stratum_feature_template_component );
      explicitly_created                     : BOOLEAN;
      is_base                                : BOOLEAN;
      replaced_component                     : OPTIONAL area_component;
      SELF\definition_based_product_occurrence.derived_from : area_component_templates;
    DERIVE
      is_final  : LOGICAL := SIZEOF( replaced_by ) = 0;
    INVERSE
      replaced_by : SET [0 : ?] OF area_component FOR replaced_component;
    WHERE
      wr1: ( NOT ( ( is_final AND pu2dv_has_shape( SELF ) ) XOR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE'  IN TYPEOF( 
               implementation_or_resident_stratum ) ) ) );
      wr2: ( is_final OR ( SIZEOF( QUERY ( rp <* replaced_by | ( SELF\stratum_feature_template_component.resident_stratum :<>: 
               get_resident_stratum( rp ) ) ) ) = 0 ) );
      wr3: ( NOT ( SELF IN replaced_by ) );
      wr4: ( NOT ( replaced_component IN replaced_by ) );
      wr5: ( is_final XOR ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MATERIAL_REMOVAL_LAMINATE_COMPONENT.DESIGN_INTENT'  ) ) > 0 ) );
      wr6: ( ( NOT EXISTS( replaced_component ) ) OR ( NOT ( SIZEOF( replaced_by ) > 0 ) ) OR ( SIZEOF( QUERY ( rb <* replaced_by
               | acyclic_area_component( SELF, [rb], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'AREA_COMPONENT'  ) ) ) = SIZEOF( replaced_by ) ) );
      wr7: ( pu2dv_has_shape( SELF ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM' IN 
               TYPEOF( implementation_or_resident_stratum ) ) );
      wr8: ( ( NOT ( SIZEOF( replaced_by ) > 0 ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM'  IN TYPEOF( implementation_or_resident_stratum ) ) );
      wr9: ( ( NOT is_base ) OR VALUE_IN( pu2dv_typeof( SELF ), 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL'  ) );
  END_ENTITY;

  ENTITY area_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY area_qualified_layout_spacing_requirement
    SUBTYPE OF ( layout_spacing_requirement );
      area_context  : SET [1 : ?] OF layout_spacing_contextual_area;
  END_ENTITY;

  ENTITY area_unit
    SUBTYPE OF ( derived_unit );
  END_ENTITY;

  ENTITY area_with_outer_boundary
    SUBTYPE OF ( primitive_2d );
  END_ENTITY;

  ENTITY array_placement_group
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            linear_array_placement_group_component, 
            rectangular_array_placement_group_component ) 
        ANDOR
        ONEOF ( 
            laminate_text_string_component, 
            linear_array_placement_group_component, 
            rectangular_array_placement_group_component ) )
    SUBTYPE OF ( assembly_group_component );
  END_ENTITY;

  ENTITY asin_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY assembled_part_association
    SUBTYPE OF ( assembly_component_relationship );
      SELF\product_occurrence_definition_relationship.relating_view : assembly_definition;
  END_ENTITY;

  ENTITY assembled_with_bonding
    SUBTYPE OF ( assembly_joint );
      default_bond_definition  : assembly_bond_definition;
    WHERE
      wr1: ( SELF\assembly_joint.assembly_feature_1.definition :=: default_bond_definition.bonded_feature_1 );
      wr2: ( SELF\assembly_joint.assembly_feature_2.definition :=: default_bond_definition.bonded_feature_2 );
  END_ENTITY;

  ENTITY assembled_with_fasteners
    SUBTYPE OF ( assembly_joint );
  END_ENTITY;

  ENTITY assembly_alternate_product
    SUBTYPE OF ( alternate_product_relationship );
      basis_context  : part_design_view;
    WHERE
      wr1: ( NOT EXISTS( SELF\alternate_product_relationship.criteria ) );
  END_ENTITY;

  ENTITY assembly_bond_definition;
      name                   : STRING;
      associated_definition  : product_view_definition_reference_with_local_representation;
      bonded_feature_1       : bond_feature;
      bonded_feature_2       : bond_feature;
    INVERSE
      default_shape : SET [0 : 1] OF default_assembly_bond_shape_model FOR shape_characterized_definition;
      bond_category : external_source_identification FOR item;
      bond_material : material_identification FOR items;
    UNIQUE
      ur1 : name;
      ur2 : associated_definition;
    WHERE
      wr1: ( bonded_feature_1 <> bonded_feature_2 );
      wr2: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( bond_material ) );
      wr3: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_FEATURE' IN TYPEOF( 
               bonded_feature_1 ) ) XOR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_FEATURE' IN 
               TYPEOF( bonded_feature_2 ) ) ) );
      wr4: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONNECTION_ZONE_IN_USAGE_VIEW' IN 
               TYPEOF( bonded_feature_1 ) ) XOR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTION_ZONE_IN_USAGE_VIEW'  IN TYPEOF( bonded_feature_2 ) ) ) );
      wr5: ( NOT ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONNECTION_ZONE_IN_LAYOUT_TEMPLATE' IN
               TYPEOF( bonded_feature_1 ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE'  IN TYPEOF( bonded_feature_1 ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FEATURE_DEFINITION_WITH_CONNECTION_AREA'  IN 
               TYPEOF( bonded_feature_2 ) ) ) XOR ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTION_ZONE_IN_LAYOUT_TEMPLATE'  IN TYPEOF( bonded_feature_2 ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'DEFAULT_ATTACHMENT_SIZE_BASED_LAND_PHYSICAL_TEMPLATE'  IN TYPEOF( bonded_feature_1 ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FEATURE_DEFINITION_WITH_CONNECTION_AREA'  IN 
               TYPEOF( bonded_feature_2 ) ) ) ) );
  END_ENTITY;

  ENTITY assembly_component
    SUPERTYPE OF ( 
        ONEOF ( 
            physical_component, 
            laminate_component ) 
        ANDOR
        ONEOF ( 
            physical_component, 
            printed_component, 
            laminate_component ) )
    SUBTYPE OF ( definition_based_product_occurrence, part_occurrence_shape );
    DERIVE
      SELF\item_shape.described_element  : assembly_component := SELF;
      assemblies                         : SET OF product_view_definition := ac_get_assemblies( SELF );
      groups                             : SET OF assembly_group_component := ac_get_groups( SELF );
      versions                           : SET OF product_version := ac_get_versions( assemblies );
      product                            : SET OF product := ac_get_products( versions );
    INVERSE
      SELF\product_occurrence.occurrence_contexts : SET [1 : ?] OF assembly_component_relationship FOR related_view;
    WHERE
      wr1: ( ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_OCCURRENCE' IN TYPEOF( SELF ) ) 
               XOR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_DEFINITION' IN TYPEOF( 
               derived_from ) ) ) ) OR ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PADSTACK_OCCURRENCE'  IN TYPEOF( SELF ) ) XOR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PADSTACK_DEFINITION'  IN TYPEOF( SELF\
               definition_based_product_occurrence.derived_from ) ) ) ) );
      wr2: ( SELF\product_view_definition.defined_version :=: SELF\definition_based_product_occurrence.derived_from.
               defined_version );
      wr3: ( SIZEOF( assemblies ) = SIZEOF( versions ) );
      wr4: ( SIZEOF( product ) = 1 );
      wr5: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP'  IN TYPEOF( SELF\assembly_component.occurrence_contexts[
               1] ) ) OR ( SIZEOF( groups ) = 0 ) OR ( ac_get_group_assemblies( groups ) = assemblies ) );
  END_ENTITY;

  ENTITY assembly_component_2d_shape_model
    SUBTYPE OF ( planar_projected_shape_model );
      shape_characterized_component  : SET [1 : ?] OF assembly_component;
    DERIVE
      equivalent_reference_shape_model  : SET [0 : 1] OF geometric_model_relationship := bag_to_set( QUERY ( gmr <* USEDIN( SELF, 
                                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                            + 'GEOMETRIC_MODEL_RELATIONSHIP.REP_2'  ) | ( gmr\representation_relationship.
                                            relation_type = 'equivalent reference shape model' ) ) );
    WHERE
      wr1: ( SIZEOF( equivalent_reference_shape_model ) < 2 );
  END_ENTITY;

  ENTITY assembly_component_3d_shape_model
    SUBTYPE OF ( geometric_model );
      shape_characterized_component  : SET [1 : ?] OF assembly_component;
    DERIVE
      equivalent_reference_shape_model  : SET [0 : 1] OF geometric_model_relationship := bag_to_set( QUERY ( gmr <* USEDIN( SELF, 
                                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                            + 'GEOMETRIC_MODEL_RELATIONSHIP.REP_2'  ) | ( gmr\representation_relationship.
                                            relation_type = 'equivalent reference shape model' ) ) );
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.name ) );
      wr2: ( SIZEOF( equivalent_reference_shape_model ) < 2 );
  END_ENTITY;

  ENTITY assembly_component_non_planar_shape_model
    SUBTYPE OF ( manifold_subsurface_model );
      shape_characterized_component  : SET [1 : ?] OF assembly_component;
    DERIVE
      equivalent_reference_shape_model  : SET [0 : 1] OF geometric_model_relationship := bag_to_set( QUERY ( gmr <* USEDIN( SELF, 
                                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                            + 'GEOMETRIC_MODEL_RELATIONSHIP.REP_2'  ) | ( gmr\representation_relationship.
                                            relation_type = 'equivalent reference shape model' ) ) );
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.description ) );
      wr2: ( SIZEOF( equivalent_reference_shape_model ) < 2 );
  END_ENTITY;

  ENTITY assembly_component_placement_link;
      precedent_element   : assembly_component;
      subsequent_element  : assembly_component;
    INVERSE
      referenced_by : linear_array_placement_group_component FOR element;
    WHERE
      wr1: acyclic_assembly_component_placement_link( SELF, [subsequent_element], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_PLACEMENT_LINK'  );
  END_ENTITY;

  ENTITY assembly_component_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            multi_level_reference_designator, 
            next_assembly_usage, 
            promissory_usage, 
            component_upper_level_identification ) )
    SUBTYPE OF ( product_occurrence_definition_relationship );
      location_indicator  : OPTIONAL STRING;
      quantity            : OPTIONAL value_with_unit;
    WHERE
      wr1: ( ( NOT EXISTS( quantity ) ) OR ( ( NOT ( 'NUMBER' IN TYPEOF( quantity.value_component ) ) ) XOR ( quantity.
               value_component > 0 ) ) );
  END_ENTITY;

  ENTITY assembly_connection_zone_position_relationship;
      associating_design_view_shape          : geometric_model;
      associated_usage                       : connection_zone_in_design_view;
      associated_connection_zone_shape_definition : geometric_model;
      associated_usage_placement             : axis_placement;
      associating_design_view                : assembly_module_design_view;
  END_ENTITY;

  ENTITY assembly_definition
    SUBTYPE OF ( part_view_definition );
  END_ENTITY;

  ENTITY assembly_group_component
    SUBTYPE OF ( assembly_component, single_instance );
    INVERSE
      components : SET [1 : ?] OF next_assembly_usage FOR relating_view;
    WHERE
      wr1: ( SIZEOF( QUERY ( co <* components | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ASSEMBLY_COMPONENT'  IN TYPEOF( co\product_occurrence_definition_relationship.related_view ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY assembly_group_spacing_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      dependent_group                        : placement_group_requirement_definition;
      of_spacing_type                        : assembly_spacing_type;
      reference_group                        : placement_group_requirement_definition;
      SELF\predefined_requirement_view_definition.required_characteristic : length_tolerance_characteristic;
  END_ENTITY;

  ENTITY assembly_item_number;
      assembly_usage  : SET [1 : ?] OF assembly_component_relationship;
      item_number     : STRING;
    DERIVE
      assembly  : product_view_definition := assembly_usage[1].relating_view;
      part      : product := assembly_usage[1].related_view\definition_based_product_occurrence.derived_from\
                    product_view_definition.defined_version.of_product;
    UNIQUE
      ur1 : assembly, item_number;
    WHERE
      wr1: ( SIZEOF( QUERY ( au <* assembly_usage | ( NOT ( au.relating_view\definition_based_product_occurrence.derived_from\
               product_view_definition.defined_version.of_product = part ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( au <* assembly_usage | ( NOT ( au.relating_view = assembly ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY assembly_joint
    SUPERTYPE OF ( 
        assembled_with_fasteners 
        ANDOR
        assembled_with_bonding )
    SUBTYPE OF ( component_feature_joint );
      SELF\shape_element_relationship.relating : physical_component_feature;
      SELF\shape_element_relationship.related : physical_component_feature;
      SELF\shape_element.containing_shape    : assembly_shape;
    DERIVE
      assembly_feature_1   : physical_component_feature := SELF\component_feature_joint.feature_1;
      assembly_feature_2   : physical_component_feature := SELF\component_feature_joint.feature_2;
      associated_assembly  : assembly_shape := SELF\component_feature_joint.associated_definition;
    WHERE
      wr1: ( assembly_feature_1 :<>: assembly_feature_2 );
      wr2: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN TYPEOF( SELF ) ) 
               OR ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF( 
               assembly_feature_1 ) ) AND ( SIZEOF( QUERY ( ay <* assembly_feature_1\component_feature.associated_component\
               assembly_component.occurrence_contexts | ( ay\product_occurrence_definition_relationship.related_view <> 
               associated_assembly\item_shape.described_element ) ) ) = 0 ) ) );
      wr3: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLED_WITH_FASTENERS' IN TYPEOF( SELF ) ) 
               OR ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_FEATURE' IN TYPEOF( 
               assembly_feature_2 ) ) AND ( SIZEOF( QUERY ( ay <* assembly_feature_2\component_feature.associated_component\
               assembly_component.occurrence_contexts | ( ay\product_occurrence_definition_relationship.related_view <> 
               associated_assembly\item_shape.described_element ) ) ) = 0 ) ) );
  END_ENTITY;

  ENTITY assembly_module_component
    SUBTYPE OF ( physical_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : assembly_module_design_view;
    DERIVE
      usage_view  : assembly_module_usage_view := derived_from\part_design_view.usage_view;
    INVERSE
      access_mechanisms : SET [2 : ?] OF assembly_module_component_terminal FOR containing_shape;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr2: ( usage_view = access_mechanisms[1]\assembly_module_component_terminal.definition\assembly_module_terminal.
               containing_shape );
  END_ENTITY;

  ENTITY assembly_module_component_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\component_feature.definition    : assembly_module_terminal;
      SELF\shape_element.containing_shape  : assembly_module_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY assembly_module_design_view
    SUPERTYPE OF ( 
        ONEOF ( 
            layered_assembly_panel_design_view, 
            layered_assembly_module_design_view ) )
    SUBTYPE OF ( assembly_definition, part_design_view );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY assembly_module_interface_terminal
    SUBTYPE OF ( assembly_module_terminal );
  END_ENTITY;

  ENTITY assembly_module_macro_component
    SUBTYPE OF ( physical_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : assembly_module_design_view;
    INVERSE
      join_access_mechanisms : SET [1 : ?] OF assembly_module_macro_component_join_terminal FOR containing_shape;
    WHERE
      wr1: ( SIZEOF( QUERY ( ammcjt <* join_access_mechanisms | ( ammcjt\component_feature.definition\shape_element.
               containing_shape :<>: SELF\definition_based_product_occurrence.derived_from\part_design_view.usage_view ) ) ) = 0 );
      wr2: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY assembly_module_macro_component_join_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\component_feature.definition    : assembly_module_macro_terminal;
      SELF\shape_element.containing_shape  : assembly_module_macro_component;
  END_ENTITY;

  ENTITY assembly_module_macro_terminal
    SUBTYPE OF ( assembly_module_terminal );
    INVERSE
      defining_terminal : component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_MACRO_TERMINAL' IN TYPEOF( 
               defining_terminal\component_feature_to_physical_usage_view_assignment.assigned_design_object ) );
      wr2: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'COMPONENT_TERMINAL_TO_ASSEMBLY_MODULE_MACRO_TERMINAL_ASSIGNMENT'  ) IN TYPEOF( defining_terminal ) );
      wr3: ( ( NOT ( SIZEOF( USEDIN( SELF, '' ) ) > 1 ) ) OR ( SIZEOF( QUERY ( ct <* USEDIN( SELF, '' ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_MODULE_MACRO_COMPONENT_JOIN_TERMINAL'  
               IN TYPEOF( ct ) ) ) ) ) = 1 ) );
  END_ENTITY;

  ENTITY assembly_module_terminal
    SUPERTYPE OF ( 
        assembly_module_interface_terminal 
        ANDOR
        layered_assembly_module_terminal 
        ANDOR
        ONEOF ( 
            assembly_module_interface_terminal, 
            assembly_module_macro_terminal ) 
        ANDOR
        layered_assembly_module_terminal )
    SUBTYPE OF ( part_terminal );
      SELF\shape_element.containing_shape    : assembly_module_usage_view;
      reference_terminal                     : OPTIONAL packaged_part_interface_terminal;
      related_connector                      : OPTIONAL next_assembly_usage;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_usage_view;
    WHERE
      wr1: ( ( NOT EXISTS( related_connector ) ) OR ( containing_shape.described_element = related_connector\
               product_occurrence_definition_relationship.related_view ) );
      wr2: ( ( NOT EXISTS( related_connector ) ) OR EXISTS( related_connector.location_indicator ) );
      wr3: ( EXISTS( related_connector ) OR ( containing_shape.described_element = SELF\part_feature.associated_definition ) );
  END_ENTITY;

  ENTITY assembly_module_usage_view
    SUPERTYPE OF ( 
        layered_assembly_module_usage_view )
    SUBTYPE OF ( part_usage_view );
      implemented_function  : OPTIONAL functional_unit_usage_view;
    INVERSE
      access_mechanisms : SET [0 : ?] OF assembly_module_terminal FOR containing_shape;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY assembly_relationship_substitution;
      name                     : OPTIONAL STRING;
      description              : OPTIONAL STRING;
      base_relationship        : assembly_component_relationship;
      substitute_relationship  : assembly_component_relationship;
    UNIQUE
      ur1 : base_relationship, substitute_relationship;
    WHERE
      wr1: ( base_relationship.relating_view :=: substitute_relationship.relating_view );
      wr2: ( base_relationship :<>: substitute_relationship );
  END_ENTITY;

  ENTITY assembly_requirement_allocation
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_to : component_or_feature;
  END_ENTITY;

  ENTITY assembly_requirement_for_interconnect_relationship
    SUBTYPE OF ( part_definition_relationship );
      SELF\view_definition_relationship.relating_view : assembly_module_design_view;
      SELF\view_definition_relationship.related_view : layered_interconnect_module_design_view;
  END_ENTITY;

  ENTITY assembly_separation_requirement_allocation
    SUBTYPE OF ( assembly_requirement_allocation );
      disjoint_assignment  : SET [1 : ?] OF component_or_feature;
  END_ENTITY;

  ENTITY assembly_shape
    SUBTYPE OF ( part_shape );
      SELF\item_shape.described_element  : assembly_definition;
  END_ENTITY;

  ENTITY assembly_shield_allocation
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_to : physical_shield;
      SELF\requirement_assignment.assigned_requirement : predefined_requirement_view_definition;
    DERIVE
      assigned_requirement_property  : predefined_requirement_view_definition := SELF\requirement_assignment.assigned_requirement;
    WHERE
      wr1: ( assigned_requirement_property\product_view_definition.initial_context\view_definition_context.application_domain = 
               'electrical'  );
  END_ENTITY;

  ENTITY assembly_spacing_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      reference_design_object_category       : assembly_product_design_object_category_or_group;
      dependent_design_object_category       : assembly_product_design_object_category_or_group;
      SELF\predefined_requirement_view_definition.required_characteristic : length_tolerance_characteristic;
      of_spacing_type                        : assembly_spacing_type;
  END_ENTITY;

  ENTITY assembly_to_part_connectivity_structure_allocation;
      name              : STRING;
      assembly_element  : physical_connectivity_element;
      part_element      : part_connected_terminals_element;
      assembly_context  : physical_connectivity_definition;
    UNIQUE
      ur1 : name, assembly_context;
  END_ENTITY;

  ENTITY assigned_document_property
    SUBTYPE OF ( assigned_property );
      SELF\assigned_property.described_element : document_property_item;
    DERIVE
      SELF\assigned_property.name  : STRING := 'document property';
    WHERE
      wr1: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENT_DEFINITION', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FILE' ] * TYPEOF( SELF\assigned_property.
               described_element ) ) = 1 );
  END_ENTITY;

  ENTITY assigned_property
    SUPERTYPE OF ( 
        ONEOF ( 
            product_definition_kinematics, 
            product_definition_relationship_kinematics ) );
      id                 : OPTIONAL STRING;
      name               : STRING;
      description        : OPTIONAL STRING;
      described_element  : property_assignment_select;
  END_ENTITY;

  ENTITY assigned_shape_property
    SUBTYPE OF ( assigned_property );
      SELF\assigned_property.described_element : assigned_shape_property_select;
  END_ENTITY;

  ENTITY associated_contextual_item_shape
    SUBTYPE OF ( associated_item_shape, contextual_item_shape );
  END_ENTITY;

  ENTITY associated_dimension_text
    SUBTYPE OF ( dimension_text );
      is_displaying  : geometric_dimension;
  END_ENTITY;

  ENTITY associated_item_shape
    SUBTYPE OF ( item_shape );
    DERIVE
      associated_model  : shape_model := association\property_definition_representation.used_representation;
    INVERSE
      association : shape_description_association FOR definition;
  END_ENTITY;

  ENTITY associated_shape_element
    SUPERTYPE OF ( 
        ONEOF ( 
            axis_placement_shape_element, 
            plane_shape_element, 
            point_shape_element ) )
    SUBTYPE OF ( shape_element );
      SELF\shape_element.containing_shape  : associated_item_shape;
    DERIVE
      associated_item  : geometric_model_item := association\geometric_item_specific_usage.identified_item;
    INVERSE
      association : geometric_item_specific_usage FOR definition;
    WHERE
      wr1: EXISTS( associated_item );
      wr2: ( association\geometric_item_specific_usage.used_model\geometric_model.context_of_items = SELF\shape_element.
               containing_shape\associated_item_shape.association\property_definition_representation.used_representation\
               geometric_model.context_of_items );
  END_ENTITY;

  ENTITY atan_function
    SUBTYPE OF ( binary_function_call );
  END_ENTITY;

  ENTITY atomic_formula
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            rule_condition, 
            ground_fact ) );
      predicate_symbol  : predicate_symbol;
      terms             : LIST OF term_select;
  END_ENTITY;

  ENTITY attribute_assertion
    SUBTYPE OF ( fact_type );
      entity_type  : STRING;
      attribute    : STRING;
  END_ENTITY;

  ENTITY attribute_classification;
      allowed_value      : class;
      attribute_name     : STRING;
      classified_entity  : SET [1 : ?] OF classified_attribute_select;
  END_ENTITY;

  ENTITY attribute_translation_assignment;
      considered_instance   : string_select;
      considered_attribute  : STRING;
      translation_text      : STRING;
      translation_language  : language;
    UNIQUE
      ur1 : considered_instance, considered_attribute, translation_language;
  END_ENTITY;

  ENTITY auxiliary_geometric_representation_item
    SUBTYPE OF ( detailed_geometric_model_element, variational_representation_item );
  END_ENTITY;

  ENTITY axis1_placement
    SUBTYPE OF ( detailed_geometric_model_element );
      axis      : direction;
      position  : cartesian_point;
  END_ENTITY;

  ENTITY axis_placement
    SUPERTYPE OF ( 
        ONEOF ( 
            axis_placement_2d, 
            axis_placement_3d ) )
    SUBTYPE OF ( detailed_geometric_model_element );
      location       : cartesian_point;
      axis           : OPTIONAL direction;
      ref_direction  : OPTIONAL direction;
    DERIVE
      dim  : INTEGER := SIZEOF( location\cartesian_point.coordinates );
    WHERE
      wr1: ( dim > 1 );
      wr2: ( dim = SIZEOF( axis\direction.direction_ratios ) );
      wr3: ( dim = SIZEOF( ref_direction\direction.direction_ratios ) );
  END_ENTITY;

  ENTITY axis_placement_2d
    SUBTYPE OF ( axis_placement );
    WHERE
      wr1: ( NOT EXISTS( axis ) );
      wr2: ( SELF\axis_placement.dim = 2 );
  END_ENTITY;

  ENTITY axis_placement_2d_3d_mapping;
      transform_item_1  : axis_placement_2d;
      transform_item_2  : axis_placement_3d;
  END_ENTITY;

  ENTITY axis_placement_3d
    SUPERTYPE OF ( 
        ONEOF ( 
            tool_attachment_point_frame, 
            tool_centre_point_frame ) )
    SUBTYPE OF ( axis_placement );
    WHERE
      wr1: ( SELF\axis_placement.dim = 3 );
  END_ENTITY;

  ENTITY axis_placement_mapping;
      source  : axis_placement;
      target  : axis_placement;
    WHERE
      wr1: ( source\axis_placement.dim = target\axis_placement.dim );
  END_ENTITY;

  ENTITY axis_placement_shape_element
    SUBTYPE OF ( associated_shape_element );
    DERIVE
      SELF\associated_shape_element.associated_item : axis_placement := SELF\associated_shape_element.association\
                                                 geometric_item_specific_usage.identified_item;
  END_ENTITY;

  ENTITY b_spline_curve
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            curve_with_explicit_knots, 
            curve_with_implicit_knots ) 
        ANDOR
        rational_b_spline_curve )
    SUBTYPE OF ( bounded_curve );
      degree          : INTEGER;
      control_points  : LIST [2 : ?] OF cartesian_point;
      closed          : LOGICAL;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE_WITH_EXPLICIT_KNOTS' IN TYPEOF( SELF ) ) 
               OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE_WITH_IMPLICIT_KNOTS' IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY b_spline_curve_knot_locator;
      basis_curve  : b_spline_curve;
      knot_index   : INTEGER;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_curve ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY b_spline_curve_segment;
      basis_curve       : b_spline_curve;
      start_knot_index  : INTEGER;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_curve ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY b_spline_surface
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            surface_with_explicit_knots, 
            surface_with_implicit_knots ) 
        ANDOR
        rational_b_spline_surface )
    SUBTYPE OF ( bounded_surface );
      u_degree        : INTEGER;
      v_degree        : INTEGER;
      control_points  : LIST [2 : ?] OF LIST [2 : ?] OF cartesian_point;
      u_closed        : LOGICAL;
      v_closed        : LOGICAL;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE_WITH_EXPLICIT_KNOTS' IN TYPEOF( SELF ) ) 
               OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE_WITH_IMPLICIT_KNOTS' IN TYPEOF( 
               SELF ) ) );
  END_ENTITY;

  ENTITY b_spline_surface_knot_locator;
      basis_surface      : b_spline_surface;
      knot_index         : INTEGER;
      surface_parameter  : u_or_v_parameter;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_surface ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY b_spline_surface_patch;
      basis_surface       : b_spline_surface;
      u_start_knot_index  : INTEGER;
      v_start_knot_index  : INTEGER;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_surface ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY b_spline_surface_strip;
      basis_surface      : b_spline_surface;
      start_knot_index   : INTEGER;
      surface_parameter  : u_or_v_parameter;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_surface ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY back_chaining_rule
    SUBTYPE OF ( rule_definition );
      head  : rule_condition;
      body  : LIST OF rule_condition;
    WHERE
      wr1: ( SELF.head.positive = TRUE );
      wr2: ( local_vars_of( SELF.head ) <= local_vars_of( SELF.body ) );
  END_ENTITY;

  ENTITY bare_die
    SUBTYPE OF ( part_usage_view );
      least_material_condition_centroid_location : OPTIONAL cartesian_point;
      maximum_height_above_seating_plane     : OPTIONAL length_data_element;
      maximum_material_condition_centroid_location : OPTIONAL cartesian_point;
      implemented_function                   : functional_unit_usage_view;
    INVERSE
      access_mechanisms : SET [2 : ?] OF minimally_defined_bare_die_terminal FOR containing_shape;
      die_seating_plane : non_feature_shape_element FOR containing_shape;
    WHERE
      wr1: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SHAPE_ELEMENT.CONTAINING_SHAPE'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'BARE_DIE_TOP_SURFACE' ) IN TYPEOF( pf ) ) ) ) <= 1 );
      wr2: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SHAPE_ELEMENT.CONTAINING_SHAPE'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'BARE_DIE_BOTTOM_SURFACE' ) IN TYPEOF( pf ) ) ) ) <= 1 );
      wr3: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SHAPE_ELEMENT.CONTAINING_SHAPE'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'BARE_DIE_EDGE_SURFACE' ) IN TYPEOF( pf ) ) ) ) <= 1 );
      wr4: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SEATING_PLANE' IN TYPEOF( die_seating_plane ) );
  END_ENTITY;

  ENTITY bare_die_bottom_surface
    SUBTYPE OF ( bare_die_surface );
  END_ENTITY;

  ENTITY bare_die_component
    SUBTYPE OF ( physical_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : bare_die;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY bare_die_component_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\component_feature.definition    : bare_die_terminal;
      SELF\shape_element.containing_shape  : bare_die_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY bare_die_edge_segment_surface
    SUBTYPE OF ( bare_die_surface );
      composed_surface  : bare_die_edge_surface;
      start_vertex      : edge_segment_vertex;
      end_vertex        : edge_segment_vertex;
    WHERE
      wr1: ( start_vertex :<>: end_vertex );
      wr2: ( SELF\shape_element.containing_shape :=: composed_surface\shape_element.containing_shape );
  END_ENTITY;

  ENTITY bare_die_edge_surface
    SUBTYPE OF ( bare_die_surface );
  END_ENTITY;

  ENTITY bare_die_surface
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            bare_die_top_surface, 
            bare_die_bottom_surface, 
            bare_die_edge_segment_surface, 
            bare_die_edge_surface ) )
    SUBTYPE OF ( part_mounting_feature );
      SELF\shape_element.containing_shape  : bare_die;
  END_ENTITY;

  ENTITY bare_die_template_terminal
    SUBTYPE OF ( part_feature_template_definition, definitional_shape_element );
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_usage_view;
      seating_plane_zone                     : OPTIONAL connection_zone_bare_die_interface_plane_relationship;
    INVERSE
      material : material_identification FOR items;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( material ) );
  END_ENTITY;

  ENTITY bare_die_terminal
    SUBTYPE OF ( minimally_defined_bare_die_terminal, placed_feature );
      SELF\placed_feature.definition  : bare_die_template_terminal;
  END_ENTITY;

  ENTITY bare_die_terminal_surface_constituent_relationship
    SUBTYPE OF ( shape_element_relationship );
      SELF\shape_element_relationship.relating : bare_die_surface;
      SELF\shape_element_relationship.related : bare_die_terminal;
  END_ENTITY;

  ENTITY bare_die_top_surface
    SUBTYPE OF ( bare_die_surface );
  END_ENTITY;

  ENTITY basic_multi_stratum_printed_component
    SUBTYPE OF ( printed_component );
      material_stack                       : stratum_feature_based_derived_pattern;
      SELF\printed_component.derived_from  : basic_multi_stratum_printed_part_template;
    DERIVE
      stratum_feature_implementation  : stratum_feature := material_stack.reference_stratum_feature;
  END_ENTITY;

  ENTITY basic_multi_stratum_printed_part_template
    SUBTYPE OF ( printed_part_template );
      material_stack      : library_stack_model;
      reference_template  : stratum_feature_template;
  END_ENTITY;

  ENTITY bead_end_type
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            linear_bead_end_type, 
            open_bead_end_type, 
            radiused_bead_end_type ) )
    SUBTYPE OF ( shape_element );
      is_applied_to  : starting_or_ending;
  END_ENTITY;

  ENTITY bead_feature
    SUBTYPE OF ( process_feature_in_panel );
      base_radius    : OPTIONAL length_data_element;
      bead_profile   : open_profile_usage;
      end_condition  : SET [2 : 2] OF bead_end_type;
      sweep_path     : path_feature_component;
  END_ENTITY;

  ENTITY between_shape_element
    SUBTYPE OF ( continuous_shape_element );
      start_features  : SET [1 : ?] OF definitional_shape_element;
      end_features    : SET [1 : ?] OF definitional_shape_element;
  END_ENTITY;

  ENTITY bevel_edge_feature_shape_model
    SUBTYPE OF ( edge_shape_model );
      bevel_width  : length_tolerance_characteristic;
      bevel_angle  : tolerance_characteristic;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN 
               TYPEOF( bevel_angle ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SYMMETRICAL_TOLERANCE_CHARACTERISTIC'  IN TYPEOF( bevel_angle ) ) OR ( SIZEOF( QUERY ( it <* bevel_angle\
               representation.items | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ANGLE_DATA_ELEMENT'  IN TYPEOF( bevel_angle\representation.items ) ) ) ) ) = 0 ) );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN
               TYPEOF( bevel_angle ) ) ) OR ( SIZEOF( QUERY ( it <* bevel_angle\representation.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ANGLE_DATA_ELEMENT'  IN TYPEOF( bevel_angle\
               representation.items ) ) ) ) = 1 ) );
  END_ENTITY;

  ENTITY bevel_gear
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            helical_bevel_gear, 
            straight_bevel_gear ) )
    SUBTYPE OF ( defined_gear );
      tip_angle   : numerical_item_with_unit;
      root_angle  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY beveled_sheet_representation
    SUBTYPE OF ( constituent_shape_representation );
      bevel_angle              : angle_data_element;
      boundary_surface         : composite_sheet_representation;
      vertical_profile_height  : length_data_element;
  END_ENTITY;

  ENTITY binary_assembly_constraint
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            parallel_assembly_constraint, 
            dimensioned_surface_distance_assembly_constraint, 
            dimensioned_angle_assembly_constraint, 
            perpendicular_assembly_constraint, 
            incidence_assembly_constraint, 
            coaxial_assembly_constraint, 
            tangent_assembly_constraint ) )
    SUBTYPE OF ( explicit_constraint, geometric_model_relationship_with_transformation );
      SELF\representation_relationship.rep_1 : representative_geometric_model;
      SELF\representation_relationship.rep_2 : representative_geometric_model;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.constrained_elements ) = 1 ) AND ( SIZEOF( SELF\explicit_constraint.
               reference_elements ) = 1 ) );
  END_ENTITY;

  ENTITY binary_boolean_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            xor_expression, 
            equals_expression ) )
    SUBTYPE OF ( boolean_expression, binary_generic_expression );
  END_ENTITY;

  ENTITY binary_function_call
    ABSTRACT SUPERTYPE OF ( 
        atan_function )
    SUBTYPE OF ( binary_numeric_expression );
  END_ENTITY;

  ENTITY binary_generic_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( generic_expression );
      operands  : LIST [2 : 2] OF generic_expression;
  END_ENTITY;

  ENTITY binary_numeric_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            minus_expression, 
            div_expression, 
            mod_expression, 
            slash_expression, 
            power_expression ) )
    SUBTYPE OF ( numeric_expression, binary_generic_expression );
      SELF\binary_generic_expression.operands : LIST [2 : 2] OF numeric_expression;
  END_ENTITY;

  ENTITY binary_representation_item
    SUBTYPE OF ( representation_item );
  END_ENTITY;

  ENTITY blind_bottom_condition
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            conical_hole_bottom, 
            flat_hole_bottom, 
            flat_with_radius_hole_bottom, 
            flat_with_taper_hole_bottom, 
            spherical_hole_bottom ) );
      start_or_end  : BOOLEAN;
  END_ENTITY;

  ENTITY blind_passage_template
    SUBTYPE OF ( unsupported_passage_template );
      bottom_distance_from_datum_reference  : dimensional_location;
      datum_reference_layer                 : stratum_technology_occurrence;
      datum_reference_side                  : stratum_technology_occurrence_link;
      of_measure_orientation                : measure_orientation;
  END_ENTITY;

  ENTITY blind_via
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            non_conductive_base_blind_via, 
            plated_conductive_base_blind_via ) )
    SUBTYPE OF ( via );
  END_ENTITY;

  ENTITY bond_assembly_2d_position;
      bond                       : assembled_with_bonding;
      assembly_model             : physical_unit_planar_shape_model;
      bond_model                 : default_assembly_bond_shape_model;
      bond_definition_placement  : axis_placement_2d;
    UNIQUE
      ur1 : bond;
  END_ENTITY;

  ENTITY bond_assembly_position;
      bond                       : assembled_with_bonding;
      assembly_model             : physical_unit_3d_shape_model;
      bond_model                 : default_assembly_bond_shape_model;
      bond_definition_placement  : axis_placement_3d;
    UNIQUE
      ur1 : bond;
  END_ENTITY;

  ENTITY boolean_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( defined_function, boolean_expression );
  END_ENTITY;

  ENTITY boolean_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            simple_boolean_expression, 
            unary_boolean_expression, 
            binary_boolean_expression, 
            multiple_arity_boolean_expression, 
            comparison_expression, 
            boolean_defined_function, 
            interval_expression ) )
    SUBTYPE OF ( expression );
  END_ENTITY;

  ENTITY boolean_literal
    SUBTYPE OF ( simple_boolean_expression, generic_literal );
      the_value  : BOOLEAN;
  END_ENTITY;

  ENTITY boolean_representation_item
    SUBTYPE OF ( representation_item );
      the_value  : BOOLEAN;
  END_ENTITY;

  ENTITY boolean_result_2d
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY boolean_variable
    SUBTYPE OF ( simple_boolean_expression, variable );
  END_ENTITY;

  ENTITY boss
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            circular_boss, 
            general_boss, 
            rectangular_boss ) )
    SUBTYPE OF ( multi_axis_feature );
      boss_height    : linear_path_feature_component;
      fillet_radius  : OPTIONAL numerical_item_with_unit;
      top_condition  : boss_top_condition;
  END_ENTITY;

  ENTITY boss_top_condition
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            general_top_condition, 
            planar_top_condition ) );
      top_radius    : OPTIONAL numerical_item_with_unit;
      start_or_end  : BOOLEAN;
  END_ENTITY;

  ENTITY bound_parameter_environment;
      syntactic_representation  : bound_variational_parameter;
      semantics                 : instance_attribute_reference;
  END_ENTITY;

  ENTITY bound_variational_parameter
    SUBTYPE OF ( variational_representation_item, maths_variable );
      parameter_description  : OPTIONAL STRING;
    DERIVE
      SELF\maths_variable.name  : STRING := SELF\representation_item.name;
    INVERSE
      interpretation : bound_parameter_environment FOR syntactic_representation;
  END_ENTITY;

  ENTITY boundary_curve
    SUBTYPE OF ( closed_composite_curve );
  END_ENTITY;

  ENTITY boundary_curve_appearance
    SUBTYPE OF ( surface_related_curve_appearance );
  END_ENTITY;

  ENTITY boundary_curve_of_b_spline_or_rectangular_composite_surface;
      basis_surface  : b_spline_or_rectangular_composite_surface_select;
      boundary_type  : surface_boundary_type;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_surface ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY boundary_curve_representation;
      bounds  : SET [1 : ?] OF curve;
  END_ENTITY;

  ENTITY bounded_curve
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            composite_curve, 
            trimmed_curve ) )
    SUBTYPE OF ( curve );
  END_ENTITY;

  ENTITY bounded_surface
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( surface );
  END_ENTITY;

  ENTITY braided_assembly
    SUBTYPE OF ( stock_material );
  END_ENTITY;

  ENTITY breakdown
    SUBTYPE OF ( product );
  END_ENTITY;

  ENTITY breakdown_context;
      id                 : STRING;
      name               : STRING;
      description        : OPTIONAL STRING;
      breakdown          : breakdown_version;
      breakdown_element  : breakdown_element_definition;
  END_ENTITY;

  ENTITY breakdown_element
    SUBTYPE OF ( product );
  END_ENTITY;

  ENTITY breakdown_element_definition
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : breakdown_element_version;
  END_ENTITY;

  ENTITY breakdown_element_realization
    SUBTYPE OF ( product_definition_element_relationship );
  END_ENTITY;

  ENTITY breakdown_element_usage
    SUBTYPE OF ( view_definition_usage );
      name                                   : STRING;
      SELF\view_definition_relationship.relating_view : breakdown_element_definition;
      SELF\view_definition_relationship.related_view : breakdown_element_definition;
    DERIVE
      child_element   : breakdown_element_definition := SELF\view_definition_relationship.related_view;
      parent_element  : breakdown_element_definition := SELF\view_definition_relationship.relating_view;
  END_ENTITY;

  ENTITY breakdown_element_version
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : breakdown_element;
  END_ENTITY;

  ENTITY breakdown_node_relationship;
      description    : OPTIONAL STRING;
      relating       : complex_product_select;
      related        : breakdown_element_select;
      relation_type  : STRING;
    WHERE
      wr1: ( ( NOT ( relation_type IN [ 'functionality', 'realization'] ) ) OR ( TYPEOF( related ) <> TYPEOF( relating ) ) );
      wr2: ( ( NOT ( relation_type IN [ 'decomposition', 'specialization', 'occurrence'] ) ) OR aggregate1_in_aggregate2( 
               TYPEOF( related ), TYPEOF( relating ) ) OR aggregate1_in_aggregate2( TYPEOF( relating ), TYPEOF( related ) ) );
      wr3: ( ( NOT ( relation_type IN [ 'occurrence'] ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_ELEMENT_DEFINITION'  IN TYPEOF( 
               relating ) ) );
  END_ENTITY;

  ENTITY breakdown_of;
      id           : STRING;
      name         : STRING;
      description  : OPTIONAL STRING;
      breakdown    : breakdown_version;
      of_target    : breakdown_of_target;
  END_ENTITY;

  ENTITY breakdown_version
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : breakdown;
    INVERSE
      breakdown_of : SET [1 : ?] OF breakdown_of FOR breakdown;
  END_ENTITY;

  ENTITY breakout_footprint_definition
    SUBTYPE OF ( generic_footprint_definition );
      reference_footprint  : footprint_definition;
    INVERSE
      breakout_traces : SET [1 : ?] OF stratum_feature_template_location_in_breakout_footprint_definition FOR assembly;
    WHERE
      wr1: ( SELF\multi_stratum_structured_template.location = reference_footprint\multi_stratum_structured_template.location );
  END_ENTITY;

  ENTITY breakout_footprint_definition_shape_model
    SUBTYPE OF ( structured_template_planar_shape_model );
      SELF\structured_template_planar_shape_model.shape_characterized_definition : SET [1 : 1] OF breakout_footprint_definition;
      reference_shape                        : footprint_definition_shape_model;
    WHERE
      wr1: ( reference_shape.shape_characterized_definition[1] :=: shape_characterized_definition[1].reference_footprint );
  END_ENTITY;

  ENTITY breakout_occurrence
    SUBTYPE OF ( footprint_occurrence );
      SELF\definition_based_product_occurrence.derived_from : breakout_footprint_definition;
      associated_footprint                   : footprint_occurrence;
    WHERE
      wr1: ( associated_footprint <> SELF );
      wr2: ( derived_from.reference_footprint = associated_footprint.derived_from );
  END_ENTITY;

  ENTITY buried_via
    SUBTYPE OF ( via );
  END_ENTITY;

  ENTITY bus_element_link;
      precedent_element   : bus_structural_definition_or_node;
      subsequent_element  : bus_structural_definition_or_node;
    INVERSE
      composed_bus : bus_structural_definition FOR composition;
    UNIQUE
      ur1 : precedent_element, subsequent_element;
    WHERE
      wr1: ( precedent_element <> subsequent_element );
  END_ENTITY;

  ENTITY bus_structural_definition;
      bus_name     : STRING;
      composition  : SET [1 : ?] OF bus_element_link;
    INVERSE
      external_bus_access : SET [0 : 1] OF functional_unit_network_terminal_definition_bus_assignment FOR connected_bus;
    UNIQUE
      ur1 : bus_name;
    WHERE
      wr1: consistent_bus_structural_definition( composition );
  END_ENTITY;

  ENTITY bytes_representation_item
    SUBTYPE OF ( binary_representation_item );
  END_ENTITY;

  ENTITY cable_component
    SUBTYPE OF ( physical_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : cable_usage_view;
  END_ENTITY;

  ENTITY cable_terminal
    SUBTYPE OF ( part_terminal );
      SELF\shape_element.containing_shape    : cable_usage_view;
      mapped_terminal                        : OPTIONAL packaged_connector_component_interface_terminal;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_usage_view;
    WHERE
      wr1: ( SELF\part_feature.associated_definition :=: mapped_terminal\component_feature.associated_component\
               assembly_component.occurrence_contexts[1].relating_view );
  END_ENTITY;

  ENTITY cable_usage_view
    SUBTYPE OF ( part_usage_view );
    INVERSE
      access_mechanisms : SET [1 : ?] OF cable_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY calendar_date;
      year_component   : year_number;
      month_component  : month_in_year_number;
      day_component    : day_in_month_number;
  END_ENTITY;

  ENTITY camera_image_2d_with_scale
    SUBTYPE OF ( detailed_geometric_model_element );
      is_displaying  : presented_model_select;
      source         : camera_model_d2;
      target         : planar_box;
  END_ENTITY;

  ENTITY camera_model_d2
    SUBTYPE OF ( detailed_geometric_model_element );
      view_window           : planar_box;
      view_window_clipping  : BOOLEAN;
  END_ENTITY;

  ENTITY camera_model_d3
    SUBTYPE OF ( detailed_geometric_model_element );
      clipping                   : OPTIONAL clipping_operator;
      hidden_element_appearance  : OPTIONAL appearance_assignment;
      hidden_line_removal        : OPTIONAL BOOLEAN;
      sources                    : OPTIONAL SET [1 : ?] OF light_source;
      view_projection            : view_projection_type;
      view_window                : planar_box;
    WHERE
      wr1: ( ( NOT EXISTS( hidden_element_appearance ) ) OR EXISTS( hidden_line_removal ) );
  END_ENTITY;

  ENTITY capacitance_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY cartesian_point
    SUBTYPE OF ( point );
      coordinates  : LIST [1 : 3] OF length_measure;
  END_ENTITY;

  ENTITY cartesian_transformation_2d
    SUBTYPE OF ( detailed_geometric_model_element );
      multiplication_matrix  : ARRAY [1 : 2] OF direction;
      translation            : cartesian_point;
    WHERE
      wr1: ( SIZEOF( multiplication_matrix[1]\direction.direction_ratios ) = 2 );
      wr2: ( SIZEOF( multiplication_matrix[2]\direction.direction_ratios ) = 2 );
      wr3: ( SIZEOF( translation.coordinates ) = 2 );
  END_ENTITY;

  ENTITY cartesian_transformation_3d
    SUBTYPE OF ( detailed_geometric_model_element );
      multiplication_matrix  : ARRAY [1 : 3] OF direction;
      translation            : cartesian_point;
    WHERE
      wr1: ( SIZEOF( multiplication_matrix[1]\direction.direction_ratios ) = 3 );
      wr2: ( SIZEOF( multiplication_matrix[2]\direction.direction_ratios ) = 3 );
      wr3: ( SIZEOF( multiplication_matrix[3]\direction.direction_ratios ) = 3 );
      wr4: ( SIZEOF( translation.coordinates ) = 3 );
  END_ENTITY;

  ENTITY catalogue_gear
    SUBTYPE OF ( gear );
      documentation  : specification_definition;
  END_ENTITY;

  ENTITY catalogue_knurl
    SUBTYPE OF ( knurl );
      documentation  : specification_definition;
  END_ENTITY;

  ENTITY catalogue_marking
    SUBTYPE OF ( marking_feature );
      documentation  : specification_definition;
  END_ENTITY;

  ENTITY catalogue_thread
    SUBTYPE OF ( thread );
      documentation   : specification_definition;
      major_diameter  : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY category_model_parameter
    SUBTYPE OF ( model_parameter );
    INVERSE
      associated_attribute : SET [1 : 1] OF classification_attribute FOR attribute_definition;
  END_ENTITY;

  ENTITY celsius_temperature_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY centre_axis
    SUBTYPE OF ( centre_of_symmetry );
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY centre_of_mass
    SUBTYPE OF ( shape_dependent_property_representation );
    WHERE
      wr1: ( SIZEOF( SELF\property_definition_representation.used_representation\representation.items ) = 1 );
      wr2: ( SIZEOF( QUERY ( it <* SELF\property_definition_representation.used_representation\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'CARTESIAN_POINT' ) IN TYPEOF( it ) ) ) ) 
               = 1 );
      wr3: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'GEOMETRIC_COORDINATE_SPACE' ) IN TYPEOF( 
               SELF\property_definition_representation.used_representation\representation.context_of_items ) );
  END_ENTITY;

  ENTITY centre_of_symmetry
    SUPERTYPE OF ( 
        ONEOF ( 
            centre_axis, 
            centre_plane, 
            centre_point, 
            median_curve, 
            median_surface ) )
    SUBTYPE OF ( derived_shape_element );
  END_ENTITY;

  ENTITY centre_plane
    SUBTYPE OF ( centre_of_symmetry );
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY centre_point
    SUBTYPE OF ( centre_of_symmetry );
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY certification;
      name         : STRING;
      description  : OPTIONAL STRING;
      kind         : STRING;
  END_ENTITY;

  ENTITY certification_assignment;
      assigned_certification  : certification;
      items                   : SET [1 : ?] OF certification_item;
      role                    : STRING;
  END_ENTITY;

  ENTITY chain_based_geometric_item_specific_usage
    SUBTYPE OF ( geometric_item_specific_usage );
      nodes            : LIST [2 : ?] OF UNIQUE geometric_model;
      undirected_link  : LIST [1 : ?] OF UNIQUE chained_geometric_model_link;
  END_ENTITY;

  ENTITY chamfer
    SUBTYPE OF ( transition_feature );
      chamfer_face      : face_shape_element;
      first_parameter   : first_chamfer_offset;
      second_parameter  : second_chamfer_parameter;
  END_ENTITY;

  ENTITY chamfer_angle
    SUBTYPE OF ( second_chamfer_parameter );
      angle_amount  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY change;
      id                : OPTIONAL identifier;
      name              : label;
      description       : OPTIONAL text;
      described_change  : OPTIONAL change_relationship_select;
  END_ENTITY;

  ENTITY change_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            modify_element, 
            modify_single_element, 
            delete_element, 
            add_element ) );
      attribute_name                         : OPTIONAL STRING;
      change_location_in_aggregate_attribute : OPTIONAL LIST [1 : ?] OF INTEGER;
      change_set                             : change;
  END_ENTITY;

  ENTITY change_element_sequence;
      description  : OPTIONAL text;
      previous     : change_element;
      next         : change_element;
  END_ENTITY;

  ENTITY character_glyph_font_usage;
      character  : character_glyph_symbol;
      font       : text_font;
  END_ENTITY;

  ENTITY character_glyph_symbol
    SUBTYPE OF ( representation );
      SELF\representation.name  : label1;
    DERIVE
      character  : label1 := SELF\representation.name;
  END_ENTITY;

  ENTITY characteristic_data_column_header
    SUBTYPE OF ( independent_property );
    INVERSE
      table_header_usage : characteristic_data_table_header_decomposition FOR related;
  END_ENTITY;

  ENTITY characteristic_data_column_header_link
    SUBTYPE OF ( independent_property_relationship );
      SELF\independent_property_relationship.relating : characteristic_data_column_header;
      SELF\independent_property_relationship.related : characteristic_data_column_header;
    DERIVE
      SELF\independent_property_relationship.relation_type : STRING := 'sequence';
      precedent                              : characteristic_data_column_header := SELF\independent_property_relationship.
                                                 relating;
      subsequent                             : characteristic_data_column_header := SELF\independent_property_relationship.
                                                 related;
    WHERE
      wr1: ( subsequent <> precedent );
  END_ENTITY;

  ENTITY characteristic_data_table
    SUBTYPE OF ( representation_item );
      property_value  : LIST [1 : ?] OF characteristic_data_table_row;
    WHERE
      wr1: ( SIZEOF( QUERY ( pv <* property_value | ( NOT ( SIZEOF( pv.cell ) = SIZEOF( property_value[1].cell ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY characteristic_data_table_header
    SUBTYPE OF ( independent_property );
    INVERSE
      column : SET [2 : ?] OF characteristic_data_table_header_decomposition FOR relating;
  END_ENTITY;

  ENTITY characteristic_data_table_header_decomposition
    SUBTYPE OF ( independent_property_relationship );
      SELF\independent_property_relationship.relating : characteristic_data_table_header;
      SELF\independent_property_relationship.related : characteristic_data_column_header;
    DERIVE
      SELF\independent_property_relationship.relation_type : STRING := 'decomposition';
  END_ENTITY;

  ENTITY characteristic_data_table_header_usage
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : characteristic_data_table_header;
      SELF\property_definition_representation.used_representation : characteristic_data_table_representation;
  END_ENTITY;

  ENTITY characteristic_data_table_representation
    SUBTYPE OF ( property_value_representation );
      SELF\representation.items  : SET [1 : 1] OF characteristic_data_table;
    INVERSE
      header : characteristic_data_table_header_usage FOR used_representation;
  END_ENTITY;

  ENTITY characteristic_data_table_row
    SUBTYPE OF ( representation_item );
      cell  : LIST [1 : ?] OF characteristic_data_table_cell;
  END_ENTITY;

  ENTITY characterizable_object;
      name         : label;
      description  : OPTIONAL text;
  END_ENTITY;

  ENTITY characterized_chain_based_item_within_representation
    SUBTYPE OF ( characterized_item_within_representation );
      nodes            : LIST [2 : ?] OF UNIQUE representation;
      undirected_link  : LIST [1 : ?] OF UNIQUE chained_representation_link;
  END_ENTITY;

  ENTITY characterized_item_within_representation
    SUBTYPE OF ( characterizable_object );
      item  : representation_item;
      rep   : representation;
    UNIQUE
      ur1 : item, rep;
    WHERE
      wr1: ( rep IN using_representations( item ) );
  END_ENTITY;

  ENTITY characterized_representation
    SUBTYPE OF ( representation, characterizable_object );
  END_ENTITY;

  ENTITY chemical_compound
    SUBTYPE OF ( substance );
    DERIVE
      id_owner  : SET [0 : ?] OF organization_or_person_in_organization_assignment := QUERY ( temp <* bag_to_set( USEDIN( SELF, 
                    'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
                    'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS'  ) ) | ( temp.role = 'id owner' ) );
    WHERE
      wr1: ( EXISTS( id_owner ) AND ( SIZEOF( id_owner ) = 1 ) );
  END_ENTITY;

  ENTITY chemical_element
    SUBTYPE OF ( substance );
  END_ENTITY;

  ENTITY circle
    SUBTYPE OF ( conic );
      radius  : length_measure;
    WHERE
      wr1: ( radius > 0 );
  END_ENTITY;

  ENTITY circular_area
    SUBTYPE OF ( primitive_2d );
      centre  : cartesian_point;
      radius  : length_data_element;
  END_ENTITY;

  ENTITY circular_boss
    SUBTYPE OF ( boss );
      circular_profile    : circular_closed_profile;
      change_in_diameter  : OPTIONAL taper_select;
  END_ENTITY;

  ENTITY circular_closed_profile
    SUBTYPE OF ( closed_profile );
      diameter  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY circular_closed_shape_profile
    SUBTYPE OF ( shape_profile );
      closed_boundary  : circular_closed_profile;
  END_ENTITY;

  ENTITY circular_cone
    SUBTYPE OF ( detailed_geometric_model_element );
      axis_direction  : direction;
      axis_point      : cartesian_point;
      height          : length_measure;
      radius          : length_measure;
      semi_angle      : plane_angle_measure;
    WHERE
      wr1: ( radius >= 0 );
      wr2: ( height > 0 );
  END_ENTITY;

  ENTITY circular_cutout
    SUBTYPE OF ( cutout_feature );
      circular_boundary  : circular_closed_profile;
  END_ENTITY;

  ENTITY circular_cylinder
    SUBTYPE OF ( detailed_geometric_model_element );
      axis_direction  : direction;
      axis_point      : cartesian_point;
      height          : length_measure;
      radius          : length_measure;
    WHERE
      wr1: ( radius > 0 );
      wr2: ( height > 0 );
  END_ENTITY;

  ENTITY circular_offset_pattern;
      index_number    : INTEGER;
      angular_offset  : numerical_item_with_unit;
    INVERSE
      relocated_base_feature_for : SET [1 : ?] OF circular_pattern FOR relocated_base_feature;
  END_ENTITY;

  ENTITY circular_omit_pattern;
      omit_index  : INTEGER;
    INVERSE
      missing_base_feature_for : SET [1 : ?] OF circular_pattern FOR missing_base_feature;
  END_ENTITY;

  ENTITY circular_path
    SUBTYPE OF ( path_node );
      via_point  : cartesian_point;
  END_ENTITY;

  ENTITY circular_path_feature_component
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            complete_circular_path_feature_component, 
            partial_circular_path_feature_component ) )
    SUBTYPE OF ( path_feature_component );
      radius  : length_measure;
  END_ENTITY;

  ENTITY circular_pattern
    SUBTYPE OF ( replicate_feature );
      relocated_base_feature  : SET [0 : ?] OF circular_offset_pattern;
      missing_base_feature    : SET [0 : ?] OF circular_omit_pattern;
      base_feature_rotation   : numerical_item_with_unit;
      number_of_features      : INTEGER;
      base_feature_diameter   : OPTIONAL numerical_item_with_unit;
      angular_spacing         : numerical_item_with_unit;
  END_ENTITY;

  ENTITY circular_runout_tolerance
    SUBTYPE OF ( geometric_tolerance );
      angle         : OPTIONAL REAL;
      datum_system  : datum_system;
  END_ENTITY;

  ENTITY class
    SUPERTYPE OF ( 
        ONEOF ( 
            class_by_extension, 
            class_by_intension ) 
        ANDOR
        ONEOF ( 
            conductivity_material_property_class, 
            relative_permeability_material_property_class, 
            relative_optical_insertion_loss_material_property_class, 
            relative_permittivity_material_property_class ) );
      id           : STRING;
      name         : STRING;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY class_breakdown_association;
      description        : OPTIONAL STRING;
      considered_class   : product_class;
      breakdown_element  : breakdown_element_select;
      relation_type      : STRING;
  END_ENTITY;

  ENTITY class_by_extension
    SUBTYPE OF ( class );
  END_ENTITY;

  ENTITY class_by_intension
    SUBTYPE OF ( class );
  END_ENTITY;

  ENTITY class_category_association;
      associated_product_class  : product_class;
      mandatory                 : BOOLEAN;
      associated_category       : specification_category;
  END_ENTITY;

  ENTITY class_condition_association;
      condition_type            : STRING;
      associated_product_class  : product_class;
      description               : OPTIONAL STRING;
      associated_condition      : specification_expression;
  END_ENTITY;

  ENTITY class_hierarchy;
      super_class  : class_with_attributes;
      sub_class    : class_with_attributes;
  END_ENTITY;

  ENTITY class_inclusion_association;
      associated_product_class  : product_class;
      description               : OPTIONAL STRING;
      associated_inclusion      : specification_inclusion;
  END_ENTITY;

  ENTITY class_specification_association;
      associated_product_class  : product_class;
      association_type          : STRING;
      associated_specification  : specification;
  END_ENTITY;

  ENTITY class_with_attributes
    SUBTYPE OF ( class );
      version_id                  : OPTIONAL STRING;
      used_classification_system  : OPTIONAL classification_system;
    INVERSE
      characterization_attributes : SET [0 : ?] OF classification_attribute FOR characterized_class;
  END_ENTITY;

  ENTITY classification_assignment;
      assigned_class  : class;
      items           : SET [1 : ?] OF classification_item;
      role            : OPTIONAL STRING;
  END_ENTITY;

  ENTITY classification_association
    SUBTYPE OF ( classification_assignment );
      SELF\classification_assignment.assigned_class : class_with_attributes;
      definitional                           : LOGICAL;
    WHERE
      wr1: ( ( NOT ( definitional = TRUE ) ) OR ( SIZEOF( QUERY ( it <* SELF\classification_assignment.items | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DEFINABLE_OBJECTS'  IN TYPEOF( it ) ) ) ) ) = 
               0 ) );
      wr2: ( SIZEOF( QUERY ( it <* SELF\classification_assignment.items | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CLASSIFIED_ELEMENT_SELECT'  IN TYPEOF( it ) ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY classification_attribute;
      id                    : STRING;
      name                  : OPTIONAL STRING;
      description           : OPTIONAL STRING;
      allowed_values        : OPTIONAL SET [1 : ?] OF measure_item;
      characterized_class   : class_with_attributes;
      attribute_definition  : independent_property;
  END_ENTITY;

  ENTITY classification_system;
      id           : STRING;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY clipping_operator
    SUBTYPE OF ( detailed_geometric_model_element );
      elements  : SET [1 : ?] OF clipping_element;
      operator  : clipping_mode;
  END_ENTITY;

  ENTITY closed_composite_curve
    SUBTYPE OF ( composite_curve );
  END_ENTITY;

  ENTITY closed_curve_style_parameters
    SUBTYPE OF ( curve_style_parameters );
  END_ENTITY;

  ENTITY closed_path_area_with_parameters
    SUBTYPE OF ( path_area_with_parameters );
      SELF\path_area_with_parameters.centreline : closed_curve;
      SELF\path_area_with_parameters.parameters : closed_curve_style_parameters;
  END_ENTITY;

  ENTITY closed_profile
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            circular_closed_profile, 
            general_closed_profile, 
            ngon_profile, 
            rectangular_closed_profile ) )
    SUBTYPE OF ( profile );
  END_ENTITY;

  ENTITY closed_profile_usage
    SUBTYPE OF ( profile_usage );
  END_ENTITY;

  ENTITY closed_shell
    SUBTYPE OF ( connected_face_set );
  END_ENTITY;

  ENTITY closed_slot
    SUBTYPE OF ( slot );
      end_condition     : loop_slot_end_type;
      cource_of_travel  : end_type_select;
  END_ENTITY;

  ENTITY coating_layer
    SUBTYPE OF ( shape_element );
    INVERSE
      thickness : SET [0 : 1] OF thickness_size FOR is_applied_to;
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MATERIAL_IDENTIFICATION.'
               + 'ITEMS'  ) ) = 1 );
  END_ENTITY;

  ENTITY coaxial_assembly_constraint
    SUBTYPE OF ( binary_assembly_constraint, coaxial_constraint );
  END_ENTITY;

  ENTITY coaxial_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF axial_geometry_element;
      SELF\explicit_constraint.reference_elements : SET [0 : 1] OF axial_geometry_element;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\explicit_constraint.reference_elements | ( SIZEOF( TYPEOF( q ) * [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POINT' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SPHERICAL_SURFACE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SPHERE' ] ) > 0 ) ) ) = 0 );
  END_ENTITY;

  ENTITY coaxiality_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : datum_system;
  END_ENTITY;

  ENTITY collected_item_association
    SUBTYPE OF ( product_occurrence_definition_relationship );
      SELF\product_occurrence_definition_relationship.relating_view : collection_definition;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP' IN 
               TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY collection_definition
    SUBTYPE OF ( part_view_definition );
  END_ENTITY;

  ENTITY colour;
      name  : STRING;
  END_ENTITY;

  ENTITY comparison_equal
    SUBTYPE OF ( comparison_expression );
  END_ENTITY;

  ENTITY comparison_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            comparison_equal, 
            comparison_greater, 
            comparison_greater_equal, 
            comparison_less, 
            comparison_less_equal, 
            comparison_not_equal ) )
    SUBTYPE OF ( boolean_expression, binary_generic_expression );
      SELF\binary_generic_expression.operands : LIST [2 : 2] OF expression;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_EXPRESSION' IN TYPEOF( SELF\
               binary_generic_expression.operands[1] ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'NUMERIC_EXPRESSION'  IN TYPEOF( SELF\binary_generic_expression.operands[2] ) ) ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_EXPRESSION'  IN TYPEOF( SELF\
               binary_generic_expression.operands[1] ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'BOOLEAN_EXPRESSION'  IN TYPEOF( SELF\binary_generic_expression.operands[2] ) ) ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_EXPRESSION'  IN TYPEOF( SELF\
               binary_generic_expression.operands[1] ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRING_EXPRESSION'  IN TYPEOF( SELF\binary_generic_expression.operands[2] ) ) ) );
  END_ENTITY;

  ENTITY comparison_greater
    SUBTYPE OF ( comparison_expression );
  END_ENTITY;

  ENTITY comparison_greater_equal
    SUBTYPE OF ( comparison_expression );
  END_ENTITY;

  ENTITY comparison_less
    SUBTYPE OF ( comparison_expression );
  END_ENTITY;

  ENTITY comparison_less_equal
    SUBTYPE OF ( comparison_expression );
  END_ENTITY;

  ENTITY comparison_not_equal
    SUBTYPE OF ( comparison_expression );
  END_ENTITY;

  ENTITY complete_circular_path_feature_component
    SUBTYPE OF ( circular_path_feature_component );
  END_ENTITY;

  ENTITY complex_clause
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            complex_conjunctive_clause, 
            complex_disjunctive_clause ) );
      clauses  : LIST [2 : ?] OF clause_select;
  END_ENTITY;

  ENTITY complex_conjunctive_clause
    SUBTYPE OF ( complex_clause );
  END_ENTITY;

  ENTITY complex_deleted_face_solid
    SUBTYPE OF ( deleted_face_solid );
      thickened_face_list  : LIST [1 : ?] OF SET [1 : ?] OF advanced_face;
      thickness_list       : LIST [1 : ?] OF length_measure;
    WHERE
      wr1: ( SIZEOF( thickened_face_list ) = SIZEOF( thickness_list ) );
  END_ENTITY;

  ENTITY complex_disjunctive_clause
    SUBTYPE OF ( complex_clause );
  END_ENTITY;

  ENTITY complex_node_relationship;
      description    : OPTIONAL STRING;
      relating       : complex_product_select;
      related        : complex_product_select;
      relation_type  : STRING;
    WHERE
      wr1: ( aggregate1_in_aggregate2( TYPEOF( related ), TYPEOF( relating ) ) OR aggregate1_in_aggregate2( TYPEOF( relating ), 
               TYPEOF( related ) ) );
  END_ENTITY;

  ENTITY complex_passage_padstack_definition
    SUBTYPE OF ( stratum_stack_dependent_template, passage_padstack_definition );
  END_ENTITY;

  ENTITY complex_triangulated_face
    SUBTYPE OF ( tessellated_face );
      pnindex          : LIST [0 : ?] OF INTEGER;
      triangle_strips  : LIST [0 : ?] OF LIST [3 : ?] OF INTEGER;
      triangle_fans    : LIST [0 : ?] OF LIST [3 : ?] OF INTEGER;
    WHERE
      wr1: ( ( SIZEOF( pnindex ) = 0 ) OR ( SIZEOF( pnindex ) = SELF\tessellated_face.pnmax ) );
      wr2: ( NOT ( ( SIZEOF( pnindex ) = 0 ) AND ( SELF\tessellated_face.pnmax <> coordinates.npoints ) ) );
      wr3: ( NOT ( ( SIZEOF( triangle_strips ) = 0 ) AND ( SIZEOF( triangle_fans ) = 0 ) ) );
  END_ENTITY;

  ENTITY complex_triangulated_surface_set
    SUBTYPE OF ( tessellated_surface_set );
      pnindex          : LIST [0 : ?] OF INTEGER;
      triangle_strips  : LIST [0 : ?] OF LIST [3 : ?] OF INTEGER;
      triangle_fans    : LIST [0 : ?] OF LIST [3 : ?] OF INTEGER;
    WHERE
      wr1: ( ( SIZEOF( pnindex ) = 0 ) OR ( SIZEOF( pnindex ) = SELF\tessellated_surface_set.pnmax ) );
      wr2: ( NOT ( ( SIZEOF( pnindex ) = 0 ) AND ( SELF\tessellated_surface_set.pnmax <> coordinates.npoints ) ) );
      wr3: ( NOT ( ( SIZEOF( triangle_strips ) = 0 ) AND ( SIZEOF( triangle_fans ) = 0 ) ) );
  END_ENTITY;

  ENTITY component_2d_edge_location
    SUBTYPE OF ( component_2d_location );
      reference_terminal_assembly_joint  : assembly_joint;
      mounting_surface_assembly_joint    : assembly_joint;
    WHERE
      wr1: ( reference_terminal_assembly_joint <> mounting_surface_assembly_joint );
      wr2: ( SELF\component_2d_location.substrate_location = FALSE );
      wr3: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] 
               * TYPEOF( mounting_surface_assembly_joint.assembly_feature_1 ) ) >= 1 );
      wr4: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRIMARY_REFERENCE_TERMINAL' IN TYPEOF( 
               reference_terminal_assembly_joint\assembly_joint.assembly_feature_1 ) );
      wr5: ( NOT EXISTS( SELF\representation_relationship.description ) );
  END_ENTITY;

  ENTITY component_2d_embedded_location
    SUBTYPE OF ( component_2d_location );
      precedent_surface   : adjacent_stratum_surface_embedded_physical_component_surface_definition;
      subsequent_surface  : adjacent_stratum_surface_embedded_physical_component_surface_definition;
      reference_terminal  : fabrication_joint;
    UNIQUE
      ur1 : precedent_surface, reference_terminal, subsequent_surface;
    WHERE
      wr1: ( precedent_surface <> subsequent_surface );
      wr2: ( SELF\component_2d_location.substrate_location = FALSE );
      wr3: ( NOT EXISTS( SELF\representation_relationship.description ) );
  END_ENTITY;

  ENTITY component_2d_location
    SUPERTYPE OF ( 
        ONEOF ( 
            component_2d_edge_location, 
            component_2d_embedded_location, 
            component_2d_stacked_location, 
            component_2d_surface_location ) 
        ANDOR
        ONEOF ( 
            component_2d_edge_location, 
            component_2d_stacked_location, 
            component_2d_surface_location ) )
    SUBTYPE OF ( contextual_shape_representation, geometric_composition_with_operator_transformation );
      placement_fixed                        : BOOLEAN;
      SELF\geometric_relationship_with_operator_transformation.transformation : cartesian_transformation_2d;
      SELF\geometric_model_relationship.rep_2 : physical_unit_planar_shape_model;
      SELF\geometric_model_relationship.rep_1 : geometric_model;
    DERIVE
      component                              : next_assembly_usage := SELF\contextual_shape_representation.contextual_shape.
                                                 described_element;
      substrate_location                     : BOOLEAN := substrate_in_assembly( SELF );
      the_context                            : geometric_coordinate_space := assembly_model\representation.context_of_items;
      SELF\contextual_shape_representation.representing_relationship : geometric_model_relationship := SELF;
      SELF\representation_relationship.relation_type : label := 'component 2d location';
      assembly_model                         : physical_unit_planar_shape_model := SELF\geometric_model_relationship.rep_2;
      component_model                        : geometric_model := SELF\geometric_model_relationship.rep_1;
    WHERE
      wr1: EXISTS( component );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL' IN 
               TYPEOF( component_model ) ) ) OR ( component\product_occurrence_definition_relationship.related_view IN 
               component_model\assembly_component_2d_shape_model.shape_characterized_component ) );
      wr3: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL' IN TYPEOF( 
               component_model ) ) ) OR ( component_model\physical_unit_shape_model.shape_characterized_definition :=: component\
               product_occurrence_definition_relationship.related_view\definition_based_product_occurrence.derived_from ) );
      wr4: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL' IN TYPEOF( 
               component_model ) ) ) OR ( component\product_occurrence_definition_relationship.related_view\
               definition_based_product_occurrence.derived_from IN component_model\part_template_shape_model.
               shape_characterized_definition ) );
  END_ENTITY;

  ENTITY component_2d_stacked_location
    SUBTYPE OF ( component_2d_location );
      mounting_joint  : assembly_joint;
    WHERE
      wr1: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] 
               * TYPEOF( mounting_joint.assembly_feature_1 ) ) = 0 );
      wr2: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] 
               * TYPEOF( mounting_joint.assembly_feature_2 ) ) = 0 );
      wr3: ( SELF\component_2d_location.substrate_location = FALSE );
      wr4: ( NOT EXISTS( SELF\representation_relationship.description ) );
  END_ENTITY;

  ENTITY component_2d_surface_location
    SUBTYPE OF ( component_2d_location );
      mounting_surface_assembly_joint  : assembly_joint;
    WHERE
      wr1: ( SELF\component_2d_location.substrate_location = FALSE );
      wr2: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_TERMINAL', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_COMPONENT_SURFACE_FEATURE' ] 
               * TYPEOF( mounting_surface_assembly_joint.assembly_feature_1 ) ) >= 1 );
      wr3: ( NOT EXISTS( SELF\representation_relationship.description ) );
  END_ENTITY;

  ENTITY component_3d_location
    SUBTYPE OF ( contextual_shape_representation, geometric_composition_with_operator_transformation );
      SELF\geometric_relationship_with_operator_transformation.transformation : cartesian_transformation_3d;
      placement_fixed                        : BOOLEAN;
      SELF\geometric_model_relationship.rep_1 : assembly_component_3d_shape_model;
      SELF\geometric_model_relationship.rep_2 : physical_unit_3d_shape_model;
    DERIVE
      component                              : next_assembly_usage := SELF\contextual_shape_representation.contextual_shape.
                                                 described_element;
      the_context                            : geometric_coordinate_space := assembly_model\geometric_model.context_of_items;
      SELF\contextual_shape_representation.representing_relationship : geometric_model_relationship := SELF;
      SELF\representation_relationship.relation_type : label := 'component 3d location';
      assembly_model                         : physical_unit_3d_shape_model := SELF\geometric_model_relationship.rep_2;
      component_model                        : assembly_component_3d_shape_model := SELF\geometric_model_relationship.rep_1;
    WHERE
      wr1: EXISTS( component );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL' IN 
               TYPEOF( component_model ) ) ) OR ( component\product_occurrence_definition_relationship.related_view IN 
               component_model\assembly_component_3d_shape_model.shape_characterized_component ) );
      wr3: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL' IN TYPEOF( 
               component_model ) ) ) OR ( component_model\physical_unit_shape_model.shape_characterized_definition :=: component\
               product_occurrence_definition_relationship.related_view\definition_based_product_occurrence.derived_from ) );
      wr4: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL' IN TYPEOF( 
               component_model ) ) ) OR ( component\product_occurrence_definition_relationship.related_view\
               definition_based_product_occurrence.derived_from IN component_model\part_template_shape_model.
               shape_characterized_definition ) );
  END_ENTITY;

  ENTITY component_based_annotation_symbol_placement_relationship
    SUBTYPE OF ( component_feature_to_layout_feature_relationship );
      SELF\component_feature_to_layout_feature_relationship.related_stratum_concept : special_symbol_component;
  END_ENTITY;

  ENTITY component_based_annotation_text_relationship
    SUBTYPE OF ( component_feature_to_layout_feature_relationship );
      SELF\component_feature_to_layout_feature_relationship.related_stratum_concept : laminate_text_string_component;
      message_type                           : component_based_message_type;
  END_ENTITY;

  ENTITY component_external_reference;
      design_owner           : STRING;
      part_number            : STRING;
      revision_code          : STRING;
      product_definition_id  : STRING;
      reference_designation  : STRING;
  END_ENTITY;

  ENTITY component_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            physical_component_feature, 
            laminate_component_feature ) )
    SUBTYPE OF ( definitional_shape_element );
      definition                           : OPTIONAL general_part_feature;
      SELF\shape_element.containing_shape  : assembly_component;
    DERIVE
      associated_component  : assembly_component := SELF\shape_element.containing_shape;
    UNIQUE
      ur1 : definition, associated_component;
      ur2 : SELF\shape_element.element_name, associated_component;
  END_ENTITY;

  ENTITY component_feature_external_reference;
      name                  : STRING;
      associated_component  : component_external_reference;
    UNIQUE
      ur1 : associated_component, name;
  END_ENTITY;

  ENTITY component_feature_joint
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( component_feature_relationship, shape_element );
    DERIVE
      associated_definition  : item_shape := SELF\shape_element.containing_shape;
      feature_1              : component_feature := SELF\component_feature_relationship.relating;
      feature_2              : component_feature := SELF\component_feature_relationship.related;
    WHERE
      wr1: ( feature_1 <> feature_2 );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION' IN TYPEOF( 
               associated_definition ) );
      wr3: ( associated_definition :=: feature_1\shape_element.containing_shape );
      wr4: ( associated_definition :=: feature_2\shape_element.containing_shape );
  END_ENTITY;

  ENTITY component_feature_make_from_relationship
    SUBTYPE OF ( component_feature_relationship );
    DERIVE
      resultant_feature  : component_feature := SELF\shape_element_relationship.related;
      reusable_feature   : component_feature := SELF\shape_element_relationship.relating;
  END_ENTITY;

  ENTITY component_feature_relationship
    SUPERTYPE OF ( 
        ONEOF ( 
            component_feature_joint, 
            component_feature_make_from_relationship ) )
    SUBTYPE OF ( shape_element_relationship );
      SELF\shape_element_relationship.relating : component_feature;
      SELF\shape_element_relationship.related : component_feature;
  END_ENTITY;

  ENTITY component_feature_to_layout_feature_relationship
    SUPERTYPE OF ( 
        ONEOF ( 
            component_based_annotation_symbol_placement_relationship, 
            component_based_annotation_text_relationship ) );
      relating_feature         : component_or_component_feature;
      related_stratum_concept  : stratum_concept;
    INVERSE
      requirement : SET [0 : 1] OF requirement_assignment FOR assigned_to;
  END_ENTITY;

  ENTITY component_feature_to_physical_usage_view_assignment
    SUPERTYPE OF ( 
        ONEOF ( 
            component_terminal_to_assembly_module_macro_terminal_assignment, 
            component_terminal_to_assembly_module_interface_terminal_assignment, 
            component_terminal_to_interconnect_module_macro_terminal_assignment, 
            component_terminal_to_interconnect_module_interface_terminal_assignment, 
            component_terminal_to_layered_assembly_module_terminal_assignment ) 
        ANDOR
        ONEOF ( 
            component_terminal_to_assembly_module_interface_terminal_assignment, 
            component_terminal_to_layered_assembly_module_terminal_assignment ) 
        ANDOR
        ONEOF ( 
            component_terminal_to_interconnect_module_macro_terminal_assignment, 
            component_terminal_to_interconnect_module_interface_terminal_assignment ) );
      defined_part_feature    : part_feature;
      assigned_design_object  : component_feature;
    UNIQUE
      ur1 : assigned_design_object;
      ur2 : defined_part_feature;
  END_ENTITY;

  ENTITY component_group_assignment;
      associated_group    : placement_group_requirement_definition;
      assigned_component  : assembly_component_or_component_feature;
  END_ENTITY;

  ENTITY component_group_external_reference;
      name                   : STRING;
      associated_definition  : STRING;
    UNIQUE
      ur1 : name, associated_definition;
  END_ENTITY;

  ENTITY component_make_from_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : assembly_component;
      SELF\view_definition_relationship.related_view : assembly_component;
    DERIVE
      resultant_component  : assembly_component := SELF\view_definition_relationship.related_view;
      reusable_component   : assembly_component := SELF\view_definition_relationship.relating_view;
    WHERE
      wr1: ( resultant_component <> reusable_component );
  END_ENTITY;

  ENTITY component_material_relationship;
      associated_design  : part_design_view;
      component_1        : assembly_component_or_item_number;
      component_2        : OPTIONAL assembly_component_or_item_number;
      material           : OPTIONAL assembly_component_or_item_number;
      role               : bonding_or_coating;
      specification      : OPTIONAL assembly_item_number_or_process_specification;
    WHERE
      wr1 : ( component_1 <> component_2 );
      wr2 : ( component_1 <> material );
      wr3 : ( component_1 <> specification );
      wr4 : ( component_2 <> material );
      wr5 : ( component_2 <> specification );
      wr6 : ( material <> specification );
      wr7 : valid_assembly_context_for_bond( associated_design, component_1 );
      wr8 : valid_assembly_context_for_bond( associated_design, component_2 );
      wr9 : valid_assembly_context_for_bond( associated_design, material );
      wr10: valid_assembly_context_for_bond( associated_design, specification );
  END_ENTITY;

  ENTITY component_mating_constraint_condition;
      name                           : STRING;
      constraining_joint             : SET [1 : 3] OF assembly_joint;
      constrained_degree_of_freedom  : SET [1 : 6] OF degree_of_freedom;
      of_context                     : part_view_definition;
    UNIQUE
      ur1 : name, of_context;
  END_ENTITY;

  ENTITY component_mounting_clearance_relationship;
      feature_relationship  : component_feature_relationship;
      mounting_clearance    : length_tolerance_characteristic;
  END_ENTITY;

  ENTITY component_mounting_feature
    SUBTYPE OF ( physical_component_feature );
      SELF\component_feature.definition  : part_mounting_feature;
  END_ENTITY;

  ENTITY component_overlap_relationship;
      previously_placed_component  : next_assembly_usage;
      current_component            : next_assembly_usage;
      added_clearance              : length_tolerance_characteristic;
  END_ENTITY;

  ENTITY component_part_2d_non_planar_geometric_representation_relationship
    SUBTYPE OF ( geometric_model_relationship );
      SELF\geometric_model_relationship.rep_1 : part_template_planar_shape_model;
      SELF\geometric_model_relationship.rep_2 : assembly_component_non_planar_shape_model;
    DERIVE
      component_shape  : assembly_component_non_planar_shape_model := SELF\geometric_model_relationship.rep_2;
      part_shape       : part_template_planar_shape_model := SELF\geometric_model_relationship.rep_1;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation_relationship.relation_type ) );
  END_ENTITY;

  ENTITY component_path_shape_element
    SUBTYPE OF ( part_shape_element );
      location                 : multi_or_next_assembly_usage_occurrence;
      component_shape_element  : internal_or_reflected_shape_element;
    UNIQUE
      ur1 : location, component_shape_element;
    WHERE
      wr1: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE' IN TYPEOF( location ) ) ) 
               OR EXISTS( location\assembly_component_relationship.location_indicator ) );
  END_ENTITY;

  ENTITY component_placement_restriction_assignment;
      maximum_negative_component_height  : OPTIONAL length_tolerance_characteristic;
      maximum_positive_component_height  : OPTIONAL length_tolerance_characteristic;
      area                               : OPTIONAL mounting_restriction_area;
      volume                             : OPTIONAL mounting_restriction_volume;
      requirement                        : item_restricted_requirement;
      components_permitted               : BOOLEAN;
      mounting_clearance                 : OPTIONAL length_tolerance_characteristic;
    WHERE
      wr1: ( EXISTS( area ) OR EXISTS( volume ) );
  END_ENTITY;

  ENTITY component_swap_specification
    SUBTYPE OF ( modify_single_element );
      SELF\modify_single_element.current_design_object : design_functional_unit_allocation_to_assembly_component;
      SELF\modify_single_element.previous_design_object : design_functional_unit_allocation_to_assembly_component;
  END_ENTITY;

  ENTITY component_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            physical_component_terminal, 
            laminate_component_join_terminal ) )
    SUBTYPE OF ( component_feature );
      local_swappable   : OPTIONAL BOOLEAN;
      global_swappable  : OPTIONAL BOOLEAN;
      swap_code         : OPTIONAL STRING;
  END_ENTITY;

  ENTITY component_terminal_to_assembly_module_interface_terminal_assignment
    SUBTYPE OF ( component_feature_to_physical_usage_view_assignment );
      SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature : assembly_module_interface_terminal;
      SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object : layered_assembly_module_interface_select;
    DERIVE
      assigned_terminal    : layered_assembly_module_interface_select := SELF\component_feature_to_physical_usage_view_assignment
                               .assigned_design_object;
      usage_view_terminal  : assembly_module_interface_terminal := SELF\component_feature_to_physical_usage_view_assignment.
                               defined_part_feature;
    UNIQUE
      ur1 : usage_view_terminal;
  END_ENTITY;

  ENTITY component_terminal_to_assembly_module_macro_terminal_assignment
    SUBTYPE OF ( component_feature_to_physical_usage_view_assignment );
      SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature : assembly_module_macro_terminal;
      SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object :
                                                 interconnect_module_macro_component_join_terminal;
    DERIVE
      assigned_terminal    : interconnect_module_macro_component_join_terminal := SELF\
                               component_feature_to_physical_usage_view_assignment.assigned_design_object;
      usage_view_terminal  : assembly_module_macro_terminal := SELF\component_feature_to_physical_usage_view_assignment.
                               defined_part_feature;
    UNIQUE
      ur1 : usage_view_terminal;
  END_ENTITY;

  ENTITY component_terminal_to_interconnect_module_interface_terminal_assignment
    SUBTYPE OF ( component_feature_to_physical_usage_view_assignment );
      SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature : interconnect_module_interface_terminal;
      SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object : interconnect_or_assembly_module_select;
    DERIVE
      assigned_terminal    : interconnect_or_assembly_module_select := SELF\component_feature_to_physical_usage_view_assignment.
                               assigned_design_object;
      usage_view_terminal  : interconnect_module_interface_terminal := SELF\component_feature_to_physical_usage_view_assignment.
                               defined_part_feature;
  END_ENTITY;

  ENTITY component_terminal_to_interconnect_module_macro_terminal_assignment
    SUBTYPE OF ( component_feature_to_physical_usage_view_assignment );
      SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature : interconnect_module_macro_terminal;
      SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object : fabricated_feature_select;
    DERIVE
      assigned_terminal    : fabricated_feature_select := SELF\component_feature_to_physical_usage_view_assignment.
                               assigned_design_object;
      usage_view_terminal  : interconnect_module_macro_terminal := SELF\component_feature_to_physical_usage_view_assignment.
                               defined_part_feature;
  END_ENTITY;

  ENTITY component_terminal_to_layered_assembly_module_terminal_assignment
    SUBTYPE OF ( component_feature_to_physical_usage_view_assignment );
      SELF\component_feature_to_physical_usage_view_assignment.defined_part_feature : layered_assembly_module_terminal;
      SELF\component_feature_to_physical_usage_view_assignment.assigned_design_object : layered_assembly_module_interface_select;
    DERIVE
      assigned_terminal    : layered_assembly_module_interface_select := SELF\component_feature_to_physical_usage_view_assignment
                               .assigned_design_object;
      usage_view_terminal  : layered_assembly_module_terminal := SELF\component_feature_to_physical_usage_view_assignment.
                               defined_part_feature;
    UNIQUE
      ur1 : usage_view_terminal;
  END_ENTITY;

  ENTITY component_termination_passage
    SUBTYPE OF ( plated_passage );
      SELF\definition_based_product_occurrence.derived_from : component_termination_passage_template;
    INVERSE
      access_mechanism    : SET [1 : ?] OF component_termination_passage_join_terminal FOR containing_shape;
      interface_access_mechanism : component_termination_passage_interface_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY component_termination_passage_interface_terminal
    SUBTYPE OF ( laminate_component_interface_terminal );
      SELF\component_feature.definition    : component_termination_passage_template_interface_terminal;
      SELF\shape_element.containing_shape  : component_termination_passage;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY component_termination_passage_join_terminal
    SUBTYPE OF ( laminate_component_join_terminal );
      SELF\component_feature.definition    : component_termination_passage_template_join_terminal;
      SELF\shape_element.containing_shape  : component_termination_passage;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY component_termination_passage_template
    SUBTYPE OF ( continuous_template, inter_stratum_feature_template );
      SELF\inter_stratum_feature_template.of_passage_technology : default_component_termination_passage_definition;
    INVERSE
      access_mechanisms : SET [2 : ?] OF component_termination_passage_template_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY component_termination_passage_template_interface_terminal
    SUBTYPE OF ( component_termination_passage_template_terminal );
  END_ENTITY;

  ENTITY component_termination_passage_template_join_terminal
    SUBTYPE OF ( component_termination_passage_template_terminal );
      disallowed_inter_stratum_extent  : OPTIONAL SET [1 : ?] OF stratum_technology_occurrence_link;
  END_ENTITY;

  ENTITY component_termination_passage_template_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            component_termination_passage_template_interface_terminal, 
            component_termination_passage_template_join_terminal ) )
    SUBTYPE OF ( general_part_feature );
      SELF\shape_element.containing_shape    : component_termination_passage_template;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_layout_template;
    UNIQUE
      ur1 : SELF\shape_element.element_name, containing_shape;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY component_to_physical_usage_view_assignment
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : assembly_component;
      SELF\view_definition_relationship.related_view : assembly_component;
    DERIVE
      design_view_component  : assembly_component := SELF\view_definition_relationship.relating_view;
      usage_view_component   : assembly_component := SELF\view_definition_relationship.related_view;
    WHERE
      wr1: ( design_view_component <> usage_view_component );
      wr2: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
  END_ENTITY;

  ENTITY component_upper_level_identification
    SUBTYPE OF ( assembly_component_relationship );
      upper_assembly_relationship  : assembly_component_relationship;
      sub_assembly_relationship    : next_assembly_usage;
    UNIQUE
      ur1 : upper_assembly_relationship, sub_assembly_relationship;
    WHERE
      wr1: ( SELF :<>: upper_assembly_relationship );
      wr2: ( SELF\product_occurrence_definition_relationship.relating_view :=: upper_assembly_relationship\
               product_occurrence_definition_relationship.relating_view );
      wr3: ( SELF\product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\
               product_occurrence_definition_relationship.related_view );
      wr4: ( ( upper_assembly_relationship\product_occurrence_definition_relationship.related_view :=: sub_assembly_relationship\
               product_occurrence_definition_relationship.relating_view ) OR ( SIZEOF( QUERY ( pdr <* USEDIN( 
               upper_assembly_relationship\product_occurrence_definition_relationship.related_view, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.'
               + 'RELATED_VIEW'  ) | ( pdr.relating_view :=: sub_assembly_relationship\product_occurrence_definition_relationship
               .relating_view ) ) ) = 1 ) );
      wr5: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_UPPER_LEVEL_IDENTIFICATION' ] * 
               TYPEOF( upper_assembly_relationship ) ) = 1 );
  END_ENTITY;

  ENTITY composite_assembly
    SUBTYPE OF ( constituent_part );
      layup_part  : composite_assembly_table;
      shape       : OPTIONAL composite_assembly_shape;
  END_ENTITY;

  ENTITY composite_assembly_sequence_definition;
      components_in_sequence  : BAG [1 : ?] OF component_class_for_assembly;
  END_ENTITY;

  ENTITY composite_assembly_table
    SUBTYPE OF ( part_laminate_table );
      sequence_groups  : LIST [2 : ?] OF composite_assembly_sequence_definition;
  END_ENTITY;

  ENTITY composite_curve
    SUBTYPE OF ( bounded_curve );
      curve_segment  : LIST [1 : ?] OF UNIQUE composite_curve_segment;
  END_ENTITY;

  ENTITY composite_curve_segment;
      transition     : curve_transition_code;
      same_sense     : BOOLEAN;
      segment_curve  : bounded_curve;
    INVERSE
      using_curves : SET [1 : ?] OF composite_curve FOR curve_segment;
  END_ENTITY;

  ENTITY composite_curve_transition_locator;
      basis_curve       : composite_curve;
      transition_index  : INTEGER;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_curve ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY composite_group_shape_element
    SUBTYPE OF ( composite_shape_element );
  END_ENTITY;

  ENTITY composite_material_identification
    SUBTYPE OF ( material_identification );
    DERIVE
      composite_material_name  : STRING := SELF\material_identification.material_name;
  END_ENTITY;

  ENTITY composite_presentable_text
    SUBTYPE OF ( detailed_geometric_model_element );
      collected_text  : LIST [2 : ?] OF composite_text_element_select;
  END_ENTITY;

  ENTITY composite_shape_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            composite_group_shape_element, 
            composite_unit_shape_element ) 
        ANDOR
        ONEOF ( 
            continuous_shape_element, 
            composite_group_shape_element ) )
    SUBTYPE OF ( shape_element );
      components  : SET [2 : ?] OF shape_element;
  END_ENTITY;

  ENTITY composite_sheet_representation
    SUPERTYPE OF ( 
        ONEOF ( 
            face_based_sheet_representation, 
            geometric_sheet_representation ) )
    SUBTYPE OF ( constituent_shape_representation );
  END_ENTITY;

  ENTITY composite_signal_property
    SUBTYPE OF ( signal_property );
    INVERSE
      signal_property_structure : SET [1 : ?] OF composite_signal_property_relationship FOR composition;
  END_ENTITY;

  ENTITY composite_signal_property_relationship;
      composition                         : composite_signal_property;
      signal_property_structural_element  : signal_property;
    INVERSE
      aggregation_operation : external_source_identification FOR item;
  END_ENTITY;

  ENTITY composite_unit_shape_element
    SUBTYPE OF ( composite_shape_element );
  END_ENTITY;

  ENTITY compound_feature
    SUBTYPE OF ( machining_feature );
      element  : SET [2 : ?] OF compound_feature_element;
  END_ENTITY;

  ENTITY compound_feature_element;
      element  : compound_feature_select;
  END_ENTITY;

  ENTITY compound_feature_in_panel
    SUBTYPE OF ( process_feature_in_panel );
      feature_type  : STRING;
  END_ENTITY;

  ENTITY compound_feature_in_panel_element
    SUBTYPE OF ( shape_element );
      element_placement  : geometric_placement_operation;
      feature            : compound_in_panel_select;
      is_element_for     : SET [2 : ?] OF compound_feature_in_panel;
  END_ENTITY;

  ENTITY compound_feature_in_panel_element_relationship
    SUBTYPE OF ( shape_element_relationship );
      SELF\shape_element_relationship.relating : compound_feature_in_panel_element;
      SELF\shape_element_relationship.related : compound_feature_in_panel_element;
    DERIVE
      predecessor  : compound_feature_in_panel_element := SELF\shape_element_relationship.related;
      successor    : compound_feature_in_panel_element := SELF\shape_element_relationship.relating;
  END_ENTITY;

  ENTITY compound_feature_relationship;
      predecssor  : compound_feature_element;
      successor   : compound_feature_element;
  END_ENTITY;

  ENTITY compound_representation_item
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            sequence_representation_item, 
            set_representation_item ) )
    SUBTYPE OF ( representation_item );
  END_ENTITY;

  ENTITY compound_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY concat_expression
    SUBTYPE OF ( string_expression, multiple_arity_generic_expression );
      SELF\multiple_arity_generic_expression.operands : LIST [2 : ?] OF string_expression;
  END_ENTITY;

  ENTITY concentricity_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : datum_system;
  END_ENTITY;

  ENTITY conductance_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY conductive_filled_area
    SUPERTYPE OF ( 
        connected_filled_area )
    SUBTYPE OF ( stratum_feature );
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY conductive_interconnect_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            unrouted_conductive_interconnect_element, 
            conductive_interconnect_element_with_pre_defined_transitions ) )
    SUBTYPE OF ( stratum_feature_template_component );
    INVERSE
      access_mechanisms : SET [2 : ?] OF conductive_interconnect_element_terminal FOR containing_shape;
      connected_points : SET [1 : ?] OF conductive_interconnect_element_terminal_link FOR associated_element;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr2: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PROBE_ACCESS_AREA' IN TYPEOF( SELF ) ) );
      wr3: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FIDUCIAL' IN TYPEOF( SELF ) ) );
      wr4: correlated_terminals( SELF\conductive_interconnect_element.access_mechanisms, connected_points );
      wr5: ( ( 1 + SIZEOF( connected_points ) ) = limd_get_sz_cp( connected_points ) );
      wr6: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_COMPONENT' IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY conductive_interconnect_element_terminal
    SUBTYPE OF ( laminate_component_feature );
      SELF\shape_element.containing_shape    : conductive_interconnect_element;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : 1] OF connection_zone_in_design_view;
      location                               : layer_connection_point;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY conductive_interconnect_element_terminal_link;
      associated_element  : conductive_interconnect_element;
      precedent_point     : conductive_interconnect_element_terminal;
      subsequent_point    : conductive_interconnect_element_terminal;
    UNIQUE
      ur1 : precedent_point, subsequent_point;
    WHERE
      wr1: ( precedent_point <> subsequent_point );
      wr2: ( precedent_point.associated_component = associated_element );
      wr3: ( subsequent_point.associated_component = associated_element );
      wr4: acyclic_conductive_interconnect_element_terminal_link( SELF, [subsequent_point], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL_LINK'  );
  END_ENTITY;

  ENTITY conductive_interconnect_element_with_pre_defined_transitions
    SUBTYPE OF ( conductive_interconnect_element );
      centreline_shape                       : path_area_with_parameters;
      SELF\definition_based_product_occurrence.derived_from : trace_template;
      SELF\stratum_feature_template_component.implementation_or_resident_stratum : stratum_feature;
    WHERE
      wr1: ( SIZEOF( connected_points ) = ( SIZEOF( SELF\conductive_interconnect_element.access_mechanisms ) - 1 ) );
      wr2: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONDUCTOR', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONDUCTIVE_FILLED_AREA' ] * TYPEOF( SELF\
               stratum_feature_template_component.implementation_or_resident_stratum ) ) = 1 );
      wr3: ( centreline_shape.parameters = derived_from.trace_style );
      wr4: ( SIZEOF( QUERY ( ciet <* SELF\conductive_interconnect_element.access_mechanisms | ( NOT ( ciet.location.
               resident_design_layer_stratum = SELF\stratum_feature_template_component.implementation_or_resident_stratum.
               resident_stratum ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY conductivity_material_property_class
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            material_electrical_conductivity_class, 
            material_thermal_conductivity_class ) )
    SUBTYPE OF ( class );
    WHERE
      wr1: ( SELF\class.name IN [ 'conductive', 'non conductive', 'resistive', 'semi conductive', 'super conductive'] );
      wr2: ( NOT EXISTS( SELF\class.description ) );
  END_ENTITY;

  ENTITY conductor
    SUBTYPE OF ( stratum_feature );
      SELF\shape_element.containing_shape  : design_layer_stratum;
      implementation_requirement           : SET [1 : ?] OF intra_stratum_join_relationship;
    INVERSE
      join_component : SET [0 : ?] OF single_stratum_printed_component FOR stratum_feature_implementation;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
      wr2: ( ( SIZEOF( implementation_requirement ) - SIZEOF( join_component ) ) = 1 );
      wr3: ( ( SIZEOF( join_component ) = 0 ) OR ( SIZEOF( QUERY ( jc <* join_component | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TIEBAR_PRINTED_COMPONENT'  IN TYPEOF( jc\
               assembly_component.occurrence_contexts[1]\product_occurrence_definition_relationship.relating_view ) ) AND ( 
               SIZEOF( jc\single_stratum_printed_component.stratum_feature_implementation ) :<>: 1 ) ) ) ) = 0 ) );
  END_ENTITY;

  ENTITY configuration;
      configured_element  : configured_item_select;
      is_solution_for     : configured_specification_select;
      configuration_type  : configuration_kind;
      inheritance_type    : configuration_inheritance_types;
    WHERE
      wr1: consistent_configuration_type( SELF );
  END_ENTITY;

  ENTITY configuration_controlled_message;
      message_source              : message_source_select;
      message_content             : STRING;
      message_type_specification  : message_type;
  END_ENTITY;

  ENTITY conic
    SUPERTYPE OF ( 
        ONEOF ( 
            circle, 
            ellipse, 
            hyperbola, 
            parabola ) )
    SUBTYPE OF ( curve );
      position  : axis_placement;
  END_ENTITY;

  ENTITY conical_hole_bottom
    SUBTYPE OF ( blind_bottom_condition );
      tip_angle   : numerical_item_with_unit;
      tip_radius  : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY conical_stepped_hole_transition
    SUBTYPE OF ( detailed_geometric_model_element );
      apex_angle         : plane_angle_measure;
      cone_base_radius   : length_measure;
      transition_number  : INTEGER;
    WHERE
      wr1: ( transition_number > 0 );
      wr2: ( cone_base_radius > 0 );
  END_ENTITY;

  ENTITY conical_surface
    SUBTYPE OF ( surface );
      position    : axis_placement_3d;
      radius      : length_measure;
      semi_angle  : plane_angle_measure;
    WHERE
      wr1: ( radius >= 0 );
  END_ENTITY;

  ENTITY connected_area_component
    SUBTYPE OF ( area_component );
      associated_layer_connection_point  : SET [1 : ?] OF layer_connection_point;
  END_ENTITY;

  ENTITY connected_edge_set
    SUBTYPE OF ( detailed_topological_model_element );
      connected_edges  : SET [1 : ?] OF edge;
  END_ENTITY;

  ENTITY connected_face_set
    SUBTYPE OF ( detailed_topological_model_element );
      connected_faces  : SET [1 : ?] OF face;
  END_ENTITY;

  ENTITY connected_face_sub_set
    SUBTYPE OF ( connected_face_set );
      parent_face_set  : connected_face_set;
  END_ENTITY;

  ENTITY connected_filled_area
    SUBTYPE OF ( conductive_filled_area );
      SELF\shape_element.containing_shape  : design_layer_stratum;
      implementation_requirement           : SET [1 : ?] OF intra_stratum_join_relationship;
    INVERSE
      join_component : SET [0 : ?] OF single_stratum_printed_component FOR stratum_feature_implementation;
    WHERE
      wr1: ( ( SIZEOF( implementation_requirement ) - SIZEOF( join_component ) ) = 1 );
      wr2: ( ( SIZEOF( join_component ) = 0 ) OR ( SIZEOF( QUERY ( jc <* join_component | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TIEBAR_PRINTED_COMPONENT'  IN TYPEOF( jc\
               assembly_component.occurrence_contexts[1]\product_occurrence_definition_relationship.relating_view ) ) AND ( 
               SIZEOF( jc\single_stratum_printed_component.stratum_feature_implementation ) :<>: 1 ) ) ) ) = 0 ) );
  END_ENTITY;

  ENTITY connection_zone
    SUPERTYPE OF ( 
        ONEOF ( 
            connection_zone_in_usage_view, 
            connection_zone_in_design_view ) )
    SUBTYPE OF ( shape_element );
    INVERSE
      surface_conditions : SET OF surface_condition FOR described_element;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
      wr2: ( NOT EXISTS( SELF\shape_element.element_name ) );
  END_ENTITY;

  ENTITY connection_zone_bare_die_interface_plane_relationship;
      interface_plane           : seating_plane;
      mating_zone               : connection_zone_in_usage_view;
      derived_zone              : connection_zone_in_usage_view;
      derived_zone_shape_class  : derived_zone_shape_class;
    INVERSE
      associated_bare_die_terminal : SET [0 : 1] OF bare_die_template_terminal FOR seating_plane_zone;
    UNIQUE
      ur1 : interface_plane, mating_zone;
  END_ENTITY;

  ENTITY connection_zone_based_assembly_joint
    SUBTYPE OF ( assembly_joint );
      zone_1  : connection_zone;
      zone_2  : connection_zone;
    WHERE
      wr1: ( zone_1 :<>: zone_2 );
  END_ENTITY;

  ENTITY connection_zone_based_fabrication_joint
    SUBTYPE OF ( fabrication_joint );
      zone_1  : connection_zone_in_design_view;
      zone_2  : connection_zone_in_design_view;
    WHERE
      wr1: ( zone_1 :<>: zone_2 );
  END_ENTITY;

  ENTITY connection_zone_in_design_view
    SUBTYPE OF ( connection_zone );
    DERIVE
      associated_definition  : part_design_view := SELF\shape_element.containing_shape.described_element;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.element_name ) );
  END_ENTITY;

  ENTITY connection_zone_in_layout_template
    SUBTYPE OF ( connection_zone, instanced_feature );
      SELF\shape_element.containing_shape  : template_definition;
      connection_zone_category             : OPTIONAL SET [1 : ?] OF land_connection_zone_class;
  END_ENTITY;

  ENTITY connection_zone_in_part_feature_template_definition
    SUBTYPE OF ( connection_zone );
    DERIVE
      associated_definition  : part_feature_template_definition := containing_shape.described_element;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.element_name ) );
  END_ENTITY;

  ENTITY connection_zone_in_usage_view
    SUBTYPE OF ( connection_zone );
    DERIVE
      associated_definition  : part_usage_view := containing_shape.described_element;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.element_name ) );
  END_ENTITY;

  ENTITY connection_zone_map_identification;
      reference_connection_zone_shape  : usage_view_connection_zone_terminal_shape_relationship;
      mapped_connection_zone_shape     : usage_view_connection_zone_terminal_shape_relationship;
    UNIQUE
      ur1 : reference_connection_zone_shape, mapped_connection_zone_shape;
    WHERE
      wr1: ( reference_connection_zone_shape <> mapped_connection_zone_shape );
      wr2: ( reference_connection_zone_shape.associated_connection_zone_shape_definition <> mapped_connection_zone_shape.
               associated_connection_zone_shape_definition );
  END_ENTITY;

  ENTITY connection_zone_package_interface_plane_relationship;
      interface_plane           : interface_plane_or_seating_plane;
      derived_zone              : connection_zone_in_part_feature_template_definition;
      derived_zone_shape_class  : STRING;
    INVERSE
      associated_package_terminal : SET [0 : 1] OF package_terminal_template_definition FOR seating_plane_zone;
    WHERE
      wr1: ( derived_zone_shape_class IN [ 'area', 'edge'] );
  END_ENTITY;

  ENTITY connectivity_allocation;
      implementation            : physical_connectivity_definition;
      connectivity_requirement  : aggregate_connectivity_requirement;
    UNIQUE
      ur1 : implementation;
  END_ENTITY;

  ENTITY connectivity_allocation_to_physical_network;
      implementation            : generic_physical_network;
      connectivity_requirement  : aggregate_connectivity_requirement;
    UNIQUE
      ur1 : implementation;
  END_ENTITY;

  ENTITY connector_based_interconnect_definition;
      name                   : STRING;
      associated_definition  : physical_unit_interconnect_definition;
      connector_in_uv_1      : next_assembly_usage;
      connector_in_uv_2      : next_assembly_usage;
      component_1            : next_assembly_usage;
      component_2            : next_assembly_usage;
    UNIQUE
      ur1 : name, associated_definition;
    WHERE
      wr1 : ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGED_CONNECTOR_COMPONENT' IN TYPEOF( 
                connector_in_uv_1\product_occurrence_definition_relationship.related_view ) );
      wr2 : ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGED_CONNECTOR_COMPONENT' IN TYPEOF( 
                connector_in_uv_2\product_occurrence_definition_relationship.related_view ) );
      wr3 : ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_USAGE_VIEW' IN TYPEOF( connector_in_uv_1\
                product_occurrence_definition_relationship.relating_view ) );
      wr4 : ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_USAGE_VIEW' IN TYPEOF( connector_in_uv_2\
                product_occurrence_definition_relationship.relating_view ) );
      wr5 : EXISTS( connector_in_uv_1\assembly_component_relationship.location_indicator );
      wr6 : EXISTS( connector_in_uv_2\assembly_component_relationship.location_indicator );
      wr7 : EXISTS( component_1\assembly_component_relationship.location_indicator );
      wr8 : EXISTS( component_2\assembly_component_relationship.location_indicator );
      wr9 : ( component_1\product_occurrence_definition_relationship.related_view\definition_based_product_occurrence.
                derived_from = connector_in_uv_1\product_occurrence_definition_relationship.relating_view );
      wr10: ( component_2\product_occurrence_definition_relationship.related_view\definition_based_product_occurrence.
                derived_from = connector_in_uv_2\product_occurrence_definition_relationship.relating_view );
      wr11: ( component_1 <> component_2 );
      wr12: ( component_1 <> connector_in_uv_1 );
      wr13: ( connector_in_uv_1 <> component_2 );
      wr14: ( component_1 <> connector_in_uv_2 );
      wr15: ( connector_in_uv_2 <> component_2 );
      wr16: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DEFINITION_BASED_PART_OCCURRENCE' IN TYPEOF( 
                component_1\product_occurrence_definition_relationship.related_view ) );
      wr17: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DEFINITION_BASED_PART_OCCURRENCE' IN TYPEOF( 
                component_2\product_occurrence_definition_relationship.related_view ) );
      wr18: ( associated_definition = component_1\product_occurrence_definition_relationship.relating_view );
      wr19: ( associated_definition = component_2\product_occurrence_definition_relationship.relating_view );
  END_ENTITY;

  ENTITY constant_radius_edge_round
    SUBTYPE OF ( edge_round );
      first_face_offset   : OPTIONAL numerical_item_with_unit;
      second_face_offset  : OPTIONAL numerical_item_with_unit;
      radius              : numerical_item_with_unit;
  END_ENTITY;

  ENTITY constant_radius_fillet
    SUBTYPE OF ( fillet );
      first_face_offset   : OPTIONAL numerical_item_with_unit;
      second_face_offset  : OPTIONAL numerical_item_with_unit;
      radius              : numerical_item_with_unit;
  END_ENTITY;

  ENTITY constituent_part
    SUPERTYPE OF ( 
        ONEOF ( 
            ply, 
            ply_piece, 
            ply_laminate, 
            filament_laminate, 
            processed_core, 
            composite_assembly ) )
    SUBTYPE OF ( part_view_definition );
      SELF\product_view_definition.id  : STRING;
      weight                           : OPTIONAL mass_data_element;
    DERIVE
      constituent_part_identification  : STRING := SELF\product_view_definition.id;
  END_ENTITY;

  ENTITY constituent_shape_representation
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            three_d_geometry_set, 
            composite_sheet_representation, 
            beveled_sheet_representation ) )
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY constrained_kinematic_motion_representation
    SUBTYPE OF ( geometric_relationship_with_placement_transformation );
      SELF\representation_relationship.rep_1 : representative_geometric_model;
      SELF\representation_relationship.rep_2 : representative_geometric_model;
  END_ENTITY;

  ENTITY constraint_occurrence
    SUPERTYPE OF ( 
        view_based_constraint_occurrence )
    SUBTYPE OF ( predefined_requirement_view_definition );
      logical_relation  : OPTIONAL complex_clause;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'VIEW_BASED_CONSTRAINT_OCCURRENCE' ) IN 
               TYPEOF( SELF ) ) OR EXISTS( logical_relation ) );
      wr2: ( NOT EXISTS( SELF\product_view_definition.id ) );
  END_ENTITY;

  ENTITY constructive_geometry
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : geometric_coordinate_space;
      SELF\representation.items             : SET [1 : ?] OF constructive_element_select;
  END_ENTITY;

  ENTITY constructive_geometry_association;
      auxiliary_geometry  : constructive_geometry;
      base_geometry       : constructive_geometry_select;
      description         : STRING;
    WHERE
      wr1: ( auxiliary_geometry\representation.context_of_items :=: base_geometry\representation.context_of_items );
  END_ENTITY;

  ENTITY contact_ratio
    SUBTYPE OF ( surface_condition );
      ratio_value      : measure_item;
      measuring_gauge  : measuring_gauge_select;
    DERIVE
      SELF\assigned_property.name  : STRING := 'contact ratio';
  END_ENTITY;

  ENTITY contact_size_dependent_land
    SUBTYPE OF ( land );
      SELF\definition_based_product_occurrence.derived_from : default_attachment_size_based_land_physical_template;
    INVERSE
      external_access_mechanism : SET [1 : 2] OF land_interface_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY contacting_feature
    SUBTYPE OF ( non_definitional_shape_element );
  END_ENTITY;

  ENTITY context_dependent_appearance_assignment
    SUBTYPE OF ( appearance_assignment );
      context_definition  : appearance_context;
  END_ENTITY;

  ENTITY context_dependent_kinematic_link_representation;
      representation_relation       : kinematic_link_representation_association;
      represented_product_relation  : product_definition_relationship_kinematics;
  END_ENTITY;

  ENTITY context_dependent_over_riding_styled_element
    SUBTYPE OF ( over_riding_styled_element );
      context_definition  : LIST [1 : ?] OF overriding_style_context;
  END_ENTITY;

  ENTITY context_dependent_unit
    SUBTYPE OF ( unit );
    WHERE
      wr1: EXISTS( SELF\unit.name );
  END_ENTITY;

  ENTITY contextual_item_shape
    SUBTYPE OF ( item_shape );
      SELF\item_shape.described_element  : described_element_select;
    DERIVE
      shaped_product  : product_view_definition := spa_get_definition( SELF );
  END_ENTITY;

  ENTITY contextual_shape_representation;
      contextual_shape           : contextual_item_shape;
      representing_relationship  : geometric_model_relationship;
    DERIVE
      context_representation     : geometric_representation_select := representing_relationship.rep_2;
      positioned_representation  : geometric_representation_select := representing_relationship.rep_1;
  END_ENTITY;

  ENTITY continuous_shape_element
    SUPERTYPE OF ( 
        ONEOF ( 
            between_shape_element, 
            all_around_shape_element ) )
    SUBTYPE OF ( composite_shape_element );
  END_ENTITY;

  ENTITY continuous_template
    SUBTYPE OF ( geometric_template );
    WHERE
      wr1: ( SIZEOF( QUERY ( s <* SELF\geometric_template.shapes | ( NOT ( SIZEOF( [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_AREA_CSG_2D_MODEL' ] * TYPEOF( s ) ) = 
               1 ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY contract;
      id       : STRING;
      purpose  : STRING;
      kind     : STRING;
  END_ENTITY;

  ENTITY contract_assignment;
      assigned_contract  : contract;
      items              : SET [1 : ?] OF contract_item;
  END_ENTITY;

  ENTITY contract_relationship;
      relating_contract  : contract;
      related_contract   : contract;
  END_ENTITY;

  ENTITY control_grid_appearance
    SUBTYPE OF ( surface_related_curve_appearance );
  END_ENTITY;

  ENTITY conversion_based_unit
    SUBTYPE OF ( unit );
      conversion_factor  : value_with_unit;
    WHERE
      wr1: EXISTS( SELF\unit.name );
  END_ENTITY;

  ENTITY coordinated_geometric_relationship_with_2d_3d_placement_transformation
    SUBTYPE OF ( geometric_model_relationship_with_transformation );
      transformation  : axis_placement_2d_3d_mapping;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DEFINITIONAL_REPRESENTATION_RELATIONSHIP' 
               IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY coordinates_list
    SUBTYPE OF ( tessellated_item );
      npoints          : INTEGER;
      position_coords  : LIST [1 : ?] OF LIST [3 : 3] OF REAL;
    WHERE
      wr1: ( npoints = SIZEOF( position_coords ) );
      wr2: ( SIZEOF( [ 'GEOMETRIC_MODEL_SCHEMA.REPOSITIONED_TESSELLATED_ITEM'] * TYPEOF( SELF ) ) = 0 );
  END_ENTITY;

  ENTITY copy_stratum_technology_occurrence_relationship
    SUBTYPE OF ( derived_stratum_technology_occurrence_relationship );
  END_ENTITY;

  ENTITY cos_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY counterbore_hole
    SUBTYPE OF ( hole );
      smaller_hole  : round_hole;
      larger_hole   : round_hole;
  END_ENTITY;

  ENTITY counterbore_passage_template
    SUBTYPE OF ( unsupported_passage_template );
      smaller_passage  : unsupported_passage_template;
      larger_passage   : blind_passage_template;
  END_ENTITY;

  ENTITY countersunk_hole
    SUBTYPE OF ( hole );
      constant_diameter_hole  : round_hole;
      tapered_hole            : round_hole;
  END_ENTITY;

  ENTITY countersunk_passage_template
    SUBTYPE OF ( unsupported_passage_template );
      constant_diameter_passage  : unsupported_passage_template;
      tapered_passage            : blind_passage_template;
  END_ENTITY;

  ENTITY csg_2d_model
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : ?] OF primitive_or_boolean_result_2d;
    WHERE
      wr1: ( SELF\geometric_model.context_of_items\geometric_coordinate_space.dimension_count = 2 );
  END_ENTITY;

  ENTITY csg_model
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY currency
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            external_currency, 
            iso4217_currency ) )
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY currency_value
    SUBTYPE OF ( value_with_unit );
      SELF\value_with_unit.unit  : currency;
  END_ENTITY;

  ENTITY curve
    SUPERTYPE OF ( 
        ONEOF ( 
            conic, 
            line ) )
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY curve_appearance;
      colour  : colour;
      font    : curve_font;
      width   : REAL;
  END_ENTITY;

  ENTITY curve_based_path
    SUBTYPE OF ( path_node );
      path_curve  : curve;
  END_ENTITY;

  ENTITY curve_based_path_with_orientation
    SUBTYPE OF ( kinematic_path_segment );
      position_curve     : bounded_curve;
      orientation_curve  : bounded_curve;
    WHERE
      wr1: ( TYPEOF( position_curve ) = TYPEOF( orientation_curve ) );
  END_ENTITY;

  ENTITY curve_based_path_with_orientation_and_parameters
    SUBTYPE OF ( curve_based_path_with_orientation );
      parameters  : path_parameter_representation;
  END_ENTITY;

  ENTITY curve_bounded_surface
    SUBTYPE OF ( bounded_surface );
      basis_surface   : surface;
      boundaries      : SET [1 : ?] OF boundary_curve;
      implicit_outer  : BOOLEAN;
    WHERE
      wr1: ( ( NOT implicit_outer ) OR ( 'BASIC_GEOMETRY.BOUNDED_SURFACE' IN TYPEOF( basis_surface ) ) );
  END_ENTITY;

  ENTITY curve_distance_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : 2] OF curve;
      SELF\explicit_constraint.reference_elements : SET [0 : 4] OF point_curve_or_surface;
      near_points                            : SET [0 : 4] OF near_point_relationship;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) > 0 ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIMENSIONED_CURVE_DISTANCE_CONSTRAINT'  IN 
               TYPEOF( SELF ) ) AND ( SIZEOF( SELF\explicit_constraint.constrained_elements ) = 2 ) ) );
      wr2: ( SIZEOF( near_points ) <= SIZEOF( SELF\explicit_constraint.reference_elements ) );
      wr3: ( SIZEOF( QUERY ( q <* near_points | ( NOT ( q.relating_item IN SELF\explicit_constraint.reference_elements ) ) ) ) = 
               0 );
  END_ENTITY;

  ENTITY curve_font
    SUPERTYPE OF ( 
        ONEOF ( 
            externally_defined_curve_font, 
            predefined_curve_font, 
            user_defined_curve_font ) );
      curve_font_name  : STRING;
  END_ENTITY;

  ENTITY curve_font_pattern;
      on_segment   : REAL;
      off_segment  : REAL;
  END_ENTITY;

  ENTITY curve_length_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF curve;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 0 );
  END_ENTITY;

  ENTITY curve_segment_set
    SUBTYPE OF ( detailed_geometric_model_element );
      segments  : SET [1 : ?] OF composite_curve_segment;
  END_ENTITY;

  ENTITY curve_smoothness_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : 1] OF curve_segment_set;
      smoothness                             : curve_transition_code;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 0 );
  END_ENTITY;

  ENTITY curve_style_parameters
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            closed_curve_style_parameters, 
            curve_style_parameters_with_ends ) );
      name               : STRING;
      corner_style       : extend_or_chord_2_extend_or_truncate_or_round;
      curve_width        : length_data_element;
      width_uncertainty  : OPTIONAL length_data_element;
    UNIQUE
      ur1 : name;
  END_ENTITY;

  ENTITY curve_style_parameters_with_ends
    SUBTYPE OF ( curve_style_parameters );
      end_extension  : extend_or_truncate;
      end_style      : square_or_round;
  END_ENTITY;

  ENTITY curve_swept_solid
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY curve_with_excessive_segments
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'B_SPLINE_OR_COMPOSITE_CURVE_SELECT' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY curve_with_explicit_knots
    SUBTYPE OF ( b_spline_curve );
      knot_multiplicities  : LIST [2 : ?] OF INTEGER;
      knot_values          : LIST [2 : ?] OF parameter_value;
    WHERE
      wr1: ( SIZEOF( knot_multiplicities ) = SIZEOF( knot_values ) );
  END_ENTITY;

  ENTITY curve_with_implicit_knots
    SUBTYPE OF ( b_spline_curve );
      knot_type  : knot_specification;
  END_ENTITY;

  ENTITY curve_with_small_curvature_radius
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'POINT_ON_CURVE' ] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY curved_distance
    SUBTYPE OF ( dimensional_location );
      used_path  : measurement_path;
  END_ENTITY;

  ENTITY curved_size
    SUBTYPE OF ( dimensional_size );
  END_ENTITY;

  ENTITY cutout
    SUPERTYPE OF ( 
        ONEOF ( 
            physical_connectivity_interrupting_cutout, 
            plated_cutout, 
            partially_plated_cutout ) )
    SUBTYPE OF ( inter_stratum_feature );
      vertical_reference  : OPTIONAL interconnect_module_edge;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr2: ( SIZEOF( QUERY ( shape <* SELF\inter_stratum_feature.derived_from\geometric_template.shapes | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL'  IN TYPEOF( 
               shape ) ) ) ) ) = 0 );
      wr3: ( EXISTS( SELF\inter_stratum_feature.vertical_extent ) XOR EXISTS( vertical_reference ) );
  END_ENTITY;

  ENTITY cutout_edge_segment
    SUPERTYPE OF ( 
        plated_cutout_edge_segment )
    SUBTYPE OF ( inter_stratum_feature );
      composed_cutout                        : cutout;
      start_vertex                           : edge_segment_vertex;
      end_vertex                             : edge_segment_vertex;
      SELF\inter_stratum_feature.derived_from : inter_stratum_feature_edge_segment_template;
    WHERE
      wr1: ( start_vertex :<>: end_vertex );
  END_ENTITY;

  ENTITY cutout_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            circular_cutout, 
            general_cutout ) )
    SUBTYPE OF ( pocket );
      SELF\pocket.bottom_condition  : through_pocket_bottom_condition;
  END_ENTITY;

  ENTITY cylindrical_pair
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := TRUE;
  END_ENTITY;

  ENTITY cylindrical_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : cylindrical_pair;
      actual_translation               : length_measure;
      actual_rotation                  : plane_angle_measure;
  END_ENTITY;

  ENTITY cylindrical_pair_with_range
    SUBTYPE OF ( cylindrical_pair );
      lower_limit_actual_translation  : OPTIONAL length_measure;
      upper_limit_actual_translation  : OPTIONAL length_measure;
      lower_limit_actual_rotation     : OPTIONAL plane_angle_measure;
      upper_limit_actual_rotation     : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_actual_translation ) ) OR ( NOT EXISTS( upper_limit_actual_translation ) ) ) XOR ( 
               lower_limit_actual_translation < upper_limit_actual_translation ) );
      wr2: ( ( ( NOT EXISTS( lower_limit_actual_rotation ) ) OR ( NOT EXISTS( upper_limit_actual_rotation ) ) ) XOR ( 
               lower_limit_actual_rotation < upper_limit_actual_rotation ) );
  END_ENTITY;

  ENTITY cylindrical_surface
    SUBTYPE OF ( surface );
      position  : axis_placement_3d;
      radius    : length_measure;
    WHERE
      wr1: ( radius > 0 );
  END_ENTITY;

  ENTITY cylindricity_tolerance
    SUBTYPE OF ( geometric_tolerance );
  END_ENTITY;

  ENTITY data_environment;
      environment_name              : STRING;
      description                   : OPTIONAL STRING;
      environment_characterization  : SET [1 : ?] OF dependent_or_independent_property_representation;
  END_ENTITY;

  ENTITY data_quality_assessment_measurement_association;
      assessment_specification  : data_quality_criterion_assessment_association;
      measurement_requirement   : data_quality_criterion_measurement_association;
    WHERE
      wr1: ( SELF.measurement_requirement.relating_representation_item :=: SELF.assessment_specification.criterion );
  END_ENTITY;

  ENTITY data_quality_assessment_specification;
      description  : STRING;
  END_ENTITY;

  ENTITY data_quality_criteria_representation
    SUBTYPE OF ( representation );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_CRITERION' ) IN TYPEOF( q ) ) ) ) 
               > 0 );
  END_ENTITY;

  ENTITY data_quality_criterion
    SUBTYPE OF ( representation_item );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION'  ) IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY data_quality_criterion_assessment_association;
      criterion                 : data_quality_criterion;
      assessment_specification  : data_quality_assessment_specification;
  END_ENTITY;

  ENTITY data_quality_criterion_measurement_association;
      relating_representation_item  : data_quality_criterion;
      related_representation_item   : data_quality_measurement_requirement;
  END_ENTITY;

  ENTITY data_quality_definition;
      description  : STRING;
  END_ENTITY;

  ENTITY data_quality_definition_relationship;
      description                       : STRING;
      relating_data_quality_definition  : data_quality_definition;
      related_data_quality_definition   : data_quality_definition;
  END_ENTITY;

  ENTITY data_quality_definition_representation_relationship;
      description          : STRING;
      definition           : data_quality_definition;
      used_representation  : used_quality_representation_select;
  END_ENTITY;

  ENTITY data_quality_inspection_criterion_report
    SUBTYPE OF ( data_quality_inspection_report );
      statistical_values  : SET [1 : 2] OF data_quality_inspection_criterion_report_item;
    WHERE
      wr1: ( SIZEOF( QUERY ( i1 <* bag_to_set( USEDIN( SELF\data_quality_inspection_report.inspection_result.criterion_inspected, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_REPORT_REQUEST.'
               + 'CRITERION_OF_REPORT_REQUEST'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' +
               'SUMMARY_REPORT_REQUEST' ) IN TYPEOF( i1 ) ) ) ) > 0 );
      wr2: ( ( SIZEOF( SELF.statistical_values ) = 1 ) OR ( SELF.statistical_values[1].value_type <> SELF.statistical_values[2].
               value_type ) );
  END_ENTITY;

  ENTITY data_quality_inspection_criterion_report_item
    SUBTYPE OF ( representation_item );
      statistical_value  : INTEGER;
      value_type         : statistical_value_type;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERIA_REPRESENTATION'  ) IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY data_quality_inspection_instance_report
    SUBTYPE OF ( data_quality_inspection_report );
      inspected_instances  : LIST [1 : ?] OF data_quality_inspection_instance_report_item;
    WHERE
      wr1: ( SIZEOF( QUERY ( i1 <* bag_to_set( USEDIN( SELF\data_quality_inspection_report.inspection_result.criterion_inspected, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_REPORT_REQUEST.'
               + 'CRITERION_OF_REPORT_REQUEST'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' +
               'DETAILED_REPORT_REQUEST' ) IN TYPEOF( i1 ) ) ) ) > 0 );
  END_ENTITY;

  ENTITY data_quality_inspection_instance_report_item
    SUBTYPE OF ( representation_item );
      inspected_elements  : SET [1 : ?] OF inspected_element_select;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERIA_REPRESENTATION'  ) IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY data_quality_inspection_report
    SUPERTYPE OF ( 
        ONEOF ( 
            data_quality_inspection_criterion_report, 
            data_quality_inspection_instance_report ) )
    SUBTYPE OF ( representation_item );
      inspection_result  : data_quality_inspection_result;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERIA_REPRESENTATION'  ) IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY data_quality_inspection_result
    SUBTYPE OF ( representation_item );
      criterion_inspected  : data_quality_criterion;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERIA_REPRESENTATION'  ) IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY data_quality_inspection_result_representation
    SUBTYPE OF ( representation );
      criteria_inspected  : data_quality_criteria_representation;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_RESULT' ) IN 
               TYPEOF( q ) ) ) ) > 0 );
      wr2: ( SIZEOF( inspected_product_view_definition( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY data_quality_inspection_result_with_judgement
    SUBTYPE OF ( data_quality_inspection_result );
      judgement  : BOOLEAN;
  END_ENTITY;

  ENTITY data_quality_measurement_requirement
    SUBTYPE OF ( representation_item );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION'  ) IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY data_quality_report_measurement_association;
      relating_representation_item  : data_quality_measurement_requirement;
      related_representation_item   : data_quality_inspection_report;
  END_ENTITY;

  ENTITY data_quality_report_request
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            summary_report_request, 
            detailed_report_request ) );
      description                  : STRING;
      criterion_of_report_request  : data_quality_criterion;
  END_ENTITY;

  ENTITY date;
      year_component  : year_number;
  END_ENTITY;

  ENTITY date_or_date_time_assignment
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_date_or_date_time_assignment, 
            externally_defined_date_or_date_time_assignment ) );
      assigned_date  : date_or_date_time_select;
      role           : STRING;
      items          : SET [1 : ?] OF date_or_date_time_item;
  END_ENTITY;

  ENTITY date_time;
      date_component  : calendar_date;
      time_component  : local_time;
  END_ENTITY;

  ENTITY date_time_representation_item
    SUBTYPE OF ( representation_item );
      the_value  : date_or_date_time_select;
  END_ENTITY;

  ENTITY dated_effectivity
    SUBTYPE OF ( effectivity );
      start_bound  : OPTIONAL date_or_event;
      end_bound    : OPTIONAL date_or_event;
    WHERE
      wr1: ( EXISTS( start_bound ) OR EXISTS( end_bound ) );
  END_ENTITY;

  ENTITY datum
    SUBTYPE OF ( shape_element );
      identification  : identifier;
  END_ENTITY;

  ENTITY datum_difference;
      precedent_datum   : shape_element;
      subsequent_datum  : shape_element;
  END_ENTITY;

  ENTITY datum_difference_based_characteristic
    SUBTYPE OF ( representation_item );
      of_datum_difference  : datum_difference;
  END_ENTITY;

  ENTITY datum_difference_based_model_parameter
    SUBTYPE OF ( model_parameter );
      of_datum_difference  : datum_difference;
  END_ENTITY;

  ENTITY datum_difference_functional_unit_usage_view_terminal_assignment;
      assigned_functional_terminal_definition : functional_unit_usage_view_terminal_definition;
      assigned_datum_difference              : datum_difference;
  END_ENTITY;

  ENTITY datum_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            dimensional_location_with_datum_feature, 
            dimensional_size_with_datum_feature ) )
    SUBTYPE OF ( definitional_shape_element );
      of_datum  : datum;
    UNIQUE
      ur1 : of_datum;
  END_ENTITY;

  ENTITY datum_feature_callout
    SUBTYPE OF ( draughting_element );
  END_ENTITY;

  ENTITY datum_reference_compartment
    SUBTYPE OF ( general_datum_reference );
      point_situation_feature          : OPTIONAL point_shape_element;
      plane_situation_feature          : OPTIONAL plane_shape_element;
      straight_line_situation_feature  : OPTIONAL axis_placement_shape_element;
    INVERSE
      owner : datum_system FOR constituents;
  END_ENTITY;

  ENTITY datum_reference_element
    SUBTYPE OF ( general_datum_reference );
    DERIVE
      usage  : general_datum_reference := sts_get_general_datum_reference( SELF );
    WHERE
      wr1: ( SELF <> usage );
      wr2: EXISTS( usage );
  END_ENTITY;

  ENTITY datum_reference_modifier_with_value;
      modifier_type   : datum_reference_modifier_type;
      modifier_value  : length_data_element;
  END_ENTITY;

  ENTITY datum_system
    SUBTYPE OF ( non_definitional_shape_element );
      constituents  : LIST [1 : 3] OF UNIQUE datum_reference_compartment;
  END_ENTITY;

  ENTITY datum_system_with_associated_model_coordinate_system
    SUBTYPE OF ( axis_placement_shape_element, datum_system );
  END_ENTITY;

  ENTITY datum_target
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            placed_target, 
            target_area, 
            target_curve ) )
    SUBTYPE OF ( shape_element );
      target_id           : STRING;
      movement_direction  : OPTIONAL direction;
      of_datum            : datum;
      target_feature      : OPTIONAL shape_element;
    UNIQUE
      ur1 : of_datum, target_id;
  END_ENTITY;

  ENTITY datum_target_callout
    SUBTYPE OF ( draughting_element );
  END_ENTITY;

  ENTITY default_assembly_bond_shape_model
    SUBTYPE OF ( geometric_model );
      shape_characterized_definition  : assembly_bond_definition;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.description ) );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION'  ) ) = 0 );
  END_ENTITY;

  ENTITY default_attachment_size_based_land_physical_template
    SUBTYPE OF ( land_physical_template, definitional_shape_element );
    DERIVE
      SELF\shape_element.containing_shape  : default_attachment_size_based_land_physical_template := SELF;
      SELF\shape_element.element_name      : STRING := '';
    INVERSE
      interface_access_mechanisms : SET [1 : ?] OF land_template_interface_terminal FOR containing_shape;
    WHERE
      wr1: ( ( NOT ( SIZEOF( interface_access_mechanisms[1].connection_area ) > 0 ) ) OR ( 'minimum attachment region size' IN 
               list_get_zone_name( interface_access_mechanisms[1].connection_area ) ) );
      wr2: ( ( NOT ( SIZEOF( interface_access_mechanisms[1].connection_area ) > 1 ) ) OR ( SIZEOF( [
               'maximum attachment region size' , 'heel area', 'toe area'] * list_get_zone_name( interface_access_mechanisms[1].
               connection_area ) ) = 1 ) );
      wr3: ( ( NOT ( SIZEOF( interface_access_mechanisms[1].connection_area ) > 2 ) ) OR ( SIZEOF( [
               'maximum attachment region size' , 'heel area', 'toe area'] * list_get_zone_name( interface_access_mechanisms[1].
               connection_area ) ) = 2 ) );
      wr4: ( ( NOT ( SIZEOF( interface_access_mechanisms[1].connection_area ) > 3 ) ) OR ( SIZEOF( [
               'maximum attachment region size' , 'heel area', 'toe area'] * list_get_zone_name( interface_access_mechanisms[1].
               connection_area ) ) = 3 ) );
      wr5: ( NOT EXISTS( SELF\definitional_shape_element.connection_area ) );
      wr6: ( SIZEOF( interface_access_mechanisms ) = 1 );
      wr7: ( SELF\shape_element.id = SELF\item_shape.id );
  END_ENTITY;

  ENTITY default_chamfer
    SUBTYPE OF ( default_shape_property );
      offset_value  : length_data_element;
    DERIVE
      SELF\assigned_property.name  : STRING := 'default chamfer';
  END_ENTITY;

  ENTITY default_component_termination_passage_definition
    SUBTYPE OF ( passage_technology );
      allowed_component_terminal_extent      : length_tolerance_characteristic;
      SELF\passage_technology.as_finished_deposition_thickness : length_tolerance_characteristic;
      SELF\passage_technology.as_finished_passage_extent : ft_value_select;
    INVERSE
      SELF\passage_technology.deposition_material : SET [1 : 1] OF passage_deposition_material_identification FOR items;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( deposition_material[1] ) );
  END_ENTITY;

  ENTITY default_draft_angle
    SUBTYPE OF ( default_shape_property );
      draft_angle_value  : angle_data_element;
    DERIVE
      SELF\assigned_property.name  : STRING := 'default draft angle';
  END_ENTITY;

  ENTITY default_edge_round
    SUBTYPE OF ( default_shape_property );
      radius_value  : length_data_element;
    DERIVE
      SELF\assigned_property.name  : STRING := 'default edge round';
  END_ENTITY;

  ENTITY default_fillet
    SUBTYPE OF ( default_shape_property );
      radius_value  : length_data_element;
    DERIVE
      SELF\assigned_property.name  : STRING := 'default fillet';
  END_ENTITY;

  ENTITY default_passage_based_land_physical_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            default_plated_passage_based_land_physical_template, 
            default_unsupported_passage_based_land_physical_template ) )
    SUBTYPE OF ( land_physical_template );
      of_passage_technology  : passage_technology;
  END_ENTITY;

  ENTITY default_plated_passage_based_land_physical_template
    SUBTYPE OF ( default_passage_based_land_physical_template );
    WHERE
      wr1: ( SELF\default_passage_based_land_physical_template.of_passage_technology.plated_passage = TRUE );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DEFAULT_VIA_DEFINITION' IN TYPEOF( SELF\
               default_passage_based_land_physical_template.of_passage_technology ) ) ) OR ( SIZEOF( QUERY ( ltjt <* SELF\
               land_physical_template.access_mechanisms | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND_TEMPLATE_JOIN_TERMINAL'  IN TYPEOF( ltjt ) ) ) ) ) 
               = 0 ) );
  END_ENTITY;

  ENTITY default_shape_property
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            default_chamfer, 
            default_draft_angle, 
            default_edge_round, 
            default_fillet, 
            default_thickness ) )
    SUBTYPE OF ( assigned_shape_property );
      SELF\assigned_shape_property.described_element : item_shape;
  END_ENTITY;

  ENTITY default_tapered_blind_via_definition
    SUBTYPE OF ( default_via_definition );
      as_finished_interior_passage_extent  : length_tolerance_characteristic;
    WHERE
      wr1: less( as_finished_interior_passage_extent, SELF\default_via_definition.as_finished_passage_extent );
  END_ENTITY;

  ENTITY default_thickness
    SUBTYPE OF ( default_shape_property );
      thickness_value  : length_data_element;
      parameter_name   : OPTIONAL STRING;
    DERIVE
      SELF\assigned_property.name  : STRING := 'default thickness';
  END_ENTITY;

  ENTITY default_trace_template
    SUBTYPE OF ( trace_template );
      of_stratum_technology  : stratum_technology;
  END_ENTITY;

  ENTITY default_unsupported_passage_based_land_physical_template
    SUBTYPE OF ( default_passage_based_land_physical_template );
      SELF\default_passage_based_land_physical_template.of_passage_technology : default_unsupported_passage_definition;
  END_ENTITY;

  ENTITY default_unsupported_passage_definition
    SUBTYPE OF ( passage_technology );
      SELF\passage_technology.as_finished_passage_extent : ft_value_select;
  END_ENTITY;

  ENTITY default_via_definition
    SUBTYPE OF ( passage_technology );
      SELF\passage_technology.as_finished_deposition_thickness : length_tolerance_characteristic;
      SELF\passage_technology.as_finished_passage_extent : ft_value_select;
    INVERSE
      SELF\passage_technology.deposition_material : SET [1 : 1] OF passage_deposition_material_identification FOR items;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( deposition_material[1] ) );
  END_ENTITY;

  ENTITY defined_character_glyph
    SUBTYPE OF ( detailed_geometric_model_element );
      placement  : axis_placement;
  END_ENTITY;

  ENTITY defined_constraint
    ABSTRACT SUPERTYPE OF ( 
        equal_parameter_constraint )
    SUBTYPE OF ( explicit_constraint );
  END_ENTITY;

  ENTITY defined_function
    ABSTRACT SUPERTYPE;
  END_ENTITY;

  ENTITY defined_gear
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            bevel_gear, 
            helical_gear, 
            spur_gear ) )
    SUBTYPE OF ( gear );
  END_ENTITY;

  ENTITY defined_marking
    SUBTYPE OF ( marking_feature );
      font_name            : OPTIONAL text;
      special_instruction  : OPTIONAL text;
      character_spacing    : OPTIONAL numerical_item_with_unit;
      character_height     : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY defined_thread
    SUBTYPE OF ( thread );
      crest           : OPTIONAL numerical_item_with_unit;
      minor_diameter  : OPTIONAL numerical_item_with_unit;
      pitch_diameter  : OPTIONAL numerical_item_with_unit;
      major_diameter  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY definition_based_product_occurrence
    SUBTYPE OF ( product_occurrence );
      derived_from  : part_view_definition;
    WHERE
      wr1: ( SELF\product_view_definition.defined_version = derived_from.defined_version );
  END_ENTITY;

  ENTITY definitional_representation
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : parametric_representation_context;
  END_ENTITY;

  ENTITY definitional_representation_relationship
    SUBTYPE OF ( representation_relationship );
    WHERE
      wr1: acyclic_representation_relationship( SELF, [SELF\representation_relationship.rep_2], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'REPRESENTATION' );
  END_ENTITY;

  ENTITY definitional_shape_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            path_element, 
            planar_element, 
            direction_element, 
            location_element, 
            face_shape_element ) )
    SUBTYPE OF ( shape_element );
      connection_area  : OPTIONAL SET [1 : ?] OF connection_zone;
    INVERSE
      surface_conditions : SET OF surface_condition FOR described_element;
    UNIQUE
      ur1 : SELF\shape_element.element_name, SELF\shape_element.containing_shape;
  END_ENTITY;

  ENTITY delete_element
    SUBTYPE OF ( change_element );
      previous_design_object  : SET [1 : ?] OF change_management_object;
  END_ENTITY;

  ENTITY deleted_face_solid
    SUPERTYPE OF ( 
        ONEOF ( 
            deleted_face_solid_with_offsets, 
            complex_deleted_face_solid ) )
    SUBTYPE OF ( modified_solid );
      deleted_faces  : SET [1 : ?] OF advanced_face;
      thickness      : length_measure;
    WHERE
      wr1: ( thickness <> 0 );
  END_ENTITY;

  ENTITY deleted_face_solid_with_offsets
    SUBTYPE OF ( deleted_face_solid );
      thickness2  : length_measure;
    WHERE
      wr1: ( thickness2 <> 0 );
      wr2: ( SELF\deleted_face_solid.thickness <> thickness2 );
  END_ENTITY;

  ENTITY dependent_electrical_isolation_removal_component
    SUBTYPE OF ( electrical_isolation_laminate_component );
      SELF\electrical_isolation_laminate_component.derived_from : dependent_electrical_isolation_removal_template;
    DERIVE
      SELF\material_removal_laminate_component.causal_item : land := land_get_associated_land_for_electrical_removal( SELF );
      associated_land                        : land := SELF\material_removal_laminate_component.causal_item;
    WHERE
      wr1: ( associated_land\definition_based_product_occurrence.derived_from :=: SELF\definition_based_product_occurrence.
               derived_from\dependent_electrical_isolation_removal_template.associated_item );
      wr2: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MULTI_LAYER_MATERIAL_REMOVAL_LAMINATE_COMPONENT'  IN TYPEOF( SELF ) ) );
      wr3: ( associated_land\land.functional = FALSE );
  END_ENTITY;

  ENTITY dependent_electrical_isolation_removal_template
    SUBTYPE OF ( electrical_isolation_removal_template );
      associated_item  : land_physical_template_or_inter_stratum_feature_template;
    WHERE
      wr1: ( SIZEOF( QUERY ( dtlipd <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE'  ) | ( NOT ( SIZEOF( QUERY ( tlist <* USEDIN( 
               associated_item, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE'  ) | ( NOT ( ( tlist\
               template_location_in_structured_template.assembly :=: dtlipd\template_location_in_structured_template.assembly ) 
               AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'DEPENDENT_TEMPLATE_LOCATION_IN_PADSTACK_DEFINITION'  IN TYPEOF( dtlipd ) ) AND ( tlist :=: dtlipd\
               dependent_template_location_in_padstack_definition.reference_location ) ) ) ) ) = 0 ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY dependent_template_location_in_padstack_definition
    SUBTYPE OF ( stratum_specific_template_location );
      reference_location                     : location_stratum_technology_occurrence_or_stratum_technology;
      SELF\template_location_in_structured_template.assembly : multi_stratum_structured_template;
    WHERE
      wr1: ( SELF\stratum_specific_template_location.bound_stratum :<>: reference_location );
      wr2: ( SELF <> reference_location );
      wr3: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE' 
               IN TYPEOF( reference_location ) ) ) OR ( assembly :=: reference_location\template_location_in_structured_template.
               assembly ) );
      wr4: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_STACK_DEPENDENT_TEMPLATE' IN 
               TYPEOF( assembly ) ) ) OR ( reference_location IN assembly\stratum_stack_dependent_template.stack\
               stratum_stack_model.composing_occurrence ) );
      wr5: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
               TYPEOF( reference_location ) ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_TECHNOLOGY_OCCURRENCE'  IN TYPEOF( SELF\stratum_specific_template_location.bound_stratum ) ) );
      wr6: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
               TYPEOF( reference_location ) ) ) OR ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_STACK_DEPENDENT_TEMPLATE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PASSAGE_PADSTACK_DEFINITION' ] * TYPEOF( assembly ) ) = 2 ) );
  END_ENTITY;

  ENTITY dependent_thermal_isolation_removal_component
    SUBTYPE OF ( thermal_isolation_removal_component );
      SELF\thermal_isolation_removal_component.derived_from : dependent_thermal_isolation_removal_template;
    DERIVE
      associated_land  : land := land_get_associated_land_for_thermal_removal( SELF );
    WHERE
      wr1: ( associated_land\definition_based_product_occurrence.derived_from :=: SELF\thermal_isolation_removal_component.
               derived_from\dependent_thermal_isolation_removal_template.associated_item );
      wr2: ( associated_land\land.functional = TRUE );
  END_ENTITY;

  ENTITY dependent_thermal_isolation_removal_template
    SUBTYPE OF ( thermal_isolation_removal_template );
      associated_item  : land_physical_template;
    WHERE
      wr1: ( SIZEOF( QUERY ( dtlipd <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE'  ) | ( NOT ( SIZEOF( QUERY ( tlist <* USEDIN( 
               associated_item, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_LOCATION_IN_STRUCTURED_TEMPLATE.TEMPLATE'  ) | ( NOT ( ( tlist\
               template_location_in_structured_template.assembly :=: dtlipd\template_location_in_structured_template.assembly ) 
               AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'DEPENDENT_TEMPLATE_LOCATION_IN_PADSTACK_DEFINITION'  IN TYPEOF( dtlipd ) ) AND ( tlist :=: dtlipd\
               dependent_template_location_in_padstack_definition.reference_location ) ) ) ) ) = 0 ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY dependently_located_layer_connection_point
    SUBTYPE OF ( layer_connection_point );
      associated_design_object  : terminal_or_inter_stratum_feature;
      reference_zone            : OPTIONAL connection_zone_in_design_view;
  END_ENTITY;

  ENTITY derived_laminate_assignment;
      oem_requirement      : stratum_assembly_relationship_or_stratum_technology_occurrence;
      solution_definition  : sequential_laminate_assembly_relationship;
  END_ENTITY;

  ENTITY derived_part_view_definition_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : part_view_definition;
      SELF\view_definition_relationship.related_view : part_view_definition;
    WHERE
      wr1: ( SIZEOF( get_derived_shape_element( related_view ) ) > 0 );
      wr2: ( SIZEOF( QUERY ( gdrse <* get_derived_shape_element( related_view ) | ( SIZEOF( QUERY ( se <* gdrse.derived_from | ( 
               relating_view <> se.containing_shape.described_element ) ) ) = 0 ) ) ) = SIZEOF( get_derived_shape_element( 
               related_view ) ) );
      wr3: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
  END_ENTITY;

  ENTITY derived_shape_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            apex, 
            centre_of_symmetry, 
            geometric_contact, 
            extension, 
            geometric_intersection, 
            geometric_alignment, 
            parallel_offset, 
            perpendicular_to, 
            tangent ) )
    SUBTYPE OF ( shape_element );
      derived_from  : SET [1 : ?] OF shape_element;
  END_ENTITY;

  ENTITY derived_stratum
    SUBTYPE OF ( stratum );
      derived_from  : design_or_documentation_stratum;
  END_ENTITY;

  ENTITY derived_stratum_technology_occurrence_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            copy_stratum_technology_occurrence_relationship, 
            inverse_copy_stratum_technology_occurrence_relationship ) )
    SUBTYPE OF ( stratum_technology_occurrence_relationship );
  END_ENTITY;

  ENTITY derived_unit
    SUPERTYPE OF ( 
        ONEOF ( 
            area_unit, 
            volume_unit ) )
    SUBTYPE OF ( unit );
      elements  : SET [1 : ?] OF derived_unit_element;
  END_ENTITY;

  ENTITY derived_unit_element;
      base_unit  : unit;
      exponent   : REAL;
  END_ENTITY;

  ENTITY descriptive_document_property
    SUBTYPE OF ( string_representation_item );
    INVERSE
      valued_characteristic : SET [1 : 1] OF document_property_representation FOR items;
  END_ENTITY;

  ENTITY design_characteristic_occurrence
    SUBTYPE OF ( predefined_requirement_view_definition );
  END_ENTITY;

  ENTITY design_composition_path;
      path_element            : SET [1 : ?] OF functional_unit;
      design_functional_unit  : functional_unit;
  END_ENTITY;

  ENTITY design_constraint_association;
      name                   : OPTIONAL STRING;
      constrained_object     : complex_product_select;
      constraint_definition  : design_constraint_definition;
  END_ENTITY;

  ENTITY design_constraint_context_association;
      constraint_definition  : design_constraint_definition;
      constraint_context     : constraint_context_select;
  END_ENTITY;

  ENTITY design_constraint_definition
    SUBTYPE OF ( requirement_view_definition );
  END_ENTITY;

  ENTITY design_functional_unit_allocation_to_assembly_component;
      functional_design_definition_path  : design_composition_path;
      implementation                     : assembly_component;
      global_swappable                   : BOOLEAN;
      local_swappable                    : BOOLEAN;
      of_property                        : OPTIONAL SET [1 : ?] OF property_value_representation;
      path_alias                         : STRING;
      swap_code                          : STRING;
    UNIQUE
      ur1 : implementation, path_alias;
  END_ENTITY;

  ENTITY design_functional_unit_allocation_to_assembly_joint;
      functional_design_definition_path  : design_composition_path;
      implementation                     : assembly_joint;
    UNIQUE
      ur1 : functional_design_definition_path;
  END_ENTITY;

  ENTITY design_functional_unit_allocation_to_fabrication_joint;
      functional_design_definition_path  : design_composition_path;
      implementation                     : fabrication_joint;
    UNIQUE
      ur1 : functional_design_definition_path;
  END_ENTITY;

  ENTITY design_functional_unit_allocation_to_reference_functional_unit;
      reference_definition_path  : reference_composition_path;
      design_definition_path     : design_composition_path;
  END_ENTITY;

  ENTITY design_layer_stratum
    SUBTYPE OF ( stratum );
      primary_design_layer_stratum  : BOOLEAN;
    INVERSE
      existence_dependence : SET [1 : ?] OF layer_connection_point FOR containing_shape;
    WHERE
      wr1: ( ( ( NOT primary_design_layer_stratum ) AND ( SIZEOF( QUERY ( imps <* USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.'  + 'ASSIGNED_DESIGN_OBJECT' ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_PRIMARY_SURFACE'  IN 
               TYPEOF( imps.defined_part_feature ) ) ) ) = 0 ) ) OR ( primary_design_layer_stratum AND ( SIZEOF( QUERY ( imps <* 
               USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.'  + 'ASSIGNED_DESIGN_OBJECT' ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_PRIMARY_SURFACE'  IN 
               TYPEOF( imps.defined_part_feature ) ) ) ) = 1 ) ) );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DESIGN_LAYER_TECHNOLOGY' IN TYPEOF( SELF\stratum
               .of_technology ) );
  END_ENTITY;

  ENTITY design_layer_technology
    SUBTYPE OF ( stratum_technology );
      design_layer_purpose  : OPTIONAL predefined_design_layer_purpose;
    INVERSE
      externally_defined_design_layer_purpose : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( ( SIZEOF( [SELF\stratum_technology.stratum_material[1]\material_identification_with_conductivity_classification.
               electrical_conductivity_classification, SELF\stratum_technology.stratum_material[1]\
               material_identification_with_conductivity_classification.thermal_conductivity_classification] * [ 'conductive'] ) 
               >= 1 ) OR ( SELF\stratum_technology.stratum_material[1]\material_identification_with_conductivity_classification.
               magnetic_permeability_classification IN [ 'highly permeable'] ) OR ( SELF\stratum_technology.stratum_material[1]\
               material_identification_with_conductivity_classification.optical_insertion_loss_classification IN [ 'vacuum', 
               'very low loss' , 'low loss'] ) );
      wr2: ( EXISTS( design_layer_purpose ) XOR ( SIZEOF( externally_defined_design_layer_purpose ) = 1 ) );
  END_ENTITY;

  ENTITY design_specific_stratum_technology_mapping_relationship
    SUBTYPE OF ( stratum_technology_mapping_relationship );
      scope  : library_to_design_stack_model_mapping;
  END_ENTITY;

  ENTITY design_specification
    SUPERTYPE OF ( 
        interface_specification_document_definition )
    SUBTYPE OF ( specification_definition );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY design_stack_model
    SUBTYPE OF ( stratum_stack_model );
      model_thickness  : OPTIONAL length_tolerance_characteristic;
    INVERSE
      sub_stack : SET [1 : ?] OF stratum_sub_stack FOR associated_stackup;
  END_ENTITY;

  ENTITY design_view_terminal_component_shape_relationship;
      associating_component_shape           : geometric_model;
      source_placement                      : axis_placement;
      associated_usage                      : conductive_interconnect_terminal_or_interconnect_component_join_terminal;
      associated_terminal_shape_definition  : geometric_model;
      associated_usage_placement            : axis_placement;
  END_ENTITY;

  ENTITY detailed_geometric_model_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            direction, 
            axis_placement, 
            cartesian_transformation_2d, 
            cartesian_transformation_3d, 
            geometric_placement_operation ) 
        ANDOR
        ONEOF ( 
            camera_model_d2, 
            camera_image_2d_with_scale ) 
        ANDOR
        ONEOF ( 
            point_and_vector, 
            point_path ) 
        ANDOR
        ONEOF ( 
            axis_placement, 
            cartesian_transformation_2d, 
            cartesian_transformation_3d, 
            direction, 
            solid_model_element ) 
        ANDOR
        ONEOF ( 
            point_direction, 
            point_direction_sequence, 
            point_sequence, 
            point ) 
        ANDOR
        ONEOF ( 
            direction, 
            axis_placement, 
            cartesian_transformation_2d, 
            cartesian_transformation_3d, 
            curve, 
            surface ) 
        ANDOR
        ONEOF ( 
            direction, 
            axis_placement, 
            cartesian_transformation_2d, 
            cartesian_transformation_3d, 
            curve, 
            geometric_model_element_relationship, 
            surface, 
            vector ) 
        ANDOR
        ONEOF ( 
            circular_cone, 
            circular_cylinder, 
            sphere, 
            rectangular_block, 
            torus ) 
        ANDOR
        ONEOF ( 
            kinematic_path, 
            axis_placement ) 
        ANDOR
        ONEOF ( 
            clipping_operator, 
            model_image_3d, 
            light_source, 
            camera_model_d3 ) 
        ANDOR
        ONEOF ( 
            composite_presentable_text, 
            text_literal, 
            defined_character_glyph ) 
        ANDOR
        ONEOF ( 
            hatch_style, 
            tile_style ) 
        ANDOR
        ONEOF ( 
            rotation_about_direction, 
            su_parameters ) )
    SUBTYPE OF ( representation_item );
  END_ENTITY;

  ENTITY detailed_geometric_model_element_relationship;
      item_1  : detailed_geometric_model_element;
      item_2  : detailed_geometric_model_element;
    WHERE
      wr1: ( item_1 <> item_2 );
  END_ENTITY;

  ENTITY detailed_report_request
    SUBTYPE OF ( data_quality_report_request );
      detailed_report_request_type  : detailed_report_type;
      report_sequence               : preferred_ordering;
  END_ENTITY;

  ENTITY detailed_report_request_with_number_of_data
    SUBTYPE OF ( detailed_report_request );
      number_of_data  : INTEGER;
    DERIVE
      SELF\detailed_report_request.detailed_report_request_type : detailed_report_type := measured_element;
  END_ENTITY;

  ENTITY detailed_topological_model_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            connected_edge_set, 
            connected_face_set, 
            edge, 
            face, 
            face_bound, 
            vertex, 
            loop 
            ANDOR
            path ) )
    SUBTYPE OF ( representation_item );
  END_ENTITY;

  ENTITY device_2d_position;
      placed_device   : part_device;
      transformation  : axis_placement_2d;
      part_shape      : physical_unit_planar_shape_model;
      device_shape    : physical_unit_planar_shape_model;
  END_ENTITY;

  ENTITY device_3d_position;
      placed_device   : part_device;
      transformation  : axis_placement_3d;
      part_shape      : physical_unit_3d_shape_model;
      device_shape    : physical_unit_3d_shape_model;
  END_ENTITY;

  ENTITY device_terminal_map;
      target_terminal         : packaged_part_terminal;
      mapped_device_terminal  : part_device_terminal;
    UNIQUE
      ur1 : mapped_device_terminal, target_terminal;
  END_ENTITY;

  ENTITY device_terminal_map_relationship;
      relating_device_terminal_map  : device_terminal_map;
      related_device_terminal_map   : device_terminal_map;
  END_ENTITY;

  ENTITY diagonal_knurl
    SUBTYPE OF ( turned_knurl );
      helix_hand   : text;
      helix_angle  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY diameter_size
    SUBTYPE OF ( dimensional_size );
      geometry_type  : diameter_type;
  END_ENTITY;

  ENTITY diameter_taper;
      final_diameter  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY diamond_knurl
    SUBTYPE OF ( turned_knurl );
      helix_angle  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY dielectric_constant_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY dielectric_crossover_area;
      relating_concept                : stratum_feature;
      related_concept                 : stratum_feature;
      resulting_dielectric_crossover  : stratum_feature;
      resulting_shape                 : OPTIONAL geometric_model;
    INVERSE
      technology_requirement : SET [1 : ?] OF requirement_assignment FOR assigned_to;
  END_ENTITY;

  ENTITY dielectric_material_passage
    SUBTYPE OF ( inter_stratum_feature );
      feature_material   : OPTIONAL material_or_specification;
      precedent_passage  : cutout;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY digital_analytical_model_port
    ABSTRACT SUPERTYPE OF ( 
        digital_analytical_model_vector_port )
    SUBTYPE OF ( analytical_model_port );
      nominal_signal_flow_direction  : signal_flow_direction;
      port_type                      : port_property_type;
    WHERE
      wr1: ( not_applicable <> nominal_signal_flow_direction );
      wr2: ( numeric_property_type <> port_type );
      wr3: ( physical_property_type <> port_type );
      wr4: ( unknown_direction <> nominal_signal_flow_direction );
  END_ENTITY;

  ENTITY digital_analytical_model_scalar_port
    SUBTYPE OF ( digital_analytical_model_vector_port, analytical_model_scalar_port );
  END_ENTITY;

  ENTITY digital_analytical_model_vector_port
    SUBTYPE OF ( digital_analytical_model_port, analytical_model_vector_port );
    INVERSE
      data_encoding_method : external_source_identification FOR item;
    WHERE
      wr1: ( SELF\digital_analytical_model_port.port_type = port_property_type.string_property_type );
  END_ENTITY;

  ENTITY digital_document_definition
    SUBTYPE OF ( document_definition );
      files  : SET [0 : ?] OF digital_file;
  END_ENTITY;

  ENTITY digital_file
    SUBTYPE OF ( file );
  END_ENTITY;

  ENTITY dimension
    ABSTRACT SUPERTYPE OF ( 
        dimension_callout 
        ANDOR
        dimension_value )
    SUBTYPE OF ( draughting_element );
      id  : STRING;
  END_ENTITY;

  ENTITY dimension_callout
    SUBTYPE OF ( dimension );
      callout_element  : SET [1 : ?] OF dimension_callout_select;
      dimension_type   : SET [1 : ?] OF dimension_type;
  END_ENTITY;

  ENTITY dimension_callout_relationship;
      relating_draughting_callout  : dimension_callout;
      related_draughting_callout   : dimension_value;
      relation_type                : primary_or_secondary;
  END_ENTITY;

  ENTITY dimension_curve
    SUBTYPE OF ( annotation_curve );
      terminator  : SET [0 : 2] OF terminator;
  END_ENTITY;

  ENTITY dimension_curve_directed_callout
    SUBTYPE OF ( draughting_callout );
      dimension_curve  : dimension_curve;
    WHERE
      wr1: ( dimension_curve IN SELF\draughting_callout.contents );
  END_ENTITY;

  ENTITY dimension_curve_terminator
    SUBTYPE OF ( terminator_symbol );
  END_ENTITY;

  ENTITY dimension_curve_terminator_to_projection_curve_associativity
    SUBTYPE OF ( annotation_occurrence_associativity );
      SELF\annotation_occurrence_associativity.relating_element : dimension_curve_terminator;
      SELF\annotation_occurrence_associativity.related_element : projection_curve;
  END_ENTITY;

  ENTITY dimension_prefix
    SUBTYPE OF ( draughting_element );
      prefix  : dimension_text;
    INVERSE
      parent : structured_dimension_callout FOR prefix;
    WHERE
      wr1: ( prefix IN SELF\draughting_callout.contents );
      wr2: ( prefix\representation_item.name = 'prefix text' );
  END_ENTITY;

  ENTITY dimension_sequence_pair;
      allignment   : chained_or_parallel;
      predecessor  : dimension_callout;
      successor    : dimension_callout;
  END_ENTITY;

  ENTITY dimension_suffix
    SUBTYPE OF ( draughting_element );
      suffix  : dimension_text;
    INVERSE
      parent : structured_dimension_callout FOR suffix;
    WHERE
      wr1: ( suffix IN SELF\draughting_callout.contents );
      wr2: ( suffix\representation_item.name = 'suffix text' );
  END_ENTITY;

  ENTITY dimension_symbol;
  END_ENTITY;

  ENTITY dimension_text
    SUBTYPE OF ( annotation_text_occurrence );
    WHERE
      wr1: ( name IN [ 'dimension value', 'tolerance value', 'unit text', 'prefix text', 'suffix text'] );
  END_ENTITY;

  ENTITY dimension_value
    SUBTYPE OF ( dimension );
      dimension_value  : dimension_text;
    WHERE
      wr1: ( dimension_value IN SELF\draughting_callout.contents );
      wr2: ( dimension_value\representation_item.name = 'dimension value' );
  END_ENTITY;

  ENTITY dimension_value_with_limitation;
      defined_by     : limitation_definition_select;
      limited_value  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY dimensional_location
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            angular_location, 
            curved_distance, 
            linear_distance ) )
    SUBTYPE OF ( geometric_dimension );
      description  : OPTIONAL STRING;
      directed     : OPTIONAL BOOLEAN;
      origin       : dimension_target;
      target       : dimension_target;
  END_ENTITY;

  ENTITY dimensional_location_with_datum_feature
    SUBTYPE OF ( datum_feature, dimensional_location );
  END_ENTITY;

  ENTITY dimensional_size
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            angular_size, 
            curved_size, 
            diameter_size, 
            edge_of_undefined_shape_size, 
            machining_feature_size, 
            radial_size, 
            thickness_size ) )
    SUBTYPE OF ( geometric_dimension );
      is_applied_to  : dimension_target;
  END_ENTITY;

  ENTITY dimensional_size_with_datum_feature
    SUBTYPE OF ( datum_feature, dimensional_size );
  END_ENTITY;

  ENTITY dimensioned_angle_assembly_constraint
    SUBTYPE OF ( binary_assembly_constraint, dimensioned_angle_constraint );
  END_ENTITY;

  ENTITY dimensioned_angle_constraint
    SUBTYPE OF ( angle_geometric_constraint );
      angle_value  : plane_angle_measure;
  END_ENTITY;

  ENTITY dimensioned_curve_distance_constraint
    SUBTYPE OF ( curve_distance_constraint );
      distance  : length_measure;
    WHERE
      wr1: ( distance >= 0 );
  END_ENTITY;

  ENTITY dimensioned_curve_length_constraint
    SUBTYPE OF ( curve_length_constraint );
      curve_length  : length_measure;
    WHERE
      wr1: ( curve_length > 0 );
  END_ENTITY;

  ENTITY dimensioned_parallel_assembly_constraint
    SUBTYPE OF ( parallel_assembly_constraint, dimensioned_parallel_constraint );
  END_ENTITY;

  ENTITY dimensioned_parallel_constraint
    SUBTYPE OF ( parallel_constraint );
      distance            : length_measure;
      negative_direction  : BOOLEAN;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 1 ) OR ( SIZEOF( SELF\explicit_constraint.
               constrained_elements ) = 2 ) );
      wr2: ( SIZEOF( QUERY ( q <* ( SELF\explicit_constraint.reference_elements + SELF\explicit_constraint.constrained_elements )
               | ( SIZEOF( TYPEOF( q ) * [ 'EXPLICIT_CONSTRAINT.DIRECTION'] ) > 0 ) ) ) = 0 );
      wr3: ( distance >= 0 );
  END_ENTITY;

  ENTITY dimensioned_parallel_offset_constraint
    SUBTYPE OF ( parallel_offset_constraint );
      offset_value                  : length_measure;
      offset_direction_constrained  : BOOLEAN;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 1 ) OR ( SIZEOF( SELF\explicit_constraint.
               constrained_elements ) = 2 ) );
      wr2: ( ( NOT ( offset_direction_constrained = TRUE ) ) AND ( ( offset_type = curve_2d_offset ) OR ( offset_type = 
               surface_offset ) ) );
      wr3: ( offset_value > 0 );
  END_ENTITY;

  ENTITY dimensioned_point_distance_constraint
    SUBTYPE OF ( point_distance_constraint );
      distance  : length_measure;
    WHERE
      wr1: ( distance >= 0 );
  END_ENTITY;

  ENTITY dimensioned_radial_constraint
    SUBTYPE OF ( radius_geometric_constraint );
      radius_value  : length_measure;
    WHERE
      wr1: ( radius_value > 0 );
  END_ENTITY;

  ENTITY dimensioned_surface_distance_assembly_constraint
    SUBTYPE OF ( binary_assembly_constraint, dimensioned_surface_distance_constraint );
  END_ENTITY;

  ENTITY dimensioned_surface_distance_constraint
    SUBTYPE OF ( surface_distance_constraint );
      distance  : length_measure;
    WHERE
      wr1: ( distance >= 0 );
  END_ENTITY;

  ENTITY direct_stratum_component_join_implementation;
      implementing_joint       : fabrication_joint;
      topological_requirement  : stratum_embedded_physical_component_join_relationship;
  END_ENTITY;

  ENTITY directed_activity
    SUBTYPE OF ( activity );
      directive  : work_order;
  END_ENTITY;

  ENTITY directed_angle
    SUBTYPE OF ( shape_element );
      angle            : angle_data_element;
      angle_reference  : angle_reference_enumeration;
  END_ENTITY;

  ENTITY directed_or_oriented_tolerance_zone
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            tolerance_zone_with_datum, 
            affected_plane_tolerance_zone ) )
    SUBTYPE OF ( tolerance_zone );
      SELF\tolerance_zone.zone_for  : SET [1 : ?] OF directed_or_oriented_geometric_tolerance_select;
  END_ENTITY;

  ENTITY directed_taper;
      direction  : direction_element;
      angle      : numerical_item_with_unit;
  END_ENTITY;

  ENTITY directed_tolerance_zone
    SUBTYPE OF ( tolerance_zone_with_datum );
      direction  : directed_tolerance_zone_type;
  END_ENTITY;

  ENTITY direction
    SUBTYPE OF ( detailed_geometric_model_element );
      direction_ratios  : LIST [2 : 3] OF REAL;
  END_ENTITY;

  ENTITY direction_element
    SUBTYPE OF ( definitional_shape_element );
  END_ENTITY;

  ENTITY direction_of_fiber_orientation_within_a_ply
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : geometric_coordinate_space;
      SELF\representation.items             : SET [1 : ?] OF angle_select;
    INVERSE
      orientations : SET [1 : 1] OF ply_orientation_angle FOR rep_1;
  END_ENTITY;

  ENTITY disallowed_assembly_relationship_usage
    SUBTYPE OF ( use_of_restricted_functionality );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ASSEMBLY_COMPONENT_RELATIONSHIP' ] );
  END_ENTITY;

  ENTITY disconnected_face_set
    SUBTYPE OF ( erroneous_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY discontinuous_fiber_assembly
    SUBTYPE OF ( stock_material );
  END_ENTITY;

  ENTITY discontinuous_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            g1_discontinuous_curve, 
            g2_discontinuous_curve, 
            g1_discontinuous_surface, 
            g2_discontinuous_surface ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY div_expression
    SUBTYPE OF ( binary_numeric_expression );
  END_ENTITY;

  ENTITY document
    SUBTYPE OF ( product );
  END_ENTITY;

  ENTITY document_assignment;
      assigned_document  : assigned_document_select;
      is_assigned_to     : SET [1 : ?] OF documented_element_select;
      role               : STRING;
  END_ENTITY;

  ENTITY document_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            digital_document_definition, 
            physical_document_definition ) )
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : document_version;
    DERIVE
      associated_document_version  : document_version := SELF\product_view_definition.defined_version;
      description                  : STRING := SELF\product_view_definition.name;
  END_ENTITY;

  ENTITY document_definition_relationship;
      relation_type                 : STRING;
      description                   : OPTIONAL STRING;
      relating_document_definition  : document_definition;
      related_document_definition   : document_definition;
    WHERE
      wr1: ( relating_document_definition :<>: related_document_definition );
  END_ENTITY;

  ENTITY document_location_identification
    SUBTYPE OF ( external_source_identification );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENT_DEFINITION' IN TYPEOF( SELF\
               external_source_identification.item ) );
  END_ENTITY;

  ENTITY document_property_representation
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF descriptive_or_numerical;
    WHERE
      wr1: ( SIZEOF( QUERY ( pr <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSIGNED_PROPERTY'  IN TYPEOF( pr\
               property_representation.property ) ) ) ) > 0 );
      wr2: ( SELF\representation.context_of_items.kind = 'document parameters' );
      wr3: ( SIZEOF( QUERY ( it1 <* SELF\representation.items | ( SIZEOF( QUERY ( it2 <* SELF\representation.items | ( it1.name =
               it2.name ) ) ) > 1 ) ) ) = 0 );
  END_ENTITY;

  ENTITY document_version
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : document;
  END_ENTITY;

  ENTITY document_with_additional_categories
    SUBTYPE OF ( document );
      categories  : SET [1 : ?] OF document_category;
  END_ENTITY;

  ENTITY documentation_layer_stratum
    SUBTYPE OF ( stratum );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENTATION_LAYER_TECHNOLOGY' IN TYPEOF( SELF\
               stratum.of_technology ) );
      wr2: ( ( NOT ( SIZEOF( SELF\stratum.base_component ) = 1 ) ) OR ( NOT ( SELF\stratum.of_technology\
               documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.
               soldermask ) ) OR ( SIZEOF( get_mrlc_not_for_base( SELF, base_component ) ) = 0 ) );
  END_ENTITY;

  ENTITY documentation_layer_technology
    SUBTYPE OF ( stratum_technology );
      pre_defined_documentation_layer_purpose : OPTIONAL predefined_documentation_layer_purpose;
    INVERSE
      externally_defined_documentation_layer_purpose : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( EXISTS( pre_defined_documentation_layer_purpose ) XOR ( SIZEOF( externally_defined_documentation_layer_purpose ) = 1 ) );
  END_ENTITY;

  ENTITY dose_equivalent_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY draped_orientation_angle
    SUBTYPE OF ( ply_orientation_angle );
  END_ENTITY;

  ENTITY draughting_callout
    SUPERTYPE OF ( 
        ONEOF ( 
            dimension_curve_directed_callout, 
            leader_directed_callout, 
            projection_directed_callout ) )
    SUBTYPE OF ( representation_item );
      contents  : LIST [1 : ?] OF draughting_callout_content_select;
  END_ENTITY;

  ENTITY draughting_element
    SUPERTYPE OF ( 
        datum_feature_callout 
        ANDOR
        datum_target_callout 
        ANDOR
        dimension 
        ANDOR
        dimension_prefix 
        ANDOR
        dimension_suffix 
        ANDOR
        geometric_tolerance_callout 
        ANDOR
        surface_condition_callout )
    SUBTYPE OF ( draughting_callout );
  END_ENTITY;

  ENTITY draughting_model
    SUBTYPE OF ( styled_model );
      SELF\representation.items  : SET [1 : ?] OF draughting_model_element_select;
    UNIQUE
      ur1 : SELF\representation.name;
  END_ENTITY;

  ENTITY draughting_model_item_association;
      name             : STRING;
      definition       : draughting_model_item_definition;
      identified_item  : draughting_model_item_association_select;
      used_model       : draughting_model;
  END_ENTITY;

  ENTITY draughting_pre_defined_text_font;
  END_ENTITY;

  ENTITY draughting_title;
      contents  : STRING;
      items     : SET [1 : ?] OF draughting_titled_item;
      language  : STRING;
  END_ENTITY;

  ENTITY drawing
    SUBTYPE OF ( presentation_set );
      revision_identifier    : STRING;
      drawing_identifier     : drawing_definition;
      intended_scale         : OPTIONAL STRING;
      drawing_specification  : SET [0 : ?] OF STRING;
    UNIQUE
      ur1 : revision_identifier, drawing_identifier;
  END_ENTITY;

  ENTITY drawing_definition;
      drawing_number  : STRING;
      drawing_type    : OPTIONAL STRING;
  END_ENTITY;

  ENTITY drawing_sequence;
      predecessor  : drawing;
      successor    : drawing;
    WHERE
      wr1: ( predecessor :<>: successor );
  END_ENTITY;

  ENTITY drawing_sheet
    SUBTYPE OF ( view_area );
      revision_identifier  : STRING;
  END_ENTITY;

  ENTITY drawing_sheet_layout
    SUBTYPE OF ( general_symbol );
  END_ENTITY;

  ENTITY drawing_sheet_sequence
    SUBTYPE OF ( view_area_relationship );
      SELF\view_area_relationship.relating  : drawing_sheet;
      SELF\view_area_relationship.related   : drawing_sheet;
    WHERE
      wr1: ( SELF\view_area_relationship.relating :<>: SELF\view_area_relationship.related );
  END_ENTITY;

  ENTITY duration
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'TIME_UNIT' ) IN TYPEOF( SELF\
               value_with_unit.unit ) );
  END_ENTITY;

  ENTITY edge
    SUBTYPE OF ( detailed_topological_model_element );
      edge_start  : vertex;
      edge_end    : vertex;
  END_ENTITY;

  ENTITY edge_based_wireframe_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY edge_curve
    SUBTYPE OF ( detailed_geometric_model_element, edge );
      edge_geometry  : curve;
      same_sense     : BOOLEAN;
  END_ENTITY;

  ENTITY edge_loop
    SUBTYPE OF ( loop, path );
    DERIVE
      ne  : INTEGER := SIZEOF( SELF\path.edge_list );
    WHERE
      wr1: ( SELF\path.edge_list[1].edge_start :=: SELF\path.edge_list[ne].edge_end );
  END_ENTITY;

  ENTITY edge_of_undefined_shape_size
    SUBTYPE OF ( dimensional_size );
      orientation                            : undefined_edge_shape_enumeration_direction;
      SELF\dimensional_size.is_applied_to    : edge_of_undefined_shape_size_element;
      SELF\geometric_dimension.dimension_value : tolerance_range;
    UNIQUE
      ur1 : is_applied_to, orientation;
  END_ENTITY;

  ENTITY edge_round
    SUBTYPE OF ( transition_feature );
      edge_round_face    : face_shape_element;
      first_face_shape   : face_shape_element;
      second_face_shape  : face_shape_element;
  END_ENTITY;

  ENTITY edge_segment_cross_section
    SUBTYPE OF ( shape_definition_3d_intersection );
      SELF\representation_relationship.rep_2 : edge_shape_model;
      SELF\representation_relationship.rep_1 : part_template_3d_shape_model;
    DERIVE
      cross_section_reference  : edge_segment_vertex := SELF\shape_definition_3d_intersection.projected_volume\
                                   part_template_shape_model.shape_characterized_definition[1]\
                                   inter_stratum_feature_edge_segment_template.start_vertex;
      associated_template      : template_definition := SELF\shape_definition_3d_intersection.projected_volume\
                                   part_template_shape_model.shape_characterized_definition[1];
    INVERSE
      referencing_template : inter_stratum_feature_edge_segment_template_with_cross_section FOR cross_section;
    WHERE
      wr1: ( associated_template :=: referencing_template );
  END_ENTITY;

  ENTITY edge_segment_vertex
    SUBTYPE OF ( definitional_shape_element );
  END_ENTITY;

  ENTITY edge_shape_model
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            bevel_edge_feature_shape_model, 
            step_edge_feature_shape_model, 
            radius_edge_feature_shape_model ) )
    SUBTYPE OF ( planar_shape_model );
      applied_surface  : board_side;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.name ) );
  END_ENTITY;

  ENTITY edge_with_excessive_segments
    SUBTYPE OF ( overcomplex_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY edge_zone_shape
    SUBTYPE OF ( zone_structural_makeup_shape_representation );
      boundary  : boundary_class_zone;
  END_ENTITY;

  ENTITY effectivity
    SUPERTYPE OF ( 
        ONEOF ( 
            serial_effectivity, 
            dated_effectivity, 
            lot_effectivity, 
            time_interval_effectivity ) );
      id           : STRING;
      name         : STRING;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY effectivity_assignment;
      assigned_effectivity  : effectivity;
      role                  : STRING;
      items                 : SET [1 : ?] OF effectivity_item;
  END_ENTITY;

  ENTITY effectivity_controlled_assembly_definition
    SUBTYPE OF ( assembly_definition );
  END_ENTITY;

  ENTITY effectivity_relationship;
      relation_type         : STRING;
      description           : OPTIONAL STRING;
      relating_effectivity  : effectivity;
      related_effectivity   : effectivity;
  END_ENTITY;

  ENTITY electric_charge_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY electric_current_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF( SELF\
               value_with_unit.unit ) );
  END_ENTITY;

  ENTITY electric_current_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY electric_potential_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY electrical_isolation_laminate_component
    SUBTYPE OF ( material_removal_laminate_component );
      SELF\definition_based_product_occurrence.derived_from : electrical_isolation_removal_template;
  END_ENTITY;

  ENTITY electrical_isolation_removal_template
    SUBTYPE OF ( material_removal_feature_template );
    DERIVE
      electrical_isolation_spacing_requirement : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 
                                                 'electrical requirement'  );
    WHERE
      wr1: ( SIZEOF( QUERY ( eisr <* electrical_isolation_spacing_requirement | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ELECTRICAL_ISOLATION_REQUIREMENT'  IN TYPEOF( 
               eisr ) ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( s <* SELF\geometric_template.shapes | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANAR_CLOSED_PATH_SHAPE_MODEL_WITH_PARAMETERS'  
               IN TYPEOF( s ) ) ) ) = 0 );
      wr3: ( SIZEOF( QUERY ( s <* SELF\geometric_template.shapes | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL'  IN TYPEOF( s ) ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY electrical_isolation_requirement
    SUBTYPE OF ( requirement_view_definition );
      effective_voltage_withstand_capacity_requirement : OPTIONAL value_limit;
    DERIVE
      electrical_isolation_spacing_requirement : SET [1 : 1] OF predefined_requirement_view_definition := 
                                                 get_specific_requirement_type_for_primary_rvd_relationship( SELF, 'derived from', 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'LAYOUT_SPACING_REQUIREMENT'  );
    WHERE
      wr1: ( ( NOT EXISTS( effective_voltage_withstand_capacity_requirement ) ) OR ( ( 
               effective_voltage_withstand_capacity_requirement\qualified_representation_item.qualifiers[1]\type_qualifier.name IN
               [ 'minimum'] ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ELECTRIC_POTENTIAL_DATA_ELEMENT'  IN TYPEOF( effective_voltage_withstand_capacity_requirement ) ) ) );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAYOUT_SPACING_REQUIREMENT' IN TYPEOF( 
               electrical_isolation_spacing_requirement[1] ) );
      wr3: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY electrical_network_definition
    SUBTYPE OF ( functional_unit_network_definition );
  END_ENTITY;

  ENTITY electromagnetic_compatibility_requirement_allocation
    SUBTYPE OF ( assembly_requirement_allocation );
  END_ENTITY;

  ENTITY elementary_brep_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY ellipse
    SUBTYPE OF ( conic );
      first_semi_axis   : length_measure;
      second_semi_axis  : length_measure;
    WHERE
      wr1: ( first_semi_axis > 0 );
      wr2: ( first_semi_axis > 0 );
  END_ENTITY;

  ENTITY elliptic_area
    SUBTYPE OF ( primitive_2d );
      position     : axis_placement_2d;
      semi_axis_1  : length_data_element;
      semi_axis_2  : length_data_element;
  END_ENTITY;

  ENTITY embedded_physical_component_terminal
    SUBTYPE OF ( laminate_component_join_terminal );
      SELF\component_feature.definition    : bare_die_terminal_or_packaged_part_terminal;
      SELF\shape_element.containing_shape  : bare_die_component_or_packaged_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY energy_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY entirely_narrow_face
    SUBTYPE OF ( topology_related_to_nearly_degenerate_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      width_tolerance                        : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY entirely_narrow_solid
    SUBTYPE OF ( inapt_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      width_tolerance                        : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY entirely_narrow_surface
    SUBTYPE OF ( nearly_degenerate_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      width_tolerance                        : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'BOUNDED_SURFACE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY entity_assertion
    SUBTYPE OF ( fact_type );
  END_ENTITY;

  ENTITY enum_reference_prefix;
      prefix  : STRING;
  END_ENTITY;

  ENTITY environment;
      syntactic_representation  : generic_variable;
      semantics                 : variable_semantics;
  END_ENTITY;

  ENTITY equal_parameter_constraint
    SUBTYPE OF ( defined_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF variational_parameter_select;
      SELF\explicit_constraint.reference_elements : SET [0 : 1] OF variational_parameter_select;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.constrained_elements + SELF\explicit_constraint.reference_elements ) >= 2 );
  END_ENTITY;

  ENTITY equals_expression
    SUBTYPE OF ( binary_boolean_expression );
  END_ENTITY;

  ENTITY equivalent_functional_terminals_assignment;
      name                  : STRING;
      equivalent_terminals  : SET [2 : ?] OF functional_unit_usage_view_terminal_definition;
  END_ENTITY;

  ENTITY equivalent_functional_unit_definition_assignment;
      name                                   : STRING;
      equivalent_functional_unit_definitions : SET [2 : ?] OF functional_unit_definition;
  END_ENTITY;

  ENTITY equivalent_stackup_model_definition
    SUBTYPE OF ( product_view_definition, view_definition_relationship );
      SELF\view_definition_relationship.relating_view : stratum_stack_model;
      SELF\view_definition_relationship.related_view : stratum_stack_model;
      equivalent_sub_stacks                  : SET [1 : ?] OF equivalent_sub_stack_definition;
    DERIVE
      equivalent_stackup_model  : stratum_stack_model := SELF\view_definition_relationship.related_view;
      primary_stackup_model     : stratum_stack_model := SELF\view_definition_relationship.relating_view;
    WHERE
      wr1: ( primary_stackup_model :<>: equivalent_stackup_model );
      wr2: ( SIZEOF( QUERY ( ess <* equivalent_sub_stacks | ( NOT ( ess\equivalent_sub_stack_definition.equivalent_stack\
               stratum_sub_stack.associated_stackup :=: equivalent_stackup_model ) ) ) ) = 0 );
      wr3: acyclic_equivalent_stackup_model_definition( SELF, [equivalent_stackup_model], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EQUIVALENT_STACKUP_MODEL_DEFINITION'  );
  END_ENTITY;

  ENTITY equivalent_sub_stack_definition
    SUBTYPE OF ( product_view_definition );
      equivalent_stack  : local_linear_stack;
      primary_sto       : stratum_technology_occurrence;
      primary_sto_link  : stratum_technology_occurrence_link;
    WHERE
      wr1: ( primary_sto IN [primary_sto_link\stratum_technology_occurrence_relationship.sto_1, primary_sto_link\
               stratum_technology_occurrence_relationship.sto_2] );
      wr2: ( equivalent_stack\stratum_sub_stack.associated_stackup :<>: primary_sto_link\
               stratum_technology_occurrence_relationship.scope );
  END_ENTITY;

  ENTITY erroneous_b_spline_curve_definition
    SUBTYPE OF ( erroneous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CURVE_WITH_EXPLICIT_KNOTS' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY erroneous_b_spline_surface_definition
    SUBTYPE OF ( erroneous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SURFACE_WITH_EXPLICIT_KNOTS' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY erroneous_data
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            erroneous_topology, 
            erroneous_geometry, 
            erroneous_topology_and_geometry_relationship, 
            erroneous_manifold_solid_brep ) )
    SUBTYPE OF ( shape_data_quality_criterion );
  END_ENTITY;

  ENTITY erroneous_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            inconsistent_curve_transition_code, 
            erroneous_b_spline_curve_definition, 
            inconsistent_surface_transition_code, 
            erroneous_b_spline_surface_definition ) )
    SUBTYPE OF ( erroneous_data );
  END_ENTITY;

  ENTITY erroneous_manifold_solid_brep
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            wrongly_oriented_void, 
            wrongly_placed_void, 
            intersecting_shells_in_solid, 
            solid_with_wrong_number_of_voids ) )
    SUBTYPE OF ( erroneous_data );
  END_ENTITY;

  ENTITY erroneous_topology
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            open_edge_loop, 
            open_closed_shell, 
            inconsistent_adjacent_face_normals, 
            disconnected_face_set ) )
    SUBTYPE OF ( erroneous_data );
  END_ENTITY;

  ENTITY erroneous_topology_and_geometry_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            inconsistent_edge_and_curve_directions, 
            inconsistent_face_and_surface_normals, 
            inconsistent_face_and_closed_shell_normals, 
            intersecting_loops_in_face, 
            wrongly_placed_loop ) )
    SUBTYPE OF ( erroneous_data );
  END_ENTITY;

  ENTITY evaluated_characteristic
    SUPERTYPE OF ( 
        rule_based_evaluated_characteristic );
      id                             : OPTIONAL STRING;
      name                           : OPTIONAL STRING;
      description                    : OPTIONAL STRING;
      planned_product_data           : planned_characteristic;
      product_data_status            : evaluation_type;
      product_characterization_data  : property_representation;
      evaluation_result              : evaluation_result_value;
      evaluation_activity            : OPTIONAL evaluation_activity_select;
    WHERE
      wr1: ( product_characterization_data.property.described_element :=: planned_product_data.reference_requirement.assigned_to );
  END_ENTITY;

  ENTITY evaluated_characteristic_of_product_as_individual_test_result
    SUBTYPE OF ( evaluated_characteristic );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.APPLIED_INDEPENDENT_TEST_RESULT_PROPERTY' IN 
               TYPEOF( SELF\evaluated_characteristic.product_characterization_data.definition ) );
  END_ENTITY;

  ENTITY evaluation_view_definition
    SUBTYPE OF ( product_view_definition );
      evaluated_product_definition  : product_view_definition;
      evaluation_data               : SET [1 : ?] OF evaluated_characteristic;
    WHERE
      wr1: ( TYPEOF( SELF ) <> TYPEOF( evaluated_product_definition ) );
  END_ENTITY;

  ENTITY event;
      id                  : STRING;
      name                : STRING;
      description         : OPTIONAL STRING;
      actual_start_date   : OPTIONAL date_or_date_time_select;
      planned_start_date  : OPTIONAL date_or_date_time_select;
  END_ENTITY;

  ENTITY event_assignment;
      assigned_event  : event;
      items           : SET [1 : ?] OF event_item;
      role            : STRING;
  END_ENTITY;

  ENTITY event_relationship;
      relation_type   : STRING;
      description     : OPTIONAL STRING;
      relating_event  : event;
      related_event   : event;
  END_ENTITY;

  ENTITY excessive_use_of_groups
    SUBTYPE OF ( use_of_restricted_functionality );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'GROUP' ] );
  END_ENTITY;

  ENTITY excessive_use_of_layers
    SUBTYPE OF ( use_of_restricted_functionality );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'LAYER' ] );
  END_ENTITY;

  ENTITY excessively_high_degree_curve
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY excessively_high_degree_surface
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY exp_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY expanded_uncertainty
    SUBTYPE OF ( standard_uncertainty );
      coverage_factor  : REAL;
  END_ENTITY;

  ENTITY explicit_constraint
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            defined_constraint, 
            free_form_assignment, 
            free_form_relation ) )
    SUBTYPE OF ( variational_representation_item );
      description           : OPTIONAL STRING;
      constrained_elements  : SET [1 : ?] OF representation_item;
      reference_elements    : SET [0 : ?] OF representation_item;
    WHERE
      wr1: ( SIZEOF( constrained_elements * reference_elements ) = 0 );
  END_ENTITY;

  ENTITY explicit_geometric_constraint
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            fixed_element_geometric_constraint, 
            parallel_constraint, 
            point_distance_constraint, 
            skew_line_distance_constraint, 
            curve_distance_constraint, 
            surface_distance_constraint, 
            radius_geometric_constraint, 
            curve_length_constraint, 
            parallel_offset_constraint, 
            angle_geometric_constraint, 
            perpendicular_geometric_constraint, 
            incidence_geometric_constraint, 
            coaxial_constraint, 
            tangent_constraint, 
            symmetry_geometric_constraint, 
            swept_point_curve_constraint, 
            swept_curve_surface_constraint, 
            curve_smoothness_constraint, 
            surface_smoothness_constraint ) )
    SUBTYPE OF ( defined_constraint, detailed_geometric_model_element );
  END_ENTITY;

  ENTITY explicit_procedural_geometric_representation_item_relationship;
      relating_item  : procedural_shape_representation_sequence;
      related_item   : detailed_geometric_model_element;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PROCEDURAL_SHAPE_REPRESENTATION_SEQUENCE' 
               IN TYPEOF( related_item ) ) );
  END_ENTITY;

  ENTITY explicit_procedural_shape_representation_relationship
    SUBTYPE OF ( representation_relationship );
      SELF\representation_relationship.rep_1 : procedural_shape_representation;
      SELF\representation_relationship.rep_2 : geometric_model;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PROCEDURAL_SHAPE_REPRESENTATION' IN 
               TYPEOF( rep_2 ) ) );
  END_ENTITY;

  ENTITY explicitly_located_layer_connection_point
    SUBTYPE OF ( layer_connection_point );
  END_ENTITY;

  ENTITY expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            numeric_expression, 
            boolean_expression ) )
    SUBTYPE OF ( generic_expression );
  END_ENTITY;

  ENTITY expression_extension
    SUBTYPE OF ( value_with_unit );
      expression_associated  : expression_extension_select;
  END_ENTITY;

  ENTITY extended_visual_appearance
    SUBTYPE OF ( visual_appearance );
      opacity           : OPTIONAL measure_item;
      orientation       : OPTIONAL angle_data_element;
      refraction_index  : OPTIONAL measure_item;
      texture_map       : digital_file;
  END_ENTITY;

  ENTITY extension
    SUBTYPE OF ( derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [1 : 1] OF shape_element;
  END_ENTITY;

  ENTITY extent;
      variable_id       : OPTIONAL STRING;
      source            : STRING;
      query_expression  : STRING;
      syntax            : OPTIONAL expression_syntax;
  END_ENTITY;

  ENTITY external_class
    SUBTYPE OF ( class );
      external_source  : external_class_library;
  END_ENTITY;

  ENTITY external_class_library
    SUBTYPE OF ( external_source );
  END_ENTITY;

  ENTITY external_class_with_attributes
    SUBTYPE OF ( class_with_attributes );
      source  : external_class_select;
  END_ENTITY;

  ENTITY external_context_dependent_unit
    SUBTYPE OF ( context_dependent_unit );
      id               : STRING;
      external_source  : external_source;
  END_ENTITY;

  ENTITY external_conversion_based_unit
    SUBTYPE OF ( conversion_based_unit );
      id               : STRING;
      external_source  : external_source;
  END_ENTITY;

  ENTITY external_currency
    SUBTYPE OF ( currency, external_context_dependent_unit );
  END_ENTITY;

  ENTITY external_geometric_model
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : 1] OF axis_placement;
      external_file              : digital_file;
    WHERE
      wr1: ( SELF\representation.context_of_items\geometric_coordinate_space.dimension_count = 3 );
      wr2: ( SELF\representation.context_of_items.kind = 'external' );
  END_ENTITY;

  ENTITY external_item_identification
    SUBTYPE OF ( external_source_identification );
      external_id  : STRING;
  END_ENTITY;

  ENTITY external_library_property
    SUBTYPE OF ( independent_property );
      external_id  : STRING;
      source       : external_source;
    DERIVE
      library_type  : STRING := source.id;
  END_ENTITY;

  ENTITY external_representation_item
    SUBTYPE OF ( representation_item );
      id               : STRING;
      external_source  : external_source;
  END_ENTITY;

  ENTITY external_source
    SUPERTYPE OF ( 
        ONEOF ( 
            known_source, 
            user_defined_library_or_dictionary ) );
      id           : STRING;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY external_source_identification;
      source_id    : STRING;
      source_type  : STRING;
      item         : external_identification_item;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY external_string_representation_item
    SUBTYPE OF ( external_representation_item );
  END_ENTITY;

  ENTITY externally_conditioned_data_quality_criteria_representation
    SUBTYPE OF ( data_quality_criteria_representation );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERION'  ) IN TYPEOF( q ) ) ) ) > 0 );
  END_ENTITY;

  ENTITY externally_conditioned_data_quality_criterion
    SUPERTYPE OF ( 
        ONEOF ( 
            violation_of_agreed_conditions_on_system_environment, 
            miscellaneous_violation, 
            use_of_restricted_functionality ) )
    SUBTYPE OF ( data_quality_criterion, data_quality_measurement_requirement );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'  + 'CRITERION' ) ) = 0 );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'  + 'RELATING_REPRESENTATION_ITEM' ) ) = 0 );
  END_ENTITY;

  ENTITY externally_conditioned_data_quality_inspection_instance_report_item
    SUBTYPE OF ( data_quality_inspection_instance_report_item );
      SELF\data_quality_inspection_instance_report_item.inspected_elements : SET [1 : ?] OF inspected_ecdq_element_select;
    WHERE
      wr1: ( SIZEOF( QUERY ( i1 <* bag_to_set( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'DATA_QUALITY_INSPECTION_INSTANCE_REPORT.' + 'INSPECTED_INSTANCES' ) ) | ( NOT ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT'  ) IN TYPEOF( i1.inspection_result ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY externally_conditioned_data_quality_inspection_result
    SUBTYPE OF ( data_quality_inspection_result );
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'EXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERION'  ) IN TYPEOF( SELF\data_quality_inspection_result.
               criterion_inspected ) );
  END_ENTITY;

  ENTITY externally_conditioned_data_quality_inspection_result_representation
    SUBTYPE OF ( data_quality_inspection_result_representation );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT'  ) IN TYPEOF( q ) ) ) ) > 0 );
  END_ENTITY;

  ENTITY externally_defined_activity_relationship
    SUBTYPE OF ( activity_relationship );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\activity_relationship.name IN pre_defined_activity_relationship_types ) );
  END_ENTITY;

  ENTITY externally_defined_address_assignment
    SUBTYPE OF ( address_assignment );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( EXISTS( SELF\address_assignment.address_type ) AND ( NOT ( SELF\address_assignment.address_type IN 
               pre_defined_address_assignment_types ) ) );
  END_ENTITY;

  ENTITY externally_defined_approval
    SUBTYPE OF ( approval );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\approval.purpose IN pre_defined_approval_types ) );
  END_ENTITY;

  ENTITY externally_defined_approval_status
    SUBTYPE OF ( approval_status );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\approval_status.status_name IN pre_defined_approval_status_types ) );
  END_ENTITY;

  ENTITY externally_defined_colour
    SUBTYPE OF ( colour );
      source  : STRING;
  END_ENTITY;

  ENTITY externally_defined_curve_font
    SUBTYPE OF ( curve_font );
      curve_font_reference  : STRING;
  END_ENTITY;

  ENTITY externally_defined_date_or_date_time_assignment
    SUBTYPE OF ( date_or_date_time_assignment );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\date_or_date_time_assignment.role IN pre_defined_date_or_date_time_assignment_types ) );
  END_ENTITY;

  ENTITY externally_defined_hatch_style
    SUBTYPE OF ( hatch_style );
  END_ENTITY;

  ENTITY externally_defined_marker
    SUBTYPE OF ( marker );
      marker_reference  : STRING;
  END_ENTITY;

  ENTITY externally_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF ( organization_or_person_in_organization_assignment );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\organization_or_person_in_organization_assignment.role IN 
               pre_defined_organization_or_person_in_organization_assignment_types ) );
  END_ENTITY;

  ENTITY externally_defined_physical_network_group
    SUBTYPE OF ( physical_network_group );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\group.membership_meaning IN pre_defined_physical_network_group_types ) );
  END_ENTITY;

  ENTITY externally_defined_physical_network_group_element_relationship
    SUBTYPE OF ( physical_network_group_element_relationship );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\group_relationship.relation_type IN pre_defined_physical_network_group_relation_types ) );
  END_ENTITY;

  ENTITY externally_defined_picture_representation_item
    SUBTYPE OF ( picture_representation_item );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\representation_item.name IN pre_defined_picture_representation_types ) );
  END_ENTITY;

  ENTITY externally_defined_representation
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF external_representation_item;
      external_source            : external_source;
  END_ENTITY;

  ENTITY externally_defined_security_classification
    SUBTYPE OF ( security_classification );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\security_classification.classification_level IN pre_defined_security_classification_types ) );
  END_ENTITY;

  ENTITY externally_defined_terminator
    SUBTYPE OF ( terminator );
      terminator_reference  : STRING;
  END_ENTITY;

  ENTITY externally_defined_text_font;
      name  : STRING;
  END_ENTITY;

  ENTITY externally_defined_tile_style
    SUBTYPE OF ( tile_style );
  END_ENTITY;

  ENTITY externally_defined_type_qualifier
    SUBTYPE OF ( type_qualifier );
      external_source  : external_source;
    WHERE
      wr1: ( NOT ( name IN pre_defined_type_qualifiers ) );
  END_ENTITY;

  ENTITY externally_defined_work_request
    SUBTYPE OF ( work_request );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\work_request.purpose IN pre_defined_work_request_types ) );
  END_ENTITY;

  ENTITY externally_defined_work_request_status
    SUBTYPE OF ( work_request_status );
    INVERSE
      source : external_source_identification FOR item;
    WHERE
      wr1: ( NOT ( SELF\work_request_status.status IN pre_defined_work_request_status_types ) );
  END_ENTITY;

  ENTITY extreme_instance;
      locations_of_extreme_value  : SET [1 : ?] OF location_of_extreme_value_select;
      measured_value              : measured_value_select;
  END_ENTITY;

  ENTITY extreme_patch_width_variation
    SUBTYPE OF ( geometry_with_local_irregularity );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_KNOT_LOCATOR'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY extruded_solid
    SUBTYPE OF ( swept_solid );
      depth               : length_measure;
      extruded_direction  : direction;
  END_ENTITY;

  ENTITY extruded_solid_with_draft_angle
    SUBTYPE OF ( extruded_solid_with_trim_conditions );
      draft_angle  : plane_angle_measure;
  END_ENTITY;

  ENTITY extruded_solid_with_multiple_draft_angles
    SUBTYPE OF ( extruded_solid_with_trim_conditions );
      draft_edges   : LIST [2 : ?] OF SET [1 : ?] OF edge_curve;
      draft_angles  : LIST [2 : ?] OF plane_angle_measure;
    WHERE
      wr1: ( SIZEOF( draft_edges ) = SIZEOF( draft_angles ) );
      wr2: ( SIZEOF( QUERY ( q <* draft_angles | ( q = 0 ) ) ) = 0 );
  END_ENTITY;

  ENTITY extruded_solid_with_trim_conditions
    SUPERTYPE OF ( 
        ONEOF ( 
            extruded_solid_with_draft_angle, 
            extruded_solid_with_multiple_draft_angles ) )
    SUBTYPE OF ( extruded_solid );
      start_condition         : trim_select;
      end_condition           : trim_select;
      start_condition_intent  : trim_intent;
      end_condition_intent    : trim_intent;
  END_ENTITY;

  ENTITY extruded_surface
    SUBTYPE OF ( swept_surface );
      extrusion_axis  : direction;
  END_ENTITY;

  ENTITY fabrication_joint
    SUBTYPE OF ( component_feature_joint );
      SELF\shape_element_relationship.relating : fabricated_feature_select;
      SELF\shape_element_relationship.related : fabricated_feature_select;
      auxiliary_joint_material               : OPTIONAL stratum_feature_template_component;
      SELF\shape_element.containing_shape    : layered_interconnect_module_design_view;
    DERIVE
      associated_interconnect_module  : layered_interconnect_module_design_view := SELF\component_feature_joint.
                                          associated_definition;
      fabrication_feature_1           : fabricated_feature_select := SELF\component_feature_joint.feature_1;
      fabrication_feature_2           : fabricated_feature_select := SELF\component_feature_joint.feature_2;
    WHERE
      wr1: ( fabrication_feature_1 <> fabrication_feature_2 );
      wr2: ( TYPEOF( fabrication_feature_1 ) <> TYPEOF( auxiliary_joint_material ) );
      wr3: ( TYPEOF( fabrication_feature_2 ) <> TYPEOF( auxiliary_joint_material ) );
  END_ENTITY;

  ENTITY fabrication_technology_specification
    SUBTYPE OF ( process_specification );
  END_ENTITY;

  ENTITY fabrication_thickness_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      characterized_class        : metal_or_dielectric;
      characterized_class_range  : range_characteristic;
      tolerance                  : tolerance_characteristic;
    WHERE
      wr1: ( SELF\product_view_definition.initial_context.life_cycle_stage = 'test' );
      wr2: ( NOT EXISTS( SELF\product_view_definition.id ) );
  END_ENTITY;

  ENTITY face
    SUBTYPE OF ( detailed_topological_model_element );
      bounds  : SET [1 : ?] OF face_bound;
    WHERE
      wr1: ( SIZEOF( QUERY ( temp <* bounds | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_OUTER_BOUND'  IN TYPEOF( temp ) ) ) ) <= 1 );
  END_ENTITY;

  ENTITY face_based_sheet_representation
    SUBTYPE OF ( composite_sheet_representation );
      face_surface  : surface;
      inner_bounds  : OPTIONAL SET [1 : ?] OF loop;
      outer_bound   : loop;
  END_ENTITY;

  ENTITY face_bound
    SUBTYPE OF ( detailed_topological_model_element );
      bound        : loop;
      orientation  : BOOLEAN;
  END_ENTITY;

  ENTITY face_outer_bound
    SUBTYPE OF ( face_bound );
  END_ENTITY;

  ENTITY face_shape_element
    SUBTYPE OF ( definitional_shape_element );
  END_ENTITY;

  ENTITY face_shape_element_relationship
    SUBTYPE OF ( shape_element_relationship );
      SELF\shape_element_relationship.relating : face_shape_element;
      SELF\shape_element_relationship.related : face_shape_element;
  END_ENTITY;

  ENTITY face_surface
    SUBTYPE OF ( detailed_geometric_model_element, face );
      face_geometry  : surface;
      same_sense     : BOOLEAN;
  END_ENTITY;

  ENTITY face_surface_with_excessive_patches_in_one_direction
    SUBTYPE OF ( overcomplex_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY face_termination
    SUBTYPE OF ( joggle_termination );
  END_ENTITY;

  ENTITY faceted_brep_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY fact_type
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            entity_assertion, 
            attribute_assertion ) );
      source            : extent;
      predicate_symbol  : STRING;
  END_ENTITY;

  ENTITY feature_definition_with_connection_area
    SUBTYPE OF ( shape_feature_definition );
      connection_area  : OPTIONAL SET [1 : ?] OF connection_zone;
  END_ENTITY;

  ENTITY fiducial
    SUBTYPE OF ( laminate_component );
  END_ENTITY;

  ENTITY fiducial_part_feature
    SUBTYPE OF ( part_tooling_feature );
  END_ENTITY;

  ENTITY fiducial_stratum_feature
    SUBTYPE OF ( stratum_feature );
  END_ENTITY;

  ENTITY filament_assembly
    SUBTYPE OF ( stock_material );
  END_ENTITY;

  ENTITY filament_laminate
    SUBTYPE OF ( constituent_part );
      made_from  : filament_assembly_material;
      shape      : OPTIONAL filament_laminate_shape;
  END_ENTITY;

  ENTITY filament_laminate_shape;
      cross_section  : shape_description_association;
  END_ENTITY;

  ENTITY file
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            digital_file, 
            hardcopy ) );
      id                   : STRING;
      version              : OPTIONAL STRING;
      contained_data_type  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY file_location_identification
    SUBTYPE OF ( external_item_identification );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FILE' IN TYPEOF( SELF\
               external_source_identification.item ) );
  END_ENTITY;

  ENTITY file_relationship;
      relation_type           : STRING;
      description             : OPTIONAL STRING;
      relating_document_file  : file;
      related_document_file   : file;
    WHERE
      wr1: ( relating_document_file :<>: related_document_file );
  END_ENTITY;

  ENTITY fill_area
    SUBTYPE OF ( annotation_element );
      SELF\styled_element.element  : annotation_fill_area;
      reference_point              : point;
  END_ENTITY;

  ENTITY fill_area_template
    SUBTYPE OF ( parametric_template );
      outer_boundary_style  : closed_curve_style_parameters;
      inner_boundary_style  : closed_curve_style_parameters;
  END_ENTITY;

  ENTITY fillet
    SUBTYPE OF ( transition_feature );
      fillet_face        : face_shape_element;
      first_face_shape   : face_shape_element;
      second_face_shape  : face_shape_element;
  END_ENTITY;

  ENTITY first_chamfer_offset;
      face_shape     : face_shape_element;
      offset_amount  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY fixed_constituent_assembly_constraint
    SUBTYPE OF ( fixed_element_geometric_constraint );
      fixed_constituent  : representative_geometric_model;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.constrained_elements ) = 1 );
  END_ENTITY;

  ENTITY fixed_element_geometric_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF geometric_constraint_element;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 0 );
  END_ENTITY;

  ENTITY fixed_instance_attribute_set
    SUBTYPE OF ( variational_representation_item );
      fixed_attributes  : SET [1 : ?] OF instance_attribute_reference;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* using_representations( SELF ) | ( SIZEOF( QUERY ( r <* q.items | ( 'PARAMETERIZATION_SCHEMA.'
               + 'FIXED_INSTANCE_ATTRIBUTE_SET'  IN TYPEOF( r ) ) ) ) > 1 ) ) ) = 0 );
  END_ENTITY;

  ENTITY flat_hole_bottom
    SUBTYPE OF ( blind_bottom_condition );
  END_ENTITY;

  ENTITY flat_pattern_ply_shape
    SUBTYPE OF ( ply_shape );
      wrapup_origin_on_flat_pattern  : cartesian_point;
      wrapup_origin_on_surface       : cartesian_point;
  END_ENTITY;

  ENTITY flat_slot_end_type
    SUBTYPE OF ( slot_end_type );
      first_radius   : numerical_item_with_unit;
      second_radius  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY flat_with_radius_hole_bottom
    SUBTYPE OF ( blind_bottom_condition );
      corner_radius  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY flat_with_taper_hole_bottom
    SUBTYPE OF ( blind_bottom_condition );
      taper_diameter  : numerical_item_with_unit;
      final_diameter  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY flatness_tolerance
    SUBTYPE OF ( geometric_tolerance );
  END_ENTITY;

  ENTITY footprint_definition
    SUBTYPE OF ( generic_footprint_definition );
      reference_package  : OPTIONAL part_usage_view;
    DERIVE
      locations_with_reference_feature  : SET OF part_feature_based_template_location := QUERY ( trf <* templates | ( 
                                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                            + 'PART_FEATURE_BASED_TEMPLATE_LOCATION'  IN TYPEOF( trf ) ) );
    WHERE
      wr1: ( SIZEOF( QUERY ( shape <* SELF\structured_template.shapes | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_DEFINITION_SHAPE_MODEL'  IN TYPEOF( 
               shape ) ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( tlist <* SELF\structured_template.templates | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_DEFINITION'  IN TYPEOF( tlist.
               template ) ) ) ) = 0 );
      wr3: ( ( SIZEOF( locations_with_reference_feature ) = 0 ) OR ( NOT EXISTS( reference_package ) ) OR ( SIZEOF( 
               QUERY ( lwrf <* locations_with_reference_feature | ( NOT ( reference_package :=: lwrf\
               part_feature_based_template_location.reference_feature\part_feature.associated_definition ) ) ) ) = 0 ) );
  END_ENTITY;

  ENTITY footprint_definition_shape_model
    SUBTYPE OF ( structured_template_planar_shape_model );
      SELF\structured_template_planar_shape_model.shape_characterized_definition : SET [1 : 1] OF footprint_definition;
      reference_shape                        : OPTIONAL lict_physical_unit_shape_model_select;
      reference_seating_plane_placement      : OPTIONAL usage_concept_usage_relationship;
    WHERE
      wr1 : ( ( NOT ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_3D_SHAPE_MODEL', 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' ] * 
                TYPEOF( reference_shape ) ) = 1 ) ) OR ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                + 'PART_USAGE_VIEW'  IN TYPEOF( reference_shape\physical_unit_shape_model.shape_characterized_definition ) ) ) OR
                ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_DEFINITION' IN TYPEOF( 
                shape_characterized_definition[1] ) ) ) OR ( shape_characterized_definition[1]\footprint_definition.
                reference_package :=: reference_shape\physical_unit_shape_model.shape_characterized_definition ) );
      wr2 : ( ( NOT ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_3D_SHAPE_MODEL', 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' ] * 
                TYPEOF( reference_shape ) ) = 1 ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                + 'PART_USAGE_VIEW'  IN TYPEOF( reference_shape\physical_unit_shape_model.shape_characterized_definition ) ) );
      wr3 : ( NOT EXISTS( SELF\representation.description ) );
      wr4 : ( ( NOT EXISTS( reference_shape ) ) OR EXISTS( shape_characterized_definition[1]\footprint_definition.
                reference_package ) );
      wr5 : ( ( NOT EXISTS( reference_seating_plane_placement ) ) OR EXISTS( reference_shape ) );
      wr6 : ( ( NOT EXISTS( reference_seating_plane_placement ) ) OR ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE'  IN TYPEOF( 
                shape_characterized_definition[1]\footprint_definition.reference_package ) ) );
      wr7 : ( ( NOT EXISTS( reference_seating_plane_placement ) ) OR ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SEATING_PLANE'  IN TYPEOF( 
                reference_seating_plane_placement\usage_concept_usage_relationship.associated_usage ) ) );
      wr8 : ( ( NOT EXISTS( reference_seating_plane_placement ) ) OR ( reference_seating_plane_placement\
                usage_concept_usage_relationship.associating_usage_shape\usage_view_level_non_feature_shape_model.model_shape = 
                reference_shape ) );
      wr9 : ( ( NOT EXISTS( reference_seating_plane_placement ) ) OR ( reference_seating_plane_placement\
                usage_concept_usage_relationship.associated_usage\non_feature_shape_element.scope = shape_characterized_definition
                [1]\footprint_definition.reference_package ) );
      wr10: ( ( NOT EXISTS( reference_seating_plane_placement ) ) OR ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_3D_SHAPE_MODEL'  IN TYPEOF( 
                reference_seating_plane_placement\usage_concept_usage_relationship.associating_usage_shape\
                usage_view_level_non_feature_shape_model.model_shape ) ) );
      wr11: ( NOT ( EXISTS( reference_seating_plane_placement ) AND ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN 
                TYPEOF( reference_shape ) ) ) );
      wr12: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' IN 
                TYPEOF( reference_shape ) ) ) OR ( SELF\geometric_model.context_of_items = reference_shape\geometric_model.
                context_of_items ) );
  END_ENTITY;

  ENTITY footprint_library_stratum_technology
    SUBTYPE OF ( stratum_technology );
    WHERE
      wr1: ( NOT EXISTS( stratum_thickness ) );
  END_ENTITY;

  ENTITY footprint_occurrence
    SUBTYPE OF ( structured_layout_component );
      SELF\definition_based_product_occurrence.derived_from : generic_footprint_definition;
  END_ENTITY;

  ENTITY footprint_occurrence_sub_assembly_relationship
    SUBTYPE OF ( structured_layout_component_sub_assembly_relationship );
      SELF\structured_layout_component_sub_assembly_relationship.relating_view : footprint_occurrence;
      SELF\structured_layout_component_sub_assembly_relationship.related_view : laminate_component;
      SELF\structured_layout_component_sub_assembly_relationship.first_location : part_feature_based_template_location;
      SELF\structured_layout_component_sub_assembly_relationship.second_location : template_location_in_structured_template;
    DERIVE
      sub_assembly_reference_designation  : template_location_in_structured_template := SELF\
                                              structured_layout_component_sub_assembly_relationship.second_location;
      terminal_location                   : part_feature_based_template_location := SELF\
                                              structured_layout_component_sub_assembly_relationship.first_location;
    WHERE
      wr1: ( terminal_location.assembly :=: relating_view.derived_from );
      wr2: ( terminal_location.template :=: sub_assembly_reference_designation.assembly );
      wr3: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PADSTACK_DEFINITION' IN TYPEOF( 
               sub_assembly_reference_designation.assembly ) );
  END_ENTITY;

  ENTITY force_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY form_feature_in_panel
    SUBTYPE OF ( process_feature_in_panel );
      base_boundary_defined_by    : profile_or_angle_select;
      base_radius                 : length_data_element;
      feature_type                : form_feature_in_panel_type;
      target_boundary_defined_by  : profile_or_angle_select;
      target_face                 : OPTIONAL general_end_select;
      target_radius               : angle_data_element;
  END_ENTITY;

  ENTITY format_function
    SUBTYPE OF ( string_expression, binary_generic_expression );
    DERIVE
      value_to_format  : generic_expression := SELF\binary_generic_expression.operands[1];
      format_string    : generic_expression := SELF\binary_generic_expression.operands[2];
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_EXPRESSION' IN TYPEOF( value_to_format ) ) 
               AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_EXPRESSION' IN TYPEOF( 
               format_string ) ) );
  END_ENTITY;

  ENTITY forward_chaining_rule
    SUBTYPE OF ( rule_definition );
      premise     : clause_select;
      conclusion  : literal_conjunction;
    WHERE
      wr1: ( local_vars_of( SELF.conclusion ) <= local_vars_of( SELF.premise ) );
  END_ENTITY;

  ENTITY free_edge
    SUBTYPE OF ( inapt_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr4: validate_accuracy_types( SELF, [] );
      wr5: ( SIZEOF( QUERY ( sdqr <* bag_to_set( USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_RESULT.' + 
               'CRITERION_INSPECTED'  ) ) | ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'SHAPE_DATA_QUALITY_INSPECTION_RESULT'  ) IN TYPEOF( sdqr ) ) AND ( SIZEOF( QUERY ( sdqiir <* bag_to_set( USEDIN( 
               sdqr, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'DATA_QUALITY_INSPECTION_REPORT.' + 
               'INSPECTION_RESULT'  ) ) | ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'  ) IN TYPEOF( sdqiir ) ) AND ( SIZEOF( QUERY ( sdqiri <* sdqiir.
               inspected_instances | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CLOSED_SHELL' IN 
               TYPEOF( sdqiri.inspected_elements[1] ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY free_form_assignment
    SUBTYPE OF ( explicit_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF variational_parameter_select;
      SELF\explicit_constraint.reference_elements : SET [1 : ?] OF variational_parameter_select;
      constraining_expression                : expression;
  END_ENTITY;

  ENTITY free_form_relation
    SUBTYPE OF ( explicit_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF variational_parameter_select;
      SELF\explicit_constraint.reference_elements : SET [0 : ?] OF variational_parameter_select;
      constraining_expression                : boolean_expression;
  END_ENTITY;

  ENTITY free_kinematic_motion_representation
    SUBTYPE OF ( geometric_model_relationship_with_transformation );
      SELF\representation_relationship.rep_1 : representative_geometric_model;
      SELF\representation_relationship.rep_2 : representative_geometric_model;
  END_ENTITY;

  ENTITY frequency_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY frozen_assignment;
      frozen_item  : SET [1 : ?] OF change_management_object;
  END_ENTITY;

  ENTITY fully_constrained_pair
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := FALSE;
  END_ENTITY;

  ENTITY func;
      func_sym  : function_symbol;
      terms     : LIST OF term_select;
  END_ENTITY;

  ENTITY function_parameter_value
    SUPERTYPE OF ( 
        int_value_function )
    SUBTYPE OF ( numeric_expression, unary_generic_expression );
      SELF\unary_generic_expression.operand  : string_expression;
  END_ENTITY;

  ENTITY functional_breakdown
    SUBTYPE OF ( breakdown );
  END_ENTITY;

  ENTITY functional_breakdown_context
    SUBTYPE OF ( breakdown_context );
      SELF\breakdown_context.breakdown       : functional_breakdown_version;
      SELF\breakdown_context.breakdown_element : functional_element_definition;
  END_ENTITY;

  ENTITY functional_breakdown_version
    SUBTYPE OF ( breakdown_version );
      SELF\breakdown_version.of_product  : functional_breakdown;
  END_ENTITY;

  ENTITY functional_element
    SUBTYPE OF ( breakdown_element );
  END_ENTITY;

  ENTITY functional_element_definition
    SUBTYPE OF ( breakdown_element_definition );
      SELF\breakdown_element_definition.defined_version : functional_element_version;
  END_ENTITY;

  ENTITY functional_element_usage
    SUBTYPE OF ( breakdown_element_usage );
      SELF\view_definition_relationship.relating_view : functional_element_definition;
      SELF\view_definition_relationship.related_view : functional_element_definition;
  END_ENTITY;

  ENTITY functional_element_version
    SUBTYPE OF ( breakdown_element_version );
      SELF\breakdown_element_version.of_product : functional_element;
  END_ENTITY;

  ENTITY functional_product
    SUBTYPE OF ( information_product );
    UNIQUE
      ur1 : SELF\product.id;
  END_ENTITY;

  ENTITY functional_specification;
      associated_definition           : functional_specification_definition;
      reference_signal                : SET [1 : ?] OF signal_specification;
      characterizing_functional_unit  : functional_unit;
      characterizing_signal           : SET [1 : ?] OF signal_specification;
    INVERSE
      characteristic_category : external_source_identification FOR item;
    WHERE
      wr1: ( characterizing_functional_unit.composed_network = associated_definition );
  END_ENTITY;

  ENTITY functional_specification_definition
    SUBTYPE OF ( functional_unit_network_definition );
    INVERSE
      composing_specification : SET [1 : ?] OF functional_specification FOR associated_definition;
  END_ENTITY;

  ENTITY functional_terminal_group;
      name               : STRING;
      group_description  : STRING;
      group_type         : STRING;
    UNIQUE
      ur1 : name;
  END_ENTITY;

  ENTITY functional_terminal_group_assignment;
      composed_group                  : functional_terminal_group;
      functional_usage_view_terminal  : scalar_terminal_definition;
  END_ENTITY;

  ENTITY functional_unit
    SUBTYPE OF ( product_view_definition );
      composed_network                 : functional_unit_network_definition;
      definition                       : functional_unit_definition;
      SELF\product_view_definition.id  : STRING;
      functional_property              : OPTIONAL SET [1 : ?] OF nfdv_pa_or_parameter_assignment_override;
    DERIVE
      SELF\product_view_definition.defined_version : functional_version := definition\functional_unit_definition.defined_version;
      reference_designation                  : STRING := SELF\product_view_definition.id;
    INVERSE
      access_mechanisms : SET [1 : ?] OF functional_unit_terminal FOR accessed_functional_unit;
    UNIQUE
      ur1 : reference_designation, composed_network;
  END_ENTITY;

  ENTITY functional_unit_definition
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            functional_unit_network_definition, 
            functional_unit_usage_view ) )
    SUBTYPE OF ( information_definition, item_shape );
      SELF\product_view_definition.defined_version : functional_version;
    DERIVE
      SELF\item_shape.described_element  : shapeable_item := SELF;
  END_ENTITY;

  ENTITY functional_unit_make_from_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : functional_unit_usage_view;
      SELF\view_definition_relationship.related_view : functional_unit_usage_view;
    WHERE
      wr1: acyclic_functional_unit_make_from_relationship( SELF, [related_view], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP'  );
  END_ENTITY;

  ENTITY functional_unit_network_definition
    SUBTYPE OF ( functional_unit_definition );
      usage_view  : functional_unit_usage_view;
  END_ENTITY;

  ENTITY functional_unit_network_node_definition
    SUBTYPE OF ( product_view_definition );
      associated_functional_unit_definition  : functional_unit_network_definition;
      SELF\product_view_definition.additional_characterization : STRING;
    DERIVE
      SELF\product_view_definition.defined_version : functional_version := associated_functional_unit_definition.defined_version;
      valid_conservative_node                : LOGICAL := ( SIZEOF( USEDIN( SELF, 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'BUS_ELEMENT_LINK.PRECEDENT_ELEMENT'  ) ) + SIZEOF( USEDIN( SELF, 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'BUS_ELEMENT_LINK.SUBSEQUENT_ELEMENT'  ) ) + SIZEOF( USEDIN( SELF, 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'FUNCTIONAL_UNIT_TERMINAL_NODE_ASSIGNMENT.COMPOSED_NODE'  ) ) + SIZEOF( 
                                                 external_node_access ) ) > 1;
      functional_unit_network_node_name      : STRING := SELF\product_view_definition.additional_characterization;
    INVERSE
      external_node_access : SET [0 : 1] OF functional_unit_network_terminal_definition_node_assignment FOR composed_node;
    WHERE
      wr1: EXISTS( valid_conservative_node );
  END_ENTITY;

  ENTITY functional_unit_network_terminal_definition_bus_assignment;
      connected_bus       : bus_structural_definition;
      connected_terminal  : functional_unit_usage_view_terminal_definition;
    UNIQUE
      ur1 : connected_bus, connected_terminal;
  END_ENTITY;

  ENTITY functional_unit_network_terminal_definition_node_assignment;
      composed_node       : functional_unit_network_node_definition;
      connected_terminal  : functional_unit_usage_view_terminal_definition;
    UNIQUE
      ur1 : composed_node, connected_terminal;
  END_ENTITY;

  ENTITY functional_unit_requirement_allocation
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_to : functional_unit;
    WHERE
      wr1: ( NOT EXISTS( SELF\requirement_assignment.description ) );
  END_ENTITY;

  ENTITY functional_unit_terminal;
      accessed_functional_unit  : functional_unit;
      definition                : functional_unit_usage_view_terminal_definition;
    INVERSE
      bus_assignment : SET [0 : 1] OF functional_unit_terminal_bus_assignment FOR connected_terminal;
      node_assignment : SET [0 : 1] OF functional_unit_terminal_node_assignment FOR connected_terminal;
  END_ENTITY;

  ENTITY functional_unit_terminal_bus_assignment;
      connected_bus       : bus_structural_definition;
      connected_terminal  : functional_unit_terminal;
  END_ENTITY;

  ENTITY functional_unit_terminal_node_assignment;
      composed_node       : functional_unit_network_node_definition;
      connected_terminal  : functional_unit_terminal;
  END_ENTITY;

  ENTITY functional_unit_usage_view
    SUBTYPE OF ( functional_unit_definition );
    DERIVE
      analytical_model_application_reference : SET [0 : ?] OF analytical_model_application := get_ama( access_mechanism[1] );
    INVERSE
      access_mechanism : SET [0 : ?] OF functional_unit_usage_view_terminal_definition FOR associated_functional_unit_definition;
    WHERE
      wr1: ( SIZEOF( analytical_model_application_reference ) <= 1 );
      wr2: ( ( NOT ( SIZEOF( analytical_model_application_reference ) = 1 ) ) OR ( SIZEOF( QUERY ( am <* access_mechanism | ( 
               NOT ( ( SIZEOF( USEDIN( am, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'  ) ) = 0 ) OR ( SIZEOF( QUERY ( ampa <* USEDIN( am, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'  )
               | ( NOT ( analytical_model_application_reference[1] :=: ampa.associated_analytical_model_application ) ) ) ) = 0 ) ) ) ) ) 
               = 0 ) );
  END_ENTITY;

  ENTITY functional_unit_usage_view_terminal_definition
    SUPERTYPE OF ( 
        scalar_terminal_definition );
      associated_functional_unit_definition  : functional_unit_usage_view;
      signal_name                            : STRING;
    UNIQUE
      ur1 : signal_name, associated_functional_unit_definition;
  END_ENTITY;

  ENTITY functional_unit_usage_view_terminal_definition_make_from_relationship;
      associated_make_from  : functional_unit_make_from_relationship;
      reusable_feature      : functional_unit_usage_view_terminal_definition;
      resultant_feature     : functional_unit_usage_view_terminal_definition;
    UNIQUE
      ur1 : reusable_feature, resultant_feature;
    WHERE
      wr1: ( reusable_feature :<>: resultant_feature );
      wr2: ( reusable_feature.associated_functional_unit_definition :<>: resultant_feature.associated_functional_unit_definition );
      wr3: ( reusable_feature.associated_functional_unit_definition :=: associated_make_from\
               functional_unit_make_from_relationship.relating_view );
      wr4: ( resultant_feature.associated_functional_unit_definition :=: associated_make_from\
               functional_unit_make_from_relationship.related_view );
      wr5: acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship( SELF, [resultant_feature], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP'  );
  END_ENTITY;

  ENTITY functional_usage_view_to_part_terminal_assignment;
      physical_usage_view_terminal    : part_terminal;
      functional_usage_view_terminal  : scalar_terminal_definition;
    UNIQUE
      ur1 : functional_usage_view_terminal, physical_usage_view_terminal;
  END_ENTITY;

  ENTITY functional_usage_view_to_printed_part_template_terminal_assignment;
      physical_usage_view_terminal    : printed_part_template_terminal;
      functional_usage_view_terminal  : scalar_terminal_definition;
    UNIQUE
      ur1 : functional_usage_view_terminal, physical_usage_view_terminal;
  END_ENTITY;

  ENTITY functional_version
    SUBTYPE OF ( information_version );
      SELF\product_version.of_product  : functional_product;
  END_ENTITY;

  ENTITY g1_discontinuity_between_adjacent_faces
    SUBTYPE OF ( non_smooth_geometry_transition_across_edge );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE'  );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_EDGE_CURVE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE' ] );
  END_ENTITY;

  ENTITY g1_discontinuous_curve
    SUBTYPE OF ( discontinuous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE'  );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_CURVE_KNOT_LOCATOR'] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY g1_discontinuous_surface
    SUBTYPE OF ( discontinuous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE'  );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_KNOT_LOCATOR'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE' ] );
  END_ENTITY;

  ENTITY g2_discontinuity_between_adjacent_faces
    SUBTYPE OF ( non_smooth_geometry_transition_across_edge );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2             : shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance        : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF.assessment_specification_2.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_MEASURE'  IN value_limit_type( SELF.
               assessment_specification_2.threshold ) ) );
      wr3: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'PLANE_ANGLE_AND_RATIO_PAIR'  );
      wr4: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr5: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_EDGE_CURVE'] );
      wr6: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_MEASURE'] );
  END_ENTITY;

  ENTITY g2_discontinuous_curve
    SUBTYPE OF ( discontinuous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2             : shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance        : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF.assessment_specification_2.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_MEASURE'  IN value_limit_type( SELF.
               assessment_specification_2.threshold ) ) );
      wr3: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'PLANE_ANGLE_AND_RATIO_PAIR'  );
      wr4: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_CURVE' ] );
      wr5: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_CURVE_KNOT_LOCATOR'] );
      wr6: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY g2_discontinuous_surface
    SUBTYPE OF ( discontinuous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2             : shape_data_quality_assessment_by_numerical_test;
      flat_curvature_radius_tolerance        : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF.assessment_specification_2.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_MEASURE'  IN value_limit_type( SELF.
               assessment_specification_2.threshold ) ) );
      wr3: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'PLANE_ANGLE_AND_RATIO_PAIR'  );
      wr4: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr5: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_KNOT_LOCATOR'] );
      wr6: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_MEASURE'] );
  END_ENTITY;

  ENTITY gap_between_adjacent_edges_in_loop
    SUBTYPE OF ( geometric_gap_in_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE_LOOP'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ORIENTED_EDGE' ] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY gap_between_edge_and_base_surface
    SUBTYPE OF ( geometric_gap_in_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_EDGE_CURVE', 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'POINT_ON_FACE_SURFACE' ] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY gap_between_faces_related_to_an_edge
    SUBTYPE OF ( geometric_gap_in_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_EDGE_CURVE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY gap_between_pcurves_related_to_an_edge
    SUBTYPE OF ( geometric_gap_in_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'POINT_ON_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POINT_ON_SURFACE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY gap_between_vertex_and_base_surface
    SUBTYPE OF ( geometric_gap_in_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'VERTEX_POINT' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'POINT_ON_FACE_SURFACE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY gap_between_vertex_and_edge
    SUBTYPE OF ( geometric_gap_in_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'VERTEX_POINT' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'POINT_ON_EDGE_CURVE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY gate_path_swap_specification
    SUBTYPE OF ( modify_single_element );
      SELF\modify_single_element.current_design_object : design_functional_unit_allocation_to_reference_functional_unit;
      SELF\modify_single_element.previous_design_object : design_functional_unit_allocation_to_reference_functional_unit;
  END_ENTITY;

  ENTITY gdt_representation_shape
    SUBTYPE OF ( nominal_3d_model_shape, part_shape );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GDT_REPRESENTATION_VIEW_CONTEXT' IN TYPEOF( 
               described_element\product_view_definition.additional_contexts ) );
  END_ENTITY;

  ENTITY gdt_representation_view_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'geometrical dimensioning and tolerancing representation';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'INITIAL_CONTEXT'  ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( pvd <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS'  ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MODEL_BASED_VIEW_CONTEXT'  IN TYPEOF( pvd.
               initial_context ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY gear
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            catalogue_gear, 
            defined_gear ) )
    SUBTYPE OF ( machining_feature );
      nominal_tooth_depth          : numerical_item_with_unit;
      reference_preassure_angle    : numerical_item_with_unit;
      profile_shift                : numerical_item_with_unit;
      number_of_teeth              : numerical_item_with_unit;
      face_width                   : numerical_item_with_unit;
      tip_diameter                 : numerical_item_with_unit;
      normal_attribute             : numerical_item_with_unit;
      applied_shape                : definitional_shape_element;
      internal_or_external_gear    : BOOLEAN;
      module_or_diametrical_pitch  : BOOLEAN;
      root_fillet_radius           : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY gear_pair
    SUBTYPE OF ( low_order_kinematic_pair_with_motion_coupling );
      radius_first_link   : length_measure;
      radius_second_link  : length_measure;
      bevel               : plane_angle_measure;
      helical_angle       : plane_angle_measure;
      gear_ratio          : REAL;
    WHERE
      wr1: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY gear_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : gear_pair;
      actual_rotation_1                : plane_angle_measure;
    DERIVE
      actual_rotation_2  : plane_angle_measure := ( -actual_rotation_1 ) * SELF\pair_value.applies_to_pair\gear_pair.gear_ratio;
  END_ENTITY;

  ENTITY gear_pair_with_range
    SUBTYPE OF ( gear_pair );
      lower_limit_actual_rotation_1  : OPTIONAL plane_angle_measure;
      upper_limit_actual_rotation_1  : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_actual_rotation_1 ) ) OR ( NOT EXISTS( upper_limit_actual_rotation_1 ) ) ) XOR ( 
               lower_limit_actual_rotation_1 < upper_limit_actual_rotation_1 ) );
  END_ENTITY;

  ENTITY general_boss
    SUBTYPE OF ( boss );
      enclosed_boundary   : closed_profile;
      change_in_boundary  : OPTIONAL angle_or_directed_taper;
  END_ENTITY;

  ENTITY general_closed_profile
    SUBTYPE OF ( closed_profile );
      closed_profile_shape  : path_element;
  END_ENTITY;

  ENTITY general_cutout
    SUBTYPE OF ( cutout_feature );
      boundary  : profile;
  END_ENTITY;

  ENTITY general_datum_reference
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            datum_reference_compartment, 
            datum_reference_element ) )
    SUBTYPE OF ( non_definitional_shape_element );
      base       : datum_or_common_datum;
      modifiers  : OPTIONAL SET [1 : ?] OF datum_reference_modifier;
  END_ENTITY;

  ENTITY general_feature
    SUBTYPE OF ( shape_feature_definition );
  END_ENTITY;

  ENTITY general_material_property
    SUBTYPE OF ( independent_property );
    WHERE
      wr1: ( SIZEOF( QUERY ( aip <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'APPLIED_INDEPENDENT_PROPERTY.'  + 'BASE_INDEPENDENT_PROPERTY' ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.APPLIED_INDEPENDENT_MATERIAL_PROPERTY'  IN 
               TYPEOF( aip ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY general_open_profile
    SUBTYPE OF ( open_profile );
      enclosed_boundary  : path_element;
  END_ENTITY;

  ENTITY general_outside_profile
    SUBTYPE OF ( profile_feature );
      boundary  : profile;
  END_ENTITY;

  ENTITY general_part_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            via_template_terminal, 
            component_termination_passage_template_terminal, 
            land_template_terminal ) )
    SUBTYPE OF ( definitional_shape_element, part_shape_element );
  END_ENTITY;

  ENTITY general_path_feature_component
    SUBTYPE OF ( path_feature_component );
      sweep_path  : path_element;
  END_ENTITY;

  ENTITY general_pattern
    SUBTYPE OF ( replicate_feature );
      feature_placement  : SET [1 : ?] OF axis_placement;
  END_ENTITY;

  ENTITY general_pocket
    SUBTYPE OF ( pocket );
      volume_not_removed  : SET [0 : ?] OF volume_select;
      boundary            : profile;
  END_ENTITY;

  ENTITY general_pocket_bottom_condition
    SUBTYPE OF ( pocket_bottom_condition );
      floor         : face_shape_element;
      floor_radius  : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY general_profile_floor
    SUBTYPE OF ( profile_floor );
      floor  : face_shape_element;
  END_ENTITY;

  ENTITY general_removal_volume
    SUBTYPE OF ( multi_axis_feature );
      removal_volume  : SET [1 : ?] OF definitional_shape_element;
  END_ENTITY;

  ENTITY general_revolution
    SUBTYPE OF ( revolved_feature );
      outer_edge_shape  : general_open_profile;
  END_ENTITY;

  ENTITY general_rib_top_floor
    SUBTYPE OF ( rib_top_floor );
      rib_top_face  : SET [1 : ?] OF face_shape_element;
  END_ENTITY;

  ENTITY general_shape_profile
    SUBTYPE OF ( shape_profile );
      profile_boundary  : profile;
  END_ENTITY;

  ENTITY general_symbol
    SUBTYPE OF ( representation );
  END_ENTITY;

  ENTITY general_tolerance_table;
      tolerance_type  : STRING;
    INVERSE
      cell : SET [1 : ?] OF tolerance_table_cell FOR tolerance_table;
  END_ENTITY;

  ENTITY general_tolerances
    SUBTYPE OF ( default_shape_property );
      table_definition  : general_tolerance_table_select;
      tolerance_class   : STRING;
  END_ENTITY;

  ENTITY general_top_condition
    SUBTYPE OF ( boss_top_condition );
      top_face  : face_shape_element;
  END_ENTITY;

  ENTITY generated_finite_numeric_space
    SUBTYPE OF ( maths_space );
      start_value      : NUMBER;
      increment_value  : NUMBER;
      increments       : maths_integer;
    DERIVE
      members  : SET [2 : ?] OF NUMBER := make_numeric_set( start_value, increment_value, increments );
    WHERE
      wr1: ( increment_value <> 0 );
      wr2: ( increments > 0 );
  END_ENTITY;

  ENTITY generic_annotation_curve
    SUBTYPE OF ( annotation_curve );
  END_ENTITY;

  ENTITY generic_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            simple_generic_expression, 
            unary_generic_expression, 
            binary_generic_expression, 
            multiple_arity_generic_expression ) );
    WHERE
      wr1: is_acyclic( SELF );
  END_ENTITY;

  ENTITY generic_footprint_definition
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            footprint_definition, 
            breakout_footprint_definition ) )
    SUBTYPE OF ( multi_stratum_structured_template );
    DERIVE
      padstack_based_location    : template_arrangement := get_template_arrangement( padstacks );
      padstacks                  : SET [1 : ?] OF template_location_in_structured_template := QUERY ( tlict <* SELF\
                                     structured_template.templates | ( 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PADSTACK_DEFINITION'  IN
                                     TYPEOF( tlict.template ) ) );
      single_stratum_components  : SET [0 : ?] OF single_stratum_template := fd_get_single_stratum_components( SELF\
                                     structured_template.templates );
    WHERE
      wr1: ( SIZEOF( QUERY ( ps <* SELF\structured_template.templates | ( ( ps\template_location_in_structured_template.template\
               multi_stratum_structured_template.location <> SELF\multi_stratum_structured_template.location ) AND ( ps\
               template_location_in_structured_template.template\multi_stratum_structured_template.location <> 
               template_arrangement.symmetrical ) ) ) ) = 0 );
      wr2: ( ( ( SELF\multi_stratum_structured_template.location = template_arrangement.top ) AND ( SELF\product_view_definition.
               initial_context\view_definition_context.description = 'top' ) ) OR ( ( NOT ( SELF\multi_stratum_structured_template
               .location = template_arrangement.top ) ) AND ( NOT ( SELF\product_view_definition.initial_context\
               view_definition_context.description = 'top' ) ) ) );
      wr3: ( ( ( SELF\multi_stratum_structured_template.location = template_arrangement.bottom ) AND ( SELF\
               product_view_definition.initial_context\view_definition_context.description = 'bottom' ) ) OR ( ( NOT ( SELF\
               multi_stratum_structured_template.location = template_arrangement.bottom ) ) AND ( NOT ( SELF\
               product_view_definition.initial_context\view_definition_context.description = 'bottom' ) ) ) );
      wr4: ( ( ( SELF\multi_stratum_structured_template.location = template_arrangement.symmetrical ) AND ( SELF\
               product_view_definition.initial_context\view_definition_context.description = 'symmetrical' ) ) OR ( ( NOT ( SELF\
               multi_stratum_structured_template.location = template_arrangement.symmetrical ) ) AND ( NOT ( SELF\
               product_view_definition.initial_context\view_definition_context.description = 'symmetrical' ) ) ) );
      wr5: ( ( ( SELF\multi_stratum_structured_template.location = template_arrangement.swappable ) AND ( SELF\
               product_view_definition.initial_context\view_definition_context.description = 'swappable' ) ) OR ( ( NOT ( SELF\
               multi_stratum_structured_template.location = template_arrangement.swappable ) ) AND ( NOT ( SELF\
               product_view_definition.initial_context\view_definition_context.description = 'swappable' ) ) ) );
      wr6: ( ( NOT ( SIZEOF( single_stratum_components ) = 0 ) ) OR ( SELF\multi_stratum_structured_template.location = 
               padstack_based_location ) );
  END_ENTITY;

  ENTITY generic_laminate_text_component
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            additive_laminate_text_component, 
            material_removal_laminate_text_component ) )
    SUBTYPE OF ( laminate_component );
      SELF\definition_based_product_occurrence.derived_from : part_text_template;
    DERIVE
      of_character  : label1 := derived_from\part_text_template.of_character\character_glyph_symbol.character;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY generic_literal
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( simple_generic_expression );
  END_ENTITY;

  ENTITY generic_physical_network
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            unrouted_physical_network, 
            routed_physical_network ) );
      name                                   : STRING;
      current_associated_definition          : layered_interconnect_module_design_view;
      prior_associated_definition            : OPTIONAL SET [1 : ?] OF layered_interconnect_module_design_view;
      connectivity_requirement_element       : SET [1 : ?] OF laminate_component_join_terminal;
      reference_connected_terminals          : OPTIONAL part_connected_terminals_definition;
      unrouted_connectivity_requirement_element : OPTIONAL SET [1 : ?] OF unrouted_join_relationship;
    UNIQUE
      ur1 : name, current_associated_definition;
    WHERE
      wr1: ( ( NOT EXISTS( prior_associated_definition ) ) OR ( NOT ( current_associated_definition IN 
               prior_associated_definition ) ) );
  END_ENTITY;

  ENTITY generic_product_view_definition_reference
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            product_view_definition_reference, 
            product_view_definition_reference_with_local_representation ) );
      source  : external_source_identification;
  END_ENTITY;

  ENTITY generic_variable
    ABSTRACT SUPERTYPE OF ( 
        variable )
    SUBTYPE OF ( simple_generic_expression );
    INVERSE
      interpretation : environment FOR syntactic_representation;
  END_ENTITY;

  ENTITY geometric_alignment
    SUBTYPE OF ( derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [2 : ?] OF shape_element;
  END_ENTITY;

  ENTITY geometric_composition_with_operator_transformation
    SUBTYPE OF ( geometric_relationship_with_operator_transformation, definitional_representation_relationship );
  END_ENTITY;

  ENTITY geometric_composition_with_placement_transformation
    SUBTYPE OF ( geometric_relationship_with_placement_transformation, definitional_representation_relationship );
  END_ENTITY;

  ENTITY geometric_contact
    SUBTYPE OF ( derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [2 : 2] OF shape_element;
  END_ENTITY;

  ENTITY geometric_coordinate_space
    SUPERTYPE OF ( 
        ONEOF ( 
            geometric_representation_context_with_parameter, 
            path_parameter_representation_context ) )
    SUBTYPE OF ( numerical_representation_context );
      dimension_count  : INTEGER;
    WHERE
      wr1: ( dimension_count > 0 );
  END_ENTITY;

  ENTITY geometric_dimension
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            dimensional_location, 
            dimensional_size ) );
      id                   : STRING;
      dimension_value      : dimension_value_select;
      notes                : SET [0 : ?] OF STRING;
      theoretical_exact    : BOOLEAN;
      auxiliary            : BOOLEAN;
      tolerance_principle  : tolerance_principle_type;
      modifiers            : LIST [0 : ?] OF geometric_dimension_modifier;
      unit_length          : OPTIONAL length_data_element;
  END_ENTITY;

  ENTITY geometric_gap_in_topology
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            gap_between_adjacent_edges_in_loop, 
            gap_between_vertex_and_base_surface, 
            gap_between_vertex_and_edge, 
            gap_between_edge_and_base_surface, 
            gap_between_pcurves_related_to_an_edge, 
            gap_between_faces_related_to_an_edge ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY geometric_intersection
    SUBTYPE OF ( derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [2 : ?] OF shape_element;
  END_ENTITY;

  ENTITY geometric_item_specific_usage;
      name             : STRING;
      description      : OPTIONAL STRING;
      definition       : geometric_item_specific_usage_select;
      identified_item  : geometric_model_item;
      used_model       : shape_model;
  END_ENTITY;

  ENTITY geometric_model
    SUPERTYPE OF ( 
        ONEOF ( 
            physical_unit_keepout_shape_model, 
            physical_unit_shape_model ) 
        ANDOR
        ONEOF ( 
            pre_defined_datum_axis_3d_symbol, 
            pre_defined_datum_plane_3d_symbol ) )
    SUBTYPE OF ( representation );
      version_id                            : OPTIONAL STRING;
      model_extent                          : OPTIONAL length_measure;
      SELF\representation.context_of_items  : geometric_coordinate_space;
      SELF\representation.items             : SET [1 : ?] OF geometric_model_item;
  END_ENTITY;

  ENTITY geometric_model_element_relationship
    SUBTYPE OF ( detailed_geometric_model_element_relationship, detailed_geometric_model_element );
  END_ENTITY;

  ENTITY geometric_model_relationship
    SUPERTYPE OF ( 
        ONEOF ( 
            component_part_2d_non_planar_geometric_representation_relationship, 
            shape_definition_3d_intersection, 
            shape_definition_3d_plane_projection ) 
        ANDOR
        ONEOF ( 
            shape_definition_3d_intersection, 
            shape_definition_3d_plane_projection ) )
    SUBTYPE OF ( representation_relationship );
      SELF\representation_relationship.rep_1 : geometric_representation_select;
      SELF\representation_relationship.rep_2 : geometric_representation_select;
    WHERE
      wr1: ( rep_1 <> rep_2 );
  END_ENTITY;

  ENTITY geometric_model_relationship_with_transformation
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            geometric_relationship_with_placement_transformation, 
            geometric_relationship_with_operator_transformation ) )
    SUBTYPE OF ( geometric_model_relationship );
    WHERE
      wr1: ( rep_1.context_of_items :<>: rep_2.context_of_items );
  END_ENTITY;

  ENTITY geometric_operator_transformation
    SUBTYPE OF ( geometric_placement_operation );
      target  : cartesian_transformation;
  END_ENTITY;

  ENTITY geometric_placement
    SUBTYPE OF ( geometric_placement_operation );
      target  : axis_placement;
  END_ENTITY;

  ENTITY geometric_placement_model
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : 1] OF geometric_placement_operation;
  END_ENTITY;

  ENTITY geometric_placement_operation
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            geometric_placement, 
            geometric_operator_transformation ) )
    SUBTYPE OF ( detailed_geometric_model_element );
      source               : axis_placement;
      template_definition  : template_definition_select;
  END_ENTITY;

  ENTITY geometric_relationship_with_operator_transformation
    SUBTYPE OF ( geometric_model_relationship_with_transformation );
      transformation  : cartesian_transformation;
    WHERE
      wr1: ( rep_1.context_of_items\geometric_coordinate_space.dimension_count :=: rep_2.context_of_items\
               geometric_coordinate_space.dimension_count );
  END_ENTITY;

  ENTITY geometric_relationship_with_placement_transformation
    SUBTYPE OF ( geometric_model_relationship_with_transformation );
      transformation  : axis_placement_mapping;
    WHERE
      wr1: ( rep_1.context_of_items\geometric_coordinate_space.dimension_count :=: rep_2.context_of_items\
               geometric_coordinate_space.dimension_count );
  END_ENTITY;

  ENTITY geometric_representation_context_with_parameter
    SUBTYPE OF ( geometric_coordinate_space );
      parameter_unit  : OPTIONAL unit;
  END_ENTITY;

  ENTITY geometric_sheet_representation
    SUBTYPE OF ( composite_sheet_representation );
      basis_surface  : surface;
      cutouts        : OPTIONAL SET [1 : ?] OF boundary_curve_representation;
      outer_edge     : boundary_curve_representation;
  END_ENTITY;

  ENTITY geometric_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            continuous_template, 
            structured_template ) )
    SUBTYPE OF ( template_definition );
    INVERSE
      shapes : SET [0 : ?] OF part_template_shape_model FOR shape_characterized_definition;
    WHERE
      wr1: ( SIZEOF( QUERY ( gm <* USEDIN( SELF, '' ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'GEOMETRIC_MODEL'  IN TYPEOF( gm ) ) AND ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL'  IN TYPEOF( gm ) ) ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY geometric_tolerance
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            angularity_tolerance, 
            circular_runout_tolerance, 
            coaxiality_tolerance, 
            concentricity_tolerance, 
            cylindricity_tolerance, 
            flatness_tolerance, 
            line_profile_tolerance, 
            parallelism_tolerance, 
            perpendicularity_tolerance, 
            position_tolerance, 
            roundness_tolerance, 
            straightness_tolerance, 
            surface_profile_tolerance, 
            symmetry_tolerance, 
            total_runout_tolerance ) );
      id                                     : OPTIONAL identifier;
      name                                   : OPTIONAL label;
      applied_to                             : geometric_tolerance_target;
      modifiers                              : SET [1 : ?] OF geometric_tolerance_modifier;
      qualifying_note                        : OPTIONAL STRING;
      first_unit_size                        : OPTIONAL length_data_element;
      area_unit_type                         : OPTIONAL area_unit_type;
      second_unit_size                       : OPTIONAL length_data_element;
      tolerance_value                        : value_with_unit;
      unequally_disposed_tolerance_zone_displacement : OPTIONAL length_data_element;
    WHERE
      wr1: ( ( NOT EXISTS( first_unit_size ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'LENGTH_MEASURE'  IN TYPEOF( first_unit_size.value_component ) ) );
  END_ENTITY;

  ENTITY geometric_tolerance_callout
    SUBTYPE OF ( draughting_element );
  END_ENTITY;

  ENTITY geometric_tolerance_relationship;
      relation_type  : STRING;
      relating       : geometric_tolerance;
      related        : geometric_tolerance;
  END_ENTITY;

  ENTITY geometric_tolerance_symbol;
  END_ENTITY;

  ENTITY geometric_validation_property;
      property_representation  : representation;
      property_value           : point_or_measure;
      validated_model          : geometric_model;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERICAL_REPRESENTATION_CONTEXT' IN TYPEOF( 
               property_representation\representation.context_of_items ) );
      wr2: ( property_representation.name IN [ 'centroid', 'volume', 'surface area'] );
      wr3: ( property_value IN property_representation\representation.items );
  END_ENTITY;

  ENTITY geometrical_relationship
    SUBTYPE OF ( part_definition_relationship );
      definition_placement  : geometric_model_relationship_with_transformation;
    DERIVE
      SELF\view_definition_relationship.relation_type : STRING := 'geometrical relationship';
  END_ENTITY;

  ENTITY geometrically_bounded_2d_wireframe_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY geometrically_bounded_surface_shape_representation
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : ?] OF geometrically_bounded_surface_shape_representation_item;
  END_ENTITY;

  ENTITY geometrically_bounded_wireframe_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY geometry_with_local_irregularity
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            extreme_patch_width_variation, 
            zero_surface_normal, 
            abrupt_change_of_surface_normal ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY geometry_with_local_near_degeneracy
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            curve_with_small_curvature_radius, 
            short_length_curve_segment, 
            surface_with_small_curvature_radius, 
            small_area_surface_patch, 
            narrow_surface_patch, 
            indistinct_surface_knots, 
            indistinct_curve_knots, 
            nearly_degenerate_surface_boundary, 
            nearly_degenerate_surface_patch ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY global_assignment;
      variable  : abstract_variable;
      val       : term_select;
    WHERE
      wr1: ( NOT contains_variable( SELF.val ) );
  END_ENTITY;

  ENTITY groove
    SUBTYPE OF ( revolved_feature );
      sweep  : open_profile;
  END_ENTITY;

  ENTITY ground_fact
    SUBTYPE OF ( atomic_formula );
    WHERE
      wr1: ( SIZEOF( QUERY ( r <* SELF\atomic_formula.terms | contains_variable( r ) ) ) = 0 );
  END_ENTITY;

  ENTITY group;
      id                  : OPTIONAL STRING;
      name                : STRING;
      description         : OPTIONAL STRING;
      elements            : SET [0 : ?] OF groupable_item;
      membership_meaning  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY group_relationship;
      description     : OPTIONAL STRING;
      relation_type   : STRING;
      relating_group  : group;
      related_group   : group;
  END_ENTITY;

  ENTITY guided_wave_bare_die_terminal
    SUBTYPE OF ( minimally_defined_bare_die_terminal );
  END_ENTITY;

  ENTITY guided_wave_terminal
    SUBTYPE OF ( package_terminal );
  END_ENTITY;

  ENTITY hardcopy
    SUBTYPE OF ( file );
  END_ENTITY;

  ENTITY hardness
    SUBTYPE OF ( surface_condition );
      depth                  : OPTIONAL measure_item;
      environment_condition  : SET [0 : ?] OF STRING;
      hardness_value         : measure_item;
      measuring_method       : STRING;
      measuring_position     : OPTIONAL STRING;
    DERIVE
      SELF\assigned_property.name  : STRING := 'hardness';
  END_ENTITY;

  ENTITY hatch_area_template
    SUBTYPE OF ( fill_area_template );
      fill_boundary_style  : curve_style_parameters_with_ends;
      hatch_pattern        : SET [1 : 4] OF hatch_line_element;
      min_feature          : OPTIONAL length_data_element;
  END_ENTITY;

  ENTITY hatch_line_element
    SUBTYPE OF ( detailed_geometric_model_element );
      hatch_line  : line;
      offset      : length_data_element;
  END_ENTITY;

  ENTITY hatch_style
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            externally_defined_hatch_style, 
            user_defined_hatch_style ) )
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY helical_bevel_gear
    SUBTYPE OF ( bevel_gear );
      reference_helix_agle      : numerical_item_with_unit;
      left_or_right_hand_tooth  : BOOLEAN;
  END_ENTITY;

  ENTITY helical_gear
    SUBTYPE OF ( defined_gear );
      left_or_right_hand_tooth  : BOOLEAN;
      reference_helix_angle     : numerical_item_with_unit;
  END_ENTITY;

  ENTITY high_degree_axi_symmetric_surface
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY high_degree_conic
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY high_degree_linear_curve
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY high_degree_planar_surface
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      approximation_tolerance                : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY high_order_kinematic_pair
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            linear_flexible_and_planar_curve_pair, 
            point_on_surface_pair, 
            point_on_planar_curve_pair, 
            planar_curve_pair, 
            surface_pair ) )
    SUBTYPE OF ( kinematic_pair );
    WHERE
      wr1: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_2 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY hole
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            counterbore_hole, 
            countersunk_hole, 
            round_hole ) )
    SUBTYPE OF ( multi_axis_feature );
  END_ENTITY;

  ENTITY hole_feature_in_panel
    SUBTYPE OF ( process_feature_in_panel );
      hole_profile  : closed_profile_usage;
      hole_type     : OPTIONAL STRING;
  END_ENTITY;

  ENTITY homokinetic_pair
    SUBTYPE OF ( universal_pair );
    WHERE
      wr1: ( NOT EXISTS( SELF.input_skew_angle ) );
  END_ENTITY;

  ENTITY hyperbola
    SUBTYPE OF ( conic );
      semi_axis            : length_measure;
      imaginary_semi_axis  : length_measure;
    WHERE
      wr1: ( semi_axis > 0 );
      wr2: ( imaginary_semi_axis > 0 );
  END_ENTITY;

  ENTITY identification_assignment;
      identifier   : STRING;
      role         : STRING;
      description  : OPTIONAL STRING;
      items        : SET [1 : ?] OF identification_item;
  END_ENTITY;

  ENTITY illuminance_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY impedance_measurement_setup_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      characterized_stackup  : stratum_sub_stack;
      measurement_stratum_1  : stratum_technology_occurrence;
      measurement_stratum_2  : stratum_technology_occurrence;
      reference_stratum      : SET [1 : 2] OF stratum_technology_occurrence;
    WHERE
      wr1: ( SELF\product_view_definition.initial_context.life_cycle_stage = 'test' );
      wr2: ( NOT EXISTS( SELF\product_view_definition.id ) );
      wr3: ( SIZEOF( [measurement_stratum_1, measurement_stratum_2] * reference_stratum ) = 0 );
  END_ENTITY;

  ENTITY impedance_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      frequency_range  : value_range;
      impedance_value  : tolerance_characteristic;
      test_bench       : impedance_measurement_setup_requirement;
      test_method      : test_specification;
    WHERE
      wr1: ( SELF\product_view_definition.initial_context.life_cycle_stage = 'test' );
      wr2: ( NOT EXISTS( SELF\product_view_definition.id ) );
  END_ENTITY;

  ENTITY implicit_explicit_sketch_relationship;
      implicit_sketch  : repositioned_sketch_2d_in_3d;
      explicit_sketch  : positioned_sketch;
  END_ENTITY;

  ENTITY implicit_planar_intersection_curve
    SUBTYPE OF ( curve, auxiliary_geometric_representation_item );
      using_sketch             : positioned_sketch;
      computed_representation  : curve;
      external_surface         : surface;
  END_ENTITY;

  ENTITY implicit_planar_intersection_point
    SUBTYPE OF ( auxiliary_geometric_representation_item );
      using_sketch             : positioned_sketch;
      computed_representation  : cartesian_point;
      external_curve           : curve;
  END_ENTITY;

  ENTITY implicit_planar_model_intersection_curve
    SUBTYPE OF ( curve, auxiliary_geometric_representation_item );
      using_sketch             : positioned_sketch;
      computed_representation  : curve;
      intersected_model        : surface_or_solid_model;
  END_ENTITY;

  ENTITY implicit_planar_projected_curve
    SUBTYPE OF ( curve, auxiliary_geometric_representation_item );
      using_sketch             : positioned_sketch;
      computed_representation  : curve;
      external_curve           : curve;
      projection_direction     : direction;
  END_ENTITY;

  ENTITY implicit_planar_projection_point
    SUBTYPE OF ( auxiliary_geometric_representation_item );
      using_sketch             : positioned_sketch;
      computed_representation  : cartesian_point;
      external_point           : point;
      projection_direction     : direction;
  END_ENTITY;

  ENTITY implicit_planar_silhouette_curve
    SUBTYPE OF ( curve, auxiliary_geometric_representation_item );
      using_sketch             : positioned_sketch;
      computed_representation  : curve;
      silhouetted_model        : surface_or_solid_model;
      view_direction           : direction;
  END_ENTITY;

  ENTITY inappropriate_element_visibility
    SUBTYPE OF ( miscellaneous_violation );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STYLED_ELEMENT' ] );
  END_ENTITY;

  ENTITY inappropriate_use_of_layer
    SUBTYPE OF ( use_of_restricted_functionality );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'LAYER' ] );
  END_ENTITY;

  ENTITY inapt_data
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            inapt_topology, 
            inapt_geometry, 
            inapt_topology_and_geometry_relationship, 
            inapt_manifold_solid_brep ) )
    SUBTYPE OF ( shape_data_quality_criterion );
  END_ENTITY;

  ENTITY inapt_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            nearly_degenerate_geometry, 
            discontinuous_geometry, 
            self_intersecting_geometry, 
            geometry_with_local_near_degeneracy, 
            overlapping_geometry, 
            multiply_defined_geometry, 
            geometry_with_local_irregularity, 
            overcomplex_geometry ) )
    SUBTYPE OF ( inapt_data );
  END_ENTITY;

  ENTITY inapt_manifold_solid_brep
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            partly_overlapping_solids, 
            small_volume_solid, 
            multiply_defined_solids, 
            entirely_narrow_solid, 
            solid_with_excessive_number_of_voids ) )
    SUBTYPE OF ( inapt_data );
  END_ENTITY;

  ENTITY inapt_topology
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            free_edge, 
            non_manifold_at_edge, 
            non_manifold_at_vertex, 
            over_used_vertex ) )
    SUBTYPE OF ( inapt_data );
  END_ENTITY;

  ENTITY inapt_topology_and_geometry_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            topology_related_to_nearly_degenerate_geometry, 
            geometric_gap_in_topology, 
            non_smooth_geometry_transition_across_edge, 
            topology_related_to_self_intersecting_geometry, 
            steep_geometry_transition_across_edge, 
            topology_related_to_overlapping_geometry, 
            topology_related_to_multiply_defined_geometry, 
            overcomplex_topology_and_geometry_relationship ) )
    SUBTYPE OF ( inapt_data );
  END_ENTITY;

  ENTITY incidence_assembly_constraint
    SUBTYPE OF ( binary_assembly_constraint, incidence_geometric_constraint );
  END_ENTITY;

  ENTITY incidence_geometric_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF geometric_constraint_element;
      SELF\explicit_constraint.reference_elements : SET [0 : ?] OF geometric_constraint_element;
      near_points                            : SET [0 : ?] OF near_point_relationship;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) > 0 ) OR ( SIZEOF( SELF\explicit_constraint.
               constrained_elements ) = 2 ) );
      wr2: ( SIZEOF( near_points ) <= SIZEOF( SELF\explicit_constraint.reference_elements ) );
      wr3: ( SIZEOF( QUERY ( q <* near_points | ( NOT ( q.relating_item IN SELF\explicit_constraint.reference_elements ) ) ) ) = 
               0 );
  END_ENTITY;

  ENTITY included_text_block
    SUBTYPE OF ( representation_item );
      source  : structured_text_representation;
  END_ENTITY;

  ENTITY incomplete_reference_marking
    SUBTYPE OF ( classification_assignment );
      SELF\classification_assignment.items  : SET [1 : ?] OF idrm_marked_item;
    WHERE
      wr1: ( SELF\classification_assignment.assigned_class.id = 'reference' );
  END_ENTITY;

  ENTITY inconsistent_adjacent_face_normals
    SUBTYPE OF ( erroneous_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'CLOSED_OR_OPEN_SHELL_SELECT' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY inconsistent_curve_transition_code
    SUBTYPE OF ( erroneous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      angle_tolerance                        : plane_angle_measure;
      curvature_ratio_tolerance              : ratio_measure;
      distance_tolerance                     : length_measure;
      flat_curvature_radius_tolerance        : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'COMPOSITE_CURVE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'COMPOSITE_CURVE_TRANSITION_LOCATOR'] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY inconsistent_edge_and_curve_directions
    SUBTYPE OF ( erroneous_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      distance_tolerance                     : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY inconsistent_element_reference
    SUBTYPE OF ( miscellaneous_violation );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION_ITEM' ] );
  END_ENTITY;

  ENTITY inconsistent_face_and_closed_shell_normals
    SUBTYPE OF ( erroneous_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY inconsistent_face_and_surface_normals
    SUBTYPE OF ( erroneous_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY inconsistent_surface_transition_code
    SUBTYPE OF ( erroneous_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      angle_tolerance                        : plane_angle_measure;
      curvature_ratio_tolerance              : ratio_measure;
      distance_tolerance                     : length_measure;
      flat_curvature_radius_tolerance        : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'RECTANGULAR_COMPOSITE_SURFACE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'RECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR'] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY independent_property
    SUPERTYPE OF ( 
        ONEOF ( 
            characteristic_data_table_header, 
            characteristic_data_column_header ) 
        ANDOR
        ONEOF ( 
            plib_property_reference, 
            external_library_property ) );
      id             : STRING;
      property_type  : STRING;
      description    : OPTIONAL STRING;
  END_ENTITY;

  ENTITY independent_property_relationship;
      relation_type  : STRING;
      description    : OPTIONAL STRING;
      relating       : independent_property;
      related        : independent_property;
  END_ENTITY;

  ENTITY independent_property_representation
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : independent_property;
    DERIVE
      property  : independent_property := SELF\property_definition_representation.definition;
  END_ENTITY;

  ENTITY independent_property_with_unit
    SUBTYPE OF ( independent_property );
      unit_of_measure  : SET [1 : ?] OF unit;
  END_ENTITY;

  ENTITY index_expression
    SUBTYPE OF ( string_expression, binary_generic_expression );
    DERIVE
      operand  : generic_expression := SELF\binary_generic_expression.operands[1];
      index    : generic_expression := SELF\binary_generic_expression.operands[2];
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_EXPRESSION' IN TYPEOF( operand ) ) AND 
               ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_EXPRESSION' IN TYPEOF( index ) ) );
      wr2: is_int_expr( index );
  END_ENTITY;

  ENTITY indirect_stratum_component_join_implementation
    SUBTYPE OF ( plated_inter_stratum_feature );
      indirect_topological_requirement  : stratum_embedded_physical_component_join_relationship;
      implementing_joint                : fabrication_joint;
    UNIQUE
      ur1 : indirect_topological_requirement, implementing_joint;
  END_ENTITY;

  ENTITY indirectly_selected_shape_elements
    SUBTYPE OF ( user_selected_shape_elements );
      indirectly_selected_items  : SET [1 : ?] OF shape_model_element;
  END_ENTITY;

  ENTITY indistinct_curve_knots
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PARAMETER_VALUE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PARAMETER_VALUE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CURVE_WITH_EXPLICIT_KNOTS' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_CURVE_KNOT_LOCATOR'] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY indistinct_surface_knots
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PARAMETER_VALUE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PARAMETER_VALUE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SURFACE_WITH_EXPLICIT_KNOTS' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_KNOT_LOCATOR'] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY inductance_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY ineffectivity_assignment;
      assigned_effectivity  : effectivity;
      role                  : STRING;
      items                 : SET [1 : ?] OF effectivity_item;
  END_ENTITY;

  ENTITY inertia_matrix_item
    SUBTYPE OF ( representation_item );
      inertia_values  : ARRAY [1 : 6] OF REAL;
      common_unit     : unit;
  END_ENTITY;

  ENTITY information_definition
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : information_version;
  END_ENTITY;

  ENTITY information_product
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            software, 
            analytical_model ) )
    SUBTYPE OF ( product );
  END_ENTITY;

  ENTITY information_right;
      id           : STRING;
      name         : STRING;
      description  : OPTIONAL STRING;
      restriction  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY information_usage_right;
      id            : STRING;
      name          : STRING;
      comment       : OPTIONAL STRING;
      grants_right  : SET [1 : ?] OF information_right;
  END_ENTITY;

  ENTITY information_usage_right_relationship;
      relating       : information_usage_right;
      related        : information_usage_right;
      relation_type  : STRING;
  END_ENTITY;

  ENTITY information_version
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : information_product;
  END_ENTITY;

  ENTITY instance_attribute_reference;
      attribute_name   : attribute_identifier;
      owning_instance  : representation_item;
  END_ENTITY;

  ENTITY instance_report_item_with_extreme_instances
    SUBTYPE OF ( shape_data_quality_inspection_instance_report_item );
      extreme_instances  : LIST [1 : ?] OF extreme_instance;
  END_ENTITY;

  ENTITY instanced_feature
    SUBTYPE OF ( shape_element, shape_feature_definition );
  END_ENTITY;

  ENTITY instanced_manufacturing_feature
    SUBTYPE OF ( instanced_feature );
      definition  : manufacturing_feature;
  END_ENTITY;

  ENTITY int_literal
    SUBTYPE OF ( literal_number );
      SELF\literal_number.the_value  : INTEGER;
  END_ENTITY;

  ENTITY int_numeric_variable
    SUBTYPE OF ( numeric_variable );
  END_ENTITY;

  ENTITY int_value_function
    SUBTYPE OF ( function_parameter_value );
  END_ENTITY;

  ENTITY integer_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( numeric_defined_function );
  END_ENTITY;

  ENTITY integer_representation_item
    SUBTYPE OF ( representation_item );
      the_value  : INTEGER;
  END_ENTITY;

  ENTITY integral_shield
    SUBTYPE OF ( laminate_component );
      shielded_item  : SET [1 : ?] OF laminate_shieldable_item;
  END_ENTITY;

  ENTITY inter_stratum_extent
    SUBTYPE OF ( part_definition_relationship );
      SELF\view_definition_relationship.relating_view : stratum;
      SELF\view_definition_relationship.related_view : stratum;
      included_stratum                       : SET [1 : ?] OF stratum;
    DERIVE
      from_stratum  : stratum := SELF\view_definition_relationship.relating_view;
      to_stratum    : stratum := SELF\view_definition_relationship.related_view;
    WHERE
      wr1: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
      wr2: ( from_stratum IN included_stratum );
      wr3: ( to_stratum IN included_stratum );
      wr4: EXISTS( from_stratum\stratum.assembly[1]\interconnect_module_stratum_assembly_relationship.assembly\
               layered_interconnect_module_design_view.used_stack_model );
  END_ENTITY;

  ENTITY inter_stratum_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            unsupported_passage, 
            plated_inter_stratum_feature ) 
        ANDOR
        ONEOF ( 
            cutout, 
            interconnect_module_edge ) )
    SUBTYPE OF ( laminate_component );
      feature_of_size                        : BOOLEAN;
      vertical_extent                        : OPTIONAL passage_technology_allocation_to_stack_model;
      SELF\definition_based_product_occurrence.derived_from : inter_stratum_feature_template;
    WHERE
      wr1: ( ( NOT EXISTS( vertical_extent ) ) OR ( SIZEOF( QUERY ( pvd <* get_assemblies( SELF ) | ( NOT ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAYERED_INTERCONNECT_MODULE_DESIGN_VIEW'  IN 
               TYPEOF( pvd ) ) AND ( vertical_extent\stratum_sub_stack.associated_stackup = pvd\
               layered_interconnect_module_design_view.used_stack_model ) ) ) ) ) = 0 ) );
  END_ENTITY;

  ENTITY inter_stratum_feature_dependent_land
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            plated_passage_dependent_land, 
            unsupported_passage_dependent_land ) )
    SUBTYPE OF ( land );
      SELF\definition_based_product_occurrence.derived_from : default_passage_based_land_physical_template;
  END_ENTITY;

  ENTITY inter_stratum_feature_edge_segment_template
    SUBTYPE OF ( inter_stratum_feature_template );
      composed_edge   : inter_stratum_feature_edge_template;
      start_vertex    : edge_segment_vertex;
      end_vertex      : edge_segment_vertex;
      reference_path  : trimmed_curve;
    WHERE
      wr1: ( EXISTS( reference_path.start_point ) AND EXISTS( reference_path.end_point ) );
      wr2: ( start_vertex :<>: end_vertex );
  END_ENTITY;

  ENTITY inter_stratum_feature_edge_segment_template_with_cross_section
    SUBTYPE OF ( inter_stratum_feature_edge_segment_template );
      cross_section  : edge_segment_cross_section;
  END_ENTITY;

  ENTITY inter_stratum_feature_edge_template
    SUBTYPE OF ( inter_stratum_feature_template );
    INVERSE
      edges : SET [2 : ?] OF inter_stratum_feature_edge_segment_template FOR composed_edge;
  END_ENTITY;

  ENTITY inter_stratum_feature_template
    SUPERTYPE OF ( 
        ONEOF ( 
            component_termination_passage_template, 
            via_template, 
            unsupported_passage_template, 
            inter_stratum_feature_edge_segment_template, 
            inter_stratum_feature_edge_template ) )
    SUBTYPE OF ( geometric_template );
      of_passage_technology  : passage_technology;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY inter_stratum_feature_template_location
    SUBTYPE OF ( template_location_in_structured_template );
      SELF\template_location_in_structured_template.assembly : multi_stratum_structured_template;
      SELF\template_location_in_structured_template.template : inter_stratum_feature_template;
    WHERE
      wr1: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTER_STRATUM_FEATURE_EDGE_SEGMENT_TEMPLATE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTER_STRATUM_FEATURE_EDGE_TEMPLATE' ] * 
               TYPEOF( template ) ) = 0 );
  END_ENTITY;

  ENTITY inter_stratum_join_implementation
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            physical_network_supporting_stratum_feature_conductive_join, 
            physical_network_supporting_inter_stratum_feature ) );
      topological_requirement  : inter_stratum_join_relationship;
  END_ENTITY;

  ENTITY inter_stratum_join_relationship
    SUBTYPE OF ( routed_join_relationship );
      points_to_be_connected  : SET [2 : ?] OF layer_connection_point;
    DERIVE
      associated_stratum  : BAG OF design_layer_stratum := limd_get_lcp_resident_stratum( points_to_be_connected );
    WHERE
      wr1: ( SIZEOF( associated_stratum ) = SIZEOF( bag_to_set( associated_stratum ) ) );
  END_ENTITY;

  ENTITY interconnect_component_interface_terminal
    SUBTYPE OF ( physical_component_interface_terminal );
      connection  : OPTIONAL connection_zone_in_design_view;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY interconnect_component_join_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : 1] OF connection_zone_in_design_view;
      SELF\shape_element.containing_shape    : physical_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
      wr2: ( ( NOT EXISTS( SELF\component_feature.definition ) ) OR ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TERMINAL'  IN TYPEOF( SELF\
               component_feature.definition ) ) ) );
  END_ENTITY;

  ENTITY interconnect_connection_zone_position_relationship;
      associating_design_view_shape          : geometric_model;
      associated_usage                       : connection_zone_in_design_view;
      associated_connection_zone_shape_definition : geometric_model;
      associated_usage_placement             : axis_placement;
      associating_design_view                : layered_interconnect_module_design_view;
  END_ENTITY;

  ENTITY interconnect_module_cavity_surface
    SUBTYPE OF ( interconnect_module_surface_feature );
      reference_surface  : cavity_reference_select;
    WHERE
      wr1: ( SELF :<>: reference_surface );
      wr2: ( SIZEOF( QUERY ( ucur <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'USAGE_CONCEPT_USAGE_RELATIONSHIP.'  + 'ASSOCIATED_USAGE' ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL'  IN TYPEOF( ucur
               .associated_shape_definition ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY interconnect_module_component
    SUBTYPE OF ( physical_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : layered_interconnect_module_usage_view;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY interconnect_module_component_stratum_based_terminal
    SUBTYPE OF ( interconnect_module_component_terminal );
      SELF\component_feature.definition  : interconnect_module_stratum_based_terminal;
  END_ENTITY;

  ENTITY interconnect_module_component_surface_feature
    SUBTYPE OF ( physical_component_feature );
      SELF\component_feature.definition  : interconnect_module_surface_feature;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY interconnect_module_component_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\component_feature.definition    : interconnect_module_terminal;
      SELF\shape_element.containing_shape  : interconnect_module_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY interconnect_module_constraint_region
    SUBTYPE OF ( non_feature_shape_element );
      keepout                                : BOOLEAN;
      non_conformant_interconnect_module_design_object : OPTIONAL SET [1 : ?] OF interconnect_module_design_object_select;
      SELF\shape_element.containing_shape    : layered_interconnect_module_design_view;
      design_specific_purpose                : STRING;
      associated_stratum_extent              : SET [1 : ?] OF inter_stratum_extent;
      constrained_design_object_category     : interconnect_module_design_object_category_or_group;
    INVERSE
      precedent_version_constraint_region : SET [0 : 1] OF non_feature_shape_element_relationship FOR related;
      requirement                  : SET [1 : 1] OF requirement_assignment FOR assigned_to;
    WHERE
      wr1: ( ( NOT ( SIZEOF( precedent_version_constraint_region ) = 1 ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_CONSTRAINT_REGION'  IN 
               TYPEOF( precedent_version_constraint_region[1]\non_feature_shape_element_relationship.relating ) ) );
      wr2: ( NOT EXISTS( SELF\shape_element.description ) );
      wr3: valid_non_conformant_design_object_context( non_conformant_interconnect_module_design_object, SELF\shape_element.
               containing_shape );
  END_ENTITY;

  ENTITY interconnect_module_cutout_segment_surface
    SUBTYPE OF ( interconnect_module_surface_feature );
      composed_surface  : interconnect_module_cutout_surface;
      start_vertex      : edge_segment_vertex;
      end_vertex        : edge_segment_vertex;
    WHERE
      wr1: ( start_vertex :<>: end_vertex );
  END_ENTITY;

  ENTITY interconnect_module_cutout_surface
    SUBTYPE OF ( interconnect_module_surface_feature );
    WHERE
      wr1: ( SIZEOF( QUERY ( ucur <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'USAGE_CONCEPT_USAGE_RELATIONSHIP.'  + 'ASSOCIATED_USAGE' ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL'  IN TYPEOF( ucur
               .associated_shape_definition ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY interconnect_module_design_view
    SUPERTYPE OF ( 
        layered_interconnect_module_design_view )
    SUBTYPE OF ( assembly_definition, part_design_view );
  END_ENTITY;

  ENTITY interconnect_module_edge
    SUPERTYPE OF ( 
        ONEOF ( 
            partially_plated_interconnect_module_edge, 
            plated_interconnect_module_edge ) )
    SUBTYPE OF ( inter_stratum_feature );
    WHERE
      wr1: ( SIZEOF( QUERY ( shape <* SELF\inter_stratum_feature.derived_from\geometric_template.shapes | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL'  IN TYPEOF( 
               shape ) ) ) ) ) = 0 );
      wr2: ( NOT EXISTS( SELF\inter_stratum_feature.vertical_extent ) );
  END_ENTITY;

  ENTITY interconnect_module_edge_segment
    SUPERTYPE OF ( 
        ONEOF ( 
            plated_interconnect_module_edge_segment, 
            unplated_interconnect_module_edge_segment ) )
    SUBTYPE OF ( inter_stratum_feature );
      composed_edge                          : interconnect_module_edge;
      start_vertex                           : edge_segment_vertex;
      end_vertex                             : edge_segment_vertex;
      SELF\inter_stratum_feature.derived_from : inter_stratum_feature_edge_segment_template;
    WHERE
      wr1: ( start_vertex :<>: end_vertex );
  END_ENTITY;

  ENTITY interconnect_module_edge_segment_surface
    SUBTYPE OF ( interconnect_module_surface_feature );
      composed_surface  : interconnect_module_edge_surface;
      start_vertex      : edge_segment_vertex;
      end_vertex        : edge_segment_vertex;
    WHERE
      wr1: ( start_vertex :<>: end_vertex );
  END_ENTITY;

  ENTITY interconnect_module_edge_surface
    SUBTYPE OF ( interconnect_module_surface_feature );
    WHERE
      wr1: ( SIZEOF( QUERY ( ucur <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'USAGE_CONCEPT_USAGE_RELATIONSHIP.'  + 'ASSOCIATED_USAGE' ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL'  IN TYPEOF( ucur
               .associated_shape_definition ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY interconnect_module_interface_terminal
    SUBTYPE OF ( interconnect_module_terminal );
  END_ENTITY;

  ENTITY interconnect_module_macro_component
    SUBTYPE OF ( physical_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : layered_interconnect_module_design_view;
    INVERSE
      join_access_mechanisms : SET [1 : ?] OF interconnect_module_macro_component_join_terminal FOR containing_shape;
    WHERE
      wr1: ( SIZEOF( QUERY ( immcjt <* join_access_mechanisms | ( immcjt\component_feature.definition\shape_element.
               containing_shape :<>: SELF\definition_based_product_occurrence.derived_from\part_design_view.usage_view ) ) ) = 0 );
      wr2: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY interconnect_module_macro_component_join_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\component_feature.definition    : interconnect_module_macro_terminal;
      SELF\shape_element.containing_shape  : interconnect_module_macro_component;
  END_ENTITY;

  ENTITY interconnect_module_macro_terminal
    SUBTYPE OF ( interconnect_module_terminal );
    INVERSE
      defining_terminal : component_feature_to_physical_usage_view_assignment FOR defined_part_feature;
    WHERE
      wr1: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'COMPONENT_TERMINATION_PASSAGE_JOIN_TERMINAL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.VIA_TERMINAL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRINTED_COMPONENT_JOIN_TERMINAL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND_JOIN_TERMINAL' ] * TYPEOF( 
               defining_terminal.assigned_design_object ) ) = 1 );
  END_ENTITY;

  ENTITY interconnect_module_primary_surface
    SUBTYPE OF ( interconnect_module_surface_feature );
  END_ENTITY;

  ENTITY interconnect_module_product_assembly_view_fabrication_joint;
      joined_terminal  : SET [1 : ?] OF interconnect_module_component_stratum_based_terminal;
  END_ENTITY;

  ENTITY interconnect_module_secondary_surface
    SUBTYPE OF ( interconnect_module_surface_feature );
  END_ENTITY;

  ENTITY interconnect_module_stratum_assembly_relationship;
      assembly               : layered_interconnect_module_design_view;
      component              : stratum;
      reference_designation  : STRING;
    UNIQUE
      ur1 : assembly, reference_designation;
  END_ENTITY;

  ENTITY interconnect_module_stratum_based_terminal
    SUBTYPE OF ( interconnect_module_terminal );
    WHERE
      wr1: ( SIZEOF( QUERY ( imtscr <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'INTERCONNECT_MODULE_TERMINAL_SURFACE_CONSTITUENT_RELATIONSHIP.'  + 'RELATED' ) | ( NOT ( SIZEOF( [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INTERCONNECT_MODULE_PRIMARY_SURFACE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INTERCONNECT_MODULE_SECONDARY_SURFACE'] 
               * TYPEOF( imtscr.relating ) ) = 1 ) ) ) ) = 0 );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'INTERCONNECT_MODULE_TERMINAL_SURFACE_CONSTITUENT_RELATIONSHIP.'  + 'RELATED' ) ) = 1 );
      wr3: ( SIZEOF( QUERY ( sct <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'STRATUM_CONCEPT_TO_PHYSICAL_USAGE_VIEW_ASSIGNMENT.DEFINED_PART_FEATURE'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND'  IN TYPEOF( sct.assigned_design_object ) ) ) ) 
               = 1 );
  END_ENTITY;

  ENTITY interconnect_module_surface_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            interconnect_module_cavity_surface, 
            interconnect_module_cutout_segment_surface, 
            interconnect_module_cutout_surface, 
            interconnect_module_secondary_surface, 
            interconnect_module_primary_surface, 
            interconnect_module_edge_surface, 
            interconnect_module_edge_segment_surface ) )
    SUBTYPE OF ( part_feature );
      SELF\shape_element.containing_shape  : layered_interconnect_module_usage_view;
  END_ENTITY;

  ENTITY interconnect_module_terminal
    SUPERTYPE OF ( 
        ONEOF ( 
            interconnect_module_interface_terminal, 
            interconnect_module_macro_terminal ) )
    SUBTYPE OF ( part_terminal );
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_usage_view;
      SELF\shape_element.containing_shape    : layered_interconnect_module_usage_view;
  END_ENTITY;

  ENTITY interconnect_module_terminal_surface_constituent_relationship
    SUBTYPE OF ( shape_element_relationship );
      SELF\shape_element_relationship.relating : interconnect_module_surface_feature;
      SELF\shape_element_relationship.related : interconnect_module_terminal;
  END_ENTITY;

  ENTITY interconnect_module_usage_view
    SUPERTYPE OF ( 
        layered_interconnect_module_usage_view )
    SUBTYPE OF ( part_usage_view );
  END_ENTITY;

  ENTITY interconnect_shield_allocation
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_to : integral_shield;
      SELF\requirement_assignment.assigned_requirement : predefined_requirement_view_definition;
    DERIVE
      assigned_requirement_property  : predefined_requirement_view_definition := SELF\requirement_assignment.assigned_requirement;
    WHERE
      wr1: ( assigned_requirement_property\product_view_definition.initial_context\view_definition_context.application_domain = 
               'electrical'  );
  END_ENTITY;

  ENTITY interface_access_material_removal_laminate_component
    SUBTYPE OF ( material_removal_laminate_component );
      SELF\material_removal_laminate_component.causal_item : laminate_component_interface_terminal;
    DERIVE
      accessed_interface  : laminate_component_interface_terminal := SELF\material_removal_laminate_component.causal_item;
  END_ENTITY;

  ENTITY interface_access_stratum_feature_template_component
    SUBTYPE OF ( stratum_feature_template_component );
      accessed_interface  : laminate_component_interface_terminal;
  END_ENTITY;

  ENTITY interface_component
    SUBTYPE OF ( physical_component, single_instance );
    INVERSE
      access_mechanism : SET [1 : ?] OF physical_component_interface_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY interface_component_allocation;
      mating_solution     : interface_component;
      mating_requirement  : mating_connector_usage;
  END_ENTITY;

  ENTITY interface_mounted_join;
      connection_to_interconnect_module_component : packaged_connector_component_interface_terminal;
      access_to_interface_mounted_component  : physical_component_terminal;
  END_ENTITY;

  ENTITY interface_plane
    SUBTYPE OF ( non_feature_shape_element );
    WHERE
      wr1: ( SELF\shape_element.element_name = 'interface plane' );
  END_ENTITY;

  ENTITY interface_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      interface_to_next_higher_assembly  : OPTIONAL next_higher_assembly_interface_requirement;
      reference_protocol                 : OPTIONAL protocol_physical_layer_definition;
    WHERE
      wr1: ( SELF\product_view_definition.initial_context.life_cycle_stage = 'design' );
  END_ENTITY;

  ENTITY interface_specification_document_definition
    SUBTYPE OF ( design_specification );
  END_ENTITY;

  ENTITY interfacial_connection
    SUBTYPE OF ( via );
  END_ENTITY;

  ENTITY internal_probe_access_area
    SUBTYPE OF ( probe_access_area );
      stratum_feature_implementation  : stratum_feature;
    INVERSE
      internal_access : internal_stratum_access FOR connected_probe;
    WHERE
      wr1: ( ( NOT EXISTS( SELF\probe_access_area.stratum_feature_material_stackup ) ) OR ( stratum_feature_implementation :=: 
               SELF\probe_access_area.stratum_feature_material_stackup\stratum_feature_based_derived_pattern.
               reference_stratum_feature ) );
  END_ENTITY;

  ENTITY internal_stratum_access;
      connected_probe        : internal_probe_access_area;
      inter_stratum_feature  : via;
    UNIQUE
      ur1 : connected_probe, inter_stratum_feature;
  END_ENTITY;

  ENTITY interpolated_configuration_representation
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : geometric_representation_context_with_parameter;
      SELF\representation.items             : SET [1 : ?] OF interpolated_configuration_sequence;
  END_ENTITY;

  ENTITY interpolated_configuration_segment;
      state          : mechanism_state_representation;
      t_parameter    : parameter_value;
      interpolation  : interpolation_type;
  END_ENTITY;

  ENTITY interpolated_configuration_sequence
    SUBTYPE OF ( representation_item );
      segments  : LIST [2 : ?] OF interpolated_configuration_segment;
    DERIVE
      n_segments            : INTEGER := SIZEOF( segments );
      closed_interpolation  : LOGICAL := segments[n_segments].interpolation <> discontinuous_interpolation_type;
      configured_mechanism  : mechanism_representation := segments[1].state.represented_mechanism;
    WHERE
      wr1: ( SIZEOF( QUERY ( ics <* segments | ( ics.state.represented_mechanism :<>: configured_mechanism ) ) ) = 0 );
  END_ENTITY;

  ENTITY intersecting_connected_face_sets
    SUBTYPE OF ( topology_related_to_self_intersecting_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONNECTED_FACE_SET'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_FACE_SURFACE', 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'POINT_ON_FACE_SURFACE' ] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY intersecting_loops_in_face
    SUBTYPE OF ( erroneous_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FACE'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_EDGE_CURVE', 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'POINT_ON_EDGE_CURVE' ] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY intersecting_shells_in_solid
    SUBTYPE OF ( erroneous_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CURVE' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY interval_expression
    SUBTYPE OF ( boolean_expression, multiple_arity_generic_expression );
    DERIVE
      interval_low   : generic_expression := SELF\multiple_arity_generic_expression.operands[1];
      interval_item  : generic_expression := SELF\multiple_arity_generic_expression.operands[2];
      interval_high  : generic_expression := SELF\multiple_arity_generic_expression.operands[3];
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EXPRESSION' IN TYPEOF( interval_low ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EXPRESSION'  IN TYPEOF( interval_item ) ) AND 
               ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EXPRESSION' IN TYPEOF( interval_high ) ) );
      wr2: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_EXPRESSION' IN TYPEOF( SELF.
               interval_low ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_EXPRESSION' IN 
               TYPEOF( SELF.interval_high ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRING_EXPRESSION'  IN TYPEOF( SELF.interval_item ) ) ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_EXPRESSION'  IN TYPEOF( SELF.
               interval_low ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_EXPRESSION' IN 
               TYPEOF( SELF.interval_item ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'NUMERIC_EXPRESSION'  IN TYPEOF( SELF.interval_high ) ) ) );
  END_ENTITY;

  ENTITY intra_stratum_join_relationship
    SUBTYPE OF ( routed_join_relationship );
      points_to_be_connected  : SET [2 : ?] OF layer_connection_point;
    DERIVE
      associated_stratum  : design_layer_stratum := points_to_be_connected[1].resident_design_layer_stratum;
    INVERSE
      ordered_implementation : SET [0 : 1] OF conductor FOR implementation_requirement;
      random_implementation : SET [0 : 1] OF connected_filled_area FOR implementation_requirement;
    WHERE
      wr1: ( ( SIZEOF( ordered_implementation ) = 1 ) XOR ( SIZEOF( random_implementation ) = 1 ) );
      wr2: ( SIZEOF( QUERY ( ptbc <* points_to_be_connected | ( NOT ( ptbc.resident_design_layer_stratum = associated_stratum ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY inverse_copy_stratum_technology_occurrence_relationship
    SUBTYPE OF ( derived_stratum_technology_occurrence_relationship );
  END_ENTITY;

  ENTITY iso15926_4_rdl
    SUBTYPE OF ( known_source );
  END_ENTITY;

  ENTITY iso4217_currency
    SUBTYPE OF ( currency );
  END_ENTITY;

  ENTITY isotropic_material
    SUBTYPE OF ( stock_material );
  END_ENTITY;

  ENTITY item_design_association;
      configuration  : product_configuration;
      design         : version_or_definition;
    UNIQUE
      ur1 : configuration, design;
  END_ENTITY;

  ENTITY item_link_motion_relationship
    SUBTYPE OF ( link_motion_relationship );
      SELF\representation_relationship.rep_1 : geometric_model;
      item                                   : detailed_geometric_model_element;
  END_ENTITY;

  ENTITY item_restricted_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      basis  : restriction_basis_item;
    WHERE
      wr1: ( SELF :<>: basis );
  END_ENTITY;

  ENTITY item_shape;
      id                 : OPTIONAL STRING;
      description        : OPTIONAL STRING;
      described_element  : shapeable_item;
    UNIQUE
      ur1 : described_element;
  END_ENTITY;

  ENTITY item_usage_effectivity;
      effectivity_domain       : effectivity;
      item_usage_relationship  : item_usage_relationship_item;
      resolved_configuration   : item_design_association;
  END_ENTITY;

  ENTITY joggle_feature
    SUBTYPE OF ( process_feature_in_panel );
      base_radius_1      : OPTIONAL length_data_element;
      base_radius_2      : OPTIONAL length_data_element;
      defining_path      : linear_path_feature_component;
      direction_angle_1  : angle_data_element;
      direction_angle_2  : angle_data_element;
      height             : OPTIONAL length_data_element;
      slope_angle_1      : angle_data_element;
      slope_angle_2      : angle_data_element;
      termination        : joggle_termination;
      top_radius_1       : OPTIONAL length_data_element;
      top_radius_2       : OPTIONAL length_data_element;
  END_ENTITY;

  ENTITY joggle_termination
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            face_termination, 
            value_termination ) )
    SUBTYPE OF ( shape_element );
  END_ENTITY;

  ENTITY join_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            routed_join_relationship, 
            unrouted_join_relationship ) );
      associated_layout  : layered_interconnect_module_design_view;
  END_ENTITY;

  ENTITY junction_vertex_allocation;
      implementation_point  : trace_junction_or_via;
      required_vertex       : part_connected_terminals_topological_junction;
    UNIQUE
      ur1 : required_vertex;
  END_ENTITY;

  ENTITY kinematic_analysis_consistency;
      control  : kinematic_control;
      result   : kinematic_analysis_result;
    WHERE
      wr1: ( control.controlled_mechanism :=: result.analysed_mechanism );
  END_ENTITY;

  ENTITY kinematic_analysis_result;
      analysed_mechanism  : mechanism_representation;
      result              : kinematic_result;
  END_ENTITY;

  ENTITY kinematic_control;
      controlled_mechanism          : mechanism_representation;
      contained_kinematic_programs  : kinematic_analysis_definition;
  END_ENTITY;

  ENTITY kinematic_joint
    SUBTYPE OF ( edge );
      SELF\edge.edge_start  : kinematic_link;
      SELF\edge.edge_end    : kinematic_link;
    UNIQUE
      ur1 : edge_start, edge_end;
    WHERE
      wr1: ( edge_start :<>: edge_end );
  END_ENTITY;

  ENTITY kinematic_link
    SUBTYPE OF ( vertex );
  END_ENTITY;

  ENTITY kinematic_link_representation
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            linear_flexible_link_representation, 
            rigid_link_representation ) )
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : geometric_coordinate_space;
      SELF\representation.items             : SET [1 : ?] OF kinematic_link_representation_items;
      represented_link                      : kinematic_link;
    INVERSE
      associated_shape_representation : SET [0 : 1] OF kinematic_link_representation_association FOR rep_1;
  END_ENTITY;

  ENTITY kinematic_link_representation_association
    SUBTYPE OF ( representation_relationship );
      SELF\representation_relationship.rep_1 : kinematic_link_representation;
      SELF\representation_relationship.rep_2 : geometric_model;
    WHERE
      wr1: ( ( SELF\representation_relationship.rep_2.context_of_items :=: SELF\representation_relationship.rep_1.
               context_of_items ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'GEOMETRIC_MODEL_RELATIONSHIP_WITH_TRANSFORMATION'  IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY kinematic_loop
    SUBTYPE OF ( edge_loop );
      SELF\path.edge_list  : LIST [1 : ?] OF UNIQUE oriented_joint;
  END_ENTITY;

  ENTITY kinematic_mechanism_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'kinematic_mechanism';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'INITIAL_CONTEXT'  ) ) = 0 );
  END_ENTITY;

  ENTITY kinematic_pair
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            high_order_kinematic_pair, 
            low_order_kinematic_pair_with_motion_coupling, 
            low_order_kinematic_pair ) 
        ANDOR
        actuated_kinematic_pair )
    SUBTYPE OF ( detailed_geometric_model_element );
      joint             : kinematic_joint;
      transform_item_1  : rigid_placement;
      transform_item_2  : rigid_placement;
    DERIVE
      associated_link_representations_1  : SET [1 : ?] OF kinematic_link_representation := sort_link_associations( 
                                             link_representation_associations, TRUE );
      associated_link_representations_2  : SET [1 : ?] OF kinematic_link_representation := sort_link_associations( 
                                             link_representation_associations, FALSE );
    INVERSE
      link_representation_associations : SET [1 : ?] OF pair_representation_relationship FOR transformation_operator;
  END_ENTITY;

  ENTITY kinematic_path
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            kinematic_path_defined_by_nodes, 
            kinematic_path_defined_by_curves ) )
    SUBTYPE OF ( detailed_geometric_model_element );
      segments  : LIST [1 : ?] OF kinematic_path_segment;
      t_start   : parameter_value;
    DERIVE
      n_segments   : INTEGER := SIZEOF( segments );
      closed_path  : LOGICAL := segments[n_segments].transition <> curve_transition_code.discontinuous;
    WHERE
      wr1: ( SIZEOF( QUERY ( using_rep <* using_representations( SELF ) | ( NOT ( 'KINEMATIC_MOTION_REPRESENTATION_SCHEMA.'
               + 'GEOMETRIC_REPRESENTATION_CONTEXT_WITH_PARAMETER'  IN TYPEOF( using_rep.context_of_items ) ) ) ) ) = 0 );
      wr2: ( ( 'KINEMATIC_MOTION_REPRESENTATION_SCHEMA.CURVE_BASED_PATH_WITH_ORIENTATION' IN TYPEOF( segments[1] ) ) OR ( 
               n_segments > 1 ) );
  END_ENTITY;

  ENTITY kinematic_path_defined_by_curves
    SUBTYPE OF ( kinematic_path );
      SELF\kinematic_path.segments  : LIST [1 : ?] OF curve_based_path_with_orientation;
  END_ENTITY;

  ENTITY kinematic_path_defined_by_nodes
    SUBTYPE OF ( kinematic_path );
      SELF\kinematic_path.segments  : LIST [1 : ?] OF path_node;
      placement_start               : axis_placement;
  END_ENTITY;

  ENTITY kinematic_path_segment
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            path_node, 
            curve_based_path_with_orientation ) );
      t_end       : parameter_value;
      transition  : curve_transition_code;
  END_ENTITY;

  ENTITY kinematic_property_definition_representation
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : product_definition_kinematics;
  END_ENTITY;

  ENTITY kinematic_property_mechanism_representation
    SUBTYPE OF ( kinematic_property_definition_representation );
      SELF\property_definition_representation.used_representation : mechanism_representation;
      base                                   : kinematic_link_representation;
    WHERE
      wr1: ( SIZEOF( QUERY ( i <* used_representation.items | ( ( base :=: i\representation_relationship.rep_1 ) OR ( base :=: i\
               representation_relationship.rep_2 ) ) ) ) > 0 );
  END_ENTITY;

  ENTITY kinematic_property_topology_representation
    SUBTYPE OF ( kinematic_property_definition_representation );
      SELF\property_definition_representation.used_representation : kinematic_topology_representation_select;
      base                                   : kinematic_link;
    WHERE
      wr1: ( SELF\property_definition_representation.used_representation IN using_representations( base ) );
  END_ENTITY;

  ENTITY kinematic_state_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'kinematic state';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'ADDITIONAL_CONTEXTS'  ) ) = 0 );
  END_ENTITY;

  ENTITY kinematic_topology_directed_structure
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF oriented_joint;
      parent                     : kinematic_topology_structure;
    WHERE
      wr1: ( context_of_items :=: parent.context_of_items );
      wr2: ( get_kinematic_joints_from_oriented_joints( items ) <= parent.items );
  END_ENTITY;

  ENTITY kinematic_topology_network_structure
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF kinematic_loop;
      parent                     : kinematic_topology_structure;
    WHERE
      wr1: ( context_of_items :=: parent.context_of_items );
      wr2: ( get_kinematic_joints_from_kinematic_loops( items ) <= parent.items );
  END_ENTITY;

  ENTITY kinematic_topology_structure
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF kinematic_joint;
    WHERE
      wr1: ( SIZEOF( QUERY ( item <* items | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ORIENTED_EDGE' 
               IN TYPEOF( item ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY kinematic_topology_substructure
    SUBTYPE OF ( kinematic_topology_structure );
      parent  : kinematic_topology_structure;
    WHERE
      wr1: ( SELF\representation.context_of_items :=: parent\representation.context_of_items );
      wr2: ( SELF\representation.items <= parent\representation.items );
  END_ENTITY;

  ENTITY kinematic_topology_tree_structure
    SUBTYPE OF ( kinematic_topology_directed_structure );
  END_ENTITY;

  ENTITY known_source
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            iso15926_4_rdl, 
            otd_catalogue, 
            otd_dictionary, 
            plib_dictionary, 
            plib_library ) )
    SUBTYPE OF ( external_source );
  END_ENTITY;

  ENTITY knurl
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            catalogue_knurl, 
            turned_knurl ) )
    SUBTYPE OF ( machining_feature );
      partial_profile  : OPTIONAL partial_area_definition;
      applied_shape    : definitional_shape_element;
  END_ENTITY;

  ENTITY laid_orientation_angle
    SUBTYPE OF ( ply_orientation_angle );
  END_ENTITY;

  ENTITY laid_ply_shape
    SUBTYPE OF ( ply_shape );
  END_ENTITY;

  ENTITY laminate_component
    SUPERTYPE OF ( 
        ONEOF ( 
            material_removal_laminate_component, 
            stratum_feature_template_component 
            ANDOR
            probe_access_area, 
            inter_stratum_feature, 
            generic_laminate_text_component, 
            laminate_text_string_component ) 
        ANDOR
        fiducial )
    SUBTYPE OF ( assembly_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : template_definition;
    INVERSE
      cad_layer : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAYERED_INTERCONNECT_MODULE_DESIGN_VIEW' IN 
               TYPEOF( SELF\assembly_component.occurrence_contexts[1]\product_occurrence_definition_relationship.relating_view ) ) 
               OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP'  IN TYPEOF( SELF\assembly_component.occurrence_contexts[
               1] ) ) );
  END_ENTITY;

  ENTITY laminate_component_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            conductive_interconnect_element_terminal, 
            laminate_component_interface_terminal, 
            laminate_component_join_terminal, 
            via_terminal ) )
    SUBTYPE OF ( component_feature );
  END_ENTITY;

  ENTITY laminate_component_interface_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            printed_connector_component_interface_terminal, 
            component_termination_passage_interface_terminal, 
            land_interface_terminal ) 
        ANDOR
        ONEOF ( 
            component_termination_passage_interface_terminal, 
            land_interface_terminal ) )
    SUBTYPE OF ( laminate_component_feature );
  END_ENTITY;

  ENTITY laminate_component_join_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            component_termination_passage_join_terminal, 
            land_join_terminal, 
            embedded_physical_component_terminal, 
            printed_component_join_terminal ) 
        ANDOR
        ONEOF ( 
            component_termination_passage_join_terminal, 
            land_join_terminal, 
            embedded_physical_component_terminal ) )
    SUBTYPE OF ( laminate_component_feature, component_terminal );
    INVERSE
      node_implementation : SET [0 : 1] OF generic_physical_network FOR connectivity_requirement_element;
  END_ENTITY;

  ENTITY laminate_group_component_make_from_relationship
    SUBTYPE OF ( component_make_from_relationship );
      SELF\view_definition_relationship.relating_view : assembly_group_component;
      SELF\view_definition_relationship.related_view : assembly_group_component;
      stratum_mapping                        : SET [1 : ?] OF part_definition_relationship;
    WHERE
      wr1: ( SIZEOF( QUERY ( sar <* reusable_component\assembly_group_component.components | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAMINATE_COMPONENT'  IN TYPEOF( sar\
               product_occurrence_definition_relationship.related_view ) ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( sar <* resultant_component\assembly_group_component.components | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAMINATE_COMPONENT'  IN TYPEOF( sar\
               product_occurrence_definition_relationship.related_view ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY laminate_table
    SUPERTYPE OF ( 
        ONEOF ( 
            part_laminate_table, 
            zone_structural_makeup ) )
    SUBTYPE OF ( part_view_definition );
      basis              : reinforcement_orientation_basis;
      resulting_surface  : OPTIONAL surface;
      base_surface       : OPTIONAL surface_with_direction;
  END_ENTITY;

  ENTITY laminate_text_string_component
    SUBTYPE OF ( array_placement_group, laminate_component );
      SELF\definition_based_product_occurrence.derived_from : part_string_template;
      message_contents                       : text_literal_with_extent;
    WHERE
      wr1: ( SIZEOF( QUERY ( sar <* SELF\assembly_group_component.components | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GENERIC_LAMINATE_TEXT_COMPONENT'  IN TYPEOF( 
               sar.related_view ) ) ) ) ) = 0 );
      wr2: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY land
    SUPERTYPE OF ( 
        ONEOF ( 
            contact_size_dependent_land, 
            inter_stratum_feature_dependent_land ) )
    SUBTYPE OF ( stratum_feature_template_component );
      alternate_land_definition              : OPTIONAL land_physical_template;
      SELF\definition_based_product_occurrence.derived_from : land_physical_template;
    DERIVE
      functional  : BOOLEAN := SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONDUCTOR', 
                      'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONNECTED_FILLED_AREA' ] * TYPEOF( SELF
                      \stratum_feature_template_component.implementation_or_resident_stratum ) ) = 1;
    INVERSE
      access_mechanism : SET [0 : ?] OF land_join_terminal FOR containing_shape;
    WHERE
      wr1: ( ( NOT functional ) OR ( SIZEOF( access_mechanism ) > 0 ) );
  END_ENTITY;

  ENTITY land_interface_terminal
    SUBTYPE OF ( laminate_component_interface_terminal );
      SELF\component_feature.definition    : land_template_interface_terminal;
      SELF\shape_element.containing_shape  : contact_size_dependent_land;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY land_join_terminal
    SUBTYPE OF ( laminate_component_join_terminal );
      SELF\component_feature.definition    : land_template_join_terminal;
      SELF\shape_element.containing_shape  : land;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY land_physical_template
    SUPERTYPE OF ( 
        ONEOF ( 
            default_passage_based_land_physical_template, 
            default_attachment_size_based_land_physical_template ) )
    SUBTYPE OF ( stratum_feature_template );
    INVERSE
      access_mechanisms        : SET [1 : ?] OF land_template_terminal FOR containing_shape;
      pre_defined_classification_code : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( SIZEOF( QUERY ( ltjt <* access_mechanisms | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'LAND_TEMPLATE_JOIN_TERMINAL'  IN TYPEOF( ltjt ) ) ) ) > 0 );
      wr2: ( SIZEOF( QUERY ( s <* SELF\geometric_template.shapes | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_AREA_CSG_2D_MODEL'  IN TYPEOF( s ) ) ) ) ) 
               = 0 );
      wr3: ( SIZEOF( SELF\geometric_template.shapes ) > 0 );
  END_ENTITY;

  ENTITY land_template_interface_terminal
    SUBTYPE OF ( land_template_terminal );
      SELF\shape_element.containing_shape  : default_attachment_size_based_land_physical_template;
  END_ENTITY;

  ENTITY land_template_join_terminal
    SUBTYPE OF ( land_template_terminal );
  END_ENTITY;

  ENTITY land_template_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            land_template_join_terminal, 
            land_template_interface_terminal ) )
    SUBTYPE OF ( general_part_feature );
      SELF\shape_element.containing_shape    : land_physical_template;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_layout_template;
      terminal_category                      : OPTIONAL land_template_terminal_class;
    UNIQUE
      ur1 : SELF\shape_element.element_name, containing_shape;
    WHERE
      wr1: ( ( NOT EXISTS( SELF\definitional_shape_element.connection_area ) ) OR ( NOT EXISTS( terminal_category ) ) );
      wr2: ( NOT EXISTS( SELF\shape_element.description ) );
      wr3: ( SIZEOF( QUERY ( ca <* connection_area | ( NOT ( containing_shape = ca\shape_element.containing_shape ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY land_with_join_terminal
    SUBTYPE OF ( land, land_join_terminal );
    DERIVE
      SELF\component_feature.associated_component : land_with_join_terminal := SELF;
  END_ENTITY;

  ENTITY language;
      language_code  : STRING;
      country_code   : OPTIONAL STRING;
    UNIQUE
      ur1 : language_code;
  END_ENTITY;

  ENTITY language_indication;
      considered_instance   : string_select;
      considered_attribute  : STRING;
      used_language         : language;
  END_ENTITY;

  ENTITY language_reference_manual
    SUBTYPE OF ( specification_definition );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY layer;
      id                : STRING;
      description       : STRING;
      layered_elements  : SET [1 : ?] OF representation_item;
  END_ENTITY;

  ENTITY layer_connection_point
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            explicitly_located_layer_connection_point, 
            dependently_located_layer_connection_point ) )
    SUBTYPE OF ( shape_element );
      location_2d                          : OPTIONAL cartesian_point;
      location_3d                          : OPTIONAL cartesian_point;
      SELF\shape_element.containing_shape  : design_layer_stratum;
    DERIVE
      reference_network              : generic_physical_network := limd_get_generic_network( inter_join_path, intra_join_path, 
                                         embedded_physical_component_path, unrouted_join_path );
      resident_design_layer_stratum  : design_layer_stratum := SELF\shape_element.containing_shape;
    INVERSE
      inter_join_path           : SET [0 : 1] OF inter_stratum_join_relationship FOR points_to_be_connected;
      intra_join_path           : SET [0 : ?] OF intra_stratum_join_relationship FOR points_to_be_connected;
      embedded_physical_component_path : SET [0 : ?] OF stratum_embedded_physical_component_join_relationship FOR 
                                            point_to_be_connected;
      unrouted_join_path        : SET [0 : 1] OF unrouted_join_relationship FOR unrouted_lcp;
    WHERE
      wr1: ( EXISTS( location_2d ) OR EXISTS( location_3d ) );
      wr2: ( ( NOT EXISTS( location_2d ) ) OR ( SIZEOF( location_2d\cartesian_point.coordinates ) = 2 ) );
      wr3: ( ( NOT EXISTS( location_3d ) ) OR ( SIZEOF( location_3d\cartesian_point.coordinates ) = 3 ) );
      wr4: EXISTS( reference_network );
      wr5: ( NOT EXISTS( SELF\shape_element.description ) );
      wr6: ( SIZEOF( QUERY ( ijp <* intra_join_path | ( NOT ( resident_design_layer_stratum :=: ijp.associated_stratum ) ) ) ) = 
               0 );
  END_ENTITY;

  ENTITY layer_qualified_layout_spacing_requirement
    SUBTYPE OF ( layout_spacing_requirement );
      layer_context  : SET [1 : ?] OF inter_stratum_extent;
  END_ENTITY;

  ENTITY layer_stack_region
    SUBTYPE OF ( instanced_feature );
      applied_stack                        : SET [1 : ?] OF local_linear_stack;
      SELF\shape_element.containing_shape  : layered_interconnect_module_design_view;
    WHERE
      wr1: ( SIZEOF( SELF\shape_feature_definition.feature_model ) = 1 );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_BOUNDARY_CSG_2D_MODEL' IN TYPEOF( SELF\
               shape_feature_definition.feature_model[1] ) );
  END_ENTITY;

  ENTITY layered_assembly_module_design_view
    SUBTYPE OF ( assembly_module_design_view );
      SELF\part_design_view.usage_view  : layered_assembly_module_usage_view;
  END_ENTITY;

  ENTITY layered_assembly_module_terminal
    SUBTYPE OF ( assembly_module_terminal );
      SELF\shape_element.containing_shape  : layered_assembly_module_usage_view;
  END_ENTITY;

  ENTITY layered_assembly_module_usage_view
    SUBTYPE OF ( assembly_module_usage_view );
      maximum_negative_component_height  : OPTIONAL length_data_element;
      maximum_positive_component_height  : OPTIONAL length_data_element;
  END_ENTITY;

  ENTITY layered_assembly_panel_design_view
    SUBTYPE OF ( assembly_module_design_view );
  END_ENTITY;

  ENTITY layered_interconnect_module_design_view
    SUPERTYPE OF ( 
        layered_interconnect_panel_design_view )
    SUBTYPE OF ( interconnect_module_design_view );
      used_stack_model  : design_stack_model;
    INVERSE
      requirements : SET [0 : ?] OF requirement_assignment FOR assigned_to;
    WHERE
      wr1: ( ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.'  + 'ASSEMBLY' ) ) = 0 ) OR ( SIZEOF( QUERY ( imsar <* 
               USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.'  + 'ASSEMBLY' ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DESIGN_LAYER_STRATUM'  IN TYPEOF( imsar.
               component ) ) AND ( imsar.component\design_layer_stratum.primary_design_layer_stratum = TRUE ) ) ) ) = 1 ) );
      wr2: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
      wr3: ( SIZEOF( QUERY ( vdr <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'VIEW_DEFINITION_RELATIONSHIP.'  + 'RELATING_VIEW' ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP'  IN TYPEOF( 
               vdr ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_EDGE' IN 
               TYPEOF( vdr.related_view ) ) ) ) ) = 1 );
  END_ENTITY;

  ENTITY layered_interconnect_module_usage_view
    SUBTYPE OF ( interconnect_module_usage_view );
      thickness_over_dielectric_requirement  : OPTIONAL length_tolerance_characteristic;
      thickness_over_metal_requirement       : OPTIONAL length_tolerance_characteristic;
      located_thickness_requirement          : OPTIONAL SET [1 : ?] OF located_interconnect_module_thickness_requirement;
      implemented_function                   : OPTIONAL functional_unit_usage_view;
    WHERE
      wr1: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTERCONNECT_MODULE_SURFACE_FEATURE.CONTAINING_SHAPE'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INTERCONNECT_MODULE_PRIMARY_SURFACE' ) 
               IN TYPEOF( pf ) ) ) ) <= 1 );
      wr2: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTERCONNECT_MODULE_SURFACE_FEATURE.CONTAINING_SHAPE'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INTERCONNECT_MODULE_SECONDARY_SURFACE' ) 
               IN TYPEOF( pf ) ) ) ) <= 1 );
      wr3: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTERCONNECT_MODULE_SURFACE_FEATURE.CONTAINING_SHAPE'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INTERCONNECT_MODULE_EDGE_SURFACE' ) IN 
               TYPEOF( pf ) ) ) ) <= 1 );
      wr4: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY layered_interconnect_panel_design_view
    SUBTYPE OF ( layered_interconnect_module_design_view );
  END_ENTITY;

  ENTITY layout_junction;
      name                   : STRING;
      associated_definition  : layered_interconnect_module_design_view;
      net                    : generic_physical_network;
      location               : cartesian_point;
    UNIQUE
      ur1 : location, net;
      ur2 : name, net;
    WHERE
      wr1: ( associated_definition :=: net.current_associated_definition );
  END_ENTITY;

  ENTITY layout_land_width_tolerance_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      mating_feature_pitch_class  : pitch_class;
      maximum_negative_deviation  : length_data_element;
    WHERE
      wr1: ( SELF\product_view_definition.initial_context.life_cycle_stage = 'test' );
  END_ENTITY;

  ENTITY layout_line_width_tolerance_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      characterized_stratum_technology  : stratum_technology;
      tolerance_line_width_class        : line_width_class;
      maximum_negative_deviation        : length_data_element;
      maximum_positive_deviation        : length_data_element;
    WHERE
      wr1: ( SELF\product_view_definition.initial_context.life_cycle_stage = 'test' );
  END_ENTITY;

  ENTITY layout_macro_component
    SUBTYPE OF ( printed_component );
      design_definition                    : layout_macro_definition;
      SELF\printed_component.derived_from  : layout_macro_floor_plan_template;
  END_ENTITY;

  ENTITY layout_macro_definition
    SUBTYPE OF ( layered_interconnect_module_design_view );
      floor_layout_view  : layout_macro_floor_plan_template;
    WHERE
      wr1: ( NOT EXISTS( SELF\part_design_view.usage_view ) );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'DEFINITION_BASED_PRODUCT_OCCURRENCE.DERIVED_FROM'  ) ) = 0 );
  END_ENTITY;

  ENTITY layout_macro_definition_terminal_to_usage_terminal_assignment;
      defined_template_feature  : printed_part_template_terminal;
      assigned_design_object    : fabricated_feature_select;
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'LAYOUT_MACRO_FLOOR_PLAN_TEMPLATE.ACCESS_MAPS'  ) ) = 1 );
  END_ENTITY;

  ENTITY layout_macro_floor_plan_template
    SUBTYPE OF ( printed_part_template );
      access_maps  : SET [1 : ?] OF layout_macro_definition_terminal_to_usage_terminal_assignment;
    INVERSE
      macro_definition : SET [0 : 1] OF layout_macro_definition FOR floor_layout_view;
    WHERE
      wr1: ( SIZEOF( TYPEOF( SELF ) - TYPEOF( SELF\printed_part_template || SELF\template_definition || SELF\item_shape || SELF\
               product_view_definition || SELF\layout_macro_floor_plan_template ) ) = 0 );
  END_ENTITY;

  ENTITY layout_spacing_contextual_area
    SUBTYPE OF ( non_feature_shape_element );
      reference_surface                    : interconnect_module_component_surface_feature;
      SELF\shape_element.containing_shape  : assembly_module_design_view;
    WHERE
      wr1: ( ( SIZEOF( SELF\non_feature_shape_element.element_shape ) = 0 ) OR ( SIZEOF( QUERY ( es <* SELF\
               non_feature_shape_element.element_shape | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONSTRUCTIVE_GEOMETRY'  IN TYPEOF( es ) ) ) ) ) 
               = 0 ) );
  END_ENTITY;

  ENTITY layout_spacing_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      design_object_category_1               : lam_product_design_object_category_or_group;
      design_object_category_2               : lam_product_design_object_category_or_group;
      SELF\predefined_requirement_view_definition.required_characteristic : length_tolerance_characteristic;
      of_spacing_type                        : spacing_type;
    DERIVE
      spacing  : length_tolerance_characteristic := SELF\predefined_requirement_view_definition.required_characteristic;
  END_ENTITY;

  ENTITY layout_spacing_requirement_non_conforming_design_object;
      non_conformant_design_object  : SET [1 : ?] OF assembly_or_interconnect_design_object_select;
      design_object_1               : assembly_or_interconnect_design_object_select;
      design_object_2               : assembly_or_interconnect_design_object_select;
      design_requirement            : layout_spacing_requirement;
      violation_value               : OPTIONAL length_data_element;
      violation_shape               : OPTIONAL geometric_model;
      intersection_violation        : LOGICAL;
    WHERE
      wr1: ( EXISTS( violation_value ) OR EXISTS( violation_shape ) );
  END_ENTITY;

  ENTITY leader
    SUBTYPE OF ( annotation_curve );
  END_ENTITY;

  ENTITY leader_directed_callout
    SUBTYPE OF ( draughting_callout );
      leader  : leader;
    WHERE
      wr1: ( leader IN SELF\draughting_callout.contents );
  END_ENTITY;

  ENTITY length_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( SELF\value_with_unit.value_component >= 0 );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_UNIT' IN TYPEOF( SELF\value_with_unit.
               unit ) );
  END_ENTITY;

  ENTITY length_function
    SUBTYPE OF ( numeric_expression, unary_generic_expression );
      SELF\unary_generic_expression.operand  : string_expression;
  END_ENTITY;

  ENTITY length_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN 
               TYPEOF( SELF ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'SYMMETRICAL_TOLERANCE_CHARACTERISTIC'  IN TYPEOF( SELF ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC'  IN 
               TYPEOF( SELF ) ) OR ( SIZEOF( QUERY ( it <* SELF\representation.items | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT'  IN TYPEOF( it ) ) ) ) ) 
               = 0 ) );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SYMMETRICAL_TOLERANCE_CHARACTERISTIC' IN
               TYPEOF( SELF ) ) ) OR ( SIZEOF( QUERY ( it <* SELF\representation.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT'  IN TYPEOF( it ) ) ) ) = 
               1 ) );
      wr3: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STATISTICAL_TOLERANCE_CHARACTERISTIC' IN
               TYPEOF( SELF ) ) ) OR ( SIZEOF( QUERY ( it <* SELF\representation.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT'  IN TYPEOF( it ) ) ) ) = 
               1 ) );
      wr4: ( NOT EXISTS( SELF\representation.description ) );
      wr5: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLUS_MINUS_TOLERANCE_CHARACTERISTIC' IN 
               TYPEOF( SELF ) ) ) OR ( SIZEOF( QUERY ( it <* SELF\representation.items | ( NOT ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.VALUE_WITH_TOLERANCES'  IN TYPEOF( it ) ) AND 
               ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT' IN TYPEOF( it\
               value_with_tolerances.item_value ) ) ) ) ) ) = 0 ) );
  END_ENTITY;

  ENTITY length_trimmed_terminal
    SUBTYPE OF ( altered_package_terminal );
      trimmed_length  : length_tolerance_characteristic;
  END_ENTITY;

  ENTITY length_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY library_reference_view_definition_relationship
    SUBTYPE OF ( view_definition_relationship );
    WHERE
      wr1: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
  END_ENTITY;

  ENTITY library_stack_model
    SUBTYPE OF ( stratum_stack_model );
    DERIVE
      padstacks  : SET [0 : ?] OF padstack_definition := bag_to_set( QUERY ( p <* USEDIN( SELF, 
                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_STACK_DEPENDENT_TEMPLATE.STACK'  )
                     | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PADSTACK_DEFINITION' IN TYPEOF( p ) ) ) );
  END_ENTITY;

  ENTITY library_to_design_stack_model_mapping
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : library_stack_model;
      SELF\view_definition_relationship.related_view : design_stack_model;
    WHERE
      wr1: ( ( related_view\stratum_stack_model.composing_occurrence * relating_view\stratum_stack_model.composing_occurrence ) =
               related_view\stratum_stack_model.composing_occurrence );
      wr2: acyclic_library_to_design_stack_model_mapping( SELF, [related_view], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LIBRARY_TO_DESIGN_STACK_MODEL_MAPPING'  );
  END_ENTITY;

  ENTITY light_source
    SUBTYPE OF ( detailed_geometric_model_element );
      colour      : OPTIONAL colour;
      light_type  : light_type;
  END_ENTITY;

  ENTITY like_expression
    SUBTYPE OF ( comparison_expression );
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_EXPRESSION' IN TYPEOF( SELF\
               comparison_expression.operands[1] ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRING_EXPRESSION'  IN TYPEOF( SELF\comparison_expression.operands[2] ) ) );
  END_ENTITY;

  ENTITY limits_and_fits;
      deviation     : STRING;
      fitting_type  : OPTIONAL STRING;
      grade         : STRING;
  END_ENTITY;

  ENTITY line
    SUBTYPE OF ( curve );
      point           : cartesian_point;
      line_direction  : direction;
  END_ENTITY;

  ENTITY line_profile_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : OPTIONAL datum_system;
    INVERSE
      directed_or_oriented_tolerance_zone : SET [0 : 1] OF directed_or_oriented_tolerance_zone FOR zone_for;
  END_ENTITY;

  ENTITY line_width_class;
      class_member  : range_characteristic;
      class_name    : STRING;
    WHERE
      wr1: ( SIZEOF( QUERY ( np <* class_member\representation.items | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT'  IN TYPEOF( np ) ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY linear_array_placement_group_component
    SUBTYPE OF ( array_placement_group );
      element                                : SET [1 : ?] OF assembly_component_placement_link;
      initial_node_positive_x_displacement   : length_data_element;
      terminus_node_positive_x_displacement  : length_data_element;
      location_uncertainty                   : length_data_element;
    WHERE
      wr1: ( ( 1 + SIZEOF( element ) ) = cg_get_sz_ac( element ) );
  END_ENTITY;

  ENTITY linear_array_placement_group_component_link;
      precedent_element   : linear_array_placement_group_component;
      subsequent_element  : linear_array_placement_group_component;
    INVERSE
      referenced_by : rectangular_array_placement_group_component FOR element;
    WHERE
      wr1: acyclic_linear_array_placement_group_component_link( SELF, [subsequent_element], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK'  );
  END_ENTITY;

  ENTITY linear_bead_end_type
    SUBTYPE OF ( bead_end_type );
      end_length  : length_data_element;
      end_shape   : straight_or_tapered;
  END_ENTITY;

  ENTITY linear_distance
    SUBTYPE OF ( dimensional_location );
      orientation         : OPTIONAL axis_placement;
      diameter_qualifier  : OPTIONAL diameter_qualifier_enumeration;
  END_ENTITY;

  ENTITY linear_flexible_and_pinion_pair
    SUBTYPE OF ( low_order_kinematic_pair_with_motion_coupling );
      pinion_radius  : length_measure;
    WHERE
      wr1: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'LINEAR_FLEXIBLE_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY linear_flexible_and_planar_curve_pair
    SUBTYPE OF ( high_order_kinematic_pair );
      pair_curve   : curve;
      orientation  : BOOLEAN;
    WHERE
      wr1: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( pair_curve IN r.items ) ) ) ) =
               0 );
      wr2: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'LINEAR_FLEXIBLE_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY linear_flexible_link_representation
    SUBTYPE OF ( kinematic_link_representation );
  END_ENTITY;

  ENTITY linear_path
    SUBTYPE OF ( path_node );
    DERIVE
      SELF\kinematic_path_segment.transition : curve_transition_code := curve_transition_code.continuous;
  END_ENTITY;

  ENTITY linear_path_feature_component
    SUBTYPE OF ( path_feature_component );
      distance   : length_measure;
      direction  : direction_element;
  END_ENTITY;

  ENTITY linear_profile
    SUBTYPE OF ( open_profile );
      profile_length  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY link_motion_relationship
    SUBTYPE OF ( definitional_representation_relationship, geometric_model_relationship_with_transformation );
      SELF\geometric_model_relationship.rep_1 : link_or_shape_representation;
      SELF\geometric_model_relationship.rep_2 : link_motion_representation_along_path;
      transformation_operator                : link_motion_transformation;
    WHERE
      wr1: ( transformation_operator.transform_item_1 IN rep_1.items );
      wr2: ( transformation_operator.transform_item_2 IN rep_2.items );
  END_ENTITY;

  ENTITY link_motion_representation_along_path
    SUPERTYPE OF ( 
        ONEOF ( 
            prescribed_path, 
            resulting_path ) )
    SUBTYPE OF ( representation );
      SELF\representation.items             : SET [1 : ?] OF kinematic_path;
      SELF\representation.context_of_items  : geometric_representation_context_with_parameter;
  END_ENTITY;

  ENTITY link_motion_transformation;
      transform_item_1  : rigid_placement;
      transform_item_2  : kinematic_path;
  END_ENTITY;

  ENTITY literal_conjunction
    SUBTYPE OF ( simple_clause );
  END_ENTITY;

  ENTITY literal_disjunction
    SUBTYPE OF ( simple_clause );
  END_ENTITY;

  ENTITY literal_number
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            int_literal, 
            real_literal ) )
    SUBTYPE OF ( simple_numeric_expression, generic_literal );
      the_value  : NUMBER;
  END_ENTITY;

  ENTITY local_linear_stack
    SUBTYPE OF ( stratum_sub_stack );
      SELF\stratum_sub_stack.stratum_technology_sequence : SET [1 : ?] OF stratum_technology_occurrence_link;
    WHERE
      wr1: ( SIZEOF( get_stack( stratum_technology_sequence ) ) = ( SIZEOF( stratum_technology_sequence ) + 1 ) );
      wr2: sts_vertex_degree_check( stratum_technology_sequence, 2 );
  END_ENTITY;

  ENTITY local_time;
      hour_component    : hour_in_day;
      minute_component  : OPTIONAL minute_in_hour;
      second_component  : OPTIONAL second_in_minute;
      zone              : time_offset;
  END_ENTITY;

  ENTITY located_2d_inter_stratum_extent
    SUBTYPE OF ( inter_stratum_extent );
      location  : cartesian_point;
  END_ENTITY;

  ENTITY located_3d_inter_stratum_extent
    SUBTYPE OF ( inter_stratum_extent );
      location   : cartesian_point;
      direction  : direction;
  END_ENTITY;

  ENTITY located_interconnect_module_thickness_requirement;
      reference_location     : axis_placement;
      thickness_requirement  : length_tolerance_characteristic;
    INVERSE
      design : SET [1 : ?] OF layered_interconnect_module_usage_view FOR located_thickness_requirement;
    UNIQUE
      ur1 : design, reference_location;
  END_ENTITY;

  ENTITY location_element
    SUBTYPE OF ( definitional_shape_element );
  END_ENTITY;

  ENTITY locator_feature
    SUBTYPE OF ( process_feature_in_panel );
      base_radius  : OPTIONAL length_data_element;
      diameter     : length_data_element;
      tip_angle    : angle_data_element;
      tip_radius   : OPTIONAL length_data_element;
  END_ENTITY;

  ENTITY log10_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY log2_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY log_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY logical_representation_item
    SUBTYPE OF ( representation_item );
      the_value  : LOGICAL;
  END_ENTITY;

  ENTITY loop
    SUPERTYPE OF ( 
        ONEOF ( 
            vertex_loop, 
            edge_loop ) )
    SUBTYPE OF ( detailed_topological_model_element );
  END_ENTITY;

  ENTITY loop_slot_end_type;
  END_ENTITY;

  ENTITY loss_tangent_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY lot_effectivity
    SUBTYPE OF ( effectivity );
      lot_id    : STRING;
      lot_size  : value_with_unit;
  END_ENTITY;

  ENTITY low_order_kinematic_pair
    SUPERTYPE OF ( 
        ONEOF ( 
            revolute_pair, 
            cylindrical_pair, 
            spherical_pair, 
            spherical_pair_with_pin, 
            planar_pair, 
            unconstrained_pair, 
            fully_constrained_pair, 
            prismatic_pair, 
            universal_pair ) )
    SUBTYPE OF ( kinematic_pair );
      t_x  : BOOLEAN;
      t_y  : BOOLEAN;
      t_z  : BOOLEAN;
      r_x  : BOOLEAN;
      r_y  : BOOLEAN;
      r_z  : BOOLEAN;
    WHERE
      wr1: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_2 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY low_order_kinematic_pair_with_motion_coupling
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            gear_pair, 
            linear_flexible_and_pinion_pair, 
            rack_and_pinion_pair, 
            screw_pair ) )
    SUBTYPE OF ( kinematic_pair );
    WHERE
      wr1: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_2 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY luminous_flux_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY luminous_intensity_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF( SELF\
               value_with_unit.unit ) );
  END_ENTITY;

  ENTITY luminous_intensity_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY machining_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            compound_feature, 
            gear, 
            knurl, 
            marking_feature, 
            multi_axis_feature, 
            outer_round, 
            revolved_feature, 
            spherical_cap, 
            thread ) )
    SUBTYPE OF ( manufacturing_feature );
      placement  : axis_placement_3d;
  END_ENTITY;

  ENTITY machining_feature_size
    SUBTYPE OF ( dimensional_size );
      considered_attribute  : STRING;
  END_ENTITY;

  ENTITY machining_feature_view_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'machining feature';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'INITIAL_CONTEXT'  ) ) = 0 );
  END_ENTITY;

  ENTITY magnetic_flux_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY magnetic_flux_density_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY make_from_relationship
    SUBTYPE OF ( view_definition_usage );
      SELF\view_definition_relationship.relating_view : part_view_definition;
      SELF\view_definition_relationship.related_view : part_view_definition;
      quantity                               : OPTIONAL value_with_unit;
      priority                               : OPTIONAL INTEGER;
    WHERE
      wr1: ( SELF\view_definition_relationship.relating_view :<>: SELF\view_definition_relationship.related_view );
      wr2: ( ( NOT EXISTS( quantity ) ) XOR ( NOT ( 'NUMBER' IN TYPEOF( quantity.value_component ) ) ) XOR ( quantity.
               value_component > 0 ) );
  END_ENTITY;

  ENTITY manifold_solid_brep
    SUBTYPE OF ( solid_model );
      outer  : closed_shell;
      voids  : OPTIONAL SET [1 : ?] OF oriented_closed_shell;
    WHERE
      wr1: ( ( NOT EXISTS( voids ) ) OR ( SIZEOF( QUERY ( ocs <* SELF.voids | ( NOT ( ocs.orientation = FALSE ) ) ) ) = 0 ) );
  END_ENTITY;

  ENTITY manifold_subsurface_model
    SUBTYPE OF ( geometric_model );
      parent_surface             : open_shell_or_subsurface;
      SELF\representation.items  : SET [1 : ?] OF manifold_subsurface_shape_representation_item;
    WHERE
      wr1: ( SELF :<>: parent_surface );
      wr2: ( SELF\geometric_model.context_of_items :=: parent_surface\geometric_model.context_of_items );
  END_ENTITY;

  ENTITY manifold_surface_shape_representation
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : ?] OF manifold_surface_shape_representation_item;
  END_ENTITY;

  ENTITY manufacturing_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            machining_feature, 
            replicate_feature, 
            transition_feature ) )
    SUBTYPE OF ( shape_feature_definition );
  END_ENTITY;

  ENTITY manufacturing_feature_group;
      group_name         : label;
      group_description  : text;
      feature_groups     : SET [1 : ?] OF manufacturing_group_select;
  END_ENTITY;

  ENTITY marker;
  END_ENTITY;

  ENTITY market;
      name                 : STRING;
      market_segment_type  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY marking;
      marked_message               : marked_message_select;
      marked_device_shape          : marking_shape_select;
      placement                    : axis_placement;
      message_representation       : geometric_model;
      message_representation_text  : text_literal_with_extent;
    DERIVE
      marking_specification  : SET [0 : ?] OF document_definition := get_document_definition( SELF, 'marking specification', 
                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SPECIFICATION_DEFINITION'  );
    INVERSE
      marking_material : material_identification FOR items;
    WHERE
      wr1: ( SIZEOF( QUERY ( st <* message_representation\geometric_model.items | ( st = message_representation_text ) ) ) = 1 );
      wr2: ( SIZEOF( QUERY ( ap <* marked_device_shape\geometric_model.items | ( ap = placement ) ) ) = 1 );
      wr3: ( SIZEOF( TYPEOF( marked_device_shape ) * [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PHYSICAL_UNIT_3D_SHAPE_MODEL' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL' ] ) = 1 );
      wr4: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( marking_material ) );
      wr5: ( EXISTS( marking_specification ) AND ( SIZEOF( marking_specification ) = 1 ) );
  END_ENTITY;

  ENTITY marking_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            catalogue_marking, 
            defined_marking ) )
    SUBTYPE OF ( machining_feature );
      text              : text;
      applied_to_shape  : shape_element;
  END_ENTITY;

  ENTITY mass_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MASS_UNIT' IN TYPEOF( SELF\value_with_unit.unit ) );
  END_ENTITY;

  ENTITY mass_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY mated_part_relationship;
      mating_joints    : OPTIONAL SET [1 : ?] OF assembly_joint;
      mating_material  : OPTIONAL SET [1 : ?] OF definition_based_product_occurrence;
      mating_types     : OPTIONAL SET [1 : ?] OF mating_type;
      relating         : assembled_part_association;
      related          : assembled_part_association;
    WHERE
      wr1: ( relating.relating_view :=: related.relating_view );
      wr2: ( SIZEOF( QUERY ( mj <* mating_joints | ( NOT ( mj.associated_assembly.described_element :=: relating.relating_view ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY material_direction;
      material_orientation  : direction;
  END_ENTITY;

  ENTITY material_electrical_conductivity_class
    SUBTYPE OF ( conductivity_material_property_class );
  END_ENTITY;

  ENTITY material_electrical_conductivity_requirement
    SUBTYPE OF ( predefined_requirement_view_definition );
      electrical_conductivity_characteristic : material_conductivity_classification;
  END_ENTITY;

  ENTITY material_identification;
      material_name  : STRING;
      items          : SET [1 : ?] OF material_item_select;
  END_ENTITY;

  ENTITY material_identification_with_conductivity_classification
    SUBTYPE OF ( material_identification );
    DERIVE
      electrical_conductivity_classification : STRING := get_cond_class( SELF, 'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS' );
      magnetic_permeability_classification   : STRING := get_cond_class( SELF, 'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS' );
      optical_insertion_loss_classification  : STRING := get_cond_class( SELF, 
                                                 'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS'  );
      thermal_conductivity_classification    : STRING := get_cond_class( SELF, 'MATERIAL_THERMAL_CONDUCTIVITY_CLASS' );
      dielectric_permittivity_classification : STRING := get_cond_class( SELF, 'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS' );
    WHERE
      wr1: ( SIZEOF( QUERY ( ca <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'MATERIAL_ELECTRICAL_CONDUCTIVITY_CLASS' ) 
               IN TYPEOF( ca.assigned_class ) ) ) ) = 1 );
      wr2: ( SIZEOF( QUERY ( ca <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'MATERIAL_THERMAL_CONDUCTIVITY_CLASS' ) 
               IN TYPEOF( ca.assigned_class ) ) ) ) <= 1 );
      wr3: ( SIZEOF( QUERY ( ca <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'RELATIVE_PERMEABILITY_MATERIAL_PROPERTY_CLASS'  ) IN TYPEOF( ca.assigned_class ) ) ) ) <= 1 );
      wr4: ( SIZEOF( QUERY ( ca <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'RELATIVE_PERMITTIVITY_MATERIAL_PROPERTY_CLASS'  ) IN TYPEOF( ca.assigned_class ) ) ) ) <= 1 );
      wr5: ( SIZEOF( QUERY ( ca <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'RELATIVE_OPTICAL_INSERTION_LOSS_MATERIAL_PROPERTY_CLASS'  ) IN TYPEOF( ca.assigned_class ) ) ) ) <= 1 );
  END_ENTITY;

  ENTITY material_property
    SUBTYPE OF ( assigned_property );
  END_ENTITY;

  ENTITY material_property_association;
      described_material         : material_identification;
      associated_property_value  : material_property_value_representation;
      definitional               : OPTIONAL BOOLEAN;
  END_ENTITY;

  ENTITY material_property_value_representation
    SUBTYPE OF ( property_definition_representation );
      environment_condition                  : data_environment;
      SELF\property_definition_representation.definition : material_property_select;
    DERIVE
      property  : material_property_select := SELF\property_definition_representation.definition;
  END_ENTITY;

  ENTITY material_removal_feature_template
    SUBTYPE OF ( single_stratum_continuous_template );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr2: ( SIZEOF( SELF\geometric_template.shapes ) > 0 );
  END_ENTITY;

  ENTITY material_removal_laminate_component
    SUBTYPE OF ( laminate_component );
      causal_item                            : OPTIONAL limd_restriction_basis_item;
      design_intent                          : SET [1 : ?] OF stratum_feature_template_component_or_stratum;
      SELF\definition_based_product_occurrence.derived_from : material_removal_feature_template_or_parametric_template;
      explicitly_created                     : BOOLEAN;
    WHERE
      wr1: ( SIZEOF( QUERY ( sa <* design_intent | ( NOT ( ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM'  IN TYPEOF( sa ) ) ) OR ( SIZEOF( 
               design_intent ) = 1 ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY material_removal_laminate_text_component
    SUBTYPE OF ( generic_laminate_text_component );
      design_intent  : SET [1 : ?] OF stratum_feature_template_component_or_stratum;
    WHERE
      wr1: ( SIZEOF( QUERY ( sa <* design_intent | ( NOT ( ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM'  IN TYPEOF( sa ) ) ) OR ( SIZEOF( 
               design_intent ) = 1 ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY material_removal_structured_component
    SUBTYPE OF ( structured_layout_component );
      SELF\definition_based_product_occurrence.derived_from : material_removal_structured_template;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY material_removal_structured_template
    SUBTYPE OF ( single_stratum_structured_template );
    WHERE
      wr1: ( SIZEOF( QUERY ( tlict <* SELF\structured_template.templates | ( SIZEOF( [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MATERIAL_REMOVAL_FEATURE_TEMPLATE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MATERIAL_REMOVAL_STRUCTURED_TEMPLATE' ] * 
               TYPEOF( tlict.template ) ) = 0 ) ) ) = 0 );
  END_ENTITY;

  ENTITY material_specification
    SUBTYPE OF ( specification_definition );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY material_specification_view_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'material specification';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'INITIAL_CONTEXT'  ) ) = 0 );
  END_ENTITY;

  ENTITY material_thermal_conductivity_class
    SUBTYPE OF ( conductivity_material_property_class );
  END_ENTITY;

  ENTITY maths_space;
  END_ENTITY;

  ENTITY maths_variable;
      name          : STRING;
      values_space  : maths_space;
  END_ENTITY;

  ENTITY mating_connector_placement_relationship;
      placed_connector     : mating_connector_usage;
      interface_context    : next_higher_assembly_interface_requirement;
      connector_placement  : axis_placement;
  END_ENTITY;

  ENTITY mating_connector_relationship
    SUBTYPE OF ( part_definition_relationship );
      SELF\view_definition_relationship.relating_view : packaged_connector;
      SELF\view_definition_relationship.related_view : packaged_connector;
    WHERE
      wr1: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
  END_ENTITY;

  ENTITY mating_connector_termination;
      name                : STRING;
      definition          : mating_connector_definition_select;
      accessed_connector  : mating_connector_usage;
    DERIVE
      signal_definition  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 'signal definition' );
    UNIQUE
      ur1 : definition, accessed_connector;
    WHERE
      wr1: ( SIZEOF( signal_definition ) <= 1 );
  END_ENTITY;

  ENTITY mating_connector_usage
    SUBTYPE OF ( product_view_definition );
      definition             : product_view_definition;
      reference_designation  : OPTIONAL STRING;
    INVERSE
      placement_context : mating_connector_placement_relationship FOR placed_connector;
  END_ENTITY;

  ENTITY maximum_function
    SUBTYPE OF ( multiple_arity_function_call );
  END_ENTITY;

  ENTITY maximum_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [1 : 1] OF value_limit;
    WHERE
      wr1: ( SELF\representation.items[1]\value_limit.qualifiers[1]\type_qualifier.name = 'maximum' );
  END_ENTITY;

  ENTITY measure_item
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            measure_item_with_precision, 
            numerical_item_with_global_unit, 
            numerical_item_with_unit, 
            value_list, 
            value_range, 
            value_range_with_global_unit, 
            value_set, 
            value_with_tolerances ) )
    SUBTYPE OF ( representation_item );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REPRESENTATION.ITEMS' ) ) 
               > 0 );
  END_ENTITY;

  ENTITY measure_item_with_precision
    SUBTYPE OF ( measure_item );
      significant_digits  : INTEGER;
  END_ENTITY;

  ENTITY measure_qualification;
      name               : STRING;
      description        : STRING;
      qualified_measure  : value_with_unit;
      qualifiers         : SET [1 : ?] OF value_qualifier;
    WHERE
      wr1: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'NUMERICAL_ITEM_WITH_UNIT' ) IN 
               TYPEOF( qualified_measure ) ) );
      wr2: ( SIZEOF( QUERY ( temp <* qualifiers | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PRECISION_QUALIFIER'  IN TYPEOF( temp ) ) ) ) < 2 );
  END_ENTITY;

  ENTITY measurement_path;
      defined_by  : curve;
      defined_in  : geometric_coordinate_space;
  END_ENTITY;

  ENTITY mechanical_design_and_draughting_relationship
    SUBTYPE OF ( definitional_representation_relationship );
      SELF\representation_relationship.rep_1 : mechanical_design_and_draughting_relationship_select;
      SELF\representation_relationship.rep_2 : mechanical_design_and_draughting_relationship_select;
    WHERE
      wr1: ( ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'DRAUGHTING_MODEL' ) IN TYPEOF( 
               rep_2 ) ) ) OR ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'DRAUGHTING_MODEL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'GEOMETRIC_MODEL'] * TYPEOF( rep_1 ) ) = 
               1 ) );
      wr2: ( ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MECHANICAL_REPRESENTATION_STYLED_MODEL'  ) IN TYPEOF( rep_2 ) ) ) OR ( SIZEOF( [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'MECHANICAL_REPRESENTATION_STYLED_MODEL', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'GEOMETRIC_MODEL'] * TYPEOF( rep_1 ) ) = 
               1 ) );
      wr3: ( ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MECHANICAL_DESIGN_SHADED_STYLED_MODEL'  ) IN TYPEOF( rep_2 ) ) ) OR ( SIZEOF( [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'MECHANICAL_DESIGN_SHADED_STYLED_MODEL', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'GEOMETRIC_MODEL'] * TYPEOF( rep_1 ) ) = 
               1 ) );
  END_ENTITY;

  ENTITY mechanical_design_presentation_representation_with_draughting
    SUBTYPE OF ( styled_model );
      SELF\representation.items  : SET [1 : ?] OF mdprwd_element_select;
    WHERE
      wr1: ( SELF\representation.context_of_items\geometric_coordinate_space.dimension_count = 3 );
  END_ENTITY;

  ENTITY mechanical_design_shaded_presentation_area
    SUBTYPE OF ( view_area );
  END_ENTITY;

  ENTITY mechanical_design_shaded_styled_model
    SUBTYPE OF ( styled_model );
  END_ENTITY;

  ENTITY mechanical_design_view_area
    SUBTYPE OF ( view_area );
  END_ENTITY;

  ENTITY mechanical_representation_styled_model
    SUBTYPE OF ( styled_model );
  END_ENTITY;

  ENTITY mechanism_representation
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : geometric_coordinate_space;
      SELF\representation.items             : SET [1 : ?] OF pair_representation_relationship;
      represented_topology                  : kinematic_topology_representation_select;
    DERIVE
      represented_joints  : SET [1 : ?] OF kinematic_joint := collect_joints( items );
    WHERE
      wr1: ( ( ( 'KINEMATIC_TOPOLOGY_SCHEMA.KINEMATIC_TOPOLOGY_STRUCTURE' IN TYPEOF( represented_topology ) ) AND ( 
               represented_joints :=: represented_topology.items ) ) OR ( ( 'KINEMATIC_TOPOLOGY_SCHEMA.'
               + 'KINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE'  IN TYPEOF( represented_topology ) ) AND ( represented_joints :=: 
               get_kinematic_joints_from_oriented_joints( represented_topology.items ) ) ) OR ( ( 'KINEMATIC_TOPOLOGY_SCHEMA.'
               + 'KINEMATIC_TOPOLOGY_NETWORK_STRUCTURE'  IN TYPEOF( represented_topology ) ) AND ( represented_joints :=: 
               get_kinematic_joints_from_kinematic_loops( represented_topology.items ) ) ) );
  END_ENTITY;

  ENTITY mechanism_state_representation
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF pair_value;
      represented_mechanism      : mechanism_representation;
    DERIVE
      SELF\representation.context_of_items  : geometric_coordinate_space := represented_mechanism.context_of_items;
  END_ENTITY;

  ENTITY median_curve
    SUBTYPE OF ( centre_of_symmetry );
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY median_surface
    SUBTYPE OF ( centre_of_symmetry );
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY minimally_defined_bare_die_terminal
    SUPERTYPE OF ( 
        guided_wave_bare_die_terminal 
        ANDOR
        bare_die_terminal )
    SUBTYPE OF ( part_terminal );
      SELF\shape_element.containing_shape  : bare_die;
  END_ENTITY;

  ENTITY minimally_defined_component_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\component_feature.definition  : part_terminal_external_reference;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY minimally_defined_connector
    SUBTYPE OF ( packaged_part );
      SELF\packaged_part.used_package  : SET [1 : ?] OF package_external_reference;
    INVERSE
      terminal : SET [1 : ?] OF shape_element FOR containing_shape;
    WHERE
      wr1: ( SIZEOF( SELF\packaged_part.access_mechanisms ) = 0 );
      wr2: ( NOT EXISTS( SELF\packaged_part.implemented_function ) );
      wr3: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ALTERED_PACKAGED_PART' IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY minimum_function
    SUBTYPE OF ( multiple_arity_function_call );
  END_ENTITY;

  ENTITY minimum_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [1 : 1] OF value_limit;
    WHERE
      wr1: ( SELF\representation.items[1]\value_limit.qualifiers[1]\type_qualifier.name = 'minimum' );
  END_ENTITY;

  ENTITY minus_expression
    SUBTYPE OF ( binary_numeric_expression );
  END_ENTITY;

  ENTITY minus_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY miscellaneous_violation
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            inappropriate_element_visibility, 
            inconsistent_element_reference, 
            non_referenced_coordinate_system, 
            unused_shape_element, 
            wrong_element_name ) )
    SUBTYPE OF ( externally_conditioned_data_quality_criterion );
  END_ENTITY;

  ENTITY mod_expression
    SUBTYPE OF ( binary_numeric_expression );
  END_ENTITY;

  ENTITY model_based_3d_annotation_presentation_view_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'model based 3D annotation presentation';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'INITIAL_CONTEXT'  ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( pvd <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS'  ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MODEL_BASED_VIEW_CONTEXT'  IN TYPEOF( pvd.
               initial_context ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY model_based_view_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'model based product geometry';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'ADDITIONAL_CONTEXTS'  ) ) = 0 );
  END_ENTITY;

  ENTITY model_image_3d
    SUBTYPE OF ( detailed_geometric_model_element );
      is_displaying  : presented_model_select;
      source         : camera_model_d3;
      target         : planar_box;
  END_ENTITY;

  ENTITY model_parameter
    SUPERTYPE OF ( 
        ONEOF ( 
            datum_difference_based_model_parameter, 
            schema_based_model_parameter ) )
    SUBTYPE OF ( independent_property );
      valid_range    : OPTIONAL SET [1 : ?] OF value_range;
      default_value  : OPTIONAL scalar_or_coordinated_characteristics;
    DERIVE
      reference_document  : SET [0 : ?] OF document_definition := get_document_definition( SELF, 'reference document', 
                              'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENT_DEFINITION'  );
    WHERE
      wr1: ( EXISTS( reference_document ) AND ( SIZEOF( reference_document ) = 1 ) );
  END_ENTITY;

  ENTITY model_parameter_with_unit
    SUBTYPE OF ( independent_property_with_unit, model_parameter );
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SCHEMA_BASED_MODEL_PARAMETER' IN TYPEOF( 
               SELF ) ) );
  END_ENTITY;

  ENTITY modified_solid
    SUBTYPE OF ( detailed_geometric_model_element );
      rationale   : STRING;
      base_solid  : solid_select;
  END_ENTITY;

  ENTITY modify_element
    SUBTYPE OF ( change_element );
      current_design_object  : SET [1 : ?] OF change_management_object;
  END_ENTITY;

  ENTITY modify_single_element
    SUPERTYPE OF ( 
        ONEOF ( 
            terminal_swap_specification, 
            gate_path_swap_specification, 
            component_swap_specification ) )
    SUBTYPE OF ( change_element );
      current_design_object   : change_management_object;
      previous_design_object  : change_management_object;
    WHERE
      wr1: ( current_design_object <> previous_design_object );
  END_ENTITY;

  ENTITY moments_of_inertia
    SUBTYPE OF ( shape_dependent_property_representation );
    WHERE
      wr1: ( SIZEOF( QUERY ( it <* SELF\property_definition_representation.used_representation\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'AXIS_PLACEMENT' ) IN TYPEOF( it ) ) ) ) 
               = 1 );
      wr2: ( SIZEOF( QUERY ( it <* SELF\property_definition_representation.used_representation\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INERTIA_MATRIX_ITEM' ) IN TYPEOF( it ) ) ) ) 
               = 1 );
      wr3: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'GEOMETRIC_COORDINATE_SPACE' ) IN TYPEOF( 
               SELF\property_definition_representation.used_representation\representation.context_of_items ) );
  END_ENTITY;

  ENTITY motion_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'motion';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'ADDITIONAL_CONTEXTS'  ) ) = 0 );
  END_ENTITY;

  ENTITY mounting_restriction_area
    SUBTYPE OF ( non_feature_shape_element );
      mounting_surface                     : interconnect_module_component_surface_feature;
      SELF\shape_element.containing_shape  : assembly_module_design_view;
    WHERE
      wr1: ( ( SIZEOF( SELF\non_feature_shape_element.element_shape ) = 0 ) OR ( SIZEOF( QUERY ( es <* SELF\
               non_feature_shape_element.element_shape | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONSTRUCTIVE_GEOMETRY'  IN TYPEOF( es ) ) ) ) ) 
               = 0 ) );
  END_ENTITY;

  ENTITY mounting_restriction_volume
    SUBTYPE OF ( non_feature_shape_element );
      mounting_surface                     : interconnect_module_component_surface_feature;
      SELF\shape_element.containing_shape  : assembly_module_design_view;
    INVERSE
      volume : non_feature_shape_model FOR associated_element;
  END_ENTITY;

  ENTITY movable_packaged_component_join_terminal
    SUBTYPE OF ( packaged_component_join_terminal );
      wire_terminal_length  : OPTIONAL length_tolerance_characteristic;
    WHERE
      wr1: ( SIZEOF( QUERY ( pt <* SELF\component_feature.definition\packaged_part_terminal.terminal_of_package | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.WIRE_TERMINAL'  IN TYPEOF( pt ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY mult_expression
    SUBTYPE OF ( multiple_arity_numeric_expression );
  END_ENTITY;

  ENTITY multi_axis_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            boss, 
            general_removal_volume, 
            hole, 
            planar_face, 
            pocket, 
            profile_feature, 
            protrusion, 
            rib_top, 
            rounded_end, 
            slot, 
            step ) )
    SUBTYPE OF ( machining_feature );
      maximum_feature_limit  : OPTIONAL planar_element;
  END_ENTITY;

  ENTITY multi_layer_material_removal_laminate_component
    SUBTYPE OF ( material_removal_laminate_component );
      derived_layer_geometry  : stratum_feature_based_derived_pattern;
  END_ENTITY;

  ENTITY multi_layer_stratum_feature_template_component
    SUBTYPE OF ( stratum_feature_template_component );
      derived_layer_geometry  : stratum_feature_based_derived_pattern;
    WHERE
      wr1: ( SELF\stratum_feature_template_component.implementation_or_resident_stratum\stratum_feature.resident_stratum :=: 
               derived_layer_geometry.reference_stratum_feature.resident_stratum );
  END_ENTITY;

  ENTITY multi_level_reference_designator
    SUBTYPE OF ( assembly_component_relationship );
      location  : LIST [1 : ?] OF UNIQUE next_assembly_usage;
    DERIVE
      SELF\product_occurrence_definition_relationship.relating_view : product_view_definition := location[1]\
                                                 product_occurrence_definition_relationship.relating_view;
      SELF\product_occurrence_definition_relationship.related_view : product_view_definition_or_reference := location[HIINDEX( 
                                                 location )]\product_occurrence_definition_relationship.related_view;
      leaf_node                              : product_view_definition_or_reference := SELF\
                                                 product_occurrence_definition_relationship.related_view;
      root_node                              : product_view_definition := SELF\product_occurrence_definition_relationship.
                                                 relating_view;
    UNIQUE
      ur1 : location;
  END_ENTITY;

  ENTITY multi_stratum_printed_component
    SUBTYPE OF ( printed_component, structured_layout_component );
      SELF\printed_component.derived_from  : multi_stratum_printed_part_template;
  END_ENTITY;

  ENTITY multi_stratum_printed_part_template
    SUBTYPE OF ( structured_printed_part_template, multi_stratum_structured_template );
  END_ENTITY;

  ENTITY multi_stratum_special_symbol_component
    SUBTYPE OF ( structured_layout_component );
      SELF\definition_based_product_occurrence.derived_from : multi_stratum_special_symbol_template;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY multi_stratum_special_symbol_template
    SUBTYPE OF ( multi_stratum_structured_template, special_symbol_template );
  END_ENTITY;

  ENTITY multi_stratum_structured_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            padstack_definition, 
            multi_stratum_special_symbol_template ) 
        ANDOR
        stratum_stack_dependent_template 
        ANDOR
        ONEOF ( 
            padstack_definition, 
            generic_footprint_definition, 
            multi_stratum_special_symbol_template ) )
    SUBTYPE OF ( structured_template );
      location  : template_arrangement;
  END_ENTITY;

  ENTITY multiple_arity_boolean_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            and_expression, 
            or_expression ) )
    SUBTYPE OF ( boolean_expression, multiple_arity_generic_expression );
      SELF\multiple_arity_generic_expression.operands : LIST [2 : ?] OF boolean_expression;
  END_ENTITY;

  ENTITY multiple_arity_function_call
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( multiple_arity_numeric_expression );
  END_ENTITY;

  ENTITY multiple_arity_generic_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( generic_expression );
      operands  : LIST [2 : ?] OF generic_expression;
  END_ENTITY;

  ENTITY multiple_arity_numeric_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            plus_expression, 
            mult_expression, 
            multiple_arity_function_call ) )
    SUBTYPE OF ( numeric_expression, multiple_arity_generic_expression );
      SELF\multiple_arity_generic_expression.operands : LIST [2 : ?] OF numeric_expression;
  END_ENTITY;

  ENTITY multiply_defined_cartesian_points
    SUBTYPE OF ( multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CARTESIAN_POINT' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CARTESIAN_POINT'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY multiply_defined_curves
    SUBTYPE OF ( multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY multiply_defined_directions
    SUBTYPE OF ( multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE'  );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIRECTION', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIRECTION' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY multiply_defined_edges
    SUBTYPE OF ( topology_related_to_multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE_CURVE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY multiply_defined_faces
    SUBTYPE OF ( topology_related_to_multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FACE_SURFACE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY multiply_defined_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            multiply_defined_curves, 
            multiply_defined_surfaces, 
            multiply_defined_cartesian_points, 
            multiply_defined_directions, 
            multiply_defined_placements ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY multiply_defined_placements
    SUBTYPE OF ( multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      assessment_specification_2             : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF.assessment_specification_2.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF.assessment_specification_2.threshold ) ) );
      wr3: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'PLANE_ANGLE_AND_LENGTH_PAIR'  );
      wr4: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'AXIS_PLACEMENT' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AXIS_PLACEMENT'] );
      wr5: validate_locations_of_extreme_value_type( SELF, [] );
      wr6: validate_accuracy_types( SELF, [] );
      wr7: ( SIZEOF( QUERY ( sdqr <* bag_to_set( USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_RESULT.' + 
               'CRITERION_INSPECTED'  ) ) | ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'SHAPE_DATA_QUALITY_INSPECTION_RESULT'  ) IN TYPEOF( sdqr ) ) AND ( SIZEOF( QUERY ( sdqiir <* bag_to_set( USEDIN( 
               sdqr, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'DATA_QUALITY_INSPECTION_REPORT.' + 
               'INSPECTION_RESULT'  ) ) | ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'  ) IN TYPEOF( sdqiir ) ) AND ( SIZEOF( QUERY ( sdqiri <* sdqiir.
               inspected_instances | ( TYPEOF( sdqiri.inspected_elements[1] ) <> TYPEOF( sdqiri.inspected_elements[2] ) ) ) ) = 0 ) ) ) ) 
               = 0 ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY multiply_defined_solids
    SUBTYPE OF ( inapt_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY multiply_defined_surfaces
    SUBTYPE OF ( multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY multiply_defined_vertices
    SUBTYPE OF ( topology_related_to_multiply_defined_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'VERTEX_POINT' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.VERTEX_POINT'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY name_assignment;
      name   : STRING;
      role   : STRING;
      items  : assigned_name_select;
  END_ENTITY;

  ENTITY narrow_surface_patch
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      width_tolerance                        : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_PATCH'] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY near_point_relationship;
      relating_item  : curve_or_surface;
      ref_point      : point;
  END_ENTITY;

  ENTITY nearly_degenerate_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            small_area_surface, 
            short_length_curve, 
            entirely_narrow_surface ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY nearly_degenerate_surface_boundary
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_VALUE_RANGE' ) IN 
               TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' IN 
               value_limit_type( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'BOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY nearly_degenerate_surface_patch
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_VALUE_RANGE' ) IN 
               TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' IN 
               value_limit_type( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_PATCH'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY next_assembly_usage
    SUBTYPE OF ( assembly_component_relationship );
  END_ENTITY;

  ENTITY next_assembly_usage_occurrence_relationship
    SUBTYPE OF ( next_assembly_usage );
    UNIQUE
      ur1 : SELF\product_occurrence_definition_relationship.relating_view, SELF\assembly_component_relationship.
               location_indicator;
  END_ENTITY;

  ENTITY next_higher_assembly_interface_requirement;
      shape                            : three_dimensional_shape;
      version_of_next_higher_assembly  : product_version;
  END_ENTITY;

  ENTITY ngon_profile
    SUBTYPE OF ( closed_profile );
      diameter                      : numerical_item_with_unit;
      number_of_sides               : numerical_item_with_unit;
      corner_radius                 : OPTIONAL numerical_item_with_unit;
      circumscribed_or_across_flat  : BOOLEAN;
  END_ENTITY;

  ENTITY nominal_3d_derived_feature
    SUBTYPE OF ( nominal_3d_feature, derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [1 : ?] OF nominal_3d_feature;
    DERIVE
      SELF\associated_shape_element.associated_item : nominal_3d_derived_feature_geometry := association\
                                                 geometric_item_specific_usage.identified_item;
    WHERE
      wr1: EXISTS( associated_item );
  END_ENTITY;

  ENTITY nominal_3d_edge
    SUBTYPE OF ( nominal_3d_integral_feature );
    DERIVE
      SELF\associated_shape_element.associated_item : edge_curve := association\geometric_item_specific_usage.identified_item;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE_CURVE' IN TYPEOF( SELF\
               associated_shape_element.associated_item ) );
  END_ENTITY;

  ENTITY nominal_3d_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            nominal_3d_integral_feature, 
            nominal_3d_derived_feature ) )
    SUBTYPE OF ( associated_shape_element, part_shape_element );
      SELF\shape_element.containing_shape  : gdt_representation_shape;
  END_ENTITY;

  ENTITY nominal_3d_integral_feature
    SUBTYPE OF ( general_part_feature, nominal_3d_feature );
    DERIVE
      SELF\associated_shape_element.associated_item : nominal_3d_integral_feature_geometry := association\
                                                 geometric_item_specific_usage.identified_item;
    WHERE
      wr1: EXISTS( associated_item );
  END_ENTITY;

  ENTITY nominal_3d_model_shape
    SUBTYPE OF ( associated_item_shape );
    DERIVE
      SELF\associated_item_shape.associated_model : advanced_face_model := SELF\associated_item_shape.association\
                                                 property_definition_representation.used_representation;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MODEL_BASED_VIEW_CONTEXT' IN TYPEOF( 
               described_element\product_view_definition.initial_context ) );
      wr2: EXISTS( associated_model );
  END_ENTITY;

  ENTITY nominal_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [1 : 1] OF qualified_numerical_item_with_unit;
    WHERE
      wr1: ( SELF\representation.items[1]\qualified_representation_item.qualifiers[1]\type_qualifier.name = 'nominal' );
  END_ENTITY;

  ENTITY non_agreed_accuracy_parameter_usage
    SUBTYPE OF ( violation_of_agreed_conditions_on_system_environment );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'NUMERICAL_REPRESENTATION_CONTEXT' ] );
  END_ENTITY;

  ENTITY non_agreed_scale_usage
    SUBTYPE OF ( violation_of_agreed_conditions_on_system_environment );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CARTESIAN_TRANSFORMATION_3D' ] );
  END_ENTITY;

  ENTITY non_agreed_unit_usage
    SUBTYPE OF ( violation_of_agreed_conditions_on_system_environment );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'NUMERICAL_REPRESENTATION_CONTEXT' ] );
  END_ENTITY;

  ENTITY non_conductive_base_blind_via
    SUBTYPE OF ( blind_via );
  END_ENTITY;

  ENTITY non_conductive_cross_section_template
    SUBTYPE OF ( template_definition );
      template_technology  : OPTIONAL SET [1 : ?] OF stratum_technology;
      nominal_width        : length_data_element;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY non_definitional_shape_element
    SUPERTYPE OF ( 
        ONEOF ( 
            contacting_feature, 
            datum_system, 
            general_datum_reference ) )
    SUBTYPE OF ( shape_element );
  END_ENTITY;

  ENTITY non_feature_shape_element
    SUPERTYPE OF ( 
        ONEOF ( 
            seating_plane, 
            interconnect_module_constraint_region, 
            stratum_constraint_region, 
            reference_graphic_registration_mark, 
            mounting_restriction_area, 
            mounting_restriction_volume ) )
    SUBTYPE OF ( non_definitional_shape_element );
    DERIVE
      scope  : item_shape := SELF\shape_element.containing_shape;
    INVERSE
      element_shape     : SET [0 : ?] OF non_feature_shape_model FOR associated_element;
      associated_usage_concept : SET [0 : ?] OF usage_concept_usage_relationship FOR associated_usage;
    WHERE
      wr1: ( NOT ( ( SIZEOF( associated_usage_concept ) > 0 ) OR ( SIZEOF( element_shape ) > 0 ) ) );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ITEM_SHAPE' IN TYPEOF( scope ) );
  END_ENTITY;

  ENTITY non_feature_shape_element_relationship
    SUBTYPE OF ( shape_element_relationship );
      SELF\shape_element_relationship.relating : non_feature_shape_element;
      SELF\shape_element_relationship.related : non_feature_shape_element;
    UNIQUE
      ur1 : SELF\shape_element_relationship.related, SELF\shape_element_relationship.relating;
  END_ENTITY;

  ENTITY non_feature_shape_model
    SUBTYPE OF ( geometric_model );
      associated_element  : non_feature_shape_element;
      model_shape         : OPTIONAL geometric_model;
    WHERE
      wr1: ( TYPEOF( SELF ) <> TYPEOF( model_shape ) );
      wr2: ( NOT EXISTS( SELF\representation.id ) );
      wr3: ( SIZEOF( QUERY ( x <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION'  IN TYPEOF( x ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY non_manifold_at_edge
    SUBTYPE OF ( inapt_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY non_manifold_at_vertex
    SUBTYPE OF ( inapt_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'VERTEX_POINT' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY non_manifold_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY non_referenced_coordinate_system
    SUBTYPE OF ( miscellaneous_violation );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'AXIS_PLACEMENT' ] );
  END_ENTITY;

  ENTITY non_smooth_geometry_transition_across_edge
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            g1_discontinuity_between_adjacent_faces, 
            g2_discontinuity_between_adjacent_faces ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY non_uniform_zone_definition
    SUBTYPE OF ( tolerance_zone_definition );
  END_ENTITY;

  ENTITY not_expression
    SUBTYPE OF ( unary_boolean_expression );
      SELF\unary_generic_expression.operand  : boolean_expression;
  END_ENTITY;

  ENTITY null_representation_item
    SUBTYPE OF ( representation_item );
  END_ENTITY;

  ENTITY number_of_decimal_places;
      number_of_places_after_decimal_separator : INTEGER;
  END_ENTITY;

  ENTITY numeric_defined_function
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            integer_defined_function, 
            real_defined_function ) )
    SUBTYPE OF ( numeric_expression, defined_function );
  END_ENTITY;

  ENTITY numeric_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( expression );
    DERIVE
      is_int        : BOOLEAN := is_int_expr( SELF );
      sql_mappable  : BOOLEAN := is_sql_mappable( SELF );
  END_ENTITY;

  ENTITY numeric_variable
    SUPERTYPE OF ( 
        ONEOF ( 
            int_numeric_variable, 
            real_numeric_variable ) )
    SUBTYPE OF ( simple_numeric_expression, variable );
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INT_NUMERIC_VARIABLE' IN TYPEOF( SELF ) ) OR 
               ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REAL_NUMERIC_VARIABLE' IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY numerical_document_property
    SUBTYPE OF ( numerical_item_with_unit );
    INVERSE
      valued_characteristic : SET [1 : 1] OF document_property_representation FOR items;
  END_ENTITY;

  ENTITY numerical_item_with_global_unit
    SUBTYPE OF ( measure_item );
      value_component  : measure_value;
    WHERE
      wr1: ( SIZEOF( QUERY ( pvr <* QUERY ( r <* USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REPRESENTATION.ITEMS'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PROPERTY_VALUE_REPRESENTATION'  IN TYPEOF( r ) ) )
               | EXISTS( pvr.context_of_items.units ) ) ) > 0 );
  END_ENTITY;

  ENTITY numerical_item_with_unit
    SUBTYPE OF ( measure_item, value_with_unit );
  END_ENTITY;

  ENTITY numerical_representation_context
    SUBTYPE OF ( representation_context );
      units       : OPTIONAL SET [1 : ?] OF unit;
      accuracies  : OPTIONAL SET [1 : ?] OF uncertainty_with_unit;
  END_ENTITY;

  ENTITY occurrence_placement
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            part_occurrence_placement, 
            physical_element_placement ) );
      reference_physical_element  : physical_element_definition;
      reference_geometric_space   : geometric_model;
      positioned_representation   : template_instance;
  END_ENTITY;

  ENTITY odd_function
    SUBTYPE OF ( unary_boolean_expression );
      SELF\unary_generic_expression.operand  : numeric_expression;
    WHERE
      wr1: is_int_expr( SELF );
  END_ENTITY;

  ENTITY offset_shape_element
    SUBTYPE OF ( derived_shape_element );
      offset  : value_with_unit;
  END_ENTITY;

  ENTITY open_bead_end_type
    SUBTYPE OF ( bead_end_type );
  END_ENTITY;

  ENTITY open_closed_shell
    SUBTYPE OF ( erroneous_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CLOSED_SHELL' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY open_edge_loop
    SUBTYPE OF ( erroneous_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE_LOOP'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ORIENTED_EDGE' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY open_profile
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            general_open_profile, 
            linear_profile, 
            partial_circular_profile, 
            rounded_u_profile, 
            square_u_profile, 
            tee_profile, 
            vee_profile ) )
    SUBTYPE OF ( profile );
      profile_limit  : OPTIONAL planar_element;
  END_ENTITY;

  ENTITY open_profile_usage
    SUBTYPE OF ( profile_usage );
      profile_limit                    : OPTIONAL plane;
      SELF\profile_usage.used_profile  : open_profile;
  END_ENTITY;

  ENTITY open_shell
    SUBTYPE OF ( connected_face_set );
  END_ENTITY;

  ENTITY open_slot
    SUBTYPE OF ( slot );
      course_of_travel  : path_feature_component;
      end_conditions    : SET [2 : 2] OF slot_end_type;
  END_ENTITY;

  ENTITY open_slot_end_type
    SUBTYPE OF ( slot_end_type );
  END_ENTITY;

  ENTITY operational_requirement_relationship
    SUBTYPE OF ( assigned_property, view_definition_relationship );
      SELF\view_definition_relationship.relating_view : requirement_view_definition;
      SELF\view_definition_relationship.related_view : requirement_view_definition;
      SELF\assigned_property.described_element : requirement_view_definition;
      relationship_type                      : relationship_operation;
    DERIVE
      operand_1  : requirement_view_definition := SELF\view_definition_relationship.relating_view;
      operand_2  : requirement_view_definition := SELF\view_definition_relationship.related_view;
      result     : requirement_view_definition := SELF\assigned_property.described_element;
    WHERE
      wr1: ( operand_1 :<>: operand_2 );
  END_ENTITY;

  ENTITY or_expression
    SUBTYPE OF ( multiple_arity_boolean_expression );
  END_ENTITY;

  ENTITY ordinal_date;
      day_component   : day_in_year_number;
      year_component  : year_number;
    WHERE
      wr1: ( ( ( NOT leap_year( SELF.year_component ) ) AND ( 1 <= day_component ) AND ( day_component <= 365 ) ) OR ( 
               leap_year( SELF.year_component ) AND ( 1 <= day_component ) AND ( day_component <= 366 ) ) );
  END_ENTITY;

  ENTITY organization;
      id    : OPTIONAL STRING;
      name  : STRING;
  END_ENTITY;

  ENTITY organization_or_person_in_organization_assignment
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_organization_or_person_in_organization_assignment, 
            externally_defined_organization_or_person_in_organization_assignment ) );
      assigned_entity  : organization_or_person_in_organization_select;
      role             : STRING;
      items            : SET [1 : ?] OF organization_or_person_in_organization_item;
  END_ENTITY;

  ENTITY organization_relationship;
      relation_type          : STRING;
      description            : OPTIONAL STRING;
      relating_organization  : organization;
      related_organization   : organization;
  END_ENTITY;

  ENTITY oriented_closed_shell
    SUBTYPE OF ( closed_shell );
      shell        : closed_shell;
      orientation  : BOOLEAN;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ORIENTED_CLOSED_SHELL' IN TYPEOF( SELF.
               shell ) ) );
  END_ENTITY;

  ENTITY oriented_edge
    SUBTYPE OF ( edge );
      edge_definition  : edge;
      orientation      : BOOLEAN;
    DERIVE
      SELF\edge.edge_start  : vertex := boolean_choice( SELF.orientation, SELF.edge_definition.edge_start, SELF.edge_definition.
                                edge_end );
      SELF\edge.edge_end    : vertex := boolean_choice( SELF.orientation, SELF.edge_definition.edge_end, SELF.edge_definition.
                                edge_start );
    WHERE
      wr1: ( NOT ( 'TOPOLOGY_SCHEMA.ORIENTED_EDGE' IN TYPEOF( SELF.edge_definition ) ) );
  END_ENTITY;

  ENTITY oriented_joint
    SUBTYPE OF ( oriented_edge );
      SELF\oriented_edge.edge_definition  : kinematic_joint;
  END_ENTITY;

  ENTITY oriented_tolerance_zone
    SUBTYPE OF ( tolerance_zone_with_datum );
      orientation  : oriented_tolerance_zone_type;
      angle        : OPTIONAL angle_data_element;
    WHERE
      wr1: ( ( orientation <> oriented_tolerance_zone_type.angular ) XOR EXISTS( angle ) );
  END_ENTITY;

  ENTITY otd_catalogue
    SUBTYPE OF ( known_source );
  END_ENTITY;

  ENTITY otd_dictionary
    SUBTYPE OF ( known_source );
  END_ENTITY;

  ENTITY outer_diameter
    SUBTYPE OF ( outer_round );
      feature_length  : numerical_item_with_unit;
      diameter        : numerical_item_with_unit;
      reduced_size    : taper_select;
  END_ENTITY;

  ENTITY outer_diameter_to_shoulder
    SUBTYPE OF ( outer_round );
      feature_length    : numerical_item_with_unit;
      diameter          : numerical_item_with_unit;
      v_shape_boundary  : vee_profile;
  END_ENTITY;

  ENTITY outer_round
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            outer_diameter, 
            outer_diameter_to_shoulder ) )
    SUBTYPE OF ( machining_feature );
  END_ENTITY;

  ENTITY over_riding_styled_element
    SUBTYPE OF ( styled_element );
      over_ridden_element  : styled_element;
  END_ENTITY;

  ENTITY over_used_vertex
    SUBTYPE OF ( inapt_topology );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'VERTEX_POINT' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY overcomplex_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            excessively_high_degree_curve, 
            excessively_high_degree_surface, 
            surface_with_excessive_patches_in_one_direction, 
            curve_with_excessive_segments, 
            high_degree_linear_curve, 
            high_degree_planar_surface, 
            high_degree_conic, 
            high_degree_axi_symmetric_surface ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY overcomplex_topology_and_geometry_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            unused_patches, 
            edge_with_excessive_segments, 
            face_surface_with_excessive_patches_in_one_direction ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY overlapping_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            partly_overlapping_curves, 
            partly_overlapping_surfaces ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY package
    SUBTYPE OF ( part_usage_view );
      mounting_technology                    : OPTIONAL mounting_technology_type;
      maximum_seating_plane_installation_offset : OPTIONAL length_data_element;
      nominal_mounting_lead_pitch            : OPTIONAL length_data_element;
      nominal_mounting_lead_span             : OPTIONAL length_data_element;
      maximum_body_height_above_seating_plane : OPTIONAL length_data_element;
      maximum_body_height_below_seating_plane : OPTIONAL length_data_element;
      body_clearance_above_seating_plane     : OPTIONAL length_tolerance_characteristic;
      body_clearance_below_seating_plane     : OPTIONAL length_tolerance_characteristic;
      maximum_lead_length_below_seating_plane : OPTIONAL length_data_element;
      least_lead_length_below_seating_plane  : OPTIONAL length_data_element;
    DERIVE
      maximum_package_total_vertical_extent  : length_data_element := max_data_element( add_data_element( 
                                                 maximum_body_height_above_seating_plane, maximum_body_height_below_seating_plane ), 
                                                 add_data_element( maximum_body_height_above_seating_plane, 
                                                 maximum_lead_length_below_seating_plane ) );
      cutout_required                        : LOGICAL := maximum_body_height_below_seating_plane\value_with_unit.value_component 
                                                 > 0;
      maximum_installed_height               : length_data_element := add_data_element( maximum_body_height_above_seating_plane, 
                                                 maximum_seating_plane_installation_offset );
      one_orientation_feature                : LOGICAL := SIZEOF( orientation_feature ) = 1;
      two_orientation_features               : LOGICAL := SIZEOF( orientation_feature ) = 2;
      three_orientation_features             : LOGICAL := SIZEOF( orientation_feature ) = 3;
      package_seating_plane                  : SET OF seating_plane := bag_to_set( QUERY ( nfse <* USEDIN( SELF, 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'NON_FEATURE_SHAPE_ELEMENT.SCOPE'  ) | ( 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'SEATING_PLANE'  IN TYPEOF( nfse ) ) ) );
      interface_plane                        : SET OF interface_plane := bag_to_set( QUERY ( nfse <* USEDIN( SELF, 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'NON_FEATURE_SHAPE_ELEMENT.SCOPE'  ) | ( 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'INTERFACE_PLANE'  IN TYPEOF( nfse ) ) ) );
    INVERSE
      body                 : SET [0 : 1] OF package_body FOR containing_shape;
      package_accesses     : SET [0 : ?] OF package_terminal FOR containing_shape;
      package_polarity_indication : SET [0 : 1] OF polarity_indication_feature FOR containing_shape;
      orientation_feature  : SET [0 : 3] OF package_orientation_feature FOR containing_shape;
    WHERE
      wr1 : ( ( NOT ( mounting_technology = surface_mount ) ) OR ( NOT ( EXISTS( maximum_lead_length_below_seating_plane ) OR 
                EXISTS( least_lead_length_below_seating_plane ) ) ) );
      wr2 : ( ( NOT EXISTS( maximum_lead_length_below_seating_plane ) ) OR ( maximum_lead_length_below_seating_plane\
                value_with_unit.value_component > 0 ) );
      wr3 : ( ( NOT EXISTS( least_lead_length_below_seating_plane ) ) OR ( least_lead_length_below_seating_plane\value_with_unit.
                value_component > 0 ) );
      wr4 : ( ( NOT EXISTS( mounting_technology ) ) OR ( SIZEOF( package_seating_plane ) = 1 ) );
      wr5 : ( SIZEOF( QUERY ( pa <* package_accesses | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                + 'PRIMARY_REFERENCE_TERMINAL'  IN TYPEOF( pa ) ) ) ) = 1 );
      wr6 : ( SIZEOF( QUERY ( nt <* package_accesses | EXISTS( nt\part_feature.precedent_feature ) ) ) = ( SIZEOF( 
                package_accesses ) - 1 ) );
      wr7 : ( SIZEOF( QUERY ( nt <* package_accesses | ( SIZEOF( nt\part_feature.subsequent_feature ) = 1 ) ) ) = ( SIZEOF( 
                package_accesses ) - 1 ) );
      wr8 : ( ( NOT one_orientation_feature ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                + 'PRIMARY_ORIENTATION_FEATURE'  IN TYPEOF( orientation_feature[1] ) ) );
      wr9 : ( ( NOT two_orientation_features ) OR ( ( SIZEOF( QUERY ( orf <* orientation_feature | ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRIMARY_ORIENTATION_FEATURE'  IN TYPEOF( orf ) ) ) ) 
                = 1 ) AND ( SIZEOF( QUERY ( orf <* orientation_feature | ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SECONDARY_ORIENTATION_FEATURE'  IN TYPEOF( 
                orf ) ) ) ) = 1 ) ) );
      wr10: ( ( NOT three_orientation_features ) OR ( ( SIZEOF( QUERY ( orf <* orientation_feature | ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRIMARY_ORIENTATION_FEATURE'  IN TYPEOF( orf ) ) ) ) 
                = 1 ) AND ( SIZEOF( QUERY ( orf <* orientation_feature | ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SECONDARY_ORIENTATION_FEATURE'  IN TYPEOF( 
                orf ) ) ) ) = 1 ) AND ( SIZEOF( QUERY ( orf <* orientation_feature | ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TERTIARY_ORIENTATION_FEATURE'  IN TYPEOF( orf ) ) ) ) 
                = 1 ) ) );
  END_ENTITY;

  ENTITY package_body
    SUBTYPE OF ( part_feature );
      SELF\shape_element.containing_shape  : package;
    INVERSE
      body_material : material_identification FOR items;
    WHERE
      wr1: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PACKAGE_BODY_TOP_SURFACE' ) IN TYPEOF( 
               pf ) ) ) ) <= 1 );
      wr2: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PACKAGE_BODY_BOTTOM_SURFACE' ) IN 
               TYPEOF( pf ) ) ) ) <= 1 );
      wr3: ( SIZEOF( QUERY ( pf <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PACKAGE_BODY_SURFACE.ASSOCIATED_PACKAGE_BODY'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PACKAGE_BODY_EDGE_SURFACE' ) IN TYPEOF( 
               pf ) ) ) ) <= 1 );
      wr4: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( body_material ) );
  END_ENTITY;

  ENTITY package_body_bottom_surface
    SUBTYPE OF ( package_body_surface );
  END_ENTITY;

  ENTITY package_body_edge_segment_surface
    SUBTYPE OF ( package_body_surface );
      composed_surface  : package_body_edge_surface;
      start_vertex      : edge_segment_vertex;
      end_vertex        : edge_segment_vertex;
    WHERE
      wr1: ( start_vertex :<>: end_vertex );
  END_ENTITY;

  ENTITY package_body_edge_surface
    SUBTYPE OF ( package_body_surface );
  END_ENTITY;

  ENTITY package_body_surface
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            package_body_bottom_surface, 
            package_body_top_surface, 
            package_body_edge_segment_surface, 
            package_body_edge_surface ) )
    SUBTYPE OF ( part_feature );
      associated_package_body  : package_body;
  END_ENTITY;

  ENTITY package_body_top_surface
    SUBTYPE OF ( package_body_surface );
  END_ENTITY;

  ENTITY package_external_reference;
      design_owner           : STRING;
      part_number            : STRING;
      revision_code          : STRING;
      product_definition_id  : STRING;
  END_ENTITY;

  ENTITY package_footprint_relationship_definition
    SUBTYPE OF ( product_view_definition );
    DERIVE
      associated_model    : SET [1 : 1] OF geometric_model := fd_get_amodel( SELF );
      related_models      : SET [2 : 2] OF geometric_model := fd_get_rmodels( related_elements );
      related_transforms  : SET [2 : 2] OF geometric_model_relationship_with_transformation := fd_get_transforms( 
                              associated_model, related_models );
    INVERSE
      related_elements : SET [2 : 2] OF view_definition_relationship FOR related_view;
    WHERE
      wr1: ( SIZEOF( QUERY ( re <* related_elements | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PACKAGE'  IN TYPEOF( re\view_definition_relationship.relating_view ) ) ) ) = 1 );
      wr2: ( SIZEOF( QUERY ( re <* related_elements | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FOOTPRINT_DEFINITION'  IN TYPEOF( re\view_definition_relationship.relating_view ) ) ) ) = 1 );
      wr3: ( SIZEOF( related_models ) = 2 );
      wr4: ( SIZEOF( associated_model ) = 1 );
      wr5: ( SIZEOF( QUERY ( rm <* related_models | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( rm ) ) ) ) = 1 );
      wr6: ( SIZEOF( QUERY ( rm <* related_models | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FOOTPRINT_DEFINITION_SHAPE_MODEL'  IN TYPEOF( rm ) ) ) ) = 1 );
      wr7: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANAR_SHAPE_MODEL' IN TYPEOF( associated_model[
               1] ) );
      wr8: ( SIZEOF( related_transforms ) = 2 );
  END_ENTITY;

  ENTITY package_orientation_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            primary_orientation_feature, 
            secondary_orientation_feature, 
            tertiary_orientation_feature ) )
    SUBTYPE OF ( part_feature );
      associated_body_vertical_extent      : OPTIONAL SET [1 : 2] OF package_body_surface;
      SELF\shape_element.containing_shape  : package;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DATUM_FEATURE' IN TYPEOF( SELF ) );
  END_ENTITY;

  ENTITY package_terminal
    SUBTYPE OF ( part_feature, placed_feature );
      SELF\placed_feature.definition       : package_terminal_template_definition;
      SELF\shape_element.containing_shape  : package;
    INVERSE
      SELF\part_feature.feature_shape : SET [1 : ?] OF usage_concept_usage_relationship FOR associated_usage;
    WHERE
      wr1: ( SIZEOF( SELF\definitional_shape_element.surface_conditions ) = 0 );
  END_ENTITY;

  ENTITY package_terminal_external_reference;
      name                   : STRING;
      associated_definition  : package_external_reference;
    UNIQUE
      ur1 : associated_definition, name;
  END_ENTITY;

  ENTITY package_terminal_surface_constituent_relationship
    SUBTYPE OF ( shape_element_relationship );
      SELF\shape_element_relationship.relating : package_body_surface;
      SELF\shape_element_relationship.related : package_terminal;
  END_ENTITY;

  ENTITY package_terminal_template_definition
    SUBTYPE OF ( part_feature_template_definition );
      SELF\feature_definition_with_connection_area.connection_area : OPTIONAL SET [1 : ?] OF
                                                 connection_zone_in_part_feature_template_definition;
      internal_connection_zone               : OPTIONAL SET [1 : ?] OF connection_zone_in_part_feature_template_definition;
      lead_form                              : OPTIONAL predefined_lead_form;
      seating_plane_intersection             : OPTIONAL seating_plane_intersection_type;
      terminal_characteristic                : OPTIONAL SET [1 : ?] OF characteristic;
      terminal_diametrical_extent            : OPTIONAL length_tolerance_characteristic;
      seating_plane_zone                     : OPTIONAL connection_zone_package_interface_plane_relationship;
    DERIVE
      mates_with_substrate       : BOOLEAN := EXISTS( seating_plane_zone );
      terminal_core_material     : SET [0 : 1] OF material_identification := bag_to_set( QUERY ( temp <* USEDIN( SELF, 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MATERIAL_IDENTIFICATION.'
                                     + 'ITEMS'  ) | ( SIZEOF( QUERY ( cla <* USEDIN( temp, 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
                                     'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) | ( cla.role = 'terminal core material' ) ) ) = 1 ) ) );
      terminal_surface_material  : SET [0 : 1] OF material_identification := bag_to_set( QUERY ( temp <* USEDIN( SELF, 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MATERIAL_IDENTIFICATION.'
                                     + 'ITEMS'  ) | ( SIZEOF( QUERY ( cla <* USEDIN( temp, 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
                                     'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) | ( cla.role = 'terminal surface material' ) ) ) =
                                     1 ) ) );
      external_connection_zone   : SET [1 : ?] OF connection_zone_in_part_feature_template_definition := SELF\
                                     feature_definition_with_connection_area.connection_area;
    INVERSE
      external_lead_form : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( ( NOT EXISTS( seating_plane_zone ) ) OR ( SIZEOF( QUERY ( cz <* external_connection_zone | ( seating_plane_zone.
               derived_zone = cz ) ) ) = 1 ) );
      wr2: ( ( NOT EXISTS( seating_plane_zone ) ) OR ( seating_plane_intersection = surface_intersection ) OR ( 
               seating_plane_intersection = through_intersection ) );
      wr3: ( NOT ( ( seating_plane_intersection = does_not_intersect ) AND EXISTS( seating_plane_zone ) ) );
      wr4: ( ( NOT ( SIZEOF( terminal_core_material ) = 1 ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  IN TYPEOF( terminal_core_material[1] ) ) );
      wr5: ( ( SIZEOF( terminal_surface_material ) = 1 ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  IN TYPEOF( terminal_surface_material[1] ) ) );
      wr6: ( EXISTS( lead_form ) XOR ( SIZEOF( external_lead_form ) = 1 ) );
  END_ENTITY;

  ENTITY packaged_component
    SUBTYPE OF ( physical_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : packaged_part;
      selected_package_alternate             : OPTIONAL altered_package;
    INVERSE
      access_mechanism : SET [0 : ?] OF packaged_component_join_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY packaged_component_join_terminal
    SUBTYPE OF ( physical_component_terminal );
      SELF\component_feature.definition    : packaged_part_join_terminal;
      SELF\shape_element.containing_shape  : packaged_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY packaged_connector
    SUBTYPE OF ( packaged_part );
    INVERSE
      characterized_connector_terminal_relationship : SET [1 : ?] OF packaged_connector_terminal_relationship FOR connector;
  END_ENTITY;

  ENTITY packaged_connector_component
    SUBTYPE OF ( interface_component, packaged_component );
      SELF\definition_based_product_occurrence.derived_from : packaged_connector;
    INVERSE
      interface_access_mechanism : SET [1 : ?] OF packaged_connector_component_interface_terminal FOR containing_shape;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY packaged_connector_component_interface_terminal
    SUBTYPE OF ( physical_component_interface_terminal );
      SELF\component_feature.definition    : packaged_part_interface_terminal;
      SELF\shape_element.containing_shape  : packaged_connector_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY packaged_connector_terminal_relationship;
      connector           : packaged_connector;
      join_terminal       : packaged_part_join_terminal;
      interface_terminal  : packaged_part_interface_terminal;
    UNIQUE
      ur1 : join_terminal;
      ur2 : interface_terminal, connector;
  END_ENTITY;

  ENTITY packaged_part
    SUPERTYPE OF ( 
        ONEOF ( 
            minimally_defined_connector, 
            packaged_connector ) 
        ANDOR
        altered_packaged_part )
    SUBTYPE OF ( part_usage_view );
      used_package          : SET [1 : ?] OF package_or_package_external_reference;
      implemented_function  : OPTIONAL functional_unit_usage_view;
    DERIVE
      potting_compound  : SET [0 : 1] OF material_identification := bag_to_set( QUERY ( temp <* USEDIN( SELF, 
                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MATERIAL_IDENTIFICATION.ITEMS'  )
                            | ( SIZEOF( QUERY ( cla <* USEDIN( temp, 
                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'CLASSIFICATION_ASSIGNMENT.' 
                            + 'ITEMS' ) | ( cla.role = 'potting compound' ) ) ) = 1 ) ) );
      base_package      : SET [1 : ?] OF package := QUERY ( up <* used_package | ( SIZEOF( [
                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ALTERED_PACKAGE' , 
                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE_EXTERNAL_REFERENCE' ] * 
                            TYPEOF( up ) ) = 0 ) );
    INVERSE
      access_mechanisms : SET [0 : ?] OF packaged_part_terminal FOR containing_shape;
    WHERE
      wr1: ( NOT ( EXISTS( implemented_function ) XOR ( SIZEOF( access_mechanisms ) > 0 ) ) );
      wr2: ( SIZEOF( base_package ) = 1 );
      wr3: single_package_product( base_package, used_package );
  END_ENTITY;

  ENTITY packaged_part_interface_terminal
    SUBTYPE OF ( packaged_part_terminal );
    INVERSE
      external_connector_function : SET [0 : ?] OF packaged_connector_terminal_relationship FOR interface_terminal;
  END_ENTITY;

  ENTITY packaged_part_join_terminal
    SUBTYPE OF ( packaged_part_terminal );
  END_ENTITY;

  ENTITY packaged_part_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            packaged_part_interface_terminal, 
            packaged_part_join_terminal ) )
    SUBTYPE OF ( part_terminal );
      terminal_of_package                  : SET [1 : ?] OF package_terminal;
      SELF\shape_element.containing_shape  : packaged_part;
    WHERE
      wr1: disjoint_package_terminals( terminal_of_package );
      wr2: ( NOT EXISTS( SELF\part_feature.precedent_feature ) );
  END_ENTITY;

  ENTITY padstack_definition
    SUPERTYPE OF ( 
        passage_padstack_definition )
    SUBTYPE OF ( multi_stratum_structured_template );
    WHERE
      wr1: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PASSAGE_PADSTACK_DEFINITION' IN TYPEOF( 
               SELF ) ) ) XOR ( SIZEOF( QUERY ( tlict <* SELF\structured_template.templates | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION'  IN 
               TYPEOF( tlict ) ) ) ) > 0 ) );
      wr2: ( SIZEOF( QUERY ( tlict <* SELF\structured_template.templates | ( ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTER_STRATUM_FEATURE_TEMPLATE_LOCATION'  IN 
               TYPEOF( tlict ) ) ) AND ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_SPECIFIC_TEMPLATE_LOCATION'  IN TYPEOF( tlict ) ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY padstack_occurrence
    SUBTYPE OF ( structured_layout_component );
      SELF\definition_based_product_occurrence.derived_from : padstack_definition;
    INVERSE
      SELF\assembly_group_component.components : SET [1 : ?] OF structured_layout_component_sub_assembly_relationship FOR 
                      relating_view;
    WHERE
      wr1: ( SIZEOF( QUERY ( sar <* components | EXISTS( sar.second_location ) ) ) = 0 );
  END_ENTITY;

  ENTITY pair_representation_relationship
    SUBTYPE OF ( detailed_geometric_model_element, geometric_model_relationship );
      SELF\representation_relationship.rep_1 : kinematic_link_representation;
      SELF\representation_relationship.rep_2 : kinematic_link_representation;
      transformation_operator                : kinematic_pair;
    WHERE
      wr1: ( transformation_operator.transform_item_1 IN rep_1.items );
      wr2: ( transformation_operator.transform_item_2 IN rep_2.items );
      wr3: ( rep_1\kinematic_link_representation.represented_link = transformation_operator\kinematic_pair.joint.edge_start );
      wr4: ( rep_2\kinematic_link_representation.represented_link = transformation_operator\kinematic_pair.joint.edge_end );
  END_ENTITY;

  ENTITY pair_value
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            sliding_surface_pair_value, 
            rolling_surface_pair_value, 
            revolute_pair_value, 
            prismatic_pair_value, 
            screw_pair_value, 
            cylindrical_pair_value, 
            spherical_pair_value, 
            sliding_curve_pair_value, 
            rolling_curve_pair_value, 
            gear_pair_value, 
            rack_and_pinion_pair_value, 
            universal_pair_value, 
            planar_pair_value, 
            unconstrained_pair_value, 
            point_on_surface_pair_value, 
            point_on_planar_curve_pair_value ) )
    SUBTYPE OF ( detailed_geometric_model_element );
      applies_to_pair  : kinematic_pair;
  END_ENTITY;

  ENTITY panel_hole_with_barring
    SUBTYPE OF ( hole_feature_in_panel );
      angle_defined_by  : directed_angle;
      barring_profile   : closed_profile_usage;
      base_radius       : OPTIONAL length_data_element;
  END_ENTITY;

  ENTITY parabola
    SUBTYPE OF ( conic );
      focal_distance  : length_measure;
    WHERE
      wr1: ( focal_distance <> 0 );
  END_ENTITY;

  ENTITY parallel_assembly_constraint
    SUBTYPE OF ( binary_assembly_constraint, parallel_constraint );
  END_ENTITY;

  ENTITY parallel_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF linear_geometry_element;
      SELF\explicit_constraint.reference_elements : SET [0 : 1] OF linear_geometry_element;
  END_ENTITY;

  ENTITY parallel_offset
    SUBTYPE OF ( derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [1 : 1] OF shape_element;
  END_ENTITY;

  ENTITY parallel_offset_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF curve_or_surface;
      SELF\explicit_constraint.reference_elements : SET [0 : 1] OF curve_or_surface;
      offset_type                            : parallel_offset_type;
    WHERE
      wr1: ( NOT ( ( ( offset_type = curve_2d_offset ) OR ( offset_type = curve_3d_offset ) ) AND ( SIZEOF( QUERY ( q <* ( SELF\
               explicit_constraint.constrained_elements + SELF\explicit_constraint.reference_elements ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE'  IN TYPEOF( q ) ) ) ) > 0 ) ) );
      wr2: ( NOT ( ( offset_type = surface_offset ) AND ( SIZEOF( QUERY ( q <* ( SELF\explicit_constraint.constrained_elements + 
               SELF\explicit_constraint.reference_elements ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE'  IN TYPEOF( q ) ) ) ) > 0 ) ) );
  END_ENTITY;

  ENTITY parallelism_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : datum_system;
    INVERSE
      directed_or_oriented_tolerance_zone : SET [0 : 1] OF directed_or_oriented_tolerance_zone FOR zone_for;
  END_ENTITY;

  ENTITY parameter_assignment
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : parameter_assignment_select;
  END_ENTITY;

  ENTITY parameter_assignment_override;
      overridden_parameter_assignment  : parameter_assignment;
      overriding_parameter_assignment  : parameter_assignment;
  END_ENTITY;

  ENTITY parameter_line_appearance
    SUBTYPE OF ( surface_related_curve_appearance );
      number_of_u_curves  : INTEGER;
      number_of_v_curves  : INTEGER;
  END_ENTITY;

  ENTITY parametric_representation_context
    SUBTYPE OF ( representation_context );
  END_ENTITY;

  ENTITY parametric_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            fill_area_template, 
            teardrop_template, 
            trace_template ) )
    SUBTYPE OF ( template_definition );
  END_ENTITY;

  ENTITY part
    SUBTYPE OF ( product );
  END_ENTITY;

  ENTITY part_array_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            part_linear_array_feature, 
            part_rectangular_array_feature ) )
    SUBTYPE OF ( part_group_feature );
  END_ENTITY;

  ENTITY part_connected_terminals_definition;
      name                   : STRING;
      associated_definition  : part_usage_view;
      connected_terminals    : SET [2 : ?] OF part_terminal;
    INVERSE
      domain : SET [0 : 1] OF part_connected_terminals_definition_domain FOR associated_definition;
    UNIQUE
      ur1 : name, associated_definition;
    WHERE
      wr1: ( SIZEOF( QUERY ( ct <* connected_terminals | ( NOT ( associated_definition = ct\shape_element.containing_shape ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY part_connected_terminals_definition_domain;
      domain_type            : fatp_part_connected_terminals_definition_domain_enumeration;
      associated_definition  : part_connected_terminals_definition;
  END_ENTITY;

  ENTITY part_connected_terminals_element;
      name                  : STRING;
      start_terminus        : fatp_termination_or_junction;
      end_terminus          : fatp_termination_or_junction;
      connectivity_context  : part_connected_terminals_definition;
    UNIQUE
      ur1 : name, connectivity_context;
    WHERE
      wr1: ( start_terminus <> end_terminus );
  END_ENTITY;

  ENTITY part_connected_terminals_layout_topology_requirement_assignment
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_requirement : physical_connectivity_layout_topology_requirement;
      SELF\requirement_assignment.assigned_to : part_connected_terminals_definition;
  END_ENTITY;

  ENTITY part_connected_terminals_structure_definition
    SUBTYPE OF ( part_connected_terminals_definition );
    DERIVE
      structural_terminal_nodes  : SET OF part_terminal := fatp_get_pt( structural_element );
      structural_junction_nodes  : SET OF part_connected_terminals_topological_junction := fatp_get_tj( structural_element );
      tree_structure             : LOGICAL := ( SIZEOF( structural_terminal_nodes ) + SIZEOF( structural_junction_nodes ) ) = ( 
                                     SIZEOF( structural_element ) + 1 );
    INVERSE
      structural_element : SET [1 : ?] OF part_connected_terminals_element FOR connectivity_context;
    WHERE
      wr1: ( SIZEOF( QUERY ( stn <* structural_terminal_nodes | ( NOT ( stn IN SELF\part_connected_terminals_definition.
               connected_terminals ) ) ) ) = 0 );
      wr2: ( SIZEOF( structural_terminal_nodes ) = SIZEOF( SELF\part_connected_terminals_definition.connected_terminals ) );
  END_ENTITY;

  ENTITY part_connected_terminals_topological_junction;
      name   : STRING;
      scope  : part_connected_terminals_structure_definition;
    UNIQUE
      ur1 : name, scope;
  END_ENTITY;

  ENTITY part_definition_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : part_view_definition;
      SELF\view_definition_relationship.related_view : part_view_definition;
  END_ENTITY;

  ENTITY part_design_view
    SUPERTYPE OF ( 
        ONEOF ( 
            assembly_module_design_view, 
            interconnect_module_design_view ) )
    SUBTYPE OF ( part_shape, part_view_definition );
      usage_view  : OPTIONAL part_usage_view;
    DERIVE
      SELF\item_shape.described_element  : part_design_view := SELF;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAYOUT_MACRO_DEFINITION' IN TYPEOF( SELF ) ) 
               OR EXISTS( usage_view ) );
      wr2: ( SIZEOF( QUERY ( nauo <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'VIEW_DEFINITION_RELATIONSHIP.RELATING_VIEW'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE_RELATIONSHIP'  
               IN TYPEOF( nauo ) ) XOR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE' 
               IN TYPEOF( nauo ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY part_device;
      defined_packaged_part  : packaged_part;
      included_device        : bare_die;
      item_identification    : STRING;
    INVERSE
      device_3d_position : SET [0 : 1] OF device_3d_position FOR placed_device;
      device_2d_position : SET [0 : 1] OF device_2d_position FOR placed_device;
    UNIQUE
      ur1 : defined_packaged_part, item_identification;
  END_ENTITY;

  ENTITY part_device_terminal;
      used_bare_die_terminal  : minimally_defined_bare_die_terminal;
      terminated_device       : part_device;
    UNIQUE
      ur1 : used_bare_die_terminal, terminated_device;
  END_ENTITY;

  ENTITY part_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            package_body, 
            package_body_surface, 
            package_orientation_feature, 
            polarity_indication_feature, 
            visual_orientation_feature ) )
    SUBTYPE OF ( general_part_feature );
      SELF\shape_element.containing_shape  : part_usage_view;
      material_state_change                : OPTIONAL material_state_change_enumeration;
      precedent_feature                    : OPTIONAL part_feature;
    DERIVE
      associated_definition  : part_usage_view := SELF\shape_element.containing_shape;
    INVERSE
      feature_shape : SET [0 : ?] OF usage_concept_usage_relationship FOR associated_usage;
      subsequent_feature : SET [0 : 1] OF part_feature FOR precedent_feature;
    WHERE
      wr1: ( ( NOT EXISTS( precedent_feature ) ) OR ( NOT ( SIZEOF( subsequent_feature ) = 1 ) ) OR 
               acyclic_part_feature_precedence_relationship( SELF, [subsequent_feature[1]], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_FEATURE'  ) );
      wr2: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY part_feature_based_template_location
    SUBTYPE OF ( template_location_in_structured_template );
      reference_feature  : part_feature;
  END_ENTITY;

  ENTITY part_feature_make_from_relationship
    SUBTYPE OF ( shape_element_relationship );
      associated_make_from                   : view_definition_relationship;
      SELF\shape_element_relationship.relating : part_feature;
      SELF\shape_element_relationship.related : part_feature;
    DERIVE
      resultant_feature  : part_feature := SELF\shape_element_relationship.related;
      reusable_feature   : part_feature := SELF\shape_element_relationship.relating;
    WHERE
      wr1: ( reusable_feature :<>: resultant_feature );
      wr2: ( reusable_feature.associated_definition :<>: resultant_feature.associated_definition );
  END_ENTITY;

  ENTITY part_feature_placement_link;
      precedent_element   : part_feature;
      subsequent_element  : part_feature;
    INVERSE
      referenced_by : part_linear_array_feature FOR element;
    WHERE
      wr1: acyclic_part_feature_placement_link( SELF, [subsequent_element], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_FEATURE_PLACEMENT_LINK'  );
  END_ENTITY;

  ENTITY part_feature_template_definition
    SUBTYPE OF ( feature_definition_with_connection_area );
      id  : STRING;
    DERIVE
      surface_conditions  : SET OF surface_condition := bag_to_set( USEDIN( SELF\shape_feature_definition.of_shape, 
                              'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE_CONDITION.'
                              + 'DESCRIBED_ELEMENT'  ) );
    UNIQUE
      ur1 : id;
  END_ENTITY;

  ENTITY part_feature_template_shape_model
    SUBTYPE OF ( geometric_model );
    WHERE
      wr1: ( ( NOT ( SIZEOF( USEDIN( SELF, '' ) ) > 1 ) ) OR ( SIZEOF( QUERY ( foo <* USEDIN( SELF, '' ) | ( NOT ( SIZEOF( [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.USAGE_CONCEPT_USAGE_RELATIONSHIP' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION' ] * TYPEOF( foo ) ) 
               = 1 ) ) ) ) = 0 ) );
      wr2: ( NOT EXISTS( SELF\representation.description ) );
      wr3: ( ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) ) = 0 ) OR ( SIZEOF( QUERY ( sda <* USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PROPERTY_DEFINITION_REPRESENTATION.'
               + 'USED_REPRESENTATION'  ) | ( NOT ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'ITEM_SHAPE'  ) IN TYPEOF( sda.definition ) ) AND ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PART_FEATURE_TEMPLATE_DEFINITION' ) IN 
               TYPEOF( sda.definition.described_element ) ) ) ) ) ) = 0 ) );
  END_ENTITY;

  ENTITY part_function_association
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : functional_element_definition;
      SELF\view_definition_relationship.related_view : part_view_definition;
  END_ENTITY;

  ENTITY part_group_feature
    SUPERTYPE OF ( 
        part_array_feature )
    SUBTYPE OF ( part_feature, composite_shape_element );
  END_ENTITY;

  ENTITY part_interface_access_feature
    SUBTYPE OF ( part_feature );
      accessed_interface                     : part_feature;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_usage_view;
    WHERE
      wr1: ( SELF\part_feature.material_state_change = material_removal );
      wr2: ( SELF <> accessed_interface );
      wr3: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TERMINAL' IN TYPEOF( SELF ) ) );
      wr4: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE_BODY' IN TYPEOF( SELF ) ) );
      wr5: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_MOUNTING_FEATURE' IN TYPEOF( SELF ) ) );
      wr6: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_SURFACE_FEATURE' IN 
               TYPEOF( SELF ) ) );
      wr7: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE_TERMINAL' IN TYPEOF( SELF ) ) );
      wr8: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE_BODY_SURFACE' IN TYPEOF( SELF ) ) );
      wr9: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POLARITY_INDICATION_FEATURE' IN TYPEOF( 
               SELF ) ) );
  END_ENTITY;

  ENTITY part_laminate_table
    SUPERTYPE OF ( 
        ONEOF ( 
            composite_assembly_table, 
            ply_laminate_table ) )
    SUBTYPE OF ( laminate_table );
  END_ENTITY;

  ENTITY part_linear_array_feature
    SUBTYPE OF ( part_array_feature );
      element                                : SET [1 : ?] OF part_feature_placement_link;
      initial_node_positive_x_displacement   : length_data_element;
      terminus_node_positive_x_displacement  : length_data_element;
      location_uncertainty                   : length_data_element;
    WHERE
      wr1: ( ( 1 + SIZEOF( element ) ) = pfg_get_sz_pf( element ) );
  END_ENTITY;

  ENTITY part_linear_array_feature_link;
      precedent_element   : part_linear_array_feature;
      subsequent_element  : part_linear_array_feature;
    INVERSE
      referenced_by : part_rectangular_array_feature FOR element;
    WHERE
      wr1: acyclic_part_linear_array_feature_link( SELF, [subsequent_element], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_LINEAR_ARRAY_FEATURE_LINK'  );
  END_ENTITY;

  ENTITY part_mating_feature
    SUBTYPE OF ( part_feature );
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_usage_view;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_MOUNTING_FEATURE' IN TYPEOF( SELF ) ) );
      wr2: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_SURFACE_FEATURE' IN 
               TYPEOF( SELF ) ) );
      wr3: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE_TERMINAL' IN TYPEOF( SELF ) ) );
      wr4: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TERMINAL' IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY part_mounting_feature
    SUBTYPE OF ( part_feature );
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_usage_view;
  END_ENTITY;

  ENTITY part_occurrence_placement
    SUBTYPE OF ( occurrence_placement );
      placed_part_occurrence  : single_instance;
  END_ENTITY;

  ENTITY part_occurrence_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : product_occurrence;
      SELF\view_definition_relationship.related_view : product_occurrence;
  END_ENTITY;

  ENTITY part_occurrence_shape
    SUBTYPE OF ( item_shape );
      SELF\item_shape.described_element  : definition_based_product_occurrence;
  END_ENTITY;

  ENTITY part_rectangular_array_feature
    SUBTYPE OF ( part_array_feature );
      element                               : SET [1 : ?] OF part_linear_array_feature_link;
      initial_row_positive_y_displacement   : length_data_element;
      terminus_row_positive_y_displacement  : length_data_element;
      location_uncertainty                  : length_data_element;
    WHERE
      wr1: ( ( 1 + SIZEOF( element ) ) = pfg_get_sz_plar( element ) );
  END_ENTITY;

  ENTITY part_shape
    SUBTYPE OF ( item_shape );
      SELF\item_shape.described_element  : part_view_definition;
  END_ENTITY;

  ENTITY part_shape_element
    SUBTYPE OF ( shape_element );
      SELF\shape_element.containing_shape  : part_shape;
  END_ENTITY;

  ENTITY part_string_template
    SUBTYPE OF ( template_definition );
      string_alignment  : text_alignment;
  END_ENTITY;

  ENTITY part_template_3d_keepout_shape_model
    SUBTYPE OF ( non_feature_shape_model, part_template_keepout_shape_model );
    DERIVE
      application_technology_constraint  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 
                                             'application technology constraint'  );
    WHERE
      wr1: ( SIZEOF( application_technology_constraint ) <= 1 );
      wr2: ( NOT EXISTS( SELF\representation.name ) );
      wr3: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY part_template_3d_shape_model
    SUBTYPE OF ( part_template_shape_model );
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.name ) );
      wr2: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY part_template_keepout_shape_allocation_to_stratum_stack;
      keepout_shape    : part_template_keepout_shape_model;
      kept_out_layers  : SET [1 : ?] OF stratum_technology_occurrence;
    DERIVE
      swappable    : LOGICAL := keepout_shape.shape_characterized_definition\multi_stratum_structured_template.location = 
                       template_arrangement.swappable;
      stack_model  : library_stack_model := keepout_shape.shape_characterized_definition\stratum_stack_dependent_template.stack;
    UNIQUE
      ur1 : keepout_shape, stack_model;
    WHERE
      wr1: ( keepout_shape.constrained_design_object_category IN [keepout_product_design_object_category.interconnect_module_via, 
               keepout_product_design_object_category.interconnect_module_inter_stratum_feature, 
               keepout_product_design_object_category.interconnect_module_cutout, keepout_product_design_object_category.
               interconnect_module_fill_area, keepout_product_design_object_category.interconnect_module_stratum_feature] );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_STACK_DEPENDENT_TEMPLATE' IN TYPEOF( 
               keepout_shape.shape_characterized_definition ) );
      wr3: ( kept_out_layers = ( kept_out_layers * stack_model\stratum_stack_model.composing_occurrence ) );
  END_ENTITY;

  ENTITY part_template_keepout_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( geometric_model );
      constrained_design_object_category  : keepout_product_design_object_category;
      shape_characterized_definition      : geometric_template;
      shape_material_condition            : material_condition;
      centroid_location                   : OPTIONAL cartesian_point;
      shape_environment                   : application_environment;
      shape_purpose                       : OPTIONAL predefined_keepout_purpose;
    DERIVE
      principal_part_shape  : SET [0 : 1] OF geometric_model_relationship := bag_to_set( QUERY ( gmr <* USEDIN( SELF, 
                                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_MODEL_RELATIONSHIP.'
                                + 'REP_2'  ) | ( gmr\representation_relationship.relation_type = 'principal part shape' ) ) );
    INVERSE
      external_shape_purpose : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( EXISTS( shape_purpose ) XOR ( SIZEOF( external_shape_purpose ) = 1 ) );
      wr2: ( SIZEOF( QUERY ( x <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION'  IN TYPEOF( x ) ) ) ) 
               = 0 );
      wr3: ( SIZEOF( principal_part_shape ) < 2 );
  END_ENTITY;

  ENTITY part_template_non_planar_2d_shape_model
    SUBTYPE OF ( manifold_surface_shape_representation, part_template_shape_model );
      transformation  : axis_placement_3d;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.name ) );
      wr2: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY part_template_planar_keepout_shape_model
    SUBTYPE OF ( planar_shape_model, non_feature_shape_model, part_template_keepout_shape_model );
      SELF\non_feature_shape_model.model_shape : part_template_planar_shape_model;
    DERIVE
      application_technology_constraint  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 
                                             'application technology constraint'  );
    WHERE
      wr1: ( SIZEOF( application_technology_constraint ) <= 1 );
      wr2: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY part_template_planar_shape_model
    SUBTYPE OF ( planar_projected_shape_model, part_template_shape_model );
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY part_template_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( geometric_model );
      shape_characterized_definition  : SET [1 : ?] OF geometric_template;
      shape_environment               : OPTIONAL application_environment;
      shape_material_condition        : material_condition;
    DERIVE
      principal_part_shape  : SET [0 : 1] OF geometric_model_relationship := bag_to_set( QUERY ( gmr <* USEDIN( SELF, 
                                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_MODEL_RELATIONSHIP.'
                                + 'REP_2'  ) | ( gmr\representation_relationship.relation_type = 'principal part shape' ) ) );
    WHERE
      wr1: ( SIZEOF( principal_part_shape ) < 2 );
      wr2: ( SIZEOF( QUERY ( x <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION'  IN TYPEOF( x ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY part_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            minimally_defined_bare_die_terminal, 
            assembly_module_terminal, 
            cable_terminal, 
            interconnect_module_terminal, 
            packaged_part_terminal ) 
        ANDOR
        ONEOF ( 
            minimally_defined_bare_die_terminal, 
            assembly_module_terminal, 
            cable_terminal, 
            packaged_part_terminal ) )
    SUBTYPE OF ( part_feature );
    DERIVE
      terminal_type  : STRING := SELF\shape_element.description;
    INVERSE
      connection_requirement  : SET [0 : 1] OF part_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal : SET [0 : 1] OF functional_usage_view_to_part_terminal_assignment FOR 
                                          physical_usage_view_terminal;
  END_ENTITY;

  ENTITY part_terminal_external_reference
    SUBTYPE OF ( general_part_feature );
    UNIQUE
      ur1 : SELF\shape_element.containing_shape, SELF\shape_element.element_name;
    WHERE
      wr1: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_VIEW_DEFINITION', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TEMPLATE_DEFINITION' ] * TYPEOF( SELF\
               shape_element.containing_shape\item_shape.described_element ) ) <> 0 );
  END_ENTITY;

  ENTITY part_text_template
    SUBTYPE OF ( template_definition );
      of_character  : character_glyph_symbol;
    WHERE
      wr1: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CSG_MODEL', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_CHARACTER_GLYPH_2D_SYMBOL' ] * TYPEOF( 
               of_character ) ) = 1 );
  END_ENTITY;

  ENTITY part_tooling_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            fiducial_part_feature, 
            tool_registration_mark ) 
        ANDOR
        test_point_part_feature )
    SUBTYPE OF ( part_feature );
  END_ENTITY;

  ENTITY part_usage_view
    SUPERTYPE OF ( 
        ONEOF ( 
            package, 
            bare_die, 
            cable_usage_view, 
            packaged_part, 
            assembly_module_usage_view, 
            interconnect_module_usage_view ) )
    SUBTYPE OF ( part_view_definition, part_shape );
    DERIVE
      SELF\item_shape.described_element  : part_usage_view := SELF;
  END_ENTITY;

  ENTITY part_version
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : part;
  END_ENTITY;

  ENTITY part_view_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            part_usage_view, 
            part_design_view, 
            stratum, 
            physical_unit_interconnect_definition ) 
        ANDOR
        ONEOF ( 
            part_usage_view, 
            part_design_view, 
            stratum ) 
        ANDOR
        ONEOF ( 
            part_usage_view, 
            part_design_view ) )
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : part_version;
      SELF\product_view_definition.initial_context : part_view_definition_context;
      SELF\product_view_definition.additional_contexts : SET [0 : ?] OF part_view_definition_context;
  END_ENTITY;

  ENTITY part_view_definition_context
    SUPERTYPE OF ( 
        ONEOF ( 
            gdt_representation_view_context, 
            kinematic_mechanism_context, 
            kinematic_state_context, 
            model_based_view_context, 
            model_based_3d_annotation_presentation_view_context, 
            motion_context, 
            surface_finish_view_context, 
            machining_feature_view_context, 
            material_specification_view_context, 
            process_state_view_context ) )
    SUBTYPE OF ( view_definition_context );
    WHERE
      wr1: ( SIZEOF( QUERY ( pvd <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT'  ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_VIEW_DEFINITION'  IN TYPEOF( pvd ) ) ) ) ) 
               = 0 );
      wr2: ( SIZEOF( QUERY ( pvd <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS'  ) | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_VIEW_DEFINITION'  IN TYPEOF( pvd ) ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY part_with_additional_categories
    SUBTYPE OF ( part );
      categories  : SET [1 : ?] OF part_category;
  END_ENTITY;

  ENTITY partial_area_definition;
      maximum_length    : OPTIONAL numerical_item_with_unit;
      effective_length  : numerical_item_with_unit;
      placement         : axis_placement;
  END_ENTITY;

  ENTITY partial_circular_path_feature_component
    SUBTYPE OF ( circular_path_feature_component );
      sweep_angle  : length_measure;
  END_ENTITY;

  ENTITY partial_circular_profile
    SUBTYPE OF ( open_profile );
      sweep_angle  : numerical_item_with_unit;
      radius       : numerical_item_with_unit;
  END_ENTITY;

  ENTITY partial_circular_shape_profile
    SUBTYPE OF ( shape_profile );
      open_boundary  : partial_circular_profile;
  END_ENTITY;

  ENTITY partial_document_assignment
    SUBTYPE OF ( document_assignment );
      document_portion  : STRING;
  END_ENTITY;

  ENTITY partial_document_with_structured_text_representation_assignment
    SUBTYPE OF ( partial_document_assignment );
      structured_portion  : string_representation_item_select;
    UNIQUE
      ur1 : SELF\partial_document_assignment.document_portion, SELF\document_assignment.assigned_document;
  END_ENTITY;

  ENTITY partially_plated_cutout
    SUBTYPE OF ( cutout );
    INVERSE
      plated_segment : SET [1 : ?] OF plated_cutout_edge_segment FOR composed_cutout;
      unplated_segment : SET [1 : ?] OF unplated_cutout_edge_segment FOR composed_cutout;
  END_ENTITY;

  ENTITY partially_plated_interconnect_module_edge
    SUBTYPE OF ( interconnect_module_edge );
    INVERSE
      plated_segment : SET [1 : ?] OF plated_interconnect_module_edge_segment FOR composed_edge;
      unplated_segment : SET [1 : ?] OF unplated_interconnect_module_edge_segment FOR composed_edge;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY partly_overlapping_curves
    SUBTYPE OF ( overlapping_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TRIMMED_CURVE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TRIMMED_CURVE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY partly_overlapping_edges
    SUBTYPE OF ( topology_related_to_overlapping_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE_CURVE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY partly_overlapping_faces
    SUBTYPE OF ( topology_related_to_overlapping_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FACE_SURFACE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FACE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'] );
  END_ENTITY;

  ENTITY partly_overlapping_solids
    SUBTYPE OF ( inapt_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MANIFOLD_SOLID_BREP'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FACE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'] );
  END_ENTITY;

  ENTITY partly_overlapping_surfaces
    SUBTYPE OF ( overlapping_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CURVE_BOUNDED_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CURVE_BOUNDED_SURFACE' ] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'] );
  END_ENTITY;

  ENTITY passage_deposition_material_identification
    SUBTYPE OF ( material_identification );
      SELF\material_identification.items  : SET [1 : ?] OF passage_technology;
  END_ENTITY;

  ENTITY passage_filling_material_identification
    SUBTYPE OF ( material_identification );
      SELF\material_identification.items  : SET [1 : ?] OF passage_technology;
  END_ENTITY;

  ENTITY passage_padstack_definition
    SUBTYPE OF ( padstack_definition );
    INVERSE
      reference_isft : inter_stratum_feature_template_location FOR assembly;
    WHERE
      wr1: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRUCTURED_INTER_STRATUM_FEATURE_TEMPLATE'  IN TYPEOF( reference_isft.template ) ) XOR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPLEX_PASSAGE_PADSTACK_DEFINITION'  IN 
               TYPEOF( SELF ) ) ) );
  END_ENTITY;

  ENTITY passage_technology
    SUPERTYPE OF ( 
        ONEOF ( 
            default_via_definition, 
            default_component_termination_passage_definition, 
            default_unsupported_passage_definition ) )
    SUBTYPE OF ( characterizable_object, item_shape );
      as_finished_deposition_thickness       : OPTIONAL length_tolerance_characteristic;
      as_finished_passage_extent             : OPTIONAL ft_value_select;
      maximum_aspect_ratio                   : OPTIONAL REAL;
      minimum_finished_size                  : OPTIONAL length_data_element;
      plated_passage                         : BOOLEAN;
      passage_terminus_condition             : OPTIONAL ft_terminus_condition;
      minimum_fabrication_allowance          : OPTIONAL length_data_element;
      minimum_finished_feature_size          : OPTIONAL length_data_element;
      supported_external_minimum_annular_ring : OPTIONAL length_data_element;
      supported_internal_minimum_annular_ring : OPTIONAL length_data_element;
      unsupported_minimum_annular_ring       : OPTIONAL length_data_element;
    DERIVE
      SELF\item_shape.described_element  : passage_technology := SELF;
      specification                      : SET [0 : 1] OF document_definition := get_document_definition( SELF, 'specification', 
                                             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                             + 'PROCESS_SPECIFICATION'  );
    INVERSE
      deposition_material : SET [0 : 1] OF passage_deposition_material_identification FOR items;
      fill_material : SET [0 : 1] OF passage_filling_material_identification FOR items;
    UNIQUE
      ur1 : SELF\characterizable_object.name;
    WHERE
      wr1: ( ( NOT ( SIZEOF( deposition_material ) = 1 ) ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( deposition_material[1] ) ) );
      wr2: ( ( NOT plated_passage ) OR ( SIZEOF( deposition_material ) = 1 ) );
      wr3: ( ( NOT EXISTS( as_finished_deposition_thickness ) ) OR ( SIZEOF( deposition_material ) = 1 ) );
      wr4: ( ( NOT plated_passage ) OR ( SIZEOF( [deposition_material[1]\material_identification_with_conductivity_classification
               .electrical_conductivity_classification, deposition_material[1]\
               material_identification_with_conductivity_classification.thermal_conductivity_classification] * [ 'conductive'] ) 
               >= 1 ) );
      wr5: ( ( NOT ( ( passage_terminus_condition = ft_terminus_condition.bilateral_bond ) OR ( passage_terminus_condition = 
               ft_terminus_condition.unilateral_bond ) ) ) OR plated_passage );
      wr6: ( NOT ( EXISTS( as_finished_passage_extent ) AND EXISTS( minimum_finished_feature_size ) ) );
      wr7: ( ( NOT EXISTS( supported_external_minimum_annular_ring ) ) OR plated_passage );
      wr8: ( ( NOT EXISTS( supported_internal_minimum_annular_ring ) ) OR plated_passage );
      wr9: ( ( NOT EXISTS( unsupported_minimum_annular_ring ) ) AND plated_passage );
  END_ENTITY;

  ENTITY passage_technology_allocation_to_stack_model
    SUBTYPE OF ( stratum_sub_stack );
      allocated_technology             : passage_technology;
      single_stratum_passage_location  : OPTIONAL stratum_technology_occurrence;
      target_stratum                   : OPTIONAL stratum_technology_occurrence;
    DERIVE
      terminus_stratum  : SET OF stratum_technology_occurrence := ft_get_terminus( SELF\stratum_sub_stack.
                            stratum_technology_sequence );
    INVERSE
      minimum_annular_ring : SET [0 : ?] OF allocated_passage_minimum_annular_ring FOR associated_passage_allocation;
    WHERE
      wr1: ( ( NOT EXISTS( single_stratum_passage_location ) ) OR ( single_stratum_passage_location IN SELF\stratum_sub_stack.
               associated_stackup.composing_occurrence ) );
      wr2: ( EXISTS( SELF\stratum_sub_stack.stratum_technology_sequence ) XOR EXISTS( single_stratum_passage_location ) );
      wr3: ( SIZEOF( get_stack( SELF\stratum_sub_stack.stratum_technology_sequence ) ) = ( SIZEOF( SELF\stratum_sub_stack.
               stratum_technology_sequence ) + 1 ) );
      wr4: sts_vertex_degree_check( SELF\stratum_sub_stack.stratum_technology_sequence, 2 );
      wr5: ( ( NOT EXISTS( single_stratum_passage_location ) ) OR ( NOT EXISTS( target_stratum ) ) );
      wr6: ( ( NOT EXISTS( target_stratum ) ) OR ( ( target_stratum IN SELF\stratum_sub_stack.associated_stackup.
               composing_occurrence ) AND ( target_stratum IN terminus_stratum ) ) );
      wr7: ( ft_count_unspecified_asto( minimum_annular_ring ) < 2 );
  END_ENTITY;

  ENTITY passage_terminal_based_fabrication_joint_link;
      associated_terminal  : fabricated_feature_select;
      precedent_point      : fabrication_joint;
      subsequent_point     : fabrication_joint;
    UNIQUE
      ur1 : associated_terminal, precedent_point, subsequent_point;
    WHERE
      wr1: ( precedent_point <> subsequent_point );
      wr2: ( precedent_point.fabrication_feature_2 = associated_terminal );
      wr3: ( subsequent_point.fabrication_feature_1 = associated_terminal );
      wr4: ( SIZEOF( TYPEOF( associated_terminal ) * [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'COMPONENT_TERMINATION_PASSAGE_JOIN_TERMINAL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'VIA_TERMINAL'] ) = 1 );
      wr5: acyclic_passage_terminal_based_fabrication_joint_link( SELF, [subsequent_point], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PASSAGE_TERMINAL_BASED_FABRICATION_JOINT_LINK'  );
  END_ENTITY;

  ENTITY path
    SUBTYPE OF ( detailed_topological_model_element );
      edge_list  : LIST [1 : ?] OF UNIQUE oriented_edge;
    WHERE
      wr1: path_aligned( SELF );
  END_ENTITY;

  ENTITY path_area_with_parameters
    SUBTYPE OF ( detailed_geometric_model_element );
      centreline  : curve;
      parameters  : curve_style_parameters;
  END_ENTITY;

  ENTITY path_element
    SUBTYPE OF ( definitional_shape_element );
  END_ENTITY;

  ENTITY path_feature_component
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            circular_path_feature_component, 
            general_path_feature_component, 
            linear_path_feature_component ) )
    SUBTYPE OF ( shape_element );
      placement  : axis_placement;
  END_ENTITY;

  ENTITY path_modified_solid
    SUBTYPE OF ( solid_with_edge_modification );
  END_ENTITY;

  ENTITY path_modified_solid_with_end_conditions
    SUBTYPE OF ( path_modified_solid );
      end_conditions  : LIST [2 : 2] OF blend_end_condition;
  END_ENTITY;

  ENTITY path_node
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            point_to_point_path, 
            circular_path, 
            linear_path, 
            curve_based_path ) )
    SUBTYPE OF ( kinematic_path_segment );
      placement_end  : axis_placement;
  END_ENTITY;

  ENTITY path_parameter_representation
    SUBTYPE OF ( definitional_representation );
      SELF\representation.context_of_items  : path_parameter_representation_context;
      SELF\representation.items             : SET [1 : ?] OF bounded_curve;
    WHERE
      wr1: ( SELF\representation.context_of_items\geometric_coordinate_space.dimension_count = 2 );
  END_ENTITY;

  ENTITY path_parameter_representation_context
    SUBTYPE OF ( geometric_coordinate_space, parametric_representation_context );
  END_ENTITY;

  ENTITY percentage_laminate_table
    SUBTYPE OF ( zone_structural_makeup );
      table_components  : SET [1 : ?] OF percentage_ply;
      total_thickness   : length_data_element;
  END_ENTITY;

  ENTITY percentage_ply;
      strength_orientation   : OPTIONAL ply_orientation_angle;
      material               : stock_material;
      makeup_and_properties  : OPTIONAL zone_structural_makeup;
      volume_percent         : ratio_data_element;
  END_ENTITY;

  ENTITY perpendicular_assembly_constraint
    SUBTYPE OF ( binary_assembly_constraint, perpendicular_geometric_constraint );
  END_ENTITY;

  ENTITY perpendicular_geometric_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF linear_geometry_element;
      SELF\explicit_constraint.reference_elements : SET [0 : 2] OF linear_geometry_element;
    WHERE
      wr1: ( NOT ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 2 ) AND ( NOT ( ( SIZEOF( QUERY ( q <* ( SELF\
               explicit_constraint.constrained_elements + SELF\explicit_constraint.reference_elements ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LINE'  IN TYPEOF( q ) ) ) ) = SIZEOF( SELF\
               explicit_constraint.reference_elements + SELF\explicit_constraint.constrained_elements ) ) XOR ( SIZEOF( 
               QUERY ( q <* ( SELF\explicit_constraint.constrained_elements + SELF\explicit_constraint.reference_elements ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE'  IN TYPEOF( q ) ) ) ) = SIZEOF( SELF\
               explicit_constraint.reference_elements + SELF\explicit_constraint.constrained_elements ) ) ) ) ) );
      wr2: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) > 0 ) OR ( SIZEOF( SELF\explicit_constraint.
               constrained_elements ) IN [2, 3] ) );
      wr3: ( ( NOT ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 0 ) AND ( SIZEOF( SELF\explicit_constraint.
               constrained_elements ) = 3 ) ) ) AND ( NOT ( ( SIZEOF( QUERY ( q <* SELF\explicit_constraint.constrained_elements
               | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LINE' IN TYPEOF( q ) ) ) ) = 3 ) XOR ( 
               SIZEOF( QUERY ( q <* SELF\explicit_constraint.constrained_elements | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE'  IN TYPEOF( q ) ) ) ) = 3 ) ) ) );
  END_ENTITY;

  ENTITY perpendicular_to
    SUBTYPE OF ( derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [1 : 1] OF shape_element;
  END_ENTITY;

  ENTITY perpendicularity_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : OPTIONAL datum_system;
    INVERSE
      directed_or_oriented_tolerance_zone : SET [0 : 1] OF directed_or_oriented_tolerance_zone FOR zone_for;
  END_ENTITY;

  ENTITY person;
      last_name      : STRING;
      first_name     : OPTIONAL STRING;
      middle_names   : OPTIONAL LIST [1 : ?] OF STRING;
      prefix_titles  : OPTIONAL LIST [1 : ?] OF STRING;
      suffix_titles  : OPTIONAL LIST [1 : ?] OF STRING;
  END_ENTITY;

  ENTITY person_in_organization;
      concerned_person         : person;
      containing_organization  : organization;
      role                     : STRING;
  END_ENTITY;

  ENTITY person_in_organization_relationship;
      description    : OPTIONAL STRING;
      relating       : person_in_organization;
      related        : person_in_organization;
      relation_type  : STRING;
  END_ENTITY;

  ENTITY physical_breakdown
    SUBTYPE OF ( breakdown );
  END_ENTITY;

  ENTITY physical_breakdown_context
    SUBTYPE OF ( breakdown_context );
      SELF\breakdown_context.breakdown       : physical_breakdown_version;
      SELF\breakdown_context.breakdown_element : physical_element_definition;
  END_ENTITY;

  ENTITY physical_breakdown_version
    SUBTYPE OF ( breakdown_version );
      SELF\breakdown_version.of_product  : physical_breakdown;
  END_ENTITY;

  ENTITY physical_component
    SUPERTYPE OF ( 
        ONEOF ( 
            assembly_module_component, 
            bare_die_component, 
            cable_component, 
            interconnect_module_component, 
            packaged_component, 
            routed_interconnect_component, 
            routed_physical_component ) 
        ANDOR
        ONEOF ( 
            bare_die_component, 
            packaged_component, 
            routed_interconnect_component, 
            routed_physical_component ) )
    SUBTYPE OF ( assembly_component );
  END_ENTITY;

  ENTITY physical_component_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            physical_component_terminal, 
            physical_component_interface_terminal ) )
    SUBTYPE OF ( component_feature );
  END_ENTITY;

  ENTITY physical_component_interface_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            packaged_connector_component_interface_terminal, 
            interconnect_component_interface_terminal ) )
    SUBTYPE OF ( physical_component_feature );
      SELF\shape_element.containing_shape  : interface_component;
  END_ENTITY;

  ENTITY physical_component_terminal
    SUPERTYPE OF ( 
        ONEOF ( 
            assembly_module_component_terminal, 
            bare_die_component_terminal, 
            interconnect_component_join_terminal, 
            interconnect_module_component_terminal, 
            minimally_defined_component_terminal, 
            packaged_component_join_terminal ) 
        ANDOR
        ONEOF ( 
            bare_die_component_terminal, 
            minimally_defined_component_terminal, 
            packaged_component_join_terminal ) )
    SUBTYPE OF ( component_terminal, physical_component_feature );
    DERIVE
      terminal_type  : STRING := SELF\shape_element.description;
  END_ENTITY;

  ENTITY physical_connectivity_abstraction_map;
      name_space_context_based_definition  : part_connected_terminals_element;
      geometric_context_based_definition   : map_link;
    UNIQUE
      ur1 : name_space_context_based_definition, geometric_context_based_definition;
  END_ENTITY;

  ENTITY physical_connectivity_definition
    SUPERTYPE OF ( 
        physical_connectivity_structure_definition )
    SUBTYPE OF ( shape_element );
      associated_terminals                 : SET [2 : ?] OF physical_component_terminal;
      SELF\shape_element.containing_shape  : physical_unit_network_definition;
    DERIVE
      associated_definition  : physical_unit_network_definition := SELF\shape_element.containing_shape;
    INVERSE
      domain : SET [0 : 1] OF physical_connectivity_definition_domain FOR associated_definition;
    UNIQUE
      ur1 : SELF\shape_element.element_name, associated_definition;
  END_ENTITY;

  ENTITY physical_connectivity_definition_domain;
      domain_type            : physical_connectivity_definition_domain_enumeration;
      associated_definition  : physical_connectivity_definition;
  END_ENTITY;

  ENTITY physical_connectivity_definition_external_reference;
      name                   : STRING;
      associated_definition  : STRING;
    UNIQUE
      ur1 : name, associated_definition;
  END_ENTITY;

  ENTITY physical_connectivity_definition_relationship;
      first_definition   : physical_connectivity_definition;
      second_definition  : physical_connectivity_definition;
      purpose            : STRING;
    INVERSE
      requirement : SET [1 : 1] OF requirement_assignment FOR assigned_to;
  END_ENTITY;

  ENTITY physical_connectivity_element;
      name                  : STRING;
      start_terminus        : termination_or_junction;
      end_terminus          : termination_or_junction;
      connectivity_context  : physical_connectivity_structure_definition;
    UNIQUE
      ur1 : name, connectivity_context;
    WHERE
      wr1: ( start_terminus <> end_terminus );
  END_ENTITY;

  ENTITY physical_connectivity_interrupting_cutout
    SUBTYPE OF ( cutout );
      interrupted_connectivity_element  : SET [1 : ?] OF conductive_interconnect_element;
  END_ENTITY;

  ENTITY physical_connectivity_layout_topology_link
    SUBTYPE OF ( group_relationship );
      SELF\group_relationship.related_group  : physical_connectivity_layout_topology_node;
      SELF\group_relationship.relating_group : physical_connectivity_layout_topology_node;
    DERIVE
      SELF\group_relationship.relation_type  : STRING := '';
      precedent_node                         : physical_connectivity_layout_topology_node := SELF\group_relationship.
                                                 relating_group;
      subsequent_node                        : physical_connectivity_layout_topology_node := SELF\group_relationship.
                                                 related_group;
    WHERE
      wr1: acyclic_physical_connectivity_layout_topology_link( SELF, [subsequent_node], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_CONNECTIVITY_LAYOUT_TOPOLOGY_LINK'  );
  END_ENTITY;

  ENTITY physical_connectivity_layout_topology_node
    SUBTYPE OF ( group );
    DERIVE
      terminal_type  : STRING := SELF\group.name;
    WHERE
      wr1: ( SIZEOF( SELF\group.elements ) = 0 );
  END_ENTITY;

  ENTITY physical_connectivity_layout_topology_requirement
    SUBTYPE OF ( predefined_requirement_view_definition, group );
      SELF\group.elements  : SET [1 : ?] OF physical_connectivity_layout_topology_link;
    DERIVE
      nodes           : SET [1 : ?] OF physical_connectivity_layout_topology_node := pcd_get_pcltn( elements );
      tree_structure  : LOGICAL := SIZEOF( nodes ) = ( SIZEOF( elements ) + 1 );
    WHERE
      wr1: ( tree_structure = TRUE );
  END_ENTITY;

  ENTITY physical_connectivity_layout_topology_requirement_assignment
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_requirement : physical_connectivity_layout_topology_requirement;
      SELF\requirement_assignment.assigned_to : physical_connectivity_definition;
  END_ENTITY;

  ENTITY physical_connectivity_make_from_relationship;
      reusable_definition   : physical_connectivity_definition;
      resultant_definition  : physical_connectivity_definition;
  END_ENTITY;

  ENTITY physical_connectivity_structure_definition
    SUBTYPE OF ( physical_connectivity_definition );
    DERIVE
      structural_terminal_nodes  : SET OF physical_component_terminal := get_pct( structural_element );
      structural_junction_nodes  : SET OF topological_junction := get_tj( structural_element );
      tree_structure             : LOGICAL := ( SIZEOF( structural_terminal_nodes ) + SIZEOF( structural_junction_nodes ) ) = ( 
                                     SIZEOF( structural_element ) + 1 );
    INVERSE
      structural_element : SET [1 : ?] OF physical_connectivity_element FOR connectivity_context;
    WHERE
      wr1: ( SIZEOF( QUERY ( stn <* structural_terminal_nodes | ( NOT ( stn IN SELF\physical_connectivity_definition.
               associated_terminals ) ) ) ) = 0 );
      wr2: ( SIZEOF( structural_terminal_nodes ) = SIZEOF( SELF\physical_connectivity_definition.associated_terminals ) );
  END_ENTITY;

  ENTITY physical_document_definition
    SUBTYPE OF ( document_definition );
      components  : SET [0 : ?] OF hardcopy;
  END_ENTITY;

  ENTITY physical_element
    SUBTYPE OF ( breakdown_element );
  END_ENTITY;

  ENTITY physical_element_definition
    SUBTYPE OF ( breakdown_element_definition );
      SELF\breakdown_element_definition.defined_version : physical_element_version;
  END_ENTITY;

  ENTITY physical_element_placement
    SUBTYPE OF ( occurrence_placement );
      placed_physical_element  : physical_element_definition;
    WHERE
      wr1: ( placed_physical_element\product_view_definition.defined_version :<>: SELF\occurrence_placement.
               reference_physical_element\product_view_definition.defined_version );
  END_ENTITY;

  ENTITY physical_element_usage
    SUBTYPE OF ( breakdown_element_usage );
      SELF\view_definition_relationship.relating_view : physical_element_definition;
      SELF\view_definition_relationship.related_view : physical_element_definition;
  END_ENTITY;

  ENTITY physical_element_version
    SUBTYPE OF ( breakdown_element_version );
      SELF\breakdown_element_version.of_product : physical_element;
  END_ENTITY;

  ENTITY physical_network_group
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_physical_network_group, 
            externally_defined_physical_network_group ) )
    SUBTYPE OF ( group );
      SELF\group.elements  : SET [1 : ?] OF generic_physical_network;
  END_ENTITY;

  ENTITY physical_network_group_element_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_physical_network_group_element_relationship, 
            externally_defined_physical_network_group_element_relationship ) )
    SUBTYPE OF ( group_relationship );
      SELF\group_relationship.relating_group : physical_network_group;
      SELF\group_relationship.related_group  : physical_network_group;
    WHERE
      wr1: acyclic_physical_network_group_element_relationship( SELF, [related_group], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_NETWORK_GROUP_ELEMENT_RELATIONSHIP'  );
  END_ENTITY;

  ENTITY physical_network_supporting_inter_stratum_feature
    SUBTYPE OF ( plated_inter_stratum_feature, inter_stratum_join_implementation );
  END_ENTITY;

  ENTITY physical_network_supporting_stratum_feature_conductive_join
    SUBTYPE OF ( stratum_feature_conductive_join, inter_stratum_join_implementation );
  END_ENTITY;

  ENTITY physical_node_branch_requirement_to_implementing_component_allocation;
      name                                : STRING;
      physical_node_branch_requirement    : physical_connectivity_element;
      implementation_component            : assembly_component;
      part_element                        : part_connected_terminals_element;
      implementation_interface_joint_set  : OPTIONAL SET [1 : ?] OF interface_mounted_join;
      implementation_joint_set            : OPTIONAL SET [1 : ?] OF assembly_joint;
    UNIQUE
      ur1 : name, implementation_component;
  END_ENTITY;

  ENTITY physical_node_requirement_to_implementing_component_allocation;
      physical_node_requirement           : physical_connectivity_definition;
      implementation_component            : assembly_component;
      implementation_interface_joint_set  : OPTIONAL SET [1 : ?] OF interface_mounted_join;
      implementation_joint_set            : OPTIONAL SET [1 : ?] OF assembly_joint;
    DERIVE
      implementation_connection_definition_1 : SET [0 : 1] OF part_connected_terminals_definition := get_pctd( 
                                                 implementation_component, implementation_joint_set );
      implementation_connection_definition_2 : SET [0 : 1] OF packaged_connector_terminal_relationship := get_pctr( 
                                                 implementation_component, implementation_interface_joint_set );
    WHERE
      wr1: ( EXISTS( implementation_interface_joint_set ) XOR EXISTS( implementation_joint_set ) );
      wr2: ( ( ( SIZEOF( implementation_connection_definition_1 ) + SIZEOF( implementation_connection_definition_2 ) ) = 1 ) OR 
               ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERFACE_COMPONENT' IN TYPEOF( 
               implementation_component ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PHYSICAL_COMPONENT_INTERFACE_TERMINAL'  IN TYPEOF( get_cit( implementation_component, implementation_joint_set ) ) ) ) 
               OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ROUTED_INTERCONNECT_COMPONENT' IN TYPEOF( 
               implementation_component ) ) );
      wr3: ( SIZEOF( QUERY ( pct <* physical_node_requirement.associated_terminals | ( pct\component_feature.associated_component 
               = implementation_component ) ) ) = 0 );
  END_ENTITY;

  ENTITY physical_particle
    SUBTYPE OF ( substance );
  END_ENTITY;

  ENTITY physical_shield
    SUBTYPE OF ( physical_component );
      shielded_item  : SET [1 : ?] OF physical_shieldable_item;
  END_ENTITY;

  ENTITY physical_unit_3d_keepout_shape_model
    SUBTYPE OF ( usage_view_level_non_feature_shape_model, physical_unit_keepout_shape_model );
      shape_classification                   : shape_class;
      SELF\usage_view_level_non_feature_shape_model.model_shape : physical_unit_3d_shape_model;
      component_application                  : pu3ds_component_application;
      shape_distance_from_seating_plane      : OPTIONAL length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane : OPTIONAL pu3ds_shape_location;
      side                                   : OPTIONAL pu3ds_shape_side;
    DERIVE
      application_technology_constraint  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 
                                             'application technology constraint'  );
    WHERE
      wr1: ( SIZEOF( application_technology_constraint ) <= 1 );
      wr2: ( NOT EXISTS( SELF\representation.name ) );
      wr3: ( NOT EXISTS( SELF\representation.description ) );
      wr4: ( NOT ( EXISTS( shape_distance_from_seating_plane ) XOR EXISTS( shape_location_with_respect_to_seating_plane ) ) );
      wr5: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE' IN TYPEOF( model_shape.
               shape_characterized_definition ) ) ) OR EXISTS( shape_distance_from_seating_plane ) );
      wr6: ( ( NOT EXISTS( side ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE' IN TYPEOF( 
               model_shape.shape_characterized_definition ) ) );
  END_ENTITY;

  ENTITY physical_unit_3d_shape_model
    SUBTYPE OF ( physical_unit_shape_model );
      shape_purpose         : OPTIONAL predefined_3d_purpose;
      shape_classification  : shape_class;
    DERIVE
      application_technology_constraint  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 
                                             'application technology constraint'  );
    INVERSE
      external_shape_purpose : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( EXISTS( shape_purpose ) XOR ( SIZEOF( external_shape_purpose ) = 1 ) );
      wr2: ( SIZEOF( application_technology_constraint ) <= 1 );
      wr3: ( NOT EXISTS( SELF\representation.name ) );
      wr4: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY physical_unit_interconnect_definition
    SUBTYPE OF ( part_view_definition );
    WHERE
      wr1: ( SIZEOF( QUERY ( nauo <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.RELATING_VIEW'  ) | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE_RELATIONSHIP'  
               IN TYPEOF( nauo ) ) XOR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NEXT_ASSEMBLY_USAGE' 
               IN TYPEOF( nauo ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY physical_unit_keepout_shape_allocation_to_stratum_stack;
      keepout_shape    : physical_unit_keepout_shape_model;
      stack_model      : library_stack_model;
      swappable        : BOOLEAN;
      kept_out_layers  : SET [1 : ?] OF stratum_technology_occurrence;
    UNIQUE
      ur1 : keepout_shape, stack_model;
    WHERE
      wr1: ( keepout_shape\physical_unit_keepout_shape_model.constrained_design_object_category IN [
               keepout_product_design_object_category.interconnect_module_via, keepout_product_design_object_category.
               interconnect_module_inter_stratum_feature, keepout_product_design_object_category.interconnect_module_cutout, 
               keepout_product_design_object_category.interconnect_module_fill_area, keepout_product_design_object_category.
               interconnect_module_stratum_feature] );
  END_ENTITY;

  ENTITY physical_unit_keepout_shape_allocation_to_stratum_technology;
      keepout_shape          : physical_unit_keepout_shape_model;
      kept_out_technologies  : SET [1 : ?] OF stratum_technology;
    WHERE
      wr1: ( keepout_shape\physical_unit_keepout_shape_model.constrained_design_object_category IN [
               keepout_product_design_object_category.interconnect_module_via, keepout_product_design_object_category.
               interconnect_module_inter_stratum_feature, keepout_product_design_object_category.interconnect_module_cutout, 
               keepout_product_design_object_category.interconnect_module_fill_area, keepout_product_design_object_category.
               interconnect_module_stratum_feature] );
  END_ENTITY;

  ENTITY physical_unit_keepout_shape_model
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            physical_unit_3d_keepout_shape_model, 
            physical_unit_planar_keepout_shape_model ) )
    SUBTYPE OF ( geometric_model );
      constrained_design_object_category  : keepout_product_design_object_category;
      shape_characterized_definition      : part_usage_view;
      shape_material_condition            : material_condition;
      shape_purpose                       : OPTIONAL predefined_keepout_purpose;
      shape_environment                   : application_environment;
      shape_extent                        : shape_extent;
      shape_approximation_level           : shape_approximation_level;
      centroid_location                   : OPTIONAL cartesian_point;
    DERIVE
      principal_part_shape  : SET [0 : 1] OF geometric_model_relationship := bag_to_set( QUERY ( gmr <* USEDIN( SELF, 
                                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_MODEL_RELATIONSHIP.'
                                + 'REP_2'  ) | ( gmr\representation_relationship.relation_type = 'principal part shape' ) ) );
    INVERSE
      external_shape_purpose : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( EXISTS( shape_purpose ) XOR ( SIZEOF( external_shape_purpose ) = 1 ) );
      wr2: ( SIZEOF( principal_part_shape ) < 2 );
  END_ENTITY;

  ENTITY physical_unit_network_definition
    SUBTYPE OF ( part_design_view );
    DERIVE
      terminals  : SET [0 : ?] OF component_terminal := get_terminals( bag_to_set( USEDIN( SELF, 
                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_CONNECTIVITY_DEFINITION.'
                     + 'ASSOCIATED_DEFINITION'  ) ) );
      assembly   : SET [0 : ?] OF product_view_definition := pcd_get_assemblies( terminals );
    WHERE
      wr1: ( ( NOT ( SIZEOF( terminals ) > 1 ) ) OR ( SIZEOF( QUERY ( t <* terminals | ( NOT ( SIZEOF( USEDIN( t, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PHYSICAL_CONNECTIVITY_DEFINITION.'
               + 'ASSOCIATED_TERMINALS'  ) ) = 1 ) ) ) ) = 0 ) );
      wr2: ( SIZEOF( QUERY ( ass <* assembly | ( ass\product_view_definition.defined_version = SELF\product_view_definition.
               defined_version ) ) ) > 0 );
  END_ENTITY;

  ENTITY physical_unit_planar_keepout_shape_model
    SUBTYPE OF ( planar_shape_model, usage_view_level_non_feature_shape_model, physical_unit_keepout_shape_model );
      SELF\usage_view_level_non_feature_shape_model.model_shape : physical_unit_shape_model;
      component_application                  : pu2ds_component_application;
      shape_distance_from_seating_plane      : OPTIONAL length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane : OPTIONAL pu2ds_shape_location;
      side                                   : OPTIONAL pu2ds_shape_side;
      extrusion                              : OPTIONAL BOOLEAN;
    DERIVE
      application_technology_constraint  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 
                                             'application technology constraint'  );
    WHERE
      wr1: ( NOT ( ( pu2ds_shape_location.congruent = shape_location_with_respect_to_seating_plane ) AND EXISTS( 
               shape_distance_from_seating_plane ) ) );
      wr2: ( SIZEOF( application_technology_constraint ) <= 1 );
      wr3: ( NOT EXISTS( SELF\representation.name ) );
      wr4: ( NOT EXISTS( SELF\representation.description ) );
      wr5: ( ( NOT EXISTS( shape_distance_from_seating_plane ) ) OR EXISTS( shape_location_with_respect_to_seating_plane ) );
      wr6: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE' IN TYPEOF( model_shape.
               shape_characterized_definition ) ) ) OR EXISTS( shape_distance_from_seating_plane ) );
      wr7: ( ( NOT EXISTS( side ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE' IN TYPEOF( 
               model_shape.shape_characterized_definition ) ) );
      wr8: ( ( NOT EXISTS( extrusion ) ) OR EXISTS( side ) );
  END_ENTITY;

  ENTITY physical_unit_planar_shape_model
    SUBTYPE OF ( planar_projected_shape_model, physical_unit_shape_model );
      shape_distance_from_seating_plane      : OPTIONAL length_tolerance_characteristic;
      shape_location_with_respect_to_seating_plane : OPTIONAL pu2ds_shape_location;
      shape_purpose                          : OPTIONAL predefined_planar_purpose;
    DERIVE
      application_technology_constraint  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 
                                             'application technology constraint'  );
    INVERSE
      external_shape_purpose : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( EXISTS( shape_purpose ) XOR ( SIZEOF( external_shape_purpose ) = 1 ) );
      wr2: ( SIZEOF( application_technology_constraint ) <= 1 );
      wr3: ( NOT EXISTS( SELF\representation.description ) );
      wr4: ( NOT ( EXISTS( shape_distance_from_seating_plane ) XOR EXISTS( shape_location_with_respect_to_seating_plane ) ) );
      wr5: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGE' IN TYPEOF( SELF\
               physical_unit_shape_model.shape_characterized_definition ) ) XOR EXISTS( shape_distance_from_seating_plane ) ) );
  END_ENTITY;

  ENTITY physical_unit_shape_model
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            physical_unit_3d_shape_model, 
            physical_unit_planar_shape_model ) )
    SUBTYPE OF ( geometric_model );
      shape_characterized_definition  : physical_unit;
      shape_material_condition        : material_condition;
      centroid_location               : OPTIONAL cartesian_point;
      shape_environment               : application_environment;
      shape_extent                    : shape_extent;
      shape_approximation_level       : shape_approximation_level;
      mass_property_quality           : mass_property_quality;
    DERIVE
      principal_part_shape  : SET [0 : 1] OF geometric_model_relationship := bag_to_set( QUERY ( gmr <* USEDIN( SELF, 
                                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_MODEL_RELATIONSHIP.'
                                + 'REP_2'  ) | ( gmr\representation_relationship.relation_type = 'principal part shape' ) ) );
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGED_PART' IN TYPEOF( 
               shape_characterized_definition ) ) );
      wr2: ( SIZEOF( QUERY ( x <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION'  IN TYPEOF( x ) ) ) ) 
               = 0 );
      wr3: ( SIZEOF( principal_part_shape ) < 2 );
  END_ENTITY;

  ENTITY picture_representation
    SUBTYPE OF ( view_area );
      SELF\representation.items  : SET [1 : ?] OF picture_representation_element_select;
    WHERE
      wr1: ( SIZEOF( QUERY ( item <* items | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STYLED_ELEMENT' 
               IN TYPEOF( item ) ) ) ) = 1 );
      wr2: ( SIZEOF( QUERY ( se <* QUERY ( item <* SELF.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STYLED_ELEMENT'  IN TYPEOF( item ) ) ) | ( 
               NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PICTURE_REPRESENTATION_ITEM' IN TYPEOF( 
               se\styled_element.element ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY picture_representation_item
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            externally_defined_picture_representation_item, 
            predefined_picture_representation_item ) )
    SUBTYPE OF ( bytes_representation_item );
  END_ENTITY;

  ENTITY pitch_class;
      class_member  : range_characteristic;
      class_name    : STRING;
    WHERE
      wr1: ( SIZEOF( QUERY ( np <* class_member\representation.items | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_DATA_ELEMENT'  IN TYPEOF( np ) ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY placed_feature
    SUBTYPE OF ( shape_element );
      definition  : shape_feature_definition;
  END_ENTITY;

  ENTITY placed_target
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            target_circle, 
            target_circular_curve, 
            target_point, 
            target_rectangle, 
            target_straight_line ) )
    SUBTYPE OF ( datum_target );
      defined_in           : geometric_coordinate_space;
      parameter_reference  : axis_placement;
  END_ENTITY;

  ENTITY placement_group_area_assignment;
      placed_group  : placement_group_requirement_definition;
      area          : mounting_restriction_area;
  END_ENTITY;

  ENTITY placement_group_requirement_definition
    SUBTYPE OF ( requirement_view_definition );
      design_specific_usage  : STRING;
    DERIVE
      requirement_relationship  : SET [0 : ?] OF requirement_view_definition_relationship := bag_to_set( QUERY ( rvdr <* USEDIN( 
                                    SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
                                    'REQUIREMENT_VIEW_DEFINITION_RELATIONSHIP.PRIMARY'  ) | ( rvdr.relation_type = 'derived_from' ) ) );
      requirement               : SET [0 : ?] OF requirement_view_definition := get_acpr_rvd( requirement_relationship );
    INVERSE
      composition : SET [1 : ?] OF component_group_assignment FOR associated_group;
    WHERE
      wr1: ( EXISTS( requirement ) AND ( SIZEOF( requirement ) >= 1 ) );
      wr2: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY placement_group_volume_assignment;
      placed_group  : placement_group_requirement_definition;
      volume        : mounting_restriction_volume;
  END_ENTITY;

  ENTITY planar_box
    SUBTYPE OF ( detailed_geometric_model_element );
      size_in_x  : length_measure;
      size_in_y  : length_measure;
      placement  : axis_placement;
  END_ENTITY;

  ENTITY planar_closed_path_shape_model_with_parameters
    SUBTYPE OF ( planar_path_shape_model_with_parameters );
    WHERE
      wr1: ( SIZEOF( QUERY ( it <* SELF\representation.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CLOSED_PATH_AREA_WITH_PARAMETERS'  IN TYPEOF( 
               it ) ) ) ) = 1 );
  END_ENTITY;

  ENTITY planar_curve_pair
    SUPERTYPE OF ( 
        ONEOF ( 
            sliding_curve_pair, 
            rolling_curve_pair ) 
        ANDOR
        planar_curve_pair_range )
    SUBTYPE OF ( high_order_kinematic_pair );
      curve_1      : curve;
      curve_2      : curve;
      orientation  : BOOLEAN;
    WHERE
      wr1: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( curve_1 IN r.items ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_2 | ( NOT ( curve_2 IN r.items ) ) ) ) = 0 );
      wr3: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY planar_curve_pair_range
    SUBTYPE OF ( planar_curve_pair );
      range_on_curve_1  : trimmed_curve;
      range_on_curve_2  : trimmed_curve;
    WHERE
      wr1: ( SELF\planar_curve_pair.curve_1 :=: range_on_curve_1.basis_curve );
      wr2: ( SELF\planar_curve_pair.curve_2 :=: range_on_curve_2.basis_curve );
      wr3: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( range_on_curve_1 IN r.items ) ) ) ) 
               = 0 );
      wr4: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_2 | ( NOT ( range_on_curve_2 IN r.items ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY planar_element
    SUBTYPE OF ( definitional_shape_element );
      normal    : direction_element;
      location  : location_element;
  END_ENTITY;

  ENTITY planar_face
    SUBTYPE OF ( multi_axis_feature );
      removal_boundary    : linear_profile;
      course_of_travel    : linear_path_feature_component;
      face_boundary       : OPTIONAL closed_profile;
      removal_direction   : direction_element;
      volume_not_removed  : SET [0 : ?] OF volume_select;
      removal_depth       : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY planar_pair
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := TRUE;
  END_ENTITY;

  ENTITY planar_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : planar_pair;
      actual_rotation                  : plane_angle_measure;
      actual_translation_x             : length_measure;
      actual_translation_y             : length_measure;
  END_ENTITY;

  ENTITY planar_pair_with_range
    SUBTYPE OF ( planar_pair );
      lower_limit_actual_rotation       : OPTIONAL plane_angle_measure;
      upper_limit_actual_rotation       : OPTIONAL plane_angle_measure;
      lower_limit_actual_translation_x  : OPTIONAL length_measure;
      upper_limit_actual_translation_x  : OPTIONAL length_measure;
      lower_limit_actual_translation_y  : OPTIONAL length_measure;
      upper_limit_actual_translation_y  : OPTIONAL length_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_actual_rotation ) ) OR ( NOT EXISTS( upper_limit_actual_rotation ) ) ) XOR ( 
               lower_limit_actual_rotation < upper_limit_actual_rotation ) );
      wr2: ( ( ( NOT EXISTS( lower_limit_actual_translation_x ) ) OR ( NOT EXISTS( upper_limit_actual_translation_x ) ) ) XOR ( 
               lower_limit_actual_translation_x < upper_limit_actual_translation_x ) );
      wr3: ( ( ( NOT EXISTS( lower_limit_actual_translation_y ) ) OR ( NOT EXISTS( upper_limit_actual_translation_y ) ) ) XOR ( 
               lower_limit_actual_translation_y < upper_limit_actual_translation_y ) );
  END_ENTITY;

  ENTITY planar_path_shape_model_with_parameters
    SUBTYPE OF ( single_area_csg_2d_model );
    WHERE
      wr1: ( SIZEOF( QUERY ( it <* SELF\representation.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AXIS_PLACEMENT_2D'  IN TYPEOF( it ) ) ) ) = 1 );
      wr2: ( SIZEOF( QUERY ( it <* SELF\representation.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PATH_AREA_WITH_PARAMETERS'  IN TYPEOF( it ) ) ) ) 
               = 1 );
      wr3: ( SIZEOF( SELF\representation.items ) = 2 );
  END_ENTITY;

  ENTITY planar_pocket_bottom_condition
    SUBTYPE OF ( pocket_bottom_condition );
      floor_normal    : direction_element;
      floor_location  : location_element;
      floor_radius    : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY planar_profile_floor
    SUBTYPE OF ( profile_floor );
      floor  : planar_element;
  END_ENTITY;

  ENTITY planar_projected_shape_model
    SUPERTYPE OF ( 
        ONEOF ( 
            assembly_component_2d_shape_model 
            ANDOR
            ONEOF ( 
                part_template_planar_shape_model, 
                physical_unit_planar_shape_model ) ) )
    SUBTYPE OF ( planar_shape_model );
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.name ) );
  END_ENTITY;

  ENTITY planar_rib_top_floor
    SUBTYPE OF ( rib_top_floor );
      floor_face  : planar_element;
      boundary    : closed_profile;
  END_ENTITY;

  ENTITY planar_shape_model
    ABSTRACT SUPERTYPE OF ( 
        planar_projected_shape_model 
        ANDOR
        ONEOF ( 
            planar_projected_shape_model, 
            physical_unit_planar_keepout_shape_model ) )
    SUBTYPE OF ( geometric_model );
    WHERE
      wr1: ( SELF\geometric_model.context_of_items.dimension_count = 2 );
  END_ENTITY;

  ENTITY planar_top_condition
    SUBTYPE OF ( boss_top_condition );
      top_normal    : direction_element;
      top_location  : location_element;
  END_ENTITY;

  ENTITY plane
    SUBTYPE OF ( surface );
      position  : axis_placement_3d;
  END_ENTITY;

  ENTITY plane_angle_and_length_pair;
      plane_angle_value  : plane_angle_measure;
      length_value       : length_measure;
  END_ENTITY;

  ENTITY plane_angle_and_ratio_pair;
      plane_angle_value  : plane_angle_measure;
      ratio_value        : ratio_measure;
  END_ENTITY;

  ENTITY plane_angle_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY plane_shape_element
    SUBTYPE OF ( associated_shape_element );
    DERIVE
      SELF\associated_shape_element.associated_item : plane := SELF\associated_shape_element.association\
                                                 geometric_item_specific_usage.identified_item;
  END_ENTITY;

  ENTITY planned_characteristic;
      reference_requirement               : requirement_assignment;
      planned_coordinated_characteristic  : property_representation;
    WHERE
      wr1: ( planned_coordinated_characteristic.property.described_element :=: reference_requirement.assigned_requirement );
  END_ENTITY;

  ENTITY plated_conductive_base_blind_via
    SUBTYPE OF ( blind_via );
  END_ENTITY;

  ENTITY plated_cutout
    SUBTYPE OF ( cutout, plated_inter_stratum_feature );
  END_ENTITY;

  ENTITY plated_cutout_edge_segment
    SUBTYPE OF ( cutout_edge_segment, plated_inter_stratum_feature );
      SELF\cutout_edge_segment.composed_cutout : partially_plated_cutout;
  END_ENTITY;

  ENTITY plated_inter_stratum_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            plated_cutout, 
            plated_interconnect_module_edge, 
            plated_cutout_edge_segment, 
            plated_interconnect_module_edge_segment, 
            plated_passage ) )
    SUBTYPE OF ( inter_stratum_feature );
    WHERE
      wr1: ( SELF\inter_stratum_feature.vertical_extent.allocated_technology.plated_passage = TRUE );
  END_ENTITY;

  ENTITY plated_interconnect_module_edge
    SUBTYPE OF ( interconnect_module_edge, plated_inter_stratum_feature );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY plated_interconnect_module_edge_segment
    SUBTYPE OF ( plated_inter_stratum_feature, interconnect_module_edge_segment );
      SELF\interconnect_module_edge_segment.composed_edge : partially_plated_interconnect_module_edge;
  END_ENTITY;

  ENTITY plated_passage
    SUPERTYPE OF ( 
        ONEOF ( 
            component_termination_passage, 
            via ) )
    SUBTYPE OF ( plated_inter_stratum_feature );
      SELF\inter_stratum_feature.vertical_extent : passage_technology_allocation_to_stack_model;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY plated_passage_dependent_land
    SUBTYPE OF ( inter_stratum_feature_dependent_land );
      reference_plated_passage               : plated_passage;
      SELF\definition_based_product_occurrence.derived_from : default_plated_passage_based_land_physical_template;
  END_ENTITY;

  ENTITY plated_passage_template_shape_model
    SUBTYPE OF ( part_template_shape_model );
      SELF\part_template_shape_model.shape_characterized_definition : SET [1 : ?] OF ptswp_ptsm_definition;
      data_qualification                     : ptswp_template_shape_model_context;
    DERIVE
      template  : geometric_template := shape_characterized_definition[1];
    WHERE
      wr1: ( SIZEOF( QUERY ( scd <* shape_characterized_definition | ( NOT scd\inter_stratum_feature_template.
               of_passage_technology\passage_technology.plated_passage ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( scd <* shape_characterized_definition | ( NOT ( TYPEOF( scd ) = TYPEOF( template ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY plib_class_reference;
      code          : STRING;
      supplier_bsu  : STRING;
      version       : STRING;
  END_ENTITY;

  ENTITY plib_dictionary
    SUBTYPE OF ( known_source );
  END_ENTITY;

  ENTITY plib_library
    SUBTYPE OF ( known_source );
  END_ENTITY;

  ENTITY plib_property_reference
    SUBTYPE OF ( independent_property );
      code        : STRING;
      version     : STRING;
      name_scope  : plib_class_reference;
  END_ENTITY;

  ENTITY plus_expression
    SUBTYPE OF ( multiple_arity_numeric_expression );
  END_ENTITY;

  ENTITY plus_minus_bounds;
      lower_bound  : value_with_unit;
      upper_bound  : value_with_unit;
  END_ENTITY;

  ENTITY plus_minus_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [1 : 1] OF value_with_tolerances;
  END_ENTITY;

  ENTITY plus_minus_toleranced_datum;
      tolerance_value  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY ply
    SUBTYPE OF ( constituent_part );
      constituents          : OPTIONAL LIST [1 : ?] OF ply_piece;
      ply_thickness         : length_data_element;
      material_orientation  : direction_of_fiber_orientation_within_a_ply;
      material_type         : ply_stock_material;
      shape                 : OPTIONAL ply_shape;
    DERIVE
      material_orientation_angle  : ply_orientation_angle := material_orientation.orientations[1];
  END_ENTITY;

  ENTITY ply_laminate
    SUBTYPE OF ( constituent_part );
      shape      : OPTIONAL ply_laminate_shape;
      ply_table  : ply_laminate_table;
  END_ENTITY;

  ENTITY ply_laminate_sequence_definition;
      plies_in_sequence  : SET [1 : ?] OF ply;
  END_ENTITY;

  ENTITY ply_laminate_table
    SUBTYPE OF ( part_laminate_table );
      sequence  : LIST [2 : ?] OF ply_laminate_sequence_definition;
  END_ENTITY;

  ENTITY ply_orientation_angle
    SUPERTYPE OF ( 
        ONEOF ( 
            draped_orientation_angle, 
            laid_orientation_angle ) )
    SUBTYPE OF ( representation_relationship );
      angle_reference                        : angle_select;
      SELF\representation_relationship.rep_1 : direction_of_fiber_orientation_within_a_ply;
      SELF\representation_relationship.rep_2 : reinforcement_orientation_basis;
  END_ENTITY;

  ENTITY ply_piece
    SUBTYPE OF ( constituent_part );
      shape         : OPTIONAL ply_piece_shape;
      warp_surface  : LOGICAL;
  END_ENTITY;

  ENTITY ply_shape
    SUPERTYPE OF ( 
        ONEOF ( 
            projected_ply_shape, 
            laid_ply_shape, 
            flat_pattern_ply_shape ) );
      defining_model  : ply_laminate_shape;
      basis           : OPTIONAL ply_shape;
  END_ENTITY;

  ENTITY pmi_annotation_presentation_shape
    SUBTYPE OF ( nominal_3d_model_shape );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXT'  IN TYPEOF( described_element\product_view_definition.
               additional_contexts ) );
  END_ENTITY;

  ENTITY pocket
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            cutout_feature, 
            general_pocket, 
            recess, 
            rectangular_closed_pocket, 
            rectangular_open_pocket ) )
    SUBTYPE OF ( multi_axis_feature );
      base_radius          : numerical_item_with_unit;
      change_in_boundardy  : OPTIONAL LIST [1 : ?] OF angle_or_directed_taper;
      bottom_condition     : pocket_bottom_condition_select;
      pocket_depth         : linear_path_feature_component;
  END_ENTITY;

  ENTITY pocket_bottom_condition
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            general_pocket_bottom_condition, 
            planar_pocket_bottom_condition ) );
      start_or_end  : BOOLEAN;
  END_ENTITY;

  ENTITY point
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            cartesian_point, 
            point_on_curve, 
            point_on_surface ) )
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY point_and_vector
    SUBTYPE OF ( detailed_geometric_model_element );
      location  : point;
      vector    : LIST [1 : 2] OF direction;
  END_ENTITY;

  ENTITY point_appearance;
      marker  : marker;
      colour  : colour;
      size    : REAL;
  END_ENTITY;

  ENTITY point_direction
    SUBTYPE OF ( detailed_geometric_model_element );
      origin  : cartesian_point;
      axis    : direction;
  END_ENTITY;

  ENTITY point_direction_model
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : ?] OF point_or_point_direction_sequence;
  END_ENTITY;

  ENTITY point_direction_sequence
    SUBTYPE OF ( detailed_geometric_model_element );
      items  : LIST [1 : ?] OF point_or_point_direction;
  END_ENTITY;

  ENTITY point_distance_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF point;
      SELF\explicit_constraint.reference_elements : SET [0 : 4] OF point_curve_or_surface;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) > 0 ) OR ( ( 'EXPLICIT_GEOMETRIC_CONSTRAINT_SCHEMA.'
               + 'DIMENSIONED_POINT_DISTANCE_CONSTRAINT'  IN TYPEOF( SELF ) ) AND ( SIZEOF( SELF\explicit_constraint.
               constrained_elements ) = 2 ) ) );
  END_ENTITY;

  ENTITY point_on_curve
    SUBTYPE OF ( point );
      supporting_curve  : curve;
  END_ENTITY;

  ENTITY point_on_edge_curve
    SUBTYPE OF ( point_on_curve );
      basis_edge_curve  : edge_curve;
    DERIVE
      SELF\point_on_curve.supporting_curve  : curve := SELF.basis_edge_curve.edge_geometry;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_edge_curve ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY point_on_face_surface
    SUBTYPE OF ( point_on_surface );
      basis_face_surface  : face_surface;
    DERIVE
      SELF\point_on_surface.supporting_surface : surface := SELF.basis_face_surface.face_geometry;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_face_surface ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY point_on_planar_curve_pair
    SUBTYPE OF ( high_order_kinematic_pair );
      pair_curve   : curve;
      orientation  : BOOLEAN;
    WHERE
      wr1: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( pair_curve IN r.items ) ) ) ) =
               0 );
      wr2: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY point_on_planar_curve_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : point_on_planar_curve_pair;
      actual_point_on_curve            : point_on_curve;
      input_orientation                : spatial_rotation;
    WHERE
      wr1: ( SELF\pair_value.applies_to_pair\point_on_planar_curve_pair.pair_curve :=: actual_point_on_curve.supporting_curve );
  END_ENTITY;

  ENTITY point_on_planar_curve_pair_with_range
    SUBTYPE OF ( point_on_planar_curve_pair );
      range_on_pair_curve  : trimmed_curve;
      lower_limit_yaw      : OPTIONAL plane_angle_measure;
      upper_limit_yaw      : OPTIONAL plane_angle_measure;
      lower_limit_pitch    : OPTIONAL plane_angle_measure;
      upper_limit_pitch    : OPTIONAL plane_angle_measure;
      lower_limit_roll     : OPTIONAL plane_angle_measure;
      upper_limit_roll     : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_pitch ) ) OR ( NOT EXISTS( upper_limit_pitch ) ) ) XOR ( lower_limit_pitch < 
               upper_limit_pitch ) );
      wr2: ( ( ( NOT EXISTS( lower_limit_yaw ) ) OR ( NOT EXISTS( upper_limit_yaw ) ) ) XOR ( lower_limit_yaw < upper_limit_yaw ) );
      wr3: ( ( ( NOT EXISTS( lower_limit_roll ) ) OR ( NOT EXISTS( upper_limit_roll ) ) ) XOR ( lower_limit_roll < 
               upper_limit_roll ) );
      wr4: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( range_on_pair_curve IN r.items ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY point_on_surface
    SUBTYPE OF ( point );
      supporting_surface  : surface;
  END_ENTITY;

  ENTITY point_on_surface_pair
    SUBTYPE OF ( high_order_kinematic_pair );
      pair_surface  : surface;
    WHERE
      wr1: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( pair_surface IN r.items ) ) ) ) 
               = 0 );
      wr2: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY point_on_surface_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : point_on_surface_pair;
      actual_point_on_surface          : point_on_surface;
      input_orientation                : spatial_rotation;
    WHERE
      wr1: ( SELF\pair_value.applies_to_pair\point_on_surface_pair.pair_surface :=: actual_point_on_surface.supporting_surface );
  END_ENTITY;

  ENTITY point_on_surface_pair_with_range
    SUBTYPE OF ( point_on_surface_pair );
      range_on_pair_surface  : trimmed_surface;
      lower_limit_yaw        : OPTIONAL plane_angle_measure;
      upper_limit_yaw        : OPTIONAL plane_angle_measure;
      lower_limit_pitch      : OPTIONAL plane_angle_measure;
      upper_limit_pitch      : OPTIONAL plane_angle_measure;
      lower_limit_roll       : OPTIONAL plane_angle_measure;
      upper_limit_roll       : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_pitch ) ) OR ( NOT EXISTS( upper_limit_pitch ) ) ) XOR ( lower_limit_pitch < 
               upper_limit_pitch ) );
      wr2: ( ( ( NOT EXISTS( lower_limit_yaw ) ) OR ( NOT EXISTS( upper_limit_yaw ) ) ) XOR ( lower_limit_yaw < upper_limit_yaw ) );
      wr3: ( ( ( NOT EXISTS( lower_limit_roll ) ) OR ( NOT EXISTS( upper_limit_roll ) ) ) XOR ( lower_limit_roll < 
               upper_limit_roll ) );
      wr4: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( range_on_pair_surface IN r.
               items ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY point_path
    SUBTYPE OF ( detailed_geometric_model_element );
      directions  : LIST [1 : ?] OF point_and_vector;
  END_ENTITY;

  ENTITY point_sequence
    SUBTYPE OF ( detailed_geometric_model_element );
      items  : LIST [1 : ?] OF cartesian_point;
  END_ENTITY;

  ENTITY point_shape_element
    SUBTYPE OF ( associated_shape_element );
    DERIVE
      SELF\associated_shape_element.associated_item : point := SELF\associated_shape_element.association\
                                                 geometric_item_specific_usage.identified_item;
  END_ENTITY;

  ENTITY point_to_point_path
    SUBTYPE OF ( path_node );
    DERIVE
      SELF\kinematic_path_segment.transition : curve_transition_code := curve_transition_code.discontinuous;
  END_ENTITY;

  ENTITY point_zone_shape
    SUBTYPE OF ( zone_structural_makeup_shape_representation );
      location  : point;
  END_ENTITY;

  ENTITY polarity_indication_feature
    SUBTYPE OF ( part_feature );
      associated_body_vertical_extent      : OPTIONAL SET [1 : 2] OF package_body_surface;
      associated_terminal                  : package_terminal;
      SELF\shape_element.containing_shape  : package;
  END_ENTITY;

  ENTITY poly_loop
    SUBTYPE OF ( detailed_geometric_model_element, loop );
      polygon  : LIST [3 : ?] OF UNIQUE cartesian_point;
  END_ENTITY;

  ENTITY polygonal_area
    SUBTYPE OF ( primitive_2d );
      bounds  : LIST [3 : ?] OF UNIQUE cartesian_point;
  END_ENTITY;

  ENTITY port_variable
    SUPERTYPE OF ( 
        ONEOF ( 
            through_port_variable, 
            across_port_variable, 
            transform_port_variable ) );
      associated_port  : analog_analytical_model_port;
      variable_name    : STRING;
      unit_of_measure  : OPTIONAL unit;
    UNIQUE
      ur1 : variable_name, associated_port;
  END_ENTITY;

  ENTITY position_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : datum_system;
    INVERSE
      directed_or_oriented_tolerance_zone : SET [0 : 1] OF directed_or_oriented_tolerance_zone FOR zone_for;
  END_ENTITY;

  ENTITY positioned_sketch
    SUBTYPE OF ( detailed_geometric_model_element );
      sketch_basis        : sketch_basis_select;
      auxiliary_elements  : SET [0 : ?] OF auxiliary_geometric_representation_item;
  END_ENTITY;

  ENTITY power_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY power_expression
    SUBTYPE OF ( binary_numeric_expression );
  END_ENTITY;

  ENTITY pre_defined_activity_relationship
    SUBTYPE OF ( activity_relationship );
    WHERE
      wr1: ( SELF\activity_relationship.name IN pre_defined_activity_relationship_types );
  END_ENTITY;

  ENTITY pre_defined_address_assignment
    SUBTYPE OF ( address_assignment );
    WHERE
      wr1: ( SELF\address_assignment.address_type IN pre_defined_address_assignment_types );
  END_ENTITY;

  ENTITY pre_defined_approval
    SUBTYPE OF ( approval );
    WHERE
      wr1: ( SELF\approval.purpose IN pre_defined_approval_types );
  END_ENTITY;

  ENTITY pre_defined_approval_status
    SUBTYPE OF ( approval_status );
    WHERE
      wr1: ( SELF\approval_status.status_name IN pre_defined_approval_status_types );
  END_ENTITY;

  ENTITY pre_defined_colour
    SUBTYPE OF ( colour );
    WHERE
      wr1: ( SELF.name IN [ 'red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'black', 'white'] );
  END_ENTITY;

  ENTITY pre_defined_date_or_date_time_assignment
    SUBTYPE OF ( date_or_date_time_assignment );
    WHERE
      wr1: ( SELF\date_or_date_time_assignment.role IN pre_defined_date_or_date_time_assignment_types );
  END_ENTITY;

  ENTITY pre_defined_datum_2d_symbol
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_parallel_datum_axis_2d_symbol, 
            pre_defined_perpendicular_datum_axis_2d_symbol, 
            pre_defined_perpendicular_datum_plane_2d_symbol ) )
    SUBTYPE OF ( planar_shape_model );
      associated_element  : axis_placement_shape_element;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY pre_defined_datum_axis_3d_symbol
    SUBTYPE OF ( geometric_model );
      associated_element  : axis_placement_shape_element;
    WHERE
      wr1: ( SELF\geometric_model.context_of_items.dimension_count = 3 );
      wr2: ( NOT EXISTS( SELF\representation.name ) );
      wr3: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY pre_defined_datum_plane_3d_symbol
    SUBTYPE OF ( geometric_model );
      associated_element  : axis_placement_shape_element;
    WHERE
      wr1: ( SELF\geometric_model.context_of_items.dimension_count = 3 );
      wr2: ( NOT EXISTS( SELF\representation.name ) );
      wr3: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY pre_defined_organization_or_person_in_organization_assignment
    SUBTYPE OF ( organization_or_person_in_organization_assignment );
    WHERE
      wr1: ( SELF\organization_or_person_in_organization_assignment.role IN 
               pre_defined_organization_or_person_in_organization_assignment_types );
  END_ENTITY;

  ENTITY pre_defined_parallel_datum_axis_2d_symbol
    SUBTYPE OF ( pre_defined_datum_2d_symbol );
  END_ENTITY;

  ENTITY pre_defined_parallel_datum_axis_symbol_3d_2d_relationship
    SUBTYPE OF ( shape_definition_3d_intersection );
      SELF\representation_relationship.rep_2 : pre_defined_parallel_datum_axis_2d_symbol;
      SELF\representation_relationship.rep_1 : pre_defined_datum_axis_3d_symbol;
  END_ENTITY;

  ENTITY pre_defined_perpendicular_datum_axis_2d_symbol
    SUBTYPE OF ( pre_defined_datum_2d_symbol );
  END_ENTITY;

  ENTITY pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship
    SUBTYPE OF ( shape_definition_3d_intersection );
      SELF\representation_relationship.rep_2 : pre_defined_perpendicular_datum_axis_2d_symbol;
      SELF\representation_relationship.rep_1 : pre_defined_datum_axis_3d_symbol;
  END_ENTITY;

  ENTITY pre_defined_perpendicular_datum_plane_2d_symbol
    SUBTYPE OF ( pre_defined_datum_2d_symbol );
  END_ENTITY;

  ENTITY pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship
    SUBTYPE OF ( shape_definition_3d_intersection );
      SELF\representation_relationship.rep_2 : pre_defined_perpendicular_datum_plane_2d_symbol;
      SELF\representation_relationship.rep_1 : pre_defined_datum_plane_3d_symbol;
  END_ENTITY;

  ENTITY pre_defined_physical_network_group
    SUBTYPE OF ( physical_network_group );
    WHERE
      wr1: ( SELF\group.membership_meaning IN pre_defined_physical_network_group_types );
  END_ENTITY;

  ENTITY pre_defined_physical_network_group_element_relationship
    SUBTYPE OF ( physical_network_group_element_relationship );
    WHERE
      wr1: ( SELF\group_relationship.relation_type IN pre_defined_physical_network_group_relation_types );
  END_ENTITY;

  ENTITY pre_defined_security_classification
    SUBTYPE OF ( security_classification );
    WHERE
      wr1: ( SELF\security_classification.classification_level IN pre_defined_security_classification_types );
  END_ENTITY;

  ENTITY pre_defined_type_qualifier
    SUBTYPE OF ( type_qualifier );
    WHERE
      wr1: ( SELF\type_qualifier.name IN pre_defined_type_qualifiers );
  END_ENTITY;

  ENTITY pre_defined_work_request
    SUBTYPE OF ( work_request );
    WHERE
      wr1: ( SELF\work_request.purpose IN pre_defined_work_request_types );
  END_ENTITY;

  ENTITY pre_defined_work_request_status
    SUBTYPE OF ( work_request_status );
    WHERE
      wr1: ( SELF\work_request_status.status IN pre_defined_work_request_status_types );
  END_ENTITY;

  ENTITY precision_qualifier;
      significant_digits  : INTEGER;
  END_ENTITY;

  ENTITY predefined_curve_font
    SUBTYPE OF ( curve_font );
    WHERE
      wr1: ( SELF.curve_font_name IN [ 'continuous', 'chain', 'chain double dash', 'dashed', 'dotted'] );
  END_ENTITY;

  ENTITY predefined_marker
    SUBTYPE OF ( marker );
  END_ENTITY;

  ENTITY predefined_picture_representation_item
    SUBTYPE OF ( picture_representation_item );
    WHERE
      wr1: ( SELF\representation_item.name IN pre_defined_picture_representation_types );
  END_ENTITY;

  ENTITY predefined_requirement_view_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            constraint_occurrence, 
            design_characteristic_occurrence ) 
        ANDOR
        ONEOF ( 
            layout_line_width_tolerance_requirement, 
            layout_land_width_tolerance_requirement, 
            fabrication_thickness_requirement ) 
        ANDOR
        ONEOF ( 
            assembly_spacing_requirement, 
            assembly_group_spacing_requirement, 
            item_restricted_requirement, 
            layout_spacing_requirement ) 
        ANDOR
        ONEOF ( 
            assembly_spacing_requirement, 
            assembly_group_spacing_requirement, 
            item_restricted_requirement ) )
    SUBTYPE OF ( requirement_view_definition );
      required_analytical_representation  : OPTIONAL SET [1 : ?] OF analytical_model_application;
      required_functional_specification   : OPTIONAL SET [1 : ?] OF functional_specification;
      required_characteristic             : OPTIONAL characteristic_select;
    DERIVE
      requirement_specification  : SET [1 : ?] OF document_definition := get_document_definition( SELF, 'requirement specification' , 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SPECIFICATION_DEFINITION'  );
      reference_clause           : SET [0 : 1] OF document_definition := get_document_definition( SELF, 'reference clause', 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENT_DEFINITION'  );
    INVERSE
      required_material : SET [0 : 1] OF material_identification FOR items;
    WHERE
      wr1: ( ( NOT ( SIZEOF( required_material ) = 1 ) ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( required_material ) ) );
      wr2: ( SELF\product_view_definition.initial_context.application_domain IN [ 'mechanical', 'thermal', 'electromechancial', 
               'electromagnetic compatibility' , 'electrical'] );
      wr3: ( SELF\product_view_definition.initial_context.life_cycle_stage IN [ 'design', 'qualify', 'inspect', 'test'] );
      wr4: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY predefined_terminator
    SUBTYPE OF ( terminator );
  END_ENTITY;

  ENTITY prescribed_path
    SUBTYPE OF ( link_motion_representation_along_path );
      controlling_joints  : OPTIONAL SET [1 : 6] OF kinematic_joint;
  END_ENTITY;

  ENTITY presentation_set;
      areas  : SET [1 : ?] OF view_area;
  END_ENTITY;

  ENTITY presentation_set_assignment;
      associated_presentation  : presentation_set;
      is_describing            : presentation_association_select;
  END_ENTITY;

  ENTITY pressure_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY primary_orientation_feature
    SUBTYPE OF ( package_orientation_feature );
  END_ENTITY;

  ENTITY primary_reference_terminal
    SUBTYPE OF ( package_terminal );
    WHERE
      wr1: ( NOT EXISTS( SELF\part_feature.precedent_feature ) );
  END_ENTITY;

  ENTITY primary_stratum_indicator_symbol
    SUBTYPE OF ( single_stratum_special_symbol_component );
  END_ENTITY;

  ENTITY primitive_2d
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            circular_area, 
            elliptic_area, 
            rectangular_area, 
            polygonal_area ) )
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY primitive_2d_with_inner_boundary
    SUBTYPE OF ( primitive_2d );
  END_ENTITY;

  ENTITY printed_component
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            single_stratum_printed_component, 
            basic_multi_stratum_printed_component, 
            multi_stratum_printed_component ) 
        ANDOR
        ONEOF ( 
            layout_macro_component, 
            printed_connector_component ) )
    SUBTYPE OF ( assembly_component, single_instance );
      SELF\definition_based_product_occurrence.derived_from : printed_part_template;
    INVERSE
      access_mechanism : SET [1 : ?] OF printed_component_join_terminal FOR containing_shape;
      cad_layer : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr5: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY printed_component_join_terminal
    SUBTYPE OF ( laminate_component_join_terminal );
      SELF\component_feature.definition    : printed_part_template_join_terminal;
      SELF\shape_element.containing_shape  : printed_component;
      stratum_concept_implementation       : stratum_feature_template_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
      wr2: ( associated_component.derived_from :=: definition\printed_part_template_terminal.containing_shape );
  END_ENTITY;

  ENTITY printed_connector_component
    SUBTYPE OF ( printed_component );
      SELF\definition_based_product_occurrence.derived_from : printed_connector_template;
    INVERSE
      interface_access_mechanism : SET [1 : ?] OF printed_connector_component_interface_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY printed_connector_component_interface_terminal
    SUBTYPE OF ( laminate_component_interface_terminal );
      SELF\component_feature.definition    : printed_part_template_interface_terminal;
      SELF\shape_element.containing_shape  : printed_connector_component;
      stratum_concept_implementation       : stratum_feature_template_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY printed_connector_template
    SUBTYPE OF ( printed_part_template );
    INVERSE
      characterized_connector_terminal_relationship : SET [1 : ?] OF printed_connector_template_terminal_relationship FOR 
                                                         connector;
  END_ENTITY;

  ENTITY printed_connector_template_terminal_relationship;
      join_terminal       : printed_part_template_join_terminal;
      interface_terminal  : printed_part_template_interface_terminal;
      connector           : printed_connector_template;
    UNIQUE
      ur1 : join_terminal;
    WHERE
      wr1: ( join_terminal\shape_element.containing_shape :=: connector );
      wr2: ( interface_terminal\printed_part_template_interface_terminal.containing_shape :=: connector );
  END_ENTITY;

  ENTITY printed_part_cross_section_template
    SUBTYPE OF ( printed_part_template );
      horizontal_material_link               : OPTIONAL SET [1 : ?] OF printed_part_template_material_link;
      vertical_material_link                 : OPTIONAL SET [1 : ?] OF printed_part_template_material_link;
      transmission_line_model                : analytical_model_definition;
      maximum_transmission_line_characteristic : OPTIONAL SET [1 : ?] OF analytical_model_application;
      minimum_transmission_line_characteristic : OPTIONAL SET [1 : ?] OF analytical_model_application;
      width                                  : length_tolerance_characteristic;
      unit_length                            : length_data_element;
    INVERSE
      SELF\printed_part_template.access_mechanisms : SET [1 : ?] OF printed_part_cross_section_template_terminal FOR 
                             containing_shape;
    WHERE
      wr1: ( SIZEOF( QUERY ( hml <* horizontal_material_link | ( NOT ( hml.precedent_material\shape_element.element_name IN [
               'right' ] ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( hml <* horizontal_material_link | ( NOT ( hml.subsequent_material\shape_element.element_name IN [
               'left' ] ) ) ) ) = 0 );
      wr3: ( SIZEOF( QUERY ( hml <* vertical_material_link | ( NOT ( hml.precedent_material\shape_element.element_name IN [ 'bottom' ] ) ) ) ) 
               = 0 );
      wr4: ( SIZEOF( QUERY ( hml <* vertical_material_link | ( NOT ( hml.precedent_material\shape_element.element_name IN [ 'top'] ) ) ) ) 
               = 0 );
      wr5: ( SIZEOF( QUERY ( hml <* horizontal_material_link | ( SIZEOF( QUERY ( vml <* vertical_material_link | ( vml :=: hml ) ) ) 
               > 0 ) ) ) = 0 );
      wr6: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr7: ( EXISTS( horizontal_material_link ) OR EXISTS( vertical_material_link ) );
      wr8: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRINTED_CONNECTOR_TEMPLATE' IN TYPEOF( 
               SELF ) ) );
  END_ENTITY;

  ENTITY printed_part_cross_section_template_terminal
    SUBTYPE OF ( printed_part_template_terminal );
      SELF\shape_element.containing_shape  : printed_part_cross_section_template;
      material_to_left_of_terminal         : OPTIONAL printed_part_template_material_link;
      material_to_right_of_terminal        : OPTIONAL printed_part_template_material_link;
      material_to_top_of_terminal          : OPTIONAL printed_part_template_material_link;
      material_to_bottom_of_terminal       : OPTIONAL printed_part_template_material_link;
    UNIQUE
      ur1 : containing_shape, material_to_left_of_terminal, material_to_right_of_terminal, material_to_top_of_terminal, 
               material_to_bottom_of_terminal;
    WHERE
      wr1 : ( ( SELF\printed_part_template_terminal.connection_zone_category = curve_edge_segment ) OR ( SELF\
                printed_part_template_terminal.connection_zone_category = area_edge_segment ) );
      wr2 : ( ( NOT ( EXISTS( material_to_left_of_terminal ) AND EXISTS( material_to_right_of_terminal ) ) ) OR ( 
                material_to_left_of_terminal :<>: material_to_right_of_terminal ) );
      wr3 : ( ( NOT ( EXISTS( material_to_left_of_terminal ) AND EXISTS( material_to_top_of_terminal ) ) ) OR ( 
                material_to_left_of_terminal :<>: material_to_top_of_terminal ) );
      wr4 : ( ( NOT ( EXISTS( material_to_left_of_terminal ) AND EXISTS( material_to_bottom_of_terminal ) ) ) OR ( 
                material_to_left_of_terminal :<>: material_to_bottom_of_terminal ) );
      wr5 : ( ( NOT ( EXISTS( material_to_right_of_terminal ) AND EXISTS( material_to_top_of_terminal ) ) ) OR ( 
                material_to_right_of_terminal :<>: material_to_top_of_terminal ) );
      wr6 : ( ( NOT ( EXISTS( material_to_right_of_terminal ) AND EXISTS( material_to_bottom_of_terminal ) ) ) OR ( 
                material_to_right_of_terminal :<>: material_to_bottom_of_terminal ) );
      wr7 : ( ( NOT ( EXISTS( material_to_top_of_terminal ) AND EXISTS( material_to_bottom_of_terminal ) ) ) OR ( 
                material_to_top_of_terminal :<>: material_to_bottom_of_terminal ) );
      wr8 : ( ( NOT EXISTS( material_to_left_of_terminal ) ) OR ( material_to_left_of_terminal\
                printed_part_template_material_link.precedent_material\shape_element.element_name = 'right' ) );
      wr9 : ( ( NOT EXISTS( material_to_right_of_terminal ) ) OR ( material_to_right_of_terminal\
                printed_part_template_material_link.subsequent_material\shape_element.element_name = 'left' ) );
      wr10: ( ( NOT EXISTS( material_to_bottom_of_terminal ) ) OR ( material_to_bottom_of_terminal\
                printed_part_template_material_link.subsequent_material\shape_element.element_name = 'top' ) );
      wr11: ( ( NOT EXISTS( material_to_top_of_terminal ) ) OR ( material_to_top_of_terminal\printed_part_template_material_link.
                precedent_material\shape_element.element_name = 'bottom' ) );
  END_ENTITY;

  ENTITY printed_part_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            basic_multi_stratum_printed_part_template, 
            structured_printed_part_template, 
            printed_part_cross_section_template ) 
        ANDOR
        printed_connector_template 
        ANDOR
        ONEOF ( 
            basic_multi_stratum_printed_part_template, 
            layout_macro_floor_plan_template, 
            printed_connector_template, 
            structured_printed_part_template ) )
    SUBTYPE OF ( template_definition );
      implemented_function  : OPTIONAL functional_unit_usage_view;
    INVERSE
      access_mechanisms : SET [1 : ?] OF printed_part_template_terminal FOR containing_shape;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY printed_part_template_connected_terminals_definition;
      name                 : STRING;
      connected_terminals  : SET [2 : ?] OF printed_part_template_terminal;
    DERIVE
      scope  : printed_part_template := connected_terminals[1].containing_shape;
    UNIQUE
      ur1 : name, scope;
    WHERE
      wr1: ( SIZEOF( QUERY ( t <* connected_terminals | ( t.containing_shape :<>: scope ) ) ) = 0 );
  END_ENTITY;

  ENTITY printed_part_template_interface_terminal
    SUBTYPE OF ( printed_part_template_terminal );
      SELF\shape_element.containing_shape  : printed_connector_template;
    INVERSE
      external_connector_function : SET [1 : ?] OF printed_connector_template_terminal_relationship FOR interface_terminal;
  END_ENTITY;

  ENTITY printed_part_template_join_terminal
    SUBTYPE OF ( printed_part_template_terminal );
    INVERSE
      internal_connector_function : SET [0 : 1] OF printed_connector_template_terminal_relationship FOR join_terminal;
  END_ENTITY;

  ENTITY printed_part_template_material;
      width              : length_tolerance_characteristic;
      required_material  : stratum_technology;
    INVERSE
      boundary : SET [0 : 4] OF template_material_cross_section_boundary FOR associated_definition;
    WHERE
      wr1: ( SIZEOF( QUERY ( temp <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.'  + 'ASSOCIATED_DEFINITION' ) | ( temp\shape_element.element_name = 
               'top'  ) ) ) <= 1 );
      wr2: ( SIZEOF( QUERY ( temp <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.'  + 'ASSOCIATED_DEFINITION' ) | ( temp\shape_element.element_name = 
               'bottom'  ) ) ) <= 1 );
      wr3: ( SIZEOF( QUERY ( temp <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.'  + 'ASSOCIATED_DEFINITION' ) | ( temp\shape_element.element_name = 
               'left'  ) ) ) <= 1 );
      wr4: ( SIZEOF( QUERY ( temp <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEMPLATE_MATERIAL_CROSS_SECTION_BOUNDARY.'  + 'ASSOCIATED_DEFINITION' ) | ( temp\shape_element.element_name = 
               'right'  ) ) ) <= 1 );
  END_ENTITY;

  ENTITY printed_part_template_material_link;
      precedent_material   : template_material_cross_section_boundary;
      subsequent_material  : template_material_cross_section_boundary;
    UNIQUE
      ur1 : precedent_material, subsequent_material;
    WHERE
      wr1: ( precedent_material :<>: subsequent_material );
      wr2: ( precedent_material\shape_element.element_name IN [ 'bottom', 'right'] );
      wr3: ( subsequent_material\shape_element.element_name IN [ 'top', 'left'] );
      wr4: ( NOT ( ( precedent_material\shape_element.element_name IN [ 'bottom'] ) XOR ( subsequent_material\shape_element.
               element_name IN [ 'top'] ) ) );
      wr5: ( NOT ( ( precedent_material\shape_element.element_name IN [ 'right'] ) XOR ( subsequent_material\shape_element.
               element_name IN [ 'left'] ) ) );
      wr6: acyclic_printed_part_template_material_link( SELF, [subsequent_material], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRINTED_PART_TEMPLATE_MATERIAL_LINK'  );
  END_ENTITY;

  ENTITY printed_part_template_terminal
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            printed_part_template_join_terminal, 
            printed_part_template_interface_terminal ) 
        ANDOR
        printed_part_cross_section_template_terminal 
        ANDOR
        structured_printed_part_template_terminal )
    SUBTYPE OF ( general_part_feature );
      SELF\shape_element.containing_shape    : printed_part_template;
      connection_zone_category               : printed_part_template_terminal_class;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_layout_template;
    INVERSE
      connection_requirement  : SET [0 : 1] OF printed_part_template_connected_terminals_definition FOR connected_terminals;
      functional_usage_view_terminal : SET [0 : 1] OF functional_usage_view_to_printed_part_template_terminal_assignment FOR 
                                          physical_usage_view_terminal;
    UNIQUE
      ur1 : SELF\shape_element.element_name, containing_shape;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY printed_tiebar_template
    SUBTYPE OF ( structured_printed_part_template );
    DERIVE
      terminal_location           : SET OF axis_placement_2d := pplt_get_tl_ap2d( SELF );
      passage_component_location  : SET OF axis_placement_2d := pplt_get_pcl_ap2d( SELF );
      tiebar_shape_model          : SET OF geometric_model := pplt_get_gm( SELF );
    WHERE
      wr1: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRINTED_CONNECTOR_TEMPLATE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NON_CONDUCTIVE_CROSS_SECTION_TEMPLATE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRINTED_PART_CROSS_SECTION_TEMPLATE' ] * 
               TYPEOF( SELF ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( am <* SELF\printed_part_template.access_mechanisms | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRINTED_PART_TEMPLATE_JOIN_TERMINAL'  IN 
               TYPEOF( am ) ) ) ) ) = 0 );
      wr3: ( ( SIZEOF( passage_component_location ) = 0 ) OR ( SIZEOF( QUERY ( pcl <* passage_component_location | ( SIZEOF( 
               QUERY ( tsm <* tiebar_shape_model | ap2d_geometrically_in_tiebar( pcl, tsm ) ) ) > 0 ) ) ) = SIZEOF( 
               passage_component_location ) ) );
      wr4: ( SIZEOF( QUERY ( t <* SELF\structured_template.templates | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE_TEMPLATE'  IN TYPEOF( t\
               template_location_in_structured_template.template ) ) ) ) > 0 );
      wr5: ( SIZEOF( QUERY ( spptt <* SELF\printed_part_template.access_mechanisms | ( NOT ( SIZEOF( USEDIN( spptt, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION.CONNECTED_TERMINALS'  ) ) = 1 ) ) ) ) = 0 );
      wr6: ( SIZEOF( QUERY ( spptt1 <* SELF\printed_part_template.access_mechanisms | ( NOT ( SIZEOF( QUERY ( spptt2 <* SELF\
               printed_part_template.access_mechanisms | ( bag_to_set( USEDIN( spptt1, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION.CONNECTED_TERMINALS'  ) ) = bag_to_set( USEDIN( spptt2, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
               'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION.CONNECTED_TERMINALS'  ) ) ) ) ) = SIZEOF( SELF\
               printed_part_template.access_mechanisms ) ) ) ) ) = 0 );
      wr7: ( SIZEOF( QUERY ( tl <* terminal_location | ( SIZEOF( QUERY ( pcl <* passage_component_location | ( ( tl :=: pcl ) OR 
               ( SIZEOF( QUERY ( tsm <* tiebar_shape_model | ap2d_geometrically_in_tiebar( tl, tsm ) ) ) > 0 ) ) ) ) > 0 ) ) ) = 
               SIZEOF( terminal_location ) );
  END_ENTITY;

  ENTITY prismatic_pair
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := FALSE;
  END_ENTITY;

  ENTITY prismatic_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : prismatic_pair;
      actual_translation               : length_measure;
  END_ENTITY;

  ENTITY prismatic_pair_with_range
    SUBTYPE OF ( prismatic_pair );
      lower_limit_actual_translation  : OPTIONAL length_measure;
      upper_limit_actual_translation  : OPTIONAL length_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_actual_translation ) ) OR ( NOT EXISTS( upper_limit_actual_translation ) ) ) XOR ( 
               lower_limit_actual_translation < upper_limit_actual_translation ) );
  END_ENTITY;

  ENTITY probe_access_area
    SUPERTYPE OF ( 
        internal_probe_access_area )
    SUBTYPE OF ( laminate_component, definitional_shape_element );
      SELF\definition_based_product_occurrence.derived_from : stratum_feature_template;
      probed_layout_item                     : stratum_feature_or_stratum;
      SELF\definitional_shape_element.connection_area : SET [1 : 1] OF connection_zone_in_design_view;
      stratum_feature_material_stackup       : OPTIONAL stratum_feature_based_derived_pattern;
    DERIVE
      SELF\shape_element.containing_shape  : probe_access_area := SELF;
      SELF\shape_element.element_name      : STRING := '';
    INVERSE
      network : routed_physical_network FOR probe;
    WHERE
      wr1: ( SELF\shape_element.id = SELF\item_shape.id );
      wr2: ( ( NOT ( EXISTS( stratum_feature_material_stackup ) AND ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERNAL_PROBE_ACCESS_AREA'  IN TYPEOF( SELF ) ) ) ) ) 
               OR ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE' IN TYPEOF( 
               probed_layout_item ) ) AND ( probed_layout_item :=: stratum_feature_material_stackup\
               stratum_feature_based_derived_pattern.reference_stratum_feature ) ) );
  END_ENTITY;

  ENTITY procedural_shape_representation
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : ?] OF procedural_shape_representation_sequence;
  END_ENTITY;

  ENTITY procedural_shape_representation_sequence
    SUBTYPE OF ( detailed_geometric_model_element );
      elements             : LIST [1 : ?] OF shape_model_element;
      suppressed_elements  : SET [0 : ?] OF shape_model_element;
      rationale            : STRING;
  END_ENTITY;

  ENTITY procedural_solid_representation_sequence
    SUBTYPE OF ( procedural_shape_representation_sequence );
  END_ENTITY;

  ENTITY process_feature_in_panel
    SUBTYPE OF ( shape_feature_definition );
      punch_direction  : direction;
  END_ENTITY;

  ENTITY process_operation_definition;
      id            : STRING;
      name          : OPTIONAL label;
      process_type  : STRING;
      description   : OPTIONAL text;
      version_id    : OPTIONAL STRING;
  END_ENTITY;

  ENTITY process_operation_definition_relationship;
      relation_type  : STRING;
      description    : text;
      relating       : process_operation_definition;
      related        : process_operation_definition;
  END_ENTITY;

  ENTITY process_operation_input_or_output;
      role             : STRING;
      description      : OPTIONAL text;
      operation        : process_operation_occurrence;
      element          : process_operation_input_or_output_select;
      concerned_shape  : SET [0 : ?] OF shape_element;
  END_ENTITY;

  ENTITY process_operation_occurrence;
      id                    : STRING;
      plan                  : process_plan;
      operation_definition  : process_operation_definition;
  END_ENTITY;

  ENTITY process_operation_occurrence_relationship;
      relation_type  : STRING;
      description    : OPTIONAL text;
      relating       : process_operation_occurrence;
      related        : process_operation_occurrence;
      waiting_time   : OPTIONAL duration;
      cycle_time     : OPTIONAL duration;
  END_ENTITY;

  ENTITY process_operation_resource_assignment;
      reference_tool       : BOOLEAN;
      operation            : process_operation_occurrence;
      reason               : OPTIONAL STRING;
      resource_definition  : resource_definition_select;
  END_ENTITY;

  ENTITY process_plan;
      plan_id          : identifier;
      name             : OPTIONAL label;
      description      : OPTIONAL text;
      version_id       : OPTIONAL identifier;
      produced_output  : OPTIONAL SET [1 : ?] OF part_version;
  END_ENTITY;

  ENTITY process_plan_relationship;
      relation_type  : STRING;
      description    : OPTIONAL text;
      relating       : process_plan;
      related        : process_plan;
  END_ENTITY;

  ENTITY process_specification
    SUBTYPE OF ( specification_definition );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY process_state_relationship
    SUBTYPE OF ( part_definition_relationship );
      direction  : OPTIONAL process_state_relationship_direction;
  END_ENTITY;

  ENTITY process_state_view_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'process state';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'INITIAL_CONTEXT'  ) ) = 0 );
  END_ENTITY;

  ENTITY processed_core
    SUBTYPE OF ( constituent_part );
      added_material            : OPTIONAL LIST [0 : ?] OF ply;
      cell_direction            : direction_of_fiber_orientation_within_a_ply;
      made_from_stock           : stock_core;
      made_from_processed_core  : OPTIONAL SET [1 : ?] OF processed_core;
      shape                     : OPTIONAL core_shape;
    DERIVE
      cell_orientation_angle  : ply_orientation_angle := cell_direction.orientations[1];
  END_ENTITY;

  ENTITY product
    SUPERTYPE OF ( 
        ONEOF ( 
            document, 
            information_product, 
            part, 
            requirement, 
            substance ) 
        ANDOR
        ONEOF ( 
            breakdown, 
            breakdown_element, 
            document, 
            information_product, 
            part, 
            product_as_individual, 
            requirement, 
            substance ) );
      id           : STRING;
      name         : STRING;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY product_as_individual
    SUBTYPE OF ( product );
  END_ENTITY;

  ENTITY product_as_individual_assembly
    SUBTYPE OF ( assembly_component_relationship );
      SELF\product_occurrence_definition_relationship.relating_view : product_as_individual_view;
      SELF\product_occurrence_definition_relationship.related_view : product_as_individual_view;
      is_realization_of                      : product_occurrence;
    WHERE
      wr1: ( NOT EXISTS( SELF\assembly_component_relationship.quantity ) );
  END_ENTITY;

  ENTITY product_as_individual_test_result
    SUBTYPE OF ( product_as_individual_view );
  END_ENTITY;

  ENTITY product_as_individual_version
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            product_as_planned, 
            product_as_realized ) )
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : product_as_individual;
  END_ENTITY;

  ENTITY product_as_individual_view
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : product_as_individual_version;
  END_ENTITY;

  ENTITY product_as_planned
    SUBTYPE OF ( product_as_individual_version );
  END_ENTITY;

  ENTITY product_as_realized
    SUBTYPE OF ( product_as_individual_version );
  END_ENTITY;

  ENTITY product_class
    SUBTYPE OF ( product_concept );
      version_id  : OPTIONAL STRING;
      level_type  : OPTIONAL STRING;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_concept.target_market ) );
  END_ENTITY;

  ENTITY product_class_relationship;
      description    : OPTIONAL STRING;
      relating       : product_class;
      related        : product_class;
      relation_type  : STRING;
  END_ENTITY;

  ENTITY product_concept;
      id             : STRING;
      name           : STRING;
      description    : OPTIONAL STRING;
      target_market  : OPTIONAL market;
    UNIQUE
      ur1 : id;
  END_ENTITY;

  ENTITY product_configuration;
      id            : STRING;
      name          : STRING;
      description   : OPTIONAL STRING;
      item_context  : product_concept;
    INVERSE
      corresponding_design : SET [0 : 1] OF item_design_association FOR configuration;
  END_ENTITY;

  ENTITY product_configuration_hierarchical_relationship
    SUBTYPE OF ( product_configuration_relationship );
    DERIVE
      child   : product_configuration := SELF\product_configuration_relationship.related_product_configuration;
      parent  : product_configuration := SELF\product_configuration_relationship.relating_product_configuration;
  END_ENTITY;

  ENTITY product_configuration_relationship
    SUPERTYPE OF ( 
        ONEOF ( 
            product_configuration_hierarchical_relationship, 
            product_configuration_revision_sequence ) );
      relating_product_configuration  : product_configuration;
      related_product_configuration   : product_configuration;
  END_ENTITY;

  ENTITY product_configuration_revision_sequence
    SUBTYPE OF ( product_configuration_relationship );
    DERIVE
      predecessor  : product_configuration := SELF\product_configuration_relationship.relating_product_configuration;
      successor    : product_configuration := SELF\product_configuration_relationship.related_product_configuration;
  END_ENTITY;

  ENTITY product_data_and_data_quality_relationship;
      description   : STRING;
      product_data  : product_view_definition;
      data_quality  : data_quality_definition;
  END_ENTITY;

  ENTITY product_definition_element_relationship;
      id           : STRING;
      name         : STRING;
      description  : OPTIONAL STRING;
      breakdown    : breakdown_item;
      product      : product_item;
  END_ENTITY;

  ENTITY product_definition_kinematics
    SUBTYPE OF ( assigned_property );
      SELF\assigned_property.described_element : part_view_definition;
    INVERSE
      representation_relation : kinematic_property_definition_representation FOR definition;
    UNIQUE
      ur1 : described_element;
  END_ENTITY;

  ENTITY product_definition_relationship_kinematics
    SUBTYPE OF ( assigned_property );
      SELF\assigned_property.described_element : assembly_component_relationship;
    UNIQUE
      ur1 : described_element;
  END_ENTITY;

  ENTITY product_design_to_individual;
      product_design      : product;
      individual_product  : product_as_individual;
  END_ENTITY;

  ENTITY product_design_version_to_individual;
      product_design_version  : product_version_or_configuration;
      individual_product      : product_as_individual_version;
  END_ENTITY;

  ENTITY product_design_view_to_individual;
      product_as_individual_view  : product_as_individual_view;
      product_view_definition     : product_design_view_or_configuration;
  END_ENTITY;

  ENTITY product_occurrence
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            product_occurrence_with_quantity, 
            single_instance ) 
        AND
        ONEOF ( 
            definition_based_product_occurrence, 
            specification_based_product_occurrence ) )
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : part_version;
    DERIVE
      SELF\product_view_definition.initial_context : view_definition_context := view_definition_context( '', '', ? );
    INVERSE
      occurrence_contexts : SET [0 : ?] OF product_occurrence_definition_relationship FOR related_view;
      view_definition_contexts : SET [0 : ?] OF view_definition_relationship FOR related_view;
    WHERE
      wr1: ( ( SIZEOF( occurrence_contexts ) + SIZEOF( view_definition_contexts ) ) >= 1 );
      wr2: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
      wr3: ( SIZEOF( QUERY ( oc <* occurrence_contexts | ( NOT ( ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_RELATIONSHIP'  IN TYPEOF( 
               oc ) ) ) OR ( NOT EXISTS( oc\assembly_component_relationship.quantity ) ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY product_occurrence_definition_relationship
    ABSTRACT SUPERTYPE;
      relating_view  : product_view_definition_or_reference;
      related_view   : product_view_definition_or_reference;
  END_ENTITY;

  ENTITY product_occurrence_with_quantity
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            quantified_instance, 
            selected_instance ) )
    SUBTYPE OF ( product_occurrence );
      occurrence_quantity  : OPTIONAL extended_value_with_unit;
  END_ENTITY;

  ENTITY product_planned_to_realized;
      planned_product   : product_as_planned;
      realized_product  : product_as_realized;
  END_ENTITY;

  ENTITY product_specific_parameter_value_assignment;
      of_product          : product;
      assigned_parameter  : parameter_assignment;
    DERIVE
      the_model_parameter  : model_parameter := assigned_parameter\property_definition_representation.definition;
    UNIQUE
      ur1 : the_model_parameter, of_product;
  END_ENTITY;

  ENTITY product_specification
    SUBTYPE OF ( product_configuration );
      version_id                             : OPTIONAL STRING;
      SELF\product_configuration.item_context : product_class;
      defining_specifications                : SET [0 : ?] OF specification;
  END_ENTITY;

  ENTITY product_version
    SUPERTYPE OF ( 
        ONEOF ( 
            breakdown_element_version, 
            breakdown_version, 
            document_version, 
            information_version, 
            part_version, 
            product_as_individual_version, 
            requirement_version, 
            substance_version ) );
      id           : STRING;
      description  : OPTIONAL STRING;
      of_product   : product;
  END_ENTITY;

  ENTITY product_version_relationship;
      relation_type     : OPTIONAL STRING;
      description       : OPTIONAL STRING;
      relating_version  : product_version;
      related_version   : product_version;
    WHERE
      wr1: ( relating_version :<>: related_version );
      wr2: ( EXISTS( relation_type ) OR ( TYPEOF( SELF\product_version_relationship ) <> TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY product_view_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            part_view_definition, 
            requirement_view_definition, 
            document_definition, 
            functional_unit_network_node_definition, 
            information_definition, 
            product_occurrence, 
            substance_view_definition ) );
      id                           : OPTIONAL STRING;
      name                         : OPTIONAL STRING;
      additional_characterization  : OPTIONAL STRING;
      initial_context              : view_definition_context;
      additional_contexts          : SET [0 : ?] OF view_definition_context;
      defined_version              : product_version;
    WHERE
      wr1: ( NOT ( initial_context IN additional_contexts ) );
      wr2: ( EXISTS( id ) OR ( TYPEOF( SELF\product_view_definition ) <> TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY product_view_definition_reference
    SUBTYPE OF ( generic_product_view_definition_reference );
      product_id                       : identifier;
      product_definition_formation_id  : identifier;
      product_definition_id            : identifier;
      id_owning_organization_name      : OPTIONAL label;
  END_ENTITY;

  ENTITY product_view_definition_reference_with_local_representation
    SUBTYPE OF ( generic_product_view_definition_reference, product_view_definition );
  END_ENTITY;

  ENTITY profile
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            closed_profile, 
            open_profile ) );
  END_ENTITY;

  ENTITY profile_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            general_outside_profile, 
            shape_profile ) )
    SUBTYPE OF ( multi_axis_feature );
      profile_swept_shape  : linear_path_feature_component;
  END_ENTITY;

  ENTITY profile_floor
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            general_profile_floor, 
            planar_profile_floor ) );
      floor_radius  : OPTIONAL numerical_item_with_unit;
      start_or_end  : BOOLEAN;
  END_ENTITY;

  ENTITY profile_usage
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            closed_profile_usage, 
            open_profile_usage ) )
    SUBTYPE OF ( shape_element_relationship );
      profile_placement  : geometric_placement_operation;
      used_profile       : profile;
  END_ENTITY;

  ENTITY project;
      id                         : STRING;
      name                       : STRING;
      description                : OPTIONAL STRING;
      responsible_organizations  : SET [0 : ?] OF organization;
      planned_start_date         : OPTIONAL date_or_event;
      planned_end_date           : OPTIONAL date_or_event;
      actual_start_date          : OPTIONAL date_or_date_time_select;
      actual_end_date            : OPTIONAL date_or_date_time_select;
  END_ENTITY;

  ENTITY project_assignment;
      assigned_project  : project;
      role              : STRING;
      items             : SET [1 : ?] OF project_item;
  END_ENTITY;

  ENTITY project_relationship;
      relation_type     : STRING;
      description       : OPTIONAL STRING;
      relating_project  : project;
      related_project   : project;
  END_ENTITY;

  ENTITY projected_ply_shape
    SUPERTYPE OF ( 
        ONEOF ( 
            view_ply_shape, 
            surface_ply_shape ) )
    SUBTYPE OF ( ply_shape );
      method                : projection_method;
      projection_direction  : OPTIONAL direction;
  END_ENTITY;

  ENTITY projected_zone_definition
    SUBTYPE OF ( tolerance_zone_definition );
      projection_end     : shape_element;
      projection_length  : length_data_element;
  END_ENTITY;

  ENTITY projected_zone_definition_with_offset
    SUBTYPE OF ( projected_zone_definition );
      offset  : length_data_element;
  END_ENTITY;

  ENTITY projection_curve
    SUBTYPE OF ( annotation_curve );
  END_ENTITY;

  ENTITY projection_directed_callout
    SUBTYPE OF ( draughting_callout );
      projection_curve  : projection_curve;
    WHERE
      wr1: ( projection_curve IN SELF\draughting_callout.contents );
  END_ENTITY;

  ENTITY promissory_usage
    SUBTYPE OF ( assembly_component_relationship );
  END_ENTITY;

  ENTITY property_definition_representation
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            shape_description_association, 
            shape_dependent_property_representation, 
            shape_element_description_association ) );
      name                 : OPTIONAL STRING;
      description          : OPTIONAL STRING;
      definition           : represented_definition;
      used_representation  : representation;
  END_ENTITY;

  ENTITY property_representation
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : assigned_property;
    DERIVE
      property  : assigned_property := SELF\property_definition_representation.definition;
  END_ENTITY;

  ENTITY property_value_representation
    SUPERTYPE OF ( 
        ONEOF ( 
            range_characteristic, 
            tolerance_characteristic ) )
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : numerical_representation_context;
  END_ENTITY;

  ENTITY protocol_physical_layer_definition
    SUBTYPE OF ( requirement_view_definition );
      host_connector               : OPTIONAL minimally_defined_connector;
      host_functional_definition   : functional_unit_usage_view;
      media_connector              : OPTIONAL minimally_defined_connector;
      media_functional_definition  : OPTIONAL functional_unit_usage_view;
    DERIVE
      reference_document  : SET [0 : ?] OF document_definition := get_document_definition( SELF, 'reference document', 
                              'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENT_DEFINITION'  );
    WHERE
      wr1: ( EXISTS( reference_document ) AND ( SIZEOF( reference_document ) = 1 ) );
      wr2: ( EXISTS( host_functional_definition ) OR EXISTS( media_functional_definition ) );
  END_ENTITY;

  ENTITY protocol_physical_layer_definition_with_characterization
    SUBTYPE OF ( protocol_physical_layer_definition );
      host_rcv_functional_characterization  : OPTIONAL SET [1 : ?] OF functional_specification_definition;
      host_xmt_functional_characterization  : OPTIONAL SET [1 : ?] OF functional_specification_definition;
      media_functional_characterization     : OPTIONAL SET [1 : ?] OF functional_specification_definition;
    WHERE
      wr1: ( EXISTS( host_rcv_functional_characterization ) OR EXISTS( host_xmt_functional_characterization ) OR EXISTS( 
               media_functional_characterization ) );
  END_ENTITY;

  ENTITY protocol_requirement_allocation_to_part_terminal
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_to : part_terminal;
      protocol_signal                        : functional_unit_usage_view_terminal_definition;
      SELF\requirement_assignment.assigned_requirement : interface_requirement;
    DERIVE
      assigned_requirement_property  : interface_requirement := SELF\requirement_assignment.assigned_requirement;
    WHERE
      wr1: EXISTS( assigned_requirement_property\interface_requirement.reference_protocol );
      wr2: ( protocol_signal IN assigned_requirement_property\interface_requirement.reference_protocol.host_functional_definition
               \functional_unit_usage_view.access_mechanism );
  END_ENTITY;

  ENTITY protrusion
    SUBTYPE OF ( multi_axis_feature );
      shape_volume  : SET [1 : ?] OF definitional_shape_element;
  END_ENTITY;

  ENTITY qualified_numerical_item_with_unit
    SUBTYPE OF ( numerical_item_with_unit, qualified_representation_item );
  END_ENTITY;

  ENTITY qualified_representation_item
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( representation_item );
      qualifiers  : SET [1 : ?] OF value_qualifier;
    WHERE
      wr1: ( SIZEOF( QUERY ( temp <* qualifiers | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PRECISION_QUALIFIER'  IN TYPEOF( temp ) ) ) ) < 2 );
  END_ENTITY;

  ENTITY qualified_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [1 : 4] OF qualified_numerical_item_with_unit;
    WHERE
      wr1: valid_qualified_tolerance_characteristic( SELF );
  END_ENTITY;

  ENTITY qualitative_uncertainty
    SUBTYPE OF ( uncertainty_qualifier );
      uncertainty_value  : STRING;
  END_ENTITY;

  ENTITY quantified_instance
    SUBTYPE OF ( product_occurrence_with_quantity );
      SELF\product_occurrence_with_quantity.occurrence_quantity : value_with_unit;
  END_ENTITY;

  ENTITY rack_and_pinion_pair
    SUBTYPE OF ( low_order_kinematic_pair_with_motion_coupling );
      pinion_radius  : length_measure;
    WHERE
      wr1: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY rack_and_pinion_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : rack_and_pinion_pair;
      actual_displacement              : length_measure;
    DERIVE
      actual_rotation  : plane_angle_measure := 0;
  END_ENTITY;

  ENTITY rack_and_pinion_pair_with_range
    SUBTYPE OF ( rack_and_pinion_pair );
      lower_limit_rack_displacement  : OPTIONAL length_measure;
      upper_limit_rack_displacement  : OPTIONAL length_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_rack_displacement ) ) OR ( NOT EXISTS( upper_limit_rack_displacement ) ) ) XOR ( 
               lower_limit_rack_displacement < upper_limit_rack_displacement ) );
  END_ENTITY;

  ENTITY radial_size
    SUBTYPE OF ( dimensional_size );
      radius_type    : OPTIONAL adjoining_or_centred;
      geometry_type  : radial_type;
  END_ENTITY;

  ENTITY radioactivity_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY radius_edge_feature_shape_model
    SUBTYPE OF ( edge_shape_model );
      radius_length  : length_tolerance_characteristic;
  END_ENTITY;

  ENTITY radius_geometric_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF radial_geometry_element;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 0 );
  END_ENTITY;

  ENTITY radiused_bead_end_type
    SUBTYPE OF ( bead_end_type );
  END_ENTITY;

  ENTITY radiused_slot_end_type
    SUBTYPE OF ( slot_end_type );
  END_ENTITY;

  ENTITY range_characteristic
    SUBTYPE OF ( property_value_representation );
      SELF\representation.items  : SET [2 : 2] OF numerical_item_with_unit;
      range_type                 : range_class;
    WHERE
      wr1: ( TYPEOF( SELF\representation.items[1] ) = TYPEOF( SELF\representation.items[2] ) );
      wr2: ( TYPEOF( SELF\representation.items[1]\value_with_unit.unit ) = TYPEOF( SELF\representation.items[2]\value_with_unit.
               unit ) );
      wr3: valid_range( SELF\representation.items[1], SELF\representation.items[2] );
  END_ENTITY;

  ENTITY ratio_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_UNIT' IN TYPEOF( SELF\value_with_unit.unit ) );
  END_ENTITY;

  ENTITY ratio_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY rational_b_spline_curve
    SUBTYPE OF ( b_spline_curve );
      weight_values  : LIST [2 : ?] OF REAL;
    WHERE
      wr1: ( SIZEOF( weight_values ) = SIZEOF( SELF\b_spline_curve.control_points ) );
      wr2: positive_curve_weights( SELF );
  END_ENTITY;

  ENTITY rational_b_spline_surface
    SUBTYPE OF ( b_spline_surface );
      weight_values  : LIST [2 : ?] OF LIST [2 : ?] OF REAL;
    WHERE
      wr1: ( ( SIZEOF( weight_values ) = SIZEOF( SELF\b_spline_surface.control_points ) ) AND ( SIZEOF( weight_values[1] ) = 
               SIZEOF( SELF\b_spline_surface.control_points[1] ) ) );
      wr2: positive_surface_weights( SELF );
  END_ENTITY;

  ENTITY rational_representation_item
    SUBTYPE OF ( representation_item );
      numerator    : INTEGER;
      denominator  : INTEGER;
  END_ENTITY;

  ENTITY raw_material_definition_relationship
    SUBTYPE OF ( view_definition_usage );
      SELF\view_definition_relationship.relating_view : part_view_definition;
      SELF\view_definition_relationship.related_view : substance_view_definition;
    DERIVE
      application  : part_view_definition := SELF\view_definition_relationship.relating_view;
      definition   : substance_view_definition := SELF\view_definition_relationship.related_view;
    WHERE
      wr1: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
  END_ENTITY;

  ENTITY real_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( numeric_defined_function );
  END_ENTITY;

  ENTITY real_literal
    SUBTYPE OF ( literal_number );
      SELF\literal_number.the_value  : REAL;
  END_ENTITY;

  ENTITY real_numeric_variable
    SUBTYPE OF ( numeric_variable );
  END_ENTITY;

  ENTITY real_representation_item
    SUBTYPE OF ( representation_item );
      the_value  : REAL;
  END_ENTITY;

  ENTITY recess
    SUBTYPE OF ( pocket );
      SELF\pocket.bottom_condition  : pocket_bottom_condition;
      volume_not_removed            : SET [0 : ?] OF volume_select;
      fillet_boundary               : profile;
  END_ENTITY;

  ENTITY rectangular_area
    SUBTYPE OF ( primitive_2d );
      position  : axis_placement_2d;
      x         : length_data_element;
      y         : length_data_element;
  END_ENTITY;

  ENTITY rectangular_array_placement_group_component
    SUBTYPE OF ( array_placement_group );
      element                               : SET [1 : ?] OF linear_array_placement_group_component_link;
      initial_row_positive_y_displacement   : length_data_element;
      terminus_row_positive_y_displacement  : length_data_element;
      location_uncertainty                  : length_data_element;
    WHERE
      wr1: ( ( 1 + SIZEOF( element ) ) = cg_get_sz_lapgc( element ) );
  END_ENTITY;

  ENTITY rectangular_block
    SUBTYPE OF ( detailed_geometric_model_element );
      corner_location  : axis_placement_3d;
      xlength          : length_measure;
      width            : length_measure;
      height           : length_measure;
    WHERE
      wr1: ( xlength > 0 );
      wr2: ( width > 0 );
      wr3: ( height > 0 );
  END_ENTITY;

  ENTITY rectangular_boss
    SUBTYPE OF ( boss );
      rectangular_profile  : rectangular_closed_profile;
      change_in_boundary   : OPTIONAL angle_or_directed_taper;
  END_ENTITY;

  ENTITY rectangular_closed_pocket
    SUBTYPE OF ( pocket );
      volume_not_removed  : SET [0 : ?] OF volume_select;
      closed_boundary     : rectangular_closed_profile;
  END_ENTITY;

  ENTITY rectangular_closed_profile
    SUBTYPE OF ( closed_profile );
      profile_width   : numerical_item_with_unit;
      profile_length  : numerical_item_with_unit;
      corner_radius   : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY rectangular_closed_shape_profile
    SUBTYPE OF ( shape_profile );
      closed_boundary  : rectangular_closed_profile;
  END_ENTITY;

  ENTITY rectangular_composite_surface
    SUBTYPE OF ( bounded_surface );
      segments  : LIST [1 : ?] OF LIST [1 : ?] OF surface_patch;
    DERIVE
      n_u  : INTEGER := SIZEOF( segments );
      n_v  : INTEGER := SIZEOF( segments[1] );
    WHERE
      wr1: ( SIZEOF( QUERY ( s <* segments | ( n_v <> SIZEOF( s ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY rectangular_composite_surface_transition_locator;
      basis_surface       : rectangular_composite_surface;
      surface_parameter   : u_or_v_parameter;
      u_transition_index  : INTEGER;
      v_transition_index  : INTEGER;
    WHERE
      wr1: ( SIZEOF( using_representations( SELF.basis_surface ) * relating_geometric_models_of_extreme_values( SELF ) ) > 0 );
  END_ENTITY;

  ENTITY rectangular_offset_pattern;
      offset_direction  : direction_element;
      offset_distance   : numerical_item_with_unit;
      column_index      : INTEGER;
      row_index         : INTEGER;
    INVERSE
      relocated_base_feature_for : SET [1 : ?] OF rectangular_pattern FOR relocated_base_feature;
  END_ENTITY;

  ENTITY rectangular_omit_pattern;
      row_index     : INTEGER;
      column_index  : INTEGER;
    INVERSE
      missing_base_feature_for : SET [1 : ?] OF rectangular_pattern FOR missing_base_feature;
  END_ENTITY;

  ENTITY rectangular_open_pocket
    SUBTYPE OF ( pocket );
      volume_not_removed  : SET [0 : ?] OF volume_select;
      open_boundary       : square_u_profile;
  END_ENTITY;

  ENTITY rectangular_open_shape_profile
    SUBTYPE OF ( shape_profile );
      open_boundary  : square_u_profile;
  END_ENTITY;

  ENTITY rectangular_pattern
    SUBTYPE OF ( replicate_feature );
      relocated_base_feature   : SET [0 : ?] OF rectangular_offset_pattern;
      missing_base_feature     : SET [0 : ?] OF rectangular_omit_pattern;
      column_layout_direction  : direction_element;
      row_spacing              : numerical_item_with_unit;
      rows                     : INTEGER;
      row_layout_direction     : direction_element;
      columns                  : INTEGER;
      column_spacing           : numerical_item_with_unit;
  END_ENTITY;

  ENTITY reference_composition_path;
      path_element               : SET [1 : ?] OF functional_unit;
      reference_functional_unit  : functional_unit;
  END_ENTITY;

  ENTITY reference_functional_unit_assignment_to_part;
      functional_design_definition_path  : reference_composition_path;
      implementation                     : part_view_definition;
      of_property                        : OPTIONAL SET [1 : ?] OF property_value_representation;
      path_alias                         : STRING;
      swap_code                          : OPTIONAL STRING;
    UNIQUE
      ur1 : implementation, path_alias;
  END_ENTITY;

  ENTITY reference_functional_unit_assignment_to_template;
      functional_design_definition_path  : reference_composition_path;
      implementation                     : template_definition;
      of_property                        : OPTIONAL SET [1 : ?] OF property_value_representation;
      path_alias                         : STRING;
      swap_code                          : OPTIONAL STRING;
    UNIQUE
      ur1 : implementation, path_alias;
  END_ENTITY;

  ENTITY reference_graphic_registration_mark
    SUBTYPE OF ( non_feature_shape_element );
  END_ENTITY;

  ENTITY reference_part_template_for_analytical_model;
      template                   : template_definition;
      analytical_representation  : analytical_model_definition;
    UNIQUE
      ur1 : template;
  END_ENTITY;

  ENTITY region_based_derived_pattern;
      extent             : inter_stratum_extent;
      reference_stratum  : design_or_documentation_stratum;
      region             : csg_2d_model;
  END_ENTITY;

  ENTITY reinforcement_orientation_basis
    SUBTYPE OF ( representation );
      SELF\representation.context_of_items  : geometric_coordinate_space;
      SELF\representation.items             : SET [1 : 1] OF axis_placement_3d;
    DERIVE
      basis_location  : cartesian_point := SELF\representation.items[1]\axis_placement.location;
      orientation     : direction := SELF\representation.items[1]\axis_placement.ref_direction;
    INVERSE
      tables : SET [1 : ?] OF laminate_table FOR basis;
      orientations : SET [1 : ?] OF ply_orientation_angle FOR rep_2;
  END_ENTITY;

  ENTITY relative_event
    SUBTYPE OF ( event );
      base_event  : event;
      offset      : duration;
  END_ENTITY;

  ENTITY relative_optical_insertion_loss_material_property_class
    SUBTYPE OF ( class );
    WHERE
      wr1: ( SELF\class.name IN [ 'vacuum', 'very low loss', 'low loss', 'medium loss', 'high loss'] );
      wr2: ( NOT EXISTS( SELF\class.description ) );
  END_ENTITY;

  ENTITY relative_permeability_material_property_class
    SUBTYPE OF ( class );
    WHERE
      wr1: ( SELF\class.name IN [ 'free space permeabilty', 'low permeability', 'medium permeability', 'highly permeable'] );
      wr2: ( NOT EXISTS( SELF\class.description ) );
  END_ENTITY;

  ENTITY relative_permittivity_material_property_class
    SUBTYPE OF ( class );
    WHERE
      wr1: ( SELF\class.name IN [ 'vacuum permittivity', 'low permittivity', 'medium permittivity', 'high permittivity'] );
      wr2: ( NOT EXISTS( SELF\class.description ) );
  END_ENTITY;

  ENTITY replaced_usage_relationship
    SUBTYPE OF ( part_occurrence_relationship );
      usage_context  : instance_usage_context_select;
    DERIVE
      SELF\view_definition_relationship.relation_type : STRING := 'usage replacement';
  END_ENTITY;

  ENTITY replicate_base;
      base_feature  : replicate_base_select;
  END_ENTITY;

  ENTITY replicate_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            circular_pattern, 
            general_pattern, 
            rectangular_pattern ) )
    SUBTYPE OF ( manufacturing_feature );
      placement               : axis_placement;
      replicate_feature_base  : replicate_base;
  END_ENTITY;

  ENTITY repositioned_sketch_2d_in_3d
    SUBTYPE OF ( detailed_geometric_model_element );
      source          : sketch_2d_representation;
      mapping_origin  : axis_placement;
      mapping_target  : axis_placement;
    WHERE
      wr1: ( mapping_origin.dim = 2 );
      wr2: ( mapping_target.dim = 3 );
  END_ENTITY;

  ENTITY repositioned_tessellated_item
    SUBTYPE OF ( tessellated_item );
      location  : axis_placement_3d;
    WHERE
      wr1: ( NOT ( SIZEOF( [ 'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_CURVE_SET', 'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_GEOMETRIC_SET', 
               'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_POINT_SET' , 'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SURFACE_SET', 
               'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SHELL' , 'GEOMETRIC_MODEL_SCHEMA.TESSELLATED_SOLID', 'GEOMETRIC_MODEL_SCHEMA.'
               + 'TESSELLATED_WIRE' ] * TYPEOF( SELF ) ) = 0 ) );
  END_ENTITY;

  ENTITY representation
    SUPERTYPE OF ( 
        ONEOF ( 
            interpolated_configuration_representation, 
            link_motion_representation_along_path ) 
        ANDOR
        ONEOF ( 
            kinematic_link_representation, 
            kinematic_topology_structure, 
            kinematic_topology_directed_structure, 
            kinematic_topology_network_structure, 
            mechanism_representation, 
            geometric_model ) 
        ANDOR
        ONEOF ( 
            kinematic_topology_structure, 
            kinematic_topology_directed_structure, 
            kinematic_topology_network_structure ) );
      id                : OPTIONAL identifier;
      name              : OPTIONAL label;
      description       : OPTIONAL text;
      context_of_items  : representation_context;
      items             : SET [1 : ?] OF representation_item;
    WHERE
      wr1: ( EXISTS( name ) OR ( TYPEOF( SELF\representation ) <> TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY representation_context;
      id    : identifier;
      kind  : text;
    INVERSE
      representations_in_context : SET [1 : ?] OF representation FOR context_of_items;
  END_ENTITY;

  ENTITY representation_item
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            boolean_representation_item, 
            compound_representation_item, 
            date_time_representation_item, 
            integer_representation_item, 
            logical_representation_item, 
            rational_representation_item, 
            real_representation_item ) 
        ANDOR
        ONEOF ( 
            characteristic_data_table, 
            characteristic_data_table_row ) 
        ANDOR
        ONEOF ( 
            styled_element, 
            styled_model_replication ) );
      name  : OPTIONAL label;
  END_ENTITY;

  ENTITY representation_proxy_item
    SUBTYPE OF ( representation_item );
      item  : representation_proxy_select;
  END_ENTITY;

  ENTITY representation_relationship;
      relation_type  : OPTIONAL label;
      description    : OPTIONAL text;
      rep_1          : representation;
      rep_2          : representation;
    WHERE
      wr1: ( EXISTS( relation_type ) OR ( TYPEOF( SELF\representation_relationship ) <> TYPEOF( SELF ) ) );
      wr2: ( EXISTS( description ) OR ( TYPEOF( SELF\representation_relationship ) <> TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY representation_with_uncertainty
    SUBTYPE OF ( representation );
      uncertainty  : SET [1 : ?] OF uncertainty_with_unit;
  END_ENTITY;

  ENTITY representative_geometric_model
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY requirement
    SUBTYPE OF ( product );
  END_ENTITY;

  ENTITY requirement_assignment;
      id                    : STRING;
      description           : OPTIONAL STRING;
      assigned_requirement  : requirement_view_definition;
      assigned_to           : requirement_assignment_item;
  END_ENTITY;

  ENTITY requirement_collection_relationship
    SUBTYPE OF ( requirement_view_definition_relationship );
    DERIVE
      collection  : requirement_view_definition := SELF\requirement_view_definition_relationship.primary;
      member      : requirement_view_definition := SELF\requirement_view_definition_relationship.secondary;
  END_ENTITY;

  ENTITY requirement_precedence_relationship
    SUBTYPE OF ( requirement_view_definition_relationship );
  END_ENTITY;

  ENTITY requirement_satisfied_by;
      id                     : STRING;
      description            : OPTIONAL STRING;
      satisfied_by           : requirement_satisfaction_item;
      satisfied_requirement  : requirement_view_definition;
      related_assignment     : OPTIONAL requirement_assignment;
  END_ENTITY;

  ENTITY requirement_source;
      id                   : STRING;
      description          : OPTIONAL STRING;
      source               : requirement_source_item;
      sourced_requirement  : requirement_view_definition;
  END_ENTITY;

  ENTITY requirement_version
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : requirement;
  END_ENTITY;

  ENTITY requirement_version_relationship
    SUBTYPE OF ( product_version_relationship );
      SELF\product_version_relationship.relating_version : requirement_version;
      SELF\product_version_relationship.related_version : requirement_version;
    DERIVE
      predecessor  : requirement_version := SELF\product_version_relationship.relating_version;
      successor    : requirement_version := SELF\product_version_relationship.related_version;
  END_ENTITY;

  ENTITY requirement_view_definition
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : requirement_version;
  END_ENTITY;

  ENTITY requirement_view_definition_relationship
    SUPERTYPE OF ( 
        ONEOF ( 
            requirement_collection_relationship, 
            requirement_precedence_relationship, 
            tracing_relationship ) )
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : requirement_view_definition;
      SELF\view_definition_relationship.related_view : requirement_view_definition;
    DERIVE
      primary    : requirement_view_definition := SELF\view_definition_relationship.relating_view;
      secondary  : requirement_view_definition := SELF\view_definition_relationship.related_view;
    WHERE
      wr1: ( primary :<>: secondary );
  END_ENTITY;

  ENTITY resistance_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY resource_requirement_type;
      name         : label;
      description  : text;
  END_ENTITY;

  ENTITY resulting_path
    SUBTYPE OF ( link_motion_representation_along_path );
      controlling_joints  : SET [1 : ?] OF kinematic_joint;
  END_ENTITY;

  ENTITY retention_period;
      retention_purpose        : OPTIONAL STRING;
      earliest_end_definition  : OPTIONAL period_or_date_or_event_select;
      latest_end_definition    : OPTIONAL period_or_date_or_event_select;
      start_definition         : date_or_event;
      is_applied_to            : SET [1 : ?] OF time_interval_item;
    WHERE
      wr1: ( EXISTS( earliest_end_definition ) OR EXISTS( latest_end_definition ) );
  END_ENTITY;

  ENTITY revolute_pair
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := TRUE;
  END_ENTITY;

  ENTITY revolute_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : revolute_pair;
      actual_rotation                  : plane_angle_measure;
  END_ENTITY;

  ENTITY revolute_pair_with_range
    SUBTYPE OF ( revolute_pair );
      lower_limit_actual_rotation  : OPTIONAL plane_angle_measure;
      upper_limit_actual_rotation  : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_actual_rotation ) ) OR ( NOT EXISTS( upper_limit_actual_rotation ) ) ) XOR ( 
               lower_limit_actual_rotation < upper_limit_actual_rotation ) );
  END_ENTITY;

  ENTITY revolved_feature
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            general_revolution, 
            groove, 
            revolved_flat, 
            revolved_round ) )
    SUBTYPE OF ( machining_feature );
      radius         : numerical_item_with_unit;
      material_side  : direction_element;
  END_ENTITY;

  ENTITY revolved_flat
    SUBTYPE OF ( revolved_feature );
      flat_edge_shape  : linear_profile;
  END_ENTITY;

  ENTITY revolved_round
    SUBTYPE OF ( revolved_feature );
      rounded_edge_shape  : partial_circular_profile;
  END_ENTITY;

  ENTITY rib_top
    SUBTYPE OF ( multi_axis_feature );
      removal_direction  : direction;
      floor_condition    : rib_top_floor;
  END_ENTITY;

  ENTITY rib_top_floor
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            general_rib_top_floor, 
            planar_rib_top_floor ) );
  END_ENTITY;

  ENTITY rigid_link_representation
    SUBTYPE OF ( kinematic_link_representation );
  END_ENTITY;

  ENTITY rigid_subsketch
    SUBTYPE OF ( subsketch );
  END_ENTITY;

  ENTITY rolling_curve_pair
    SUBTYPE OF ( planar_curve_pair );
  END_ENTITY;

  ENTITY rolling_curve_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : rolling_curve_pair;
      actual_point_on_curve_1          : point_on_curve;
    WHERE
      wr1: ( SELF\pair_value.applies_to_pair\planar_curve_pair.curve_1 :=: actual_point_on_curve_1.supporting_curve );
  END_ENTITY;

  ENTITY rolling_surface_pair
    SUBTYPE OF ( surface_pair );
  END_ENTITY;

  ENTITY rolling_surface_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : rolling_surface_pair;
      actual_point_on_surface          : point_on_surface;
      actual_rotation                  : plane_angle_measure;
    WHERE
      wr1: ( SELF\pair_value.applies_to_pair\surface_pair.surface_1 :=: actual_point_on_surface.supporting_surface );
  END_ENTITY;

  ENTITY rotation_about_direction
    SUBTYPE OF ( detailed_geometric_model_element );
      direction_of_axis  : direction;
      rotation_angle     : plane_angle_measure;
    WHERE
      wr1: ( SIZEOF( direction_of_axis.direction_ratios ) = 3 );
  END_ENTITY;

  ENTITY round_hole
    SUBTYPE OF ( hole );
      hole_depth          : linear_path_feature_component;
      diameter            : circular_closed_profile;
      change_in_diameter  : OPTIONAL taper_select;
      bottom_condition    : hole_bottom_condition_select;
  END_ENTITY;

  ENTITY rounded_end
    SUBTYPE OF ( multi_axis_feature );
      partial_circular_boundary  : partial_circular_profile;
      course_of_travel           : linear_path_feature_component;
  END_ENTITY;

  ENTITY rounded_u_profile
    SUBTYPE OF ( open_profile );
      width  : numerical_item_with_unit;
      depth  : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY roundness_tolerance
    SUBTYPE OF ( geometric_tolerance );
  END_ENTITY;

  ENTITY routed_cable_component_2d_shape_model
    SUBTYPE OF ( assembly_component_2d_shape_model );
      cable_path_shape                       : SET [1 : ?] OF curve;
      connector_placement                    : SET [1 : ?] OF sub_model_placement_2d;
      junction_placement                     : OPTIONAL SET [1 : ?] OF geometric_model_element_relationship;
      SELF\assembly_component_2d_shape_model.shape_characterized_component : SET [1 : 1] OF cable_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY routed_cable_component_3d_shape_model
    SUBTYPE OF ( assembly_component_3d_shape_model );
      cable_path_shape                       : SET [1 : ?] OF curve_swept_solid;
      connector_placement                    : SET [1 : ?] OF sub_model_placement_3d;
      junction_placement                     : OPTIONAL SET [1 : ?] OF geometric_model_element_relationship;
      SELF\assembly_component_3d_shape_model.shape_characterized_component : SET [1 : 1] OF cable_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY routed_interconnect_component
    SUBTYPE OF ( physical_component );
      routed_centreline_shape  : path_area_with_parameters;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY routed_join_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            inter_stratum_join_relationship, 
            intra_stratum_join_relationship, 
            stratum_embedded_physical_component_join_relationship ) )
    SUBTYPE OF ( join_relationship );
    INVERSE
      network_topology : routed_physical_network FOR routed_connectivity_requirement_element;
  END_ENTITY;

  ENTITY routed_physical_component
    SUBTYPE OF ( physical_component );
      routed_centreline_shape  : path_area_with_parameters;
  END_ENTITY;

  ENTITY routed_physical_network
    SUBTYPE OF ( generic_physical_network );
      routed_connectivity_requirement_element : SET [1 : ?] OF routed_join_relationship;
      probe                                  : OPTIONAL SET [1 : ?] OF probe_access_area;
    DERIVE
      complete   : BOOLEAN := NOT EXISTS( unrouted_connectivity_requirement_element );
      valid_net  : LOGICAL := SIZEOF( SELF\generic_physical_network.connectivity_requirement_element ) > 1;
    WHERE
      wr1: ( SIZEOF( QUERY ( cre <* SELF\generic_physical_network.connectivity_requirement_element | ( NOT ( ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND_JOIN_TERMINAL'  IN TYPEOF( cre ) ) ) OR 
               ( SIZEOF( TYPEOF( cre\component_feature.associated_component ) * [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONTACT_SIZE_DEPENDENT_LAND' ] ) = 1 ) ) ) ) ) 
               = 0 );
      wr2: ( ( NOT EXISTS( SELF\generic_physical_network.reference_connected_terminals ) ) OR ( SELF\generic_physical_network.
               reference_connected_terminals.associated_definition = SELF\generic_physical_network.current_associated_definition\
               part_design_view.usage_view ) );
  END_ENTITY;

  ENTITY routed_physical_shield
    SUBTYPE OF ( routed_physical_component, physical_shield );
  END_ENTITY;

  ENTITY routed_shield
    SUBTYPE OF ( integral_shield );
      routed_centreline_shape                : curve;
      SELF\definition_based_product_occurrence.derived_from : printed_part_cross_section_template;
      component_extent                       : inter_stratum_extent;
      curve_parameters                       : curve_style_parameters;
  END_ENTITY;

  ENTITY routed_transmission_line
    SUBTYPE OF ( assembly_component, single_instance );
      routed_centreline_shape                : curve;
      SELF\definition_based_product_occurrence.derived_from : printed_part_cross_section_template;
      component_extent                       : inter_stratum_extent;
      curve_parameters                       : curve_style_parameters;
  END_ENTITY;

  ENTITY row_value;
      values  : LIST OF term_select;
    WHERE
      wr1: ( SIZEOF( QUERY ( v <* SELF.values | contains_variable( v ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( v <* SELF.values | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ROW_VALUE' 
               IN TYPEOF( v ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY row_variable
    SUBTYPE OF ( abstract_variable );
  END_ENTITY;

  ENTITY rule_action
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            rule_submission, 
            rule_adoption, 
            rule_rejection, 
            rule_supersedence, 
            rule_creation, 
            rule_expiration, 
            rule_change_request, 
            rule_request, 
            rule_modification ) );
      subject_rule  : rule_version;
    DERIVE
      subject_action_assignment  : SET [0 : ?] OF organization_or_person_in_organization_assignment := bag_to_set( 
                                     QUERY ( temp <* USEDIN( SELF, 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
                                     'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS'  ) | ( temp.role = 
                                     'subject action assignment'  ) ) );
    UNIQUE
      ur1 : SELF\rule_action.subject_rule, SELF\rule_action.subject_action_assignment;
    WHERE
      wr1: ( EXISTS( subject_action_assignment ) AND ( SIZEOF( subject_action_assignment ) = 1 ) );
  END_ENTITY;

  ENTITY rule_adoption
    SUBTYPE OF ( rule_action );
  END_ENTITY;

  ENTITY rule_based_evaluated_characteristic
    SUBTYPE OF ( evaluated_characteristic );
      evaluating_rule  : rule_definition;
  END_ENTITY;

  ENTITY rule_change_request
    SUBTYPE OF ( rule_action );
      change_reason  : STRING;
  END_ENTITY;

  ENTITY rule_condition
    SUBTYPE OF ( atomic_formula );
      positive  : BOOLEAN;
  END_ENTITY;

  ENTITY rule_creation
    SUBTYPE OF ( rule_action );
  END_ENTITY;

  ENTITY rule_definition
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            forward_chaining_rule, 
            back_chaining_rule ) )
    SUBTYPE OF ( rule_software_definition );
  END_ENTITY;

  ENTITY rule_expiration
    SUBTYPE OF ( rule_action );
      expiration_rationale  : STRING;
  END_ENTITY;

  ENTITY rule_justification
    SUBTYPE OF ( rule_action );
      justified_action         : rule_action;
      justification_rationale  : STRING;
    WHERE
      wr1: ( SELF <> justified_action );
  END_ENTITY;

  ENTITY rule_modification
    SUBTYPE OF ( rule_action );
      modification_rationale  : rule_change_request;
  END_ENTITY;

  ENTITY rule_priority;
      priority          : INTEGER;
      prioritized_rule  : rule_definition;
    WHERE
      wr1: ( priority >= 0 );
  END_ENTITY;

  ENTITY rule_product
    SUBTYPE OF ( software );
  END_ENTITY;

  ENTITY rule_rejection
    SUBTYPE OF ( rule_action );
      rejection_reason  : STRING;
  END_ENTITY;

  ENTITY rule_request
    SUBTYPE OF ( rule_action );
  END_ENTITY;

  ENTITY rule_set
    SUBTYPE OF ( rule_software_definition );
      conflict_resolution_strategy  : OPTIONAL STRING;
      rule_member                   : SET [1 : ?] OF rule_priority;
    DERIVE
      engine  : SET [1 : 1] OF document_definition := get_document_definition( SELF, 'engine', 
                  'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LANGUAGE_REFERENCE_MANUAL'  );
    INVERSE
      purpose : identification_assignment FOR items;
    WHERE
      wr1: ( purpose.role = 'purpose' );
  END_ENTITY;

  ENTITY rule_set_group
    SUBTYPE OF ( rule_software_definition );
      elements  : SET [2 : ?] OF rule_set;
  END_ENTITY;

  ENTITY rule_software_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            rule_definition, 
            rule_set_group, 
            rule_set ) )
    SUBTYPE OF ( software_definition );
      SELF\product_view_definition.defined_version : rule_version;
  END_ENTITY;

  ENTITY rule_submission
    SUBTYPE OF ( rule_action );
      submission_rationale  : STRING;
  END_ENTITY;

  ENTITY rule_supersedence
    SUBTYPE OF ( rule_action );
      superseded_rule  : rule_version;
  END_ENTITY;

  ENTITY rule_version
    SUBTYPE OF ( software_version );
      SELF\product_version.of_product  : rule_product;
    INVERSE
      management_action : SET [1 : ?] OF rule_action FOR subject_rule;
      product_definition : SET [1 : ?] OF rule_software_definition FOR defined_version;
  END_ENTITY;

  ENTITY runout_zone_definition
    SUBTYPE OF ( tolerance_zone_definition );
      angle                              : angle_data_element;
      orientation_defining_relationship  : OPTIONAL shape_element_relationship;
  END_ENTITY;

  ENTITY same_time_machining_relationship
    SUBTYPE OF ( part_occurrence_relationship );
  END_ENTITY;

  ENTITY scalar_terminal_definition
    SUBTYPE OF ( functional_unit_usage_view_terminal_definition );
  END_ENTITY;

  ENTITY scalar_terminal_definition_link;
      precedent_terminal_definition   : scalar_terminal_definition;
      subsequent_terminal_definition  : scalar_terminal_definition;
    UNIQUE
      ur1 : precedent_terminal_definition, subsequent_terminal_definition;
    WHERE
      wr1: ( precedent_terminal_definition :<>: subsequent_terminal_definition );
      wr2: acyclic_scalar_terminal_definition_link( SELF, [subsequent_terminal_definition], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SCALAR_TERMINAL_DEFINITION_LINK'  );
  END_ENTITY;

  ENTITY scalar_variable
    SUBTYPE OF ( abstract_variable );
  END_ENTITY;

  ENTITY schema_based_model_parameter
    SUBTYPE OF ( model_parameter );
      entity_name        : independent_property;
      attribute_name     : OPTIONAL independent_property;
      schema_identifier  : independent_property;
    UNIQUE
      ur1 : entity_name, attribute_name, schema_identifier;
  END_ENTITY;

  ENTITY screw_pair
    SUBTYPE OF ( low_order_kinematic_pair_with_motion_coupling );
      pitch  : length_measure;
    WHERE
      wr1: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY screw_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : screw_pair;
      actual_rotation                  : plane_angle_measure;
  END_ENTITY;

  ENTITY screw_pair_with_range
    SUBTYPE OF ( screw_pair );
      lower_limit_actual_rotation  : OPTIONAL plane_angle_measure;
      upper_limit_actual_rotation  : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_actual_rotation ) ) OR ( NOT EXISTS( upper_limit_actual_rotation ) ) ) XOR ( 
               lower_limit_actual_rotation < upper_limit_actual_rotation ) );
  END_ENTITY;

  ENTITY sculptured_solid
    SUBTYPE OF ( modified_solid );
      cutting_surface  : sculpting_surface;
      positive_side    : BOOLEAN;
  END_ENTITY;

  ENTITY sculptured_solid_with_selection
    SUBTYPE OF ( sculptured_solid );
      retained_part  : detailed_topological_model_element;
  END_ENTITY;

  ENTITY seating_plane
    SUBTYPE OF ( non_feature_shape_element );
    WHERE
      wr1: ( SELF\shape_element.element_name = 'seating plane' );
  END_ENTITY;

  ENTITY second_chamfer_offset
    SUBTYPE OF ( second_chamfer_parameter );
      offset_amount  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY second_chamfer_parameter
    SUPERTYPE OF ( 
        ONEOF ( 
            chamfer_angle, 
            second_chamfer_offset ) );
      second_face  : face_shape_element;
  END_ENTITY;

  ENTITY secondary_orientation_feature
    SUBTYPE OF ( package_orientation_feature );
  END_ENTITY;

  ENTITY security_classification
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_security_classification, 
            externally_defined_security_classification ) );
      classification_level  : STRING;
      description           : OPTIONAL STRING;
  END_ENTITY;

  ENTITY security_classification_assignment;
      classification  : security_classification;
      items           : SET [1 : ?] OF security_classification_item;
  END_ENTITY;

  ENTITY segmentation_curve_appearance
    SUBTYPE OF ( surface_related_curve_appearance );
  END_ENTITY;

  ENTITY selected_instance
    SUBTYPE OF ( product_occurrence_with_quantity );
      quantity_criterion  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY self_intersecting_curve
    SUBTYPE OF ( self_intersecting_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      arc_length_separation_factor           : REAL;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'POINT_ON_CURVE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POINT_ON_CURVE'] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY self_intersecting_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            self_intersecting_curve, 
            self_intersecting_surface ) )
    SUBTYPE OF ( inapt_geometry );
  END_ENTITY;

  ENTITY self_intersecting_loop
    SUBTYPE OF ( topology_related_to_self_intersecting_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      arc_length_distance_factor             : REAL;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE_LOOP'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_EDGE_CURVE', 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'POINT_ON_EDGE_CURVE' ] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY self_intersecting_shell
    SUBTYPE OF ( topology_related_to_self_intersecting_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      geodesic_separation_factor             : REAL;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_FACE_SURFACE', 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'POINT_ON_FACE_SURFACE' ] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY self_intersecting_surface
    SUBTYPE OF ( self_intersecting_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
      geodesic_separation_factor             : REAL;
      interference_tolerance                 : length_measure;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'POINT_ON_SURFACE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POINT_ON_SURFACE'] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY sequence_representation_item
    SUBTYPE OF ( compound_representation_item );
      the_value  : LIST OF representation_item;
  END_ENTITY;

  ENTITY sequential_laminate_assembly_relationship
    SUBTYPE OF ( assembled_part_association );
      SELF\product_occurrence_definition_relationship.relating_view : sequential_laminate_stackup_definition;
      SELF\product_occurrence_definition_relationship.related_view : sequential_laminate_stackup_component;
    DERIVE
      assembly   : sequential_laminate_stackup_definition := SELF\product_occurrence_definition_relationship.relating_view;
      component  : sequential_laminate_stackup_component := SELF\product_occurrence_definition_relationship.related_view;
    WHERE
      wr1: ( component\definition_based_product_occurrence.derived_from <> assembly );
  END_ENTITY;

  ENTITY sequential_laminate_stackup_component
    SUBTYPE OF ( physical_component, single_instance );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr2: ( SIZEOF( USEDIN( SELF\definition_based_product_occurrence.derived_from, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_DESIGN_VIEW.USAGE_VIEW'  ) ) > 0 );
  END_ENTITY;

  ENTITY sequential_laminate_stackup_definition
    SUBTYPE OF ( assembly_definition );
      associated_stratum_stack  : stack_or_sub_stack;
  END_ENTITY;

  ENTITY serial_effectivity
    SUBTYPE OF ( effectivity );
      start_id  : STRING;
      end_id    : OPTIONAL STRING;
  END_ENTITY;

  ENTITY set_representation_item
    SUBTYPE OF ( compound_representation_item );
      the_value  : SET OF representation_item;
  END_ENTITY;

  ENTITY shape_and_view_based_constraint_occurrence
    SUBTYPE OF ( view_based_constraint_occurrence );
      constraining_shape  : SET [1 : ?] OF geometric_model;
    WHERE
      wr1: valid_constraining_shape( constraining_shape, SELF\view_based_constraint_occurrence.constraining_part );
  END_ENTITY;

  ENTITY shape_criteria_representation_with_accuracy
    SUBTYPE OF ( shape_data_quality_criteria_representation );
      required_general_accuracy  : SET [1 : ?] OF shape_measurement_accuracy;
  END_ENTITY;

  ENTITY shape_data_quality_assessment_by_logical_test
    SUBTYPE OF ( data_quality_assessment_specification );
  END_ENTITY;

  ENTITY shape_data_quality_assessment_by_numerical_test
    SUBTYPE OF ( data_quality_assessment_specification );
      threshold  : shape_data_quality_value_limit_type_select;
  END_ENTITY;

  ENTITY shape_data_quality_criteria_representation
    SUBTYPE OF ( data_quality_criteria_representation );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SHAPE_DATA_QUALITY_CRITERION' ) IN 
               TYPEOF( q ) ) ) ) > 0 );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERICAL_REPRESENTATION_CONTEXT' IN TYPEOF( 
               context_of_items ) );
  END_ENTITY;

  ENTITY shape_data_quality_criterion
    SUPERTYPE OF ( 
        ONEOF ( 
            erroneous_data, 
            inapt_data ) )
    SUBTYPE OF ( data_quality_criterion, data_quality_measurement_requirement );
      assessment_specification  : shape_data_quality_assessment_specification_select;
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERION_ASSESSMENT_ASSOCIATION.'  + 'CRITERION' ) ) = 0 );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'DATA_QUALITY_CRITERION_MEASUREMENT_ASSOCIATION.'  + 'RELATING_REPRESENTATION_ITEM' ) ) = 0 );
  END_ENTITY;

  ENTITY shape_data_quality_criterion_and_accuracy_association;
      required_specific_accuracy    : shape_measurement_accuracy;
      shape_data_quality_criterion  : shape_data_quality_criterion;
  END_ENTITY;

  ENTITY shape_data_quality_inspected_shape_and_result_relationship
    SUBTYPE OF ( representation_relationship );
      SELF\representation_relationship.rep_1 : geometric_model;
      SELF\representation_relationship.rep_2 : shape_data_quality_inspection_result_representation;
    WHERE
      wr1: ( SIZEOF( using_product_view_definition_of_geometric_model( SELF.rep_1 ) * bag_to_set( 
               inspected_product_view_definition( SELF.rep_2 ) ) ) > 0 );
      wr2: ( SELF.rep_1\representation.context_of_items :=: SELF.rep_2\representation.context_of_items );
  END_ENTITY;

  ENTITY shape_data_quality_inspection_criterion_report
    SUBTYPE OF ( data_quality_inspection_criterion_report );
      representative_measured_value  : measured_value_select;
  END_ENTITY;

  ENTITY shape_data_quality_inspection_instance_report
    SUBTYPE OF ( data_quality_inspection_instance_report );
      SELF\data_quality_inspection_instance_report.inspected_instances : LIST [1 : ?] OF
                                                 shape_data_quality_inspection_instance_report_item;
  END_ENTITY;

  ENTITY shape_data_quality_inspection_instance_report_item
    SUBTYPE OF ( data_quality_inspection_instance_report_item );
      SELF\data_quality_inspection_instance_report_item.inspected_elements : SET [1 : ?] OF inspected_shape_element_select;
      measured_value                         : measured_value_select;
  END_ENTITY;

  ENTITY shape_data_quality_inspection_result
    SUBTYPE OF ( data_quality_inspection_result );
      SELF\data_quality_inspection_result.criterion_inspected : shape_data_quality_criterion;
  END_ENTITY;

  ENTITY shape_data_quality_inspection_result_representation
    SUBTYPE OF ( data_quality_inspection_result_representation );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\representation.items | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SHAPE_DATA_QUALITY_INSPECTION_RESULT' ) 
               IN TYPEOF( q ) ) ) ) > 0 );
      wr2: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_COORDINATE_SPACE' IN TYPEOF( SELF\
               representation.context_of_items ) );
      wr3: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'  + 'REP_2' ) ) > 0 );
  END_ENTITY;

  ENTITY shape_data_quality_lower_value_limit
    SUBTYPE OF ( shape_data_quality_value_limit );
    WHERE
      wr1: ( SELF\qualified_representation_item.qualifiers[1]\type_qualifier.name = 'minimum' );
  END_ENTITY;

  ENTITY shape_data_quality_upper_value_limit
    SUBTYPE OF ( shape_data_quality_value_limit );
    WHERE
      wr1: ( SELF\qualified_representation_item.qualifiers[1]\type_qualifier.name = 'maximum' );
  END_ENTITY;

  ENTITY shape_data_quality_value_limit
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            shape_data_quality_upper_value_limit, 
            shape_data_quality_lower_value_limit ) )
    SUBTYPE OF ( numerical_item_with_unit, qualified_representation_item );
      SELF\qualified_representation_item.qualifiers : SET [1 : 1] OF pre_defined_type_qualifier;
    WHERE
      wr1: ( SELF\qualified_representation_item.qualifiers[1]\type_qualifier.name IN [ 'minimum', 'maximum'] );
  END_ENTITY;

  ENTITY shape_data_quality_value_range
    SUBTYPE OF ( measure_item );
      lower_limit  : numerical_item_with_unit;
      upper_limit  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY shape_definition_3d_intersection
    SUPERTYPE OF ( 
        ONEOF ( 
            edge_segment_cross_section, 
            pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship, 
            pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship, 
            pre_defined_parallel_datum_axis_symbol_3d_2d_relationship ) 
        ANDOR
        ONEOF ( 
            pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship, 
            pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship, 
            pre_defined_parallel_datum_axis_symbol_3d_2d_relationship ) )
    SUBTYPE OF ( geometric_model_relationship );
      orientation_intersection_plane         : axis_placement_3d;
      planar_shape_origin                    : axis_placement_2d;
      SELF\geometric_model_relationship.rep_1 : geometric_model;
      SELF\geometric_model_relationship.rep_2 : planar_shape_model;
    DERIVE
      projected_volume             : geometric_model := SELF\geometric_model_relationship.rep_1;
      surface_intersection_result  : planar_shape_model := SELF\geometric_model_relationship.rep_2;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANAR_SHAPE_MODEL' IN TYPEOF( 
               projected_volume ) ) );
      wr2: ( NOT EXISTS( SELF\representation_relationship.relation_type ) );
  END_ENTITY;

  ENTITY shape_definition_3d_plane_projection
    SUBTYPE OF ( geometric_model_relationship );
      viewing_plane                          : axis_placement_3d;
      planar_shape_origin                    : axis_placement_2d;
      SELF\geometric_model_relationship.rep_1 : planar_shape_model;
      SELF\geometric_model_relationship.rep_2 : geometric_model;
    DERIVE
      projected_volume           : geometric_model := SELF\geometric_model_relationship.rep_2;
      surface_projection_result  : planar_shape_model := SELF\geometric_model_relationship.rep_1;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANAR_SHAPE_MODEL' IN TYPEOF( 
               projected_volume ) ) );
      wr2: ( NOT EXISTS( SELF\representation_relationship.relation_type ) );
  END_ENTITY;

  ENTITY shape_dependent_property_representation
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : assigned_shape_property;
  END_ENTITY;

  ENTITY shape_description_association
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : associated_item_shape;
      SELF\property_definition_representation.used_representation : shape_model;
  END_ENTITY;

  ENTITY shape_element
    SUPERTYPE OF ( 
        ONEOF ( 
            definitional_shape_element, 
            non_definitional_shape_element ) 
        ANDOR
        ONEOF ( 
            datum, 
            datum_target, 
            tolerance_zone ) 
        ANDOR
        ONEOF ( 
            instanced_feature, 
            placed_feature ) 
        ANDOR
        ONEOF ( 
            instanced_feature, 
            placed_feature ) 
        ANDOR
        ONEOF ( 
            definitional_shape_element, 
            non_definitional_shape_element ) );
      id                : OPTIONAL STRING;
      element_name      : STRING;
      description       : OPTIONAL STRING;
      containing_shape  : item_shape;
    UNIQUE
      ur1 : id, containing_shape;
    WHERE
      wr1: ( EXISTS( element_name ) OR ( TYPEOF( SELF\shape_element ) <> TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY shape_element_description_association
    SUBTYPE OF ( property_definition_representation );
      SELF\property_definition_representation.definition : shape_element_or_relationship_select;
      SELF\property_definition_representation.used_representation : shape_model;
  END_ENTITY;

  ENTITY shape_element_relationship;
      relation_type  : OPTIONAL STRING;
      description    : OPTIONAL STRING;
      relating       : shape_element;
      related        : shape_element;
    WHERE
      wr1: ( EXISTS( relation_type ) OR ( TYPEOF( SELF\shape_element_relationship ) <> TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY shape_element_relationship_representation_association;
      represented_shape_element_relationship : shape_element_relationship;
      representing_representation_relationship : representation_relationship;
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REPRESENTATIVE_GEOMETRIC_MODEL' IN TYPEOF( 
               representing_representation_relationship\representation_relationship.rep_1 ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REPRESENTATIVE_GEOMETRIC_MODEL'  IN TYPEOF( 
               representing_representation_relationship\representation_relationship.rep_2 ) ) );
  END_ENTITY;

  ENTITY shape_feature_definition
    SUBTYPE OF ( characterizable_object );
    DERIVE
      feature_model  : SET [1 : ?] OF geometric_model := get_geometric_model( of_shape );
    INVERSE
      of_shape : item_shape FOR described_element;
    WHERE
      wr1: EXISTS( feature_model );
  END_ENTITY;

  ENTITY shape_formed_terminal
    SUBTYPE OF ( altered_package_terminal );
  END_ENTITY;

  ENTITY shape_inspection_result_accuracy_association;
      applied_specific_accuracy  : shape_measurement_accuracy;
      shape_data_quality_result  : shape_data_quality_inspection_result;
  END_ENTITY;

  ENTITY shape_inspection_result_representation_with_accuracy
    SUBTYPE OF ( shape_data_quality_inspection_result_representation );
      applied_general_accuracy  : SET [1 : ?] OF shape_measurement_accuracy;
  END_ENTITY;

  ENTITY shape_measurement_accuracy;
      description  : text;
      range        : shape_data_quality_value_limit_type_select;
  END_ENTITY;

  ENTITY shape_placement_association
    SUBTYPE OF ( shape_description_association );
      SELF\shape_description_association.used_representation : geometric_placement_model;
      SELF\shape_description_association.definition : associated_contextual_item_shape;
  END_ENTITY;

  ENTITY shape_profile
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            circular_closed_shape_profile, 
            general_shape_profile, 
            partial_circular_shape_profile, 
            rectangular_closed_shape_profile, 
            rectangular_open_shape_profile ) )
    SUBTYPE OF ( profile_feature );
      floor_condition    : profile_select;
      removal_direction  : direction_element;
  END_ENTITY;

  ENTITY shape_summary_request_with_representative_value
    SUBTYPE OF ( summary_report_request );
  END_ENTITY;

  ENTITY shell_based_surface_model
    SUBTYPE OF ( detailed_geometric_model_element );
      boundary  : SET [1 : ?] OF connected_face_set;
  END_ENTITY;

  ENTITY shell_based_wireframe_shape_representation
    SUBTYPE OF ( geometric_model );
  END_ENTITY;

  ENTITY short_length_curve
    SUBTYPE OF ( nearly_degenerate_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CURVE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY short_length_curve_segment
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_CURVE_SEGMENT'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY short_length_edge
    SUBTYPE OF ( topology_related_to_nearly_degenerate_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'EDGE_CURVE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY signal;
      name  : STRING;
    INVERSE
      signal_category : external_source_identification FOR item;
    UNIQUE
      ur1 : name;
  END_ENTITY;

  ENTITY signal_property
    SUPERTYPE OF ( 
        composite_signal_property );
      signal_property_representation  : characteristic_data_table;
      characterized_signal            : signal;
    INVERSE
      signal_property_category : external_source_identification FOR item;
  END_ENTITY;

  ENTITY signal_specification;
      signal_access_mechanism     : fs_node_or_terminal;
      reference_access_mechanism  : OPTIONAL fs_node_or_terminal;
      minimum_characteristic      : OPTIONAL signal_property;
      maximum_characteristic      : OPTIONAL signal_property;
      characterization_network    : functional_unit_network_definition;
      nominal_characteristic      : OPTIONAL signal_property;
    DERIVE
      measurement_condition  : SET [1 : 1] OF document_definition := get_document_definition( SELF, 'measurement condition', 
                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TEST_SPECIFICATION'  );
    WHERE
      wr1: ( EXISTS( minimum_characteristic ) OR EXISTS( maximum_characteristic ) OR EXISTS( nominal_characteristic ) );
  END_ENTITY;

  ENTITY significant_number_of_digits;
      number_of_digits  : INTEGER;
  END_ENTITY;

  ENTITY silhouette_curve_appearance
    SUBTYPE OF ( surface_related_curve_appearance );
  END_ENTITY;

  ENTITY simple_boolean_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            boolean_literal, 
            boolean_variable ) )
    SUBTYPE OF ( boolean_expression, simple_generic_expression );
  END_ENTITY;

  ENTITY simple_clause
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            literal_conjunction, 
            literal_disjunction ) );
      formulas  : LIST [1 : ?] OF rule_condition;
  END_ENTITY;

  ENTITY simple_generic_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            generic_literal, 
            generic_variable ) )
    SUBTYPE OF ( generic_expression );
  END_ENTITY;

  ENTITY simple_numeric_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            literal_number, 
            numeric_variable ) )
    SUBTYPE OF ( numeric_expression, simple_generic_expression );
  END_ENTITY;

  ENTITY simple_string_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            string_literal, 
            string_variable ) )
    SUBTYPE OF ( string_expression, simple_generic_expression );
  END_ENTITY;

  ENTITY simultaneous_constraint_group
    SUBTYPE OF ( variational_representation_item );
      constraint_group  : SET [2 : ?] OF constraint_group_member;
  END_ENTITY;

  ENTITY sin_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY single_area_csg_2d_model
    SUBTYPE OF ( csg_2d_model );
      SELF\representation.items  : SET [1 : 1] OF primitive_2d;
  END_ENTITY;

  ENTITY single_boundary_csg_2d_model
    SUBTYPE OF ( single_area_csg_2d_model );
  END_ENTITY;

  ENTITY single_instance
    SUBTYPE OF ( product_occurrence );
  END_ENTITY;

  ENTITY single_property_is_definition
    SUBTYPE OF ( assigned_property );
      SELF\assigned_property.described_element : product_view_definition;
    UNIQUE
      ur1 : SELF\assigned_property.described_element;
  END_ENTITY;

  ENTITY single_requirement_view_definition
    SUBTYPE OF ( requirement_view_definition );
    INVERSE
      definition : single_property_is_definition FOR described_element;
  END_ENTITY;

  ENTITY single_stratum_continuous_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            stratum_feature_template, 
            material_removal_feature_template ) )
    SUBTYPE OF ( continuous_template, single_stratum_template );
  END_ENTITY;

  ENTITY single_stratum_printed_component
    SUBTYPE OF ( printed_component, structured_layout_component );
      SELF\printed_component.derived_from  : single_stratum_printed_part_template;
      stratum_feature_implementation       : SET [1 : ?] OF stratum_feature;
    WHERE
      wr1: ( SIZEOF( QUERY ( sfi <* stratum_feature_implementation | ( NOT ( sfi.resident_stratum = 
               stratum_feature_implementation[1].resident_stratum ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY single_stratum_printed_part_template
    SUBTYPE OF ( structured_printed_part_template, single_stratum_structured_template );
  END_ENTITY;

  ENTITY single_stratum_special_symbol_component
    SUPERTYPE OF ( 
        primary_stratum_indicator_symbol )
    SUBTYPE OF ( structured_layout_component );
      SELF\definition_based_product_occurrence.derived_from : single_stratum_special_symbol_template;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY single_stratum_special_symbol_template
    SUBTYPE OF ( single_stratum_structured_template, special_symbol_template );
  END_ENTITY;

  ENTITY single_stratum_structured_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            material_removal_structured_template, 
            single_stratum_special_symbol_template ) )
    SUBTYPE OF ( structured_template, single_stratum_template );
    WHERE
      wr1: ( SIZEOF( QUERY ( tp <* SELF\structured_template.templates | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_STRATUM_TEMPLATE'  IN TYPEOF( tp.
               template ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY single_stratum_template
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( template_definition );
  END_ENTITY;

  ENTITY sketch_2d_representation
    SUBTYPE OF ( geometric_model );
      sketch_2d_semantics        : curves_or_area;
      SELF\representation.items  : SET [1 : ?] OF sketch_element_select;
    WHERE
      wr1: ( SELF\representation.context_of_items\geometric_coordinate_space.dimension_count = 2 );
  END_ENTITY;

  ENTITY skew_line_distance_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : 2] OF line;
      SELF\explicit_constraint.reference_elements : SET [0 : 1] OF line;
      distance                               : length_measure;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.constrained_elements + SELF\explicit_constraint.reference_elements ) = 2 );
      wr2: ( distance >= 0 );
  END_ENTITY;

  ENTITY slash_expression
    SUBTYPE OF ( binary_numeric_expression );
  END_ENTITY;

  ENTITY sliding_curve_pair
    SUBTYPE OF ( planar_curve_pair );
  END_ENTITY;

  ENTITY sliding_curve_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : sliding_curve_pair;
      actual_point_on_curve_1          : point_on_curve;
      actual_point_on_curve_2          : point_on_curve;
    WHERE
      wr1: ( SELF\pair_value.applies_to_pair\planar_curve_pair.curve_1 :=: actual_point_on_curve_1.supporting_curve );
      wr2: ( SELF\pair_value.applies_to_pair\planar_curve_pair.curve_2 :=: actual_point_on_curve_2.supporting_curve );
  END_ENTITY;

  ENTITY sliding_surface_pair
    SUBTYPE OF ( surface_pair );
  END_ENTITY;

  ENTITY sliding_surface_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : sliding_surface_pair;
      actual_point_on_surface_1        : point_on_surface;
      actual_point_on_surface_2        : point_on_surface;
      actual_rotation                  : plane_angle_measure;
    WHERE
      wr1: ( SELF\pair_value.applies_to_pair\surface_pair.surface_1 :=: actual_point_on_surface_1.supporting_surface );
      wr2: ( SELF\pair_value.applies_to_pair\surface_pair.surface_2 :=: actual_point_on_surface_2.supporting_surface );
  END_ENTITY;

  ENTITY slot
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            closed_slot, 
            open_slot ) )
    SUBTYPE OF ( multi_axis_feature );
  END_ENTITY;

  ENTITY slot_end_type
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            flat_slot_end_type, 
            open_slot_end_type, 
            radiused_slot_end_type, 
            woodruff_slot_end_type ) );
      first_or_second  : BOOLEAN;
  END_ENTITY;

  ENTITY small_area_face
    SUBTYPE OF ( topology_related_to_nearly_degenerate_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'] );
  END_ENTITY;

  ENTITY small_area_surface
    SUBTYPE OF ( nearly_degenerate_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'] );
  END_ENTITY;

  ENTITY small_area_surface_patch
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'B_SPLINE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_PATCH'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_MEASURE'] );
  END_ENTITY;

  ENTITY small_volume_solid
    SUBTYPE OF ( inapt_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.VOLUME_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.VOLUME_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.VOLUME_MEASURE'] );
  END_ENTITY;

  ENTITY smeared_material
    SUBTYPE OF ( zone_structural_makeup );
      total_thickness  : length_data_element;
  END_ENTITY;

  ENTITY snowball_template
    SUBTYPE OF ( teardrop_template );
      snowball_start_distance      : length_data_element;
      snowball_end_distance        : OPTIONAL length_data_element;
      snowball_initial_spacing     : OPTIONAL length_data_element;
      snowball_end_spacing         : OPTIONAL length_data_element;
      snowball_initial_radius      : length_data_element;
      snowball_end_radius          : OPTIONAL length_data_element;
      snowball_quantity_per_trace  : INTEGER;
    WHERE
      wr1: ( ( NOT ( snowball_quantity_per_trace > 1 ) ) OR ( EXISTS( snowball_initial_spacing ) AND EXISTS( snowball_end_spacing ) 
               AND EXISTS( snowball_end_distance ) AND EXISTS( snowball_end_radius ) ) );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL.' 
               + 'SHAPE_CHARACTERIZED_DEFINITION' ) ) = 0 );
      wr3: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY software
    SUBTYPE OF ( information_product );
    UNIQUE
      ur1 : SELF\product.id;
  END_ENTITY;

  ENTITY software_definition
    SUBTYPE OF ( information_definition );
      SELF\product_view_definition.defined_version : software_version;
  END_ENTITY;

  ENTITY software_for_data_quality_check;
      description       : STRING;
      software_name     : STRING;
      software_version  : STRING;
      data_quality      : data_quality_definition_representation_relationship;
  END_ENTITY;

  ENTITY software_version
    SUBTYPE OF ( information_version );
      SELF\product_version.of_product  : software;
  END_ENTITY;

  ENTITY solid_angle_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_ANGLE_UNIT' IN TYPEOF( SELF\
               value_with_unit.unit ) );
  END_ENTITY;

  ENTITY solid_angle_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY solid_character_glyph_2d_symbol
    SUBTYPE OF ( character_glyph_symbol, csg_2d_model );
  END_ENTITY;

  ENTITY solid_curve_font
    SUBTYPE OF ( predefined_curve_font );
    WHERE
      wr1: ( SELF.curve_font_name IN [ 'continuous'] );
  END_ENTITY;

  ENTITY solid_fill_area_style;
      fill_colour  : colour;
  END_ENTITY;

  ENTITY solid_model
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY solid_model_element
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY solid_of_revolution
    SUBTYPE OF ( swept_solid );
      angle  : plane_angle_measure;
      axis   : axis1_placement;
  END_ENTITY;

  ENTITY solid_of_revolution_with_trim_conditions
    SUBTYPE OF ( solid_of_revolution );
      start_condition  : trim_select;
      end_condition    : trim_select;
  END_ENTITY;

  ENTITY solid_with_angled_chamfer
    SUBTYPE OF ( solid_with_edge_modification );
      offset_distance  : length_measure;
      left_offset      : BOOLEAN;
      offset_angle     : plane_angle_measure;
    WHERE
      wr1: ( offset_distance > 0 );
      wr2: ( offset_angle > 0 );
  END_ENTITY;

  ENTITY solid_with_circular_pattern
    SUBTYPE OF ( modified_solid );
      location            : axis_placement;
      replicated_element  : solid_with_placed_feature;
      replicate_count     : INTEGER;
      angular_spacing     : plane_angle_measure;
      radial_alignment    : BOOLEAN;
      reference_point     : cartesian_point;
    WHERE
      wr1: ( replicate_count > 0 );
  END_ENTITY;

  ENTITY solid_with_circular_pocket
    SUBTYPE OF ( solid_with_pocket );
      pocket_radius  : length_measure;
    WHERE
      wr1: ( SELF\solid_with_pocket.floor_blend_radius <= pocket_radius );
      wr2: ( pocket_radius > 0 );
  END_ENTITY;

  ENTITY solid_with_circular_protrusion
    SUBTYPE OF ( solid_with_protrusion );
      radius  : length_measure;
    WHERE
      wr1: ( radius >= 0 );
  END_ENTITY;

  ENTITY solid_with_conical_bottom_hole
    SUBTYPE OF ( solid_with_stepped_round_hole );
      semi_apex_angle  : plane_angle_measure;
      tip_radius       : length_measure;
    WHERE
      wr1: ( tip_radius < SELF\solid_with_stepped_round_hole.segment_radii[segments] );
      wr2: ( tip_radius >= 0 );
      wr3: ( semi_apex_angle > 0 );
  END_ENTITY;

  ENTITY solid_with_curved_slot
    SUBTYPE OF ( solid_with_slot );
      slot_centreline  : detailed_geometric_model_element;
  END_ENTITY;

  ENTITY solid_with_depression
    ABSTRACT SUPERTYPE OF ( 
        solid_with_through_depression 
        ANDOR
        ONEOF ( 
            solid_with_stepped_round_hole, 
            solid_with_pocket, 
            solid_with_slot, 
            solid_with_groove ) )
    SUBTYPE OF ( modified_solid );
      location  : axis_placement;
      depth     : length_measure;
    WHERE
      wr1: ( depth > 0 );
  END_ENTITY;

  ENTITY solid_with_double_offset_chamfer
    SUBTYPE OF ( solid_with_edge_modification );
      left_offset_distance   : length_measure;
      right_offset_distance  : length_measure;
    WHERE
      wr1: ( left_offset_distance > 0 );
      wr2: ( right_offset_distance > 0 );
  END_ENTITY;

  ENTITY solid_with_edge_modification
    SUPERTYPE OF ( 
        path_modified_solid 
        ANDOR
        ONEOF ( 
            solid_with_fixed_radius_edge_blend, 
            solid_with_simple_chamfer, 
            solid_with_double_offset_chamfer, 
            solid_with_angled_chamfer ) )
    SUBTYPE OF ( modified_solid );
      blended_edges  : LIST [1 : ?] OF edge;
  END_ENTITY;

  ENTITY solid_with_excessive_number_of_voids
    SUBTYPE OF ( inapt_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY solid_with_fixed_radius_edge_blend
    SUBTYPE OF ( solid_with_edge_modification );
      radius  : length_measure;
    WHERE
      wr1: ( radius > 0 );
  END_ENTITY;

  ENTITY solid_with_flat_bottom_hole
    SUBTYPE OF ( solid_with_stepped_round_hole );
      fillet_radius  : length_measure;
    WHERE
      wr1: ( fillet_radius < SELF\solid_with_stepped_round_hole.segment_radii[segments] );
      wr2: ( fillet_radius >= 0 );
  END_ENTITY;

  ENTITY solid_with_general_pocket
    SUBTYPE OF ( solid_with_pocket );
      profile          : detailed_geometric_model_element;
      reference_point  : cartesian_point;
  END_ENTITY;

  ENTITY solid_with_general_protrusion
    SUBTYPE OF ( solid_with_protrusion );
      profile          : detailed_geometric_model_element;
      reference_point  : cartesian_point;
  END_ENTITY;

  ENTITY solid_with_groove
    SUBTYPE OF ( solid_with_depression );
      groove_radius        : length_measure;
      groove_width         : length_measure;
      draft_angle          : plane_angle_measure;
      floor_fillet_radius  : length_measure;
      external_groove      : BOOLEAN;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION' IN TYPEOF( 
               SELF ) ) );
      wr2: ( groove_radius > 0 );
      wr3: ( groove_width > 0 );
      wr4: ( floor_fillet_radius >= 0 );
  END_ENTITY;

  ENTITY solid_with_incomplete_circular_pattern
    SUBTYPE OF ( solid_with_circular_pattern );
      omitted_instances  : SET [1 : ?] OF INTEGER;
    WHERE
      wr1: ( SIZEOF( omitted_instances ) < SELF\solid_with_circular_pattern.replicate_count );
      wr2: ( SIZEOF( QUERY ( q <* omitted_instances | ( q > SELF\solid_with_circular_pattern.replicate_count ) ) ) = 0 );
  END_ENTITY;

  ENTITY solid_with_incomplete_rectangular_pattern
    SUBTYPE OF ( solid_with_rectangular_pattern );
      omitted_instances  : SET [1 : ?] OF LIST [1 : 2] OF INTEGER;
    WHERE
      wr1: ( NOT ( [1, 1] IN omitted_instances ) );
      wr2: ( SIZEOF( omitted_instances ) < ( ( SELF\solid_with_rectangular_pattern.row_count * SELF\
               solid_with_rectangular_pattern.column_count ) - 1 ) );
      wr3: ( SIZEOF( QUERY ( q <* omitted_instances | ( ( q[1] > SELF\solid_with_rectangular_pattern.row_count ) OR ( q[2] > SELF
               \solid_with_rectangular_pattern.column_count ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY solid_with_offset_faces
    SUBTYPE OF ( modified_solid );
      offset_faces      : LIST [1 : ?] OF SET [1 : ?] OF advanced_face;
      offset_distances  : LIST [1 : ?] OF length_measure;
    WHERE
      wr1: ( SIZEOF( offset_faces ) = SIZEOF( offset_distances ) );
  END_ENTITY;

  ENTITY solid_with_pocket
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            solid_with_rectangular_pocket, 
            solid_with_circular_pocket, 
            solid_with_general_pocket ) )
    SUBTYPE OF ( solid_with_depression );
      floor_blend_radius  : length_measure;
      draft_angle         : plane_angle_measure;
    WHERE
      wr1: ( floor_blend_radius >= 0 );
  END_ENTITY;

  ENTITY solid_with_protrusion
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            solid_with_circular_protrusion, 
            solid_with_rectangular_protrusion, 
            solid_with_general_protrusion ) )
    SUBTYPE OF ( modified_solid );
      location     : axis_placement;
      height       : length_measure;
      draft_angle  : plane_angle_measure;
    WHERE
      wr1: ( height > 0 );
  END_ENTITY;

  ENTITY solid_with_rectangular_pattern
    SUBTYPE OF ( modified_solid );
      location            : axis_placement;
      replicated_element  : solid_with_placed_feature;
      row_count           : INTEGER;
      column_count        : INTEGER;
      row_spacing         : length_measure;
      column_spacing      : length_measure;
    WHERE
      wr1: ( ( row_count * column_count ) > 1 );
      wr2: ( row_spacing > 0 );
      wr3: ( column_spacing > 0 );
  END_ENTITY;

  ENTITY solid_with_rectangular_pocket
    SUBTYPE OF ( solid_with_pocket );
      pocket_length  : length_measure;
      pocket_width   : length_measure;
      corner_radius  : length_measure;
    WHERE
      wr1: ( ( corner_radius < ( pocket_width / 2 ) ) AND ( corner_radius < ( pocket_length / 2 ) ) );
      wr2: ( pocket_length > 0 );
      wr3: ( pocket_width > 0 );
      wr4: ( corner_radius >= 0 );
  END_ENTITY;

  ENTITY solid_with_rectangular_protrusion
    SUBTYPE OF ( solid_with_protrusion );
      protrusion_length  : length_measure;
      width              : length_measure;
      corner_radius      : length_measure;
    WHERE
      wr1: ( ( corner_radius <= ( width / 2 ) ) AND ( corner_radius <= ( protrusion_length / 2 ) ) );
      wr2: ( protrusion_length > 0 );
      wr3: ( width > 0 );
      wr4: ( corner_radius >= 0 );
  END_ENTITY;

  ENTITY solid_with_simple_chamfer
    SUBTYPE OF ( solid_with_edge_modification );
      offset_distance  : length_measure;
    WHERE
      wr1: ( offset_distance > 0 );
  END_ENTITY;

  ENTITY solid_with_slot
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            solid_with_trapezoidal_slot, 
            solid_with_tee_slot ) 
        AND
        ONEOF ( 
            solid_with_straight_slot, 
            solid_with_curved_slot ) )
    SUBTYPE OF ( solid_with_depression );
      slot_width      : length_measure;
      closed_ends     : LIST [2 : 2] OF LOGICAL;
      end_exit_faces  : LIST [2 : 2] OF SET [0 : ?] OF advanced_face;
    WHERE
      wr1: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION' IN 
               TYPEOF( SELF ) ) AND ( closed_ends = [FALSE, FALSE] ) ) );
      wr2: ( NOT ( ( ( closed_ends[1] = TRUE ) AND ( SIZEOF( end_exit_faces[1] ) <> 0 ) ) OR ( ( closed_ends[2] = TRUE ) AND ( 
               SIZEOF( end_exit_faces[2] ) <> 0 ) ) ) );
      wr3: ( slot_width > 0 );
  END_ENTITY;

  ENTITY solid_with_spherical_bottom_hole
    SUBTYPE OF ( solid_with_stepped_round_hole );
      sphere_radius  : length_measure;
    WHERE
      wr1: ( sphere_radius >= SELF\solid_with_stepped_round_hole.segment_radii[segments] );
  END_ENTITY;

  ENTITY solid_with_stepped_round_hole
    SUPERTYPE OF ( 
        solid_with_stepped_round_hole_and_conical_transitions 
        ANDOR
        ONEOF ( 
            solid_with_flat_bottom_hole, 
            solid_with_conical_bottom_hole, 
            solid_with_spherical_bottom_hole ) )
    SUBTYPE OF ( solid_with_depression );
      segments        : INTEGER;
      segment_radii   : LIST [1 : segments] OF length_measure;
      segment_depths  : LIST [1 : segments] OF length_measure;
    DERIVE
      SELF\solid_with_depression.depth  : length_measure := calculate_depth( SELF );
    WHERE
      wr1: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_THROUGH_DEPRESSION' IN 
               TYPEOF( SELF ) ) AND ( SIZEOF( TYPEOF( SELF ) * [
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_FLAT_BOTTOM_HOLE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_CONICAL_BOTTOM_HOLE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_SPHERICAL_BOTTOM_HOLE' ] ) <> 0 ) ) );
  END_ENTITY;

  ENTITY solid_with_stepped_round_hole_and_conical_transitions
    SUBTYPE OF ( solid_with_stepped_round_hole );
      conical_transitions  : SET [1 : ?] OF conical_stepped_hole_transition;
    WHERE
      wr1: ( SIZEOF( conical_transitions ) <= ( SELF\solid_with_stepped_round_hole.segments + 1 ) );
      wr2: ( ( 'SOLID_SHAPE_ELEMENT_SCHEMA.SOLID_WITH_THROUGH_DEPRESSION' IN TYPEOF( SELF ) ) XOR ( SIZEOF( conical_transitions ) 
               <= SELF\solid_with_stepped_round_hole.segments ) );
  END_ENTITY;

  ENTITY solid_with_straight_slot
    SUBTYPE OF ( solid_with_slot );
      slot_length  : length_measure;
    WHERE
      wr1: ( slot_length > 0 );
  END_ENTITY;

  ENTITY solid_with_tee_slot
    SUBTYPE OF ( solid_with_slot );
      tee_section_width  : length_measure;
      collar_depth       : length_measure;
    WHERE
      wr1: ( collar_depth < SELF\solid_with_depression.depth );
      wr2: ( tee_section_width > SELF\solid_with_slot.slot_width );
      wr3: ( tee_section_width > 0 );
      wr4: ( collar_depth > 0 );
  END_ENTITY;

  ENTITY solid_with_through_depression
    SUBTYPE OF ( solid_with_depression );
      exit_faces  : SET [1 : ?] OF advanced_face;
  END_ENTITY;

  ENTITY solid_with_trapezoidal_slot
    SUBTYPE OF ( solid_with_slot );
      draft_angle          : plane_angle_measure;
      floor_fillet_radius  : length_measure;
    WHERE
      wr1: ( floor_fillet_radius >= 0 );
  END_ENTITY;

  ENTITY solid_with_variable_radius_edge_blend
    SUBTYPE OF ( path_modified_solid );
      interpolation_points  : LIST [2 : ?] OF cartesian_point;
      radii                 : LIST [2 : ?] OF length_measure;
      variations            : LIST [2 : ?] OF blend_radius_variation;
    WHERE
      wr1: ( SIZEOF( blended_edges ) = SIZEOF( radii ) );
      wr2: ( SIZEOF( variations ) = ( SIZEOF( interpolation_points ) - 1 ) );
      wr3: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_FIXED_RADIUS_EDGE_BLEND', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_SIMPLE_CHAMFER' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_DOUBLE_OFFSET_CHAMFER' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_WITH_ANGLED_CHAMFER' ] * TYPEOF( SELF ) ) 
               = 0 );
  END_ENTITY;

  ENTITY solid_with_wrong_number_of_voids
    SUBTYPE OF ( erroneous_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY solution_element;
      resolved_requirement  : complex_product_select;
      element               : product_occurrence;
      description           : OPTIONAL STRING;
  END_ENTITY;

  ENTITY special_symbol_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            single_stratum_special_symbol_template, 
            multi_stratum_special_symbol_template ) )
    SUBTYPE OF ( template_definition );
  END_ENTITY;

  ENTITY specification;
      id           : STRING;
      version_id   : OPTIONAL STRING;
      name         : OPTIONAL STRING;
      description  : OPTIONAL STRING;
      category     : specification_category;
      package      : BOOLEAN;
  END_ENTITY;

  ENTITY specification_allocation
    SUBTYPE OF ( document_assignment );
      SELF\document_assignment.assigned_document : specification_definition;
    DERIVE
      allocated_specification  : specification_definition := SELF\document_assignment.assigned_document;
  END_ENTITY;

  ENTITY specification_based_part_version
    SUBTYPE OF ( specification_based_product_version, part_version );
  END_ENTITY;

  ENTITY specification_based_product_occurrence
    SUBTYPE OF ( product_occurrence );
      SELF\product_view_definition.defined_version : specification_based_part_version;
  END_ENTITY;

  ENTITY specification_based_product_version
    SUBTYPE OF ( product_version );
    INVERSE
      specification_source : item_design_association FOR design;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_SPECIFICATION' IN TYPEOF( 
               specification_source.configuration ) );
  END_ENTITY;

  ENTITY specification_category;
      id                            : STRING;
      description                   : STRING;
      implicit_exclusive_condition  : BOOLEAN;
  END_ENTITY;

  ENTITY specification_category_breakdown_influence;
      influencing_category       : class_category_association;
      influenced_breakdown_node  : breakdown_element_select;
  END_ENTITY;

  ENTITY specification_category_hierarchy;
      sub_category    : specification_category;
      super_category  : specification_category;
  END_ENTITY;

  ENTITY specification_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            design_specification, 
            process_specification, 
            material_specification, 
            test_specification, 
            language_reference_manual ) )
    SUBTYPE OF ( document_definition );
    DERIVE
      source  : SET [0 : ?] OF organization_or_person_in_organization_assignment := bag_to_set( QUERY ( temp <* USEDIN( SELF, 
                  'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
                  'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS'  ) | ( temp.role = 'document source' ) ) );
    WHERE
      wr1: ( EXISTS( source ) AND ( SIZEOF( source ) = 1 ) );
  END_ENTITY;

  ENTITY specification_expression;
      id           : OPTIONAL STRING;
      description  : OPTIONAL STRING;
      operation    : expression_operator;
      operand      : SET [1 : ?] OF specification_operand_select;
    WHERE
      wr1: ( ( operation <> not_operator ) OR ( SIZEOF( operand ) = 1 ) );
  END_ENTITY;

  ENTITY specification_inclusion;
      id                      : OPTIONAL STRING;
      description             : OPTIONAL STRING;
      if_condition            : specification_operand_select;
      included_specification  : specification_operand_select;
  END_ENTITY;

  ENTITY sphere
    SUBTYPE OF ( detailed_geometric_model_element );
      radius  : length_measure;
      centre  : cartesian_point;
    WHERE
      wr1: ( radius > 0 );
  END_ENTITY;

  ENTITY spherical_cap
    SUBTYPE OF ( machining_feature );
      internal_angle  : numerical_item_with_unit;
      radius          : numerical_item_with_unit;
  END_ENTITY;

  ENTITY spherical_hole_bottom
    SUBTYPE OF ( blind_bottom_condition );
      radius  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY spherical_pair
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := TRUE;
  END_ENTITY;

  ENTITY spherical_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : spherical_pair;
      input_orientation                : spatial_rotation;
  END_ENTITY;

  ENTITY spherical_pair_with_pin
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := TRUE;
  END_ENTITY;

  ENTITY spherical_pair_with_pin_and_range
    SUBTYPE OF ( spherical_pair_with_pin );
      lower_limit_yaw   : OPTIONAL plane_angle_measure;
      upper_limit_yaw   : OPTIONAL plane_angle_measure;
      lower_limit_roll  : OPTIONAL plane_angle_measure;
      upper_limit_roll  : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_yaw ) ) OR ( NOT EXISTS( upper_limit_yaw ) ) ) XOR ( lower_limit_yaw < upper_limit_yaw ) );
      wr2: ( ( ( NOT EXISTS( lower_limit_roll ) ) OR ( NOT EXISTS( upper_limit_roll ) ) ) XOR ( lower_limit_roll < 
               upper_limit_roll ) );
  END_ENTITY;

  ENTITY spherical_pair_with_range
    SUBTYPE OF ( spherical_pair );
      lower_limit_yaw    : OPTIONAL plane_angle_measure;
      upper_limit_yaw    : OPTIONAL plane_angle_measure;
      lower_limit_pitch  : OPTIONAL plane_angle_measure;
      upper_limit_pitch  : OPTIONAL plane_angle_measure;
      lower_limit_roll   : OPTIONAL plane_angle_measure;
      upper_limit_roll   : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_yaw ) ) OR ( NOT EXISTS( upper_limit_yaw ) ) ) XOR ( lower_limit_yaw < upper_limit_yaw ) );
      wr2: ( ( ( NOT EXISTS( lower_limit_pitch ) ) OR ( NOT EXISTS( upper_limit_pitch ) ) ) XOR ( lower_limit_pitch < 
               upper_limit_pitch ) );
      wr3: ( ( ( NOT EXISTS( lower_limit_roll ) ) OR ( NOT EXISTS( upper_limit_roll ) ) ) XOR ( lower_limit_roll < 
               upper_limit_roll ) );
  END_ENTITY;

  ENTITY spherical_surface
    SUBTYPE OF ( surface );
      position  : axis_placement_3d;
      radius    : length_measure;
    WHERE
      wr1: ( radius > 0 );
  END_ENTITY;

  ENTITY spur_gear
    SUBTYPE OF ( defined_gear );
  END_ENTITY;

  ENTITY sql_mappable_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( defined_function );
  END_ENTITY;

  ENTITY square_root_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY square_u_profile
    SUBTYPE OF ( open_profile );
      first_angle    : numerical_item_with_unit;
      second_angle   : numerical_item_with_unit;
      first_radius   : OPTIONAL numerical_item_with_unit;
      second_radius  : OPTIONAL numerical_item_with_unit;
      depth          : numerical_item_with_unit;
      width          : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY stackup_requirement_to_design_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.relating_view : layered_interconnect_module_design_view;
      SELF\view_definition_relationship.related_view : sequential_laminate_stackup_definition;
    WHERE
      wr1: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
  END_ENTITY;

  ENTITY standard_uncertainty
    SUPERTYPE OF ( 
        expanded_uncertainty )
    SUBTYPE OF ( uncertainty_qualifier );
      uncertainty_value  : REAL;
  END_ENTITY;

  ENTITY statistical_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [2 : ?] OF numerical_item_with_unit;
  END_ENTITY;

  ENTITY steep_angle_between_adjacent_edges
    SUBTYPE OF ( steep_geometry_transition_across_edge );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE'  );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EDGE_LOOP'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ORIENTED_EDGE' ] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE' ] );
  END_ENTITY;

  ENTITY steep_angle_between_adjacent_faces
    SUBTYPE OF ( steep_geometry_transition_across_edge );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE'  );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONNECTED_FACE_SET' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'POINT_ON_EDGE_CURVE'] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE' ] );
  END_ENTITY;

  ENTITY steep_geometry_transition_across_edge
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            steep_angle_between_adjacent_edges, 
            steep_angle_between_adjacent_faces ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY step
    SUBTYPE OF ( multi_axis_feature );
      removal_boundary    : vee_profile;
      course_of_travel    : linear_path_feature_component;
      volume_not_removed  : SET [0 : ?] OF volume_select;
  END_ENTITY;

  ENTITY step_edge_feature_shape_model
    SUBTYPE OF ( edge_shape_model );
      step_width  : length_tolerance_characteristic;
      step_depth  : length_tolerance_characteristic;
  END_ENTITY;

  ENTITY stock_core
    SUBTYPE OF ( stock_material );
  END_ENTITY;

  ENTITY stock_material
    SUPERTYPE OF ( 
        ONEOF ( 
            anisotropic_material, 
            braided_assembly, 
            discontinuous_fiber_assembly, 
            filament_assembly, 
            isotropic_material, 
            stock_core, 
            woven_assembly ) )
    SUBTYPE OF ( part_view_definition );
      property             : SET [1 : ?] OF material_property_value_representation;
      reference_direction  : OPTIONAL material_direction;
      specified_material   : material_specification;
  END_ENTITY;

  ENTITY straight_bevel_gear
    SUBTYPE OF ( bevel_gear );
  END_ENTITY;

  ENTITY straight_knurl
    SUBTYPE OF ( turned_knurl );
  END_ENTITY;

  ENTITY straightness_tolerance
    SUBTYPE OF ( geometric_tolerance );
    INVERSE
      directed_or_oriented_tolerance_zone : SET [0 : 1] OF directed_or_oriented_tolerance_zone FOR zone_for;
  END_ENTITY;

  ENTITY stratum
    SUPERTYPE OF ( 
        ONEOF ( 
            documentation_layer_stratum, 
            design_layer_stratum ) )
    SUBTYPE OF ( part_shape, part_view_definition );
      SELF\product_view_definition.id  : STRING;
      definition                       : stratum_technology_occurrence;
    DERIVE
      of_average_surface                 : SET [0 : 1] OF stratum_average_surface := QUERY ( tmp <* of_surface | ( 
                                             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                             + 'STRATUM_AVERAGE_SURFACE'  IN TYPEOF( tmp ) ) );
      SELF\item_shape.described_element  : stratum := SELF;
      base_component                     : SET [0 : ?] OF area_component := get_base_component( SELF );
      of_product_version                 : SET [1 : ?] OF product_version := bag_to_set( QUERY ( pv <* USEDIN( assembly[1].
                                             assembly.defined_version.of_product, 
                                             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VERSION.'
                                             + 'OF_PRODUCT'  ) | ( SIZEOF( QUERY ( pd <* USEDIN( pv, 
                                             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                             + 'PRODUCT_VIEW_DEFINITION.DEFINED_VERSION'  ) | ( SIZEOF( QUERY ( nauo <* USEDIN( 
                                             pd, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                             + 'INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.ASSEMBLY'  ) | ( SELF = nauo.
                                             component ) ) ) = 1 ) ) ) = 1 ) ) );
      of_technology                      : stratum_technology := definition\stratum_technology_occurrence.definition;
    INVERSE
      of_surface : SET [0 : 3] OF stratum_surface FOR of_stratum;
      assembly  : SET [1 : ?] OF interconnect_module_stratum_assembly_relationship FOR component;
      stratum_usage : SET [0 : 1] OF external_source_identification FOR item;
      material_product : SET [0 : 1] OF make_from_relationship FOR related_view;
    WHERE
      wr1 : ( SIZEOF( QUERY ( tmp <* of_surface | ( tmp\stratum_surface.name = stratum_surface_designation.average_surface ) ) ) 
                <= 1 );
      wr2 : ( ( NOT ( SIZEOF( QUERY ( tmp <* of_surface | ( tmp\stratum_surface.name = stratum_surface_designation.
                average_surface ) ) ) = 1 ) ) OR ( SIZEOF( of_surface ) = 3 ) );
      wr3 : ( SIZEOF( QUERY ( tmp <* of_surface | ( tmp\stratum_surface.name = stratum_surface_designation.primary_surface ) ) ) 
                <= 1 );
      wr4 : ( SIZEOF( QUERY ( tmp <* of_surface | ( tmp\stratum_surface.name = stratum_surface_designation.secondary_surface ) ) ) 
                <= 1 );
      wr5 : ( ( NOT ( SIZEOF( QUERY ( tmp <* of_surface | ( tmp\stratum_surface.name = stratum_surface_designation.
                secondary_surface ) ) ) = 1 ) ) OR ( SIZEOF( QUERY ( tmp <* of_surface | ( tmp\stratum_surface.name = 
                stratum_surface_designation.primary_surface ) ) ) = 1 ) );
      wr6 : ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
      wr7 : ( SIZEOF( QUERY ( asse <* assembly | ( NOT ( asse.assembly.defined_version.of_product = assembly[1].assembly.
                defined_version.of_product ) ) ) ) = 0 );
      wr8 : ( SIZEOF( of_product_version ) = SIZEOF( assembly ) );
      wr9 : ( SELF\product_view_definition.defined_version IN of_product_version );
      wr10: ( ( NOT ( SIZEOF( material_product ) = 1 ) ) OR ( material_product[1].relating_view IN of_technology\
                stratum_technology.stratum_material[1].items ) );
      wr11: ( SIZEOF( base_component ) < 2 );
  END_ENTITY;

  ENTITY stratum_3d_shape_model
    SUBTYPE OF ( geometric_model );
      shape_characterized_component  : stratum;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANAR_SHAPE_MODEL' IN TYPEOF( SELF ) ) );
      wr2: ( NOT EXISTS( SELF\representation.name ) );
      wr3: ( NOT EXISTS( SELF\representation.description ) );
      wr4: ( SIZEOF( QUERY ( x <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION'  IN TYPEOF( x ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY stratum_average_surface
    SUBTYPE OF ( stratum_surface );
    WHERE
      wr1: ( SELF\stratum_surface.name = stratum_surface_designation.average_surface );
  END_ENTITY;

  ENTITY stratum_average_surface_shape_model
    SUBTYPE OF ( topologically_constrained_manifold_surface_shape_representation );
      of_surface  : stratum_average_surface;
    UNIQUE
      ur1 : of_surface;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.name ) );
      wr2: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY stratum_concept_to_physical_usage_view_assignment;
      assigned_design_object  : stratum_concept;
      defined_part_feature    : part_feature;
      purpose                 : OPTIONAL STRING;
    UNIQUE
      ur1 : defined_part_feature;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_TERMINAL' IN TYPEOF( 
               defined_part_feature ) ) );
  END_ENTITY;

  ENTITY stratum_constraint_region
    SUBTYPE OF ( non_feature_shape_element );
      constrained_stratum                  : SET [1 : ?] OF stratum;
      design_specific_purpose              : STRING;
      keepout                              : BOOLEAN;
      non_conformant_stratum               : OPTIONAL SET [1 : ?] OF stratum;
      SELF\shape_element.containing_shape  : layered_interconnect_module_design_view;
    INVERSE
      precedent_version_constraint_region : SET [0 : 1] OF non_feature_shape_element_relationship FOR related;
      requirement                  : SET [1 : 1] OF requirement_assignment FOR assigned_to;
    WHERE
      wr1: ( ( NOT ( SIZEOF( precedent_version_constraint_region ) = 1 ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_CONSTRAINT_REGION'  IN TYPEOF( 
               precedent_version_constraint_region[1]\non_feature_shape_element_relationship.relating ) ) );
      wr2: ( NOT EXISTS( SELF\shape_element.description ) );
      wr3: valid_non_conformant_stratum_context( non_conformant_stratum, SELF\shape_element.containing_shape );
  END_ENTITY;

  ENTITY stratum_embedded_physical_component_join_relationship
    SUBTYPE OF ( routed_join_relationship );
      terminal_to_be_connected  : SET [1 : ?] OF embedded_physical_component_terminal;
      point_to_be_connected     : SET [1 : ?] OF layer_connection_point;
    DERIVE
      associated_component  : assembly_component := terminal_to_be_connected[1]\component_feature.associated_component;
    WHERE
      wr1: ( SIZEOF( QUERY ( t <* terminal_to_be_connected | ( t.associated_component <> associated_component ) ) ) = 0 );
  END_ENTITY;

  ENTITY stratum_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            conductor, 
            conductive_filled_area ) 
        ANDOR
        fiducial_stratum_feature )
    SUBTYPE OF ( shape_element );
      SELF\shape_element.containing_shape  : design_or_documentation_stratum;
      feature_of_size                      : BOOLEAN;
    DERIVE
      resident_stratum  : design_or_documentation_stratum := SELF\shape_element.containing_shape;
    INVERSE
      shape : SET [0 : ?] OF stratum_feature_usage FOR definition;
    WHERE
      wr1: ( SIZEOF( QUERY ( ac <* USEDIN( SELF, '' ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ASSEMBLY_COMPONENT'  IN TYPEOF( ac ) ) AND ( get_assemblies( ac ) <> get_ims( resident_stratum ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY stratum_feature_based_derived_pattern;
      extent                     : inter_stratum_extent;
      reference_stratum_feature  : stratum_feature;
    INVERSE
      layer_usage : SET [0 : 1] OF external_source_identification FOR item;
    WHERE
      wr1: ( reference_stratum_feature\stratum_feature.resident_stratum IN extent\inter_stratum_extent.included_stratum );
      wr2: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DESIGN_LAYER_STRATUM', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENTATION_LAYER_STRATUM' ] * TYPEOF( 
               reference_stratum_feature\stratum_feature.resident_stratum ) ) = 1 );
      wr3: ( SIZEOF( QUERY ( ds <* extent\inter_stratum_extent.included_stratum | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DERIVED_STRATUM'  IN TYPEOF( ds ) ) ) ) ) = 1 );
  END_ENTITY;

  ENTITY stratum_feature_conductive_join
    SUPERTYPE OF ( 
        physical_network_supporting_stratum_feature_conductive_join );
      relating_concept  : stratum_feature_template_component;
      related_concept   : stratum_feature_template_component;
      resulting_shape   : OPTIONAL geometric_model;
    INVERSE
      technology_requirement : SET [1 : ?] OF requirement_assignment FOR assigned_to;
    WHERE
      wr1: ( related_concept.resident_stratum :<>: relating_concept.resident_stratum );
  END_ENTITY;

  ENTITY stratum_feature_template
    SUPERTYPE OF ( 
        land_physical_template )
    SUBTYPE OF ( single_stratum_continuous_template );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY stratum_feature_template_component
    SUPERTYPE OF ( 
        ONEOF ( 
            area_component, 
            conductive_interconnect_element ) 
        ANDOR
        ONEOF ( 
            area_component, 
            conductive_interconnect_element, 
            land ) )
    SUBTYPE OF ( laminate_component );
      SELF\definition_based_product_occurrence.derived_from : stratum_feature_template_or_parametric_template;
      implementation_or_resident_stratum     : stratum_feature_or_stratum;
      causal_item                            : OPTIONAL limd_restriction_basis_item;
    DERIVE
      resident_stratum  : stratum := get_resident_stratum( SELF );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
      wr2: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'CONDUCTIVE_INTERCONNECT_ELEMENT_WITH_PRE_DEFINED_TRANSITIONS'  IN TYPEOF( SELF ) ) OR ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TRACE_TEMPLATE'  IN TYPEOF( derived_from ) ) ) );
  END_ENTITY;

  ENTITY stratum_feature_template_component_with_stratum_feature
    SUBTYPE OF ( stratum_feature_template_component, stratum_feature );
    DERIVE
      SELF\stratum_feature_template_component.implementation_or_resident_stratum : stratum_feature := SELF;
  END_ENTITY;

  ENTITY stratum_feature_template_location_in_breakout_footprint_definition
    SUBTYPE OF ( stratum_specific_template_location );
      SELF\template_location_in_structured_template.assembly : breakout_footprint_definition;
      SELF\template_location_in_structured_template.template : stratum_feature_template;
      original_padstack                      : part_feature_based_template_location;
      breakout_padstack                      : template_location_in_structured_template;
    WHERE
      wr1: ( original_padstack.assembly :=: assembly.reference_footprint );
      wr2: ( breakout_padstack.assembly :=: assembly );
  END_ENTITY;

  ENTITY stratum_feature_usage
    SUBTYPE OF ( geometric_item_specific_usage );
      SELF\geometric_item_specific_usage.definition : stratum_feature;
      SELF\geometric_item_specific_usage.identified_item : limd_sf_shape_select;
      SELF\geometric_item_specific_usage.used_model : limd_stratum_shape_model_select;
    WHERE
      wr1: ( SELF\geometric_item_specific_usage.name = '' );
      wr2: ( NOT EXISTS( SELF\geometric_item_specific_usage.description ) );
  END_ENTITY;

  ENTITY stratum_interconnect_module_3d_position;
      stratum_component          : interconnect_module_stratum_assembly_relationship;
      stratum_shape              : stratum_3d_shape_model;
      interconnect_module_shape  : physical_unit_3d_shape_model;
      transformation             : axis_placement_3d;
    UNIQUE
      ur1 : stratum_component;
  END_ENTITY;

  ENTITY stratum_interconnect_module_planar_position;
      stratum_component          : interconnect_module_stratum_assembly_relationship;
      stratum_shape              : stratum_planar_shape_model;
      interconnect_module_shape  : physical_unit_planar_shape_model;
      transformation             : axis_placement_2d;
    UNIQUE
      ur1 : stratum_component;
  END_ENTITY;

  ENTITY stratum_planar_shape_model
    SUBTYPE OF ( csg_2d_model );
      shape_characterized_component  : stratum;
      SELF\representation.items      : SET [1 : ?] OF primitive_2d;
    UNIQUE
      ur1 : shape_characterized_component;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY stratum_specific_template_location
    SUBTYPE OF ( template_location_in_structured_template );
      bound_stratum                          : stratum_technology_occurrence_or_stratum_technology;
      SELF\template_location_in_structured_template.template : single_stratum_template;
    WHERE
      wr1: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENTATION_LAYER_TECHNOLOGY' IN 
               TYPEOF( bound_stratum ) ) ) OR ( NOT EXISTS( bound_stratum\documentation_layer_technology.
               pre_defined_documentation_layer_purpose ) ) OR ( NOT ( bound_stratum\documentation_layer_technology.
               pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.soldermask ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MATERIAL_REMOVAL_FEATURE_TEMPLATE'  IN 
               TYPEOF( template ) ) );
      wr2: ( ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
               TYPEOF( bound_stratum ) ) AND ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'DOCUMENTATION_LAYER_TECHNOLOGY'  IN TYPEOF( bound_stratum\stratum_technology_occurrence.definition ) ) ) ) OR 
               ( NOT EXISTS( bound_stratum\stratum_technology_occurrence.definition\documentation_layer_technology.
               pre_defined_documentation_layer_purpose ) ) OR ( NOT ( bound_stratum\stratum_technology_occurrence.definition\
               documentation_layer_technology.pre_defined_documentation_layer_purpose = predefined_documentation_layer_purpose.
               soldermask ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MATERIAL_REMOVAL_FEATURE_TEMPLATE'  IN TYPEOF( template ) ) );
      wr3: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_TECHNOLOGY_OCCURRENCE' IN 
               TYPEOF( bound_stratum ) ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_STACK_DEPENDENT_TEMPLATE'  IN TYPEOF( SELF\template_location_in_structured_template.assembly ) ) );
  END_ENTITY;

  ENTITY stratum_stack_dependent_template
    SUPERTYPE OF ( 
        ONEOF ( 
            complex_passage_padstack_definition, 
            structured_inter_stratum_feature_template ) )
    SUBTYPE OF ( multi_stratum_structured_template );
      stack  : library_stack_model;
    WHERE
      wr1: ( SIZEOF( QUERY ( temp <* SELF\structured_template.templates | ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_SPECIFIC_TEMPLATE_LOCATION'  IN 
               TYPEOF( temp ) ) AND ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_TECHNOLOGY_OCCURRENCE'  IN TYPEOF( temp\stratum_specific_template_location.bound_stratum ) ) ) OR ( 
               NOT ( temp\stratum_specific_template_location.bound_stratum IN stack\stratum_stack_model.composing_occurrence ) ) ) ) ) ) 
               = 0 );
      wr2: ( TYPEOF( SELF ) <> [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_STACK_DEPENDENT_TEMPLATE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MULTI_STRATUM_STRUCTURED_TEMPLATE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRUCTURED_TEMPLATE' , 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_TEMPLATE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TEMPLATE_DEFINITION' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ITEM_SHAPE' ] );
  END_ENTITY;

  ENTITY stratum_stack_model
    ABSTRACT SUPERTYPE OF ( 
        design_stack_model 
        ANDOR
        ONEOF ( 
            design_stack_model, 
            library_stack_model ) )
    SUBTYPE OF ( template_definition );
    DERIVE
      composing_occurrence  : SET [1 : ?] OF stratum_technology_occurrence := get_stack( composing_link );
    INVERSE
      composing_link : SET [1 : ?] OF stratum_technology_occurrence_relationship FOR scope;
    WHERE
      wr1: ( SIZEOF( QUERY ( cl <* composing_link | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRATUM_TECHNOLOGY_OCCURRENCE_LINK'  IN TYPEOF( cl ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY stratum_sub_stack
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            local_linear_stack, 
            passage_technology_allocation_to_stack_model ) )
    SUBTYPE OF ( template_definition );
      stratum_technology_sequence  : OPTIONAL SET [1 : ?] OF stratum_technology_occurrence_link;
      stack_thickness              : OPTIONAL length_tolerance_characteristic;
      associated_stackup           : design_stack_model;
    WHERE
      wr1: ( SIZEOF( QUERY ( sts <* stratum_technology_sequence | ( NOT ( associated_stackup :=: sts\
               stratum_technology_occurrence_relationship.scope ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY stratum_surface;
      name           : stratum_surface_designation;
      of_stratum     : stratum;
      of_technology  : OPTIONAL stratum_surface_technology;
    UNIQUE
      ur1 : name, of_stratum;
  END_ENTITY;

  ENTITY stratum_surface_shape_model
    SUBTYPE OF ( topologically_constrained_manifold_surface_shape_representation );
      of_surface  : stratum_surface;
    UNIQUE
      ur1 : of_surface;
    WHERE
      wr1: ( NOT EXISTS( SELF\representation.name ) );
      wr2: ( NOT EXISTS( SELF\representation.description ) );
  END_ENTITY;

  ENTITY stratum_surface_technology
    SUBTYPE OF ( shape_element );
      SELF\shape_element.containing_shape  : stratum_technology;
    DERIVE
      surface_specification  : SET [0 : 1] OF document_definition := get_document_definition( SELF, 'surface specification', 
                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE_FINISH_SPECIFICATION'  );
      associated_technology  : stratum_technology := SELF\shape_element.containing_shape;
    WHERE
      wr1: ( ( SIZEOF( QUERY ( se <* bag_to_set( USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSIGNED_PROPERTY.DESCRIBED_ELEMENT'  ) ) | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE_CONDITION'  IN TYPEOF( se ) ) ) ) > 0 ) 
               OR ( SIZEOF( get_document_definition( SELF, 'surface specification', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE_FINISH_SPECIFICATION'  ) ) = 1 ) );
  END_ENTITY;

  ENTITY stratum_technology
    SUPERTYPE OF ( 
        ONEOF ( 
            design_layer_technology, 
            documentation_layer_technology ) )
    SUBTYPE OF ( characterizable_object, item_shape );
      layer_position                    : layer_position_type;
      stratum_thickness                 : OPTIONAL length_tolerance_characteristic;
      minimum_finished_feature_size     : OPTIONAL length_data_element;
      laminate_stiffness_class          : OPTIONAL stiffness_class;
      minimum_finished_feature_spacing  : OPTIONAL length_data_element;
      maximum_feature_size_requirement  : OPTIONAL length_data_element;
      minimum_aspect_ratio              : OPTIONAL REAL;
    DERIVE
      SELF\item_shape.described_element  : stratum_technology := SELF;
      specification                      : SET [0 : 1] OF document_definition := get_document_definition( SELF, 'specification', 
                                             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                             + 'PROCESS_SPECIFICATION'  );
      surface_specification              : SET [0 : 1] OF document_definition := get_document_definition( SELF, 
                                             'surface specification' , 
                                             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                             + 'SURFACE_FINISH_SPECIFICATION'  );
    INVERSE
      stratum_material : SET [1 : 1] OF material_identification FOR items;
      surface_technology : SET [0 : 2] OF stratum_surface_technology FOR containing_shape;
    WHERE
      wr1: ( ( NOT ( layer_position = layer_position_type.primary ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DESIGN_LAYER_TECHNOLOGY'  IN TYPEOF( SELF ) ) );
      wr2: ( ( NOT ( layer_position = layer_position_type.secondary ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DESIGN_LAYER_TECHNOLOGY'  IN TYPEOF( SELF ) ) );
      wr3: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'MATERIAL_IDENTIFICATION_WITH_CONDUCTIVITY_CLASSIFICATION'  ) IN TYPEOF( stratum_material ) );
      wr4: ( NOT ( ( SIZEOF( surface_technology ) > 0 ) AND ( SIZEOF( surface_specification ) = 1 ) ) );
  END_ENTITY;

  ENTITY stratum_technology_mapping_relationship;
      source_stratum_technology  : footprint_library_stratum_technology;
      target_stratum_technology  : stratum_technology;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_LIBRARY_STRATUM_TECHNOLOGY' IN 
               TYPEOF( target_stratum_technology ) ) );
      wr2: acyclic_stratum_technology_mapping_relationship( SELF, [target_stratum_technology], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_TECHNOLOGY_MAPPING_RELATIONSHIP'  );
  END_ENTITY;

  ENTITY stratum_technology_occurrence;
      name        : STRING;
      definition  : stratum_technology;
      primary     : OPTIONAL stratum_surface_technology;
      rotation    : OPTIONAL angle_data_element;
    UNIQUE
      ur1 : name;
  END_ENTITY;

  ENTITY stratum_technology_occurrence_feature_constraint
    SUBTYPE OF ( stratum_technology_occurrence_relationship );
      difference_distance    : OPTIONAL length_measure;
      intersection_distance  : OPTIONAL length_measure;
    WHERE
      wr1: ( EXISTS( difference_distance ) XOR EXISTS( intersection_distance ) );
  END_ENTITY;

  ENTITY stratum_technology_occurrence_link
    SUBTYPE OF ( stratum_technology_occurrence_relationship );
      base_stratum_technology_occurrence  : OPTIONAL up_or_down;
    WHERE
      wr1: ( ( NOT ( SELF\stratum_technology_occurrence_relationship.sto_1 :=: SELF\stratum_technology_occurrence_relationship.
               sto_2 ) ) OR ( SIZEOF( SELF\stratum_technology_occurrence_relationship.scope\stratum_stack_model.composing_link ) =
               1 ) );
  END_ENTITY;

  ENTITY stratum_technology_occurrence_relationship
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            derived_stratum_technology_occurrence_relationship, 
            stratum_technology_occurrence_link, 
            stratum_technology_occurrence_swap_relationship, 
            stratum_technology_occurrence_feature_constraint ) );
      sto_1  : stratum_technology_occurrence;
      sto_2  : stratum_technology_occurrence;
      scope  : stratum_stack_model;
    WHERE
      wr1: acyclic_stratum_technology_occurrence_relationship( SELF, [sto_2], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_TECHNOLOGY_OCCURRENCE_RELATIONSHIP'  );
  END_ENTITY;

  ENTITY stratum_technology_occurrence_swap_relationship
    SUBTYPE OF ( stratum_technology_occurrence_relationship );
    UNIQUE
      ur1 : SELF\stratum_technology_occurrence_relationship.sto_1, SELF\stratum_technology_occurrence_relationship.scope;
      ur2 : SELF\stratum_technology_occurrence_relationship.sto_2, SELF\stratum_technology_occurrence_relationship.scope;
    WHERE
      wr1: ( SELF\stratum_technology_occurrence_relationship.sto_1 <> SELF\stratum_technology_occurrence_relationship.sto_2 );
      wr2: ( ( SELF\stratum_technology_occurrence_relationship.sto_1 IN SELF\stratum_technology_occurrence_relationship.scope\
               stratum_stack_model.composing_occurrence ) AND ( SELF\stratum_technology_occurrence_relationship.sto_2 IN SELF\
               stratum_technology_occurrence_relationship.scope\stratum_stack_model.composing_occurrence ) );
  END_ENTITY;

  ENTITY stratum_technology_swap_relationship;
      primary_stratum_technology    : stratum_technology;
      secondary_stratum_technology  : stratum_technology;
    UNIQUE
      ur1 : primary_stratum_technology;
      ur2 : secondary_stratum_technology;
    WHERE
      wr1: ( ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DOCUMENTATION_LAYER_TECHNOLOGY' IN 
               TYPEOF( primary_stratum_technology ) ) AND EXISTS( primary_stratum_technology\documentation_layer_technology.
               pre_defined_documentation_layer_purpose ) ) ) OR ( primary_stratum_technology\documentation_layer_technology.
               pre_defined_documentation_layer_purpose = secondary_stratum_technology\documentation_layer_technology.
               pre_defined_documentation_layer_purpose ) );
      wr2: ( TYPEOF( primary_stratum_technology ) = TYPEOF( secondary_stratum_technology ) );
      wr3: ( primary_stratum_technology\stratum_technology.layer_position = layer_position_type.primary );
      wr4: ( secondary_stratum_technology\stratum_technology.layer_position = layer_position_type.secondary );
      wr5: ( primary_stratum_technology <> secondary_stratum_technology );
      wr6: acyclic_stratum_technology_swap_relationship( SELF, [secondary_stratum_technology], 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP'  );
  END_ENTITY;

  ENTITY string_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( defined_function, string_expression );
  END_ENTITY;

  ENTITY string_expression
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            simple_string_expression, 
            index_expression, 
            substring_expression, 
            concat_expression, 
            format_function, 
            string_defined_function ) )
    SUBTYPE OF ( expression );
  END_ENTITY;

  ENTITY string_literal
    SUBTYPE OF ( simple_string_expression, generic_literal );
      the_value  : STRING;
  END_ENTITY;

  ENTITY string_representation_item
    SUPERTYPE OF ( 
        ONEOF ( 
            tagged_text_item, 
            uniform_resource_identifier ) )
    SUBTYPE OF ( representation_item );
      string_value  : STRING;
  END_ENTITY;

  ENTITY string_variable
    SUBTYPE OF ( simple_string_expression, variable );
  END_ENTITY;

  ENTITY structured_dimension_callout
    SUBTYPE OF ( dimension_value );
      prefix           : OPTIONAL dimension_prefix;
      suffix           : OPTIONAL dimension_suffix;
      tolerance_value  : OPTIONAL dimension_text;
      unit_text        : OPTIONAL dimension_text;
    WHERE
      wr1: ( tolerance_value IN SELF\draughting_callout.contents );
      wr2: ( ( NOT EXISTS( tolerance_value ) ) OR ( tolerance_value\representation_item.name = 'tolerance value' ) );
      wr3: ( unit_text IN SELF\draughting_callout.contents );
      wr4: ( ( NOT EXISTS( unit_text ) ) OR ( unit_text\representation_item.name = 'unit text' ) );
  END_ENTITY;

  ENTITY structured_inter_stratum_feature_template
    SUBTYPE OF ( inter_stratum_feature_template, stratum_stack_dependent_template );
  END_ENTITY;

  ENTITY structured_layout_component
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            footprint_occurrence, 
            material_removal_structured_component, 
            multi_stratum_special_symbol_component, 
            padstack_occurrence, 
            single_stratum_special_symbol_component ) 
        ANDOR
        ONEOF ( 
            footprint_occurrence, 
            material_removal_structured_component, 
            multi_stratum_printed_component, 
            multi_stratum_special_symbol_component, 
            padstack_occurrence, 
            single_stratum_printed_component, 
            single_stratum_special_symbol_component ) )
    SUBTYPE OF ( assembly_group_component );
      SELF\definition_based_product_occurrence.derived_from : structured_template;
    WHERE
      wr1: ( SIZEOF( TYPEOF( SELF ) * [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAMINATE_COMPONENT', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_COMPONENT' ] ) = 0 );
      wr2: ( SIZEOF( QUERY ( agc <* SELF\assembly_group_component.components | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP'  IN TYPEOF( agc ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY structured_layout_component_sub_assembly_relationship
    SUPERTYPE OF ( 
        footprint_occurrence_sub_assembly_relationship )
    SUBTYPE OF ( next_assembly_usage_occurrence_relationship );
      SELF\product_occurrence_definition_relationship.relating_view : structured_layout_component;
      SELF\product_occurrence_definition_relationship.related_view : assembly_component;
      first_location                         : template_location_in_structured_template;
      second_location                        : OPTIONAL template_location_in_structured_template;
      overriding_shape                       : OPTIONAL part_template_shape_model;
      design_specific_placement              : BOOLEAN;
    DERIVE
      first_location_overridden   : LOGICAL := ( NOT EXISTS( second_location ) ) AND ( SELF\
                                      product_occurrence_definition_relationship.related_view\definition_based_product_occurrence.
                                      derived_from :<>: first_location.template );
      second_location_overridden  : LOGICAL := EXISTS( second_location ) AND ( SELF\product_occurrence_definition_relationship.
                                      related_view\definition_based_product_occurrence.derived_from :<>: second_location.template );
    UNIQUE
      ur1 : first_location, second_location, relating_view, related_view;
    WHERE
      wr1: ( NOT EXISTS( SELF\assembly_component_relationship.location_indicator ) );
      wr2: ( first_location_overridden OR ( SELF\product_occurrence_definition_relationship.relating_view\
               definition_based_product_occurrence.derived_from :=: first_location.assembly ) );
      wr3: ( first_location :<>: second_location );
      wr4: ( ( NOT first_location_overridden ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PADSTACK_OCCURRENCE'  IN TYPEOF( relating_view ) ) );
      wr5: ( ( NOT second_location_overridden ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FOOTPRINT_OCCURRENCE'  IN TYPEOF( relating_view ) ) );
      wr6: ( NOT ( first_location_overridden AND second_location_overridden ) );
      wr7: ( NOT ( EXISTS( overriding_shape ) XOR ( first_location_overridden OR second_location_overridden ) ) );
      wr8: ( ( NOT EXISTS( overriding_shape ) ) OR ( related_view.derived_from IN overriding_shape.shape_characterized_definition ) );
      wr9: ( NOT ( ( first_location\template_location_in_structured_template.placement_status = 
               template_location_placement_status.is_fixed ) AND design_specific_placement ) );
  END_ENTITY;

  ENTITY structured_layout_component_sub_assembly_relationship_with_component
    SUBTYPE OF ( structured_layout_component_sub_assembly_relationship, assembly_component );
    DERIVE
      SELF\structured_layout_component_sub_assembly_relationship.related_view : assembly_component := SELF;
  END_ENTITY;

  ENTITY structured_printed_part_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            single_stratum_printed_part_template, 
            multi_stratum_printed_part_template ) )
    SUBTYPE OF ( printed_part_template, structured_template );
    WHERE
      wr1: ( SIZEOF( QUERY ( t <* access_mechanisms | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL'  IN TYPEOF( t ) ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( t <* SELF\structured_template.templates | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRUCTURED_TEMPLATE'  IN TYPEOF( t.template ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY structured_printed_part_template_terminal
    SUBTYPE OF ( printed_part_template_terminal );
      SELF\shape_element.containing_shape  : structured_printed_part_template;
      associated_composition_relationship  : template_location_in_structured_template;
    WHERE
      wr1: ( associated_composition_relationship\template_location_in_structured_template.assembly :=: containing_shape );
      wr2: ( TYPEOF( SELF ) <> [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRINTED_PART_TEMPLATE_TERMINAL' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DEFINITIONAL_SHAPE_ELEMENT' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_ELEMENT' ] );
  END_ENTITY;

  ENTITY structured_template
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            single_stratum_structured_template, 
            multi_stratum_structured_template ) )
    SUBTYPE OF ( geometric_template );
    DERIVE
      empty  : LOGICAL := SIZEOF( templates ) = 0;
    INVERSE
      SELF\geometric_template.shapes : SET [1 : ?] OF structured_template_planar_shape_model FOR shape_characterized_definition;
      templates : SET [0 : ?] OF template_location_in_structured_template FOR assembly;
  END_ENTITY;

  ENTITY structured_template_planar_shape_model
    SUPERTYPE OF ( 
        ONEOF ( 
            breakout_footprint_definition_shape_model, 
            footprint_definition_shape_model ) )
    SUBTYPE OF ( part_template_planar_shape_model );
      SELF\part_template_shape_model.shape_characterized_definition : SET [1 : 1] OF structured_template;
  END_ENTITY;

  ENTITY structured_text_composition
    SUBTYPE OF ( representation_item );
      content  : string_representation_item_list_or_set;
  END_ENTITY;

  ENTITY structured_text_representation
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : 1] OF string_representation_item_select;
  END_ENTITY;

  ENTITY structuring_method_hierarchy;
      relating  : structuring_method_select;
      related   : group;
  END_ENTITY;

  ENTITY styled_element
    SUBTYPE OF ( representation_item );
      appearance  : styled_element_appearance;
      element     : detailed_geometric_model_element;
      invisible   : BOOLEAN;
  END_ENTITY;

  ENTITY styled_model
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            view, 
            view_area ) )
    SUBTYPE OF ( representation );
      version_id                            : OPTIONAL STRING;
      SELF\representation.context_of_items  : geometric_coordinate_space;
    DERIVE
      styled_geometry  : SET [0 : ?] OF geometric_model := bag_to_set( QUERY ( r <* USEDIN( SELF\representation.context_of_items, 
                           'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'REPRESENTATION.' + 
                           'CONTEXT_OF_ITEMS'  ) | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                           + 'GEOMETRIC_MODEL'  IN TYPEOF( r ) ) ) );
  END_ENTITY;

  ENTITY styled_model_replication
    SUBTYPE OF ( representation_item );
      replicated_model  : styled_model;
      source            : axis_placement;
      target            : geometric_mapping_target;
  END_ENTITY;

  ENTITY su_parameters
    SUBTYPE OF ( detailed_geometric_model_element );
      a      : length_measure;
      alpha  : plane_angle_measure;
      b      : length_measure;
      beta   : plane_angle_measure;
      c      : length_measure;
      gamma  : plane_angle_measure;
  END_ENTITY;

  ENTITY sub_model_placement_2d;
      placement  : axis_placement_2d;
      sub_model  : component_2d_location;
  END_ENTITY;

  ENTITY sub_model_placement_3d;
      placement  : axis_placement_3d;
      sub_model  : component_3d_location;
  END_ENTITY;

  ENTITY subsketch
    SUBTYPE OF ( detailed_geometric_model_element );
      subsketch_elements  : SET [1 : ?] OF sketch_element_select;
      owning_sketch       : sketch_type_select;
  END_ENTITY;

  ENTITY substance
    SUPERTYPE OF ( 
        ONEOF ( 
            chemical_element, 
            chemical_compound, 
            physical_particle ) )
    SUBTYPE OF ( product );
    UNIQUE
      ur1 : SELF\product.id;
  END_ENTITY;

  ENTITY substance_composition_relationship
    SUBTYPE OF ( view_definition_relationship );
      SELF\view_definition_relationship.related_view : substance_view_definition;
      SELF\view_definition_relationship.relating_view : substance_view_definition;
      composition_basis                      : substance_composition_basis;
      determination_method                   : STRING;
      amount                                 : value_with_unit;
    DERIVE
      constituent  : substance_view_definition := SELF\view_definition_relationship.related_view;
      whole        : substance_view_definition := SELF\view_definition_relationship.relating_view;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_UNIT' IN TYPEOF( amount.unit ) );
      wr2: ( NOT EXISTS( SELF\view_definition_relationship.relation_type ) );
  END_ENTITY;

  ENTITY substance_version
    SUBTYPE OF ( product_version );
      SELF\product_version.of_product  : substance;
  END_ENTITY;

  ENTITY substance_view_definition
    SUBTYPE OF ( product_view_definition );
      SELF\product_view_definition.defined_version : substance_version;
  END_ENTITY;

  ENTITY substring_expression
    SUBTYPE OF ( string_expression, multiple_arity_generic_expression );
    DERIVE
      operand  : generic_expression := SELF\multiple_arity_generic_expression.operands[1];
      index1   : generic_expression := SELF\multiple_arity_generic_expression.operands[2];
      index2   : generic_expression := SELF\multiple_arity_generic_expression.operands[3];
    WHERE
      wr1: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_EXPRESSION' IN TYPEOF( operand ) ) AND 
               ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_EXPRESSION' IN TYPEOF( index1 ) ) AND
               ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_EXPRESSION' IN TYPEOF( index2 ) ) );
      wr2: ( SIZEOF( SELF\multiple_arity_generic_expression.operands ) = 3 );
      wr3: is_int_expr( index1 );
      wr4: is_int_expr( index2 );
  END_ENTITY;

  ENTITY summary_report_request
    SUBTYPE OF ( data_quality_report_request );
      summary_report_request_type  : summary_report_type;
  END_ENTITY;

  ENTITY supplied_part_relationship
    SUBTYPE OF ( product_version_relationship );
    WHERE
      wr1: ( SELF\product_version_relationship.relation_type IN [ 'supplied item', 'supplied document'] );
  END_ENTITY;

  ENTITY supplier_solution
    SUBTYPE OF ( alternative_solution );
      supplier          : organization;
      probability_rate  : OPTIONAL REAL;
    DERIVE
      actual_rate  : REAL := NVL( probability_rate, 1 );
    WHERE
      wr1: ( ( 0 <= actual_rate ) AND ( actual_rate <= 1 ) );
  END_ENTITY;

  ENTITY surface
    SUPERTYPE OF ( 
        ONEOF ( 
            conical_surface, 
            cylindrical_surface, 
            plane, 
            spherical_surface, 
            swept_surface, 
            toroidal_surface ) )
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY surface_appearance;
      side    : surface_side;
      styles  : SET [1 : 7] OF surface_appearance_element;
  END_ENTITY;

  ENTITY surface_appearance_element
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            surface_related_curve_appearance, 
            surface_colour ) 
        ANDOR
        ONEOF ( 
            surface_colour, 
            surface_related_curve_appearance, 
            surface_style_rendering ) );
  END_ENTITY;

  ENTITY surface_colour
    SUBTYPE OF ( surface_appearance_element );
      assigned_colour  : colour;
  END_ENTITY;

  ENTITY surface_condition
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            contact_ratio, 
            hardness, 
            tactile_appearance, 
            treatment_result, 
            visual_appearance, 
            surface_texture ) )
    SUBTYPE OF ( assigned_shape_property );
      value_determination                    : OPTIONAL STRING;
      SELF\assigned_property.described_element : shaped_element_select;
    INVERSE
      generic_representation : SET [0 : 0] OF property_definition_representation FOR definition;
  END_ENTITY;

  ENTITY surface_condition_callout
    SUBTYPE OF ( draughting_element );
  END_ENTITY;

  ENTITY surface_condition_symbol;
  END_ENTITY;

  ENTITY surface_distance_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : 2] OF surface;
      SELF\explicit_constraint.reference_elements : SET [0 : 4] OF point_curve_or_surface;
      near_points                            : SET [0 : 4] OF near_point_relationship;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) > 0 ) OR ( ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIMENSIONED_SURFACE_DISTANCE_CONSTRAINT'  IN 
               TYPEOF( SELF ) ) AND ( SIZEOF( SELF\explicit_constraint.constrained_elements ) = 2 ) ) );
      wr2: ( SIZEOF( near_points ) <= SIZEOF( SELF\explicit_constraint.reference_elements ) );
      wr3: ( SIZEOF( QUERY ( q <* near_points | ( NOT ( q.relating_item IN SELF\explicit_constraint.reference_elements ) ) ) ) = 
               0 );
  END_ENTITY;

  ENTITY surface_finish_specification
    SUBTYPE OF ( material_specification );
  END_ENTITY;

  ENTITY surface_finish_view_context
    SUBTYPE OF ( part_view_definition_context );
    DERIVE
      SELF\view_definition_context.application_domain : STRING := 'surface finish';
      SELF\view_definition_context.life_cycle_stage : STRING := 'design';
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.'
               + 'INITIAL_CONTEXT'  ) ) = 0 );
  END_ENTITY;

  ENTITY surface_of_revolution
    SUBTYPE OF ( swept_surface );
      axis_direction  : direction;
      axis_point      : cartesian_point;
  END_ENTITY;

  ENTITY surface_pair
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            sliding_surface_pair, 
            rolling_surface_pair ) 
        ANDOR
        surface_pair_with_range )
    SUBTYPE OF ( high_order_kinematic_pair );
      surface_1    : surface;
      surface_2    : surface;
      orientation  : BOOLEAN;
    WHERE
      wr1: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( surface_1 IN r.items ) ) ) ) = 
               0 );
      wr2: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_2 | ( NOT ( surface_2 IN r.items ) ) ) ) = 
               0 );
      wr3: ( SIZEOF( QUERY ( lr <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( 'KINEMATIC_STRUCTURE_SCHEMA.'
               + 'RIGID_LINK_REPRESENTATION'  IN TYPEOF( lr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY surface_pair_with_range
    SUBTYPE OF ( surface_pair );
      range_on_surface_1           : trimmed_surface;
      range_on_surface_2           : trimmed_surface;
      lower_limit_actual_rotation  : OPTIONAL plane_angle_measure;
      upper_limit_actual_rotation  : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( SELF\surface_pair.surface_1 :=: range_on_surface_1.basis_surface );
      wr2: ( SELF\surface_pair.surface_2 :=: range_on_surface_2.basis_surface );
      wr3: ( ( ( NOT EXISTS( lower_limit_actual_rotation ) ) OR ( NOT EXISTS( upper_limit_actual_rotation ) ) ) XOR ( 
               lower_limit_actual_rotation < upper_limit_actual_rotation ) );
      wr4: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_1 | ( NOT ( range_on_surface_1 IN r.items ) ) ) ) 
               = 0 );
      wr5: ( SIZEOF( QUERY ( r <* SELF\kinematic_pair.associated_link_representations_2 | ( NOT ( range_on_surface_2 IN r.items ) ) ) ) 
               = 0 );
  END_ENTITY;

  ENTITY surface_patch;
      parent_surface  : bounded_surface;
      u_transition    : surface_transition_code;
      v_transition    : surface_transition_code;
      u_sense         : BOOLEAN;
      v_sense         : BOOLEAN;
    INVERSE
      using_surfaces : BAG [1 : ?] OF rectangular_composite_surface FOR segments;
  END_ENTITY;

  ENTITY surface_patch_set
    SUBTYPE OF ( detailed_geometric_model_element );
      patches  : SET [1 : ?] OF surface_patch;
  END_ENTITY;

  ENTITY surface_ply_shape
    SUBTYPE OF ( projected_ply_shape );
      offset        : length_data_element;
      surface_role  : STRING;
  END_ENTITY;

  ENTITY surface_prepped_terminal
    SUBTYPE OF ( altered_package_terminal );
    DERIVE
      surface_preparation  : SET [1 : 1] OF document_definition := get_document_definition( SELF, 'surface preparation', 
                               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE_FINISH_SPECIFICATION'  );
  END_ENTITY;

  ENTITY surface_profile_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : OPTIONAL datum_system;
  END_ENTITY;

  ENTITY surface_related_curve_appearance
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            boundary_curve_appearance, 
            control_grid_appearance, 
            parameter_line_appearance, 
            segmentation_curve_appearance, 
            silhouette_curve_appearance ) )
    SUBTYPE OF ( surface_appearance_element );
      style  : curve_appearance;
  END_ENTITY;

  ENTITY surface_set
    SUBTYPE OF ( detailed_geometric_model_element );
      surface_elements  : SET [1 : ?] OF surface;
  END_ENTITY;

  ENTITY surface_smoothness_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : 1] OF surface_patch_set;
      u_smoothness                           : surface_transition_code;
      v_smoothness                           : surface_transition_code;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 0 );
  END_ENTITY;

  ENTITY surface_style_rendering
    SUBTYPE OF ( surface_appearance_element );
      assigned_colour  : colour;
  END_ENTITY;

  ENTITY surface_texture
    SUBTYPE OF ( surface_condition );
      measuring_method     : STRING;
      measuring_direction  : OPTIONAL measurement_path;
      parameters           : SET [0 : ?] OF surface_texture_parameter;
    DERIVE
      SELF\assigned_property.name  : STRING := 'surface texture';
  END_ENTITY;

  ENTITY surface_texture_parameter;
      parameter_value  : measure_qualification_or_value_with_unit;
      parameter_name   : STRING;
  END_ENTITY;

  ENTITY surface_with_direction;
      defining_surface    : surface;
      material_direction  : direction;
  END_ENTITY;

  ENTITY surface_with_excessive_patches_in_one_direction
    SUBTYPE OF ( overcomplex_geometry );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE_SELECT' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY surface_with_explicit_knots
    SUBTYPE OF ( b_spline_surface );
      u_knot_multiplicities  : LIST [2 : ?] OF INTEGER;
      u_knot_values          : LIST [2 : ?] OF parameter_value;
      v_knot_multiplicities  : LIST [2 : ?] OF INTEGER;
      v_knot_values          : LIST [2 : ?] OF parameter_value;
    WHERE
      wr1: ( SIZEOF( u_knot_multiplicities ) = SIZEOF( u_knot_values ) );
      wr2: ( SIZEOF( v_knot_multiplicities ) = SIZEOF( v_knot_values ) );
  END_ENTITY;

  ENTITY surface_with_implicit_knots
    SUBTYPE OF ( b_spline_surface );
      knot_type  : knot_specification;
  END_ENTITY;

  ENTITY surface_with_small_curvature_radius
    SUBTYPE OF ( geometry_with_local_near_degeneracy );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'POINT_ON_SURFACE' ] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY swept_curve_surface_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF surface;
      SELF\explicit_constraint.reference_elements : SET [1 : 1] OF swept_surface_or_solid;
  END_ENTITY;

  ENTITY swept_point_curve_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF curve;
      SELF\explicit_constraint.reference_elements : SET [1 : 1] OF swept_solid;
  END_ENTITY;

  ENTITY swept_solid
    SUPERTYPE OF ( 
        ONEOF ( 
            extruded_solid, 
            solid_of_revolution ) )
    SUBTYPE OF ( detailed_geometric_model_element );
      swept_face  : advanced_face;
  END_ENTITY;

  ENTITY swept_surface
    SUPERTYPE OF ( 
        ONEOF ( 
            extruded_surface, 
            surface_of_revolution ) )
    SUBTYPE OF ( surface );
      swept_curve  : curve;
  END_ENTITY;

  ENTITY symbol
    SUBTYPE OF ( representation_item );
    UNIQUE
      ur1 : SELF\representation_item.name;
  END_ENTITY;

  ENTITY symmetrical_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [2 : 2] OF numerical_item_with_unit;
    WHERE
      wr1: ( SIZEOF( QUERY ( ri <* SELF\representation.items | ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RATIO_DATA_ELEMENT'  IN TYPEOF( ri ) ) ) ) = 1 );
  END_ENTITY;

  ENTITY symmetry_geometric_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [2 : 2] OF detailed_geometric_model_element;
      mirror_element                         : linear_geometry_element;
    WHERE
      wr1: ( SIZEOF( SELF\explicit_constraint.reference_elements ) = 0 );
      wr2: ( SIZEOF( TYPEOF( mirror_element ) * [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIRECTION'] ) 
               = 0 );
  END_ENTITY;

  ENTITY symmetry_tolerance
    SUBTYPE OF ( geometric_tolerance );
      datum_system  : datum_system;
    INVERSE
      directed_or_oriented_tolerance_zone : SET [0 : 1] OF directed_or_oriented_tolerance_zone FOR zone_for;
  END_ENTITY;

  ENTITY tactile_appearance
    SUBTYPE OF ( surface_condition );
      depth  : OPTIONAL measure_item;
    DERIVE
      SELF\assigned_property.name  : STRING := 'tactile appearance';
  END_ENTITY;

  ENTITY tagged_text_format
    SUBTYPE OF ( representation_context );
  END_ENTITY;

  ENTITY tagged_text_item
    SUBTYPE OF ( string_representation_item );
    WHERE
      wr1: ( SIZEOF( QUERY ( using_rep <* USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION.ITEMS'  ) | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TAGGED_TEXT_FORMAT'  IN TYPEOF( using_rep.context_of_items ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY tan_function
    SUBTYPE OF ( unary_function_call );
  END_ENTITY;

  ENTITY tangent
    SUPERTYPE OF ( 
        tangent_plane )
    SUBTYPE OF ( derived_shape_element );
      SELF\derived_shape_element.derived_from : SET [1 : 1] OF shape_element;
  END_ENTITY;

  ENTITY tangent_assembly_constraint
    SUBTYPE OF ( binary_assembly_constraint, tangent_constraint );
  END_ENTITY;

  ENTITY tangent_constraint
    SUBTYPE OF ( explicit_geometric_constraint );
      SELF\explicit_constraint.constrained_elements : SET [1 : ?] OF curve_or_surface;
      SELF\explicit_constraint.reference_elements : SET [0 : ?] OF curve_or_surface;
      near_points                            : SET [0 : ?] OF near_point_relationship;
      tangent_contact                        : tangent_contact_type;
    WHERE
      wr1: ( ( SIZEOF( SELF\explicit_constraint.reference_elements ) > 0 ) OR ( SIZEOF( SELF\explicit_constraint.
               constrained_elements ) = 2 ) );
      wr2: ( SIZEOF( QUERY ( q <* near_points | ( NOT ( q.relating_item IN SELF\explicit_constraint.reference_elements ) ) ) ) = 
               0 );
  END_ENTITY;

  ENTITY tangent_plane
    SUBTYPE OF ( tangent );
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY target_area
    SUBTYPE OF ( datum_target );
      is_defined_by  : shape_element;
  END_ENTITY;

  ENTITY target_circle
    SUBTYPE OF ( placed_target );
      diameter  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY target_circular_curve
    SUBTYPE OF ( placed_target );
      diameter  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY target_curve
    SUBTYPE OF ( datum_target );
      is_defined_by  : shape_element;
  END_ENTITY;

  ENTITY target_point
    SUBTYPE OF ( placed_target );
  END_ENTITY;

  ENTITY target_rectangle
    SUBTYPE OF ( placed_target );
      target_length  : numerical_item_with_unit;
      target_width   : numerical_item_with_unit;
  END_ENTITY;

  ENTITY target_straight_line
    SUBTYPE OF ( placed_target );
      target_length  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY teardrop_by_angle_template
    SUBTYPE OF ( teardrop_template );
      teardrop_angle  : angle_data_element;
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL.' 
               + 'SHAPE_CHARACTERIZED_DEFINITION' ) ) = 0 );
      wr2: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY teardrop_by_length_template
    SUBTYPE OF ( teardrop_template );
      teardrop_taper_start_distance  : length_data_element;
      teardrop_taper_end_distance    : length_data_element;
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL.' 
               + 'SHAPE_CHARACTERIZED_DEFINITION' ) ) = 0 );
      wr2: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY teardrop_template
    SUPERTYPE OF ( 
        ONEOF ( 
            snowball_template, 
            teardrop_by_angle_template, 
            teardrop_by_length_template ) )
    SUBTYPE OF ( parametric_template, single_stratum_template );
    WHERE
      wr1: ( ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SNOWBALL_TEMPLATE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TEARDROP_BY_ANGLE_TEMPLATE' , 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TEARDROP_BY_LENGTH_TEMPLATE' ] * TYPEOF( SELF ) ) 
               = 1 ) XOR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION_REFERENCE' 
               IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY technical_solution
    SUBTYPE OF ( alternative_solution );
      description  : STRING;
  END_ENTITY;

  ENTITY tee_profile
    SUBTYPE OF ( open_profile );
      first_angle      : numerical_item_with_unit;
      second_angle     : numerical_item_with_unit;
      first_offset     : numerical_item_with_unit;
      second_offset    : numerical_item_with_unit;
      depth            : numerical_item_with_unit;
      radius           : OPTIONAL numerical_item_with_unit;
      width            : numerical_item_with_unit;
      cross_bar_width  : numerical_item_with_unit;
      cross_bar_depth  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY template
    SUBTYPE OF ( part );
    UNIQUE
      ur1 : SELF\product.id;
  END_ENTITY;

  ENTITY template_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            printed_part_template, 
            non_conductive_cross_section_template ) 
        ANDOR
        ONEOF ( 
            geometric_template, 
            parametric_template, 
            part_string_template, 
            part_text_template, 
            single_stratum_template, 
            stratum_stack_model ) 
        ANDOR
        ONEOF ( 
            ONEOF ( 
                printed_part_template, 
                special_symbol_template ) 
            ANDOR
            geometric_template, 
            non_conductive_cross_section_template, 
            part_string_template, 
            parametric_template, 
            part_text_template, 
            stratum_stack_model, 
            stratum_sub_stack ) )
    SUBTYPE OF ( part_shape, part_view_definition );
      SELF\product_view_definition.defined_version : template_version;
      physical_characteristic                : OPTIONAL SET [1 : ?] OF correlated_or_independent;
    DERIVE
      SELF\item_shape.described_element  : template_definition := SELF;
  END_ENTITY;

  ENTITY template_location_in_structured_template
    SUPERTYPE OF ( 
        ONEOF ( 
            inter_stratum_feature_template_location, 
            stratum_specific_template_location ) );
      assembly               : structured_template;
      template               : template_definition;
      reference_designation  : STRING;
      placement_status       : template_location_placement_status;
    INVERSE
      transform : SET [0 : ?] OF template_location_in_structured_template_transform FOR reference_location;
    UNIQUE
      ur1 : assembly, reference_designation;
    WHERE
      wr1: ( ( SIZEOF( transform ) > 0 ) XOR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'TEARDROP_TEMPLATE'  IN TYPEOF( template ) ) );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTER_STRATUM_FEATURE_TEMPLATE' IN 
               TYPEOF( template ) ) ) OR ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'INTER_STRATUM_FEATURE_TEMPLATE_LOCATION'  IN TYPEOF( SELF ) ) );
      wr3: ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TEARDROP_TEMPLATE', 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_TEMPLATE' ] * TYPEOF( template ) ) >
               0 );
  END_ENTITY;

  ENTITY template_location_in_structured_template_transform
    SUBTYPE OF ( geometric_placement );
      SELF\geometric_placement_operation.template_definition : part_template_planar_shape_model;
      reference_location                     : template_location_in_structured_template;
      assembly_shape                         : structured_template_planar_shape_model;
      SELF\geometric_placement.target        : axis_placement_2d;
    DERIVE
      template_shape  : part_template_planar_shape_model := SELF\geometric_placement_operation.template_definition;
      transform       : axis_placement_2d := SELF\geometric_placement.target;
    WHERE
      wr1: ( assembly_shape.shape_characterized_definition[1] :=: reference_location.assembly );
  END_ENTITY;

  ENTITY template_material_cross_section_boundary
    SUBTYPE OF ( non_feature_shape_element );
      associated_definition  : printed_part_template_material;
    UNIQUE
      ur1 : associated_definition, SELF\shape_element.element_name;
    WHERE
      wr1: ( SELF\shape_element.element_name IN [ 'top', 'bottom', 'left', 'right'] );
  END_ENTITY;

  ENTITY template_version
    SUBTYPE OF ( part_version );
      SELF\product_version.of_product  : template;
  END_ENTITY;

  ENTITY terminal_pair_port_equivalence_relationship;
      equivalent_port  : analytical_model_port;
      scalar_ports     : analytical_model_vector_port;
    WHERE
      wr1: ( SIZEOF( scalar_ports.element_port ) = 2 );
  END_ENTITY;

  ENTITY terminal_swap_specification
    SUBTYPE OF ( modify_single_element );
      SELF\modify_single_element.previous_design_object : functional_unit_terminal_node_assignment;
      SELF\modify_single_element.current_design_object : functional_unit_terminal_node_assignment;
  END_ENTITY;

  ENTITY termination_constraint
    SUBTYPE OF ( constraint_occurrence );
      constrained_termination  : SET [2 : ?] OF mating_connector_termination;
    DERIVE
      termination_usage_constraint  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 'termination usage constraint' );
    WHERE
      wr1: ( SIZEOF( termination_usage_constraint ) <= 1 );
  END_ENTITY;

  ENTITY terminator;
  END_ENTITY;

  ENTITY terminator_symbol
    SUBTYPE OF ( annotation_symbol );
  END_ENTITY;

  ENTITY tertiary_orientation_feature
    SUBTYPE OF ( package_orientation_feature );
  END_ENTITY;

  ENTITY tessellated_anotation
    SUBTYPE OF ( annotation_element );
      SELF\styled_element.element  : tessellated_item;
  END_ENTITY;

  ENTITY tessellated_connecting_edge
    SUBTYPE OF ( tessellated_edge );
      smooth            : LOGICAL;
      face1             : tessellated_face;
      face2             : tessellated_face;
      line_strip_face1  : LIST [2 : ?] OF INTEGER;
      line_strip_face2  : LIST [2 : ?] OF INTEGER;
    WHERE
      wr1: ( SIZEOF( line_strip_face1 ) = SIZEOF( line_strip_face2 ) );
      wr2: ( SIZEOF( line_strip_face1 ) = SIZEOF( SELF\tessellated_edge.line_strip ) );
  END_ENTITY;

  ENTITY tessellated_curve_set
    SUBTYPE OF ( tessellated_item );
      coordinates  : coordinates_list;
      line_strips  : LIST [1 : ?] OF LIST [2 : ?] OF INTEGER;
  END_ENTITY;

  ENTITY tessellated_edge
    SUBTYPE OF ( tessellated_structured_item );
      coordinates     : coordinates_list;
      geometric_link  : OPTIONAL edge_or_curve;
      line_strip      : LIST [2 : ?] OF INTEGER;
  END_ENTITY;

  ENTITY tessellated_face
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            triangulated_face, 
            complex_triangulated_face ) )
    SUBTYPE OF ( tessellated_structured_item );
      coordinates     : coordinates_list;
      pnmax           : INTEGER;
      normals         : LIST [0 : ?] OF LIST [3 : 3] OF REAL;
      geometric_link  : OPTIONAL face_or_surface;
    WHERE
      wr1: ( ( SIZEOF( normals ) = 0 ) OR ( SIZEOF( normals ) = 1 ) OR ( SIZEOF( normals ) = pnmax ) );
  END_ENTITY;

  ENTITY tessellated_geometric_set
    SUBTYPE OF ( tessellated_item );
      children  : SET [1 : ?] OF tessellated_item;
  END_ENTITY;

  ENTITY tessellated_item
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            coordinates_list, 
            tessellated_solid, 
            tessellated_shell, 
            tessellated_wire, 
            tessellated_geometric_set, 
            tessellated_curve_set, 
            tessellated_point_set, 
            tessellated_surface_set, 
            tessellated_structured_item ) )
    SUBTYPE OF ( detailed_geometric_model_element );
    WHERE
      wr1: ( SIZEOF( QUERY ( using_rep <* using_representations( SELF ) | ( NOT ( 'GEOMETRIC_MODEL_SCHEMA.'
               + 'TESSELLATED_SHAPE_REPRESENTATION'  IN TYPEOF( using_rep ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY tessellated_point_set
    SUBTYPE OF ( tessellated_item );
      coordinates  : coordinates_list;
      point_list   : LIST [1 : ?] OF INTEGER;
  END_ENTITY;

  ENTITY tessellated_shape_representation
    SUBTYPE OF ( geometric_model );
      SELF\representation.items  : SET [1 : ?] OF tessellated_item;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEORMETRIC_COORDINATE_SPACE' IN TYPEOF( SELF\
               representation.context_of_items ) );
  END_ENTITY;

  ENTITY tessellated_shell
    SUBTYPE OF ( tessellated_item );
      items             : SET [1 : ?] OF tessellated_structured_item;
      topological_link  : OPTIONAL connected_face_set;
  END_ENTITY;

  ENTITY tessellated_solid
    SUBTYPE OF ( tessellated_item );
      items           : SET [1 : ?] OF tessellated_structured_item;
      geometric_link  : OPTIONAL manifold_solid_brep;
  END_ENTITY;

  ENTITY tessellated_structured_item
    SUPERTYPE OF ( 
        ONEOF ( 
            tessellated_face, 
            tessellated_edge, 
            tessellated_vertex ) )
    SUBTYPE OF ( tessellated_item );
  END_ENTITY;

  ENTITY tessellated_surface_set
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            triangulated_surface_set, 
            complex_triangulated_surface_set ) )
    SUBTYPE OF ( tessellated_item );
      coordinates  : coordinates_list;
      pnmax        : INTEGER;
      normals      : LIST [0 : ?] OF LIST [3 : 3] OF REAL;
    WHERE
      wr1: ( ( SIZEOF( normals ) = 0 ) OR ( SIZEOF( normals ) = 1 ) OR ( SIZEOF( normals ) = pnmax ) );
  END_ENTITY;

  ENTITY tessellated_vertex
    SUBTYPE OF ( tessellated_structured_item );
      coordinates       : coordinates_list;
      topological_link  : OPTIONAL vertex_point;
      point_index       : INTEGER;
  END_ENTITY;

  ENTITY tessellated_wire
    SUBTYPE OF ( tessellated_item );
      items                 : SET [1 : ?] OF tessellated_edge_or_vertex;
      geometric_model_link  : OPTIONAL path_or_composite_curve;
  END_ENTITY;

  ENTITY test_method_based_parameter_assignment
    SUBTYPE OF ( parameter_assignment );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'APPLIED_ACTIVITY_METHOD_ASSIGNMENT.ITEMS'  ) ) = 1 );
  END_ENTITY;

  ENTITY test_point_part_feature
    SUBTYPE OF ( part_tooling_feature );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TERMINAL' IN TYPEOF( SELF ) );
  END_ENTITY;

  ENTITY test_requirement_allocation
    SUBTYPE OF ( requirement_assignment );
      SELF\requirement_assignment.assigned_to : product_version;
      analytical_model_based_test_access     : OPTIONAL SET [1 : ?] OF analytical_model_port_assignment;
      functional_specification_based_test_access : OPTIONAL SET [1 : ?] OF functional_usage_view_to_part_terminal_assignment;
      SELF\requirement_assignment.assigned_requirement : predefined_requirement_view_definition;
    DERIVE
      assigned_requirement_property  : predefined_requirement_view_definition := SELF\requirement_assignment.assigned_requirement;
    WHERE
      wr1: ( EXISTS( analytical_model_based_test_access ) XOR EXISTS( functional_specification_based_test_access ) );
      wr2: ( ( NOT EXISTS( functional_specification_based_test_access ) ) OR ( SIZEOF( QUERY ( fa <* 
               functional_specification_based_test_access | ( NOT ( fa.physical_usage_view_terminal\shape_element.containing_shape
               \item_shape.described_element\product_view_definition.defined_version = SELF\requirement_assignment.assigned_to ) ) ) ) 
               = 0 ) );
      wr3: ( assigned_requirement_property\product_view_definition.initial_context\view_definition_context.life_cycle_stage = 
               'test'  );
  END_ENTITY;

  ENTITY test_select_product
    SUBTYPE OF ( alternate_product_relationship );
    WHERE
      wr1: ( NOT EXISTS( SELF\alternate_product_relationship.criteria ) );
  END_ENTITY;

  ENTITY test_specification
    SUBTYPE OF ( specification_definition );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
  END_ENTITY;

  ENTITY text_font;
      id           : STRING;
      name         : STRING;
      description  : STRING;
    INVERSE
      glyphs : SET [1 : ?] OF character_glyph_font_usage FOR font;
  END_ENTITY;

  ENTITY text_font_family;
      id           : STRING;
      name         : STRING;
      description  : STRING;
    INVERSE
      fonts : SET [1 : ?] OF text_font_in_family FOR family;
  END_ENTITY;

  ENTITY text_font_in_family;
      font    : text_font;
      family  : text_font_family;
  END_ENTITY;

  ENTITY text_literal
    SUPERTYPE OF ( 
        text_literal_with_extent 
        ANDOR
        text_literal_with_delineation 
        ANDOR
        text_literal_with_associated_curves 
        ANDOR
        text_literal_with_blanking_box )
    SUBTYPE OF ( detailed_geometric_model_element );
      alignment  : text_alignment;
      font       : font_select;
      literal    : STRING;
      path       : text_path;
      placement  : axis_placement;
  END_ENTITY;

  ENTITY text_literal_with_associated_curves
    SUBTYPE OF ( text_literal );
      associated_curves  : SET [1 : ?] OF curve;
  END_ENTITY;

  ENTITY text_literal_with_blanking_box
    SUBTYPE OF ( text_literal );
  END_ENTITY;

  ENTITY text_literal_with_delineation
    SUBTYPE OF ( text_literal );
      delineation  : text_delineation;
  END_ENTITY;

  ENTITY text_literal_with_extent
    SUBTYPE OF ( text_literal );
      width   : length_measure;
      height  : length_measure;
  END_ENTITY;

  ENTITY text_representation_item
    SUBTYPE OF ( string_representation_item );
  END_ENTITY;

  ENTITY text_string_representation
    SUBTYPE OF ( styled_model );
      SELF\representation.items  : SET [1 : 1] OF text_string_representation_item_select;
  END_ENTITY;

  ENTITY text_style;
      font_size_scale   : REAL;
      mirror_placement  : OPTIONAL axis_placement;
      text_colour       : colour;
  END_ENTITY;

  ENTITY thermal_component
    SUBTYPE OF ( assembly_component );
  END_ENTITY;

  ENTITY thermal_feature
    SUBTYPE OF ( part_feature );
  END_ENTITY;

  ENTITY thermal_functional_unit_network_node_definition
    SUBTYPE OF ( functional_unit_network_node_definition );
      SELF\functional_unit_network_node_definition.associated_functional_unit_definition : thermal_network_definition;
      location                               : OPTIONAL tnd_location_select;
      used_model                             : OPTIONAL shape_model;
    WHERE
      wr1: ( ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BUS_ELEMENT_LINK.'
               + 'PRECEDENT_ELEMENT'  ) ) + SIZEOF( USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BUS_ELEMENT_LINK.SUBSEQUENT_ELEMENT'  ) ) ) = 
               0 );
      wr2: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CARTESIAN_POINT' IN TYPEOF( location ) ) ) 
               OR ( used_model IN using_representations( location ) ) );
      wr3: ( ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CARTESIAN_POINT' IN TYPEOF( location ) ) ) 
               OR ( SIZEOF( QUERY ( sda <* USEDIN( used_model, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION'  ) | ( sda\property_definition_representation.
               definition = SELF\functional_unit_network_node_definition.associated_functional_unit_definition ) ) ) = 1 ) );
      wr4: ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CARTESIAN_POINT' IN TYPEOF( location ) ) 
               XOR EXISTS( used_model ) ) );
  END_ENTITY;

  ENTITY thermal_isolation_removal_component
    SUBTYPE OF ( material_removal_structured_component );
      SELF\definition_based_product_occurrence.derived_from : thermal_isolation_removal_template;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MULTI_LAYER_MATERIAL_REMOVAL_LAMINATE_COMPONENT'  IN TYPEOF( SELF ) ) );
  END_ENTITY;

  ENTITY thermal_isolation_removal_template
    SUBTYPE OF ( material_removal_structured_template );
    DERIVE
      thermal_isolation_spacing_requirement  : SET [0 : ?] OF requirement_view_definition := get_rvd( SELF, 'thermal requirement' );
    WHERE
      wr1: ( SIZEOF( QUERY ( tisr <* thermal_isolation_spacing_requirement | ( NOT ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.THERMAL_ISOLATION_REQUIREMENT'  IN TYPEOF( 
               tisr ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY thermal_isolation_requirement
    SUBTYPE OF ( requirement_view_definition );
      thermal_bar_width                      : OPTIONAL length_tolerance_characteristic;
      number_of_bars                         : OPTIONAL INTEGER;
      effective_current_capacity_requirement : OPTIONAL value_limit;
      angular_orientation_requirement        : OPTIONAL value_range;
      effective_thermal_resistance_requirement : OPTIONAL value_limit;
    DERIVE
      thermal_isolation_spacing_requirement  : SET [1 : 1] OF predefined_requirement_view_definition := 
                                                 get_specific_requirement_type_for_primary_rvd_relationship( SELF, 'derived from', 
                                                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                 + 'LAYOUT_SPACING_REQUIREMENT'  );
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.additional_characterization ) );
      wr2: ( NOT ( EXISTS( thermal_bar_width ) XOR EXISTS( number_of_bars ) ) );
      wr3: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAYOUT_SPACING_REQUIREMENT' IN TYPEOF( 
               thermal_isolation_spacing_requirement[1] ) );
      wr4: ( ( NOT EXISTS( effective_current_capacity_requirement ) ) OR ( ( effective_current_capacity_requirement\
               qualified_representation_item.qualifiers[1]\type_qualifier.name IN [ 'minimum'] ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ELECTRIC_CURRENT_DATA_ELEMENT'  IN TYPEOF( 
               effective_current_capacity_requirement ) ) ) );
      wr5: ( ( NOT EXISTS( angular_orientation_requirement ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ANGLE_DATA_ELEMENT'  IN TYPEOF( 
               angular_orientation_requirement ) ) );
      wr6: ( ( NOT EXISTS( effective_thermal_resistance_requirement ) ) OR ( ( effective_thermal_resistance_requirement\
               qualified_representation_item.qualifiers[1]\type_qualifier.name IN [ 'minimum'] ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.THERMAL_RESISTANCE_DATA_ELEMENT'  IN TYPEOF( 
               effective_thermal_resistance_requirement ) ) ) );
  END_ENTITY;

  ENTITY thermal_network_definition
    SUBTYPE OF ( functional_unit_network_definition );
  END_ENTITY;

  ENTITY thermal_requirement_allocation
    SUBTYPE OF ( assembly_requirement_allocation );
      SELF\requirement_assignment.assigned_to : thermal_component;
      SELF\requirement_assignment.assigned_requirement : predefined_requirement_view_definition;
    DERIVE
      assigned_requirement_property  : predefined_requirement_view_definition := SELF\requirement_assignment.assigned_requirement;
    WHERE
      wr1: ( assigned_requirement_property\product_view_definition.initial_context\view_definition_context.application_domain = 
               'thermal'  );
  END_ENTITY;

  ENTITY thermal_resistance_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY thermodynamic_temperature_data_element
    SUBTYPE OF ( value_with_unit );
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF( SELF\
               value_with_unit.unit ) );
  END_ENTITY;

  ENTITY thermodynamic_temperature_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY thickened_face_solid_model_element
    SUBTYPE OF ( solid_model_element );
      base_face       : advanced_face;
      base_thickness  : length_measure;
      top_thickness   : length_measure;
  END_ENTITY;

  ENTITY thickness_laminate_table
    SUBTYPE OF ( zone_structural_makeup );
      table_components  : LIST [2 : ?] OF thickness_laminate_table_component;
  END_ENTITY;

  ENTITY thickness_size
    SUBTYPE OF ( dimensional_size );
      used_path  : OPTIONAL measurement_path;
  END_ENTITY;

  ENTITY thread
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            catalogue_thread, 
            defined_thread ) )
    SUBTYPE OF ( machining_feature );
      partial_profile        : partial_area_definition;
      runout                 : OPTIONAL thread_runout;
      fit_class              : text;
      form                   : text;
      number_of_threads      : OPTIONAL numerical_item_with_unit;
      thread_hand            : text;
      inner_or_outer_thread  : BOOLEAN;
      qualifier              : text;
      nominal_size           : OPTIONAL numerical_item_with_unit;
      applied_shape          : definitional_shape_element;
      fit_class_2            : OPTIONAL text;
  END_ENTITY;

  ENTITY thread_runout;
      length_of_runout    : numerical_item_with_unit;
      pitch_or_dimension  : BOOLEAN;
      included_or_extra   : BOOLEAN;
  END_ENTITY;

  ENTITY three_d_geometry_set
    SUBTYPE OF ( constituent_shape_representation, geometrically_bounded_surface_shape_representation );
      basis_role         : STRING;
      basis_surface      : surface;
      defining_boundary  : SET [1 : ?] OF curve;
  END_ENTITY;

  ENTITY through_bottom_condition;
  END_ENTITY;

  ENTITY through_pocket_bottom_condition;
  END_ENTITY;

  ENTITY through_port_variable
    SUBTYPE OF ( port_variable );
    WHERE
      wr1: EXISTS( SELF\port_variable.unit_of_measure );
  END_ENTITY;

  ENTITY through_profile_floor;
  END_ENTITY;

  ENTITY tiebar_printed_component
    SUBTYPE OF ( printed_component, structured_layout_component );
      SELF\printed_component.derived_from  : printed_tiebar_template;
    DERIVE
      joined_networks                   : SET OF generic_physical_network := get_gpn( SELF\printed_component.access_mechanism );
      tiebar_component                  : SET OF area_component := limdwpcd_get_ac( components );
      padstack_component                : SET OF laminate_component := limdwpcd_get_lc( components );
      passage_component                 : SET OF plated_passage := QUERY ( pc <* padstack_component | ( 
                                            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLATED_PASSAGE'  
                                            IN TYPEOF( pc ) ) );
      tiebar_resident_stratum           : SET OF stratum := limdwpcd_get_tbrs( tiebar_component );
      passage_resident_stratum          : SET OF stratum := limdwpcd_get_prs( passage_component, SELF\assembly_component.
                                            assemblies );
      passage_dependent_land_component  : SET OF plated_passage_dependent_land := limdwpcd_get_ppdl( passage_component );
    INVERSE
      SELF\assembly_group_component.components : SET [1 : ?] OF structured_layout_component_sub_assembly_relationship FOR 
                      relating_view;
    WHERE
      wr1 : ( ( SIZEOF( tiebar_component ) + SIZEOF( passage_component ) ) > 0 );
      wr2 : ( SIZEOF( components ) = ( SIZEOF( tiebar_component ) + SIZEOF( padstack_component ) ) );
      wr3 : ( SIZEOF( padstack_component ) > SIZEOF( passage_component ) );
      wr4 : ( SIZEOF( QUERY ( tc <* tiebar_component | ( NOT ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE'  IN TYPEOF( tc\
                stratum_feature_template_component.implementation_or_resident_stratum ) ) ) ) ) = 0 );
      wr5 : ( SIZEOF( tiebar_component ) = SIZEOF( tiebar_resident_stratum ) );
      wr6 : ( SIZEOF( joined_networks ) > 1 );
      wr7 : ( SIZEOF( QUERY ( jn <* joined_networks | ( NOT ( SIZEOF( SELF\printed_component.access_mechanism * jn\
                generic_physical_network.connectivity_requirement_element ) = 1 ) ) ) ) = 0 );
      wr8 : ( SIZEOF( QUERY ( tc <* tiebar_component | ( NOT ( SIZEOF( USEDIN( tc, 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPONENT_FEATURE.ASSOCIATED_COMPONENT'  ) ) 
                = 0 ) ) ) ) = 0 );
      wr9 : ( ( NOT ( SIZEOF( passage_component ) = 1 ) ) OR ( SIZEOF( QUERY ( pc <* passage_component | ( NOT ( ( SIZEOF( 
                tiebar_component ) = 0 ) OR ( SIZEOF( tiebar_resident_stratum * passage_resident_stratum ) = SIZEOF( 
                tiebar_resident_stratum ) ) ) ) ) ) = 0 ) );
      wr10: ( ( NOT ( SIZEOF( passage_component ) >= 1 ) ) OR ( SIZEOF( QUERY ( pc <* passage_component | ( NOT ( SIZEOF( 
                tiebar_resident_stratum * passage_resident_stratum ) = SIZEOF( tiebar_resident_stratum ) ) ) ) ) = 0 ) );
      wr11: ( SIZEOF( QUERY ( am <* SELF\printed_component.access_mechanism | ( NOT ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRUCTURED_PRINTED_PART_TEMPLATE_TERMINAL'  
                IN TYPEOF( am.definition ) ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY tile_area_template
    SUBTYPE OF ( fill_area_template );
      fill_template         : single_stratum_template;
      start_placement       : axis_placement_2d;
      first_repeat_factor   : vector;
      second_repeat_factor  : vector;
  END_ENTITY;

  ENTITY tile_style
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            externally_defined_tile_style, 
            user_defined_tile_style ) )
    SUBTYPE OF ( detailed_geometric_model_element );
  END_ENTITY;

  ENTITY time_interval;
      id           : STRING;
      name         : STRING;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY time_interval_assignment;
      assigned_time_interval  : time_interval;
      role                    : time_interval_role;
      items                   : SET [1 : ?] OF time_interval_item;
  END_ENTITY;

  ENTITY time_interval_effectivity
    SUBTYPE OF ( effectivity );
      effectivity_period  : time_interval;
  END_ENTITY;

  ENTITY time_interval_relationship;
      relation_type           : STRING;
      description             : STRING;
      relating_time_interval  : time_interval;
      related_time_interval   : time_interval;
  END_ENTITY;

  ENTITY time_interval_role;
      name         : STRING;
      description  : STRING;
  END_ENTITY;

  ENTITY time_interval_with_bounds
    SUBTYPE OF ( time_interval );
      primary_bound                : OPTIONAL date_or_event;
      secondary_bound              : OPTIONAL date_or_event;
      duration_from_primary_bound  : OPTIONAL duration;
    WHERE
      wr1: ( NOT ( EXISTS( secondary_bound ) AND EXISTS( duration_from_primary_bound ) ) );
      wr2: ( EXISTS( primary_bound ) OR EXISTS( secondary_bound ) );
  END_ENTITY;

  ENTITY time_offset;
      hour_offset    : INTEGER;
      minute_offset  : OPTIONAL INTEGER;
      sense          : offset_orientation;
    DERIVE
      actual_minute_offset  : INTEGER := NVL( minute_offset, 0 );
    WHERE
      wr1: ( ( 0 <= hour_offset ) AND ( hour_offset < 24 ) );
      wr2: ( ( 0 <= actual_minute_offset ) AND ( actual_minute_offset <= 59 ) );
      wr3: ( NOT ( ( ( hour_offset <> 0 ) OR ( actual_minute_offset <> 0 ) ) AND ( sense = exact ) ) );
  END_ENTITY;

  ENTITY time_unit
    SUBTYPE OF ( unit );
  END_ENTITY;

  ENTITY tolerance_characteristic
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            maximum_tolerance_characteristic, 
            minimum_tolerance_characteristic, 
            nominal_tolerance_characteristic, 
            plus_minus_tolerance_characteristic, 
            qualified_tolerance_characteristic, 
            statistical_tolerance_characteristic, 
            symmetrical_tolerance_characteristic, 
            typical_tolerance_characteristic ) 
        ANDOR
        length_tolerance_characteristic )
    SUBTYPE OF ( property_value_representation );
    WHERE
      wr1: ( SELF\representation.context_of_items\representation_context.id = 'tolerance values' );
      wr2: ( NOT EXISTS( SELF\representation.name ) );
  END_ENTITY;

  ENTITY tolerance_range;
      lower_range  : numerical_item_with_unit;
      upper_range  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY tolerance_table_cell;
      cell_value       : OPTIONAL cell_entry_select;
      description      : STRING;
      limit            : limit_select;
      tolerance_class  : OPTIONAL STRING;
      tolerance_table  : general_tolerance_table;
  END_ENTITY;

  ENTITY tolerance_zone
    SUBTYPE OF ( shape_element );
      form_type  : tolerance_zone_type;
      zone_for   : SET [1 : ?] OF tolerance_zone_target;
  END_ENTITY;

  ENTITY tolerance_zone_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            projected_zone_definition, 
            non_uniform_zone_definition, 
            runout_zone_definition ) );
      zone        : tolerance_zone;
      boundaries  : SET [0 : ?] OF shape_element;
  END_ENTITY;

  ENTITY tolerance_zone_with_datum
    SUPERTYPE OF ( 
        ONEOF ( 
            directed_tolerance_zone, 
            oriented_tolerance_zone ) )
    SUBTYPE OF ( directed_or_oriented_tolerance_zone );
      datum_reference  : datum_system;
  END_ENTITY;

  ENTITY tool_attachment_point_frame
    SUBTYPE OF ( axis_placement_3d );
    DERIVE
      SELF\representation_item.name  : label := ?;
  END_ENTITY;

  ENTITY tool_centre_point_frame
    SUBTYPE OF ( axis_placement_3d );
    DERIVE
      SELF\representation_item.name  : label := ?;
  END_ENTITY;

  ENTITY tool_registration_mark
    SUBTYPE OF ( part_tooling_feature );
  END_ENTITY;

  ENTITY topological_junction;
      name   : STRING;
      scope  : physical_connectivity_structure_definition;
    UNIQUE
      ur1 : name, scope;
  END_ENTITY;

  ENTITY topologically_constrained_manifold_surface_shape_representation
    SUBTYPE OF ( manifold_surface_shape_representation );
  END_ENTITY;

  ENTITY topology_related_to_multiply_defined_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            multiply_defined_faces, 
            multiply_defined_vertices, 
            multiply_defined_edges ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY topology_related_to_nearly_degenerate_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            short_length_edge, 
            small_area_face, 
            entirely_narrow_face ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY topology_related_to_overlapping_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            partly_overlapping_faces, 
            partly_overlapping_edges ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY topology_related_to_self_intersecting_geometry
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            self_intersecting_loop, 
            self_intersecting_shell, 
            intersecting_connected_face_sets ) )
    SUBTYPE OF ( inapt_topology_and_geometry_relationship );
  END_ENTITY;

  ENTITY toroidal_surface
    SUBTYPE OF ( surface );
      position      : axis_placement_3d;
      radius        : length_measure;
      minor_radius  : length_measure;
    WHERE
      wr1: ( radius > 0 );
      wr2: ( minor_radius > 0 );
  END_ENTITY;

  ENTITY torus
    SUBTYPE OF ( detailed_geometric_model_element );
      axis_direction  : direction;
      axis_point      : cartesian_point;
      radius          : length_measure;
      minor_radius    : length_measure;
    WHERE
      wr1: ( radius > minor_radius );
      wr2: ( minor_radius > 0 );
  END_ENTITY;

  ENTITY total_runout_tolerance
    SUBTYPE OF ( geometric_tolerance );
      angle         : angle_data_element;
      datum_system  : datum_system;
  END_ENTITY;

  ENTITY trace_template
    SUPERTYPE OF ( 
        default_trace_template )
    SUBTYPE OF ( parametric_template );
      trace_style  : curve_style_parameters;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY tracing_relationship
    SUBTYPE OF ( requirement_view_definition_relationship );
    DERIVE
      traces_from  : requirement_view_definition := SELF\requirement_view_definition_relationship.primary;
      traces_to    : requirement_view_definition := SELF\requirement_view_definition_relationship.secondary;
  END_ENTITY;

  ENTITY transform_port_variable
    SUBTYPE OF ( port_variable );
      nominal_signal_flow_direction  : signal_flow_direction;
    WHERE
      wr1: ( signal_flow_direction.not_applicable <> nominal_signal_flow_direction );
      wr2: ( signal_flow_direction.bidirectional <> nominal_signal_flow_direction );
  END_ENTITY;

  ENTITY transition_feature
    SUPERTYPE OF ( 
        ONEOF ( 
            chamfer, 
            edge_round, 
            fillet ) )
    SUBTYPE OF ( manufacturing_feature );
  END_ENTITY;

  ENTITY transmission_line_functional_unit_terminal_allocation;
      implementation                         : printed_component_join_terminal;
      transmission_line_functional_unit_terminal : functional_unit_terminal;
      functional_unit_design_path            : transmission_line_functional_unit_to_routed_transmission_line_allocation;
    UNIQUE
      ur1 : implementation, transmission_line_functional_unit_terminal;
  END_ENTITY;

  ENTITY transmission_line_functional_unit_to_routed_transmission_line_allocation
    SUBTYPE OF ( design_functional_unit_allocation_to_assembly_component );
      SELF\design_functional_unit_allocation_to_assembly_component.implementation : routed_transmission_line;
  END_ENTITY;

  ENTITY treatment_result
    SUBTYPE OF ( surface_condition );
      purpose  : OPTIONAL STRING;
    DERIVE
      SELF\assigned_property.name  : STRING := 'treatment result';
  END_ENTITY;

  ENTITY triangulated_face
    SUBTYPE OF ( tessellated_face );
      pnindex    : LIST [0 : ?] OF INTEGER;
      triangles  : LIST [1 : ?] OF LIST [3 : 3] OF INTEGER;
    WHERE
      wr1: ( ( SIZEOF( pnindex ) = 0 ) OR ( SIZEOF( pnindex ) = SELF\tessellated_face.pnmax ) );
      wr2: ( NOT ( ( SIZEOF( pnindex ) = 0 ) AND ( SELF\tessellated_face.pnmax <> coordinates.npoints ) ) );
  END_ENTITY;

  ENTITY triangulated_surface_set
    SUBTYPE OF ( tessellated_surface_set );
      pnindex    : LIST [0 : ?] OF INTEGER;
      triangles  : LIST [1 : ?] OF LIST [3 : 3] OF INTEGER;
    WHERE
      wr1: ( ( SIZEOF( pnindex ) = 0 ) OR ( SIZEOF( pnindex ) = SELF\tessellated_surface_set.pnmax ) );
      wr2: ( NOT ( ( SIZEOF( pnindex ) = 0 ) AND ( SELF\tessellated_surface_set.pnmax <> coordinates.npoints ) ) );
  END_ENTITY;

  ENTITY trimmed_curve
    SUBTYPE OF ( bounded_curve );
      basis_curve  : curve;
      start_point  : cartesian_point;
      end_point    : cartesian_point;
  END_ENTITY;

  ENTITY trimmed_surface
    SUBTYPE OF ( bounded_surface );
      basis_surface  : surface;
      u1             : parameter_value;
      u2             : parameter_value;
      v1             : parameter_value;
      v2             : parameter_value;
      usense         : BOOLEAN;
      vsense         : BOOLEAN;
    WHERE
      wr1: ( u1 <> u2 );
      wr2: ( v1 <> v2 );
  END_ENTITY;

  ENTITY turned_knurl
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            diagonal_knurl, 
            diamond_knurl, 
            straight_knurl ) )
    SUBTYPE OF ( knurl );
      nominal_diameter   : numerical_item_with_unit;
      diametrical_pitch  : numerical_item_with_unit;
      root_fillet        : OPTIONAL numerical_item_with_unit;
      number_of_teeth    : OPTIONAL numerical_item_with_unit;
      tooth_depth        : OPTIONAL numerical_item_with_unit;
      major_diameter     : numerical_item_with_unit;
  END_ENTITY;

  ENTITY type_qualifier
    ABSTRACT SUPERTYPE OF ( 
        pre_defined_type_qualifier 
        ANDOR
        ONEOF ( 
            externally_defined_type_qualifier, 
            pre_defined_type_qualifier ) );
      name  : STRING;
  END_ENTITY;

  ENTITY typical_tolerance_characteristic
    SUBTYPE OF ( tolerance_characteristic );
      SELF\representation.items  : SET [1 : 1] OF value_limit;
    WHERE
      wr1: ( SELF\representation.items[1]\value_limit.qualifiers[1]\type_qualifier.name = 'typical' );
  END_ENTITY;

  ENTITY unary_boolean_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( boolean_expression, unary_generic_expression );
  END_ENTITY;

  ENTITY unary_function_call
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            abs_function, 
            minus_function, 
            sin_function, 
            cos_function, 
            tan_function, 
            asin_function, 
            acos_function, 
            exp_function, 
            log_function, 
            log2_function, 
            log10_function, 
            square_root_function ) )
    SUBTYPE OF ( unary_numeric_expression );
  END_ENTITY;

  ENTITY unary_generic_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( generic_expression );
      operand  : generic_expression;
  END_ENTITY;

  ENTITY unary_numeric_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( numeric_expression, unary_generic_expression );
      SELF\unary_generic_expression.operand  : numeric_expression;
  END_ENTITY;

  ENTITY unbound_parameter_environment;
      syntactic_representation  : unbound_variational_parameter;
      semantics                 : unbound_variational_parameter_semantics;
  END_ENTITY;

  ENTITY unbound_variational_parameter
    SUBTYPE OF ( variational_representation_item, maths_variable );
      parameter_description    : OPTIONAL STRING;
      parameter_current_value  : maths_value;
    DERIVE
      SELF\maths_variable.name  : STRING := SELF\representation_item.name;
    INVERSE
      interpretation : unbound_parameter_environment FOR syntactic_representation;
  END_ENTITY;

  ENTITY unbound_variational_parameter_semantics;
  END_ENTITY;

  ENTITY uncertainty_qualifier
    SUPERTYPE OF ( 
        ONEOF ( 
            standard_uncertainty, 
            qualitative_uncertainty ) );
      measure_name  : STRING;
      description   : STRING;
  END_ENTITY;

  ENTITY uncertainty_with_unit
    SUBTYPE OF ( value_with_unit );
      name         : STRING;
      description  : OPTIONAL STRING;
  END_ENTITY;

  ENTITY unconstrained_pair
    SUBTYPE OF ( low_order_kinematic_pair );
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := TRUE;
  END_ENTITY;

  ENTITY unconstrained_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : unconstrained_pair;
      actual_placement                 : axis_placement_3d;
  END_ENTITY;

  ENTITY uniform_resource_identifier
    SUBTYPE OF ( string_representation_item );
  END_ENTITY;

  ENTITY unit
    SUPERTYPE OF ( 
        ONEOF ( 
            amount_of_substance_unit, 
            electric_current_unit, 
            length_unit, 
            luminous_intensity_unit, 
            mass_unit, 
            plane_angle_unit, 
            ratio_unit, 
            solid_angle_unit, 
            thermodynamic_temperature_unit, 
            time_unit ) );
      name     : STRING;
      si_unit  : BOOLEAN;
  END_ENTITY;

  ENTITY universal_pair
    SUBTYPE OF ( low_order_kinematic_pair );
      input_skew_angle  : OPTIONAL plane_angle_measure;
    DERIVE
      SELF\low_order_kinematic_pair.t_x  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.t_z  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_x  : BOOLEAN := TRUE;
      SELF\low_order_kinematic_pair.r_y  : BOOLEAN := FALSE;
      SELF\low_order_kinematic_pair.r_z  : BOOLEAN := TRUE;
      skew_angle                         : plane_angle_measure := NVL( input_skew_angle, 0 );
  END_ENTITY;

  ENTITY universal_pair_value
    SUBTYPE OF ( pair_value );
      SELF\pair_value.applies_to_pair  : universal_pair;
      first_rotation_angle             : plane_angle_measure;
      second_rotation_angle            : plane_angle_measure;
  END_ENTITY;

  ENTITY universal_pair_with_range
    SUBTYPE OF ( universal_pair );
      lower_limit_first_rotation   : OPTIONAL plane_angle_measure;
      upper_limit_first_rotation   : OPTIONAL plane_angle_measure;
      lower_limit_second_rotation  : OPTIONAL plane_angle_measure;
      upper_limit_second_rotation  : OPTIONAL plane_angle_measure;
    WHERE
      wr1: ( ( ( NOT EXISTS( lower_limit_first_rotation ) ) OR ( NOT EXISTS( upper_limit_first_rotation ) ) ) XOR ( 
               lower_limit_first_rotation < upper_limit_first_rotation ) );
      wr2: ( ( ( NOT EXISTS( lower_limit_second_rotation ) ) OR ( NOT EXISTS( upper_limit_second_rotation ) ) ) XOR ( 
               lower_limit_second_rotation < upper_limit_second_rotation ) );
  END_ENTITY;

  ENTITY unplated_cutout_edge_segment
    SUBTYPE OF ( cutout_edge_segment );
      SELF\cutout_edge_segment.composed_cutout : partially_plated_cutout;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLATED_INTER_STRATUM_FEATURE' IN TYPEOF( 
               SELF ) ) );
  END_ENTITY;

  ENTITY unplated_interconnect_module_edge_segment
    SUBTYPE OF ( interconnect_module_edge_segment );
      SELF\interconnect_module_edge_segment.composed_edge : partially_plated_interconnect_module_edge;
    WHERE
      wr1: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLATED_INTER_STRATUM_FEATURE' IN TYPEOF( 
               SELF ) ) );
  END_ENTITY;

  ENTITY unrouted_conductive_interconnect_element
    SUBTYPE OF ( conductive_interconnect_element );
      SELF\stratum_feature_template_component.implementation_or_resident_stratum : stratum;
  END_ENTITY;

  ENTITY unrouted_join_relationship
    SUBTYPE OF ( join_relationship );
      unrouted_terminals  : OPTIONAL SET [1 : ?] OF laminate_component_join_terminal;
      unrouted_lcp        : OPTIONAL SET [1 : ?] OF layer_connection_point;
      unrouted_junction   : OPTIONAL SET [1 : ?] OF layout_junction;
      unrouted_paa        : OPTIONAL SET [1 : ?] OF probe_access_area;
      unrouted_via        : OPTIONAL SET [1 : ?] OF via_terminal;
    INVERSE
      network_topology : generic_physical_network FOR unrouted_connectivity_requirement_element;
    WHERE
      wr1: ( ( SIZEOF( unrouted_terminals ) + SIZEOF( unrouted_lcp ) + SIZEOF( unrouted_paa ) + SIZEOF( unrouted_via ) + SIZEOF( 
               unrouted_junction ) ) > 0 );
  END_ENTITY;

  ENTITY unrouted_physical_network
    SUBTYPE OF ( generic_physical_network );
  END_ENTITY;

  ENTITY unsupported_passage
    SUBTYPE OF ( inter_stratum_feature );
      SELF\definition_based_product_occurrence.derived_from : unsupported_passage_template;
      SELF\inter_stratum_feature.vertical_extent : passage_technology_allocation_to_stack_model;
    WHERE
      wr1: ( NOT EXISTS( SELF\product_view_definition.name ) );
  END_ENTITY;

  ENTITY unsupported_passage_dependent_land
    SUBTYPE OF ( inter_stratum_feature_dependent_land );
      reference_passage                      : unsupported_passage;
      SELF\definition_based_product_occurrence.derived_from : default_unsupported_passage_based_land_physical_template;
  END_ENTITY;

  ENTITY unsupported_passage_template
    SUPERTYPE OF ( 
        ONEOF ( 
            counterbore_passage_template, 
            countersunk_passage_template, 
            blind_passage_template ) )
    SUBTYPE OF ( continuous_template, inter_stratum_feature_template );
      SELF\inter_stratum_feature_template.of_passage_technology : default_unsupported_passage_definition;
  END_ENTITY;

  ENTITY unused_patches
    SUBTYPE OF ( overcomplex_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_LOWER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE'  IN value_limit_type( SELF\
               shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COUNT_MEASURE' );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_SURFACE' ] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
               + 'B_SPLINE_SURFACE_STRIP'] );
      wr5: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY unused_shape_element
    SUBTYPE OF ( miscellaneous_violation );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION_ITEM' ] );
  END_ENTITY;

  ENTITY upper_lower_limit;
      upper_limit  : numerical_item_with_unit;
      lower_limit  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY upper_lower_toleranced_datum;
      lower_tolerance_value  : numerical_item_with_unit;
      upper_tolerance_value  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY usage_concept_usage_relationship
    SUBTYPE OF ( geometric_placement_operation );
      SELF\geometric_placement_operation.template_definition : geometric_model;
      associated_usage                       : usage_concept;
      associating_usage_shape                : feature_or_non_feature_usage;
    DERIVE
      associated_shape_definition  : geometric_model := SELF\geometric_placement_operation.template_definition;
    INVERSE
      composed_model : SET [1 : 1] OF geometric_model FOR items;
    WHERE
      wr1: ( associating_usage_shape = composed_model[1] );
      wr2: ( NOT EXISTS( SELF\representation_item.name ) );
      wr3: ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_PLACEMENT' IN TYPEOF( SELF ) ) OR ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_OPERATOR_TRANSFORMATION'  IN 
               TYPEOF( SELF ) ) );
      wr4: ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_PLACEMENT_MODEL' IN TYPEOF( 
               composed_model[1] ) ) );
  END_ENTITY;

  ENTITY usage_view_connection_zone_terminal_shape_relationship;
      associating_terminal_shape             : part_feature_template_shape_model;
      associated_usage                       : connection_zone_in_usage_view;
      associated_connection_zone_shape_definition : geometric_model;
      associated_usage_placement             : axis_placement;
    WHERE
      wr1: ( associating_terminal_shape :<>: associated_connection_zone_shape_definition );
  END_ENTITY;

  ENTITY usage_view_level_non_feature_shape_model
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( non_feature_shape_model );
      SELF\non_feature_shape_model.associated_element : view_level_non_feature_shape_element;
      SELF\non_feature_shape_model.model_shape : view_shape_select;
    WHERE
      wr1: ( SELF\geometric_model.context_of_items = SELF\non_feature_shape_model.model_shape\geometric_model.context_of_items );
  END_ENTITY;

  ENTITY use_of_restricted_functionality
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            disallowed_assembly_relationship_usage, 
            excessive_use_of_groups, 
            excessive_use_of_layers, 
            inappropriate_use_of_layer ) )
    SUBTYPE OF ( externally_conditioned_data_quality_criterion );
  END_ENTITY;

  ENTITY user_defined_colour
    SUBTYPE OF ( colour );
      red    : REAL;
      green  : REAL;
      blue   : REAL;
    WHERE
      wr1: ( ( 0 <= red ) AND ( red <= 1 ) );
      wr2: ( ( 0 <= green ) AND ( green <= 1 ) );
      wr3: ( ( 0 <= blue ) AND ( blue <= 1 ) );
  END_ENTITY;

  ENTITY user_defined_curve_font
    SUBTYPE OF ( curve_font );
      pattern         : SET [1 : ?] OF curve_font_pattern;
      segment_symbol  : geometric_model;
  END_ENTITY;

  ENTITY user_defined_hatch_style
    SUBTYPE OF ( hatch_style );
      hatch_line_appearance          : curve_appearance;
      start_of_next_hatch_line       : vector;
      point_of_reference_hatch_line  : cartesian_point;
      pattern_start                  : cartesian_point;
      hatch_line_angle               : angle_data_element;
    WHERE
      wr1: ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SOLID_CURVE_FONT' IN TYPEOF( SELF.
               hatch_line_appearance.font ) );
  END_ENTITY;

  ENTITY user_defined_library_or_dictionary
    SUBTYPE OF ( external_source );
    INVERSE
      source : external_source_identification FOR item;
  END_ENTITY;

  ENTITY user_defined_marker
    SUBTYPE OF ( marker );
      symbol  : geometric_model;
  END_ENTITY;

  ENTITY user_defined_terminator
    SUBTYPE OF ( terminator );
      symbol  : geometric_model;
  END_ENTITY;

  ENTITY user_defined_tile_style
    SUBTYPE OF ( tile_style );
      first_direction_repeat_factor   : vector;
      second_direction_repeat_factor  : vector;
      tiling_scale                    : INTEGER;
  END_ENTITY;

  ENTITY user_selected_shape_elements
    SUBTYPE OF ( representation_item );
      selected_items  : SET [1 : ?] OF shape_model_element;
  END_ENTITY;

  ENTITY value_format_type_qualifier;
      value_format_type  : STRING;
    WHERE
      wr1: ( LENGTH( value_format_type ) <= 80 );
  END_ENTITY;

  ENTITY value_limit
    SUBTYPE OF ( numerical_item_with_unit, qualified_representation_item );
      SELF\qualified_representation_item.qualifiers : SET [1 : 1] OF pre_defined_type_qualifier;
    WHERE
      wr1: ( SELF\qualified_representation_item.qualifiers[1]\type_qualifier.name IN [ 'minimum', 'maximum'] );
  END_ENTITY;

  ENTITY value_list
    SUBTYPE OF ( measure_item );
      values  : LIST [1 : ?] OF measure_item;
  END_ENTITY;

  ENTITY value_range
    SUBTYPE OF ( measure_item );
      lower_limit  : numerical_item_with_unit;
      upper_limit  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY value_range_with_global_unit
    SUBTYPE OF ( measure_item );
      lower_limit  : numerical_item_with_global_unit;
      upper_limit  : numerical_item_with_global_unit;
  END_ENTITY;

  ENTITY value_set
    SUBTYPE OF ( measure_item );
      values  : SET [1 : ?] OF measure_item;
  END_ENTITY;

  ENTITY value_termination
    SUBTYPE OF ( joggle_termination );
      depth  : length_data_element;
      angle  : angle_data_element;
  END_ENTITY;

  ENTITY value_with_tolerances
    SUBTYPE OF ( measure_item );
      item_value   : numerical_item_with_unit;
      lower_limit  : REAL;
      upper_limit  : REAL;
  END_ENTITY;

  ENTITY value_with_unit
    SUPERTYPE OF ( 
        ONEOF ( 
            acceleration_data_element, 
            absorbed_dose_data_element, 
            radioactivity_data_element, 
            amount_of_substance_data_element, 
            angle_data_element, 
            area_data_element, 
            capacitance_data_element, 
            celsius_temperature_data_element, 
            conductance_data_element, 
            dielectric_constant_data_element, 
            dose_equivalent_data_element, 
            electric_charge_data_element, 
            electric_current_data_element, 
            electric_potential_data_element, 
            energy_data_element, 
            force_data_element, 
            frequency_data_element, 
            illuminance_data_element, 
            inductance_data_element, 
            length_data_element, 
            loss_tangent_data_element, 
            luminous_flux_data_element, 
            luminous_intensity_data_element, 
            magnetic_flux_data_element, 
            magnetic_flux_density_data_element, 
            mass_data_element, 
            power_data_element, 
            pressure_data_element, 
            ratio_data_element, 
            resistance_data_element, 
            solid_angle_data_element, 
            thermal_resistance_data_element, 
            thermodynamic_temperature_data_element, 
            velocity_data_element, 
            volume_data_element ) );
      unit             : unit;
      value_component  : measure_value;
  END_ENTITY;

  ENTITY variable
    ABSTRACT SUPERTYPE
    SUBTYPE OF ( generic_variable );
  END_ENTITY;

  ENTITY variable_expression
    SUBTYPE OF ( variable_semantics );
      property_associated  : property_variable_rep_select;
  END_ENTITY;

  ENTITY variable_semantics
    ABSTRACT SUPERTYPE;
  END_ENTITY;

  ENTITY variational_current_representation_relationship
    SUBTYPE OF ( representation_relationship );
      SELF\representation_relationship.rep_1 : variational_representation;
      current_result                         : representation;
    UNIQUE
      ur1 : current_result;
    WHERE
      wr1: ( QUERY ( q <* SELF\representation_relationship.rep_1.items | ( NOT ( 'VARIATIONAL_REPRESENTATION_SCHEMA.'
               + 'VARIATIONAL_REPRESENTATION_ITEM'  IN TYPEOF( q ) ) ) ) = SELF\representation_relationship.rep_2.items );
      wr2: ( SELF\representation_relationship.rep_1.context_of_items :=: SELF\representation_relationship.rep_2.context_of_items );
      wr3: ( SIZEOF( QUERY ( q <* SELF\representation_relationship.rep_2.items | ( 'VARIATIONAL_REPRESENTATION_SCHEMA.'
               + 'VARIATIONAL_REPRESENTATION_ITEM'  IN TYPEOF( q ) ) ) ) = 0 );
      wr4: ( current_result :=: SELF\representation_relationship.rep_2 );
  END_ENTITY;

  ENTITY variational_representation
    SUBTYPE OF ( representation );
    INVERSE
      cm_link : variational_current_representation_relationship FOR rep_1;
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* SELF\representation.items | ( 'VARIATIONAL_REPRESENTATION_SCHEMA.'
               + 'VARIATIONAL_REPRESENTATION_ITEM'  IN TYPEOF( q ) ) ) ) > 0 );
  END_ENTITY;

  ENTITY variational_representation_item
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            auxiliary_geometric_representation_item, 
            bound_variational_parameter, 
            unbound_variational_parameter ) )
    SUBTYPE OF ( representation_item );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* using_representations( SELF ) | ( NOT ( 'VARIATIONAL_REPRESENTATION_SCHEMA.'
               + 'VARIATIONAL_REPRESENTATION'  IN TYPEOF( q ) ) ) ) ) = 0 );
      wr2: ( SIZEOF( QUERY ( q <* using_representations( SELF ) | ( NOT ( SELF IN q.items ) ) ) ) = 0 );
  END_ENTITY;

  ENTITY vector
    SUBTYPE OF ( detailed_geometric_model_element );
      orientation  : direction;
      magnitude    : length_measure;
    WHERE
      wr1: ( magnitude >= 0 );
  END_ENTITY;

  ENTITY vector_appearance
    SUBTYPE OF ( curve_appearance );
      terminator_type  : terminator;
  END_ENTITY;

  ENTITY vee_profile
    SUBTYPE OF ( open_profile );
      profile_radius  : OPTIONAL numerical_item_with_unit;
      profile_angle   : numerical_item_with_unit;
      tilt_angle      : numerical_item_with_unit;
      first_length    : OPTIONAL numerical_item_with_unit;
      second_length   : OPTIONAL numerical_item_with_unit;
  END_ENTITY;

  ENTITY velocity_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY vertex
    SUBTYPE OF ( detailed_topological_model_element );
  END_ENTITY;

  ENTITY vertex_loop
    SUBTYPE OF ( loop );
      loop_vertex  : vertex;
  END_ENTITY;

  ENTITY vertex_point
    SUBTYPE OF ( detailed_geometric_model_element, vertex );
      vertex_position  : cartesian_point;
  END_ENTITY;

  ENTITY via
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            blind_via, 
            buried_via, 
            interfacial_connection ) )
    SUBTYPE OF ( plated_passage );
      SELF\definition_based_product_occurrence.derived_from : via_template;
  END_ENTITY;

  ENTITY via_template
    SUBTYPE OF ( continuous_template, inter_stratum_feature_template );
      SELF\inter_stratum_feature_template.of_passage_technology : default_via_definition;
    INVERSE
      access_mechanisms : SET [0 : ?] OF via_template_terminal FOR containing_shape;
  END_ENTITY;

  ENTITY via_template_terminal
    SUBTYPE OF ( general_part_feature );
      SELF\shape_element.containing_shape    : via_template;
      disallowed_inter_stratum_extent        : OPTIONAL SET [1 : ?] OF stratum_technology_occurrence_link;
      SELF\definitional_shape_element.connection_area : OPTIONAL SET [1 : ?] OF connection_zone_in_layout_template;
    UNIQUE
      ur1 : SELF\shape_element.element_name, containing_shape;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY via_terminal
    SUBTYPE OF ( laminate_component_feature );
      SELF\component_feature.definition    : via_template_terminal;
      SELF\shape_element.containing_shape  : via;
    WHERE
      wr1: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY view
    SUBTYPE OF ( styled_model );
      SELF\representation.items  : SET [1 : ?] OF view_element_select;
    WHERE
      wr1: ( SELF\representation.context_of_items\geometric_coordinate_space.dimension_count = 2 );
  END_ENTITY;

  ENTITY view_area
    SUBTYPE OF ( styled_model );
      size                       : planar_box;
      SELF\representation.items  : SET [1 : ?] OF view_area_element_select;
    WHERE
      wr1: ( SELF\representation.context_of_items\geometric_coordinate_space.dimension_count = 2 );
  END_ENTITY;

  ENTITY view_area_assignment;
      associated_view_area  : view_area;
      is_describing         : presentation_association_select;
  END_ENTITY;

  ENTITY view_area_relationship;
      relation_type  : view_area_relation_type;
      description    : OPTIONAL STRING;
      relating       : view_area;
      related        : view_area;
  END_ENTITY;

  ENTITY view_area_replication
    SUBTYPE OF ( styled_model_replication );
      SELF\styled_model_replication.replicated_model : view_area_replication_model;
  END_ENTITY;

  ENTITY view_based_constraint_occurrence
    SUPERTYPE OF ( 
        shape_and_view_based_constraint_occurrence )
    SUBTYPE OF ( constraint_occurrence );
      constraining_part  : product_view_definition;
  END_ENTITY;

  ENTITY view_definition_context;
      application_domain  : STRING;
      life_cycle_stage    : STRING;
      description         : OPTIONAL STRING;
    WHERE
      wr1: ( ( SIZEOF( USEDIN( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
               'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT'  ) ) > 0 ) OR ( SIZEOF( USEDIN( SELF, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PRODUCT_VIEW_DEFINITION.'
               + 'ADDITIONAL_CONTEXTS'  ) ) > 0 ) );
  END_ENTITY;

  ENTITY view_definition_relationship;
      id             : OPTIONAL STRING;
      relation_type  : OPTIONAL STRING;
      description    : OPTIONAL STRING;
      relating_view  : as_product_view_definition_or_reference;
      related_view   : as_product_view_definition_or_reference;
  END_ENTITY;

  ENTITY view_definition_usage
    SUBTYPE OF ( view_definition_relationship );
  END_ENTITY;

  ENTITY view_level_non_feature_shape_element
    SUBTYPE OF ( non_feature_shape_element );
    WHERE
      wr1: ( ( NOT ( SIZEOF( SELF\non_feature_shape_element.element_shape ) > 0 ) ) OR valid_es( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.USAGE_VIEW_LEVEL_NON_FEATURE_SHAPE_MODEL' , 
               SELF\non_feature_shape_element.element_shape ) );
      wr2: ( NOT EXISTS( SELF\shape_element.description ) );
  END_ENTITY;

  ENTITY view_ply_shape
    SUBTYPE OF ( projected_ply_shape );
  END_ENTITY;

  ENTITY view_relationship;
      relation_type  : view_relation_type;
      description    : OPTIONAL STRING;
      relating       : view;
      related        : view;
  END_ENTITY;

  ENTITY violation_of_agreed_conditions_on_system_environment
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            non_agreed_accuracy_parameter_usage, 
            non_agreed_scale_usage, 
            non_agreed_unit_usage ) )
    SUBTYPE OF ( externally_conditioned_data_quality_criterion );
  END_ENTITY;

  ENTITY visual_appearance
    SUBTYPE OF ( surface_condition );
      colour_id     : STRING;
      colour_name   : OPTIONAL STRING;
      lustre        : STRING;
      transparency  : OPTIONAL STRING;
      pattern       : OPTIONAL STRING;
    DERIVE
      SELF\assigned_property.name  : STRING := 'visual appearance';
  END_ENTITY;

  ENTITY visual_orientation_feature
    SUBTYPE OF ( part_feature );
      associated_body_vertical_extent  : OPTIONAL SET [1 : 2] OF package_body_surface;
      associated_terminal              : package_terminal;
  END_ENTITY;

  ENTITY volume_data_element
    SUBTYPE OF ( value_with_unit );
  END_ENTITY;

  ENTITY volume_unit
    SUBTYPE OF ( derived_unit );
  END_ENTITY;

  ENTITY week_of_year_and_day_date;
      day_component   : OPTIONAL day_in_week_number;
      year_component  : year_number;
      week_component  : week_in_year_number;
  END_ENTITY;

  ENTITY wire_terminal
    SUBTYPE OF ( package_terminal );
  END_ENTITY;

  ENTITY wire_terminal_template_definition
    SUBTYPE OF ( package_terminal_template_definition );
      SELF\package_terminal_template_definition.internal_connection_zone : SET [1 : ?] OF
                                                 connection_zone_in_part_feature_template_definition;
      wire_terminal_length                   : OPTIONAL length_tolerance_characteristic;
  END_ENTITY;

  ENTITY woodruff_slot_end_type
    SUBTYPE OF ( slot_end_type );
      radius  : numerical_item_with_unit;
  END_ENTITY;

  ENTITY work_order;
      name            : STRING;
      description     : OPTIONAL STRING;
      in_response_to  : SET [0 : ?] OF work_request;
  END_ENTITY;

  ENTITY work_request
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_work_request, 
            externally_defined_work_request ) );
      request_id   : STRING;
      version_id   : OPTIONAL STRING;
      description  : OPTIONAL STRING;
      purpose      : STRING;
  END_ENTITY;

  ENTITY work_request_relationship;
      relation_type  : STRING;
      description    : OPTIONAL STRING;
      relating       : work_request;
      related        : work_request;
  END_ENTITY;

  ENTITY work_request_status
    SUPERTYPE OF ( 
        ONEOF ( 
            pre_defined_work_request_status, 
            externally_defined_work_request_status ) );
      status        : STRING;
      work_request  : work_request;
  END_ENTITY;

  ENTITY woven_assembly
    SUBTYPE OF ( stock_material );
  END_ENTITY;

  ENTITY wrong_element_name
    SUBTYPE OF ( miscellaneous_violation );
    WHERE
      wr1: validate_ecdq_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'REPRESENTATION_ITEM' ] );
  END_ENTITY;

  ENTITY wrongly_oriented_void
    SUBTYPE OF ( erroneous_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ORIENTED_CLOSED_SHELL' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY wrongly_placed_loop
    SUBTYPE OF ( erroneous_topology_and_geometry_relationship );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FACE'] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'FACE_BOUND' ] );
      wr4: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_MEASURE'] );
  END_ENTITY;

  ENTITY wrongly_placed_void
    SUBTYPE OF ( erroneous_manifold_solid_brep );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_logical_test;
    WHERE
      wr1: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_VALUE' );
      wr2: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'MANIFOLD_SOLID_BREP' ] );
      wr3: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'ORIENTED_CLOSED_SHELL' ] );
      wr4: validate_accuracy_types( SELF, [] );
  END_ENTITY;

  ENTITY xor_expression
    SUBTYPE OF ( binary_boolean_expression );
      SELF\binary_generic_expression.operands : LIST [2 : 2] OF boolean_expression;
  END_ENTITY;

  ENTITY year_month;
      month_component  : month_in_year_number;
      year_component   : year_number;
  END_ENTITY;

  ENTITY zero_surface_normal
    SUBTYPE OF ( geometry_with_local_irregularity );
      SELF\shape_data_quality_criterion.assessment_specification : shape_data_quality_assessment_by_numerical_test;
    WHERE
      wr1: ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_UPPER_VALUE_LIMIT' ) 
               IN TYPEOF( SELF\shape_data_quality_criterion.assessment_specification\
               shape_data_quality_assessment_by_numerical_test.threshold ) ) AND ( 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLANE_ANGLE_MEASURE'  IN value_limit_type( 
               SELF\shape_data_quality_criterion.assessment_specification\shape_data_quality_assessment_by_numerical_test.
               threshold ) ) );
      wr2: validate_measured_data_type( SELF, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE'  );
      wr3: validate_inspected_elements_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SURFACE'] );
      wr4: validate_locations_of_extreme_value_type( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'POINT_ON_SURFACE' ] );
      wr5: validate_accuracy_types( SELF, [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
               + 'PLANE_ANGLE_MEASURE' ] );
  END_ENTITY;

  ENTITY zone_structural_makeup
    SUPERTYPE OF ( 
        ONEOF ( 
            smeared_material 
            AND
            thickness_laminate_table, 
            smeared_material 
            AND
            percentage_laminate_table, 
            thickness_laminate_table, 
            percentage_laminate_table, 
            smeared_material ) )
    SUBTYPE OF ( laminate_table );
      boundary  : OPTIONAL zone_structural_makeup_shape_representation;
  END_ENTITY;

  ENTITY zone_structural_makeup_shape_representation
    SUPERTYPE OF ( 
        ONEOF ( 
            point_zone_shape, 
            edge_zone_shape ) );
  END_ENTITY;

  RULE addresses_are_assigned FOR ( address );

  WHERE
    wr1: ( SIZEOF( QUERY ( a <* address | ( SIZEOF( USEDIN( a, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF'  
             + '.ADDRESS_ASSIGNMENT.ASSIGNED_ADDRESS' ) ) = 0 ) ) ) = 0 );

  END_RULE;

  RULE analytical_model_definition_constraint FOR ( product_view_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( pvd <* product_view_definition | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'ANALYTICAL_MODEL_DEFINITION' ) IN TYPEOF( 
             pvd ) ) ) AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'ANALYTICAL_MODEL_VERSION' ) 
             IN TYPEOF( pvd.defined_version ) ) ) ) ) = 0 );

  END_RULE;

  RULE analytical_model_version_constraint FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'ANALYTICAL_MODEL_VERSION' ) IN TYPEOF( pv ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'ANALYTICAL_MODEL' ) IN TYPEOF( pv.
             of_product ) ) ) ) ) = 0 );

  END_RULE;

  RULE area_component_shape_constraint FOR ( area_component );

  WHERE
    wr1: ( SIZEOF( QUERY ( ac <* area_component | ( NOT ( SIZEOF( QUERY ( ac2ds <* USEDIN( ac, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_COMPONENT'  ) | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'SINGLE_AREA_CSG_2D_MODEL'  IN TYPEOF( ac2ds ) ) ) ) ) = 0 ) ) ) ) = 0 );
    wr2: ( SIZEOF( QUERY ( ac <* area_component | ( ( NOT ac\area_component.is_base ) OR ( NOT ( SIZEOF( QUERY ( ac2ds <* 
             USEDIN( ac, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_COMPONENT'  ) | ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'SINGLE_BOUNDARY_CSG_2D_MODEL'  IN TYPEOF( ac2ds ) ) ) ) ) = 0 ) ) ) ) ) = 0 );

  END_RULE;

  RULE chemical_element_constraint FOR ( product );

  WHERE
    wr1: ( SIZEOF( QUERY ( p <* product | ( ( ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
             'SUBSTANCE'  ) IN TYPEOF( p ) ) AND ( p\product.name IN chemical_elements ) ) OR ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SUBSTANCE' ) IN TYPEOF( p ) ) ) AND ( NOT 
             ( p\product.name IN chemical_elements ) ) ) ) ) ) = SIZEOF( product ) );

  END_RULE;

  RULE component_in_assembly_2d_context FOR ( area_component );

  WHERE
    wr1: ( SIZEOF( QUERY ( ac <* area_component | ( NOT ( ( SIZEOF( USEDIN( ac, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_COMPONENT'  ) ) = 0 ) OR in_2d_assembly_context( ac ) ) ) ) ) = 0 );

  END_RULE;

  RULE component_in_assembly_3d_context FOR ( area_component );

  WHERE
    wr1: ( SIZEOF( QUERY ( ac <* area_component | ( NOT ( ( SIZEOF( USEDIN( ac, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_COMPONENT'  ) ) = 0 ) OR in_3d_assembly_context( ac ) ) ) ) ) = 0 );

  END_RULE;

  RULE definition_replacement_requires_effectivity_assignment FOR ( part_definition_relationship );

  WHERE
    wr1: ( SIZEOF( QUERY ( pdr <* part_definition_relationship | ( ( pdr\view_definition_relationship.relation_type = 
             'definition replacement'  ) AND ( SIZEOF( USEDIN( pdr, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EFFECTIVITY_ASSIGNMENT.ITEMS'  ) ) = 0 ) ) ) ) =
             0 );

  END_RULE;

  RULE document_definition_constraint FOR ( product_view_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( dd <* product_view_definition | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DOCUMENT_DEFINITION' ) IN TYPEOF( dd ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'DOCUMENT_VERSION' ) IN TYPEOF( dd.
             defined_version ) ) ) ) ) = 0 );

  END_RULE;

  RULE document_version_constraint FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DOCUMENT_VERSION' ) IN TYPEOF( pv ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'DOCUMENT' ) IN TYPEOF( pv.of_product ) ) ) ) ) 
             = 0 );

  END_RULE;

  RULE information_product_version_constraint FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INFORMATION_VERSION' ) IN TYPEOF( pv ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'INFORMATION_PRODUCT' ) IN TYPEOF( pv
             .of_product ) ) ) ) ) = 0 );

  END_RULE;

  RULE limd_unique_stratum FOR ( stratum, layered_interconnect_module_design_view, stratum_technology_occurrence );

    LOCAL
      s     : BAG OF stratum := [];
      imsar : BAG OF interconnect_module_stratum_assembly_relationship := [];
      sto   : BAG OF stratum_technology_occurrence := [];
      pass  : BOOLEAN := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( layered_interconnect_module_design_view ) BY 1;
      imsar := bag_to_set( USEDIN( layered_interconnect_module_design_view[i], 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.'
          + 'ASSEMBLY'  ) );
      REPEAT j := 1 TO SIZEOF( imsar ) BY 1;
        s := s + imsar[j].component;
      END_REPEAT;
      REPEAT j := 1 TO SIZEOF( s ) BY 1;
        sto := sto + s[j].definition;
      END_REPEAT;
      IF SIZEOF( sto ) < SIZEOF( s ) THEN
        pass := FALSE;
        ESCAPE;
      END_IF;
    END_REPEAT;

  WHERE
    wr1: pass;

  END_RULE;

  RULE mandatory_part_occurrence_definition_relationship FOR ( assembly_component_relationship );

    LOCAL
      assemblies_of_parts : SET OF assembly_component_relationship := [];
    END_LOCAL;

  WHERE
    wr1: ( SIZEOF( QUERY ( ar <* assemblies_of_parts | ( NOT ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLED_PART_ASSOCIATION'  IN TYPEOF( ar ) ) ) ) ) 
             = 0 );

  END_RULE;

  RULE max_one_entity_prefix FOR ( enum_reference_prefix );

  WHERE
    wr1: ( SIZEOF( QUERY ( x <* enum_reference_prefix | TRUE ) ) <= 1 );

  END_RULE;

  RULE no_component_assembly_2d_location_for_area_component FOR ( area_component );

  WHERE
    wr1: ( SIZEOF( QUERY ( ac <* area_component | ( NOT ( ( SIZEOF( USEDIN( ac, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_COMPONENT'  ) ) = 0 ) OR no_2d_location_for_component( ac ) ) ) ) ) = 0 );

  END_RULE;

  RULE no_component_assembly_3d_location_for_area_component FOR ( area_component );

  WHERE
    wr1: ( SIZEOF( QUERY ( ac <* area_component | ( NOT ( ( SIZEOF( USEDIN( ac, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_COMPONENT'  ) ) = 0 ) OR no_3d_location_for_component( ac ) ) ) ) ) = 0 );

  END_RULE;

  RULE part_view_definition_constraint FOR ( product_view_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( pvd <* product_view_definition | ( ( NOT ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_VIEW_DEFINITION'  IN TYPEOF( pvd ) ) ) AND 
             ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_VERSION' IN TYPEOF( pvd.defined_version ) ) ) ) ) 
             = 0 );

  END_RULE;

  RULE person_requires_person_and_organization FOR ( person );

  WHERE
    wr1: ( SIZEOF( QUERY ( p <* person | ( SIZEOF( USEDIN( p, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF' 
             + '.PERSON_IN_ORGANIZATION.CONCERNED_PERSON' ) ) = 0 ) ) ) = 0 );

  END_RULE;

  RULE physical_unit_network_definition_constraint FOR ( physical_unit_network_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( fund <* physical_unit_network_definition | ( ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'ASSEMBLY_MODULE_DESIGN_VIEW' ) IN TYPEOF( 
             fund ) ) OR ( SIZEOF( USEDIN( fund, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
             'PHYSICAL_UNIT_SHAPE_MODEL.SHAPE_CHARACTERIZED_DEFINITION'  ) ) = 0 ) ) ) ) = SIZEOF( 
             physical_unit_network_definition ) );

  END_RULE;

  RULE product_occurrence_usage FOR ( product_occurrence );

  WHERE
    wr1: ( SIZEOF( QUERY ( po <* product_occurrence | ( NOT ( ( SIZEOF( USEDIN( po, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP.'
             + 'RELATED_VIEW'  ) ) + SIZEOF( USEDIN( po, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP.PRODUCT'  ) ) ) > 0 ) ) ) ) = 0 );

  END_RULE;

  RULE restrict_to_dated_effectivity FOR ( effectivity_assignment );

    LOCAL
      ndea_set : SET OF effectivity_assignment := [];
    END_LOCAL;
    ndea_set := QUERY ( ea <* effectivity_assignment | ( NOT ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DATED_EFFECTIVITY'  IN TYPEOF( ea.
        assigned_effectivity ) ) ) );

  WHERE
    wr1: ( SIZEOF( QUERY ( ea <* ndea_set | ( SIZEOF( [ 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'CONFIGURATION' ] * type_of_set( ea.items ) ) > 0 ) ) ) = 0 );

  END_RULE;

  RULE rule_software_definition_constraint FOR ( product_view_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( pvd <* product_view_definition | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'RULE_SOFTWARE_DEFINITION' ) IN TYPEOF( pvd ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'RULE_VERSION' ) IN TYPEOF( pvd.
             defined_version ) ) ) ) ) = 0 );

  END_RULE;

  RULE rule_version_constraint FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'RULE_VERSION' ) IN TYPEOF( pv ) ) ) AND ( 
             ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'RULE_PRODUCT' ) IN TYPEOF( pv.of_product ) ) ) ) ) 
             = 0 );

  END_RULE;

  RULE shape_requires_product_view FOR ( item_shape );

  WHERE
    wr1: ( SIZEOF( QUERY ( is <* item_shape | ( NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF' + '.'
             + 'PRODUCT_VIEW_DEFINITION'  ) IN TYPEOF( is.described_element ) ) ) ) ) = 0 );

  END_RULE;

  RULE software_definition_constraint FOR ( product_view_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( pvd <* product_view_definition | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SOFTWARE_DEFINITION' ) IN TYPEOF( pvd ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SOFTWARE_VERSION' ) IN TYPEOF( pvd.
             defined_version ) ) ) ) ) = 0 );

  END_RULE;

  RULE software_version_constraint FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SOFTWARE_VERSION' ) IN TYPEOF( pv ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SOFTWARE' ) IN TYPEOF( pv.of_product ) ) ) ) ) 
             = 0 );

  END_RULE;

  RULE specific_product_occurrence_definition_relationship FOR ( product_occurrence_definition_relationship );

  WHERE
    wr1: ( SIZEOF( QUERY ( occ_rel <* product_occurrence_definition_relationship | ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF'  + '.PART_VIEW_DEFINITION' ) IN TYPEOF( occ_rel
             .relating_view ) ) ) ) ) = 0 );
    wr2: ( SIZEOF( QUERY ( occ_rel <* product_occurrence_definition_relationship | ( NOT ( ( 'PRODUCT_OCCURRENCE_ARM' + '.'
             + 'PRODUCT_OCCURRENCE'  ) IN TYPEOF( occ_rel.related_view ) ) ) ) ) = 0 );

  END_RULE;

  RULE substance_version_constraint FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SUBSTANCE_VERSION' ) IN TYPEOF( pv ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SUBSTANCE' ) IN TYPEOF( pv.
             of_product ) ) ) ) ) = 0 );

  END_RULE;

  RULE substance_view_definition_constraint FOR ( product_view_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( pvd <* product_view_definition | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SUBSTANCE_VIEW_DEFINITION' ) IN TYPEOF( 
             pvd ) ) ) AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SUBSTANCE_VERSION' ) IN 
             TYPEOF( pvd.defined_version ) ) ) ) ) = 0 );

  END_RULE;

  RULE template_definition_constraint FOR ( product_view_definition );

  WHERE
    wr1: ( SIZEOF( QUERY ( pvd <* product_view_definition | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'TEMPLATE_DEFINITION' ) IN TYPEOF( pvd ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'TEMPLATE_VERSION' ) IN TYPEOF( pvd.
             defined_version ) ) ) ) ) = 0 );

  END_RULE;

  RULE template_version_constraint FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( ( NOT ( ( 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'TEMPLATE_VERSION' ) IN TYPEOF( pv ) ) ) 
             AND ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'TEMPLATE' ) IN TYPEOF( pv.of_product ) ) ) ) ) 
             = 0 );

  END_RULE;

  RULE total_over_assembly_component_relationship_constraint FOR ( assembly_component_relationship );

  WHERE
    wr1: ( SIZEOF( QUERY ( p <* assembly_component_relationship | ( SIZEOF( [
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM.COMPONENT_UPPER_LEVEL_IDENTIFICATION' , 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM.MULTI_LEVEL_REFERENCE_DESIGNATOR' , 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM.NEXT_ASSEMBLY_USAGE' , 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM.PROMISSORY_USAGE' ] * TYPEOF( p ) ) = 0 ) ) ) = 0 );

  END_RULE;

  RULE unique_assembly_component_2d_shape_model FOR ( assembly_component_2d_shape_model );

    LOCAL
      ac   : BAG OF assembly_component := [];
      pass : BOOLEAN := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( assembly_component_2d_shape_model ) BY 1;
      ac := ac + assembly_component_2d_shape_model[i].shape_characterized_component;
    END_REPEAT;

  WHERE
    wr1: ( SIZEOF( ac ) = SIZEOF( bag_to_set( ac ) ) );

  END_RULE;

  RULE unique_assembly_component_3d_shape_model FOR ( assembly_component_3d_shape_model );

    LOCAL
      ac : BAG OF assembly_component := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( assembly_component_3d_shape_model ) BY 1;
      ac := ac + assembly_component_3d_shape_model[i].shape_characterized_component;
    END_REPEAT;

  WHERE
    wr1: ( SIZEOF( ac ) = SIZEOF( bag_to_set( ac ) ) );

  END_RULE;

  RULE unique_assembly_component_non_planar_shape_model FOR ( assembly_component_non_planar_shape_model );

    LOCAL
      ac : BAG OF assembly_component := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( assembly_component_non_planar_shape_model ) BY 1;
      ac := ac + assembly_component_non_planar_shape_model[i].shape_characterized_component;
    END_REPEAT;

  WHERE
    wr1: ( SIZEOF( ac ) = SIZEOF( bag_to_set( ac ) ) );

  END_RULE;

  RULE unique_assembly_component_relationship FOR ( assembly_component_relationship );

    LOCAL
      gee : SET OF product_view_definition := [];
      gei : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( assembly_component_relationship ) BY 1;
      gee := gee + assembly_component_relationship[i]\product_occurrence_definition_relationship.related_view;
      gei := gei + assembly_component_relationship[i]\product_occurrence_definition_relationship.relating_view;
    END_REPEAT;

  WHERE
    wr1: ( SIZEOF( gee ) = SIZEOF( gei ) );

  END_RULE;

  RULE unique_assembly_item_number FOR ( assembly_item_number );

    LOCAL
      acr : BAG OF assembly_component_relationship := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( assembly_item_number ) BY 1;
      acr := acr + assembly_item_number[i].assembly_usage;
    END_REPEAT;

  WHERE
    wr1: ( SIZEOF( acr ) = SIZEOF( bag_to_set( acr ) ) );

  END_RULE;

  RULE unique_document_id FOR ( document );

  WHERE
    wr1: ( SIZEOF( QUERY ( p1 <* document | ( SIZEOF( QUERY ( p2 <* document | ( ( NOT ( p1 :=: p2 ) ) AND ( p1.id = p2.id ) ) ) ) 
             > 0 ) ) ) = 0 );

  END_RULE;

  RULE unique_land_physical_template FOR ( land_physical_template );

    LOCAL
      esi   : BAG OF external_source_identification := [];
      iid   : BAG OF STRING := [];
      itype : BAG OF STRING := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( land_physical_template ) BY 1;
      esi := esi + land_physical_template[i].pre_defined_classification_code[1];
      iid := iid + land_physical_template[i].pre_defined_classification_code[1]\external_source_identification.source_id;
      itype := itype + land_physical_template[i].pre_defined_classification_code[1]\external_source_identification.source_type;
    END_REPEAT;

  WHERE
    wr1: ( ( SIZEOF( esi ) = SIZEOF( bag_to_set( esi ) ) ) AND ( SIZEOF( iid ) = SIZEOF( bag_to_set( iid ) ) ) AND ( 1 = SIZEOF( 
             bag_to_set( itype ) ) ) );

  END_RULE;

  RULE unique_part_id FOR ( part );

  WHERE
    wr1: ( SIZEOF( QUERY ( p1 <* part | ( SIZEOF( QUERY ( p2 <* part | ( ( NOT ( p1 :=: p2 ) ) AND ( p1.id = p2.id ) ) ) ) > 0 ) ) ) 
             = 0 );

  END_RULE;

  RULE unique_part_template_shape_model_for_geometric_template FOR ( geometric_template );

    LOCAL
      ptsm : SET OF part_template_shape_model := [];
    END_LOCAL;

  WHERE
    wr1: ( SIZEOF( QUERY ( gt <* geometric_template | ( SIZEOF( QUERY ( ptsm1 <* USEDIN( gt, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( SIZEOF( QUERY ( ptsm2 <* USEDIN( gt, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TEMPLATE_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ptsm1 = ptsm2 ) ) ) > 1 ) ) ) > 0 ) ) ) = 0 );

  END_RULE;

  RULE unique_physical_unit_3d_shape_model_for_part_design_and_usage_view FOR ( part_design_view, part_usage_view );

  WHERE
    wr1: ( SIZEOF( QUERY ( pdv <* part_design_view | ( SIZEOF( QUERY ( pu3dsm1 <* USEDIN( pdv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pu3dsm1 ) ) AND ( SIZEOF( QUERY ( pu3dsm2 <* USEDIN( pdv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pu3dsm2 ) ) AND ( pu3dsm1 = pu3dsm2 ) ) ) ) > 1 ) ) ) ) > 0 ) ) ) =
             0 );
    wr2: ( SIZEOF( QUERY ( puv <* part_usage_view | ( SIZEOF( QUERY ( pu3dsm1 <* USEDIN( puv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pu3dsm1 ) ) AND ( SIZEOF( QUERY ( pu3dsm2 <* USEDIN( puv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pu3dsm2 ) ) AND ( pu3dsm1 = pu3dsm2 ) ) ) ) > 1 ) ) ) ) > 0 ) ) ) =
             0 );

  END_RULE;

  RULE unique_physical_unit_planar_shape_model_for_part_design_and_usage_view FOR ( part_design_view, part_usage_view );

  WHERE
    wr1: ( SIZEOF( QUERY ( pdv <* part_design_view | ( SIZEOF( QUERY ( pupsm1 <* USEDIN( pdv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pupsm1 ) ) AND ( SIZEOF( QUERY ( pupsm2 <* USEDIN( pdv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pupsm2 ) ) AND ( pupsm1 = pupsm2 ) ) ) ) > 1 ) ) ) ) > 0 ) ) ) = 0 );
    wr2: ( SIZEOF( QUERY ( puv <* part_usage_view | ( SIZEOF( QUERY ( pupsm1 <* USEDIN( puv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pupsm1 ) ) AND ( SIZEOF( QUERY ( pupsm2 <* USEDIN( puv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_UNIT_SHAPE_MODEL.'
             + 'SHAPE_CHARACTERIZED_DEFINITION'  ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PHYSICAL_UNIT_PLANAR_SHAPE_MODEL'  IN TYPEOF( pupsm2 ) ) AND ( pupsm1 = pupsm2 ) ) ) ) > 1 ) ) ) ) > 0 ) ) ) = 0 );

  END_RULE;

  RULE unique_product_version_id FOR ( product );

  WHERE
    wr1: ( SIZEOF( QUERY ( p <* product | ( SIZEOF( QUERY ( pv1 <* USEDIN( p, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VERSION.OF_PRODUCT'  ) | ( SIZEOF( 
             QUERY ( pv2 <* USEDIN( p, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VERSION.'
             + 'OF_PRODUCT'  ) | ( pv1.id = pv2.id ) ) ) > 1 ) ) ) > 0 ) ) ) = 0 );

  END_RULE;

  RULE unique_product_view_definition_id FOR ( product_version );

  WHERE
    wr1: ( SIZEOF( QUERY ( pv <* product_version | ( SIZEOF( QUERY ( pvd1 <* USEDIN( pv, 
             'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION.DEFINED_VERSION'  ) | ( 
             SIZEOF( QUERY ( pvd2 <* USEDIN( pv, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
             + 'PRODUCT_VIEW_DEFINITION.DEFINED_VERSION'  ) | ( pvd1.id = pvd2.id ) ) ) > 1 ) ) ) > 0 ) ) ) = 0 );

  END_RULE;

  RULE unique_requirement_id FOR ( requirement );

  WHERE
    wr1: ( SIZEOF( QUERY ( p1 <* requirement | ( SIZEOF( QUERY ( p2 <* requirement | ( ( NOT ( p1 :=: p2 ) ) AND ( p1.id = p2.id ) ) ) ) 
             > 0 ) ) ) = 0 );

  END_RULE;

  FUNCTION ac_get_assemblies(
               input : assembly_component
           ) : SET OF product_view_definition;

    LOCAL
      acr : SET OF assembly_component_relationship := input\assembly_component.occurrence_contexts;
      pvd : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( acr ) BY 1;
      IF NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' ) IN TYPEOF( 
          acr[i]\product_occurrence_definition_relationship.relating_view ) ) THEN
        pvd := pvd + acr[i]\product_occurrence_definition_relationship.relating_view;
      ELSE
        pvd := pvd + get_assemblies( acr[i]\product_occurrence_definition_relationship.relating_view );
      END_IF;
    END_REPEAT;
    RETURN( pvd );

  END_FUNCTION;

  FUNCTION ac_get_group_assemblies(
               input : SET OF assembly_group_component
           ) : SET OF product_view_definition;

    LOCAL
      acr : SET OF assembly_component_relationship := [];
      pvd : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      acr := input[i]\assembly_component.occurrence_contexts;
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX( acr ) BY 1;
      IF NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' ) IN TYPEOF( 
          acr[i]\product_occurrence_definition_relationship.relating_view ) ) THEN
        pvd := pvd + acr[i]\product_occurrence_definition_relationship.relating_view;
      ELSE
        pvd := pvd + get_assemblies( acr[i]\product_occurrence_definition_relationship.relating_view );
      END_IF;
    END_REPEAT;
    RETURN( pvd );

  END_FUNCTION;

  FUNCTION ac_get_groups(
               input : assembly_component
           ) : SET OF assembly_group_component;

    LOCAL
      acr : SET OF assembly_component_relationship := input\assembly_component.occurrence_contexts;
      agc : SET OF assembly_group_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( acr ) BY 1;
      IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'ASSEMBLY_GROUP_COMPONENT' ) IN TYPEOF( acr[i]
          \product_occurrence_definition_relationship.relating_view ) THEN
        agc := agc + acr[i]\product_occurrence_definition_relationship.relating_view;
      END_IF;
    END_REPEAT;
    RETURN( agc );

  END_FUNCTION;

  FUNCTION ac_get_products(
               input : SET OF product_version
           ) : SET OF product;

    LOCAL
      p : SET OF product := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      p := p + input[i]\product_version.of_product;
    END_REPEAT;
    RETURN( p );

  END_FUNCTION;

  FUNCTION ac_get_versions(
               input : SET OF product_view_definition
           ) : SET OF product_version;

    LOCAL
      pv : SET OF product_version := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      pv := pv + input[i]\product_view_definition.defined_version;
    END_REPEAT;
    RETURN( pv );

  END_FUNCTION;

  FUNCTION acyclic(
               arg1 : generic_expression;
               arg2 : SET OF generic_expression
           ) : BOOLEAN;

    LOCAL
      result : BOOLEAN;
    END_LOCAL;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SIMPLE_GENERIC_EXPRESSION' IN TYPEOF( arg1 ) THEN
      RETURN( TRUE );
    END_IF;
    IF arg1 IN arg2 THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.UNARY_GENERIC_EXPRESSION' IN TYPEOF( arg1 ) THEN
      RETURN( acyclic( arg1\unary_generic_expression.operand, arg2 + [arg1] ) );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BINARY_GENERIC_EXPRESSION' IN TYPEOF( arg1 ) THEN
      RETURN( acyclic( arg1\binary_generic_expression.operands[1], arg2 + [arg1] ) AND acyclic( arg1\binary_generic_expression.
          operands[2], arg2 + [arg1] ) );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION' IN TYPEOF( arg1 )
        THEN
      result := TRUE;
      REPEAT i := 1 TO SIZEOF( arg1\multiple_arity_generic_expression.operands ) BY 1;
        result := result AND acyclic( arg1\multiple_arity_generic_expression.operands[i], arg2 + [arg1] );
      END_REPEAT;
      RETURN( result );
    END_IF;

  END_FUNCTION;

  FUNCTION acyclic_area_component(
               relation : area_component;
               relatives : SET [1 : ?] OF area_component;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF area_component;
    END_LOCAL;
    IF relation.replaced_component IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.replaced_component, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'AREA_COMPONENT.' + 'REPLACED_BY' ) ) | ( 
        specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_area_component( x[i], relatives + relation.replaced_component, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_assembly_component_placement_link(
               relation : assembly_component_placement_link;
               relatives : SET [1 : ?] OF assembly_component;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF assembly_component_placement_link;
    END_LOCAL;
    IF relation.precedent_element IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_element, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'ASSEMBLY_COMPONENT_PLACEMENT_LINK.' + 
        'SUBSEQUENT_ELEMENT'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_assembly_component_placement_link( x[i], relatives + relation.precedent_element, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_conductive_interconnect_element_terminal_link(
               relation : conductive_interconnect_element_terminal_link;
               relatives : SET [1 : ?] OF conductive_interconnect_element_terminal;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF conductive_interconnect_element_terminal_link := [];
    END_LOCAL;
    IF relation.precedent_point IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_point, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'CONDUCTIVE_INTERCONNECT_ELEMENT_TERMINAL_LINK.' 
        + 'SUBSEQUENT_POINT' ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_conductive_interconnect_element_terminal_link( x[i], relatives + relation.precedent_point, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_equivalent_stackup_model_definition(
               relation : equivalent_stackup_model_definition;
               relatives : SET [1 : ?] OF stratum_stack_model;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF equivalent_stackup_model_definition := [];
    END_LOCAL;
    IF relation.primary_stackup_model IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.primary_stackup_model, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'EQUIVALENT_STACKUP_MODEL_DEFINITION.' + 
        'EQUIVALENT_STACKUP_MODEL'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_equivalent_stackup_model_definition( x[i], relatives + relation.primary_stackup_model, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_functional_unit_make_from_relationship(
               relation : functional_unit_make_from_relationship;
               relatives : SET [1 : ?] OF functional_unit_usage_view;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF functional_unit_make_from_relationship;
    END_LOCAL;
    IF relation.relating_view IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.relating_view, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'FUNCTIONAL_UNIT_MAKE_FROM_RELATIONSHIP.' + 
        'RELATED_VIEW'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_functional_unit_make_from_relationship( x[i], relatives + relation.relating_view, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship(
               relation : functional_unit_usage_view_terminal_definition_make_from_relationship;
               relatives : SET [1 : ?] OF functional_unit_usage_view_terminal_definition;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF functional_unit_usage_view_terminal_definition_make_from_relationship;
    END_LOCAL;
    IF relation.reusable_feature IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.reusable_feature, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
        'FUNCTIONAL_UNIT_USAGE_VIEW_TERMINAL_DEFINITION_MAKE_FROM_RELATIONSHIP.'  + 'RESULTANT_FEATURE' ) ) | ( specific_relation 
        IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_functional_unit_usage_view_terminal_definition_make_from_relationship( x[i], relatives + relation.
          reusable_feature, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_library_to_design_stack_model_mapping(
               relation : library_to_design_stack_model_mapping;
               relatives : SET [1 : ?] OF stratum_stack_model;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF library_to_design_stack_model_mapping := [];
    END_LOCAL;
    IF relation.relating_view IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.relating_view, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'LIBRARY_TO_DESIGN_STACK_MODEL_MAPPING.' + 
        'RELATED_VIEW'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_library_to_design_stack_model_mapping( x[i], relatives + relation.relating_view, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_linear_array_placement_group_component_link(
               relation : linear_array_placement_group_component_link;
               relatives : SET [1 : ?] OF linear_array_placement_group_component;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF linear_array_placement_group_component_link;
    END_LOCAL;
    IF relation.precedent_element IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_element, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK.' +
        'SUBSEQUENT_ELEMENT' ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_linear_array_placement_group_component_link( x[i], relatives + relation.precedent_element, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_part_feature_placement_link(
               relation : part_feature_placement_link;
               relatives : SET [1 : ?] OF part_feature;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF part_feature_placement_link := [];
    END_LOCAL;
    IF relation.precedent_element IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_element, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PART_FEATURE_PLACEMENT_LINK.' + 
        'SUBSEQUENT_ELEMENT'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_part_feature_placement_link( x[i], relatives + relation.precedent_element, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_part_feature_precedence_relationship(
               relation : part_feature;
               relatives : SET [1 : ?] OF part_feature;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF part_feature;
    END_LOCAL;
    IF relation.precedent_feature IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_feature, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PART_FEATURE.' + 'SUBSEQUENT_FEATURE' ) ) | ( 
        specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_part_feature_precedence_relationship( x[i], relatives + relation.precedent_feature, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_part_linear_array_feature_link(
               relation : part_linear_array_feature_link;
               relatives : SET [1 : ?] OF part_linear_array_feature;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF part_linear_array_feature_link := [];
    END_LOCAL;
    IF relation.precedent_element IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_element, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PART_LINEAR_ARRAY_FEATURE_LINK.' + 
        'SUBSEQUENT_ELEMENT'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_part_linear_array_feature_link( x[i], relatives + relation.precedent_element, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_passage_terminal_based_fabrication_joint_link(
               relation : passage_terminal_based_fabrication_joint_link;
               relatives : SET [1 : ?] OF fabrication_joint;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF passage_terminal_based_fabrication_joint_link;
    END_LOCAL;
    IF relation.precedent_point IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_point, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PASSAGE_TERMINAL_BASED_FABRICATION_JOINT_LINK.' 
        + 'SUBSEQUENT_POINT' ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_passage_terminal_based_fabrication_joint_link( x[i], relatives + relation.precedent_point, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_physical_connectivity_layout_topology_link(
               relation : physical_connectivity_layout_topology_link;
               relatives : SET [1 : ?] OF physical_connectivity_layout_topology_node;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF physical_connectivity_layout_topology_link := [];
    END_LOCAL;
    IF relation.precedent_node IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_node, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PHYSICAL_CONNECTIVITY_LAYOUT_TOPOLOGY_LINK.' + 
        'SUBSEQUENT_NODE'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_physical_connectivity_layout_topology_link( x[i], relatives + relation.precedent_node, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_physical_network_group_element_relationship(
               relation : physical_network_group_element_relationship;
               relatives : SET [1 : ?] OF physical_network_group;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF physical_network_group_element_relationship := [];
    END_LOCAL;
    IF relation.relating_group IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.relating_group, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PHYSICAL_NETWORK_GROUP_ELEMENT_RELATIONSHIP.' +
        'RELATED_GROUP' ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_physical_network_group_element_relationship( x[i], relatives + relation.relating_group, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_printed_part_template_material_link(
               relation : printed_part_template_material_link;
               relatives : SET [1 : ?] OF template_material_cross_section_boundary;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF printed_part_template_material_link := [];
    END_LOCAL;
    IF relation.precedent_material IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_material, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'PRINTED_PART_TEMPLATE_MATERIAL_LINK.' + 
        'SUBSEQUENT_MATERIAL'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_printed_part_template_material_link( x[i], relatives + relation.precedent_material, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_representation_relationship(
               relation : representation_relationship;
               relatives : SET [1 : ?] OF representation;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF representation_relationship;
    END_LOCAL;
    IF relation.rep_1 IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( r <* bag_to_set( USEDIN( relation.rep_1, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' +
        'REPRESENTATION_RELATIONSHIP.' + 'REP_2' ) ) | ( specific_relation IN TYPEOF( r ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_representation_relationship( x[i], relatives + relation.rep_1, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_scalar_terminal_definition_link(
               relation : scalar_terminal_definition_link;
               relatives : SET [1 : ?] OF scalar_terminal_definition;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF scalar_terminal_definition_link;
    END_LOCAL;
    IF relation.precedent_terminal_definition IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.precedent_terminal_definition, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SCALAR_TERMINAL_DEFINITION_LINK.' + 
        'SUBSEQUENT_TERMINAL_DEFINITION'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_scalar_terminal_definition_link( x[i], relatives + relation.precedent_terminal_definition, specific_relation )
          THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_stratum_technology_mapping_relationship(
               relation : stratum_technology_mapping_relationship;
               relatives : SET [1 : ?] OF stratum_technology;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF stratum_technology_mapping_relationship := [];
    END_LOCAL;
    IF relation.source_stratum_technology IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.source_stratum_technology, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'STRATUM_TECHNOLOGY_MAPPING_RELATIONSHIP.' + 
        'TARGET_STRATUM_TECHNOLOGY'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_stratum_technology_mapping_relationship( x[i], relatives + relation.source_stratum_technology, 
          specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_stratum_technology_occurrence_relationship(
               relation : stratum_technology_occurrence_relationship;
               relatives : SET [1 : ?] OF stratum_technology_occurrence;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF stratum_technology_occurrence_relationship := [];
    END_LOCAL;
    IF relation.sto_1 IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.sto_1, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' 
        + 'STRATUM_TECHNOLOGY_OCCURRENCE_RELATIONSHIP.' + 'STO_2' ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_stratum_technology_occurrence_relationship( x[i], relatives + relation.sto_1, specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION acyclic_stratum_technology_swap_relationship(
               relation : stratum_technology_swap_relationship;
               relatives : SET [1 : ?] OF stratum_technology;
               specific_relation : STRING
           ) : BOOLEAN;

    LOCAL
      x : SET OF stratum_technology_swap_relationship := [];
    END_LOCAL;
    IF relation.primary_stratum_technology IN relatives THEN
      RETURN( FALSE );
    END_IF;
    x := QUERY ( pd <* bag_to_set( USEDIN( relation.primary_stratum_technology, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'STRATUM_TECHNOLOGY_SWAP_RELATIONSHIP.' + 
        'SECONDARY_STRATUM_TECHNOLOGY'  ) ) | ( specific_relation IN TYPEOF( pd ) ) );
    REPEAT i := 1 TO HIINDEX( x ) BY 1;
      IF NOT acyclic_stratum_technology_swap_relationship( x[i], relatives + relation.primary_stratum_technology, 
          specific_relation ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION add_data_element(
               input1, input2 : length_data_element
           ) : length_data_element;
    RETURN( input1 );

  END_FUNCTION;

  FUNCTION aggregate1_in_aggregate2(
               agg1, agg2 : AGGREGATE OF GENERIC
           ) : LOGICAL;
    RETURN( SIZEOF( QUERY ( ele <* agg1 | VALUE_IN( agg2, ele ) ) ) = SIZEOF( agg1 ) );

  END_FUNCTION;

  FUNCTION ap2d_geometrically_in_tiebar(
               input_1 : axis_placement_2d;
               input_2 : geometric_model
           ) : LOGICAL;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION bag_to_set(
               the_bag : BAG [0 : ?] OF GENERIC:intype
           ) : SET [0 : ?] OF GENERIC:intype;

    LOCAL
      the_set : SET OF GENERIC:intype := [];
      i       : INTEGER;
    END_LOCAL;
    IF SIZEOF( the_bag ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( the_bag ) BY 1;
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN( the_set );

  END_FUNCTION;

  FUNCTION boolean_choice(
               b : BOOLEAN;
               choice1, choice2 : GENERIC:item
           ) : GENERIC:item;
    IF b THEN
      RETURN( choice1 );
    ELSE
      RETURN( choice2 );
    END_IF;

  END_FUNCTION;

  FUNCTION calculate_depth(
               swsrh : solid_with_stepped_round_hole
           ) : length_measure;

    LOCAL
      i  : INTEGER;
      td : length_measure := 0;
    END_LOCAL;
    REPEAT i := 1 TO swsrh.segments BY 1;
      td := td + swsrh.segment_depths[i];
    END_REPEAT;
    RETURN( td );

  END_FUNCTION;

  FUNCTION cg_get_sz_ac(
               input : SET [1 : ?] OF assembly_component_placement_link
           ) : INTEGER;

    LOCAL
      ac : SET OF assembly_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      ac := ac + input[i]\assembly_component_placement_link.precedent_element + input[i]\assembly_component_placement_link.
          subsequent_element;
    END_REPEAT;
    RETURN( SIZEOF( ac ) );

  END_FUNCTION;

  FUNCTION cg_get_sz_lapgc(
               input : SET [1 : ?] OF linear_array_placement_group_component_link
           ) : INTEGER;

    LOCAL
      ac : SET OF linear_array_placement_group_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      ac := ac + input[i]\linear_array_placement_group_component_link.precedent_element + input[i]\
          linear_array_placement_group_component_link.subsequent_element;
    END_REPEAT;
    RETURN( SIZEOF( ac ) );

  END_FUNCTION;

  FUNCTION collect_joints(
               items : SET [1 : ?] OF pair_representation_relationship
           ) : SET OF kinematic_joint;

    LOCAL
      result : SET OF kinematic_joint := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( items ) BY 1;
      result := result + items[i].transformation_operator.joint;
    END_REPEAT;
    RETURN( result );

  END_FUNCTION;

  FUNCTION collect_shells(
               brep : manifold_solid_brep
           ) : SET [1 : ?] OF closed_shell;

    LOCAL
      return_set : SET [1 : ?] OF closed_shell := [brep.outer];
    END_LOCAL;
    IF SIZEOF( brep.voids ) >= 1 THEN
      return_set := return_set + brep.voids;
    END_IF;
    RETURN( return_set );

  END_FUNCTION;

  FUNCTION consistent_bus_structural_definition(
               input : SET OF bus_element_link
           ) : BOOLEAN;

    LOCAL
      vertex        : SET OF bus_structural_definition_or_node := [];
      edge          : INTEGER := SIZEOF( input );
      vc            : INTEGER := 0;
      vertex_degree : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      vertex := vertex + input[i].precedent_element;
      vertex := vertex + input[i].subsequent_element;
    END_REPEAT;
    vc := SIZEOF( vertex );
    IF vc <> ( edge + 1 ) THEN
      RETURN( FALSE );
    END_IF;
    REPEAT i := 1 TO vc BY 1;
      vertex_degree := 0;
      REPEAT j := 1 TO SIZEOF( input ) BY 1;
        IF input[j].precedent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
        IF input[j].subsequent_element = vertex[i] THEN
          vertex_degree := vertex_degree + 1;
        END_IF;
      END_REPEAT;
      IF vertex_degree > 2 THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION consistent_configuration_type(
               config : configuration
           ) : BOOLEAN;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CLASS_CONDITION_ASSOCIATION' IN TYPEOF( config.
        is_solution_for ) THEN
      IF config.configuration_type = configuration_kind.usage THEN
        RETURN( config.is_solution_for\class_condition_association.condition_type = 'part usage' );
      ELSE
        RETURN( config.is_solution_for\class_condition_association.condition_type = 'design case' );
      END_IF;
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CLASS_SPECIFICATION_ASSOCIATION' IN TYPEOF( config.
        is_solution_for ) THEN
      IF config.configuration_type = configuration_kind.usage THEN
        RETURN( config.is_solution_for\class_specification_association.association_type = 'part usage' );
      ELSE
        RETURN( config.is_solution_for\class_specification_association.association_type = 'design case' );
      END_IF;
    END_IF;
    RETURN( FALSE );

  END_FUNCTION;

  FUNCTION contains_variable(
               x : term_select
           ) : BOOLEAN;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ABSTRACT_VARIABLE' IN TYPEOF( x ) THEN
      RETURN( TRUE );
    ELSE
      IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FUNC' IN TYPEOF( x ) ) AND ( SIZEOF( QUERY ( y <* 
          x.terms | contains_variable( y ) ) ) > 0 ) THEN
        RETURN( TRUE );
      ELSE
        RETURN( FALSE );
      END_IF;
    END_IF;

  END_FUNCTION;

  FUNCTION correlated_terminals(
               input1 : SET OF conductive_interconnect_element_terminal;
               input2 : SET OF conductive_interconnect_element_terminal_link
           ) : LOGICAL;

    LOCAL
      pass : LOGICAL := FALSE;
      ciet : SET OF conductive_interconnect_element_terminal := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input2 ) BY 1;
      ciet := ciet + input2[i].precedent_point;
      ciet := ciet + input2[i].subsequent_point;
    END_REPEAT;
    pass := input1 = ciet;
    IF pass = UNKNOWN THEN
      RETURN( FALSE );
    END_IF;
    RETURN( pass );

  END_FUNCTION;

  FUNCTION disjoint_package_terminals(
               input : SET OF package_terminal
           ) : BOOLEAN;

    LOCAL
      pk : SET OF package := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      pk := pk + input[i].associated_definition;
    END_REPEAT;
    RETURN( SIZEOF( input ) = SIZEOF( pk ) );

  END_FUNCTION;

  FUNCTION fatp_get_pt(
               input : SET OF part_connected_terminals_element
           ) : SET OF part_terminal;

    LOCAL
      pct : SET OF part_terminal := [];
      i   : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TERMINAL' IN TYPEOF( input[i].start_terminus )
          THEN
        pct := pct + input[i].start_terminus;
      END_IF;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TERMINAL' IN TYPEOF( input[i].end_terminus )
          THEN
        pct := pct + input[i].end_terminus;
      END_IF;
    END_REPEAT;
    RETURN( pct );

  END_FUNCTION;

  FUNCTION fatp_get_tj(
               input : SET OF part_connected_terminals_element
           ) : SET OF part_connected_terminals_topological_junction;

    LOCAL
      tj : SET OF part_connected_terminals_topological_junction := [];
      i  : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_CONNECTED_TERMINALS_TOPOLOGICAL_JUNCTION' IN 
          TYPEOF( input[i].start_terminus ) THEN
        tj := tj + input[i].start_terminus;
      END_IF;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_CONNECTED_TERMINALS_TOPOLOGICAL_JUNCTION' IN 
          TYPEOF( input[i].end_terminus ) THEN
        tj := tj + input[i].end_terminus;
      END_IF;
    END_REPEAT;
    RETURN( tj );

  END_FUNCTION;

  FUNCTION fd_get_amodel(
               input : product_view_definition
           ) : SET OF geometric_model;

    LOCAL
      gm  : SET OF geometric_model := [];
      is  : SET OF item_shape := [];
      sda : SET OF shape_description_association := [];
    END_LOCAL;
    is := bag_to_set( USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ITEM_SHAPE.'
        + 'DESCRIBED_ELEMENT'  ) );
    IF SIZEOF( is ) >= 0 THEN
      REPEAT i := 1 TO HIINDEX( is ) BY 1;
        sda := sda + bag_to_set( USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
            + 'SHAPE_DESCRIPTION_ASSOCIATION.DEFINITION'  ) );
      END_REPEAT;
      IF SIZEOF( sda ) >= 0 THEN
        REPEAT i := 1 TO HIINDEX( sda ) BY 1;
          gm := gm + sda[i]\property_definition_representation.used_representation;
        END_REPEAT;
        RETURN( gm );
      END_IF;
    END_IF;
    RETURN( ? );

  END_FUNCTION;

  FUNCTION fd_get_components(
               input : SET [2 : 2] OF view_definition_relationship
           ) : SET OF product_view_definition;

    LOCAL
      pvd : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      pvd := pvd + input[i]\view_definition_relationship.relating_view;
    END_REPEAT;
    RETURN( pvd );

  END_FUNCTION;

  FUNCTION fd_get_rmodels(
               input : SET [2 : 2] OF view_definition_relationship
           ) : SET OF geometric_model;

    LOCAL
      gm  : SET OF geometric_model := [];
      pvd : SET OF product_view_definition := [];
    END_LOCAL;
    pvd := fd_get_components( input );
    IF SIZEOF( pvd ) >= 0 THEN
      REPEAT i := 1 TO HIINDEX( pvd ) BY 1;
        gm := gm + fd_get_amodel( pvd[i] );
      END_REPEAT;
      RETURN( gm );
    END_IF;
    RETURN( ? );

  END_FUNCTION;

  FUNCTION fd_get_single_stratum_components(
               input : SET OF template_location_in_structured_template
           ) : SET OF single_stratum_template;

    LOCAL
      sst : SET OF single_stratum_template := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SINGLE_STRATUM_TEMPLATE' IN TYPEOF( input[i]\
          template_location_in_structured_template.template ) THEN
        sst := sst + input[i]\template_location_in_structured_template.template;
      END_IF;
    END_REPEAT;
    RETURN( sst );

  END_FUNCTION;

  FUNCTION fd_get_transforms(
               input1 : SET [1 : 1] OF geometric_model;
               input2 : SET [2 : 2] OF geometric_model
           ) : SET OF geometric_model_relationship_with_transformation;

    LOCAL
      gmrwt : SET OF geometric_model_relationship_with_transformation := [];
    END_LOCAL;
    gmrwt := bag_to_set( USEDIN( input1[1], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
        + 'GEOMETRIC_MODEL_RELATIONSHIP.REP_1'  ) );
    REPEAT i := 1 TO HIINDEX( gmrwt ) BY 1;
      IF NOT ( ( gmrwt[i]\geometric_model_relationship.rep_2 IN input2 ) AND ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_MODEL_RELATIONSHIP_WITH_TRANSFORMATION'  
          IN TYPEOF( gmrwt[i] ) ) ) THEN
        RETURN( ? );
      END_IF;
    END_REPEAT;
    RETURN( gmrwt );

  END_FUNCTION;

  FUNCTION ft_count_unspecified_asto(
               input : SET OF allocated_passage_minimum_annular_ring
           ) : INTEGER;

    LOCAL
      count : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      IF NOT EXISTS( input[i]\allocated_passage_minimum_annular_ring.associated_stratum_technology_occurrence ) THEN
        count := count + 1;
      END_IF;
    END_REPEAT;
    RETURN( count );

  END_FUNCTION;

  FUNCTION ft_get_terminus(
               input : SET OF stratum_technology_occurrence_link
           ) : SET OF stratum_technology_occurrence;

    LOCAL
      sto   : SET OF stratum_technology_occurrence := get_stack( input );
      i     : INTEGER := 0;
      j     : INTEGER := 0;
      pstoo : SET OF stratum_technology_occurrence := [];
      sstoo : SET OF stratum_technology_occurrence := [];
    END_LOCAL;
    pstoo := sto;
    sstoo := sto;
    REPEAT i := 1 TO SIZEOF( sto ) BY 1;
      REPEAT j := 1 TO SIZEOF( input ) BY 1;
        IF input[j]\stratum_technology_occurrence_relationship.sto_1 :=: sto[i] THEN
          pstoo := pstoo - sto[i];
        END_IF;
        IF input[j]\stratum_technology_occurrence_relationship.sto_2 :=: sto[i] THEN
          sstoo := sstoo - sto[i];
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN( pstoo + sstoo );

  END_FUNCTION;

  FUNCTION get_acpr_rvd(
               input : SET OF requirement_view_definition_relationship
           ) : SET OF requirement_view_definition;

    LOCAL
      rvd : SET [0 : ?] OF requirement_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      rvd := rvd + input[i]\requirement_view_definition_relationship.secondary;
    END_REPEAT;
    RETURN( rvd );

  END_FUNCTION;

  FUNCTION get_ama(
               input : analytical_model_port_assignment_select
           ) : SET OF analytical_model_application;

    LOCAL
      ama  : SET [0 : ?] OF analytical_model_application := [];
      ampa : SET [0 : ?] OF analytical_model_port_assignment := [];
    END_LOCAL;
    ampa := bag_to_set( USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'ANALYTICAL_MODEL_PORT_ASSIGNMENT.ASSIGNED_ITEM'  ) );
    REPEAT i := 1 TO SIZEOF( ampa ) BY 1;
      ama := ama + ampa[i].associated_analytical_model_application;
    END_REPEAT;
    RETURN( ama );

  END_FUNCTION;

  FUNCTION get_assemblies(
               input : assembly_component
           ) : SET OF product_view_definition;

    LOCAL
      acr : SET OF assembly_component_relationship := input\assembly_component.occurrence_contexts;
      pvd : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( acr ) BY 1;
      IF NOT ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'STRUCTURED_LAYOUT_COMPONENT' ) IN 
          TYPEOF( acr[i]\product_occurrence_definition_relationship.relating_view ) ) THEN
        pvd := pvd + acr[i]\product_occurrence_definition_relationship.relating_view;
      ELSE
        pvd := pvd + get_assemblies( acr[i]\product_occurrence_definition_relationship.relating_view );
      END_IF;
    END_REPEAT;
    RETURN( pvd );

  END_FUNCTION;

  FUNCTION get_base_component(
               input : stratum
           ) : SET OF area_component;

    LOCAL
      ac      : SET OF area_component := [];
      i       : INTEGER := 0;
      sf      : SET OF stratum_feature := bag_to_set( USEDIN( input, 
                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE.RESIDENT_STRATUM'  ) );
      sftc_s  : SET OF stratum_feature_template_component := bag_to_set( USEDIN( input, 
                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE_TEMPLATE_COMPONENT.'
                 + 'IMPLEMENTATION_OR_RESIDENT_STRATUM'  ) );
      sftc_sf : SET OF stratum_feature_template_component := [];
      sftc_t  : SET OF stratum_feature_template_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( sf ) BY 1;
      sftc_sf := sftc_sf + bag_to_set( USEDIN( sf[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM'  ) );
    END_REPEAT;
    sftc_t := sftc_s + sftc_sf;
    REPEAT i := 1 TO HIINDEX( sftc_t ) BY 1;
      IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_COMPONENT' IN TYPEOF( sftc_t[i] ) ) AND ( 
          sftc_t[i]\area_component.is_base = TRUE ) THEN
        ac := ac + sftc_t[i];
      END_IF;
    END_REPEAT;
    RETURN( ac );

  END_FUNCTION;

  FUNCTION get_cit(
               ac : assembly_component;
               ajb : SET OF assembly_joint
           ) : physical_component_interface_terminal;

    LOCAL
      cf  : LIST [1 : 2] OF component_feature := [ajb[1].assembly_feature_1, ajb[1].assembly_feature_2];
      cit : physical_component_interface_terminal;
    END_LOCAL;
    REPEAT i := 1 TO 2 BY 1;
      IF ac :=: cf[i].associated_component THEN
        IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERFACE_COMPONENT' IN TYPEOF( cf[i].
            associated_component ) THEN
          RETURN( cf[i] );
        ELSE
          RETURN( ? );
        END_IF;
      ELSE
        RETURN( ? );
      END_IF;
    END_REPEAT;
    RETURN( ? );

  END_FUNCTION;

  FUNCTION get_cond_class(
               input1 : material_identification_with_conductivity_classification;
               input2 : STRING
           ) : STRING;

    LOCAL
      car : SET OF classification_assignment := [];
    END_LOCAL;
    car := QUERY ( ca <* bag_to_set( USEDIN( input1, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'CLASSIFICATION_ASSIGNMENT.'  + 'ITEMS' ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' +
        input2 ) IN TYPEOF( ca.assigned_class ) ) );
    IF SIZEOF( car ) = 1 THEN
      RETURN( car[1].assigned_class\class.name );
    ELSE
      RETURN( '?' );
    END_IF;

  END_FUNCTION;

  FUNCTION get_derived_shape_element(
               input : part_view_definition
           ) : SET OF derived_shape_element;

    LOCAL
      is : SET OF item_shape := bag_to_set( USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
            + 'ITEM_SHAPE.DESCRIBED_ELEMENT'  ) );
      se : SET OF shape_element := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( is ) BY 1;
      se := se + bag_to_set( USEDIN( is[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_ELEMENT.'
          + 'CONTAINING_SHAPE'  ) );
    END_REPEAT;
    RETURN( QUERY ( dse <* se | ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DERIVED_SHAPE_ELEMENT' IN 
        TYPEOF( se ) ) ) );

  END_FUNCTION;

  FUNCTION get_document_definition(
               input : documented_element_select;
               role : STRING;
               type_name : STRING
           ) : SET OF document_definition;

    LOCAL
      dd : SET [0 : ?] OF document_definition := [];
      da : SET [0 : ?] OF document_assignment := [];
    END_LOCAL;
    da := bag_to_set( QUERY ( dr <* USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'DOCUMENT_ASSIGNMENT.IS_ASSIGNED_TO'  ) | ( dr.role = role ) ) );
    REPEAT i := 1 TO SIZEOF( da ) BY 1;
      IF type_name IN TYPEOF( da[i].assigned_document ) THEN
        dd := dd + da[i].assigned_document;
      END_IF;
    END_REPEAT;
    RETURN( dd );

  END_FUNCTION;

  FUNCTION get_geometric_model(
               input : item_shape
           ) : SET OF geometric_model;

    LOCAL
      sda : SET OF shape_description_association := [];
      gm  : SET OF geometric_model := [];
    END_LOCAL;
    sda := bag_to_set( USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
        + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'  ) );
    REPEAT i := 1 TO SIZEOF( sda ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SHAPE_DESCRIPTION_ASSOCIATION' IN TYPEOF( sda[i] )
          THEN
        gm := gm + sda[i]\property_definition_representation.used_representation;
      END_IF;
    END_REPEAT;
    RETURN( gm );

  END_FUNCTION;

  FUNCTION get_gpn(
               input : SET OF printed_component_join_terminal
           ) : SET OF generic_physical_network;

    LOCAL
      gpn : SET [0 : ?] OF generic_physical_network := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      gpn := gpn + bag_to_set( USEDIN( input[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'GENERIC_PHYSICAL_NETWORK.CONNECTIVITY_REQUIREMENT_ELEMENT'  ) );
    END_REPEAT;
    RETURN( gpn );

  END_FUNCTION;

  FUNCTION get_ims(
               input : stratum
           ) : SET OF product_view_definition;

    LOCAL
      imsar : SET OF interconnect_module_stratum_assembly_relationship := input.assembly;
      pvd   : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( imsar ) BY 1;
      pvd := pvd + imsar[i].assembly;
    END_REPEAT;
    RETURN( pvd );

  END_FUNCTION;

  FUNCTION get_kinematic_joints_from_kinematic_loops(
               kls : SET OF kinematic_loop
           ) : SET OF kinematic_joint;

    LOCAL
      result : SET OF oriented_joint := [];
    END_LOCAL;
    IF SIZEOF( kls ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( kls ) BY 1;
        result := result + kls[i].edge_list;
      END_REPEAT;
    END_IF;
    RETURN( get_kinematic_joints_from_oriented_joints( result ) );

  END_FUNCTION;

  FUNCTION get_kinematic_joints_from_oriented_joints(
               ors : SET OF oriented_joint
           ) : SET OF kinematic_joint;

    LOCAL
      result : SET OF kinematic_joint := [];
    END_LOCAL;
    IF SIZEOF( ors ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( ors ) BY 1;
        result := result + ors[i].edge_definition;
      END_REPEAT;
    END_IF;
    RETURN( result );

  END_FUNCTION;

  FUNCTION get_mrlc_not_for_base(
               input1 : documentation_layer_stratum;
               base_component : SET OF area_component
           ) : SET OF material_removal_laminate_component;

    LOCAL
      ac      : SET OF area_component := [];
      i       : INTEGER := 0;
      mrlc    : SET OF material_removal_laminate_component := [];
      mrlc_b  : SET OF material_removal_laminate_component := [];
      sf      : SET OF stratum_feature := bag_to_set( USEDIN( input1, 
                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE.RESIDENT_STRATUM'  ) );
      sftc_s  : SET OF stratum_feature_template_component := bag_to_set( USEDIN( input1, 
                 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE_TEMPLATE_COMPONENT.'
                 + 'IMPLEMENTATION_OR_RESIDENT_STRATUM'  ) );
      sftc_sf : SET OF stratum_feature_template_component := [];
      sftc_t  : SET OF stratum_feature_template_component := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( sf ) BY 1;
      sftc_sf := sftc_sf + bag_to_set( USEDIN( sf[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'STRATUM_FEATURE_TEMPLATE_COMPONENT.IMPLEMENTATION_OR_RESIDENT_STRATUM'  ) );
    END_REPEAT;
    sftc_t := sftc_s + sftc_sf;
    REPEAT i := 1 TO HIINDEX( sftc_t ) BY 1;
      mrlc := mrlc + bag_to_set( USEDIN( sftc_t[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'MATERIAL_REMOVAL_LAMINATE_COMPONENT.DESIGN_INTENT'  ) );
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX( base_component ) BY 1;
      mrlc_b := mrlc + bag_to_set( USEDIN( base_component[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'MATERIAL_REMOVAL_LAMINATE_COMPONENT.DESIGN_INTENT'  ) );
    END_REPEAT;
    RETURN( mrlc - mrlc_b );

  END_FUNCTION;

  FUNCTION get_pct(
               input : SET OF physical_connectivity_element
           ) : SET OF physical_component_terminal;

    LOCAL
      pct : SET OF physical_component_terminal := [];
      i   : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF( input[i].
          start_terminus ) THEN
        pct := pct + input[i].start_terminus;
      END_IF;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PHYSICAL_COMPONENT_TERMINAL' IN TYPEOF( input[i].
          end_terminus ) THEN
        pct := pct + input[i].end_terminus;
      END_IF;
    END_REPEAT;
    RETURN( pct );

  END_FUNCTION;

  FUNCTION get_pctd(
               ac : assembly_component;
               ajb : SET OF assembly_joint
           ) : SET OF part_connected_terminals_definition;

    LOCAL
      cf   : LIST [1 : 2] OF component_feature := [ajb[1].assembly_feature_1, ajb[1].assembly_feature_2];
      pctd : SET OF part_connected_terminals_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO 2 BY 1;
      IF ac :=: cf[i].associated_component THEN
        IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PART_TERMINAL' IN TYPEOF( cf[i]\component_feature.
            definition ) THEN
          pctd := cf[i]\component_feature.definition\part_terminal.connection_requirement;
          RETURN( pctd );
        ELSE
          RETURN( pctd );
        END_IF;
      ELSE
        RETURN( pctd );
      END_IF;
    END_REPEAT;
    RETURN( ? );

  END_FUNCTION;

  FUNCTION get_pctr(
               ac : assembly_component;
               imjb : SET OF interface_mounted_join
           ) : SET OF packaged_connector_terminal_relationship;

    LOCAL
      cf   : component_feature;
      pctr : SET OF packaged_connector_terminal_relationship := [];
    END_LOCAL;
    cf := imjb[1]\interface_mounted_join.connection_to_interconnect_module_component;
    IF ac :=: cf\component_feature.associated_component THEN
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PACKAGED_PART_INTERFACE_TERMINAL' IN TYPEOF( cf\
          component_feature.definition ) THEN
        pctr := cf\component_feature.definition\packaged_part_interface_terminal.external_connector_function;
        RETURN( pctr );
      ELSE
        RETURN( pctr );
      END_IF;
    ELSE
      RETURN( pctr );
    END_IF;

  END_FUNCTION;

  FUNCTION get_resident_stratum(
               input : stratum_feature_template_component
           ) : stratum;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE' IN TYPEOF( input.
        implementation_or_resident_stratum ) THEN
      RETURN( input.implementation_or_resident_stratum.resident_stratum );
    ELSE
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM' IN TYPEOF( input.
          implementation_or_resident_stratum ) THEN
        RETURN( input.implementation_or_resident_stratum );
      END_IF;
    END_IF;
    RETURN( ? );

  END_FUNCTION;

  FUNCTION get_rvd(
               input : requirement_assignment_item;
               id : STRING
           ) : SET OF requirement_view_definition;

    LOCAL
      rvd : SET [0 : ?] OF requirement_view_definition := [];
      ra  : SET [0 : ?] OF requirement_assignment := [];
    END_LOCAL;
    ra := bag_to_set( QUERY ( rai <* USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'REQUIREMENT_ASSIGNMENT.ASSIGNED_TO'  ) | ( rai.id = id ) ) );
    REPEAT i := 1 TO SIZEOF( ra ) BY 1;
      rvd := rvd + ra[i].assigned_requirement;
    END_REPEAT;
    RETURN( rvd );

  END_FUNCTION;

  FUNCTION get_specific_requirement_type_for_primary_rvd_relationship(
               input : requirement_view_definition;
               id : STRING;
               reqtype : STRING
           ) : SET OF predefined_requirement_view_definition;

    LOCAL
      rvdr : SET [0 : ?] OF requirement_view_definition_relationship := [];
      rdp  : SET [0 : ?] OF predefined_requirement_view_definition := [];
    END_LOCAL;
    rvdr := bag_to_set( QUERY ( rvdre <* USEDIN( input, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'REQUIREMENT_VIEW_DEFINITION_RELATIONSHIP.PRIMARY'  ) | ( ( rvdre.relation_type = id ) AND ( reqtype IN TYPEOF( rvdre.
        secondary ) ) ) ) );
    REPEAT i := 1 TO SIZEOF( rvdr ) BY 1;
      rdp := rdp + rvdr[i].secondary;
    END_REPEAT;
    RETURN( rdp );

  END_FUNCTION;

  FUNCTION get_stack(
               input : SET OF stratum_technology_occurrence_link
           ) : SET OF stratum_technology_occurrence;

    LOCAL
      sto : SET OF stratum_technology_occurrence := [];
      i   : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      sto := sto + input[i]\stratum_technology_occurrence_relationship.sto_1 + input[i]\
          stratum_technology_occurrence_relationship.sto_2;
    END_REPEAT;
    RETURN( sto );

  END_FUNCTION;

  FUNCTION get_template_arrangement(
               input : SET OF template_location_in_structured_template
           ) : template_arrangement;

    LOCAL
      tlist          : SET OF template_location_in_structured_template := QUERY ( inx <* input | ( 
                        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MULTI_STRATUM_STRUCTURED_TEMPLATE'  
                        IN TYPEOF( inx.template ) ) );
      pabt           : BAG OF STRING := [];
      pabb           : BAG OF STRING := [];
      pabsymmetrical : BAG OF STRING := [];
      pabswappable   : BAG OF STRING := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( tlist ) BY 1;
      IF tlist[i].template\multi_stratum_structured_template.location = template_arrangement.top THEN
        pabt := pabt + 'top';
      END_IF;
      IF tlist[i].template\multi_stratum_structured_template.location = template_arrangement.bottom THEN
        pabb := pabb + 'bottom';
      END_IF;
      IF tlist[i].template\multi_stratum_structured_template.location = template_arrangement.symmetrical THEN
        pabsymmetrical := pabsymmetrical + 'symmetrical';
      END_IF;
      IF tlist[i].template\multi_stratum_structured_template.location = template_arrangement.swappable THEN
        pabswappable := pabswappable + 'swappable';
      END_IF;
    END_REPEAT;
    IF ( SIZEOF( pabt ) > 0 ) AND ( SIZEOF( pabb ) = 0 ) THEN
      RETURN( template_arrangement.top );
    END_IF;
    IF ( SIZEOF( pabb ) > 0 ) AND ( SIZEOF( pabt ) = 0 ) THEN
      RETURN( template_arrangement.bottom );
    END_IF;
    IF ( SIZEOF( pabb ) = 0 ) AND ( SIZEOF( pabt ) = 0 ) AND ( SIZEOF( pabsymmetrical ) > 0 ) THEN
      RETURN( template_arrangement.symmetrical );
    END_IF;
    IF ( SIZEOF( pabb ) = 0 ) AND ( SIZEOF( pabt ) = 0 ) AND ( SIZEOF( pabsymmetrical ) = 0 ) AND ( SIZEOF( pabswappable ) > 0 )
        THEN
      RETURN( template_arrangement.swappable );
    END_IF;
    RETURN( ? );

  END_FUNCTION;

  FUNCTION get_terminals(
               input : SET OF physical_connectivity_definition
           ) : SET OF component_terminal;

    LOCAL
      ct : SET OF component_terminal := [];
      i  : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      ct := ct + input[i].associated_terminals;
    END_REPEAT;
    RETURN( ct );

  END_FUNCTION;

  FUNCTION get_tj(
               input : SET OF physical_connectivity_element
           ) : SET OF topological_junction;

    LOCAL
      tj : SET OF topological_junction := [];
      i  : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TOPOLOGICAL_JUNCTION' IN TYPEOF( input[i].
          start_terminus ) THEN
        tj := tj + input[i].start_terminus;
      END_IF;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TOPOLOGICAL_JUNCTION' IN TYPEOF( input[i].
          end_terminus ) THEN
        tj := tj + input[i].end_terminus;
      END_IF;
    END_REPEAT;
    RETURN( tj );

  END_FUNCTION;

  FUNCTION in_2d_assembly_context(
               comp : assembly_component
           ) : LOGICAL;

    LOCAL
      shapes            : SET OF assembly_component_2d_shape_model := [];
      shapes_in_context : SET OF physical_unit_planar_shape_model := [];
      assemblies        : SET OF product_view_definition := [];
      i                 : INTEGER := 0;
      j                 : INTEGER := 0;
      in_context        : LOGICAL := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( comp.occurrence_contexts ) BY 1;
      assemblies := assemblies + comp.occurrence_contexts[i].relating_view;
    END_REPEAT;
    shapes := bag_to_set( USEDIN( comp, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
        + 'ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT'  ) );
    REPEAT i := 1 TO SIZEOF( shapes ) BY 1;
      shapes_in_context := bag_to_set( USEDIN( shapes[i]\geometric_model.context_of_items, 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_MODEL.CONTEXT_OF_ITEMS'  ) );
      in_context := FALSE;
      j := 1;
      REPEAT WHILE ( j <= SIZEOF( shapes_in_context ) ) AND ( NOT in_context );
        in_context := shapes_in_context[j].shape_characterized_definition IN assemblies;
        j := j + 1;
      END_REPEAT;
      IF NOT in_context THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( SIZEOF( shapes ) > 0 );

  END_FUNCTION;

  FUNCTION in_3d_assembly_context(
               comp : assembly_component
           ) : LOGICAL;

    LOCAL
      shapes            : SET OF assembly_component_3d_shape_model := [];
      shapes_in_context : SET OF physical_unit_3d_shape_model := [];
      assemblies        : SET OF product_view_definition := [];
      i                 : INTEGER := 0;
      j                 : INTEGER := 0;
      in_context        : LOGICAL := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( comp.occurrence_contexts ) BY 1;
      assemblies := assemblies + comp.occurrence_contexts[i].relating_view;
    END_REPEAT;
    shapes := bag_to_set( USEDIN( comp, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
        + 'ASSEMBLY_COMPONENT_3D_SHAPE_MODEL.SHAPE_CHARACTERIZED_COMPONENT'  ) );
    REPEAT i := 1 TO SIZEOF( shapes ) BY 1;
      shapes_in_context := bag_to_set( USEDIN( shapes[i]\geometric_model.context_of_items, 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.GEOMETRIC_MODEL.CONTEXT_OF_ITEMS'  ) );
      in_context := FALSE;
      j := 1;
      REPEAT WHILE ( j <= SIZEOF( shapes_in_context ) ) AND ( NOT in_context );
        in_context := shapes_in_context[j].shape_characterized_definition IN assemblies;
        j := j + 1;
      END_REPEAT;
      IF NOT in_context THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( SIZEOF( shapes ) > 0 );

  END_FUNCTION;

  FUNCTION inspected_product_view_definition(
               dqir : data_quality_inspection_result_representation
           ) : BAG OF product_view_definition;

    LOCAL
      dqdr  : BAG OF data_quality_definition_representation_relationship := [];
      pdqdr : BAG OF product_data_and_data_quality_relationship := [];
      pd    : BAG OF product_view_definition := [];
    END_LOCAL;
    dqdr := USEDIN( dqir, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'DATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP.'  + 'USED_REPRESENTATION' );
    REPEAT i := 1 TO SIZEOF( dqdr ) BY 1;
      pdqdr := USEDIN( dqdr[i].definition, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'PRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP.'  + 'DATA_QUALITY' );
      REPEAT j := 1 TO SIZEOF( pdqdr ) BY 1;
        pd := pd + pdqdr[j].product_data;
      END_REPEAT;
    END_REPEAT;
    RETURN( pd );

  END_FUNCTION;

  FUNCTION is_acyclic(
               arg : generic_expression
           ) : BOOLEAN;
    RETURN( acyclic( arg, [] ) );

  END_FUNCTION;

  FUNCTION is_int_expr(
               arg : numeric_expression
           ) : BOOLEAN;

    LOCAL
      i : INTEGER;
    END_LOCAL;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INT_LITERAL' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REAL_LITERAL' IN TYPEOF( arg ) THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INT_NUMERIC_VARIABLE' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REAL_NUMERIC_VARIABLE' IN TYPEOF( arg ) THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ABS_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( is_int_expr( arg\unary_numeric_expression.operand ) );
    END_IF;
    IF 'NUMERIC_FUNCTION.MINUS_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( is_int_expr( arg\unary_numeric_expression.operand ) );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SIN_FUNCTION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COS_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TAN_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASIN_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ACOS_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ATAN_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EXP_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LOG_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LOG2_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LOG10_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SQUARE_ROOT_FUNCTION'  IN TYPEOF( arg ) ) THEN
      RETURN( FALSE );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLUS_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MULT_EXPRESSION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MAXIMUM_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MINIMUM_FUNCTION'  IN TYPEOF( arg ) ) THEN
      REPEAT i := 1 TO SIZEOF( arg\multiple_arity_numeric_expression.operands ) BY 1;
        IF NOT is_int_expr( arg\multiple_arity_numeric_expression.operands[i] ) THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
      RETURN( TRUE );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MINUS_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POWER_EXPRESSION'  IN TYPEOF( arg ) ) THEN
      RETURN( is_int_expr( arg\binary_numeric_expression.operands[1] ) AND is_int_expr( arg\binary_numeric_expression.operands[2] ) );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIV_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MOD_EXPRESSION'  IN TYPEOF( arg ) ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SLASH_EXPRESSION' IN TYPEOF( arg ) THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FUNCTION_PARAMETER_VALUE' IN TYPEOF( arg ) THEN
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INT_VALUE_FUNCTION' IN TYPEOF( arg ) THEN
        RETURN( TRUE );
      ELSE
        RETURN( FALSE );
      END_IF;
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTEGER_DEFINED_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REAL_DEFINED_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_DEFINED_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_DEFINED_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( FALSE );
    END_IF;
    RETURN( FALSE );

  END_FUNCTION;

  FUNCTION is_sql_mappable(
               arg : expression
           ) : BOOLEAN;

    LOCAL
      i : INTEGER;
    END_LOCAL;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SIMPLE_NUMERIC_EXPRESSION' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SQL_MAPPABLE_DEFINED_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MINUS_FUNCTION' IN TYPEOF( arg ) THEN
      RETURN( is_sql_mappable( arg\unary_numeric_expression.operand ) );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ABS_FUNCTION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SIN_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COS_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TAN_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASIN_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ACOS_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ATAN_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EXP_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LOG_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LOG2_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LOG10_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SQUARE_ROOT_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FUNCTION_PARAMETER_VALUE'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LENGTH_FUNCTION'  IN TYPEOF( arg ) ) THEN
      RETURN( FALSE );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PLUS_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MULT_EXPRESSION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MAXIMUM_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MAXIMUM_FUNCTION'  IN TYPEOF( arg ) ) THEN
      REPEAT i := 1 TO SIZEOF( arg\multiple_arity_numeric_expression.operands ) BY 1;
        IF NOT is_sql_mappable( arg\multiple_arity_numeric_expression.operands[i] ) THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
      RETURN( TRUE );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MINUS_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SLASH_EXPRESSION'  IN TYPEOF( arg ) ) THEN
      RETURN( is_sql_mappable( arg\binary_numeric_expression.operands[1] ) AND is_sql_mappable( arg\binary_numeric_expression.
          operands[2] ) );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.DIV_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.MOD_EXPRESSION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.POWER_EXPRESSION'  IN TYPEOF( arg ) ) THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SIMPLE_BOOLEAN_EXPRESSION' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NOT_EXPRESSION' IN TYPEOF( arg ) THEN
      RETURN( is_sql_mappable( arg\unary_generic_expression.operand ) );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ODD_FUNCTION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.XOR_EXPRESSION'  IN TYPEOF( arg ) ) THEN
      RETURN( FALSE );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AND_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.OR_EXPRESSION'  IN TYPEOF( arg ) ) THEN
      REPEAT i := 1 TO SIZEOF( arg\multiple_arity_boolean_expression.operands ) BY 1;
        IF NOT is_sql_mappable( arg\multiple_arity_boolean_expression.operands[i] ) THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
      RETURN( TRUE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.EQUALS_EXPRESSION' IN TYPEOF( arg ) THEN
      RETURN( is_sql_mappable( arg\binary_generic_expression.operands[1] ) AND is_sql_mappable( arg\binary_generic_expression.
          operands[2] ) );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPARISON_EQUAL' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPARISON_GREATER'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPARISON_GREATER_EQUAL'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPARISON_LESS'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPARISON_LESS_EQUAL'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPARISON_NOT_EQUAL'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LIKE_EXPRESSION'  IN TYPEOF( arg ) ) THEN
      RETURN( is_sql_mappable( arg\comparison_expression.operands[1] ) AND is_sql_mappable( arg\comparison_expression.operands[2] ) );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INTERVAL_EXPRESSION' IN TYPEOF( arg ) THEN
      RETURN( is_sql_mappable( arg\interval_expression.interval_low ) AND is_sql_mappable( arg\interval_expression.interval_high ) 
          AND is_sql_mappable( arg\interval_expression.interval_item ) );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.NUMERIC_DEFINED_FUNCTION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.BOOLEAN_DEFINED_FUNCTION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRING_DEFINED_FUNCTION'  IN TYPEOF( arg ) ) THEN
      RETURN( FALSE );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SIMPLE_STRING_EXPRESSION' IN TYPEOF( arg ) THEN
      RETURN( TRUE );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.INDEX_EXPRESSION' IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SUBSTRING_EXPRESSION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.CONCAT_EXPRESSION'  IN TYPEOF( arg ) ) OR ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FORMAT_FUNCTION'  IN TYPEOF( arg ) ) THEN
      RETURN( FALSE );
    END_IF;
    RETURN( FALSE );

  END_FUNCTION;

  FUNCTION land_get_associated_land_for_electrical_removal(
               input : dependent_electrical_isolation_removal_component
           ) : land;

    LOCAL
      assembly_relationships_for_associated_structure : SET OF structured_layout_component_sub_assembly_relationship := [];
      assembly_relationship                           : SET OF structured_layout_component_sub_assembly_relationship := 
                                                         bag_to_set( USEDIN( input, 
                                                         'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                         + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATED_VIEW'  ) );
      associated_structure                            : structured_layout_component;
      first_location                                  : template_location_in_structured_template := assembly_relationship[1]\
                                                         structured_layout_component_sub_assembly_relationship.first_location;
      resident_stratum                                : stratum;
      resident_sftc                                   : stratum_feature_template_component;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input\material_removal_laminate_component.design_intent ) BY 1;
      CASE TRUE OF
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM' IN TYPEOF( input\
            material_removal_laminate_component.design_intent[i] ) :           resident_stratum := input\
              material_removal_laminate_component.design_intent[i];
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF( input\
            material_removal_laminate_component.design_intent[i] ) : 
          BEGIN
            resident_sftc := input\material_removal_laminate_component.design_intent[i];
            CASE TRUE OF
              'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE' IN TYPEOF( resident_sftc\
                  stratum_feature_template_component.implementation_or_resident_stratum ) :                 resident_stratum := 
                    resident_sftc\stratum_feature_template_component.implementation_or_resident_stratum\stratum_feature.
                    resident_stratum;
              'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM' IN TYPEOF( resident_sftc\
                  stratum_feature_template_component.implementation_or_resident_stratum ) :                 resident_stratum := 
                    resident_sftc\stratum_feature_template_component.implementation_or_resident_stratum;
              OTHERWISE                    :                 RETURN( ? );
              END_CASE;
          END;
        OTHERWISE                          :           RETURN( ? );
        END_CASE;
    END_REPEAT;
    IF SIZEOF( assembly_relationship ) <> 1 THEN
      RETURN( ? );
    END_IF;
    associated_structure := assembly_relationship[1]\structured_layout_component_sub_assembly_relationship.relating_view;
    assembly_relationships_for_associated_structure := bag_to_set( USEDIN( associated_structure, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
        + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW'  ) ) - assembly_relationship;
    CASE TRUE OF
      'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_OCCURRENCE' IN TYPEOF( associated_structure ) : 
        BEGIN
          REPEAT i := 1 TO SIZEOF( assembly_relationships_for_associated_structure ) BY 1;
            IF ( first_location :=: assembly_relationships_for_associated_structure[i]\
                structured_layout_component_sub_assembly_relationship.first_location ) AND ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND'  IN TYPEOF( 
                assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                related_view ) ) AND ( assembly_relationships_for_associated_structure[i]\
                structured_layout_component_sub_assembly_relationship.related_view\stratum_feature_template_component.
                resident_stratum :=: resident_stratum ) THEN
              RETURN( assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                  related_view );
            END_IF;
          END_REPEAT;
          RETURN( ? );
        END;
      'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PADSTACK_OCCURRENCE' IN TYPEOF( associated_structure ) : 
        BEGIN
          REPEAT i := 1 TO SIZEOF( assembly_relationships_for_associated_structure ) BY 1;
            IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND' IN TYPEOF( 
                assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                related_view ) ) AND ( assembly_relationships_for_associated_structure[i]\
                structured_layout_component_sub_assembly_relationship.related_view\stratum_feature_template_component.
                resident_stratum :=: resident_stratum ) THEN
              RETURN( assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                  related_view );
            END_IF;
          END_REPEAT;
          RETURN( ? );
        END;
      OTHERWISE                            :         RETURN( ? );
      END_CASE;

  END_FUNCTION;

  FUNCTION land_get_associated_land_for_thermal_removal(
               input : dependent_thermal_isolation_removal_component
           ) : land;

    LOCAL
      assembly_relationships_for_associated_structure : SET OF structured_layout_component_sub_assembly_relationship := [];
      assembly_relationship                           : SET OF structured_layout_component_sub_assembly_relationship := 
                                                         bag_to_set( USEDIN( input, 
                                                         'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                         + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATED_VIEW'  ) );
      associated_structure                            : structured_layout_component;
      component_mrlc                                  : SET OF material_removal_laminate_component := [];
      component_relationship                          : SET OF structured_layout_component_sub_assembly_relationship := 
                                                         bag_to_set( USEDIN( input, 
                                                         'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                                                         + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW'  ) );
      first_location                                  : template_location_in_structured_template := assembly_relationship[1]\
                                                         structured_layout_component_sub_assembly_relationship.first_location;
      resident_stratum                                : stratum;
      resident_sftc                                   : stratum_feature_template_component;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( component_relationship ) BY 1;
      component_mrlc := component_mrlc + component_relationship[i]\structured_layout_component_sub_assembly_relationship.
          related_view;
    END_REPEAT;
    CASE TRUE OF
      'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM' IN TYPEOF( component_mrlc[1]\
          material_removal_laminate_component.design_intent[1] ) :         resident_stratum := component_mrlc[1]\
            material_removal_laminate_component.design_intent[1];
      'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE_TEMPLATE_COMPONENT' IN TYPEOF( 
          component_mrlc[1]\material_removal_laminate_component.design_intent[1] ) : 
        BEGIN
          resident_sftc := component_mrlc[1]\material_removal_laminate_component.design_intent[1];
          CASE TRUE OF
            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM_FEATURE' IN TYPEOF( resident_sftc\
                stratum_feature_template_component.implementation_or_resident_stratum ) :               resident_stratum := 
                  resident_sftc\stratum_feature_template_component.implementation_or_resident_stratum\stratum_feature.
                  resident_stratum;
            'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM' IN TYPEOF( resident_sftc\
                stratum_feature_template_component.implementation_or_resident_stratum ) :               resident_stratum := 
                  resident_sftc\stratum_feature_template_component.implementation_or_resident_stratum;
            OTHERWISE                      :               RETURN( ? );
            END_CASE;
        END;
      OTHERWISE                            :         RETURN( ? );
      END_CASE;
    IF SIZEOF( assembly_relationship ) <> 1 THEN
      RETURN( ? );
    END_IF;
    associated_structure := assembly_relationship[1]\structured_layout_component_sub_assembly_relationship.relating_view;
    assembly_relationships_for_associated_structure := bag_to_set( USEDIN( associated_structure, 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
        + 'STRUCTURED_LAYOUT_COMPONENT_SUB_ASSEMBLY_RELATIONSHIP.RELATING_VIEW'  ) ) - assembly_relationship;
    CASE TRUE OF
      'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.FOOTPRINT_OCCURRENCE' IN TYPEOF( associated_structure ) : 
        BEGIN
          REPEAT i := 1 TO SIZEOF( assembly_relationships_for_associated_structure ) BY 1;
            IF ( first_location :=: assembly_relationships_for_associated_structure[i]\
                structured_layout_component_sub_assembly_relationship.first_location ) AND ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND'  IN TYPEOF( 
                assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                related_view ) ) AND ( assembly_relationships_for_associated_structure[i]\
                structured_layout_component_sub_assembly_relationship.related_view\stratum_feature_template_component.
                resident_stratum :=: resident_stratum ) THEN
              RETURN( assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                  related_view );
            END_IF;
          END_REPEAT;
          RETURN( ? );
        END;
      'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PADSTACK_OCCURRENCE' IN TYPEOF( associated_structure ) : 
        BEGIN
          REPEAT i := 1 TO SIZEOF( assembly_relationships_for_associated_structure ) BY 1;
            IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND' IN TYPEOF( 
                assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                related_view ) ) AND ( assembly_relationships_for_associated_structure[i]\
                structured_layout_component_sub_assembly_relationship.related_view\stratum_feature_template_component.
                resident_stratum :=: resident_stratum ) THEN
              RETURN( assembly_relationships_for_associated_structure[i]\structured_layout_component_sub_assembly_relationship.
                  related_view );
            END_IF;
          END_REPEAT;
          RETURN( ? );
        END;
      OTHERWISE                            :         RETURN( ? );
      END_CASE;

  END_FUNCTION;

  FUNCTION leap_year(
               year : year_number
           ) : BOOLEAN;
    IF ( ( ( year MOD 4 ) = 0 ) AND ( ( year MOD 100 ) <> 0 ) ) OR ( ( year MOD 400 ) = 0 ) THEN
      RETURN( TRUE );
    ELSE
      RETURN( FALSE );
    END_IF;

  END_FUNCTION;

  FUNCTION less(
               input1 : length_tolerance_characteristic;
               input2 : ft_value_select
           ) : BOOLEAN;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION limd_get_generic_network(
               input1 : SET OF inter_stratum_join_relationship;
               input2 : SET OF intra_stratum_join_relationship;
               input3 : SET OF stratum_embedded_physical_component_join_relationship;
               input4 : SET OF unrouted_join_relationship
           ) : generic_physical_network;

    LOCAL
      r1  : SET OF routed_join_relationship := input1 + input2 + input3;
      u1  : SET OF unrouted_join_relationship := input4;
      gpn : SET OF generic_physical_network := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( r1 ) BY 1;
      gpn := gpn + r1[i]\routed_join_relationship.network_topology;
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( u1 ) BY 1;
      gpn := gpn + u1[i]\unrouted_join_relationship.network_topology;
    END_REPEAT;
    IF SIZEOF( gpn ) <> 1 THEN
      RETURN( ? );
    ELSE
      RETURN( gpn[1] );
    END_IF;

  END_FUNCTION;

  FUNCTION limd_get_lcp_resident_stratum(
               input : SET OF layer_connection_point
           ) : BAG OF design_layer_stratum;

    LOCAL
      s : BAG OF design_layer_stratum := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      s := s + input[i]\layer_connection_point.resident_design_layer_stratum;
    END_REPEAT;
    RETURN( s );

  END_FUNCTION;

  FUNCTION limd_get_sz_cp(
               input : SET [1 : ?] OF conductive_interconnect_element_terminal_link
           ) : INTEGER;

    LOCAL
      ac : SET OF conductive_interconnect_element_terminal := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      ac := ac + input[i]\conductive_interconnect_element_terminal_link.precedent_point + input[i]\
          conductive_interconnect_element_terminal_link.subsequent_point;
    END_REPEAT;
    RETURN( SIZEOF( ac ) );

  END_FUNCTION;

  FUNCTION limdwpcd_get_ac(
               input : SET OF structured_layout_component_sub_assembly_relationship
           ) : SET OF area_component;

    LOCAL
      sspc   : SET OF stratum_feature_template_component := [];
      slcsar : SET OF structured_layout_component_sub_assembly_relationship := QUERY ( inp <* input | ( ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.AREA_COMPONENT'  IN TYPEOF( inp.related_view ) ) 
                AND ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAND' IN TYPEOF( inp.related_view ) ) ) 
                AND ( NOT ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                + 'CONDUCTIVE_INTERCONNECT_ELEMENT_WITH_PRE_DEFINED_TRANSITIONS'  IN TYPEOF( inp.related_view ) ) ) AND ( NOT ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
                + 'INTERFACE_ACCESS_STRATUM_FEATURE_TEMPLATE_COMPONENT'  IN TYPEOF( inp.related_view ) ) ) ) );
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( slcsar ) BY 1;
      sspc := sspc + slcsar[i]\structured_layout_component_sub_assembly_relationship.related_view;
    END_REPEAT;
    RETURN( sspc );

  END_FUNCTION;

  FUNCTION limdwpcd_get_lc(
               input : SET OF structured_layout_component_sub_assembly_relationship
           ) : SET OF laminate_component;

    LOCAL
      sspc   : SET OF laminate_component := [];
      slcsar : SET OF structured_layout_component_sub_assembly_relationship := QUERY ( inp <* input | ( 
                'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PADSTACK_DEFINITION'  IN TYPEOF( inp\
                structured_layout_component_sub_assembly_relationship.second_location\template_location_in_structured_template.
                assembly ) ) );
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( slcsar ) BY 1;
      sspc := sspc + slcsar[i]\structured_layout_component_sub_assembly_relationship.related_view;
    END_REPEAT;
    RETURN( sspc );

  END_FUNCTION;

  FUNCTION limdwpcd_get_ppdl(
               input : SET OF plated_passage
           ) : SET OF plated_passage_dependent_land;

    LOCAL
      sspc : SET OF plated_passage_dependent_land := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      sspc := sspc + bag_to_set( USEDIN( input[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'PLATED_PASSAGE_DEPENDENT_LAND.REFERENCE_PLATED_PASSAGE'  ) );
    END_REPEAT;
    RETURN( sspc );

  END_FUNCTION;

  FUNCTION limdwpcd_get_prs(
               input1 : SET OF plated_passage;
               input2 : SET OF product_view_definition
           ) : SET OF stratum;

    LOCAL
      s      : SET OF stratum := [];
      stol   : SET OF stratum_technology_occurrence_link := [];
      ptatsm : SET OF passage_technology_allocation_to_stack_model := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input1 ) BY 1;
      ptatsm := ptatsm + input1[i]\inter_stratum_feature.vertical_extent;
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( ptatsm ) BY 1;
      stol := stol + ptatsm[i]\stratum_sub_stack.stratum_technology_sequence;
    END_REPEAT;
    s := limdwpcd_get_stolrs( stol, input2 );
    RETURN( s );

  END_FUNCTION;

  FUNCTION limdwpcd_get_stolrs(
               input1 : SET OF stratum_technology_occurrence_link;
               input2 : SET OF product_view_definition
           ) : SET OF stratum;

    LOCAL
      s0    : SET OF stratum := [];
      sto   : SET OF stratum_technology_occurrence := [];
      imsar : SET OF interconnect_module_stratum_assembly_relationship := [];
      s1    : SET OF stratum := [];
      s2    : SET OF stratum := [];
      i     : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO 1 BY 1;
      REPEAT j := 1 TO SIZEOF( input1 ) BY 1;
        sto := sto + input1[j]\stratum_technology_occurrence_relationship.sto_1 + input1[j]\
            stratum_technology_occurrence_relationship.sto_2;
      END_REPEAT;
      REPEAT j := 1 TO SIZEOF( sto ) BY 1;
        s0 := s0 + bag_to_set( USEDIN( sto[j], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.STRATUM.'
            + 'DEFINITION'  ) );
      END_REPEAT;
      imsar := imsar + bag_to_set( USEDIN( input2[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'INTERCONNECT_MODULE_STRATUM_ASSEMBLY_RELATIONSHIP.ASSEMBLY'  ) );
      REPEAT j := 1 TO SIZEOF( imsar ) BY 1;
        s1 := s1 + imsar[j]\interconnect_module_stratum_assembly_relationship.component;
      END_REPEAT;
      s2 := s0 * s1;
    END_REPEAT;
    RETURN( s2 );

  END_FUNCTION;

  FUNCTION limdwpcd_get_tbrs(
               input : SET OF stratum_feature_template_component
           ) : SET OF stratum;

    LOCAL
      s : SET OF stratum := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      s := s + input[i]\stratum_feature_template_component.resident_stratum;
    END_REPEAT;
    RETURN( s );

  END_FUNCTION;

  FUNCTION list_get_zone_name(
               input : SET OF connection_zone_in_layout_template
           ) : SET OF STRING;

    LOCAL
      s : SET OF STRING := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      s := s + input[i]\characterizable_object.name;
    END_REPEAT;
    RETURN( s );

  END_FUNCTION;

  FUNCTION local_vars_aux(
               thing : GENERIC;
               accum : SET [0 : ?] OF scalar_variable
           ) : SET [0 : ?] OF scalar_variable;

    LOCAL
      i : INTEGER;
      j : INTEGER;
      k : INTEGER;
    END_LOCAL;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ABSTRACT_VARIABLE' IN TYPEOF( thing ) ) AND ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RULE_DEFINITION'  IN TYPEOF( thing.scope ) ) THEN
      accum := accum + thing;
    ELSE
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.RULE_CONDITION' IN TYPEOF( thing ) THEN
        REPEAT i := 1 TO HIINDEX( thing\atomic_formula.terms ) BY 1;
          accum := local_vars_aux( thing\atomic_formula.terms[i], accum );
        END_REPEAT;
      ELSE
        IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.SIMPLE_CLAUSE' IN TYPEOF( thing ) THEN
          REPEAT j := 1 TO HIINDEX( thing.formulas ) BY 1;
            accum := local_vars_aux( thing.formulas[j], accum );
          END_REPEAT;
        ELSE
          IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.COMPLEX_CLAUSE' IN TYPEOF( thing ) THEN
            REPEAT k := 1 TO HIINDEX( thing.clauses ) BY 1;
              accum := local_vars_aux( thing.clauses[k], accum );
            END_REPEAT;
          END_IF;
        END_IF;
      END_IF;
    END_IF;
    RETURN( accum );

  END_FUNCTION;

  FUNCTION local_vars_of(
               thing : GENERIC
           ) : SET [0 : ?] OF scalar_variable;

    LOCAL
      accum : SET [0 : ?] OF scalar_variable := [];
    END_LOCAL;
    RETURN( local_vars_aux( thing, accum ) );

  END_FUNCTION;

  FUNCTION make_numeric_set(
               start, delta : NUMBER;
               incs : maths_integer
           ) : SET [2 : ?] OF NUMBER;

    LOCAL
      i           : INTEGER;
      numeric_set : SET [2 : ?] OF NUMBER := [start, start + delta];
    END_LOCAL;
    IF incs > 1 THEN
      REPEAT i := 2 TO incs BY 1;
        numeric_set := numeric_set + start + ( i * delta );
      END_REPEAT;
    END_IF;
    RETURN( numeric_set );

  END_FUNCTION;

  FUNCTION max_data_element(
               input1, input2 : length_data_element
           ) : length_data_element;
    RETURN( input1 );

  END_FUNCTION;

  FUNCTION no_2d_location_for_component(
               comp : assembly_component
           ) : BOOLEAN;

    LOCAL
      i   : INTEGER;
      j   : INTEGER;
      cis : SET OF contextual_item_shape;
      loc : SET OF component_2d_location;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( comp.occurrence_contexts ) BY 1;
      cis := bag_to_set( USEDIN( comp.occurrence_contexts[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'CONTEXTUAL_ITEM_SHAPE.DESCRIBED_ELEMENT'  ) );
      REPEAT j := 1 TO SIZEOF( cis ) BY 1;
        loc := bag_to_set( USEDIN( cis[j], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
            + 'CONTEXTUAL_SHAPE_REPRESENTATION.CONTEXTUAL_SHAPE'  ) );
        IF SIZEOF( loc ) > 0 THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION no_3d_location_for_component(
               comp : assembly_component
           ) : BOOLEAN;

    LOCAL
      i   : INTEGER := 0;
      j   : INTEGER := 0;
      cis : SET OF contextual_item_shape := [];
      loc : SET OF component_3d_location := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( comp.occurrence_contexts ) BY 1;
      cis := bag_to_set( USEDIN( comp.occurrence_contexts[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
          + 'CONTEXTUAL_ITEM_SHAPE.DESCRIBED_ELEMENT'  ) );
      REPEAT j := 1 TO SIZEOF( cis ) BY 1;
        loc := bag_to_set( USEDIN( cis[j], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
            + 'CONTEXTUAL_SHAPE_REPRESENTATION.CONTEXTUAL_SHAPE'  ) );
        IF SIZEOF( loc ) > 0 THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION path_aligned(
               a_path : path
           ) : LOGICAL;

    LOCAL
      n : INTEGER;
      p : LOGICAL := TRUE;
    END_LOCAL;
    n := SIZEOF( a_path.edge_list );
    REPEAT i := 2 TO n BY 1;
      p := p AND ( a_path.edge_list[i - 1].edge_end :=: a_path.edge_list[i].edge_start );
    END_REPEAT;
    RETURN( p );

  END_FUNCTION;

  FUNCTION pcd_get_assemblies(
               input : SET OF component_terminal
           ) : SET OF product_view_definition;

    LOCAL
      ac  : SET OF assembly_component := [];
      pvd : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      ac := ac + input[i]\component_feature.associated_component;
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX( ac ) BY 1;
      pvd := pvd + ac[i]\assembly_component.assemblies;
    END_REPEAT;
    RETURN( pvd );

  END_FUNCTION;

  FUNCTION pcd_get_pcltn(
               input : SET OF physical_connectivity_layout_topology_link
           ) : SET OF physical_connectivity_layout_topology_node;

    LOCAL
      pcltn : SET OF physical_connectivity_layout_topology_node := [];
      i     : INTEGER := 0;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input ) BY 1;
      pcltn := pcltn + input[i].precedent_node + input[i].subsequent_node;
    END_REPEAT;
    RETURN( pcltn );

  END_FUNCTION;

  FUNCTION pfg_get_sz_pf(
               input : SET [1 : ?] OF part_feature_placement_link
           ) : INTEGER;

    LOCAL
      ac : SET OF part_feature := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      ac := ac + input[i]\part_feature_placement_link.precedent_element + input[i]\part_feature_placement_link.subsequent_element;
    END_REPEAT;
    RETURN( SIZEOF( ac ) );

  END_FUNCTION;

  FUNCTION pfg_get_sz_plar(
               input : SET [1 : ?] OF part_linear_array_feature_link
           ) : INTEGER;

    LOCAL
      ac : SET OF part_linear_array_feature := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input ) BY 1;
      ac := ac + input[i]\part_linear_array_feature_link.precedent_element + input[i]\part_linear_array_feature_link.
          subsequent_element;
    END_REPEAT;
    RETURN( SIZEOF( ac ) );

  END_FUNCTION;

  FUNCTION positive_curve_weights(
               bsc : rational_b_spline_curve
           ) : BOOLEAN;

    LOCAL
      result : BOOLEAN := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( bsc.weight_values ) BY 1;
      IF bsc.weight_values[i] <= 0 THEN
        result := FALSE;
        RETURN( result );
      END_IF;
    END_REPEAT;
    RETURN( result );

  END_FUNCTION;

  FUNCTION positive_surface_weights(
               bss : rational_b_spline_surface
           ) : BOOLEAN;

    LOCAL
      result : BOOLEAN := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( bss.weight_values ) BY 1;
      REPEAT j := 0 TO SIZEOF( bss.weight_values[1] ) BY 1;
        IF bss.weight_values[i][j] <= 0 THEN
          result := FALSE;
          RETURN( result );
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN( result );

  END_FUNCTION;

  FUNCTION pplt_get_gm(
               input : printed_tiebar_template
           ) : SET OF geometric_model;

    LOCAL
      gm : SET OF geometric_model := [];
    END_LOCAL;
    RETURN( gm );

  END_FUNCTION;

  FUNCTION pplt_get_pcl_ap2d(
               input : printed_tiebar_template
           ) : SET OF axis_placement_2d;

    LOCAL
      ap2d : SET OF axis_placement_2d := [];
    END_LOCAL;
    RETURN( ap2d );

  END_FUNCTION;

  FUNCTION pplt_get_tl_ap2d(
               input : printed_tiebar_template
           ) : SET OF axis_placement_2d;

    LOCAL
      ap2d : SET OF axis_placement_2d := [];
    END_LOCAL;
    RETURN( ap2d );

  END_FUNCTION;

  FUNCTION pu2dv_has_shape(
               input : assembly_component
           ) : BOOLEAN;

    LOCAL
      ac2ds : BAG OF assembly_component_2d_shape_model := USEDIN( input, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.'
               + 'SHAPE_CHARACTERIZED_COMPONENT'  );
    END_LOCAL;
    RETURN( SIZEOF( ac2ds ) > 0 );

  END_FUNCTION;

  FUNCTION pu2dv_typeof(
               input : assembly_component
           ) : SET OF STRING;

    LOCAL
      ac2ds : BAG OF assembly_component_2d_shape_model := USEDIN( input, 
               'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ASSEMBLY_COMPONENT_2D_SHAPE_MODEL.'
               + 'SHAPE_CHARACTERIZED_COMPONENT'  );
    END_LOCAL;
    IF SIZEOF( ac2ds ) > 1 THEN
      RETURN( ? );
    END_IF;
    RETURN( TYPEOF( ac2ds[1] ) );

  END_FUNCTION;

  FUNCTION relating_geometric_models_of_extreme_values(
               item : location_of_extreme_value_select
           ) : SET OF geometric_model;

    LOCAL
      results : SET OF geometric_model := [];
      exti    : SET OF extreme_instance := [];
      ii_ei   : SET OF instance_report_item_with_extreme_instances := [];
      sdiir   : SET OF shape_data_quality_inspection_instance_report := [];
      sdqr    : SET OF shape_data_quality_inspection_result_representation := [];
      sdisr   : SET OF shape_data_quality_inspected_shape_and_result_relationship := [];
    END_LOCAL;
    exti := exti + bag_to_set( USEDIN( item, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'EXTREME_INSTANCE.'  + 'LOCATIONS_OF_EXTREME_VALUE' ) );
    REPEAT i := 1 TO HIINDEX( exti ) BY 1;
      ii_ei := ii_ei + bag_to_set( USEDIN( exti[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES.'  + 'EXTREME_INSTANCES' ) );
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX( ii_ei ) BY 1;
      sdiir := sdiir + bag_to_set( USEDIN( ii_ei[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT.'  + 'INSPECTED_INSTANCES' ) );
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX( sdiir ) BY 1;
      sdqr := sdqr + QUERY ( i1 <* bag_to_set( USEDIN( sdiir[i].inspection_result, 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REPRESENTATION.ITEMS'  ) ) | ( ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
          'SHAPE_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION'  ) IN TYPEOF( i1 ) ) );
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX( sdqr ) BY 1;
      sdisr := sdisr + bag_to_set( USEDIN( sdqr[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'SHAPE_DATA_QUALITY_INSPECTED_SHAPE_AND_RESULT_RELATIONSHIP.'  + 'REP_2' ) );
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX( sdisr ) BY 1;
      results := results + sdisr[i].rep_1;
    END_REPEAT;
    RETURN( results );

  END_FUNCTION;

  FUNCTION single_package_product(
               input1 : SET OF package;
               input2 : SET OF package_or_package_external_reference
           ) : BOOLEAN;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION sort_link_associations(
               aprr : SET [1 : ?] OF pair_representation_relationship;
               one_not_two : BOOLEAN
           ) : SET OF kinematic_link_representation;

    LOCAL
      result : SET OF kinematic_link_representation := [];
    END_LOCAL;
    IF one_not_two THEN
      REPEAT i := 1 TO HIINDEX( aprr ) BY 1;
        result := result + aprr[i].rep_1;
      END_REPEAT;
    ELSE
      REPEAT i := 1 TO HIINDEX( aprr ) BY 1;
        result := result + aprr[i].rep_2;
      END_REPEAT;
    END_IF;
    RETURN( result );

  END_FUNCTION;

  FUNCTION spa_get_definition(
               input : contextual_item_shape
           ) : product_view_definition;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.VIEW_DEFINITION_USAGE' IN TYPEOF( input\item_shape.
        described_element ) THEN
      RETURN( input\item_shape.described_element\view_definition_relationship.related_view );
    END_IF;
    IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_OCCURRENCE_DEFINITION_RELATIONSHIP' IN 
        TYPEOF( input\item_shape.described_element ) THEN
      RETURN( input\item_shape.described_element\product_occurrence_definition_relationship.related_view );
    END_IF;
    RETURN( ? );

  END_FUNCTION;

  FUNCTION sts_get_general_datum_reference(
               input : datum_reference_element
           ) : general_datum_reference;

    LOCAL
      general_datum_reference_bag : BAG OF general_datum_reference := USEDIN( input, 
                                     'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
                                     'GENERAL_DATUM_REFERENCE.'  + 'BASE' );
    END_LOCAL;
    IF SIZEOF( general_datum_reference_bag ) = 1 THEN
      RETURN( general_datum_reference_bag[1] );
    ELSE
      RETURN( ? );
    END_IF;

  END_FUNCTION;

  FUNCTION sts_vertex_degree_check(
               input : SET OF stratum_technology_occurrence_link;
               n : INTEGER
           ) : BOOLEAN;

    LOCAL
      psto : INTEGER := 0;
      ssto : INTEGER := 0;
      sto  : SET OF stratum_technology_occurrence := get_stack( input );
      i    : INTEGER := 0;
      j    : INTEGER := 0;
      pass : BOOLEAN := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( sto ) BY 1;
      REPEAT j := 1 TO SIZEOF( input ) BY 1;
        IF input[j]\stratum_technology_occurrence_relationship.sto_1 :=: sto[i] THEN
          psto := psto + 1;
          IF psto = n THEN
            pass := FALSE;
            ESCAPE;
          END_IF;
        END_IF;
        IF input[j]\stratum_technology_occurrence_relationship.sto_2 :=: sto[i] THEN
          ssto := ssto + 1;
          IF ssto = n THEN
            pass := FALSE;
            ESCAPE;
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN( pass );

  END_FUNCTION;

  FUNCTION substrate_in_assembly(
               c2dl : component_2d_location
           ) : BOOLEAN;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION type_of_set(
               items : SET OF GENERIC
           ) : SET OF STRING;

    LOCAL
      result : SET OF STRING := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( items ) BY 1;
      result := result + TYPEOF( items[i] );
    END_REPEAT;
    RETURN( result );

  END_FUNCTION;

  FUNCTION using_items(
               item : representation_item;
               checked_items : SET OF representation_item
           ) : SET OF representation_item;

    LOCAL
      new_check_items : SET OF representation_item;
      result_items    : SET OF representation_item;
      next_items      : SET OF representation_item;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    next_items := QUERY ( z <* bag_to_set( USEDIN( item, '' ) ) | ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REPRESENTATION_ITEM'  IN TYPEOF( z ) ) );
    IF SIZEOF( next_items ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( next_items ) BY 1;
        IF NOT ( next_items[i] IN new_check_items ) THEN
          result_items := result_items + next_items[i] + using_items( next_items[i], new_check_items );
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN( result_items );

  END_FUNCTION;

  FUNCTION using_product_view_definition_of_geometric_model(
               item : geometric_model
           ) : SET OF product_view_definition;

    LOCAL
      local_s_d_a : SET OF shape_description_association := [];
      local_p_d   : SET OF product_view_definition := [];
      i           : INTEGER;
    END_LOCAL;
    local_s_d_a := bag_to_set( USEDIN( item, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
        + 'SHAPE_DESCRIPTION_ASSOCIATION.USED_REPRESENTATION'  ) );
    REPEAT i := 1 TO HIINDEX( local_s_d_a ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.ITEM_SHAPE' IN TYPEOF( local_s_d_a[i].definition )
          THEN
        IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.PRODUCT_VIEW_DEFINITION' IN TYPEOF( local_s_d_a[i]
            .definition\item_shape.described_element ) THEN
          local_p_d := local_p_d + local_s_d_a[i].definition\item_shape.described_element;
        END_IF;
      END_IF;
    END_REPEAT;
    RETURN( local_p_d );

  END_FUNCTION;

  FUNCTION using_representations(
               item : representation_item
           ) : SET OF representation;

    LOCAL
      results            : SET OF representation;
      result_bag         : BAG OF representation;
      intermediate_items : SET OF representation_item;
    END_LOCAL;
    results := [];
    result_bag := USEDIN( item, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.REPRESENTATION.ITEMS' );
    IF SIZEOF( result_bag ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( result_bag ) BY 1;
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    intermediate_items := using_items( item, [] );
    IF SIZEOF( intermediate_items ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( intermediate_items ) BY 1;
        result_bag := USEDIN( intermediate_items[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'
            + 'REPRESENTATION.ITEMS'  );
        IF SIZEOF( result_bag ) > 0 THEN
          REPEAT j := 1 TO HIINDEX( result_bag ) BY 1;
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN( results );

  END_FUNCTION;

  FUNCTION valid_assembly_context_for_bond(
               input1 : part_design_view;
               input2 : GENERIC
           ) : BOOLEAN;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION valid_constraining_shape(
               sd : SET OF geometric_model;
               eepd : product_view_definition
           ) : BOOLEAN;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION valid_es(
               input1 : STRING;
               input2 : SET OF non_feature_shape_model
           ) : BOOLEAN;
    REPEAT i := 1 TO HIINDEX( input2 ) BY 1;
      IF NOT ( input1 IN TYPEOF( input2[i] ) ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION valid_non_conformant_design_object_context(
               input1 : SET OF interconnect_module_design_object_select;
               input2 : layered_interconnect_module_design_view
           ) : BOOLEAN;

    LOCAL
      vdr   : SET OF assembly_component_relationship := [];
      valid : BOOLEAN := TRUE;
      pvd   : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input1 ) BY 1;
      IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.LAMINATE_COMPONENT' IN TYPEOF( input1[i] ) THEN
        vdr := input1[i]\assembly_component.occurrence_contexts;
        pvd := [];
        REPEAT j := 1 TO HIINDEX( vdr ) BY 1;
          pvd := pvd + vdr[j]\product_occurrence_definition_relationship.relating_view;
        END_REPEAT;
        IF NOT ( input2 IN pvd ) THEN
          valid := FALSE;
        END_IF;
      END_IF;
    END_REPEAT;
    RETURN( valid );

  END_FUNCTION;

  FUNCTION valid_non_conformant_stratum_context(
               input1 : SET OF stratum;
               input2 : layered_interconnect_module_design_view
           ) : BOOLEAN;

    LOCAL
      imsar : SET OF interconnect_module_stratum_assembly_relationship := [];
      valid : BOOLEAN := TRUE;
      i     : INTEGER := 0;
      j     : INTEGER := 0;
      pvd   : SET OF product_view_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( input1 ) BY 1;
      imsar := input1[i]\stratum.assembly;
      pvd := [];
      REPEAT j := 1 TO HIINDEX( pvd ) BY 1;
        pvd := pvd + imsar[j]\interconnect_module_stratum_assembly_relationship.assembly;
      END_REPEAT;
      IF NOT ( input2 IN pvd ) THEN
        valid := FALSE;
      END_IF;
    END_REPEAT;
    RETURN( valid );

  END_FUNCTION;

  FUNCTION valid_qualified_tolerance_characteristic(
               input : qualified_tolerance_characteristic
           ) : BOOLEAN;

    LOCAL
      bag_data  : BAG OF STRING := [];
      valid_set : SET OF STRING := [ 'nominal', 'typical', 'maximium', 'minimum'];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( input\qualified_tolerance_characteristic.items ) BY 1;
      REPEAT j := 1 TO SIZEOF( input\qualified_tolerance_characteristic.items[i]\qualified_representation_item.qualifiers ) BY 1;
        IF 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.TYPE_QUALIFIER' IN TYPEOF( input\
            qualified_tolerance_characteristic.items[i]\qualified_representation_item.qualifiers[j] ) THEN
          bag_data := bag_data + input\qualified_tolerance_characteristic.items[i]\qualified_representation_item.qualifiers[j]\
              type_qualifier.name;
        END_IF;
      END_REPEAT;
    END_REPEAT;
    IF ( SIZEOF( bag_to_set( bag_data ) ) = SIZEOF( bag_data ) ) AND VALUE_UNIQUE( bag_data ) AND ( SIZEOF( valid_set * bag_data ) 
        = SIZEOF( bag_data ) ) THEN
      RETURN( TRUE );
    END_IF;
    RETURN( FALSE );

  END_FUNCTION;

  FUNCTION valid_range(
               input1, input2 : numerical_item_with_unit
           ) : BOOLEAN;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION validate_accuracy_types(
               ei : shape_data_quality_criterion;
               type_list : BAG OF STRING
           ) : LOGICAL;

    LOCAL
      sdqca   : BAG OF shape_data_quality_criterion_and_accuracy_association := [];
      sma     : BAG OF shape_measurement_accuracy := [];
      sdqir   : SET OF shape_data_quality_inspection_result := [];
      scraa   : BAG OF shape_inspection_result_accuracy_association := [];
      t_logic : BOOLEAN;
    END_LOCAL;
    sdqca := USEDIN( ei, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'SHAPE_DATA_QUALITY_CRITERION_AND_ACCURACY_ASSOCIATION.'  + 'SHAPE_DATA_QUALITY_CRITERION' );
    IF SIZEOF( sdqca ) <> 0 THEN
      REPEAT i := 1 TO SIZEOF( sdqca ) BY 1;
        sma := sma + sdqca[i].required_specific_accuracy;
      END_REPEAT;
      IF SIZEOF( type_list ) < SIZEOF( sma ) THEN
        RETURN( FALSE );
      END_IF;
      REPEAT i := 1 TO SIZEOF( sma ) BY 1;
        t_logic := FALSE;
        REPEAT j := 1 TO SIZEOF( type_list ) BY 1;
          IF type_list[j] IN value_limit_type( sma[i].range ) THEN
            t_logic := TRUE;
            ESCAPE;
          END_IF;
        END_REPEAT;
        IF NOT t_logic THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
    END_IF;
    sdqir := QUERY ( q <* bag_to_set( USEDIN( ei, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'DATA_QUALITY_INSPECTION_RESULT.'  + 'CRITERION_INSPECTED' ) ) | ( ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SHAPE_DATA_QUALITY_INSPECTION_RESULT' ) IN 
        TYPEOF( q ) ) );
    IF SIZEOF( sdqir ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdqir ) BY 1;
      scraa := USEDIN( sdqir[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'SHAPE_INSPECTION_RESULT_ACCURACY_ASSOCIATION.'  + 'SHAPE_DATA_QUALITY_RESULT' );
      IF SIZEOF( scraa ) <> 0 THEN
        sma := [];
        REPEAT j := 1 TO SIZEOF( scraa ) BY 1;
          sma := sma + scraa[j].applied_specific_accuracy;
        END_REPEAT;
        IF SIZEOF( type_list ) < SIZEOF( sma ) THEN
          RETURN( FALSE );
        END_IF;
        REPEAT j := 1 TO SIZEOF( sma ) BY 1;
          t_logic := FALSE;
          REPEAT k := 1 TO SIZEOF( type_list ) BY 1;
            IF type_list[k] IN value_limit_type( sma[j].range ) THEN
              t_logic := TRUE;
              ESCAPE;
            END_IF;
          END_REPEAT;
          IF NOT t_logic THEN
            RETURN( FALSE );
          END_IF;
        END_REPEAT;
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION validate_attribute_id(
               attid : attribute_identifier
           ) : BOOLEAN;

    CONSTANT
      letters     : SET [52 : 52] OF STRING :=
                     [ 'a' , 
                       'b' , 
                       'c' , 
                       'd' , 
                       'e' , 
                       'f' , 
                       'g' , 
                       'h' , 
                       'i' , 
                       'j' , 
                       'k' , 
                       'l' , 
                       'm' , 
                       'n' , 
                       'o' , 
                       'p' , 
                       'q' , 
                       'r' , 
                       's' , 
                       't' , 
                       'u' , 
                       'v' , 
                       'w' , 
                       'x' , 
                       'y' , 
                       'z' , 
                       'A' , 
                       'B' , 
                       'C' , 
                       'D' , 
                       'E' , 
                       'F' , 
                       'G' , 
                       'H' , 
                       'I' , 
                       'J' , 
                       'K' , 
                       'L' , 
                       'M' , 
                       'N' , 
                       'O' , 
                       'P' , 
                       'Q' , 
                       'R' , 
                       'S' , 
                       'T' , 
                       'U' , 
                       'V' , 
                       'W' , 
                       'X' , 
                       'Y' , 
                       'Z' ];
      numbers_etc : SET [15 : 15] OF STRING :=
                     [ '0' , 
                       '1' , 
                       '2' , 
                       '3' , 
                       '4' , 
                       '5' , 
                       '6' , 
                       '7' , 
                       '8' , 
                       '9' , 
                       '_' , 
                       '[' , 
                       ']' , 
                       '.' , 
                       '\' ];
      valid_chars : SET [67 : 67] OF STRING :=
                     letters 
                       +
                       numbers_etc;
    END_CONSTANT;

    LOCAL
      id_length : INTEGER := LENGTH( attid );
      id_valid  : BOOLEAN := TRUE;
      i         : INTEGER;
    END_LOCAL;
    IF NOT ( attid[1] IN letters ) THEN
      id_valid := FALSE;
    END_IF;
    REPEAT i := 2 TO id_length BY 1 WHILE id_valid = TRUE;
      IF NOT ( attid[i] IN valid_chars ) THEN
        id_valid := FALSE;
      END_IF;
    END_REPEAT;
    RETURN( id_valid );

  END_FUNCTION;

  FUNCTION validate_ecdq_inspected_elements_type(
               ei : externally_conditioned_data_quality_criterion;
               type_list : BAG OF STRING
           ) : LOGICAL;

    LOCAL
      edqir       : SET OF externally_conditioned_data_quality_inspection_result := [];
      dir         : SET OF data_quality_inspection_instance_report := [];
      ediri       : SET OF externally_conditioned_data_quality_inspection_instance_report_item := [];
      t_type_list : BAG OF STRING := [];
    END_LOCAL;
    edqir := QUERY ( q <* bag_to_set( USEDIN( ei, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'DATA_QUALITY_INSPECTION_RESULT.'  + 'CRITERION_INSPECTED' ) ) | ( ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
        'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT'  ) IN TYPEOF( q ) ) );
    IF SIZEOF( edqir ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( edqir ) BY 1;
      dir := dir + QUERY ( q <* bag_to_set( USEDIN( edqir[i], 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  
          + 'DATA_QUALITY_INSPECTION_REPORT.' + 'INSPECTION_RESULT' ) ) | ( ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_INSTANCE_REPORT' ) IN
          TYPEOF( q ) ) );
    END_REPEAT;
    IF SIZEOF( dir ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( dir ) BY 1;
      ediri := ediri + QUERY ( q <* dir[i].inspected_instances | ( ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
          'EXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'  ) IN TYPEOF( q ) ) );
    END_REPEAT;
    IF SIZEOF( ediri ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( ediri ) BY 1;
      IF SIZEOF( ediri[i].inspected_elements ) <> SIZEOF( type_list ) THEN
        RETURN( FALSE );
      END_IF;
      t_type_list := type_list;
      REPEAT j := 1 TO SIZEOF( ediri[i].inspected_elements ) BY 1;
        REPEAT k := 1 TO SIZEOF( t_type_list ) BY 1;
          IF t_type_list[k] IN TYPEOF( ediri[i].inspected_elements[j] ) THEN
            t_type_list := t_type_list - t_type_list[k];
            ESCAPE;
          END_IF;
        END_REPEAT;
      END_REPEAT;
      IF SIZEOF( t_type_list ) > 0 THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION validate_inspected_elements_type(
               ei : shape_data_quality_criterion;
               type_list : BAG OF STRING
           ) : LOGICAL;

    LOCAL
      sdqir       : SET OF shape_data_quality_inspection_result := [];
      sdir        : SET OF shape_data_quality_inspection_instance_report := [];
      sdiri       : SET OF shape_data_quality_inspection_instance_report_item := [];
      t_type_list : BAG OF STRING := [];
    END_LOCAL;
    sdqir := QUERY ( q <* bag_to_set( USEDIN( ei, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'DATA_QUALITY_INSPECTION_RESULT.'  + 'CRITERION_INSPECTED' ) ) | ( ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SHAPE_DATA_QUALITY_INSPECTION_RESULT' ) IN 
        TYPEOF( q ) ) );
    IF SIZEOF( sdqir ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdqir ) BY 1;
      sdir := sdir + QUERY ( q <* bag_to_set( USEDIN( sdqir[i], 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_REPORT.' + 
          'INSPECTION_RESULT'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'  ) IN TYPEOF( q ) ) );
    END_REPEAT;
    IF SIZEOF( sdir ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdir ) BY 1;
      sdiri := sdiri + QUERY ( q <* sdir[i].inspected_instances | ( ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
          'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'  ) IN TYPEOF( q ) ) );
    END_REPEAT;
    IF SIZEOF( sdiri ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdiri ) BY 1;
      IF SIZEOF( sdiri[i].inspected_elements ) <> SIZEOF( type_list ) THEN
        RETURN( FALSE );
      END_IF;
      t_type_list := type_list;
      REPEAT j := 1 TO SIZEOF( sdiri[i].inspected_elements ) BY 1;
        REPEAT k := 1 TO SIZEOF( t_type_list ) BY 1;
          IF t_type_list[k] IN TYPEOF( sdiri[i].inspected_elements[j] ) THEN
            t_type_list := t_type_list - t_type_list[k];
            ESCAPE;
          END_IF;
        END_REPEAT;
      END_REPEAT;
      IF SIZEOF( t_type_list ) > 0 THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION validate_locations_of_extreme_value_type(
               ei : shape_data_quality_criterion;
               type_list : BAG OF STRING
           ) : LOGICAL;

    LOCAL
      sdqir       : SET OF shape_data_quality_inspection_result := [];
      sdir        : SET OF shape_data_quality_inspection_instance_report := [];
      sdei        : SET OF instance_report_item_with_extreme_instances := [];
      t_type_list : BAG OF STRING := [];
    END_LOCAL;
    sdqir := QUERY ( q <* bag_to_set( USEDIN( ei, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'DATA_QUALITY_INSPECTION_RESULT.'  + 'CRITERION_INSPECTED' ) ) | ( ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SHAPE_DATA_QUALITY_INSPECTION_RESULT' ) IN 
        TYPEOF( q ) ) );
    IF SIZEOF( sdqir ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdqir ) BY 1;
      sdir := sdir + QUERY ( q <* bag_to_set( USEDIN( sdqir[i], 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_REPORT.' + 
          'INSPECTION_RESULT'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'  ) IN TYPEOF( q ) ) );
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( sdir ) BY 1;
      sdei := sdei + QUERY ( q <* sdir[i].inspected_instances | ( ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES' ) 
          IN TYPEOF( q ) ) );
    END_REPEAT;
    IF SIZEOF( sdei ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    IF ( SIZEOF( type_list ) = 0 ) AND ( SIZEOF( sdei ) <> 0 ) THEN
      RETURN( FALSE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdei ) BY 1;
      REPEAT j := 1 TO SIZEOF( sdei[i].extreme_instances ) BY 1;
        IF SIZEOF( sdei[i].extreme_instances[j].locations_of_extreme_value ) <> SIZEOF( type_list ) THEN
          RETURN( FALSE );
        END_IF;
        t_type_list := type_list;
        REPEAT k := 1 TO SIZEOF( sdei[i].extreme_instances[j].locations_of_extreme_value ) BY 1;
          REPEAT l := 1 TO SIZEOF( t_type_list ) BY 1;
            IF t_type_list[l] IN TYPEOF( sdei[i].extreme_instances[j].locations_of_extreme_value[k] ) THEN
              t_type_list := t_type_list - t_type_list[l];
              ESCAPE;
            END_IF;
          END_REPEAT;
        END_REPEAT;
        IF SIZEOF( t_type_list ) > 0 THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION validate_measured_data_type(
               ei : shape_data_quality_criterion;
               type_string : STRING
           ) : LOGICAL;

    LOCAL
      sdqir : SET OF shape_data_quality_inspection_result := [];
      sdcr  : SET OF shape_data_quality_inspection_criterion_report := [];
      sdir  : SET OF shape_data_quality_inspection_instance_report := [];
      sdii  : SET OF shape_data_quality_inspection_instance_report_item := [];
      sdei  : BAG OF instance_report_item_with_extreme_instances := [];
    END_LOCAL;
    sdqir := QUERY ( q <* bag_to_set( USEDIN( ei, 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
        'DATA_QUALITY_INSPECTION_RESULT.'  + 'CRITERION_INSPECTED' ) ) | ( ( 
        'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'SHAPE_DATA_QUALITY_INSPECTION_RESULT' ) IN 
        TYPEOF( q ) ) );
    IF SIZEOF( sdqir ) = 0 THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdqir ) BY 1;
      sdcr := sdcr + QUERY ( q <* bag_to_set( USEDIN( sdqir[i], 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_REPORT.' + 
          'INSPECTION_RESULT'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'SHAPE_DATA_QUALITY_INSPECTION_CRITERION_REPORT'  ) IN TYPEOF( q ) ) );
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( sdqir ) BY 1;
      sdir := sdir + QUERY ( q <* bag_to_set( USEDIN( sdqir[i], 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'DATA_QUALITY_INSPECTION_REPORT.' + 
          'INSPECTION_RESULT'  ) ) | ( ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 
          'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT'  ) IN TYPEOF( q ) ) );
    END_REPEAT;
    IF ( SIZEOF( sdcr ) = 0 ) AND ( SIZEOF( sdir ) = 0 ) THEN
      RETURN( TRUE );
    END_IF;
    REPEAT i := 1 TO SIZEOF( sdir ) BY 1;
      sdii := sdii + QUERY ( q <* sdir[i].inspected_instances | ( ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 
          'SHAPE_DATA_QUALITY_INSPECTION_INSTANCE_REPORT_ITEM'  ) IN TYPEOF( q ) ) );
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( sdir ) BY 1;
      sdei := sdei + QUERY ( q <* sdir[i].inspected_instances | ( ( 
          'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.'  + 'INSTANCE_REPORT_ITEM_WITH_EXTREME_INSTANCES' ) 
          IN TYPEOF( q ) ) );
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( sdcr ) BY 1;
      IF NOT ( type_string IN TYPEOF( sdcr[i].representative_measured_value ) ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( sdii ) BY 1;
      IF NOT ( type_string IN TYPEOF( sdii[i].measured_value ) ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF( sdei ) BY 1;
      REPEAT j := 1 TO SIZEOF( sdei[i].extreme_instances ) BY 1;
        IF NOT ( type_string IN TYPEOF( sdei[i].extreme_instances[j].measured_value ) ) THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION;

  FUNCTION value_limit_type(
               iv : shape_data_quality_value_limit_type_select
           ) : SET OF STRING;

    LOCAL
      retval : SET OF STRING := [];
    END_LOCAL;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_VALUE_RANGE' ) IN TYPEOF( iv )
        THEN
      retval := TYPEOF( iv\shape_data_quality_value_range.upper_limit\value_with_unit.value_component );
    END_IF;
    IF ( 'AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_ARM_LF.' + 'SHAPE_DATA_QUALITY_VALUE_LIMIT' ) IN TYPEOF( iv )
        THEN
      retval := TYPEOF( iv\value_with_unit.value_component );
    END_IF;
    RETURN( retval );

  END_FUNCTION;

  FUNCTION ypr_index(
               ypr : ypr_enumeration
           ) : INTEGER;
    CASE ypr OF
      yaw  :         RETURN( 1 );
      pitch :         RETURN( 2 );
      roll :         RETURN( 3 );
      END_CASE;
    RETURN( ? );

  END_FUNCTION;

END_SCHEMA;
