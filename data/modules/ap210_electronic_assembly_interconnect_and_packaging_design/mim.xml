<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:55:26" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="ap210_electronic_assembly_interconnect_and_packaging_design_mim schema_instance"/>
   <schema name="AP210_ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN_MIM">
      <interface kind="use" schema="AP210_DEVICE_FUNCTIONAL_AND_PHYSICAL_CHARACTERIZATION_MIM"/>
      <interface kind="use" schema="AP210_INTERCONNECT_TECHNOLOGY_CONSTRAINTS_MIM"/>
      <interface kind="use" schema="AP210_ASSEMBLY_TECHNOLOGY_CONSTRAINTS_MIM"/>
      <interface kind="use" schema="AP210_ASSEMBLY_FUNCTIONAL_REQUIREMENTS_MIM"/>
      <interface kind="use" schema="AP210_ASSEMBLY_PHYSICAL_REQUIREMENTS_MIM"/>
      <interface kind="use" schema="AP210_INTERCONNECT_FUNCTIONAL_REQUIREMENTS_MIM"/>
      <interface kind="use" schema="AP210_INTERCONNECT_PHYSICAL_REQUIREMENTS_MIM"/>
      <interface kind="use" schema="AP210_ASSEMBLY_PHYSICAL_DESIGN_MIM"/>
      <interface kind="use" schema="AP210_INTERCONNECT_DESIGN_MIM"/>
      <interface kind="use" schema="AP210_INTERCONNECT_DESIGN_FOR_MICROWAVE_MIM"/>
      <interface kind="use" schema="AP210_PRODUCT_RULE_MIM"/>
      <interface kind="use" schema="AP210_FUNCTIONAL_DECOMPOSITION_MIM"/>
      <interface kind="use" schema="AP210_PACKAGE_FUNCTIONAL_AND_PHYSICAL_CHARACTERIZATION_MIM"/>
      <interface kind="use" schema="AP210_LAMINATE_ASSEMBLY_DESIGN_MIM"/>
      <interface kind="use" schema="AP210_CONNECTION_ZONE_BASED_MODEL_EXTRACTION_MIM"/>
      <interface kind="use" schema="AP210_FUNCTIONAL_SPECIFICATION_MIM"/>
      <interface kind="use" schema="AP210_PHYSICAL_UNIT_PHYSICAL_CHARACTERIZATION_MIM"/>
      <interface kind="use" schema="AP210_PACKAGED_PART_WHITE_BOX_MODEL_MIM"/>
      <interface kind="use" schema="AP210_PRINTED_PART_FUNCTIONAL_AND_PHYSICAL_CHARACTERIZATION_MIM"/>
      <interface kind="use" schema="AP210_ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENTS_MIM"/>
      <interface kind="use" schema="AP210_ASSEMBLY_PHYSICAL_INTERFACE_REQUIREMENTS_MIM"/>
      <interface kind="use" schema="AP210_ASSEMBLY_REQUIREMENT_ALLOCATION_MIM"/>
      <interface kind="use" schema="AP210_INTERCONNECT_REQUIREMENT_ALLOCATION_MIM"/>
      <interface kind="use" schema="AP210_FUNCTIONAL_REQUIREMENT_ALLOCATION_MIM"/>
      <interface kind="use" schema="AP210_DATUM_DIFFERENCE_BASED_MODEL_DEFINITION_MIM"/>
      <interface kind="use" schema="APPLICATION_CONTEXT_SCHEMA">
         <interfaced.item name="application_context"/>
         <interfaced.item name="application_protocol_definition"/>
      </interface>
      <interface kind="use" schema="GEOMETRY_SCHEMA">
         <interfaced.item name="offset_curve_2d"/>
      </interface>
      <type name="ap210_managed_design_object">
         <select extensible="YES" genericentity="YES" basedon="managed_design_object" selectitems="action alternate_product_relationship applied_approval_assignment applied_date_and_time_assignment applied_document_reference applied_group_assignment approval approval_status certification characterized_object composite_curve_segment configuration_effectivity configuration_item contract curve_style curve_style_font curve_style_font_and_scaling date dimension_related_tolerance_zone_element dimensional_characteristic_representation dimensional_size document document_usage_constraint externally_defined_item fill_area_style fill_area_style_colour geometric_tolerance geometric_tolerance_relationship group layer_connection_point material_designation measure_with_unit organization person person_and_organization plus_minus_tolerance pre_defined_item product product_concept product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship property_definition property_definition_relationship property_definition_representation representation representation_context representation_item representation_relationship runout_zone_orientation security_classification shape_aspect shape_aspect_relationship tolerance_value tolerance_zone_form versioned_action_request"/>
      </type>
      <subtype.constraint name="assembly_component_subtypes" entity="assembly_component" super.expression="(ONEOF (printed_component, packaged_component, routed_physical_component) ANDOR thermal_component ANDOR cable_component)"/>
      <subtype.constraint name="component_terminal_subtypes" entity="component_terminal" super.expression="ONEOF (assembly_module_macro_component_join_terminal, interconnect_module_macro_component_join_terminal)"/>
      <subtype.constraint name="model_parameter_subtypes" entity="model_parameter" super.expression="ONEOF (analytical_model_parameter, category_model_parameter, rule_function_domain_parameter, rule_function_range_parameter)"/>
      <subtype.constraint name="physical_unit_subtypes" entity="physical_unit" super.expression="ONEOF (bare_die, package, packaged_part, assembly_definition, interconnect_definition, reference_packaged_part_assembly_implementation, reference_packaged_part_interconnect_implementation)"/>
      <subtype.constraint name="shape_definition_3d_intersection_subtypes" entity="shape_definition_3d_intersection" super.expression="ONEOF (edge_segment_cross_section, pre_defined_parallel_datum_axis_symbol_3d_2d_relationship, pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship, pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship)"/>
      <rule name="application_protocol_definition_required" appliesto="application_context">
         <where label="wr1" expression=" sizeof ( query ( ac &lt;* application_context | ( sizeof ( query ( apd &lt;* usedin ( ac , 'application_context_schema.application_protocol_definition.application' ) | apd . application_interpreted_model_schema_name = 'electronic_assembly_interconnect_and_packaging_design' ) ) &gt; 0 ) ) ) &gt; 0 "/>
      </rule>
      <rule name="dependent_instantiable_tolerance_value" appliesto="tolerance_value">
         <where label="wr1" expression=" sizeof ( query ( tv &lt;* tolerance_value | not ( sizeof ( usedin ( tv , '' ) ) &gt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="ee_material_unique_constraint" appliesto="material_designation">
         <algorithm> local name_bag : bag of string := [ ] ; md_bag : bag of material_designation ; adr_bag : bag of applied_document_reference ; pass : boolean := true ; doc_bag : bag of ee_specification ; end_local ; repeat i := 1 to sizeof ( material_designation ) by 1 ; if exists ( material_designation [ i ] . name ) then if ( not ( material_designation [ i ] . name in name_bag ) ) then name_bag := name_bag + material_designation [ i ] . name ; end_if ; end_if ; end_repeat ; repeat i := 1 to sizeof ( name_bag ) by 1 ; if ( not pass ) then escape ; end_if ; md_bag := query ( md &lt;* material_designation | ( md \ material_designation . name = name_bag [ i ] ) ) ; doc_bag := [ ] ; repeat j := 1 to sizeof ( md_bag ) by 1 ; if ( not pass ) then escape ; end_if ; adr_bag := query ( adr &lt;* usedin ( md_bag [ j ] , ( 'ap210_product_data_management_mim.' + 'applied_document_reference.items' ) ) | ( ( 'ap210_product_data_management_mim.' + 'document' ) in typeof ( adr . assigned_document ) ) ) ; repeat k := 1 to sizeof ( adr_bag ) by 1 ; if exists ( adr_bag [ k ] . assigned_document ) then if ( adr_bag [ k ] . assigned_document in doc_bag ) then pass := false ; escape ; else doc_bag := doc_bag + adr_bag [ k ] . assigned_document ; end_if ; end_if ; end_repeat ; end_repeat ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <rule name="ee_product_definition_unique_constraint" appliesto="product_definition_with_associated_documents physical_unit functional_unit">
         <algorithm> local pdwad : bag of product_definition := query ( r &lt;* product_definition_with_associated_documents | ( true ) ) ; pu : bag of product_definition := query ( r &lt;* physical_unit | ( true ) ) ; fu : bag of product_definition := query ( r &lt;* functional_unit | ( true ) ) ; epd : bag of product_definition ; pdf_bag : bag of product_definition_formation ; pd_bag : bag of product_definition ; pass1 : boolean := true ; lcs_bag : bag of string ; pass2 : boolean := true ; id_bag : bag of string ; end_local ; epd := pdwad + pu + fu ; repeat i := 1 to sizeof ( epd ) by 1 ; if exists ( epd [ i ] . formation ) then if ( not ( epd [ i ] . formation in pdf_bag ) ) then pdf_bag := pdf_bag + epd [ i ] . formation ; end_if ; end_if ; end_repeat ; repeat i := 1 to sizeof ( pdf_bag ) by 1 ; if ( not ( pass1 or pass2 ) ) then escape ; end_if ; lcs_bag := [ ] ; id_bag := [ ] ; pd_bag := query ( pd &lt;* epd | ( pd . formation :=: pdf_bag [ i ] ) ) ; repeat j := 1 to sizeof ( pd_bag ) by 1 ; if ( not ( pass1 or pass2 ) ) then escape ; end_if ; if ( pass2 ) then if exists ( pd_bag [ j ] . id ) then if ( pd_bag [ j ] . id in id_bag ) then pass2 := false ; escape ; else id_bag := id_bag + pd_bag [ j ] . id ; end_if ; end_if ; end_if ; end_repeat ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass2 "/>
      </rule>
      <rule name="no_shape_for_make_from" appliesto="make_from_usage_option">
         <where label="wr1" expression=" sizeof ( query ( mfuo &lt;* make_from_usage_option | not ( sizeof ( query ( pd &lt;* usedin ( mfuo , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'property_definition.definition' ) | 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'product_definition_shape' in typeof ( pd ) ) ) = 0 ) ) ) = 0 "/>
      </rule>
      <rule name="origin_constraint" appliesto="placement">
         <algorithm> local origin_2d : set of axis2_placement_2d := query ( pl &lt;* placement | ( ( pl \ representation_item . name = 'origin' ) and ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.axis2_placement_2d' in typeof ( pl ) ) ) ) ; origin_3d : set of axis2_placement_3d := query ( pl &lt;* placement | ( ( pl \ representation_item . name = 'origin' ) and ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.axis2_placement_3d' in typeof ( pl ) ) ) ) ; pass : boolean := true ; end_local ; repeat i := 1 to sizeof ( origin_2d ) by 1 ; if ( not pass ) then escape ; end_if ; if ( not ( ( origin_2d [ i ] . location . coordinates [ 1 ] = 0.0 ) and ( origin_2d [ i ] . location . coordinates [ 2 ] = 0.0 ) and not exists ( origin_2d [ i ] . ref_direction ) ) ) then pass := false ; end_if ; end_repeat ; repeat i := 1 to sizeof ( origin_3d ) by 1 ; if ( not pass ) then escape ; end_if ; if not ( ( origin_3d [ i ] . location . coordinates [ 1 ] = 0.0 ) and ( origin_3d [ i ] . location . coordinates [ 2 ] = 0.0 ) and ( origin_3d [ i ] . location . coordinates [ 3 ] = 0.0 ) and ( not ( exists ( origin_3d [ i ] . ref_direction ) ) ) and ( not ( exists ( origin_3d [ i ] . axis ) ) ) ) then pass := false ; end_if ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <rule name="part_feature_unique_constraint" appliesto="composite_shape_aspect shape_aspect primary_orientation_feature tertiary_orientation_feature secondary_orientation_feature package_body part_tooling_feature thermal_feature part_mounting_feature package_terminal assembly_module_terminal bare_die_terminal interconnect_module_terminal minimally_defined_bare_die_terminal packaged_part_terminal package_body_surface">
         <algorithm> local csa : bag of shape_aspect := query ( r &lt;* composite_shape_aspect | ( r \ shape_aspect . description = 'part group feature' ) ) ; sa : bag of shape_aspect := query ( r &lt;* shape_aspect | ( r \ shape_aspect . description in [ 'part generic feature' , 'polarity indication feature' , 'interconnect module edge segment surface' , 'interconnect module cavity surface' , 'interconnect module cutout surface' , 'interconnect module edge surface' , 'interconnect module primary surface' , 'interconnect module secondary surface' , 'interconnect module surface feature' ] ) ) ; pof : bag of shape_aspect := query ( r &lt;* primary_orientation_feature | ( true ) ) ; sof : bag of shape_aspect := query ( r &lt;* secondary_orientation_feature | ( true ) ) ; tof : bag of shape_aspect := query ( r &lt;* tertiary_orientation_feature | ( true ) ) ; pb : bag of shape_aspect := query ( r &lt;* package_body | ( true ) ) ; ptf : bag of shape_aspect := query ( r &lt;* part_tooling_feature | ( true ) ) ; tf : bag of shape_aspect := query ( r &lt;* thermal_feature | ( true ) ) ; pmf : bag of shape_aspect := query ( r &lt;* part_mounting_feature | ( true ) ) ; pt : bag of shape_aspect := query ( r &lt;* package_terminal | ( true ) ) ; amt : bag of shape_aspect := query ( r &lt;* assembly_module_terminal | ( true ) ) ; bdt : bag of shape_aspect := query ( r &lt;* bare_die_terminal | ( true ) ) ; imt : bag of shape_aspect := query ( r &lt;* interconnect_module_terminal | ( true ) ) ; mdbdt : bag of shape_aspect := query ( r &lt;* minimally_defined_bare_die_terminal | ( true ) ) ; ppt : bag of shape_aspect := query ( r &lt;* packaged_part_terminal | ( true ) ) ; pbs : bag of shape_aspect := query ( r &lt;* package_body_surface | ( true ) ) ; pf : bag of shape_aspect := [ ] ; pu_bag : bag of physical_unit := [ ] ; sa_bag : bag of shape_aspect ; pass : boolean := true ; name_bag : bag of string ; end_local ; sa := csa + sa + pof + sof + tof + pb + ptf + tf + pmf + pt + amt + bdt + imt + mdbdt + ppt + pbs ; repeat i := 1 to sizeof ( sa ) by 1 ; if exists ( sa [ i ] ) then if ( not ( sa [ i ] in pf ) ) then pf := pf + sa [ i ] ; end_if ; end_if ; end_repeat ; repeat i := 1 to sizeof ( pf ) by 1 ; if exists ( pf [ i ] . of_shape . definition ) then if ( ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit' in typeof ( pf [ i ] . of_shape . definition ) ) and ( pf [ i ] . of_shape . definition . frame_of_reference . name = 'physical design usage' ) ) then if ( not ( pf [ i ] . of_shape . definition in pu_bag ) ) then pu_bag := pu_bag + pf [ i ] . of_shape . definition ; end_if ; end_if ; end_if ; end_repeat ; repeat i := 1 to sizeof ( pu_bag ) by 1 ; if ( not pass ) then escape ; end_if ; name_bag := [ ] ; sa_bag := query ( sa &lt;* pf | ( sa . of_shape . definition :=: pu_bag [ i ] ) ) ; repeat j := 1 to sizeof ( sa_bag ) by 1 ; if exists ( sa_bag [ j ] \ shape_aspect . name ) then if ( sa_bag [ j ] \ shape_aspect . name in name_bag ) then pass := false ; escape ; else name_bag := name_bag + sa_bag [ j ] \ shape_aspect . name ; end_if ; end_if ; end_repeat ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <rule name="restrict_manifold_surface_shape_representation" appliesto="manifold_surface_shape_representation">
         <where label="wr1" expression=" sizeof ( query ( mssr &lt;* manifold_surface_shape_representation | ( mssr \ representation . name in [ 'stratum feature non planar 2d shape' , 'open shell based surface' , 'design intent modification non planar 2d shape' , 'part template non planar 2d shape' ] ) and ( not ( sizeof ( query ( sbsm &lt;* mssr . items | ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'shell_based_surface_model' in typeof ( sbsm ) ) and ( sizeof ( query ( os &lt;* sbsm \ shell_based_surface_model . sbsm_boundary | 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'open_shell' in typeof ( os ) ) ) = 1 ) ) ) = 1 ) ) ) ) = 0 "/>
      </rule>
      <rule name="shape_representation_requires_origin" appliesto="shape_representation">
         <where label="wr1" expression=" sizeof ( query ( sr &lt;* shape_representation | not ( ( sizeof ( query ( it &lt;* sr \ representation . items | ( ( ( it \ representation_item . name = 'origin' ) or ( it \ representation_item . name = 'orientation' ) ) and ( ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'axis2_placement_2d' in typeof ( it ) ) or ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'axis2_placement_2d' in typeof ( it ) ) ) ) ) ) = 1 ) or ( sizeof ( query ( it &lt;* sr \ representation . items | ( ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'styled_item' in typeof ( it ) ) ) ) ) &gt;= 1 ) or ( sizeof ( query ( it &lt;* sr \ representation . items | ( ( ( it \ representation_item . name = 'origin' ) or ( it \ representation_item . name = 'orientation' ) ) and ( ( sr \ representation . name = 'zone shape' ) or ( sr . context_of_items \ representation_context . context_type = 'connection zone colour' ) ) ) ) ) = 0 ) ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_combination_shape_aspect" appliesto="shape_aspect">
         <where label="wr1" expression=" sizeof ( query ( sa &lt;* shape_aspect | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_bond_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_module_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'minimally_defined_bare_die_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_functional_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_component_interface_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'datum_reference_frame' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'derived_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'device_terminal_map' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'fabrication_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'functional_unit_terminal_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'group_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'interconnect_module_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'interface_mounted_join' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'join_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'land_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'layer' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'layer_connection_point' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'mounting_restriction_area' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'package_body' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'package_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'packaged_connector_terminal_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'packaged_part_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'part_connected_terminals_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'part_template_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'passage_technology' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_connectivity_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_connectivity_element' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_network' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'positional_boundary' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'positional_boundary_member' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_cross_section_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_template_connected_terminals_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'sequential_laminate_passage_based_fabrication_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'shape_modification' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_concept_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_feature' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_surface' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'tolerance_zone' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'tolerance_zone_boundary' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'viewing_plane' ] * typeof ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="wr2" expression=" sizeof ( query ( sa &lt;* shape_aspect | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_bond_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_module_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'minimally_defined_bare_die_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_functional_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_component_interface_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'datum_reference_frame' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'device_terminal_map' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'fabrication_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'functional_unit_terminal_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'group_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'interconnect_module_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'interface_mounted_join' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'join_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'land_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'layer' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'layer_connection_point' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'mounting_restriction_area' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'package_body' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'package_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'packaged_connector_terminal_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'packaged_part_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'part_connected_terminals_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'part_template_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'passage_technology' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_connectivity_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_connectivity_element' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_network' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit_datum' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'positional_boundary' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'positional_boundary_member' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_cross_section_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_template_connected_terminals_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'sequential_laminate_passage_based_fabrication_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'shape_modification' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_concept_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_feature' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_surface' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'tolerance_zone' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'tolerance_zone_boundary' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'viewing_plane' ] * typeof ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="wr3" expression=" sizeof ( query ( sa &lt;* shape_aspect | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_bond_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_functional_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_component_interface_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'datum_reference_frame' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'derived_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'device_terminal_map' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'fabrication_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'functional_unit_terminal_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'group_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'interface_mounted_join' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'join_shape_aspect' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'land_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'layer' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'layer_connection_point' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'mounting_restriction_area' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'package_body' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'part_connected_terminals_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'part_template_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'passage_technology' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_connectivity_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_connectivity_element' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_network' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit_datum_feature' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit_datum_target' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'positional_boundary' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'positional_boundary_member' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_cross_section_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_template_connected_terminals_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'printed_part_template_terminal' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'sequential_laminate_passage_based_fabrication_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'shape_modification' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_concept_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_feature' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_surface' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'tolerance_zone' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'tolerance_zone_boundary' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'viewing_plane' ] * typeof ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="wr4" expression=" sizeof ( query ( sa &lt;* shape_aspect | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit_datum_feature' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit_datum_target' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit_datum' ] * typeof ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_mapped_item" appliesto="mapped_item">
         <where label="wr1" expression=" sizeof ( query ( mi &lt;* mapped_item | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'annotation_text' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'annotation_symbol' ] * typeof ( mi ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_product_definition" appliesto="product_definition">
         <where label="wr1" expression=" sizeof ( query ( pd &lt;* product_definition | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'bus_structural_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_functional_unit' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'functional_unit' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'network_node_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum' ] * typeof ( pd ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_property_definition" appliesto="property_definition">
         <where label="wr1" expression=" sizeof ( query ( pd &lt;* property_definition | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'dimensional_size_property' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'geometric_tolerance_group' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'material_property' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_unit_geometric_tolerance' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'product_definition_shape' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'requirements_property' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'signal' ] * typeof ( pd ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_representation" appliesto="representation">
         <where label="wr1" expression=" sizeof ( query ( rep &lt;* representation | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'analytical_model_port' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'component_location' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'rule_function_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'structured_text_representation_item' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'text_string_representation' ] * typeof ( rep ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_representation_context" appliesto="representation_context">
         <algorithm> local pass : boolean := true ; end_local ; repeat i := 1 to sizeof ( representation_context ) by 1 ; pass := ( not ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'structured_text_representation_context' in typeof ( representation_context [ i ] ) ) or ( sizeof ( typeof ( representation_context [ i ] ) ) &lt;= 2 ) ) and ( not ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'geometric_representation_context' in typeof ( representation_context [ i ] ) ) or ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'geometric_representation_context' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'parametric_representation_context' ] * typeof ( representation_context [ i ] ) ) &lt;= 2 ) ) and ( not ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'parametric_representation_context' in typeof ( representation_context [ i ] ) ) or ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'geometric_representation_context' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'parametric_representation_context' ] * typeof ( representation_context [ i ] ) ) &lt;= 2 ) ) ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
      <rule name="subtype_exclusive_shape_aspect_relationship" appliesto="shape_aspect_relationship">
         <where label="wr1" expression=" sizeof ( query ( sar &lt;* shape_aspect_relationship | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'assembly_joint' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'device_terminal_map' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'dimensional_location' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'interface_mounted_join' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'make_from_connectivity_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'make_from_feature_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'packaged_connector_terminal_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'physical_connectivity_element' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'shape_aspect_deriving_relationship' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'stratum_concept_relationship' ] * typeof ( sar ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_action" appliesto="action">
         <where label="wr1" expression=" sizeof ( query ( act &lt;* action | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'directed_action' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'executed_action' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'rule_action' ] * typeof ( act ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_externally_defined_item" appliesto="externally_defined_item">
         <where label="wr1" expression=" sizeof ( query ( edi &lt;* externally_defined_item | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'bond_category' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'externally_defined_curve_font' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'externally_defined_hatch_style' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'externally_defined_representation_item' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'externally_defined_symbol' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'externally_defined_text_font' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'externally_defined_tile' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'externally_defined_tile_style' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'part_template_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'rule_definition' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'signal_category' ] * typeof ( edi ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_pre_defined_item" appliesto="pre_defined_item">
         <where label="wr1" expression=" sizeof ( query ( pdi &lt;* pre_defined_item | not ( sizeof ( [ 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'pre_defined_text_font' , 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'pre_defined_curve_font' ] * typeof ( pdi ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_text_literal" appliesto="text_literal">
         <where label="wr1" expression=" sizeof ( query ( tl &lt;* text_literal | not ( ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'text_literal_with_extent' in typeof ( tl ) ) or ( 'ap210_electronic_assembly_interconnect_and_packaging_design_mim.' + 'text_literal_with_associated_curves' in typeof ( tl ) ) ) ) ) = 0 "/>
      </rule>
      <function name="valid_2d_wireframe_edge_curve">
         <parameter name="crv">
            <typename name="curve"/>
         </parameter>
         <parameter name="schma">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> if sizeof ( [ schma + '.line' , schma + '.b_spline_curve' , schma + '.circle' , schma + '.hyperbola' , schma + '.ellipse' , schma + '.parabola' , schma + '.polyline' ] * typeof ( crv ) ) = 1 then return ( true ) ; else if ( schma + '.curve_replica' ) in typeof ( crv ) then return ( valid_2d_wireframe_edge_curve ( crv \ curve_replica . parent_curve , schma ) ) ; else if ( schma + '.offset_curve_2d' ) in typeof ( crv ) then return ( valid_2d_wireframe_edge_curve ( crv \ offset_curve_2d . basis_curve , schma ) ) ; end_if ; end_if ; end_if ; return ( false ) ; </algorithm>
      </function>
   </schema>
</express>
