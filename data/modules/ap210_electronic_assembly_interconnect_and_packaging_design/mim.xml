<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2004-12-24T15:04:52" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="ap210_electronic_assembly_interconnect_and_packaging_design_mim schema_instance"/>
   <schema name="Ap210_electronic_assembly_interconnect_and_packaging_design_mim">
      <interface kind="use" schema="Ap210_device_functional_and_physical_characterization_mim"/>
      <interface kind="use" schema="Ap210_interconnect_technology_constraints_mim"/>
      <interface kind="use" schema="Ap210_assembly_technology_constraints_mim"/>
      <interface kind="use" schema="Ap210_assembly_functional_requirements_mim"/>
      <interface kind="use" schema="Ap210_assembly_physical_requirements_mim"/>
      <interface kind="use" schema="Ap210_interconnect_functional_requirements_mim"/>
      <interface kind="use" schema="Ap210_interconnect_physical_requirements_mim"/>
      <interface kind="use" schema="Ap210_assembly_physical_design_mim"/>
      <interface kind="use" schema="Ap210_interconnect_design_mim"/>
      <interface kind="use" schema="Ap210_interconnect_design_for_microwave_mim"/>
      <interface kind="use" schema="Ap210_product_rule_mim"/>
      <interface kind="use" schema="Ap210_functional_decomposition_mim"/>
      <interface kind="use" schema="Ap210_geometric_dimensioning_and_tolerancing_mim"/>
      <interface kind="use" schema="Ap210_package_functional_and_physical_characterization_mim"/>
      <interface kind="use" schema="Ap210_laminate_assembly_design_mim"/>
      <interface kind="use" schema="Ap210_connection_zone_based_model_extraction_mim"/>
      <interface kind="use" schema="Ap210_functional_specification_mim"/>
      <interface kind="use" schema="Ap210_physical_unit_physical_characterization_mim"/>
      <interface kind="use" schema="Ap210_packaged_part_white_box_model_mim"/>
      <interface kind="use" schema="Ap210_printed_part_functional_and_physical_characterization_mim"/>
      <interface kind="use" schema="Ap210_assembly_functional_interface_requirements_mim"/>
      <interface kind="use" schema="Ap210_assembly_physical_interface_requirements_mim"/>
      <interface kind="use" schema="Ap210_assembly_requirement_allocation_mim"/>
      <interface kind="use" schema="Ap210_interconnect_requirement_allocation_mim"/>
      <interface kind="use" schema="Ap210_functional_requirement_allocation_mim"/>
      <interface kind="use" schema="Datum_difference_based_model_mim"/>
      <interface kind="use" schema="contract_schema"/>
      <type name="ap210_approval_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_approval_item" selectitems="product_definition_formation_with_specified_source requirement_allocation_group"/>
      </type>
      <type name="ap210_certification_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_certification_item" selectitems="product_definition_formation_with_specified_source"/>
      </type>
      <type name="ap210_classification_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_classification_item" selectitems="requirements_property signal stratum"/>
      </type>
      <type name="ap210_date_and_time_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_date_and_time_item" selectitems="rule_action"/>
      </type>
      <type name="ap210_document_reference_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_document_reference_item" selectitems="component_definition component_feature component_interface_terminal component_shape_aspect component_terminal functional_unit_terminal_definition inter_stratum_feature interconnect_module_component_surface_feature layer laminate_component_interface_terminal package_terminal part_template_definition physical_connectivity_definition physical_connectivity_element requirements_property rule_definition signal stratum stratum_feature"/>
      </type>
      <type name="ap210_groupable_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_groupable_item" selectitems="printed_part_template_terminal"/>
      </type>
      <type name="ap210_managed_design_object">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_managed_design_object" selectitems="action alternate_product_relationship applied_approval_assignment applied_date_and_time_assignment applied_document_reference applied_group_assignment approval approval_status certification characterized_object composite_curve_segment configuration_effectivity configuration_item contract curve_style curve_style_font curve_style_font_and_scaling date dimension_related_tolerance_zone_element dimensional_characteristic_representation dimensional_size document document_usage_constraint externally_defined_item fill_area_style fill_area_style_colour geometric_tolerance geometric_tolerance_relationship group layer_connection_point material_designation measure_with_unit organization person person_and_organization plus_minus_tolerance pre_defined_item product product_concept product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship property_definition property_definition_relationship property_definition_representation representation representation_context representation_item representation_relationship runout_zone_orientation security_classification shape_aspect shape_aspect_relationship tolerance_value tolerance_zone_form versioned_action_request"/>
      </type>
      <type name="ap210_organization_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_organization_item" selectitems="product_definition_formation_with_specified_source rule_definition"/>
      </type>
      <type name="ap210_person_and_organization_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_person_and_organization_item" selectitems="rule_action"/>
      </type>
      <type name="ap210_requirement_assigned_item">
         <select extensible="YES" genericentity="YES" basedon="_SELECT_requirement_assigned_item" selectitems="physical_connectivity_element requirements_property"/>
      </type>
      <type name="group_assigned_item">
         <select selectitems="assembly_bond_definition design_object component_definition component_feature component_interface_terminal component_shape_aspect component_terminal compound_representation_item configuration_item inter_stratum_feature laminate_component_interface_terminal printed_part_template_terminal product product_definition_formation property_definition_representation representation representation_item requirements_property rule_definition shape_aspect shape_aspect_relationship stratum stratum_feature stratum_surface"/>
      </type>
      <entity name="material_functional_category" supertypes="group">
         <where label="WR1" expression=" SELF \ group . name IN [ 'bonding agent' , 'potting compound' , 'marking material' ] "/>
      </entity>
      <entity name="named_unit_variable" supertypes="named_unit variable_semantics">
         <inverse name="associated_variable_environment" entity="environment" attribute="semantics"/>
      </entity>
      <entity name="owner_assignment" supertypes="person_and_organization_assignment">
         <explicit name="items">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="managed_design_object"/>
         </explicit>
      </entity>
      <subtype.constraint name="component_definition_subtypes" entity="component_definition" super.expression="(ONEOF (printed_component, packaged_component, routed_physical_component) ANDOR thermal_component ANDOR cable_component)"/>
      <subtype.constraint name="component_terminal_subtypes" entity="component_terminal" super.expression="ONEOF (assembly_module_macro_component_join_terminal, interconnect_module_macro_component_join_terminal)"/>
      <subtype.constraint name="model_parameter_subtypes" entity="model_parameter" super.expression="ONEOF (analytical_model_parameter, category_model_parameter, rule_function_domain_parameter, rule_function_range_parameter)"/>
      <subtype.constraint name="physical_unit_subtypes" entity="physical_unit" super.expression="ONEOF (bare_die, package, packaged_part, assembly_definition, interconnect_definition, reference_packaged_part_assembly_implementation, reference_packaged_part_interconnect_implementation)"/>
      <subtype.constraint name="shape_definition_3d_intersection_subtypes" entity="shape_definition_3d_intersection" super.expression="ONEOF (edge_segment_cross_section, pre_defined_parallel_datum_axis_symbol_3d_2d_relationship, pre_defined_perpendicular_datum_axis_symbol_3d_2d_relationship, pre_defined_perpendicular_datum_plane_symbol_3d_2d_relationship)"/>
      <rule name="application_context_requires_ap_definition" appliesto="application_context application_protocol_definition">
         <where label="WR1" expression=" SIZEOF ( QUERY ( ac &lt;* application_context | NOT ( SIZEOF ( QUERY ( apd &lt;* application_protocol_definition | ( ac :=: apd \ application_protocol_definition . application ) AND ( apd \ application_protocol_definition . application_interpreted_model_schema_name = 'electronic_assembly_interconnect_and_packaging_design' ) ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="dependent_instantiable_tolerance_value" appliesto="tolerance_value">
         <where label="WR1" expression=" SIZEOF ( QUERY ( tv &lt;* tolerance_value | NOT ( SIZEOF ( USEDIN ( tv , '' ) ) &gt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="ee_product_definition_unique_constraint" appliesto="product_definition_with_associated_documents physical_unit functional_unit">
         <algorithm> LOCAL pdwad : BAG OF product_definition := QUERY ( r &lt;* product_definition_with_associated_documents | ( TRUE ) ) ; pu : BAG OF product_definition := QUERY ( r &lt;* physical_unit | ( TRUE ) ) ; fu : BAG OF product_definition := QUERY ( r &lt;* functional_unit | ( TRUE ) ) ; epd : BAG OF product_definition ; pdf_bag : BAG OF product_definition_formation ; pd_bag : BAG OF product_definition ; pass1 : BOOLEAN := TRUE ; lcs_bag : BAG OF STRING ; pass2 : BOOLEAN := TRUE ; id_bag : BAG OF STRING ; END_LOCAL ; epd := pdwad + pu + fu ; REPEAT i := 1 to SIZEOF ( epd ) by 1 ; IF EXISTS ( epd [ i ] . formation ) THEN IF ( NOT ( epd [ i ] . formation IN pdf_bag ) ) THEN pdf_bag := pdf_bag + epd [ i ] . formation ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( pdf_bag ) by 1 ; IF ( NOT ( pass1 OR pass2 ) ) THEN ESCAPE ; END_IF ; lcs_bag := [ ] ; id_bag := [ ] ; pd_bag := QUERY ( pd &lt;* epd | ( pd . formation :=: pdf_bag [ i ] ) ) ; REPEAT j := 1 to SIZEOF ( pd_bag ) by 1 ; IF ( NOT ( pass1 OR pass2 ) ) THEN ESCAPE ; END_IF ; IF ( pass2 ) THEN IF EXISTS ( pd_bag [ j ] . id ) THEN IF ( pd_bag [ j ] . id IN id_bag ) THEN pass2 := FALSE ; ESCAPE ; ELSE id_bag := id_bag + pd_bag [ j ] . id ; END_IF ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass2 "/>
      </rule>
      <rule name="no_shape_for_make_from" appliesto="make_from_usage_option">
         <where label="WR1" expression=" SIZEOF ( QUERY ( mfuo &lt;* make_from_usage_option | NOT ( SIZEOF ( QUERY ( pd &lt;* USEDIN ( mfuo , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PROPERTY_DEFINITION.DEFINITION' ) | 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRODUCT_DEFINITION_SHAPE' IN TYPEOF ( pd ) ) ) = 0 ) ) ) = 0 "/>
      </rule>
      <rule name="origin_constraint" appliesto="placement">
         <algorithm> LOCAL origin_2d : SET OF axis2_placement_2d := QUERY ( pl &lt;* placement | ( ( pl \ representation_item . name = 'origin' ) AND ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.AXIS2_PLACEMENT_2D' IN TYPEOF ( pl ) ) ) ) ; origin_3d : SET OF axis2_placement_3d := QUERY ( pl &lt;* placement | ( ( pl \ representation_item . name = 'origin' ) AND ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.AXIS2_PLACEMENT_3D' IN TYPEOF ( pl ) ) ) ) ; pass : BOOLEAN := TRUE ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( origin_2d ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; IF ( NOT ( ( origin_2d [ i ] . location . coordinates [ 1 ] = 0.0 ) AND ( origin_2d [ i ] . location . coordinates [ 2 ] = 0.0 ) AND NOT EXISTS ( origin_2d [ i ] . ref_direction ) ) ) THEN pass := FALSE ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( origin_3d ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; IF NOT ( ( origin_3d [ i ] . location . coordinates [ 1 ] = 0.0 ) AND ( origin_3d [ i ] . location . coordinates [ 2 ] = 0.0 ) AND ( origin_3d [ i ] . location . coordinates [ 3 ] = 0.0 ) AND ( NOT ( EXISTS ( origin_3d [ i ] . ref_direction ) ) ) AND ( NOT ( EXISTS ( origin_3d [ i ] . axis ) ) ) ) THEN pass := FALSE ; END_IF ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
      <rule name="part_feature_unique_constraint" appliesto="composite_shape_aspect shape_aspect primary_orientation_feature tertiary_orientation_feature secondary_orientation_feature package_body part_tooling_feature thermal_feature part_mounting_feature package_terminal assembly_module_terminal bare_die_terminal interconnect_module_terminal minimally_defined_bare_die_terminal packaged_part_terminal package_body_surface">
         <algorithm> LOCAL csa : BAG OF shape_aspect := QUERY ( r &lt;* composite_shape_aspect | ( r \ shape_aspect . description = 'part group feature' ) ) ; sa : BAG OF shape_aspect := QUERY ( r &lt;* shape_aspect | ( r \ shape_aspect . description IN [ 'part generic feature' , 'polarity indication feature' , 'interconnect module edge segment surface' , 'interconnect module cavity surface' , 'interconnect module cutout surface' , 'interconnect module edge surface' , 'interconnect module primary surface' , 'interconnect module secondary surface' , 'interconnect module surface feature' ] ) ) ; pof : BAG OF shape_aspect := QUERY ( r &lt;* primary_orientation_feature | ( TRUE ) ) ; sof : BAG OF shape_aspect := QUERY ( r &lt;* secondary_orientation_feature | ( TRUE ) ) ; tof : BAG OF shape_aspect := QUERY ( r &lt;* tertiary_orientation_feature | ( TRUE ) ) ; pb : BAG OF shape_aspect := QUERY ( r &lt;* package_body | ( TRUE ) ) ; ptf : BAG OF shape_aspect := QUERY ( r &lt;* part_tooling_feature | ( TRUE ) ) ; tf : BAG OF shape_aspect := QUERY ( r &lt;* thermal_feature | ( TRUE ) ) ; pmf : BAG OF shape_aspect := QUERY ( r &lt;* part_mounting_feature | ( TRUE ) ) ; pt : BAG OF shape_aspect := QUERY ( r &lt;* package_terminal | ( TRUE ) ) ; amt : BAG OF shape_aspect := QUERY ( r &lt;* assembly_module_terminal | ( TRUE ) ) ; bdt : BAG OF shape_aspect := QUERY ( r &lt;* bare_die_terminal | ( TRUE ) ) ; imt : BAG OF shape_aspect := QUERY ( r &lt;* interconnect_module_terminal | ( TRUE ) ) ; mdbdt : BAG OF shape_aspect := QUERY ( r &lt;* minimally_defined_bare_die_terminal | ( TRUE ) ) ; ppt : BAG OF shape_aspect := QUERY ( r &lt;* packaged_part_terminal | ( TRUE ) ) ; pbs : BAG OF shape_aspect := QUERY ( r &lt;* package_body_surface | ( TRUE ) ) ; pf : BAG OF shape_aspect := [ ] ; pu_bag : BAG OF physical_unit := [ ] ; sa_bag : BAG OF shape_aspect ; pass : BOOLEAN := TRUE ; name_bag : BAG OF STRING ; END_LOCAL ; sa := csa + sa + pof + sof + tof + pb + ptf + tf + pmf + pt + amt + bdt + imt + mdbdt + ppt + pbs ; REPEAT i := 1 to SIZEOF ( sa ) by 1 ; IF EXISTS ( sa [ i ] ) THEN IF ( NOT ( sa [ i ] IN pf ) ) THEN pf := pf + sa [ i ] ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( pf ) by 1 ; IF EXISTS ( pf [ i ] . of_shape . definition ) THEN IF ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT' IN TYPEOF ( pf [ i ] . of_shape . definition ) ) AND ( pf [ i ] . of_shape . definition . frame_of_reference . name = 'physical design usage' ) ) THEN IF ( NOT ( pf [ i ] . of_shape . definition IN pu_bag ) ) THEN pu_bag := pu_bag + pf [ i ] . of_shape . definition ; END_IF ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( pu_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; name_bag := [ ] ; sa_bag := QUERY ( sa &lt;* pf | ( sa . of_shape . definition :=: pu_bag [ i ] ) ) ; REPEAT j := 1 to SIZEOF ( sa_bag ) by 1 ; IF EXISTS ( sa_bag [ j ] \ shape_aspect . name ) THEN IF ( sa_bag [ j ] \ shape_aspect . name IN name_bag ) THEN pass := FALSE ; ESCAPE ; ELSE name_bag := name_bag + sa_bag [ j ] \ shape_aspect . name ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
      <rule name="restrict_manifold_surface_shape_representation" appliesto="manifold_surface_shape_representation">
         <where label="WR1" expression=" SIZEOF ( QUERY ( mssr &lt;* manifold_surface_shape_representation | ( mssr \ representation . name IN [ 'stratum feature non planar 2d shape' , 'open shell based surface' , 'design intent modification non planar 2d shape' , 'part template non planar 2d shape' ] ) AND ( NOT ( SIZEOF ( QUERY ( sbsm &lt;* mssr . items | ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SHELL_BASED_SURFACE_MODEL' IN TYPEOF ( sbsm ) ) AND ( SIZEOF ( QUERY ( os &lt;* sbsm \ shell_based_surface_model . sbsm_boundary | 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'OPEN_SHELL' IN TYPEOF ( os ) ) ) = 1 ) ) ) = 1 ) ) ) ) = 0 "/>
      </rule>
      <rule name="shape_representation_requires_origin" appliesto="shape_representation">
         <where label="WR1" expression=" SIZEOF ( QUERY ( sr &lt;* shape_representation | NOT ( ( SIZEOF ( QUERY ( it &lt;* sr \ representation . items | ( ( ( it \ representation_item . name = 'origin' ) or ( it \ representation_item . name = 'orientation' ) ) and ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'AXIS2_PLACEMENT_2D' in TYPEOF ( it ) ) OR ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'AXIS2_PLACEMENT_2D' in TYPEOF ( it ) ) ) ) ) ) = 1 ) OR ( SIZEOF ( QUERY ( it &lt;* sr \ representation . items | ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STYLED_ITEM' in TYPEOF ( it ) ) ) ) ) &gt;= 1 ) OR ( SIZEOF ( QUERY ( it &lt;* sr \ representation . items | ( ( ( it \ representation_item . name = 'origin' ) or ( it \ representation_item . name = 'orientation' ) ) and ( ( sr \ representation . name = 'zone shape' ) or ( sr . context_of_items \ representation_context . context_type = 'connection zone colour' ) ) ) ) ) = 0 ) ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_combination_shape_aspect" appliesto="shape_aspect">
         <where label="WR1" expression=" SIZEOF ( QUERY ( sa &lt;* shape_aspect | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_BOND_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_MODULE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MINIMALLY_DEFINED_BARE_DIE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_FUNCTIONAL_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_INTERFACE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DATUM_REFERENCE_FRAME' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DERIVED_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DEVICE_TERMINAL_MAP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'FABRICATION_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'GROUP_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'INTERCONNECT_MODULE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'INTERFACE_MOUNTED_JOIN' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'JOIN_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAND_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAYER' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAYER_CONNECTION_POINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MOUNTING_RESTRICTION_AREA' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGE_BODY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGED_PART_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PART_CONNECTED_TERMINALS_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PART_TEMPLATE_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PASSAGE_TECHNOLOGY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_ELEMENT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_NETWORK' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'POSITIONAL_BOUNDARY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'POSITIONAL_BOUNDARY_MEMBER' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_CROSS_SECTION_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SEQUENTIAL_LAMINATE_PASSAGE_BASED_FABRICATION_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SHAPE_MODIFICATION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_CONCEPT_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_FEATURE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_SURFACE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TOLERANCE_ZONE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TOLERANCE_ZONE_BOUNDARY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'VIEWING_PLANE' ] * TYPEOF ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="WR2" expression=" SIZEOF ( QUERY ( sa &lt;* shape_aspect | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_BOND_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_MODULE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MINIMALLY_DEFINED_BARE_DIE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_FUNCTIONAL_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_INTERFACE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DATUM_REFERENCE_FRAME' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DEVICE_TERMINAL_MAP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'FABRICATION_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'GROUP_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'INTERCONNECT_MODULE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'INTERFACE_MOUNTED_JOIN' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'JOIN_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAND_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAYER' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAYER_CONNECTION_POINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MOUNTING_RESTRICTION_AREA' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGE_BODY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGED_PART_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PART_CONNECTED_TERMINALS_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PART_TEMPLATE_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PASSAGE_TECHNOLOGY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_ELEMENT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_NETWORK' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT_DATUM' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'POSITIONAL_BOUNDARY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'POSITIONAL_BOUNDARY_MEMBER' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_CROSS_SECTION_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SEQUENTIAL_LAMINATE_PASSAGE_BASED_FABRICATION_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SHAPE_MODIFICATION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_CONCEPT_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_FEATURE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_SURFACE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TOLERANCE_ZONE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TOLERANCE_ZONE_BOUNDARY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'VIEWING_PLANE' ] * TYPEOF ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="WR3" expression=" SIZEOF ( QUERY ( sa &lt;* shape_aspect | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_BOND_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_FUNCTIONAL_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_INTERFACE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DATUM_REFERENCE_FRAME' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DERIVED_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DEVICE_TERMINAL_MAP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'FABRICATION_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'FUNCTIONAL_UNIT_TERMINAL_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'GROUP_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'INTERFACE_MOUNTED_JOIN' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'JOIN_SHAPE_ASPECT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAND_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAYER' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'LAYER_CONNECTION_POINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MOUNTING_RESTRICTION_AREA' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGE_BODY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PART_CONNECTED_TERMINALS_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PART_TEMPLATE_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PASSAGE_TECHNOLOGY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_ELEMENT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_NETWORK' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT_DATUM_FEATURE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT_DATUM_TARGET' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'POSITIONAL_BOUNDARY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'POSITIONAL_BOUNDARY_MEMBER' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_CROSS_SECTION_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_TEMPLATE_CONNECTED_TERMINALS_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRINTED_PART_TEMPLATE_TERMINAL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SEQUENTIAL_LAMINATE_PASSAGE_BASED_FABRICATION_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SHAPE_MODIFICATION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_CONCEPT_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_FEATURE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_SURFACE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TOLERANCE_ZONE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TOLERANCE_ZONE_BOUNDARY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'VIEWING_PLANE' ] * TYPEOF ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="WR4" expression=" SIZEOF ( QUERY ( sa &lt;* shape_aspect | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT_DATUM_FEATURE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT_DATUM_TARGET' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT_DATUM' ] * TYPEOF ( sa ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_mapped_item" appliesto="mapped_item">
         <where label="WR1" expression=" SIZEOF ( QUERY ( mi &lt;* mapped_item | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ANNOTATION_TEXT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ANNOTATION_SYMBOL' ] * TYPEOF ( mi ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_product_definition" appliesto="product_definition">
         <where label="WR1" expression=" SIZEOF ( QUERY ( pd &lt;* product_definition | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'BUS_STRUCTURAL_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_FUNCTIONAL_UNIT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'FUNCTIONAL_UNIT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'NETWORK_NODE_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM' ] * TYPEOF ( pd ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_property_definition" appliesto="property_definition">
         <where label="WR1" expression=" SIZEOF ( QUERY ( pd &lt;* property_definition | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DIMENSIONAL_SIZE_PROPERTY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'GEOMETRIC_TOLERANCE_GROUP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MATERIAL_PROPERTY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_UNIT_GEOMETRIC_TOLERANCE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRODUCT_DEFINITION_SHAPE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'REQUIREMENTS_PROPERTY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SIGNAL' ] * TYPEOF ( pd ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_representation" appliesto="representation">
         <where label="WR1" expression=" SIZEOF ( QUERY ( rep &lt;* representation | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ANALYTICAL_MODEL_PORT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'COMPONENT_LOCATION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'RULE_FUNCTION_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRUCTURED_TEXT_REPRESENTATION_ITEM' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TEXT_STRING_REPRESENTATION' ] * TYPEOF ( rep ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_exclusive_representation_context" appliesto="representation_context">
         <algorithm> LOCAL pass : BOOLEAN := TRUE ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( representation_context ) by 1 ; pass := ( NOT ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRUCTURED_TEXT_REPRESENTATION_CONTEXT' IN TYPEOF ( representation_context [ i ] ) ) OR ( SIZEOF ( TYPEOF ( representation_context [ i ] ) ) &lt;= 2 ) ) AND ( NOT ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF ( representation_context [ i ] ) ) OR ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'GEOMETRIC_REPRESENTATION_CONTEXT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PARAMETRIC_REPRESENTATION_CONTEXT' ] * TYPEOF ( representation_context [ i ] ) ) &lt;= 2 ) ) AND ( NOT ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PARAMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF ( representation_context [ i ] ) ) OR ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'GEOMETRIC_REPRESENTATION_CONTEXT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PARAMETRIC_REPRESENTATION_CONTEXT' ] * TYPEOF ( representation_context [ i ] ) ) &lt;= 2 ) ) ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
      <rule name="subtype_exclusive_shape_aspect_relationship" appliesto="shape_aspect_relationship">
         <where label="WR1" expression=" SIZEOF ( QUERY ( sar &lt;* shape_aspect_relationship | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'ASSEMBLY_JOINT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DEVICE_TERMINAL_MAP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DIMENSIONAL_LOCATION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'INTERFACE_MOUNTED_JOIN' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MAKE_FROM_CONNECTIVITY_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'MAKE_FROM_FEATURE_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PACKAGED_CONNECTOR_TERMINAL_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PHYSICAL_CONNECTIVITY_ELEMENT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SHAPE_ASPECT_DERIVING_RELATIONSHIP' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'STRATUM_CONCEPT_RELATIONSHIP' ] * TYPEOF ( sar ) ) &lt;= 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_action" appliesto="action">
         <where label="WR1" expression=" SIZEOF ( QUERY ( act &lt;* action | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'DIRECTED_ACTION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXECUTED_ACTION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'RULE_ACTION' ] * TYPEOF ( act ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_externally_defined_item" appliesto="externally_defined_item">
         <where label="WR1" expression=" SIZEOF ( QUERY ( edi &lt;* externally_defined_item | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'BOND_CATEGORY' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXTERNALLY_DEFINED_CURVE_FONT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXTERNALLY_DEFINED_HATCH_STYLE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXTERNALLY_DEFINED_REPRESENTATION_ITEM' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXTERNALLY_DEFINED_SYMBOL' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXTERNALLY_DEFINED_TEXT_FONT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXTERNALLY_DEFINED_TILE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'EXTERNALLY_DEFINED_TILE_STYLE' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PART_TEMPLATE_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'RULE_DEFINITION' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'SIGNAL_CATEGORY' ] * TYPEOF ( edi ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_pre_defined_item" appliesto="pre_defined_item">
         <where label="WR1" expression=" SIZEOF ( QUERY ( pdi &lt;* pre_defined_item | NOT ( SIZEOF ( [ 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRE_DEFINED_TEXT_FONT' , 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'PRE_DEFINED_CURVE_FONT' ] * TYPEOF ( pdi ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="subtype_mandatory_text_literal" appliesto="text_literal">
         <where label="WR1" expression=" SIZEOF ( QUERY ( tl &lt;* text_literal | NOT ( ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TEXT_LITERAL_WITH_EXTENT' IN TYPEOF ( tl ) ) OR ( 'ELECTRONIC_ASSEMBLY_INTERCONNECT_AND_PACKAGING_DESIGN.' + 'TEXT_LITERAL_WITH_ASSOCIATED_CURVES' IN TYPEOF ( tl ) ) ) ) ) = 0 "/>
      </rule>
      <function name="valid_2d_wireframe_edge_curve">
         <parameter name="crv">
            <typename name="curve"/>
         </parameter>
         <parameter name="schma">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm> IF SIZEOF ( [ schma + '.LINE' , schma + '.B_SPLINE_CURVE' , schma + '.CIRCLE' , schma + '.HYPERBOLA' , schma + '.ELLIPSE' , schma + '.PARABOLA' , schma + '.POLYLINE' ] * TYPEOF ( crv ) ) = 1 THEN RETURN ( TRUE ) ; ELSE IF ( schma + '.CURVE_REPLICA' ) IN TYPEOF ( crv ) THEN RETURN ( valid_2d_wireframe_edge_curve ( crv \ curve_replica . parent_curve , schma ) ) ; ELSE IF ( schma + '.OFFSET_CURVE_2D' ) IN TYPEOF ( crv ) THEN RETURN ( valid_2d_wireframe_edge_curve ( crv \ offset_curve_2d . basis_curve , schma ) ) ; END_IF ; END_IF ; END_IF ; RETURN ( FALSE ) ; </algorithm>
      </function>
   </schema>
</express>
