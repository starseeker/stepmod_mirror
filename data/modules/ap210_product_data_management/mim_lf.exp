SCHEMA ap210_product_data_management_mim_lf;
TYPE action_items = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- action_items

TYPE action_request_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- action_request_item

TYPE ahead_or_behind = ENUMERATION OF (
	ahead,
	exact,
	behind );
END_TYPE; -- ahead_or_behind

TYPE aliasable_item = EXTENSIBLE SELECT ;
END_TYPE; -- aliasable_item

TYPE amount_of_substance_measure = REAL;
END_TYPE; -- amount_of_substance_measure

TYPE approval_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- approval_item

TYPE area_measure = REAL;
END_TYPE; -- area_measure

TYPE attribute_language_item = EXTENSIBLE GENERIC_ENTITY SELECT (
multi_language_attribute_assignment,attribute_value_assignment);END_TYPE; -- attribute_language_item

TYPE attribute_type = SELECT (
label,text);END_TYPE; -- attribute_type

TYPE celsius_temperature_measure = REAL;
END_TYPE; -- celsius_temperature_measure

TYPE certification_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- certification_item

TYPE characterized_action_definition = SELECT (
action,action_method,action_method_relationship,action_relationship);END_TYPE; -- characterized_action_definition

TYPE characterized_definition = SELECT (
characterized_object,characterized_product_definition,shape_definition);END_TYPE; -- characterized_definition

TYPE characterized_material_property = SELECT (
material_property_representation,product_material_composition_relationship);END_TYPE; -- characterized_material_property

TYPE characterized_product_definition = SELECT (
product_definition,product_definition_relationship);END_TYPE; -- characterized_product_definition

TYPE characterized_resource_definition = SELECT (
action_resource,action_resource_relationship,action_resource_requirement,action_resource_requirement_relationship);END_TYPE; -- characterized_resource_definition

TYPE class_system_item = EXTENSIBLE GENERIC_ENTITY SELECT (
characterized_class);END_TYPE; -- class_system_item

TYPE classification_classification_item = EXTENSIBLE SELECT BASED_ON classification_item WITH (
class);END_TYPE; -- classification_classification_item

TYPE classification_identification_item = EXTENSIBLE SELECT BASED_ON identification_item WITH (
class);END_TYPE; -- classification_identification_item

TYPE classification_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- classification_item

TYPE classification_item_extended = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
characterized_class,product,product_definition_formation,product_definition);END_TYPE; -- classification_item_extended

TYPE classified_item = EXTENSIBLE GENERIC_ENTITY SELECT (
product,product_definition_formation,product_definition);END_TYPE; -- classified_item

TYPE compound_item_definition = SELECT (
list_representation_item,set_representation_item);END_TYPE; -- compound_item_definition

TYPE configuration_design_item = SELECT (
product_definition,product_definition_formation);END_TYPE; -- configuration_design_item

TYPE context_dependent_measure = REAL;
END_TYPE; -- context_dependent_measure

TYPE contract_item = EXTENSIBLE SELECT ;
END_TYPE; -- contract_item

TYPE count_measure = NUMBER;
END_TYPE; -- count_measure

TYPE cwa_identification_item = SELECT BASED_ON identification_item WITH (
characterized_class);END_TYPE; -- cwa_identification_item

TYPE cwa_versionable_item = SELECT BASED_ON versionable_item WITH (
characterized_class);END_TYPE; -- cwa_versionable_item

TYPE date_and_time_item = EXTENSIBLE SELECT ;
END_TYPE; -- date_and_time_item

TYPE date_and_time_item_approval = SELECT BASED_ON date_and_time_item WITH (
approval_person_organization);END_TYPE; -- date_and_time_item_approval

TYPE date_item = EXTENSIBLE SELECT ;
END_TYPE; -- date_item

TYPE date_item_approval = SELECT BASED_ON date_item WITH (
approval_person_organization);END_TYPE; -- date_item_approval

TYPE date_time_or_event_occurrence = SELECT (
date_time_select,event_occurrence);END_TYPE; -- date_time_or_event_occurrence

TYPE date_time_select = SELECT (
date,date_and_time,local_time);END_TYPE; -- date_time_select

TYPE day_in_month_number = INTEGER;
WHERE
	WR1 : {1 <= SELF <= 31};
END_TYPE; -- day_in_month_number

TYPE derived_property_select = SELECT (
action_property,property_definition,resource_property);END_TYPE; -- derived_property_select

TYPE description_attribute_select = SELECT (
action_request_solution,application_context,approval_role,configuration_design,context_dependent_shape_representation,date_role,date_time_role,effectivity,external_source,organization_role,person_and_organization,person_and_organization_role,person_role,property_definition_representation,representation,time_role);END_TYPE; -- description_attribute_select

TYPE descriptive_measure = STRING;
END_TYPE; -- descriptive_measure

TYPE dimension_count = INTEGER;
WHERE
	WR1 : SELF > 0;
END_TYPE; -- dimension_count

TYPE document_location_select = SELECT BASED_ON external_identification_item WITH (
product_definition);END_TYPE; -- document_location_select

TYPE document_reference_item = EXTENSIBLE SELECT ;
END_TYPE; -- document_reference_item

TYPE effectivity_item = EXTENSIBLE SELECT ;
END_TYPE; -- effectivity_item

TYPE electric_current_measure = REAL;
END_TYPE; -- electric_current_measure

TYPE event_occurrence_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_and_time_item WITH (
event_occurrence);END_TYPE; -- event_occurrence_date_and_time_item

TYPE event_occurrence_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_item WITH (
event_occurrence);END_TYPE; -- event_occurrence_date_item

TYPE event_occurrence_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- event_occurrence_item

TYPE external_class_name_item = SELECT BASED_ON name_item WITH (
external_class_library);END_TYPE; -- external_class_name_item

TYPE external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- external_identification_item

TYPE file_identification_item = SELECT BASED_ON identification_item WITH (
document_file);END_TYPE; -- file_identification_item

TYPE file_location_select = SELECT BASED_ON external_identification_item WITH (
document_file);END_TYPE; -- file_location_select

TYPE file_version_item = SELECT BASED_ON versionable_item WITH (
document_file);END_TYPE; -- file_version_item

TYPE groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
WHERE
	WR1 : NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.GROUP' IN TYPEOF(SELF));
END_TYPE; -- groupable_item

TYPE hour_in_day = INTEGER;
WHERE
	WR1 : { 0 <= SELF < 24 };
END_TYPE; -- hour_in_day

TYPE id_attribute_select = SELECT (
action,address,application_context,group,organizational_project,product_category,property_definition,representation,shape_aspect,shape_aspect_relationship);END_TYPE; -- id_attribute_select

TYPE identification_item = EXTENSIBLE SELECT ;
END_TYPE; -- identification_item

TYPE identifier = STRING;
END_TYPE; -- identifier

TYPE label = STRING;
END_TYPE; -- label

TYPE length_measure = REAL;
END_TYPE; -- length_measure

TYPE list_representation_item = LIST [1:?] OF representation_item;
END_TYPE; -- list_representation_item

TYPE luminous_intensity_measure = REAL;
END_TYPE; -- luminous_intensity_measure

TYPE mass_measure = REAL;
END_TYPE; -- mass_measure

TYPE measure_value = SELECT (
amount_of_substance_measure,area_measure,celsius_temperature_measure,context_dependent_measure,count_measure,descriptive_measure,electric_current_measure,length_measure,luminous_intensity_measure,mass_measure,numeric_measure,parameter_value,plane_angle_measure,positive_length_measure,positive_plane_angle_measure,positive_ratio_measure,ratio_measure,solid_angle_measure,thermodynamic_temperature_measure,time_measure,volume_measure);END_TYPE; -- measure_value

TYPE message = STRING;
END_TYPE; -- message

TYPE minute_in_hour = INTEGER;
WHERE
	WR1 : { 0 <= SELF <= 59 };
END_TYPE; -- minute_in_hour

TYPE month_in_year_number = INTEGER;
WHERE
	WR1 : { 1 <= SELF <= 12 };
END_TYPE; -- month_in_year_number

TYPE mri_aliasable_item = EXTENSIBLE SELECT BASED_ON aliasable_item WITH (
approval_status,contract,organization,security_classification_level);END_TYPE; -- mri_aliasable_item

TYPE mri_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH (
certification,contract);END_TYPE; -- mri_approval_item

TYPE mri_attribute_language_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON attribute_language_item WITH (
applied_organizational_project_assignment,approval,approval_relationship,approval_status,certification,certification_type,contract,date_role,date_time_role,identification_role,organization_relationship,organizational_project,organizational_project_relationship,organizational_project_role,person_and_organization);END_TYPE; -- mri_attribute_language_item

TYPE mri_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_and_time_item WITH (
applied_organization_assignment,applied_person_and_organization_assignment,applied_security_classification_assignment,certification,contract,security_classification);END_TYPE; -- mri_date_and_time_item

TYPE mri_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_item WITH (
applied_organization_assignment,applied_person_and_organization_assignment,applied_security_classification_assignment,certification,contract,security_classification);END_TYPE; -- mri_date_item

TYPE mri_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH (
approval_status,contract,organization,security_classification_level);END_TYPE; -- mri_identification_item

TYPE mri_multi_language_attribute_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON multi_language_attribute_item WITH (
applied_organizational_project_assignment,approval,approval_relationship,approval_status,certification,certification_type,contract,date_role,date_time_role,identification_role,organization_relationship,organizational_project,organizational_project_relationship,organizational_project_role,person_and_organization);END_TYPE; -- mri_multi_language_attribute_item

TYPE mri_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_item WITH (
applied_identification_assignment,applied_security_classification_assignment,contract);END_TYPE; -- mri_organization_item

TYPE mri_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON person_and_organization_item WITH (
applied_identification_assignment,applied_security_classification_assignment,contract);END_TYPE; -- mri_person_and_organization_item

TYPE multi_language_attribute_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- multi_language_attribute_item

TYPE name_attribute_select = SELECT (
action_request_solution,address,configuration_design,context_dependent_shape_representation,derived_unit,effectivity,person_and_organization,product_definition,product_definition_substitute,property_definition_representation);END_TYPE; -- name_attribute_select

TYPE name_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- name_item

TYPE numeric_measure = NUMBER;
END_TYPE; -- numeric_measure

TYPE organization_item = EXTENSIBLE SELECT ;
END_TYPE; -- organization_item

TYPE parameter_value = REAL;
END_TYPE; -- parameter_value

TYPE pdm_action_items = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON action_items WITH (
product_definition_formation);END_TYPE; -- pdm_action_items

TYPE pdm_approval_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON approval_item WITH (
action,action_directive,certification,configuration_effectivity,configuration_item,contract,date,directed_action,document,general_property_relationship,product,product_definition,product_definition_relationship,product_definition_formation,representation,security_classification,shape_aspect_relationship,versioned_action_request);END_TYPE; -- pdm_approval_item

TYPE pdm_certification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON certification_item WITH (
supplied_part_relationship,make_from_usage_option);END_TYPE; -- pdm_certification_item

TYPE pdm_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON classification_item WITH (
material_designation);END_TYPE; -- pdm_classification_item

TYPE pdm_contract_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON contract_item WITH (
alternate_product_relationship,directed_action,product,product_definition_formation);END_TYPE; -- pdm_contract_item

TYPE pdm_date_and_time_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_and_time_item WITH (
approval_person_organization,certification,contract,directed_action,document,product_definition,security_classification,versioned_action_request);END_TYPE; -- pdm_date_and_time_item

TYPE pdm_date_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON date_item WITH (
product_definition,versioned_action_request,directed_action,approval_person_organization,contract,document,security_classification,certification);END_TYPE; -- pdm_date_item

TYPE pdm_document_reference_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON document_reference_item WITH (
action_method,assembly_component_usage,characterized_object,configuration_item,descriptive_representation_item,externally_defined_item,material_designation,measure_representation_item,product,product_definition,product_definition_formation,product_definition_formation_relationship,property_definition,representation,representation_item,shape_aspect);END_TYPE; -- pdm_document_reference_item

TYPE pdm_event_occurrence_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON event_occurrence_item WITH (
organizational_project);END_TYPE; -- pdm_event_occurrence_item

TYPE pdm_groupable_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON groupable_item WITH (
product_definition,product_definition_formation,property_definition_representation,representation,representation_item,shape_aspect,shape_aspect_relationship);END_TYPE; -- pdm_groupable_item

TYPE pdm_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON identification_item WITH (
characterized_class,configuration_item,material_designation,person_and_organization,product,product_concept,product_definition_formation,organization);END_TYPE; -- pdm_identification_item

TYPE pdm_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON organization_item WITH (
applied_identification_assignment,configuration_item,contract,directed_action,document,versioned_action_request,product,product_definition,product_definition_formation,representation,security_classification);END_TYPE; -- pdm_organization_item

TYPE pdm_person_and_organization_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON person_and_organization_item WITH (
configuration_item,contract,document,product,product_definition_formation,product_definition,directed_action,security_classification,versioned_action_request);END_TYPE; -- pdm_person_and_organization_item

TYPE pdm_requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON requirement_assigned_item WITH (
descriptive_representation_item,configuration_item,product_definition,product_definition_formation,product,shape_aspect,representation);END_TYPE; -- pdm_requirement_assigned_item

TYPE pdm_security_classification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON security_classification_item WITH (
applied_promissory_usage_in_product_model_assignment,assembly_component_usage,document,make_from_usage_option,product_definition_formation,product_definition);END_TYPE; -- pdm_security_classification_item

TYPE person_and_organization_item = EXTENSIBLE SELECT ;
END_TYPE; -- person_and_organization_item

TYPE person_organization_select = SELECT (
organization,person,person_and_organization);END_TYPE; -- person_organization_select

TYPE plane_angle_measure = REAL;
END_TYPE; -- plane_angle_measure

TYPE plib_class_identification_item = SELECT BASED_ON external_identification_item WITH (
externally_defined_class);END_TYPE; -- plib_class_identification_item

TYPE plib_class_organization_item = SELECT BASED_ON organization_item WITH (
class);END_TYPE; -- plib_class_organization_item

TYPE positive_length_measure = length_measure;
WHERE
	WR1 : SELF > 0.0;
END_TYPE; -- positive_length_measure

TYPE positive_plane_angle_measure = plane_angle_measure;
WHERE
	WR1 : SELF > 0.0;
END_TYPE; -- positive_plane_angle_measure

TYPE positive_ratio_measure = ratio_measure;
WHERE
	WR1 : SELF > 0.0;
END_TYPE; -- positive_ratio_measure

TYPE product_definition_or_assembly_relationship = SELECT (
assembly_component_usage,product_definition);END_TYPE; -- product_definition_or_assembly_relationship

TYPE product_or_formation_or_definition = SELECT (
product,product_definition_formation,product_definition);END_TYPE; -- product_or_formation_or_definition

TYPE project_as_date_and_time_item = SELECT BASED_ON date_and_time_item WITH (
organizational_project);END_TYPE; -- project_as_date_and_time_item

TYPE project_as_date_item = SELECT BASED_ON date_item WITH (
organizational_project);END_TYPE; -- project_as_date_item

TYPE project_event_occurrence_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON event_occurrence_item WITH (
organizational_project);END_TYPE; -- project_event_occurrence_item

TYPE project_item = EXTENSIBLE SELECT ;
END_TYPE; -- project_item

TYPE promissory_usage_in_product_model_assigned_item = SELECT (
product_concept,product_definition);END_TYPE; -- promissory_usage_in_product_model_assigned_item

TYPE ratio_measure = REAL;
END_TYPE; -- ratio_measure

TYPE representation_identification_item = SELECT BASED_ON identification_item WITH (
shape_representation);END_TYPE; -- representation_identification_item

TYPE representation_version_item = SELECT BASED_ON versionable_item WITH (
shape_representation);END_TYPE; -- representation_version_item

TYPE represented_definition = SELECT (
general_property,property_definition,property_definition_relationship,shape_aspect,shape_aspect_relationship);END_TYPE; -- represented_definition

TYPE requirement_assigned_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- requirement_assigned_item

TYPE requirement_identification_and_version_mri_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON mri_identification_item WITH (
product,product_definition_formation);END_TYPE; -- requirement_identification_and_version_mri_identification_item

TYPE requirement_source_item = EXTENSIBLE GENERIC_ENTITY SELECT ;
END_TYPE; -- requirement_source_item

TYPE role_select = SELECT (
action_assignment,action_request_assignment,approval_assignment,approval_date_time,certification_assignment,contract_assignment,document_reference,effectivity_assignment,external_referent_assignment,group_assignment,name_assignment,security_classification_assignment);END_TYPE; -- role_select

TYPE second_in_minute = REAL;
WHERE
	WR1 : { 0 <= SELF <= 60.0 };
END_TYPE; -- second_in_minute

TYPE security_classification_item = EXTENSIBLE SELECT ;
END_TYPE; -- security_classification_item

TYPE set_representation_item = SET [1:?] OF representation_item;
END_TYPE; -- set_representation_item

TYPE shape_definition = SELECT (
product_definition_shape,shape_aspect,shape_aspect_relationship);END_TYPE; -- shape_definition

TYPE si_prefix = ENUMERATION OF (
	exa,
	peta,
	tera,
	giga,
	mega,
	kilo,
	hecto,
	deca,
	deci,
	centi,
	milli,
	micro,
	nano,
	pico,
	femto,
	atto );
END_TYPE; -- si_prefix

TYPE si_unit_name = ENUMERATION OF (
	metre,
	gram,
	second,
	ampere,
	kelvin,
	mole,
	candela,
	radian,
	steradian,
	hertz,
	newton,
	pascal,
	joule,
	watt,
	coulomb,
	volt,
	farad,
	ohm,
	siemens,
	weber,
	tesla,
	henry,
	degree_Celsius,
	lumen,
	lux,
	becquerel,
	gray,
	sievert );
END_TYPE; -- si_unit_name

TYPE solid_angle_measure = REAL;
END_TYPE; -- solid_angle_measure

TYPE source = ENUMERATION OF (
	made,
	bought,
	not_known );
END_TYPE; -- source

TYPE source_item = SELECT (
identifier,message);END_TYPE; -- source_item

TYPE supported_item = SELECT (
action,action_directive,action_method);END_TYPE; -- supported_item

TYPE text = STRING;
END_TYPE; -- text

TYPE thermodynamic_temperature_measure = REAL;
END_TYPE; -- thermodynamic_temperature_measure

TYPE time_measure = REAL;
END_TYPE; -- time_measure

TYPE unit = SELECT (
derived_unit,named_unit);END_TYPE; -- unit

TYPE value_qualifier = SELECT (
precision_qualifier,type_qualifier,uncertainty_qualifier);END_TYPE; -- value_qualifier

TYPE versionable_item = EXTENSIBLE SELECT ;
END_TYPE; -- versionable_item

TYPE volume_measure = REAL;
END_TYPE; -- volume_measure

TYPE year_number = INTEGER;
END_TYPE; -- year_number

ENTITY action;
	name : label;
	description : OPTIONAL text;
	chosen_method : action_method;
DERIVE
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- action


ENTITY action_assignment
	ABSTRACT SUPERTYPE;
	assigned_action : action;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- action_assignment


ENTITY action_directive;
	name : label;
	description : OPTIONAL text;
	analysis : text;
	comment : text;
	requests : SET [1:?] OF versioned_action_request;
END_ENTITY; -- action_directive


ENTITY action_method;
	name : label;
	description : OPTIONAL text;
	consequence : text;
	purpose : text;
END_ENTITY; -- action_method


ENTITY action_method_relationship;
	name : label;
	description : OPTIONAL text;
	relating_method : action_method;
	related_method : action_method;
END_ENTITY; -- action_method_relationship


ENTITY action_property;
	name : label;
	description : text;
	definition : characterized_action_definition;
END_ENTITY; -- action_property


ENTITY action_property_representation;
	name : label;
	description : text;
	property : action_property;
	representation : representation;
END_ENTITY; -- action_property_representation


ENTITY action_relationship;
	name : label;
	description : OPTIONAL text;
	relating_action : action;
	related_action : action;
END_ENTITY; -- action_relationship


ENTITY action_request_assignment
	ABSTRACT SUPERTYPE;
	assigned_action_request : versioned_action_request;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- action_request_assignment


ENTITY action_request_solution;
	method : action_method;
	request : versioned_action_request;
DERIVE
	description : text := get_description_value(SELF);
	name : label := get_name_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
END_ENTITY; -- action_request_solution


ENTITY action_request_status;
	status : label;
	assigned_request : versioned_action_request;
END_ENTITY; -- action_request_status


ENTITY action_resource;
	name : label;
	description : OPTIONAL text;
	usage : SET [1:?] OF supported_item;
	kind : action_resource_type;
END_ENTITY; -- action_resource


ENTITY action_resource_relationship;
	name : label;
	description : OPTIONAL text;
	relating_resource : action_resource;
	related_resource : action_resource;
END_ENTITY; -- action_resource_relationship


ENTITY action_resource_requirement;
	name : label;
	description : text;
	kind : resource_requirement_type;
	operations : SET [1:?] OF characterized_action_definition;
END_ENTITY; -- action_resource_requirement


ENTITY action_resource_requirement_relationship;
	name : label;
	description : text;
	relating_action_resource_requirement : action_resource_requirement;
	related_action_resource_requirement : action_resource_requirement;
WHERE
	WR1 : relating_action_resource_requirement :<>: 
       related_action_resource_requirement;
END_ENTITY; -- action_resource_requirement_relationship


ENTITY action_resource_type;
	name : label;
END_ENTITY; -- action_resource_type


ENTITY action_status;
	status : label;
	assigned_action : executed_action;
END_ENTITY; -- action_status


ENTITY address;
	internal_location : OPTIONAL label;
	street_number : OPTIONAL label;
	street : OPTIONAL label;
	postal_box : OPTIONAL label;
	town : OPTIONAL label;
	region : OPTIONAL label;
	postal_code : OPTIONAL label;
	country : OPTIONAL label;
	facsimile_number : OPTIONAL label;
	telephone_number : OPTIONAL label;
	electronic_mail_address : OPTIONAL label;
	telex_number : OPTIONAL label;
DERIVE
	name : label := get_name_value(SELF);
	url : identifier := get_id_value(SELF);
WHERE
	WR1 : EXISTS(internal_location)OR  EXISTS(street_number)OR  EXISTS(street)OR  EXISTS(postal_box)OR  EXISTS(town)OR  EXISTS(region)OR  EXISTS(postal_code)OR  EXISTS(country)OR  EXISTS(facsimile_number)OR  EXISTS(telephone_number)OR  EXISTS(electronic_mail_address)OR EXISTS(telex_number);
END_ENTITY; -- address


ENTITY alternate_product_relationship;
	name : label;
	definition : OPTIONAL text;
	alternate : product;
	base : product;
	basis : text;
UNIQUE
	UR1 : alternate, base;
WHERE
	WR1 : alternate :<>: base;
END_ENTITY; -- alternate_product_relationship


ENTITY amount_of_substance_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- amount_of_substance_measure_with_unit


ENTITY amount_of_substance_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- amount_of_substance_unit


ENTITY application_context;
	application : label;
DERIVE
	description : text := get_description_value(SELF);
	id : identifier := get_id_value(SELF);
INVERSE
	context_elements: SET [1:?] OF application_context_element FOR frame_of_reference;
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- application_context


ENTITY application_context_element
	SUPERTYPE OF (ONEOF (product_concept_context, product_context, product_definition_context));
	name : label;
	frame_of_reference : application_context;
END_ENTITY; -- application_context_element


ENTITY applied_action_assignment
	SUBTYPE OF (action_assignment);
	items : SET [1:?] OF action_items;
END_ENTITY; -- applied_action_assignment


ENTITY applied_action_request_assignment
	SUBTYPE OF (action_request_assignment);
	items : SET [1:?] OF action_request_item;
END_ENTITY; -- applied_action_request_assignment


ENTITY applied_approval_assignment
	SUBTYPE OF (approval_assignment);
	items : SET [1:?] OF approval_item;
END_ENTITY; -- applied_approval_assignment


ENTITY applied_certification_assignment
	SUBTYPE OF (certification_assignment);
	items : SET [1:?] OF certification_item;
END_ENTITY; -- applied_certification_assignment


ENTITY applied_classification_assignment
	SUBTYPE OF (classification_assignment);
	items : SET [1:?] OF classification_item;
END_ENTITY; -- applied_classification_assignment


ENTITY applied_contract_assignment
	SUBTYPE OF (contract_assignment);
	items : SET [1:?] OF contract_item;
END_ENTITY; -- applied_contract_assignment


ENTITY applied_date_and_time_assignment
	SUBTYPE OF (date_and_time_assignment);
	items : SET [1:?] OF date_and_time_item;
END_ENTITY; -- applied_date_and_time_assignment


ENTITY applied_date_assignment
	SUBTYPE OF (date_assignment);
	items : SET [1:?] OF date_item;
END_ENTITY; -- applied_date_assignment


ENTITY applied_document_reference
	SUBTYPE OF (document_reference);
	items : SET [1:?] OF document_reference_item;
END_ENTITY; -- applied_document_reference


ENTITY applied_document_usage_constraint_assignment
	SUBTYPE OF (document_usage_constraint_assignment);
	items : SET [1:?] OF document_reference_item;
END_ENTITY; -- applied_document_usage_constraint_assignment


ENTITY applied_effectivity_assignment
	SUBTYPE OF (effectivity_assignment);
	items : SET [1:?] OF effectivity_item;
END_ENTITY; -- applied_effectivity_assignment


ENTITY applied_event_occurrence_assignment
	SUBTYPE OF (event_occurrence_assignment);
	items : SET [1:?] OF event_occurrence_item;
END_ENTITY; -- applied_event_occurrence_assignment


ENTITY applied_external_identification_assignment
	SUBTYPE OF (external_identification_assignment);
	items : SET [1:?] OF external_identification_item;
END_ENTITY; -- applied_external_identification_assignment


ENTITY applied_group_assignment
	SUBTYPE OF (group_assignment);
	items : SET [1:?] OF groupable_item;
END_ENTITY; -- applied_group_assignment


ENTITY applied_identification_assignment
	SUBTYPE OF (identification_assignment);
	items : SET [1:?] OF identification_item;
END_ENTITY; -- applied_identification_assignment


ENTITY applied_name_assignment
	SUBTYPE OF (name_assignment);
	item : name_item;
END_ENTITY; -- applied_name_assignment


ENTITY applied_organization_assignment
	SUBTYPE OF (organization_assignment);
	items : SET [1:?] OF organization_item;
END_ENTITY; -- applied_organization_assignment


ENTITY applied_organizational_project_assignment
	SUBTYPE OF (organizational_project_assignment);
	items : SET [1:?] OF project_item;
END_ENTITY; -- applied_organizational_project_assignment


ENTITY applied_person_and_organization_assignment
	SUBTYPE OF (person_and_organization_assignment);
	items : SET [1:?] OF person_and_organization_item;
END_ENTITY; -- applied_person_and_organization_assignment


ENTITY applied_promissory_usage_in_product_model_assignment
	SUBTYPE OF (group_assignment);
	items : SET [1:?] OF promissory_usage_in_product_model_assigned_item;
WHERE
	WR1 : SIZEOF(QUERY(pm <* items |
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PRODUCT_CONCEPT' IN TYPEOF(pm)
       ))= 1;
	WR2 : SIZEOF(QUERY(pd <* items |
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PRODUCT_DEFINITION' IN TYPEOF(pd)
       ))= 1;
	WR3 : SIZEOF(items)= 2;
	WR4 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PROMISSORY_USAGE_IN_PRODUCT_MODEL' IN TYPEOF(SELF\group_assignment.assigned_group);
	WR5 : SIZEOF(USEDIN(SELF,
      'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS'))<= 1;
END_ENTITY; -- applied_promissory_usage_in_product_model_assignment


ENTITY applied_security_classification_assignment
	SUBTYPE OF (security_classification_assignment);
	items : SET [1:?] OF security_classification_item;
END_ENTITY; -- applied_security_classification_assignment


ENTITY approval;
	status : approval_status;
	level : label;
END_ENTITY; -- approval


ENTITY approval_assignment
	ABSTRACT SUPERTYPE;
	assigned_approval : approval;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- approval_assignment


ENTITY approval_date_time;
	date_time : date_time_select;
	dated_approval : approval;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- approval_date_time


ENTITY approval_person_organization;
	person_organization : person_organization_select;
	authorized_approval : approval;
	role : approval_role;
END_ENTITY; -- approval_person_organization


ENTITY approval_relationship;
	name : label;
	description : OPTIONAL text;
	relating_approval : approval;
	related_approval : approval;
END_ENTITY; -- approval_relationship


ENTITY approval_role;
	role : label;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- approval_role


ENTITY approval_status;
	name : label;
END_ENTITY; -- approval_status


ENTITY area_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.AREA_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- area_measure_with_unit


ENTITY area_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 2.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- area_unit


ENTITY assembly_component_usage
	SUPERTYPE OF (ONEOF (next_assembly_usage_occurrence, specified_higher_usage_occurrence, promissory_usage_occurrence))
	SUBTYPE OF (product_definition_usage);
	reference_designator : OPTIONAL identifier;
END_ENTITY; -- assembly_component_usage


ENTITY assembly_component_usage_substitute;
	name : label;
	definition : OPTIONAL text;
	base : assembly_component_usage;
	substitute : assembly_component_usage;
UNIQUE
	UR1 : base, substitute;
WHERE
	WR1 : base.relating_product_definition :=:
       substitute.relating_product_definition;
	WR2 : base :<>: substitute;
END_ENTITY; -- assembly_component_usage_substitute


ENTITY assigned_requirement
	SUBTYPE OF (group_assignment);
	items : SET [1:1] OF product_definition;
	SELF\group_assignment.assigned_group : requirement_assignment;
END_ENTITY; -- assigned_requirement


ENTITY attribute_classification_assignment
	ABSTRACT SUPERTYPE;
	assigned_class : group;
	attribute_name : label;
	role : classification_role;
END_ENTITY; -- attribute_classification_assignment


ENTITY attribute_language_assignment
	SUBTYPE OF (attribute_classification_assignment);
	items : SET [1:?] OF attribute_language_item;
	SELF\attribute_classification_assignment.assigned_class : language;
WHERE
	WR1 : SELF\attribute_classification_assignment.role.name IN ['primary', 'translated'];
	WR2 : SELF\attribute_classification_assignment.attribute_name<> '';
END_ENTITY; -- attribute_language_assignment


ENTITY attribute_value_assignment
	ABSTRACT SUPERTYPE;
	attribute_name : label;
	attribute_value : attribute_type;
	role : attribute_value_role;
END_ENTITY; -- attribute_value_assignment


ENTITY attribute_value_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- attribute_value_role


ENTITY axis2_placement_2d
	SUBTYPE OF (placement);
	ref_direction : OPTIONAL direction;
DERIVE
	p : LIST [2:2] OF direction := build_2axes(ref_direction);
WHERE
	WR1 : SELF\geometric_representation_item.dim = 2;
END_ENTITY; -- axis2_placement_2d


ENTITY axis2_placement_3d
	SUBTYPE OF (placement);
	axis : OPTIONAL direction;
	ref_direction : OPTIONAL direction;
DERIVE
	p : LIST [3:3] OF direction := build_axes(axis,ref_direction);
WHERE
	WR1 : SELF\placement.location.dim = 3;
	WR2 : (NOT(EXISTS(axis)))OR(axis.dim = 3);
	WR3 : (NOT(EXISTS(ref_direction)))OR(ref_direction.dim = 3);
	WR4 : (NOT(EXISTS(axis)))OR(NOT(EXISTS(ref_direction)))OR
         (cross_product(axis,ref_direction).magnitude > 0.0);
END_ENTITY; -- axis2_placement_3d


ENTITY calendar_date
	SUBTYPE OF (date);
	day_component : day_in_month_number;
	month_component : month_in_year_number;
WHERE
	WR1 : valid_calendar_date(SELF);
END_ENTITY; -- calendar_date


ENTITY cartesian_point
	SUBTYPE OF (point);
	coordinates : LIST [1:3] OF length_measure;
END_ENTITY; -- cartesian_point


ENTITY cartesian_transformation_operator
	SUPERTYPE OF (ONEOF (cartesian_transformation_operator_2d, cartesian_transformation_operator_3d))
	SUBTYPE OF (geometric_representation_item, functionally_defined_transformation);
	axis1 : OPTIONAL direction;
	axis2 : OPTIONAL direction;
	local_origin : cartesian_point;
	scale : OPTIONAL REAL;
DERIVE
	scl : REAL := NVL(scale, 1.0);
WHERE
	WR1 : scl > 0.0;
END_ENTITY; -- cartesian_transformation_operator


ENTITY cartesian_transformation_operator_2d
	SUBTYPE OF (cartesian_transformation_operator);
DERIVE
	u : LIST [2:2] OF direction := base_axis(2,SELF\cartesian_transformation_operator.axis1,
                   SELF\cartesian_transformation_operator.axis2,?);
WHERE
	WR1 : SELF\geometric_representation_item.dim = 2;
END_ENTITY; -- cartesian_transformation_operator_2d


ENTITY cartesian_transformation_operator_3d
	SUBTYPE OF (cartesian_transformation_operator);
	axis3 : OPTIONAL direction;
DERIVE
	u : LIST [3:3] OF direction := base_axis(3,SELF\cartesian_transformation_operator.axis1,
                        SELF\cartesian_transformation_operator.axis2,axis3);
WHERE
	WR1 : SELF\geometric_representation_item.dim = 3;
END_ENTITY; -- cartesian_transformation_operator_3d


ENTITY celsius_temperature_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- celsius_temperature_measure_with_unit


ENTITY certification;
	name : label;
	purpose : text;
	kind : certification_type;
END_ENTITY; -- certification


ENTITY certification_assignment
	ABSTRACT SUPERTYPE;
	assigned_certification : certification;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- certification_assignment


ENTITY certification_type;
	description : label;
END_ENTITY; -- certification_type


ENTITY characterized_class
	SUBTYPE OF (characterized_object, class);
END_ENTITY; -- characterized_class


ENTITY characterized_object;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- characterized_object


ENTITY class
	SUBTYPE OF (group);
END_ENTITY; -- class


ENTITY class_by_extension
	SUBTYPE OF (class);
END_ENTITY; -- class_by_extension


ENTITY class_by_intension
	SUBTYPE OF (class);
END_ENTITY; -- class_by_intension


ENTITY class_system
	SUBTYPE OF (group);
END_ENTITY; -- class_system


ENTITY classification_assignment
	ABSTRACT SUPERTYPE;
	assigned_class : group;
	role : classification_role;
END_ENTITY; -- classification_assignment


ENTITY classification_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- classification_role


ENTITY compound_representation_item
	SUBTYPE OF (representation_item);
	item_element : compound_item_definition;
END_ENTITY; -- compound_representation_item


ENTITY configuration_design;
	configuration : configuration_item;
	design : configuration_design_item;
DERIVE
	description : text := get_description_value(SELF);
	name : label := get_name_value(SELF);
UNIQUE
	UR1 : configuration, design;
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                             'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                             'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- configuration_design


ENTITY configuration_effectivity
	SUBTYPE OF (product_definition_effectivity);
	configuration : configuration_design;
UNIQUE
	UR1 : configuration, usage, id;
WHERE
	WR1 : 'PRODUCT_STRUCTURE_SCHEMA.PRODUCT_DEFINITION_USAGE' IN
        TYPEOF(SELF\product_definition_effectivity.usage);
END_ENTITY; -- configuration_effectivity


ENTITY configuration_item;
	id : identifier;
	name : label;
	description : OPTIONAL text;
	item_concept : product_concept;
	purpose : OPTIONAL label;
END_ENTITY; -- configuration_item


ENTITY context_dependent_shape_representation;
	representation_relation : shape_representation_relationship;
	represented_product_relation : product_definition_shape;
DERIVE
	description : text := get_description_value(SELF);
	name : label := get_name_value(SELF);
WHERE
	WR1 : 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF.represented_product_relation.definition);
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
	WR3 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
END_ENTITY; -- context_dependent_shape_representation


ENTITY context_dependent_unit
	SUBTYPE OF (named_unit);
	name : label;
END_ENTITY; -- context_dependent_unit


ENTITY contract;
	name : label;
	purpose : text;
	kind : contract_type;
END_ENTITY; -- contract


ENTITY contract_assignment
	ABSTRACT SUPERTYPE;
	assigned_contract : contract;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- contract_assignment


ENTITY contract_type;
	description : label;
END_ENTITY; -- contract_type


ENTITY conversion_based_unit
	SUBTYPE OF (named_unit);
	name : label;
	conversion_factor : measure_with_unit;
END_ENTITY; -- conversion_based_unit


ENTITY coordinated_universal_time_offset;
	hour_offset : INTEGER;
	minute_offset : OPTIONAL INTEGER;
	sense : ahead_or_behind;
DERIVE
	actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
	WR1 : { 0 <= hour_offset < 24 };
	WR2 : { 0 <= actual_minute_offset <= 59 };
	WR3 : NOT(((hour_offset <> 0)OR(actual_minute_offset <>0))AND(sense = exact));
END_ENTITY; -- coordinated_universal_time_offset


ENTITY data_environment;
	name : label;
	description : text;
	elements : SET [1:?] OF property_definition_representation;
END_ENTITY; -- data_environment


ENTITY date
	SUPERTYPE OF (calendar_date);
	year_component : year_number;
END_ENTITY; -- date


ENTITY date_and_time;
	date_component : date;
	time_component : local_time;
END_ENTITY; -- date_and_time


ENTITY date_and_time_assignment
	ABSTRACT SUPERTYPE;
	assigned_date_and_time : date_and_time;
	role : date_time_role;
END_ENTITY; -- date_and_time_assignment


ENTITY date_assignment
	ABSTRACT SUPERTYPE;
	assigned_date : date;
	role : date_role;
END_ENTITY; -- date_assignment


ENTITY date_role;
	name : label;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- date_role


ENTITY date_time_role;
	name : label;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- date_time_role


ENTITY dated_effectivity
	SUBTYPE OF (effectivity);
	effectivity_end_date : OPTIONAL date_time_or_event_occurrence;
	effectivity_start_date : date_time_or_event_occurrence;
END_ENTITY; -- dated_effectivity


ENTITY derived_unit;
	elements : SET [1:?] OF derived_unit_element;
DERIVE
	name : label := get_name_value(SELF);
WHERE
	WR1 : (SIZEOF(elements)> 1)OR((SIZEOF(elements)= 1)AND(elements[1].exponent <> 1.0));
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
END_ENTITY; -- derived_unit


ENTITY derived_unit_element;
	unit : named_unit;
	exponent : REAL;
END_ENTITY; -- derived_unit_element


ENTITY description_attribute;
	attribute_value : text;
	described_item : description_attribute_select;
END_ENTITY; -- description_attribute


ENTITY descriptive_representation_item
	SUBTYPE OF (representation_item);
	description : text;
END_ENTITY; -- descriptive_representation_item


ENTITY dimensional_exponents;
	length_exponent : REAL;
	mass_exponent : REAL;
	time_exponent : REAL;
	electric_current_exponent : REAL;
	thermodynamic_temperature_exponent : REAL;
	amount_of_substance_exponent : REAL;
	luminous_intensity_exponent : REAL;
END_ENTITY; -- dimensional_exponents


ENTITY directed_action
	SUBTYPE OF (executed_action);
	directive : action_directive;
END_ENTITY; -- directed_action


ENTITY direction
	SUBTYPE OF (geometric_representation_item);
	direction_ratios : LIST [2:3] OF REAL;
WHERE
	WR1 : SIZEOF(QUERY(tmp <* direction_ratios | tmp <> 0.0))> 0;
END_ENTITY; -- direction


ENTITY document;
	id : identifier;
	name : label;
	description : OPTIONAL text;
	kind : document_type;
INVERSE
	representation_types: SET [0:?] OF document_representation_type FOR represented_document;
END_ENTITY; -- document


ENTITY document_file
	SUBTYPE OF (document, characterized_object);
WHERE
	WR1 : SELF\characterized_object.name = '';
	WR2 : NOT EXISTS(SELF\characterized_object.description);
	WR3 : SIZEOF(QUERY(drt <* SELF\document.representation_types |
               drt.name IN ['digital','physical']))= 1;
END_ENTITY; -- document_file


ENTITY document_product_association;
	name : label;
	description : OPTIONAL text;
	relating_document : document;
	related_product : product_or_formation_or_definition;
END_ENTITY; -- document_product_association


ENTITY document_product_equivalence
	SUBTYPE OF (document_product_association);
WHERE
	WR1 : SELF\document_product_association.name = 'equivalence';
	WR2 : NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.PRODUCT' IN TYPEOF(SELF\document_product_association.related_product))OR((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document')AND(SIZEOF(QUERY(prpc <* USEDIN(SELF\document_product_association.related_product,'PRODUCT_DEFINITION_SCHEMA.' + 'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')| prpc.name = 'document'))= 1));
	WR3 : NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.PRODUCT_DEFINITION_FORMATION' IN TYPEOF(SELF.related_product))OR((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document version')AND(SIZEOF(QUERY(prpc <* USEDIN(SELF.related_product\product_definition_formation.of_product, 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')| prpc.name = 'document'))= 1));
	WR4 : NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(SELF.related_product))OR((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document definition')AND(SIZEOF(QUERY(prpc <* USEDIN(SELF\document_product_association.related_product\product_definition.formation.of_product, 'PRODUCT_DEFINITION_SCHEMA.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')| prpc.name = 'document'))= 1));
END_ENTITY; -- document_product_equivalence


ENTITY document_reference
	ABSTRACT SUPERTYPE;
	assigned_document : document;
	source : label;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- document_reference


ENTITY document_relationship;
	name : label;
	description : OPTIONAL text;
	relating_document : document;
	related_document : document;
END_ENTITY; -- document_relationship


ENTITY document_representation_type;
	name : label;
	represented_document : document;
END_ENTITY; -- document_representation_type


ENTITY document_type;
	product_data_type : label;
END_ENTITY; -- document_type


ENTITY document_usage_constraint;
	source : document;
	subject_element : label;
	subject_element_value : text;
END_ENTITY; -- document_usage_constraint


ENTITY document_usage_constraint_assignment
	ABSTRACT SUPERTYPE;
	assigned_document_usage : document_usage_constraint;
	role : document_usage_role;
END_ENTITY; -- document_usage_constraint_assignment


ENTITY document_usage_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- document_usage_role


ENTITY effectivity
	SUPERTYPE OF (ONEOF (serial_numbered_effectivity, dated_effectivity, lot_effectivity, time_interval_based_effectivity));
	id : identifier;
DERIVE
	description : text := get_description_value(SELF);
	name : label := get_name_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- effectivity


ENTITY effectivity_assignment
	ABSTRACT SUPERTYPE;
	assigned_effectivity : effectivity;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- effectivity_assignment


ENTITY effectivity_relationship;
	name : label;
	description : OPTIONAL text;
	related_effectivity : effectivity;
	relating_effectivity : effectivity;
END_ENTITY; -- effectivity_relationship


ENTITY electric_current_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- electric_current_measure_with_unit


ENTITY electric_current_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 1.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- electric_current_unit


ENTITY event_occurrence;
	id : identifier;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- event_occurrence


ENTITY event_occurrence_assignment
	ABSTRACT SUPERTYPE;
	assigned_event_occurrence : event_occurrence;
	role : event_occurrence_role;
END_ENTITY; -- event_occurrence_assignment


ENTITY event_occurrence_relationship;
	name : label;
	description : OPTIONAL text;
	relating_event : event_occurrence;
	related_event : event_occurrence;
END_ENTITY; -- event_occurrence_relationship


ENTITY event_occurrence_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- event_occurrence_role


ENTITY executed_action
	SUBTYPE OF (action);
END_ENTITY; -- executed_action


ENTITY external_class_library
	SUBTYPE OF (external_source);
END_ENTITY; -- external_class_library


ENTITY external_identification_assignment
	ABSTRACT SUPERTYPE
	SUBTYPE OF (identification_assignment);
	source : external_source;
END_ENTITY; -- external_identification_assignment


ENTITY external_referent_assignment
	ABSTRACT SUPERTYPE;
	assigned_name : label;
DERIVE
	role : object_role := get_role(SELF);
UNIQUE
	UR1 : assigned_name;
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- external_referent_assignment


ENTITY external_source;
	source_id : source_item;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- external_source


ENTITY externally_defined_class
	SUBTYPE OF (class, externally_defined_item);
END_ENTITY; -- externally_defined_class


ENTITY externally_defined_item;
	item_id : source_item;
	source : external_source;
END_ENTITY; -- externally_defined_item


ENTITY functionally_defined_transformation;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- functionally_defined_transformation


ENTITY general_material_property
	SUBTYPE OF (general_property);
WHERE
	WR1 : SIZEOF(QUERY(gpa <* USEDIN(SELF,'MATERIAL_ASPECTS_MIM.GENERAL_PROPERTY_ASSOCIATION.BASE_DEFINITION')| 
  NOT('MATERIAL_ASPECTS_MIM.MATERIAL_PROPERTY' IN TYPEOF(gpa.derived_definition))))= 0;
END_ENTITY; -- general_material_property


ENTITY general_property;
	id : identifier;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- general_property


ENTITY general_property_association;
	name : label;
	description : OPTIONAL text;
	base_definition : general_property;
	derived_definition : derived_property_select;
WHERE
	WR1 : SIZEOF(USEDIN(derived_definition, 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' + 'GENERAL_PROPERTY_ASSOCIATION.' + 'DERIVED_DEFINITION'))= 1;
	WR2 : derived_definition.name = base_definition.name;
END_ENTITY; -- general_property_association


ENTITY general_property_relationship;
	name : label;
	description : OPTIONAL text;
	relating_property : general_property;
	related_property : general_property;
END_ENTITY; -- general_property_relationship


ENTITY geometric_representation_context
	SUBTYPE OF (representation_context);
	coordinate_space_dimension : dimension_count;
END_ENTITY; -- geometric_representation_context


ENTITY geometric_representation_item
	SUPERTYPE OF (ONEOF (point, direction, placement, cartesian_transformation_operator))
	SUBTYPE OF (representation_item);
DERIVE
	dim : dimension_count := dimension_of(SELF);
WHERE
	WR1 : SIZEOF(QUERY(using_rep <* using_representations(SELF)|
      NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN
      TYPEOF(using_rep.context_of_items))))= 0;
END_ENTITY; -- geometric_representation_item


ENTITY global_uncertainty_assigned_context
	SUBTYPE OF (representation_context);
	uncertainty : SET [1:?] OF uncertainty_measure_with_unit;
END_ENTITY; -- global_uncertainty_assigned_context


ENTITY global_unit_assigned_context
	SUBTYPE OF (representation_context);
	units : SET [1:?] OF unit;
END_ENTITY; -- global_unit_assigned_context


ENTITY group;
	name : label;
	description : OPTIONAL text;
DERIVE
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- group


ENTITY group_assignment
	ABSTRACT SUPERTYPE;
	assigned_group : group;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- group_assignment


ENTITY group_relationship;
	name : label;
	description : OPTIONAL text;
	relating_group : group;
	related_group : group;
END_ENTITY; -- group_relationship


ENTITY id_attribute;
	attribute_value : identifier;
	identified_item : id_attribute_select;
END_ENTITY; -- id_attribute


ENTITY identification_assignment
	ABSTRACT SUPERTYPE;
	assigned_id : identifier;
	role : identification_role;
END_ENTITY; -- identification_assignment


ENTITY identification_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- identification_role


ENTITY item_defined_transformation;
	name : label;
	description : OPTIONAL text;
	transform_item_1 : representation_item;
	transform_item_2 : representation_item;
END_ENTITY; -- item_defined_transformation


ENTITY known_source
	SUBTYPE OF (external_source, pre_defined_item);
END_ENTITY; -- known_source


ENTITY language
	SUBTYPE OF (group);
WHERE
	WR1 : SELF\group.name <> '';
END_ENTITY; -- language


ENTITY length_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.LENGTH_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- length_measure_with_unit


ENTITY length_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 1.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- length_unit


ENTITY local_time;
	hour_component : hour_in_day;
	minute_component : OPTIONAL minute_in_hour;
	second_component : OPTIONAL second_in_minute;
	zone : coordinated_universal_time_offset;
WHERE
	WR1 : valid_time(SELF);
END_ENTITY; -- local_time


ENTITY lot_effectivity
	SUBTYPE OF (effectivity);
	effectivity_lot_id : identifier;
	effectivity_lot_size : measure_with_unit;
END_ENTITY; -- lot_effectivity


ENTITY luminous_intensity_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- luminous_intensity_measure_with_unit


ENTITY luminous_intensity_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 1.0);
END_ENTITY; -- luminous_intensity_unit


ENTITY make_from_usage_option
	SUBTYPE OF (product_definition_usage);
	ranking : INTEGER;
	ranking_rationale : text;
	quantity : measure_with_unit;
WHERE
	WR1 : (NOT('NUMBER' IN TYPEOF(quantity.value_component)))
       OR(quantity.value_component > 0);
END_ENTITY; -- make_from_usage_option


ENTITY mass_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.MASS_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- mass_measure_with_unit


ENTITY mass_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 1.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- mass_unit


ENTITY material_designation;
	name : label;
	definitions : SET [1:?] OF characterized_definition;
END_ENTITY; -- material_designation


ENTITY material_designation_characterization;
	name : label;
	description : text;
	designation : material_designation;
	property : characterized_material_property;
END_ENTITY; -- material_designation_characterization


ENTITY material_property
	SUBTYPE OF (property_definition);
UNIQUE
	UR1 : name, definition;
WHERE
	WR1 : ('PRODUCT_PROPERTY_DEFINITION_SCHEMA.CHARACTERIZED_OBJECT' IN
          TYPEOF(SELF\property_definition.definition))OR
      (SIZEOF(bag_to_set(USEDIN(SELF ,
                     'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.' +
                     'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'))-
              QUERY(temp <* bag_to_set(USEDIN(SELF ,
                       'PRODUCT_PROPERTY_REPRESENTATION_SCHEMA.' +
                       'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'))|
                      ('MATERIAL_PROPERTY_REPRESENTATION_SCHEMA.' +
                      'MATERIAL_PROPERTY_REPRESENTATION' IN
                      TYPEOF(temp))))= 0);
END_ENTITY; -- material_property


ENTITY material_property_representation
	SUBTYPE OF (property_definition_representation);
	dependent_environment : data_environment;
END_ENTITY; -- material_property_representation


ENTITY measure_representation_item
	SUBTYPE OF (representation_item, measure_with_unit);
END_ENTITY; -- measure_representation_item


ENTITY measure_with_unit
	SUPERTYPE OF (ONEOF (length_measure_with_unit, mass_measure_with_unit, time_measure_with_unit, electric_current_measure_with_unit, thermodynamic_temperature_measure_with_unit, celsius_temperature_measure_with_unit, amount_of_substance_measure_with_unit, luminous_intensity_measure_with_unit, plane_angle_measure_with_unit, solid_angle_measure_with_unit, area_measure_with_unit, volume_measure_with_unit, ratio_measure_with_unit));
	value_component : measure_value;
	unit_component : unit;
WHERE
	WR1 : valid_units(SELF);
END_ENTITY; -- measure_with_unit


ENTITY multi_language_attribute_assignment
	SUBTYPE OF (attribute_value_assignment);
	items : SET [1:?] OF multi_language_attribute_item;
DERIVE
	translation_language : language := language_indication[1]\attribute_classification_assignment.assigned_class;
INVERSE
	language_indication: SET [1:1] OF attribute_language_assignment FOR items;
WHERE
	WR1 : (SELF\attribute_value_assignment.role.name = 'alternate language');
	WR2 : SIZEOF(QUERY(ala <* language_indication |  
  (ala\attribute_classification_assignment.attribute_name = 'attribute_value')AND 
  (ala\attribute_classification_assignment.role.name='translated')))= 1;
	WR3 : SELF\attribute_value_assignment.attribute_name <> '';
	WR4 : SIZEOF(QUERY(ci <* items |
SIZEOF(QUERY(ata <* USEDIN(ci, 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS')|
(ata\attribute_value_assignment.attribute_name = SELF\attribute_value_assignment.attribute_name)AND 
(ata.translation_language :=: translation_language)))>1))=0;
	WR5 : SIZEOF(QUERY(ci <* items |
SIZEOF(QUERY(ata <* USEDIN(ci, 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS')|
(ata\attribute_classification_assignment.role.name='primary')AND
(ata\attribute_classification_assignment.attribute_name= SELF\attribute_value_assignment.attribute_name)AND 
(ata\attribute_classification_assignment.assigned_class :=: translation_language)))>0))=0;
END_ENTITY; -- multi_language_attribute_assignment


ENTITY name_assignment
	ABSTRACT SUPERTYPE;
	assigned_name : label;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- name_assignment


ENTITY name_attribute;
	attribute_value : label;
	named_item : name_attribute_select;
END_ENTITY; -- name_attribute


ENTITY named_unit
	SUPERTYPE OF ((ONEOF (si_unit, conversion_based_unit, context_dependent_unit) ANDOR ONEOF (length_unit, mass_unit, time_unit, electric_current_unit, thermodynamic_temperature_unit, amount_of_substance_unit, luminous_intensity_unit, plane_angle_unit, solid_angle_unit, area_unit, volume_unit, ratio_unit)));
	dimensions : dimensional_exponents;
END_ENTITY; -- named_unit


ENTITY next_assembly_usage_occurrence
	SUBTYPE OF (assembly_component_usage);
END_ENTITY; -- next_assembly_usage_occurrence


ENTITY object_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- object_role


ENTITY organization;
	id : OPTIONAL identifier;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- organization


ENTITY organization_assignment
	ABSTRACT SUPERTYPE;
	assigned_organization : organization;
	role : organization_role;
END_ENTITY; -- organization_assignment


ENTITY organization_relationship;
	name : label;
	description : OPTIONAL text;
	relating_organization : organization;
	related_organization : organization;
END_ENTITY; -- organization_relationship


ENTITY organization_role;
	name : label;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- organization_role


ENTITY organizational_address
	SUBTYPE OF (address);
	organizations : SET [1:?] OF organization;
	description : OPTIONAL text;
END_ENTITY; -- organizational_address


ENTITY organizational_project;
	name : label;
	description : OPTIONAL text;
	responsible_organizations : SET [1:?] OF organization;
DERIVE
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- organizational_project


ENTITY organizational_project_assignment
	ABSTRACT SUPERTYPE;
	assigned_organizational_project : organizational_project;
	role : organizational_project_role;
END_ENTITY; -- organizational_project_assignment


ENTITY organizational_project_relationship;
	name : label;
	description : OPTIONAL text;
	relating_organizational_project : organizational_project;
	related_organizational_project : organizational_project;
END_ENTITY; -- organizational_project_relationship


ENTITY organizational_project_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- organizational_project_role


ENTITY parametric_representation_context
	SUBTYPE OF (representation_context);
END_ENTITY; -- parametric_representation_context


ENTITY person;
	id : identifier;
	last_name : OPTIONAL label;
	first_name : OPTIONAL label;
	middle_names : OPTIONAL LIST [1:?] OF label;
	prefix_titles : OPTIONAL LIST [1:?] OF label;
	suffix_titles : OPTIONAL LIST [1:?] OF label;
WHERE
	WR1 : EXISTS(last_name)OR EXISTS(first_name);
END_ENTITY; -- person


ENTITY person_and_organization;
	the_person : person;
	the_organization : organization;
DERIVE
	description : text := get_description_value(SELF);
	name : label := get_name_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- person_and_organization


ENTITY person_and_organization_address
	SUBTYPE OF (organizational_address, personal_address);
	SELF\organizational_address.organizations : SET [1:1] OF organization;
	SELF\personal_address.people : SET [1:1] OF person;
WHERE
	WR1 : SIZEOF(QUERY(pao <* USEDIN(SELF\personal_address.people[1], 'PERSON_ORGANIZATION_SCHEMA.PERSON_AND_ORGANIZATION.THE_PERSON')| pao.the_organization :=: SELF\organizational_address.organizations[1]))= 1;
END_ENTITY; -- person_and_organization_address


ENTITY person_and_organization_assignment
	ABSTRACT SUPERTYPE;
	assigned_person_and_organization : person_and_organization;
	role : person_and_organization_role;
END_ENTITY; -- person_and_organization_assignment


ENTITY person_and_organization_role;
	name : label;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- person_and_organization_role


ENTITY person_role;
	name : label;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- person_role


ENTITY personal_address
	SUBTYPE OF (address);
	people : SET [1:?] OF person;
	description : OPTIONAL text;
END_ENTITY; -- personal_address


ENTITY placement
	SUPERTYPE OF (ONEOF (axis2_placement_2d, axis2_placement_3d))
	SUBTYPE OF (geometric_representation_item);
	location : cartesian_point;
END_ENTITY; -- placement


ENTITY plane_angle_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- plane_angle_measure_with_unit


ENTITY plane_angle_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- plane_angle_unit


ENTITY point
	SUPERTYPE OF (cartesian_point)
	SUBTYPE OF (geometric_representation_item);
END_ENTITY; -- point


ENTITY pre_defined_item;
	name : label;
END_ENTITY; -- pre_defined_item


ENTITY precision_qualifier;
	precision_value : INTEGER;
END_ENTITY; -- precision_qualifier


ENTITY product;
	id : identifier;
	name : label;
	description : OPTIONAL text;
	frame_of_reference : SET [1:?] OF product_context;
END_ENTITY; -- product


ENTITY product_category;
	name : label;
	description : OPTIONAL text;
DERIVE
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- product_category


ENTITY product_category_relationship;
	name : label;
	description : OPTIONAL text;
	category : product_category;
	sub_category : product_category;
WHERE
	WR1 : acyclic_product_category_relationship(SELF, [SELF.sub_category]);
END_ENTITY; -- product_category_relationship


ENTITY product_concept;
	id : identifier;
	name : label;
	description : OPTIONAL text;
	market_context : product_concept_context;
UNIQUE
	UR1 : id;
END_ENTITY; -- product_concept


ENTITY product_concept_context
	SUBTYPE OF (application_context_element);
	market_segment_type : label;
END_ENTITY; -- product_concept_context


ENTITY product_context
	SUBTYPE OF (application_context_element);
	discipline_type : label;
END_ENTITY; -- product_context


ENTITY product_definition;
	id : identifier;
	description : OPTIONAL text;
	formation : product_definition_formation;
	frame_of_reference : product_definition_context;
DERIVE
	name : label := get_name_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
END_ENTITY; -- product_definition


ENTITY product_definition_context
	SUBTYPE OF (application_context_element);
	life_cycle_stage : label;
END_ENTITY; -- product_definition_context


ENTITY product_definition_context_association;
	definition : product_definition;
	frame_of_reference : product_definition_context;
	role : product_definition_context_role;
END_ENTITY; -- product_definition_context_association


ENTITY product_definition_context_role;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- product_definition_context_role


ENTITY product_definition_effectivity
	SUBTYPE OF (effectivity);
	usage : product_definition_relationship;
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'MANAGEMENT_RESOURCES_SCHEMA.' + 'EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY'))= 0;
END_ENTITY; -- product_definition_effectivity


ENTITY product_definition_formation;
	id : identifier;
	description : OPTIONAL text;
	of_product : product;
UNIQUE
	UR1 : id, of_product;
END_ENTITY; -- product_definition_formation


ENTITY product_definition_formation_relationship;
	id : identifier;
	name : label;
	description : OPTIONAL text;
	relating_product_definition_formation : product_definition_formation;
	related_product_definition_formation : product_definition_formation;
END_ENTITY; -- product_definition_formation_relationship


ENTITY product_definition_formation_with_specified_source
	SUBTYPE OF (product_definition_formation);
	make_or_buy : source;
END_ENTITY; -- product_definition_formation_with_specified_source


ENTITY product_definition_occurrence_relationship;
	name : label;
	description : OPTIONAL text;
	occurrence : product_definition;
	occurrence_usage : assembly_component_usage;
WHERE
	WR1 : occurrence_usage.relating_product_definition :<>: 
       occurrence;
	WR2 : occurrence_usage.related_product_definition :<>: 
       occurrence;
	WR3 : occurrence.formation :=:
       occurrence_usage.related_product_definition.formation;
END_ENTITY; -- product_definition_occurrence_relationship


ENTITY product_definition_relationship;
	id : identifier;
	name : label;
	description : OPTIONAL text;
	relating_product_definition : product_definition;
	related_product_definition : product_definition;
END_ENTITY; -- product_definition_relationship


ENTITY product_definition_shape
	SUBTYPE OF (property_definition);
UNIQUE
	UR1 : definition;
WHERE
	WR1 : SIZEOF(['AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.CHARACTERIZED_PRODUCT_DEFINITION', 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.CHARACTERIZED_OBJECT'] * TYPEOF(SELF\property_definition.definition))> 0;
END_ENTITY; -- product_definition_shape


ENTITY product_definition_substitute;
	description : OPTIONAL text;
	context_relationship : product_definition_relationship;
	substitute_definition : product_definition;
DERIVE
	name : label := get_name_value(SELF);
WHERE
	WR1 : context_relationship.related_product_definition :<>: substitute_definition;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
END_ENTITY; -- product_definition_substitute


ENTITY product_definition_usage
	SUPERTYPE OF (ONEOF (make_from_usage_option, assembly_component_usage))
	SUBTYPE OF (product_definition_relationship);
UNIQUE
	UR1 : id, relating_product_definition, related_product_definition;
WHERE
	WR1 : acyclic_product_definition_relationship
        (SELF,
         [SELF\product_definition_relationship.related_product_definition],
         'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.PRODUCT_DEFINITION_USAGE');
END_ENTITY; -- product_definition_usage


ENTITY product_definition_with_associated_documents
	SUBTYPE OF (product_definition);
	documentation_ids : SET [1:?] OF document;
END_ENTITY; -- product_definition_with_associated_documents


ENTITY product_material_composition_relationship
	SUBTYPE OF (product_definition_relationship);
	class : label;
	constituent_amount : SET [1:?] OF measure_with_unit;
	composition_basis : label;
	determination_method : text;
END_ENTITY; -- product_material_composition_relationship


ENTITY product_related_product_category
	SUBTYPE OF (product_category);
	products : SET [1:?] OF product;
END_ENTITY; -- product_related_product_category


ENTITY promissory_usage_in_product_model
	SUBTYPE OF (group);
WHERE
	WR1 : SIZEOF(QUERY(aga <* USEDIN(SELF,
        'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
        'GROUP_ASSIGNMENT.ASSIGNED_GROUP')| 
        'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
        'APPLIED_PROMISSORY_USAGE_IN_PRODUCT_MODEL_ASSIGNMENT' IN TYPEOF(aga))
         )>= 1;
END_ENTITY; -- promissory_usage_in_product_model


ENTITY promissory_usage_occurrence
	SUBTYPE OF (assembly_component_usage);
END_ENTITY; -- promissory_usage_occurrence


ENTITY property_definition;
	name : label;
	description : OPTIONAL text;
	definition : characterized_definition;
DERIVE
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- property_definition


ENTITY property_definition_relationship;
	name : label;
	description : text;
	relating_property_definition : property_definition;
	related_property_definition : property_definition;
END_ENTITY; -- property_definition_relationship


ENTITY property_definition_representation;
	definition : represented_definition;
	used_representation : representation;
DERIVE
	description : text := get_description_value(SELF);
	name : label := get_name_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'NAME_ATTRIBUTE.NAMED_ITEM'))<= 1;
END_ENTITY; -- property_definition_representation


ENTITY qualified_representation_item
	SUBTYPE OF (representation_item);
	qualifiers : SET [1:?] OF value_qualifier;
WHERE
	WR1 : SIZEOF(QUERY(temp <* qualifiers |
             'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.PRECISION_QUALIFIER'
             IN TYPEOF(temp)))< 2;
END_ENTITY; -- qualified_representation_item


ENTITY qualitative_uncertainty
	SUBTYPE OF (uncertainty_qualifier);
	uncertainty_value : text;
END_ENTITY; -- qualitative_uncertainty


ENTITY quantified_assembly_component_usage
	SUBTYPE OF (assembly_component_usage);
	quantity : measure_with_unit;
WHERE
	WR1 : (NOT('NUMBER' IN TYPEOF(quantity.value_component)))
       OR(quantity.value_component > 0);
END_ENTITY; -- quantified_assembly_component_usage


ENTITY ratio_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.RATIO_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- ratio_measure_with_unit


ENTITY ratio_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- ratio_unit


ENTITY relative_event_occurrence
	SUBTYPE OF (event_occurrence);
	base_event : event_occurrence;
	offset : time_measure_with_unit;
END_ENTITY; -- relative_event_occurrence


ENTITY representation;
	name : label;
	items : SET [1:?] OF representation_item;
	context_of_items : representation_context;
DERIVE
	description : text := get_description_value(SELF);
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                             'ID_ATTRIBUTE.IDENTIFIED_ITEM'))
       <= 1;
	WR2 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' +
                             'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))
       <= 1;
END_ENTITY; -- representation


ENTITY representation_context;
	context_identifier : identifier;
	context_type : text;
INVERSE
	representations_in_context: SET [1:?] OF representation FOR context_of_items;
END_ENTITY; -- representation_context


ENTITY representation_item;
	name : label;
WHERE
	WR1 : SIZEOF(using_representations(SELF))> 0;
END_ENTITY; -- representation_item


ENTITY representation_relationship;
	name : label;
	description : OPTIONAL text;
	rep_1 : representation;
	rep_2 : representation;
END_ENTITY; -- representation_relationship


ENTITY requirement_assigned_object
	SUBTYPE OF (group_assignment);
	items : SET [1:1] OF requirement_assigned_item;
	SELF\group_assignment.assigned_group : requirement_assignment;
END_ENTITY; -- requirement_assigned_object


ENTITY requirement_assignment
	SUBTYPE OF (characterized_object, group);
END_ENTITY; -- requirement_assignment


ENTITY requirement_source
	SUBTYPE OF (group);
END_ENTITY; -- requirement_source


ENTITY resource_property;
	name : label;
	description : text;
	resource : characterized_resource_definition;
END_ENTITY; -- resource_property


ENTITY resource_requirement_type;
	name : label;
	description : text;
END_ENTITY; -- resource_requirement_type


ENTITY role_association;
	role : object_role;
	item_with_role : role_select;
END_ENTITY; -- role_association


ENTITY security_classification;
	name : label;
	purpose : text;
	security_level : security_classification_level;
END_ENTITY; -- security_classification


ENTITY security_classification_assignment
	ABSTRACT SUPERTYPE;
	assigned_security_classification : security_classification;
DERIVE
	role : object_role := get_role(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE'))<= 1;
END_ENTITY; -- security_classification_assignment


ENTITY security_classification_level;
	name : label;
END_ENTITY; -- security_classification_level


ENTITY serial_numbered_effectivity
	SUBTYPE OF (effectivity);
	effectivity_start_id : identifier;
	effectivity_end_id : OPTIONAL identifier;
END_ENTITY; -- serial_numbered_effectivity


ENTITY shape_aspect;
	name : label;
	description : OPTIONAL text;
	of_shape : product_definition_shape;
	product_definitional : LOGICAL;
DERIVE
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- shape_aspect


ENTITY shape_aspect_relationship;
	name : label;
	description : OPTIONAL text;
	relating_shape_aspect : shape_aspect;
	related_shape_aspect : shape_aspect;
DERIVE
	id : identifier := get_id_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))<= 1;
END_ENTITY; -- shape_aspect_relationship


ENTITY shape_definition_representation
	SUBTYPE OF (property_definition_representation);
WHERE
	WR1 : ('PRODUCT_PROPERTY_DEFINITION_SCHEMA.PRODUCT_DEFINITION_SHAPE' IN  TYPEOF (SELF.definition))OR('PRODUCT_PROPERTY_DEFINITION_SCHEMA.SHAPE_DEFINITION' IN TYPEOF(SELF.definition.definition));
	WR2 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.SHAPE_REPRESENTATION' IN TYPEOF(SELF.used_representation);
END_ENTITY; -- shape_definition_representation


ENTITY shape_representation
	SUBTYPE OF (representation);
END_ENTITY; -- shape_representation


ENTITY shape_representation_relationship
	SUBTYPE OF (representation_relationship);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.SHAPE_REPRESENTATION' IN(TYPEOF(SELF\representation_relationship.rep_1)+ TYPEOF(SELF\representation_relationship.rep_2));
END_ENTITY; -- shape_representation_relationship


ENTITY si_unit
	SUBTYPE OF (named_unit);
	prefix : OPTIONAL si_prefix;
	name : si_unit_name;
DERIVE
	SELF\named_unit.dimensions : dimensional_exponents := dimensions_for_si_unit(name);
END_ENTITY; -- si_unit


ENTITY solid_angle_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- solid_angle_measure_with_unit


ENTITY solid_angle_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- solid_angle_unit


ENTITY source_for_requirement
	SUBTYPE OF (group_assignment);
	items : SET [1:1] OF requirement_source_item;
	SELF\group_assignment.assigned_group : requirement_source;
END_ENTITY; -- source_for_requirement


ENTITY sourced_requirement
	SUBTYPE OF (group_assignment);
	items : SET [1:1] OF product_definition;
	SELF\group_assignment.assigned_group : requirement_source;
END_ENTITY; -- sourced_requirement


ENTITY specified_higher_usage_occurrence
	SUBTYPE OF (assembly_component_usage);
	upper_usage : assembly_component_usage;
	next_usage : next_assembly_usage_occurrence;
UNIQUE
	UR1 : upper_usage, next_usage;
WHERE
	WR1 : SELF :<>: upper_usage;
	WR2 : SELF\product_definition_relationship.relating_product_definition
       :=: upper_usage.relating_product_definition;
	WR3 : SELF\product_definition_relationship.related_product_definition
       :=: next_usage.related_product_definition;
	WR4 : (upper_usage.related_product_definition :=:
       next_usage.relating_product_definition)OR
      (SIZEOF(QUERY(pdr <* USEDIN(upper_usage.related_product_definition,
       'PRODUCT_DEFINITION_SCHEMA.PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION')|
        pdr.relating_product_definition :=: 
        next_usage.relating_product_definition))= 1);
	WR5 : SIZEOF(['AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE',
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.SPECIFIED_HIGHER_USAGE_OCCURRENCE']
       * TYPEOF(upper_usage))= 1;
END_ENTITY; -- specified_higher_usage_occurrence


ENTITY standard_uncertainty
	SUBTYPE OF (uncertainty_qualifier);
	uncertainty_value : REAL;
END_ENTITY; -- standard_uncertainty


ENTITY supplied_part_relationship
	SUBTYPE OF (product_definition_relationship);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PRODUCT_DEFINITION_FORMATION_WITH_SPECIFIED_SOURCE' IN
       TYPEOF(SELF.related_product_definition.formation);
	WR2 : NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PROPERTY_DEFINITION.DEFINITION' IN ROLESOF(SELF));
END_ENTITY; -- supplied_part_relationship


ENTITY thermodynamic_temperature_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- thermodynamic_temperature_measure_with_unit


ENTITY thermodynamic_temperature_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 0.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- thermodynamic_temperature_unit


ENTITY time_interval;
	id : identifier;
	name : label;
	description : OPTIONAL text;
END_ENTITY; -- time_interval


ENTITY time_interval_based_effectivity
	SUBTYPE OF (effectivity);
	effectivity_period : time_interval;
END_ENTITY; -- time_interval_based_effectivity


ENTITY time_interval_relationship;
	name : label;
	description : OPTIONAL text;
	relating_time_interval : time_interval;
	related_time_interval : time_interval;
END_ENTITY; -- time_interval_relationship


ENTITY time_interval_with_bounds
	SUBTYPE OF (time_interval);
	primary_bound : OPTIONAL date_time_or_event_occurrence;
	secondary_bound : OPTIONAL date_time_or_event_occurrence;
	duration : OPTIONAL time_measure_with_unit;
WHERE
	WR1 : NOT(EXISTS(secondary_bound)AND EXISTS(duration));
	WR2 : EXISTS(primary_bound)OR EXISTS(secondary_bound);
END_ENTITY; -- time_interval_with_bounds


ENTITY time_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.TIME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- time_measure_with_unit


ENTITY time_role;
	name : label;
DERIVE
	description : text := get_description_value(SELF);
WHERE
	WR1 : SIZEOF(USEDIN(SELF, 'BASIC_ATTRIBUTE_SCHEMA.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))<= 1;
END_ENTITY; -- time_role


ENTITY time_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 0.0)AND (SELF\named_unit.dimensions.mass_exponent = 0.0)AND (SELF\named_unit.dimensions.time_exponent = 1.0)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
END_ENTITY; -- time_unit


ENTITY type_qualifier;
	name : label;
END_ENTITY; -- type_qualifier


ENTITY uncertainty_measure_with_unit
	SUBTYPE OF (measure_with_unit);
	name : label;
	description : OPTIONAL text;
WHERE
	WR1 : valid_measure_value(SELF\measure_with_unit.value_component);
END_ENTITY; -- uncertainty_measure_with_unit


ENTITY uncertainty_qualifier
	SUPERTYPE OF (ONEOF (standard_uncertainty, qualitative_uncertainty));
	measure_name : label;
	description : text;
END_ENTITY; -- uncertainty_qualifier


ENTITY value_range
	SUBTYPE OF (compound_representation_item);
WHERE
	WR1 : ('value_with_unit_mim.'+ 'SET_REPRESENTATION_ITEM' IN TYPEOF(item_element))AND value_range_wr1(item_element);
	WR2 : value_range_wr2(item_element);
	WR3 : value_range_wr3(item_element);
END_ENTITY; -- value_range


ENTITY value_representation_item
	SUBTYPE OF (representation_item);
	value_component : measure_value;
WHERE
	WR1 : SIZEOF(QUERY(rep <* using_representations(SELF)|
       NOT('MEASURE_SCHEMA.GLOBAL_UNIT_ASSIGNED_CONTEXT'
       IN TYPEOF(rep.context_of_items)
      )))= 0;
END_ENTITY; -- value_representation_item


ENTITY versioned_action_request;
	id : identifier;
	version : label;
	purpose : text;
	description : OPTIONAL text;
END_ENTITY; -- versioned_action_request


ENTITY volume_measure_with_unit
	SUBTYPE OF (measure_with_unit);
WHERE
	WR1 : 'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.VOLUME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY; -- volume_measure_with_unit


ENTITY volume_unit
	SUBTYPE OF (named_unit);
WHERE
	WR1 : (SELF\named_unit.dimensions.length_exponent = 3.000000)AND (SELF\named_unit.dimensions.mass_exponent = 0.000000)AND (SELF\named_unit.dimensions.time_exponent = 0.000000)AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000)AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000)AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000)AND(SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000);
END_ENTITY; -- volume_unit


RULE approval_requires_approval_date_time FOR (approval, approval_date_time);
WHERE
	WR1 : SIZEOF(QUERY(app <* approval |
       NOT(SIZEOF(QUERY(adt <* approval_date_time |
       app :=: adt.dated_approval))= 1)))= 0;
END_RULE; -- approval_requires_approval_date_time

RULE approval_requires_approval_person_organization FOR (approval, approval_person_organization);
WHERE
	WR1 : SIZEOF(QUERY(app <* approval |
       NOT(SIZEOF(QUERY(apo <* approval_person_organization |
       app :=: apo.authorized_approval))>= 1)))= 0;
END_RULE; -- approval_requires_approval_person_organization

RULE approval_role_constraint FOR (approval_role);
WHERE
	WR1 : SIZEOF(QUERY(apr <* approval_role |
       NOT(apr\approval_role.role = 'authorizer')
      ))= 0;
END_RULE; -- approval_role_constraint

RULE approvals_are_assigned FOR (approval, approval_assignment);
WHERE
	WR1 : SIZEOF(QUERY(app <* approval |
       NOT(SIZEOF(QUERY(aa <* approval_assignment |
       app :=: aa.assigned_approval))>= 1)))= 0;
END_RULE; -- approvals_are_assigned

RULE certification_requires_date_or_date_and_time FOR (certification, applied_date_and_time_assignment, applied_date_assignment);
WHERE
	WR1 : SIZEOF(QUERY(cert <* certification |
       NOT((SIZEOF(QUERY(adata <* applied_date_and_time_assignment |
       cert IN  adata.items))= 1)OR
      (SIZEOF(QUERY(ada <* applied_date_assignment |
       cert IN ada.items))= 1))))= 0;
END_RULE; -- certification_requires_date_or_date_and_time

RULE certification_unique_constraint FOR (certification);LOCAL

  r :  BAG  OF  certification := QUERY(r <* certification | TRUE);

  pass :  BOOLEAN := TRUE;

  name_bag :  BAG OF STRING := [];

END_LOCAL
;


REPEAT i := 1 TO SIZEOF(r)BY 1;

  IF  EXISTS(r[i]\certification.name)THEN
    IF(r[i]\certification.name IN name_bag)THEN
      pass := FALSE;

      ESCAPE;

    ELSE
      name_bag := name_bag + r[i]\certification.name;

    END_IF;

  END_IF;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- certification_unique_constraint

RULE configuration_item_requires_person_organization FOR (configuration_item, applied_person_and_organization_assignment, applied_organization_assignment);
WHERE
	WR1 : SIZEOF(QUERY(ci <* configuration_item |
       NOT((SIZEOF(QUERY(apaoa <*
       applied_person_and_organization_assignment |
       ci IN  apaoa.items))= 1)OR
      (SIZEOF(QUERY(aoa <*
       applied_organization_assignment |
       ci IN aoa.items))= 1))))= 0;
END_RULE; -- configuration_item_requires_person_organization

RULE contract_unique_constraint FOR (contract);LOCAL

  r : BAG  OF  contract := QUERY(r <* contract | TRUE);

  pass : BOOLEAN := TRUE;

  name_bag : BAG OF STRING := [];

END_LOCAL
;


REPEAT i := 1 TO SIZEOF(r)BY 1;

  IF  EXISTS(r[i]\contract.name)THEN
    IF(r[i]\contract.name IN name_bag)THEN
      pass := FALSE;

      ESCAPE;

    ELSE
      name_bag := name_bag + r[i]\contract.name;

    END_IF;

  END_IF;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- contract_unique_constraint

RULE date_and_time_require_minute_and_second FOR (date_and_time);
WHERE
	WR1 : SIZEOF(QUERY(dat <* date_and_time |
              NOT(Exists(dat.time_component.minute_component))))= 0;
	WR2 : SIZEOF(QUERY(dat <* date_and_time |
              NOT(Exists(dat.time_component.second_component))))= 0;
END_RULE; -- date_and_time_require_minute_and_second

RULE date_constraint FOR (date);
WHERE
	WR1 : SIZEOF(QUERY(d <* date |
       d.year_component < 1856))= 0;
END_RULE; -- date_constraint

RULE dependent_instantiable_action_directive FOR (action_directive);
WHERE
	WR1 : SIZEOF(QUERY(ad <* action_directive |
       NOT(SIZEOF(USEDIN(ad, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_action_directive

RULE dependent_instantiable_approval_status FOR (approval_status);
WHERE
	WR1 : SIZEOF(QUERY(ast <* approval_status |
     NOT(SIZEOF(USEDIN(ast, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_approval_status

RULE dependent_instantiable_certification_type FOR (certification_type);
WHERE
	WR1 : SIZEOF(QUERY(ct <* certification_type |
       NOT(SIZEOF(USEDIN(ct, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_certification_type

RULE dependent_instantiable_contract_type FOR (contract_type);
WHERE
	WR1 : SIZEOF(QUERY(ct <* contract_type |
       NOT(SIZEOF(USEDIN(ct, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_contract_type

RULE dependent_instantiable_date FOR (date);
WHERE
	WR1 : SIZEOF(QUERY(dt <* date |
       NOT(SIZEOF(USEDIN(dt, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_date

RULE dependent_instantiable_date_role FOR (date_role);
WHERE
	WR1 : SIZEOF(QUERY(dr <* date_role |
       NOT(SIZEOF(USEDIN(dr, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_date_role

RULE dependent_instantiable_date_time_role FOR (date_time_role);
WHERE
	WR1 : SIZEOF(QUERY(dtr <* date_time_role |
       NOT(SIZEOF(USEDIN(dtr, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_date_time_role

RULE dependent_instantiable_document_type FOR (document_type);
WHERE
	WR1 : SIZEOF(QUERY(dt <* document_type |
       NOT(SIZEOF(USEDIN(dt, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_document_type

RULE dependent_instantiable_named_unit FOR (named_unit);
WHERE
	WR1 : SIZEOF(QUERY(nu <* named_unit |
       NOT(SIZEOF(USEDIN(nu, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_named_unit

RULE dependent_instantiable_organization_role FOR (organization_role);
WHERE
	WR1 : SIZEOF(QUERY(org <* organization_role |
       NOT(SIZEOF(USEDIN(org, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_organization_role

RULE dependent_instantiable_parametric_representation_context FOR (parametric_representation_context);
WHERE
	WR1 : SIZEOF(QUERY(prc <* parametric_representation_context |
       NOT(SIZEOF(USEDIN(prc, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_parametric_representation_context

RULE dependent_instantiable_person_and_organization_role FOR (person_and_organization_role);
WHERE
	WR1 : SIZEOF(QUERY(poar <* person_and_organization_role |
       NOT(SIZEOF(USEDIN(poar, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_person_and_organization_role

RULE dependent_instantiable_representation_item FOR (representation_item);
WHERE
	WR1 : SIZEOF(QUERY(ri <* representation_item |
       NOT(SIZEOF(USEDIN(ri, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_representation_item

RULE dependent_instantiable_security_classification_level FOR (security_classification_level);
WHERE
	WR1 : SIZEOF(QUERY(scl <* security_classification_level |
       NOT(SIZEOF(USEDIN(scl, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_security_classification_level

RULE dependent_instantiable_shape_representation FOR (shape_representation);
WHERE
	WR1 : SIZEOF(QUERY(sr <* shape_representation |
       NOT(SIZEOF(USEDIN(sr, ''))>= 1)))= 0;
END_RULE; -- dependent_instantiable_shape_representation

RULE directed_action_requires_approval FOR (directed_action, applied_approval_assignment);
WHERE
	WR1 : SIZEOF(QUERY(da <* directed_action |
       NOT(SIZEOF(QUERY(aaa <* applied_approval_assignment |
       da IN aaa.items))= 1)))= 0;
END_RULE; -- directed_action_requires_approval

RULE directed_action_requires_date_or_date_and_time FOR (directed_action, applied_date_and_time_assignment, applied_date_assignment);
WHERE
	WR1 : SIZEOF(QUERY(da <* directed_action |
       NOT((SIZEOF(QUERY(adata <* applied_date_and_time_assignment |
      (da IN  adata.items)
       AND (adata.role\date_time_role.name = 'start date')))= 1)OR
      (SIZEOF(QUERY(ada <* applied_date_assignment |
      (da IN ada.items)
       AND(ada.role\date_role.name = 'start date')))= 1))))= 0;
END_RULE; -- directed_action_requires_date_or_date_and_time

RULE ee_product_configuration_unique_constraint FOR (configuration_item);LOCAL

  id_bag : BAG  OF  STRING := [];

  ci_bag : BAG  OF  configuration_item;

  cd_bag : BAG  OF  configuration_design;

  pass : BOOLEAN := TRUE;

  pdf_bag : BAG OF product_definition_formation;

END_LOCAL
;


REPEAT i := 1 TO  SIZEOF(configuration_item)BY  1;

  IF  EXISTS(configuration_item[i].id)THEN
    IF(NOT(configuration_item[i].id IN  id_bag))THEN
      id_bag := id_bag + configuration_item[i].id;

    END_IF;

  END_IF;

END_REPEAT;


REPEAT i := 1 TO  SIZEOF(id_bag)BY  1;

  IF(NOT  pass)THEN  ESCAPE;

  END_IF;

  pdf_bag := [];

  ci_bag := QUERY(ci <* configuration_item |(ci.id = id_bag[i]));

  REPEAT  j := 1 TO  SIZEOF(ci_bag)BY  1;

    IF(NOT pass)THEN ESCAPE;

    END_IF;

    cd_bag := USEDIN(ci_bag[j], 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'CONFIGURATION_DESIGN.CONFIGURATION');

    REPEAT k := 1 TO SIZEOF(cd_bag)BY 1;

      IF  EXISTS(cd_bag[k].design)THEN
        IF(cd_bag[k].design IN pdf_bag)THEN
          pass := FALSE;

          ESCAPE;

        ELSE
          pdf_bag := pdf_bag + cd_bag[k].design;

        END_IF;

      END_IF;

    END_REPEAT;

  END_REPEAT;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- ee_product_configuration_unique_constraint

RULE ee_product_constraint FOR (product);
WHERE
	WR1 : SIZEOF(QUERY(prod <* product |
       NOT((SIZEOF(QUERY(aoa <* USEDIN(prod,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')
       |(aoa.role\organization_role.name = 'design owner')
      ))= 1)OR 
      (SIZEOF(QUERY(apaoa <* USEDIN(prod,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS')
       |(apaoa.role\person_and_organization_role.name = 'design owner')
      ))= 1))))= 0;
	WR2 : SIZEOF(QUERY(p <* product |
              SIZEOF(USEDIN(p,
              'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
              + 'PRODUCT_DEFINITION_FORMATION.OF_PRODUCT'))= 0))= 0;
END_RULE; -- ee_product_constraint

RULE ee_product_definition_constraint FOR (product_definition_with_associated_documents);
WHERE
	WR1 : SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT(
      (SIZEOF(QUERY(adata <* USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS')
       |(adata.role\date_time_role.name = 'creation date')
      ))= 1))))= 0;
	WR2 : SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT((SIZEOF(QUERY(aoa <* USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')
       |(aoa.role\organization_role.name = 'creator')
      ))= 1)OR 
      (SIZEOF(QUERY(apaoa <* USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS')
       |(apaoa.role\person_and_organization_role.name = 'creator')
      ))= 1))
      ))= 0;
	WR3 : SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT(
      (SIZEOF(USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_APPROVAL_ASSIGNMENT.ITEMS')
     )= 1)
      )
      ))= 0;
	WR4 : SIZEOF(QUERY(pdwad <* product_definition_with_associated_documents |
       NOT(
      (SIZEOF(USEDIN(pdwad,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.ITEMS')
     )= 1)
      )
      ))= 0;
END_RULE; -- ee_product_definition_constraint

RULE ee_product_model_unique_constraint FOR (product_concept);LOCAL

  r : BAG  OF  product_concept := QUERY(r <* product_concept | TRUE);

  pass : BOOLEAN := TRUE;

  id_bag : BAG OF STRING := [];

END_LOCAL
;


REPEAT i := 1 TO SIZEOF(r)BY 1;

  IF  EXISTS(r[i].id)THEN
    IF(r[i]\product_concept.id IN id_bag)THEN
      pass := FALSE;

      ESCAPE;

    ELSE
      id_bag := id_bag + r[i].id;

    END_IF;

  END_IF;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- ee_product_model_unique_constraint

RULE ee_product_unique_constraint FOR (product);LOCAL

  id_bag : BAG  OF  STRING := [];

  p_bag : BAG  OF  product;

  aoa_bag : BAG  OF  applied_organization_assignment;

  apaoa_bag : BAG  OF  applied_person_and_organization_assignment;

  pass : BOOLEAN := TRUE;

  o_bag : BAG  OF  organization;

  pao_bag : BAG OF person_and_organization;

END_LOCAL
;


REPEAT i := 1 TO  SIZEOF(product)BY  1;

  IF  EXISTS(product[i].id)THEN
    IF(NOT(product[i].id IN  id_bag))THEN
      id_bag := id_bag + product[i].id;

    END_IF;

  END_IF;

END_REPEAT;


REPEAT i := 1 TO  SIZEOF(id_bag)BY  1;

  IF(NOT  pass)THEN  ESCAPE;

  END_IF;

  o_bag := [];

  pao_bag := [];

  p_bag := QUERY(p <* product |(p.id = id_bag[i]));

  REPEAT  j := 1 TO  SIZEOF(p_bag)BY  1;

    IF(NOT pass)THEN ESCAPE;

    END_IF;

    aoa_bag := QUERY(aoa <* USEDIN(p_bag[j], 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')| 
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'ORGANIZATION' IN  TYPEOF(aoa.assigned_organization))AND 
(aoa.role\organization_role.name = 'design owner')));

    REPEAT  k := 1 TO  SIZEOF(aoa_bag)BY  1;

      IF  EXISTS(aoa_bag[k].assigned_organization)THEN
        IF(aoa_bag[k].assigned_organization IN  o_bag)THEN
          pass := FALSE;

          ESCAPE;

        ELSE
          o_bag := o_bag + aoa_bag[k].assigned_organization;

        END_IF;

      END_IF;

    END_REPEAT;

    apaoa_bag := QUERY(apaoa <* USEDIN(p_bag[j], 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.'
+ 'APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.ITEMS')| 
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'PERSON_AND_ORGANIZATION' IN  
TYPEOF(apaoa.assigned_person_and_organization))
AND(apaoa.role\person_and_organization_role.name = 'design owner')));

    REPEAT k := 1 TO SIZEOF(apaoa_bag)BY 1;

      IF  EXISTS(apaoa_bag[k].assigned_person_and_organization)THEN
        IF(apaoa_bag[k].assigned_person_and_organization IN pao_bag)THEN
          pass := FALSE;

          ESCAPE;

        ELSE
          pao_bag := pao_bag + 
                     apaoa_bag[k].assigned_person_and_organization;

        END_IF;

      END_IF;

    END_REPEAT;

  END_REPEAT;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- ee_product_unique_constraint

RULE ee_product_version_supersedence_constraint FOR (product_definition_formation_relationship);
WHERE
	WR1 : SIZEOF(QUERY(pdfr <* product_definition_formation_relationship |
      ((pdfr\product_definition_formation_relationship.name = 'product version supersedence')
       AND(NOT(pdfr.relating_product_definition_formation.of_product :=:
           pdfr.related_product_definition_formation.of_product)))
      ))= 0;
END_RULE; -- ee_product_version_supersedence_constraint

RULE next_higher_assembly_relationship_constraint FOR (next_assembly_usage_occurrence);
WHERE
	WR1 : SIZEOF(QUERY(nauo <* next_assembly_usage_occurrence|
       NOT(SIZEOF(QUERY(pd <* USEDIN(nauo,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'PROPERTY_DEFINITION.DEFINITION')|
      ((SIZEOF(QUERY(pdr <* USEDIN(pd,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')|
       ('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'COMPONENT_LOCATION' IN  TYPEOF(pdr.used_representation))
       AND  
      (pdr.used_representation.context_of_items\geometric_representation_context.
       coordinate_space_dimension = 3)
      ))<= 1)
       AND
      (SIZEOF(QUERY(pdr <* USEDIN(pd,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')|
       ('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'COMPONENT_LOCATION' IN TYPEOF(pdr.used_representation))
       AND 
      (pdr.used_representation.context_of_items\geometric_representation_context.
       coordinate_space_dimension = 2)
      ))<= 1))
      ))<= 1)
      ))= 0;
END_RULE; -- next_higher_assembly_relationship_constraint

RULE organization_unique_constraint FOR (organization);LOCAL

  r : BAG  OF  organization := QUERY(r <* organization | TRUE);

  pass : BOOLEAN := TRUE;

  id_bag : BAG OF STRING := [];

END_LOCAL
;


REPEAT i := 1 TO SIZEOF(r)BY 1;

  IF  EXISTS(r[i].id)THEN
    IF(r[i]\organization.id IN id_bag)THEN
      pass := FALSE;

      ESCAPE;

    ELSE
      id_bag := id_bag + r[i].id;

    END_IF;

  END_IF;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- organization_unique_constraint

RULE planned_effectivity_constraint FOR (configuration_effectivity);
WHERE
	WR1 : SIZEOF(QUERY(ce <* configuration_effectivity |
       NOT(('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(ce.usage))
       AND(ce.usage\product_definition_relationship.name = 'assembly composition'))
      ))= 0;
	WR2 : SIZEOF(QUERY(ce <* configuration_effectivity |
       SIZEOF(USEDIN(ce,
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.'
       + 'APPLIED_APPROVAL_ASSIGNMENT.ITEMS'))= 0 
      ))= 0;
END_RULE; -- planned_effectivity_constraint

RULE planned_effectivity_unique_constraint FOR (configuration_effectivity);LOCAL

  ce_bag : BAG  OF  configuration_effectivity;

  ci_bag : BAG  OF  configuration_item := [];

  pass : BOOLEAN := TRUE;

  acu_bag : BAG OF assembly_component_usage;

END_LOCAL
;


REPEAT i := 1 TO  SIZEOF(configuration_effectivity)BY  1;

  IF  EXISTS(configuration_effectivity[i].configuration.configuration)THEN
    IF(NOT(configuration_effectivity[i].configuration.configuration IN  
                                                            ci_bag))THEN
      ci_bag := ci_bag + 
               configuration_effectivity[i].configuration.configuration;

    END_IF;

  END_IF;

END_REPEAT;


REPEAT i := 1 TO  SIZEOF(ci_bag)BY  1;

  IF(NOT pass)THEN ESCAPE;

  END_IF;

  ce_bag := QUERY(r <* configuration_effectivity |
((r.configuration.configuration :=: ci_bag[i])AND 
                             (r.usage\product_definition_relationship.name = 'assembly composition')
AND('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'ASSEMBLY_COMPONENT_USAGE' IN  TYPEOF(r.usage))));

  acu_bag := [];

  REPEAT j := 1 TO SIZEOF(ce_bag)BY 1;

    IF  EXISTS(ce_bag[j].usage)THEN
      IF(ce_bag[j].usage IN acu_bag)THEN
        pass := FALSE;

        ESCAPE;

      ELSE
        acu_bag := acu_bag + ce_bag[j].usage;

      END_IF;

    END_IF;

  END_REPEAT;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- planned_effectivity_unique_constraint

RULE product_concept_requires_configuration_item FOR (product_concept, configuration_item);
WHERE
	WR1 : SIZEOF(QUERY(pc <* product_concept |
       NOT(SIZEOF(QUERY(ci <* configuration_item |
       pc :=: ci.item_concept))>=1)))= 0;
END_RULE; -- product_concept_requires_configuration_item

RULE product_definition_formation_requires_person_organization FOR (product_definition, applied_person_and_organization_assignment, applied_organization_assignment);
WHERE
	WR1 : SIZEOF(QUERY(pd <* product_definition|
      (NOT('AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'ASSEMBLY_GROUP_COMPONENT_DEFINITION' IN  TYPEOF(pd)))AND
      (NOT((SIZEOF(QUERY(apaoa <*
       applied_person_and_organization_assignment |
      (pd.formation IN  apaoa.items)AND (apaoa.role\person_and_organization_role.name = 'creator')))= 1)OR
      (SIZEOF(QUERY(aoa <*
       applied_organization_assignment |
      (pd.formation IN aoa.items)AND(aoa.role\organization_role.name = 'creator')))= 1)))))= 0;
END_RULE; -- product_definition_formation_requires_person_organization

RULE product_requires_person_organization FOR (product, applied_person_and_organization_assignment, applied_organization_assignment);
WHERE
	WR1 : SIZEOF(QUERY(prod <* product |
       NOT((SIZEOF(QUERY(apaoa <*
       applied_person_and_organization_assignment |
       prod IN  apaoa.items))= 1)OR
      (SIZEOF(QUERY(aoa <*
       applied_organization_assignment |
       prod IN aoa.items))= 1))))= 0;
END_RULE; -- product_requires_person_organization

RULE product_requires_product_definition_formation FOR (product, product_definition_formation);
WHERE
	WR1 : SIZEOF(QUERY(prod <* product |
       NOT(SIZEOF(QUERY(pdf <* product_definition_formation |
       prod :=: pdf.of_product))>= 1)))= 0;
END_RULE; -- product_requires_product_definition_formation

RULE restrict_action_request_status FOR (action_request_status);
WHERE
	WR1 : SIZEOF(QUERY(ars <* action_request_status |
       NOT(ars\action_request_status.status IN
       ['proposed', 'in work', 'issued', 'hold'])))= 0;
END_RULE; -- restrict_action_request_status

RULE restrict_approval_status FOR (approval_status);
WHERE
	WR1 : SIZEOF(QUERY(ast <* approval_status |
       NOT(ast\approval_status.name IN
       ['approved', 'not yet approved', 'disapproved', 'withdrawn'])))= 0;
END_RULE; -- restrict_approval_status

RULE restrict_date_role FOR (date_role);
WHERE
	WR1 : SIZEOF(QUERY(dr <* date_role |
       NOT(dr\date_role.name IN ['creation date', 'request date', 'release date',
       'start date', 'contract date', 'certification date', 'sign off date',
       'classification date', 'declassification date'])))= 0;
END_RULE; -- restrict_date_role

RULE security_classification_constraint FOR (security_classification, applied_date_and_time_assignment, applied_date_assignment, applied_person_and_organization_assignment, applied_approval_assignment);
WHERE
	WR1 : SIZEOF(QUERY(sc <* security_classification |
       NOT((SIZEOF(QUERY(adata <* applied_date_and_time_assignment |
      (sc IN  adata.items)AND
      ('classification date' = adata.role\date_time_role.name)))= 1)OR
      (SIZEOF(QUERY(ada <* applied_date_assignment |
      (sc IN ada.items)AND
      ('classification date' = ada.role\date_role.name)))= 1))))= 0;
	WR2 : SIZEOF(QUERY(sc <* security_classification |
       SIZEOF(QUERY(apa <* applied_person_and_organization_assignment |
      (sc IN apa.items)AND
      (apa.role\person_and_organization_role.name = 'classification officer')
      ))= 0))= 0;
	WR3 : SIZEOF(QUERY(sc <* security_classification |
       SIZEOF(QUERY(aaa <* applied_approval_assignment |
      (sc IN aaa.items)))= 0))= 0;
END_RULE; -- security_classification_constraint

RULE subtype_exclusive_action_request_assignment FOR (action_request_assignment);
WHERE
	WR1 : SIZEOF(QUERY(ara <* action_request_assignment |
       NOT(SIZEOF([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'CHANGE_REQUEST',
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'START_REQUEST']
       * TYPEOF(ara))<= 1)))= 0;
END_RULE; -- subtype_exclusive_action_request_assignment

RULE subtype_exclusive_product_definition_relationship FOR (product_definition_relationship);
WHERE
	WR1 : SIZEOF(QUERY(pdr <* product_definition_relationship |
       NOT(SIZEOF([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PRODUCT_DEFINITION_USAGE', 
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP', 
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'SUPPLIED_PART_RELATIONSHIP']
       * TYPEOF(pdr))<= 1)))= 0;
END_RULE; -- subtype_exclusive_product_definition_relationship

RULE subtype_exclusive_property_definition_representation FOR (property_definition_representation);
WHERE
	WR1 : SIZEOF(QUERY(pdr <* property_definition_representation |
       NOT(SIZEOF([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'SHAPE_DEFINITION_REPRESENTATION',   
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'MATERIAL_PROPERTY_REPRESENTATION']
       * TYPEOF(pdr))<= 1)))= 0;
END_RULE; -- subtype_exclusive_property_definition_representation

RULE subtype_mandatory_address FOR (address);
WHERE
	WR1 : SIZEOF(QUERY(add <* address |
       NOT(SIZEOF([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'PERSONAL_ADDRESS',
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'ORGANIZATIONAL_ADDRESS'] * 
       TYPEOF(add))= 1)))= 0;
END_RULE; -- subtype_mandatory_address

RULE subtype_mandatory_date FOR (date);
WHERE
	WR1 : SIZEOF(QUERY(d <* date |
       NOT(
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'CALENDAR_DATE'
       IN TYPEOF(d))))= 0;
END_RULE; -- subtype_mandatory_date

RULE subtype_mandatory_product_definition_usage FOR (product_definition_usage);
WHERE
	WR1 : SIZEOF(QUERY(pdu <* product_definition_usage |
       NOT(SIZEOF([
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'ASSEMBLY_COMPONENT_USAGE',
       'AP210_PRODUCT_DATA_MANAGEMENT_MIM_LF.' +
       'MAKE_FROM_USAGE_OPTION'] * 
       TYPEOF(pdu))= 1)))= 0;
END_RULE; -- subtype_mandatory_product_definition_usage

RULE supplied_product_version_unique_constraint FOR (product_definition_formation_with_specified_source);LOCAL

  spv : BAG  OF  product_definition_formation_with_specified_source := 
QUERY(r <*
product_definition_formation_with_specified_source | 
(SIZEOF(QUERY(pd <* USEDIN(r,
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' + 
'PRODUCT_DEFINITION.FORMATION')|
(SIZEOF(QUERY(pdr <* USEDIN(pd, 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')|
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' + 
'SUPPLIED_PART_RELATIONSHIP')
IN TYPEOF(pdr))))>0)))>0));

  aoa_bag : BAG  OF  applied_organization_assignment;

  o_bag : BAG  OF  organization := [];

  pdf_bag : BAG  OF  product_definition_formation_with_specified_source;

  spn_bag : BAG OF STRING;

  pass : BOOLEAN := TRUE;

END_LOCAL
;


REPEAT i := 1 TO  SIZEOF(spv)BY  1;

  aoa_bag := QUERY(aoa <* USEDIN(spv[i], 
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')|(aoa.role\organization_role.name = 'supplier'));

  REPEAT  j := 1 TO  SIZEOF(aoa_bag)BY  1;

    IF  EXISTS(aoa_bag[j].assigned_organization)THEN
      IF(NOT(aoa_bag[j].assigned_organization IN  o_bag))THEN
        o_bag := o_bag + aoa_bag[j].assigned_organization;

      END_IF;

    END_IF;

  END_REPEAT;

END_REPEAT;


REPEAT i := 1 TO  SIZEOF(o_bag)BY  1;

  IF(NOT pass)THEN ESCAPE;

  END_IF;

  pdf_bag := QUERY(pdf <* spv |(SIZEOF(QUERY(aoa <* USEDIN(pdf,
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' + 
'APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')|
((aoa.role\organization_role.name = 'supplier')AND(aoa.assigned_organization :=: 
                                              o_bag[i]))))>0));

  spn_bag := [];

  REPEAT j := 1 TO SIZEOF(pdf_bag)BY 1;

    IF  EXISTS(pdf_bag[j].of_product.id)THEN
      IF(pdf_bag[j].of_product.id IN spn_bag)THEN
        pass := FALSE;

        ESCAPE;

      ELSE
        spn_bag := spn_bag + pdf_bag[j].of_product.id;

      END_IF;

    END_IF;

  END_REPEAT;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- supplied_product_version_unique_constraint

RULE versioned_action_request_requires_approval FOR (versioned_action_request, applied_approval_assignment);
WHERE
	WR1 : SIZEOF(QUERY(varq <* versioned_action_request |
       NOT(SIZEOF(QUERY(aaa <* applied_approval_assignment |
       varq IN aaa.items))= 1)))= 0;
END_RULE; -- versioned_action_request_requires_approval

RULE versioned_action_request_requires_date_or_date_and_time FOR (versioned_action_request, applied_date_and_time_assignment, applied_date_assignment);
WHERE
	WR1 : SIZEOF(QUERY(varq <* versioned_action_request |
       NOT((SIZEOF(QUERY(adata <* applied_date_and_time_assignment |
       varq IN  adata.items))= 1)OR
      (SIZEOF(QUERY(ada <* applied_date_assignment |
       varq IN ada.items))= 1))))= 0;
END_RULE; -- versioned_action_request_requires_date_or_date_and_time

RULE versioned_action_request_requires_person_organization FOR (versioned_action_request, applied_person_and_organization_assignment, applied_organization_assignment);
WHERE
	WR1 : SIZEOF(QUERY(varq <* versioned_action_request |
       NOT((SIZEOF(QUERY(apaoa <*
       applied_person_and_organization_assignment |
       varq IN  apaoa.items))>= 1)OR
      (SIZEOF(QUERY(aoa <*
       applied_organization_assignment |
       varq IN aoa.items))>= 1))))= 0;
END_RULE; -- versioned_action_request_requires_person_organization

RULE versioned_action_request_requires_status FOR (versioned_action_request, action_request_status);
WHERE
	WR1 : SIZEOF(QUERY(ar <* versioned_action_request |
       NOT(SIZEOF(QUERY(ars <* action_request_status |
       ar :=: ars.assigned_request))= 1)))= 0;
END_RULE; -- versioned_action_request_requires_status

RULE work_request_unique_constraint FOR (versioned_action_request);LOCAL

  r : BAG  OF  versioned_action_request := 
QUERY(r <* versioned_action_request | 
(SIZEOF(QUERY(ara <* USEDIN(r,
'AP210_PRODUCT_DATA_MANAGEMENT_MIM.' +
'ACTION_REQUEST_ASSIGNMENT.ASSIGNED_ACTION_REQUEST')|
((('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' + 
'CHANGE_REQUEST')IN  TYPEOF(ara))OR
(('AP210_PRODUCT_DATA_MANAGEMENT_MIM.' + 
'START_REQUEST')IN  TYPEOF(ara)))))> 0));

  pass : BOOLEAN := TRUE;

  id_bag : BAG OF STRING := [];

END_LOCAL
;


REPEAT i := 1 TO SIZEOF(r)BY 1;

  IF  EXISTS(r[i].id)THEN
    IF(r[i].id IN id_bag)THEN
      pass := FALSE;

      ESCAPE;

    ELSE
      id_bag := id_bag + r[i].id;

    END_IF;

  END_IF;

END_REPEAT;

WHERE
	WR1 : pass;
END_RULE; -- work_request_unique_constraint

END_SCHEMA; --ap210_product_data_management_mim_lf

