<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.36 2007/11/26 17:13:29 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="ap233_system_engineering_and_design"
   part="433"
   version="1"
   sc4.working_group="12"
   wg.number="2269"
   wg.number.arm="2270"
   wg.number.mim="2271"
   wg.number.arm_lf="2272"
   wg.number.mim_lf="2273"
   wg.number.supersedes="1883"
   wg.number.arm.supersedes="1885"
   checklist.internal_review="2356"
   checklist.project_leader="2357"
   checklist.convener="2355"
   status="CD-TS"
   language="E"
   publication.year=""
   published="n"
   rcs.date="$Date: 2007/11/26 17:13:29 $"
   rcs.revision="$Revision: 1.36 $"
   development.folder="dvlp">

 <keywords>
    module, systems engineering, system behavior, system structure, trade study, program management, project management, risk management, issue management, decision support, analysis
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
  <projlead ref="ap233.projlead2"/>
   <editor ref="ap233.editor2"/>  
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
  <p>
    This part of ISO 10303 specifies an application module for the
    representation of the variety of general model classifications used to
    support model based systems engineering.  This includes all models used to
    characterize the physical structure and its behavior and the full range of
    models used to support system engineering trade studies.
  </p> 
  
  <p>
    This module is the top level application module for AP233.  It brings
    together the system modelling capabilities and the program management 
    capabilities.  As such, the variety of modeling paradigms used to 
    represent the physical and functional system and capabilities used 
    to support associated verification, validation and trade studies as well
    as the program management activities of systems engineering.
   </p>

   <p><b>What Systems Engineering Is</b></p>

   <p>Systems Engineering is <i>An interdisciplinary collaborative approach to derive, evolve, 
   and verify a life cycle balanced system solution that satisfies customer expectations and 
   meets public acceptability.</i> (IEEE 1220-1984) </p>

   <p><i>Systems Engineering is an interdisciplinary approach and means to enable the realization 
   of successful systems. It focuses on defining customer needs and required functionality early 
   in the development cycle, documenting requirements, then proceeding with design synthesis and 
   system validation while considering the complete problem.</i> (INCOSE)</p>

   <p>The complete problem spans:</p>
   <ul>
   <li>Stakeholder Needs;</li>
   <li>Requirements;</li>
   <li>The Enterprise and Competitors;</li>
   <li>Concept;</li>
   <li>Design</li>
   <li>Design Optimization by Trade Studies;</li>
   <li>Design Validation and Verification;</li>
   <li>Manufacture;</li>
   <li>Product Validation and Verification;</li>
   <li>Test;</li>
   <li>Maintenance;</li>
   <li>Disposal;</li>
   <li>Training and Support;</li>
   <li>Cost and Schedule;</li>
   <li>Program Management.</li>
   </ul>

   <p><i>Systems Engineering integrates all the disciplines and specialty groups into a team effort 
   forming a structured development process that proceeds from concept to production to operation. 
   Systems Engineering considers both the business and the technical needs of all customers with 
   the goal of providing a quality product that meets the user needs.</i> (INCOSE)</p>
   
   <p>Systems Engineering makes extensive use of specification of all interfaces, performance 
   analysis, and trade studies to ensure that the system is near optimal for and will be accepted 
   by stakeholders and the marketplace. It is applicable to anything for which a well defined 
   boundary can be established whether mechanical, electrical, electronic, information, chemical, 
   biological, social or organizational.</p>
   
   <p><b>What AP233 Is</b></p>
   
   <p>AP233 is an information model that captures the concepts used in Systems Engineering, as 
   Figure 1 shows. These concepts may be represented by a variety of symbols and each set of such 
   symbols can be combined into an number of different views. A particular set of symbols and views 
   constitutes a language. Tools automate the use of such a language to represent and model systems. 
   For any language a number of different tools may exist and they may not be able to exchange data 
   even using the same language unless they have compatible schema for storing that language. Thus a 
   single set of concepts results in a plethora of languages and tools.</p>

		<figure> <title>AP233 Information model</title>
			<img src="Slide9.gif"/>	
		</figure>
		
    <p>The tools are used by engineers. Frequently it is the organization that establishes the process, 
    a specification of the views and development order that shall be followed, that the engineers 
    shall follow. Two organizations using the same toll may or may not use equivalent views in doing 
    their work.</p>

    <p>In general there is no single tool that can support all the work that must be done so the 
    tools are most efficient when put in an environment that enables them to exchange the information 
    artifacts that the engineers produce using the tools. Often different tools incorporated in a 
    single environment cannot exchange information. Very often the organizations in a supply chain 
    or working together on a single project as a consortium will have different environments 
    incorporating different sets of tools. Yet all members of the supply chain or consortium need 
    to efficiently share data rigorously and at low cost.</p>

    <p>The application protocol, like AP233 for Systems Engineering, provides a solution to this 
    problem. Each tool needs an interface that interconnects the tool with the AP. The interface 
    transforms the data artifacts from the tool for correct storage in the AP and transforms data 
    supplied by the AP for use by the tool.</p>

    <p>In this way AP233 supports information exchange among organizations even though their 
    environments contain different tools.  AP233 is the glue for organizations working together 
    in a consortium or a supplier chain.</p>
    
   <p><b>What AP233 Contains</b></p>
   
   <p>Figure 2 shows the basic capabilities of AP233. It is divided into two main parts, Program 
   Management and System Requirements/Design. Major capabilities are listed in each box. The 
   relevant kinds of tools that are applicable surround each box. The two main parts of the work 
   are interconnected by risk analysis, issue resolution, and management authorization and review. 
   Where these capabilities share concepts, i.e. where they are semantically equivalent, there can 
   be exchange of information artifacts among any of the tools through the tool interfaces and the 
   AP233 information model.</p>


		<figure> <title>AP233 content and associated tools</title>
		<img src="Slide10.gif"/>	
		</figure>

   <p>The same transfer is possible where there is semantic identity with downstream design, 
   manufacture, test, and maintenance tools. There are many ISO 10303 Application Protocols 
   (AP’s) for a variety of industrial businesses such as, geometry, circuit board and chip 
   development, ship building, building construction, furniture design and manufacture, maintenance, 
   etc.  A large number of different tools are used by these businesses and interface through their 
   own AP’s. All of these AP’s have been made modular and share, as much as possible, the same modules 
   This approach is vital for connecting systems engineering tools to downstream tools and it makes 
   possible the use of AP233 as an integrating AP across all the others.</p>

   <p>The shared modularity has also required that the AP233 modules use naming conventions that 
   were developed a decade or more ago by developers in other disciplines. The consequence is that 
   AP233 contains names in the detailed EXPRESS code that will seem foreign to practicing systems 
   engineers. It also means that many modules will use a different common module for widely needed 
   representation of entities like number or a weighting factor. Thus the reader who looks at a 
   particular module may not see there an entity that he knows belongs there because it resides 
   in a shared module and is connected to the module he is reading. Efficient use of the EXPRESS 
   language also means that the connection to the common module may go through a chain of classes 
   and subclasses; it may be very indirect for the reader. </p>

   <p>For the reasons above, this introduction does not attempt to show the reader the details of 
   the EXPRESS code. Rather this introduction attempts to: </p>
	<ol>
	<li>Describe AP233 as a container of concepts shared by tools; </li>
	<li>List  number of the capabilities AP233; </li>
	<li>Show kinds of tools that can interface with one another through AP233;</li>
	<li>Show the major mappings of capabilities onto the modules that constitute the information module.</li>
	</ol>

   <p>Those who wish to investigate the modules in detail can use this Introduction as a guide to 
   that adventure. Figure 3 shows a top level view of the module hierarchy. It is important to be 
   aware that the boxes under a higher box do not necessarily completely compose it. Rather there 
   may be additional things in the box above. This is not intuitive to those accustomed to hardware 
   development, but it is a result of the software languages.</p>

   		<figure> <title>Top level hierarchy of AP233 modules</title>
		<img src="Slide11.gif"/>	
		</figure>

   <p>The capabilities of Figure 2. map into modules of Figure 3. as identified below. Be 
   aware that these are not leaf cell modules. There may be structure below them, and they may 
   connect to modules above and below through type extensions. This makes reading the code or 
   the graphic EXPRESS-G diagrams difficult, but it is the nature of the language. </p>

   <p><b>Program management capabilities</b></p>
    <ul>
   <li>All of these capabilities map to modules under <module_ref linkend="program_management:introduction"/>;</li>
   <li>Issues map to <module_ref linkend="issue_management:introduction"/>;</li>
   <li>Organization structure maps to <module_ref linkend="organization_structure:introduction"/>;</li>
   <li>Project breakdown maps to <module_ref linkend="project_breakdown:introduction"/>;</li>
   <li>Project management information maps to <module_ref linkend="project_management:introduction"/>;</li>
   <li>Project management resource information maps to <module_ref linkend="project_management_resource_information:introduction"/>;</li>
   <li>Risk maps to <module_ref linkend="risk_management:introduction"/>;</li>
   <li>Schedule maps to <module_ref linkend="project_breakdown:introduction"/>;</li>
   <li>Work breakdown information maps to <module_ref linkend="work_structure:introduction"/>; </li>
   <li>Configuration management maps in a complex manner to capabilities in <module_ref linkend="product_data_management:introduction"/>;</li>
   <li>Product data management (PDM) maps in a complex manner to capabilities in <module_ref linkend="product_data_management:introduction"/>.</li>
   </ul>

   <p><b>System requirements and design capabilities</b></p>

   <ul>
   <li>All of these capabilities map to modules under <module_ref linkend="system_modelling:introduction"/>;</li>
   <li>Requirements map to <module_ref linkend="requirement_management:introduction"/>;</li>
   <li>Allocation of requirements to system elements map to <module_ref linkend="requirement_management:introduction"/>;</li>
   <li>Moments of effectiveness and trade studies map to capability under <module_ref linkend="decision_support:introduction"/>;</li>
   <li>Configuration management maps to <module_ref linkend="product_data_management:introduction"/> under  <module_ref linkend="system_structure:introduction"/>;</li>
   <li>Product data management (PDM) maps to <module_ref linkend="product_data_management:introduction"/> under  <module_ref linkend="system_structure:introduction"/>;</li>
   <li>Interface to analysis maps to capabilities under  <module_ref linkend="decision_support:introduction"/>;</li>  
   <li>Function based behaviour maps to <module_ref linkend="function_based_behaviour:introduction"/> under <module_ref linkend="system_behaviour:introduction"/>;</li>
   <li>State based behaviour maps to <module_ref linkend="state_based_behaviour:introduction"/> under <module_ref linkend="system_behaviour:introduction"/>.</li>
   <li>System hierarchies for the design system, the realized system and all interfaces map to 
   capabilities under <module_ref linkend="system_structure:introduction"/>;</li>
   </ul>

<p><b>This introduction continues in Annex F with additional notes of an introductory nature. These attempt
to bridge the gap between what the system engineer wants to see for review purposes and what the 
information modelling experts had to do to enable AP233. Use the hyperlink at the top of this web 
page to go to Annex F.</b></p>

   </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>System behaviour;</li>
   <li>System structure;</li>
   <li>System modelling;</li>
   <li>Decision support</li>
   <li>Requirements, analysis, trade studies;</li>
   <li>Program and project management;</li>
   <li>Verification and validation;</li>
   <li>Risk management;</li>
   <li>Issue management.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope/>
 -->
<!--
 <definition/>

 <normrefs/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   </express-g>
 </arm>

 <!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <arm_lf>
   <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>

 <!-- Clause 5.1 Mapping specification 
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table>
-->
 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>

  <shortnames>
    <shortname name="UPCHIC" entity="upfrompm_pb_characterizable_hierarchical_interface_connection"/>
    <shortname name="UPCIC" entity="upfrompm_pb_characterizable_interface_connection"/>
    <shortname name="UPCICO" entity="upfrompm_pb_characterizable_interface_connector_occurrence"/>
    <shortname name="UPCIDC" entity="upfrompm_pb_characterizable_interface_definition_connection"/>
    <shortname name="UACAMA" entity="upfrompm_ap233_characterizable_action_method_assignment_relationship"/>
    <shortname name="UACAPR" entity="upfrompm_ap233_characterizable_alternate_product_relationship"/>
    <shortname name="UACGE" entity="upfrompm_ap233_characterizable_generic_expression"/>
    <shortname name="UACIZ" entity="upfrompm_ap233_characterizable_in_zone"/>
    <shortname name="UACRS" entity="upfrompm_ap233_characterizable_requirement_source"/>
    <shortname name="UACAA" entity="upfrompm_ap233_characterizable_analysis_assignment"/>
    <shortname name="UACV" entity="upfrompm_ap233_characterizable_verification"/>
    <shortname name="UACVE" entity="upfrompm_ap233_characterizable_verification_evidence"/>
    <shortname name="UACVR" entity="upfrompm_ap233_characterizable_verification_relationship"/>
    <shortname name="UPCALA" entity="upfromsm_pmri_characterizable_applied_location_assignment"/>
    <shortname name="USCAAM" entity="upfromsm_ss_characterizable_applied_action_method_assignment"/>
    <shortname name="UACA" entity="upfromsm_ap233_characterizable_action"/>
    <shortname name="UACAAA" entity="upfromsm_ap233_characterizable_applied_action_assignment"/>
    <shortname name="UACAR" entity="upfromsm_ap233_characterizable_action_resource"/>
    <shortname name="UACAS" entity="upfromsm_ap233_characterizable_ascribable_state"/>
    <shortname name="UACG" entity="upfromsm_ap233_characterizable_group"/>
    <shortname name="UACPG" entity="upfromsm_ap233_characterizable_product_group"/>
    <shortname name="UACTO" entity="upfromsm_ap233_characterizable_task_objective"/> 
    <shortname name="UACO" entity="upfromsm_ap233_characterizable_observation"/>
    <shortname name="UACOC" entity="upfromsm_ap233_characterizable_observation_consequence"/>
   </shortnames>
 </mim>

 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <mim_lf>
   <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>


 <usage_guide>

   <p><b>AP233 Technical foundation</b></p>
 
    <p>
     This part of ISO 10303 specifies an application module for the
     representation of systems engineering.</p>
     
   <p>This part of ISO 10303 uses the set of application modules
      for product data management information (the "PDM Modules"). These are
      based on the "PDM Schema" <a href="http://www.pdm-if.org/pdm_schema/"/> that was developed to 
      achieve harmonization between application protocols ISO 10303-203, ISO
      10303-214 and ISO 10303-232.</p>
      
   <p>This part of ISO 10303 has its conceptual base founded in "Concept model" that can be 
   downloaded at
   <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model.ppt?revision=1.1"/>.
   and its companion semantic dictionary can be downloaded at
   <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model_Semantic_Dictionary.xls?revision=1.1"/>.
   </p>
   
   <p>These two interwoven documents have been extensively reviewed by the ISO 
   AP233 development team, members of the International Council on Systems Engineering (INCOSE) and
   members of the Object Management Groups (OMG).  The work was performed via the the leadership efforts of
   INCOSE's Model Driven Design working group
   <a href="http://www.incose.org/practice/techactivities/wg/mdsd/"/>.  
   This group has, in its efforts to extend best practices of System Engineering into software engineering succeed 
   in initiating the SysML project within the OMG and assisting with that activity. The home page for the SysML 
   partners is <a href="http://www.sysml.org"/>. The memo of understanding between the 2 groups (INCOSE and OMG) 
   can be downloaded at:
   <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/OMG-INCOSE-MOU.doc"/>.
   </p>
   
   <p>In mid 2005 AP233 Working draft 1 (AP233-WD1) was delivered.  This delivery captured all that was needed for AP233
   from the perspective of a systems engineer.  Since delivery the STEP/EXPRESS modeling expert 
   group within the AP233 team has been enhancing and restructuring AP233 WD1. The net result, defined herein,
   is much better from the perspective of "information modelling".  However, it is much more 
   difficult to penetrate from the perspective of a systems engineer reviewer.</p>
   
   
   <p><b>Connecting AP233 WD1 with AP233 CD (Committee Draft)</b></p>
   
   <p>The following few paragraphs attempt to bridge the connectivity gap by tracing ap233's evolution and making
   appropriate connects to the stepmod modules used by AP233.</p>
   
   <p>The following 2 figures provide a very high level over view of AP233 WD1 from an organizational and 
   application points of view:   </p>
		<figure> <title>AP233 module organization</title>
			<img src="Slide1.gif"/>	
	</figure>
		<figure> <title>AP233 module application </title>
			<img src="Slide2.gif"/>	
	</figure>

   <p>Figure 3 provides a concept map AP233 as it is presented herein</p>
   
   	<figure> <title>AP233_arm_Concept_Map</title>
			<img src="AP233_arm_Concept_Map.gif"/>	
	</figure>
	
   <p>Relative to Figure 3, the top level modules that enable all of AP233's current capability 
   are listed below.  Within each see Annex F for additional discussion and follow hyperlinks
   provided down to the most atomic level of detail:</p>
   <ul>
   <li><module_ref linkend="decision_support:introduction"/>;</li>
   <li><module_ref linkend="function_based_behaviour:introduction"/>;</li>
   <li><module_ref linkend="issue_management:introduction"/>;</li>
   <li><module_ref linkend="organization_structure:introduction"/>;</li>
   <li><module_ref linkend="program_management:introduction"/>;</li>
   <li><module_ref linkend="project_breakdown:introduction"/>;</li>
   <li><module_ref linkend="project_management:introduction"/>;</li>
   <li><module_ref linkend="project_management_resource_information:introduction"/>;</li>
   <li><module_ref linkend="requirement_management:introduction"/>;</li>
   <li><module_ref linkend="risk_management:introduction"/>;</li>
   <li><module_ref linkend="schedule:introduction"/>;</li>
   <li><module_ref linkend="state_based_behaviour:introduction"/>;</li>
   <li><module_ref linkend="system_behaviour:introduction"/>;</li>
   <li><module_ref linkend="system_modelling:introduction"/>;</li>
   <li><module_ref linkend="system_structure:introduction"/>;</li>
   <li><module_ref linkend="work_structure:introduction"/>. </li>
   </ul>

   <p>It should be rather evident from a comparison between Figures 1 and 3 that there has been 
   significant box rearrangement <i>with no significant change in content</i>.  A few not so 
   obvious points need to be stated.</p>
   
   <ul>
   <li>The information model is now partitioned into a program management arm and a system 
   modelling arm.</li>
   <li>In AP233 WD1 "system of systems" is identified.  This is now all covered within the "System
   structure arm".</li>
   <li>In AP233 WD1 many boxes are labeled "connector".  The function that these boxes enabled is now 
   hidden but enabled via the EXPRESS model's Extensible SELECT TYPE capability.</li>
   <li>Figure 2 attempts to show system engineering information modelling connectivity stemming
   from the systems engineer's need to satisfy requirements and enable interfaces.
   Much of this work is also hidden but enabled via the EXPRESS model's Extensible SELECT TYPE 
   capability.
   </li>
   </ul>
   
   <p>The subject domains of validation, verification, test and measurement are covered 
   in the concept model. </p>
   
   <p>Included within this work is the subject of "issues".  A number of 
   early attempts to define and bound this module have been made.  The collected notes on this 
   subject can be downloaded at
   <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/system_management/Issue%20module%20collected%20notes.ppt?revision=1.1"/>.  </p>
   
   <p>The initial ideas for the system of systems work can be found in Chapter 15 of David Oliver's book "Engineering 
   Complex Systems with Models and Objects".  This can be freely downloaded at 
   <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/system_engineering/Engineering%20Complex%20Systems%20%28book%29.pdf?revision=1.1"/>.
   </p>

   <p>It is a challenge to encompass all of System Engineering in one standard.  Fortunately documents that reflect a generation of experience supporting 
   real world projects exists.  The following work has been used to guide various aspects of current work so as to make 
   AP233 as complete as possible.</p>

   <p>The first is 
   Vitech Corp's.<a href="http://www.vitechcorp.com/"/> schema for their CORE software product.
   This can be downloaded at 
   <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/system_engineering/Vitech%20Corp%20CORE%20Schema.zip?revision=1.1"/>.  
   This schema has grown through a generation of system engineering customer support.</p>

   <p>The second is the 
   Department of Defense (US) Architectural framework (DoDAF). The following DoD reference source material
   can be downloaded as a single zip file from:
   <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/system_engineering/DoDAF%20architecture.zip?revision=1.1"/> </p><ol>
   <li>The DoD Architecture Framework (DoDAF) Version 1.0 (.pdf)  Memorandum by John P. Stenbit, February 9, 2004. 
   The DoDAF Version 1.0 defines a common approach for DoD architecture description, development, presentation, and 
   integration for both warfighting operations and business processes. The DoDAF Version 1.0 supersedes the C4ISR 
   Architecture Framework, Version 2.0 dated December 18, 1997. The DoDAF Version 1.0 is partitioned into two 
   volumes and a deskbook - see links provided directly below:</li>
   <li>DoDAF Version 1.0 - Volume I (.pdf) Provides 
   definitions, guidelines, background material.  </li>
   <li>DoDAF Version 1.0 - Volume II (.pdf) Describes each architecture 
   product.</li>
   <li>DoDAF Version 1.0 - Deskbook (.pdf) Provides supplementary "how to" information relating to 
   architectures.</li></ol>
   
   <p>NOTE: The full set of entities and relationships that exist in tools in use are in scope; while 
   relationships identified are out of scope.  These are unbounded, unknown, and not possible to establish.
   </p>
   
   <p><b>Extend lists for Extensible select types</b></p>
  
  <p>The STEP modules and their associated entities provide modelling capability for a wide
  variety of concepts.  To enable any useful capability these concepts need to be coupled 
  together.  This is done directly via entity attributes or indirectly by what 
  the author views as a publish and subscribe capability.  Type extend lists can be loosely 
  viewed as subscription lists for this capability.</p>
  
  <p>The raw data used to define AP233 type extend lists is contained in a matrix format.  
  This matrix can be downloaded at 
  <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/AP233_pg28_extend_matrix_copy.xls?revision=1.1"/>
  From the data contained within this matrix a series of top level type extend lists are 
  created.  The mapping from matrix data to lists is not 100% deterministic.  The final
  set of lists can be downloaded at
  <a href="http://stepmod.cvs.sourceforge.net/*checkout*/stepmod/stepmod/etc/ap233/references/AP233_top_pg28_extend_copy.exp?revision=1.1"/>
  </p>
  
  <p>These type extend lists when placed in the top level AP233 provide all necessary 
  information model connectivity at the top level.  AP233 however is built up by aggregating 
  the capabilities of many Implementation Modules.  These, too, need type extend lists to 
  enable information coupling at their respective layers of abstraction.  These are possible 
  to derive directly from the set of top level lists that can be downloaded. The algorithm 
  for the creation of these lists is quite simple.  It simply places the full list in an 
  Implementation Module, runs an EXPRESS error checker and then removes all entities that 
  create an error. What remains are all type extends relevant to the Implementation Module. 
  The process is repeated for all Implementation Modules.</p>

 </usage_guide>

</module>







