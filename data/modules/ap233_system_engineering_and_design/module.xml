<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.8 2005/08/04 20:05:58 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="ap233_system_engineering_and_design"
   part="433"
   version=".2"
   sc4.working_group="3"
   wg.number="1883"
   wg.number.arm="1885"
   wg.number.mim=""
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="WD2"
   language="E"
   publication.year=""
   published="n"
   rcs.date="$Date: 2005/08/04 20:05:58 $"
   rcs.revision="$Revision: 1.8 $"
   development.folder="dvlp">

 <keywords>
    module, system engineering
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 <abstract>
    <li>This part of ISO 10303 specifies an application module for the representation of 
    system engineering.
    </li>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="jim.uren"/>
   <editor ref="allison.barnardfeeney"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the representation of 
    system engineering.  This module contains all AP233 test ready work.
   </p>
   
   <p>This part of ISO 10303 uses the set of application modules
      for product data management information (the "PDM Modules"). These are
      based on the "PDM Schema" <a href="http://www.pdm-if.org/pdm_schema/"/> that was 
      developed to achieve
      harmonization between application protocols ISO 10303-203, ISO
      10303-214 and ISO 10303-232.</p>
      
   <p>This part of ISO 10303 has its conceptual base founded in its 
   <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model.ppt?rev=1.1"> "Concept model"</a>
   and its 
   <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model_Semantic_Dictionary.xls?rev=1.1"> 
   companion semantic dictionary. </a>
   </p>

   <p>These two interwoven documents have been extensively reviewed by the ISO 
   AP233 development team, members of the International Council on Systems Engineering (INCOSE) and
   members of the Object Management Groups (OMG).  This concept model consensus development 
   work was performed via the leadership efforts of INCOSE's 
   <a href="http://www.incose.org/practice/techactivities/modelingtools/mdsdwg.aspx/"> Model Driven System Design (MDSD) working group.</a>  </p>
   
   <p>This MDDSD group has, in its efforts to extend best practices of System Engineering into software engineering succeeded 
   in initiating the <a href="http://www.sysml.org"> SysML project </a> within the OMG and assisting with that activity under the guide lines
   set down in the 
   <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/OMG-INCOSE-MOU.doc?rev=1.1"> 
   AP233/SysML memo of understanding between INCOSE and OMG.</a>
   </p>
   
   <p>All terms defined in the logically ordered semantic dictionary, along with a note that identifies
   associated position in the ordered list are provided herein in Clause 
   <module_ref linkend="Ap233_system_engineering_and_design_arm:3_definition"> 3. </module_ref> </p>
   
   <p>All application module implementation and usage guide information is provided in Annex  
   <module_ref linkend="Ap233_system_engineering_and_design_arm:f_usage_guide"> F. </module_ref></p>
   
   
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>project management (management resources, organization structure, project breakdown, schedule, work structure)</li>
   <li>system requirements (text and function based requirements)</li>
   <li>system behavior (function based behavior with place holder for state based behavior)</li>
   <li>system structure (breakdown, interface, analytical mode, rules, model parameter)</li>
   <li>system risk</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>xxxx</li>
 </outscope>

 
<definition>
   <term id="ap233_element">element</term>
   <def>
     that which is discernable by the reproducible measurement of its characteristics
     <note>Line item  1 in AP233's 
     <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model.ppt?rev=1.1"> 
     concept model </a> and its 
     <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model_Semantic_Dictionary.xls?rev=1.1"> 
     semantically ordered dictionary list.</a> </note>
     <note>The semantic term element includes matter, energy and information.  The term product 
     from ISO 10303-Part 1 STEP definitions defines product as: a thing or substance 
     produced by a natural or artificial process. AP233 needs to define the informational 
     attributes associated with the entity named "product" as defined within the Applicaton 
     Module 1017 - Product Identification . This entity has attributes that 
     enable one to capture: id, name and description.  AM 1017 provides the definition: 
     A Product is the identification of a product or of a type of product. It is a 
     collector of data common to all revisions of the product. Element appears to be 
     a legitimate subclass of product because AP233 requires reproducible measurement 
     of element.</note>
     <example>Any thing from microscopic particles to galaxy clusters is an element.  
     Any thing with a finite existence from galaxies with billion-year lives to 
     trans-uranic elements with lifetimes less than nano-seconds. Counter-example: 
     Things like ghosts, devils, the Loch Ness monster, the city of Atlantis are not 
     discernable by reproducible measurement and are excluded. Research and development 
     things that do not yet have reproducible measurements and process control are excluded. 
     For example, silicon for electronic devices would be excluded in 1900. </example>
   </def>
</definition>

<definition>
   <term id="ap233_category">category</term>
   <def>
     categories provide the grouping of elements into a set based on defined 
     properties that serve as selection criteria for which elements of all those 
     in the universe belong in that set
     <note>Line item  2 in AP233's concept model and its semantically ordered dictionary list.</note>
     <note>This is one of the forms of generalization/specialization. This is <b>not inheritance</b> 
     as used in object-oriented software languages. Physical elements of matter and energy do 
     not inherit their properties. Rather they posses the properties of themselves and 
     can be identified by measurement of those properties.</note>
     <note>For a discussion of these issues in computer science see the work of Barbara Liskov 
     on abstract data types, the CLU language and set theory, reference:
     <a href="http://www.cs.brown.edu/people/mph/HerlihyL82/p527-herlihy.pdf"/>..</note>
     
     <example>Explanation: It is categorization that enables us to define alternatives and 
     create taxonomies for libraries. </example>
     <ul>
     <li>Inclusive/Complete Category: Any Element of the super category may 
     reside in any number of the sub-categories and all members of the super-category 
     are members of at least one of the sub-categories.</li></ul>
     <example>the super category is all apples raised on a particular farm. The subcategories 
     are used for sorting and include: good apples, bruised apples, marked apples, rotten 
     apples, and wormy apples.</example>
     <ul>
     <li>Inclusive/Incomplete Category: Any Element of the super category may reside 
     in any number of the sub-categories and only some members of the super-category 
     are members of the sub-categories.</li></ul>
     <example>the super category is all fruit raised on a particular farm. The subcategories 
     are used for sorting and include: good apples, bruised apples, marked apples, rotten 
     apples, and wormy apples.</example>
     <ul>
     <li>Exclusive/Complete Category:  Any Element of the super-category may reside 
     in one and only one of the sub-categories and all members of the super-category 
     are members of at least one of the sub-categories.</li></ul>
     <example>An automobile has in its decomposition tree an engine. For this automobile any 
     of three engines: 140 HP, 180 HP, and 220 HP. The superclass of engine is exhausted by 
     the subclasses and the subclasses are independent.</example>
     <ul>
     <li>Exclusive/ Incomplete Category:  Any Element of the super-category may reside 
     in one and only one of the sub-categories and only some members of the super-category 
     are members of the sub-categories.</li></ul>
     <example>All of the automobile engines under current manufacture by GM and its subsidiaries 
     are considered as candidates for three engines that will be used in a new car.</example>
   </def>
 </definition>

<definition>
   <term id="ap233_domain of interest">domain of interest</term>
   <def>
   all elements of interest to the problem at hand
   <note>Line item  3 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>These include the system, its environment, external systems of interest in the 
   environment, stakeholders, enabling things, things that may cause failure, and all other 
   things of interests.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_system">system</term>
   <def>
   an element with a well defined boundary with respect to all other elements, outside of it 
   and in the domain of interest, with which it interacts
   <note>Line item  4 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>A system is composed of interacting systems. The emergent behaviors and properties 
   of a system are the result of the properties and behaviors of the sub-systems and their 
   interactions. These interactions may be highly nonlinear.
   </note>
   <note> Systems decompose hierarchically; they are systems of systems. </note>
   <example>A car has a well defined boundary with respect to its environment, and the 
   relationships are both static and dynamic. Similarly the engine has the same kinds of 
   relationships and so does the fuel injector of the engine. 
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_system view">system view</term>
   <def>  
   a collection of elements and related information about the system that are useful and defined 
   for a particular purpose in a particular context
   <note>Line item  5 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Engineers involved in specification, design, manufacturing and maintenance need a 
   particular collection of information to do their work. An engineer working on the cooling 
   system of an engine needs information about a particular set of parts, behaviors and 
   properties that are particular to that engineering problem. The set of possibly useful 
   system views is very large.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_environment">environment</term>
   <def>  
   all elements external to the system that interact with it
   <note>Line item  6 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>It is often possible to limit the parts of the environment needed for development 
   purposes to those external systems that are neighbors to the system. </note>
   <note> The environment 
   includes not only the external systems that couple with it for useful purposes, but it 
   also includes all external systems that may interact in a manner that causes failure. 
   </note>
   <example>Elements in the environment need not have well defined boundaries as do systems. 
   A laptop computer can connect to a power grid. But for the design of the laptop it is not important to 
   consider the power grid as a system. It is simpler to consider it as an element with an 
   interface that the laptop connects to when needed.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_stakeholder">stakeholder</term>
   <def>people, organizations and institutions that are a part of the system environment 
   because the system provides some benefit to them and they have an interest in the system
   <note>Line item  7 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Stakeholders include; for example, the producers, owners, operators, users, and maintainers 
   of the system.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_stakeholder_need">stakeholder need</term>
   <def>the benefits that the stakeholders wish to be satisfied by or delivered by the system 
   when it is implemented and functioning  
   <note>Line item  8 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>At the top level of development these needs drive the requirements for the system and 
   the optimization criteria for its development.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_property">property</term>
   <def>any named measurable or observable attribute, quality or characteristic of an element
   <note>Line item  9 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Property is usefully decomposed into several categories – the measurable characteristics 
   in normal use, the measurable characteristics that require additional instrumentation for 
   measurement, and the observable characteristics. It is a systems engineering best practice 
   to separate behavior from structure (function from form) and to allocate behavior to structure 
   based on trade studies among alternatives.
   </note>
   <example>The acceleration of a car is in the first category. behavior.  This characteristic can 
   be observed in the 
   normal operation of the car. The weight of the car is not directly observable in the use of the 
   car.  It requires that the car be placed on a scale to record the measurable characteristic. 
   The fact that a car 
   has four wheels, a steering wheel on either the left or the right side, and a sun roof are 
   observable characteristics.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_system requirement">system requirement</term>
   <def>a statement of properties that a system shall exhibit or shall not exhibit when completed
   <note>Line item  10 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Requirements are derived from requirements in a many-to-many relationship.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_reference document">reference document</term>
   <def>a statement of the document source of information concerning an element or a property of 
   an element, including the tensor characteristics, units, values, value probability distribution, 
   or symmetry
   <note>Line item  11 in AP233's concept model and its semantically ordered dictionary list.</note>
   </def>
</definition>

<definition>
   <term id="ap233_behavior">behavior</term>
   <def>what an element is to do or is not to do in response to excitations it receives from 
   the external elements in its environment
   <note>Line item  12 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>This is the subclass of property that includes measurable characteristics in normal 
   use. It encompasses the response of the system to excitation by things in its environment. 
   In some other engineering disciplines it is the analysis with differential equations that 
   is called behavior. That is not what is meant here. Here, in AP233, behavior is a model representation 
   of a functional requirement: it is what the system is to do.
   </note>
   <example>Make a fender is a behavior with several function steps, inputs of sheet steel, 
   power, paint primer, paint and the output of a fender. Ring is the behavior of a bell 
   or tuning fork. The "Q" of the bell or tuning fork is a physical property of the bell and 
   its environment.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_function based behavior">function based behavior</term>
   <def>a description of behavior based on function and transformation without reference to state
   <note>Line item  12.1 in AP233's concept model and its semantically ordered dictionary list.</note>
   </def>
</definition>

<definition>
   <term id="ap233_physical property">physical property</term>
   <def>what an element exhibits or does not exhibit in response to excitation and stimulation 
   from auxiliary measurement entities that are not part of its context 
   <note>Line item  13 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>This is the subclass of property that encompasses measurable characteristics that 
   require additional instrumentation to measure them. They cannot be established from 
   responses to the enviropnment alone. All of the "properties" used in analysis with 
   differential equations fall into this category.
   </note>
   <example>Responses of an element like mass, power consumption, mean time between failure, 
   etc. are critically 
   important and appear in requirements. They are not measured by responses to excitation 
   from their environment.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_structure">structure</term>
   <def>the decomposition, interconnection and other static relationship among the parts of the system
   <note>Line item  14 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Physical properties are budgeted to structure using analysis methods, and the emergent 
   performance is calculated using the same methods. Behavior is allocated to the structure. 
   Form and function are separated conceptually so that the design can be optimized by considering 
   several different structures that can provide the desired emergent behavior and properties.
   </note>
   <example>In a real example of optimization the engineer examines not just the maximum or 
   minimum, but looks at the trend in data in that region to be sure the solution is robust. That is, 
   the design solution must not degrade rapidly with small variances in the variables of design.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_part">part</term>
   <def>static parts of the system including their interconnection and interconnection descriptions
   <note>Line item  15 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Parts have physical properties assigned to them. Many engineering domains think of these 
   as components, but manufacturing thinks of them as assemblies because they build assemblies. 
   <i>Assembly is a 
   standard ISO naming convention. It may be desirable to alias this name.</i> </note>
   <note>Physical properties 
   are budgeted to structure using analysis methods, and the emergent performance is calculated 
   using the same methods. Behavior is allocated to the structure. Form and function are separated 
   conceptually so that the design can be optimized by considering several different structures 
   that can provide the desired emergent behavior and properties.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_link">link</term>
   <def>a particular kind of part that is used when it is helpful not to model or specify its details
   <note>Line item  16 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Link must be provided in the concept model because a number of application tools use the 
   concept. Links ultimately are fully specified and become a system-assembly.
   </note>
   <example>In a pumping system it may be useful to define the pumps and tanks while representing 
   the piping as links without detail. At some point in the design detail like diameter, flow 
   impedence, pressure rating, and corrosion resistance must be defined. At his point the link 
   becomes a part.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_port">port</term>
   <def>a connection point on a part in the part decomposition hierarchy
   <note>Line item  17 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Systems interconnect with one another port-to-port. Ports couple to desired things in 
   the environment and also to the ports of things that cause failure, threaten security or safety. 
   The alias for port is interface connection, this is the term that is used in AP239. </note>
   <note>When a 
   system interacts with its environment, the boundary between the system and the environment 
   is the collection of all interacting ports.
   </note>
   <example>Consider a ultrasonic transmitting transducer coupled to a water tank and a receiver 
   transducer coupled to the tank. The transmitter port connects to a water port and couples 
   sound energy into the water. The intensity at any point is a result of the impedance match 
   between the two ports, the radiation pattern of the transducer, and the attenuation and 
   dispersion in the water. The receiving transducer is attached to another port of the water. 
   The received signal is dependant on the relative impedance of the two ports, the sound 
   distribution in the water, and the radiation pattern of the receiving transducer. This 
   example is often oversimplified as "broadcast" neglecting the port to port conditions 
   and the properties of the medium and neglecting the ports. 
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_interconnection">interconnection</term>
   <def>a listing of the ports that interconnect with one another
   <note>Line item  18 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>The interconnection may exist for structural reasons without any flow from port to 
   port. The interconnection may exist because functions are assigned to particular assemblies, 
   and the output from one function is an input to the other function. In this case the ports 
   and their interconnection must exist to support flow. The alias for interconnection is 
   interface connection, the term used in AP239.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_interface specification">interface specification</term>
   <def> a description of a port of a part that includes the geometric description, input/output 
   description, protocols that must be met, assemblies of parts required to join two ports, 
   allowable defect characteristics, etc. including the emergent 
   properties of the interface that are the result of the two ports interacting, and are not 
   associated with either
   <note>Line item  19 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Parts interact physically through direct physical contact, exchange of elements, 
   and through forces they exert such as gravity, compression or torque. Thus input/output is bound 
   to ports and described by interfaces. The interface may consist of more than the two 
   ports and may involve an assembly of parts as in the case of two flanges that are 
   assembled with six bolts and an O-ring. The interface may also require detailed description 
   to define what occurs there or how it is maintained. 
   </note>
   <example>For two ports to connect, their interfaces must be compatible. The current 
   carrying capacity of a plug and a socket is a result of the surface area of contact, 
   the contact force, the wiping action on plugging them together, and the surface 
   conductivity of both. This is an emergent property that is not assignable to either 
   port individually.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_function">function; transformation</term>
   <def>the entity in the context of modeling that transforms an input set of elements 
   into a set of output elements that may be the same or measurably different from the input set
   <note>Line item  20 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>It is a part of behavior. This is what functions do in mathematics where the input/output 
   are variables. In software the input/output is data. In systems engineering the input/output are elements, 
   matter, energy, and information. An internal function is a kind of function that is 
   allocated to and implemented by the system/structure. An external function is a kind of 
   function that is allocated to and implemented by elements in the environment. 
   </note>
   <example>The function may be “burn gasses” with an input of two moles of hydrogen and 
   one mole of oxygen. The output will be one mole of water, distinctly different from 
   the inputs and a lot of energy. This function may be followed by a function “cool to 
   90 degrees centigrade”. The input had pressure and volume proportional to temperature; 
   the output is now liquid with a well-defined volume, an isotropic compressibility and a 
   viscosity. If the next function is “cool to –10 degrees centigrade”, then the viscosity 
   goes away and the compressibility becomes a fourth rank tensor relating stress to strain. 
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_timing">timing</term>
   <def>a time interval assigned to a function that defines the duration of activity of 
   the function or the probability distribution for the duration
  <note>Line item  20.1 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Many probability distributions are used in systems engineering. These may 
   include: normal, log-normal, Bernoulli, beta, binomial, negative binomial, chi squared, 
   discrete uniformed, erlang, exponential, F, gamma, geometric, laplace, poisson, T, 
   triangular, uniform, weibull.</note>
     </def>
</definition>

<definition>
   <term id="ap233_script">script</term>
   <def>an executable textual language statement assigned to a function to define how 
   that function executes
  <note>Line item  20.2 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_function port">function port</term>
   <def>a logical entity to whch input/output is bound
  <note>Line item  20.3 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_queue">queue</term>
   <def>a storage entity on a function port that accumulate input/output until needed by the function
  <note>Line item  20.4 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Triggering input/output is stored in a "first in first out" queue so that the earliest trigger received 
   activates the function. Non-triggering input/output is stored in a "last in first out" queue so that the most 
   recent input is used by the function to ensure the input is fresh.</note>
    </def>
</definition>

<definition>
   <term id="ap233_regular function port">regular function port</term>
   <def>a function port that accepts input/output that does not trigger the function
  <note>Line item  20.5 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>The constructs regular function port and control function port allow input/output 
   to trigger some function but not others.</note>
    </def>
</definition>

<definition>
   <term id="ap233_control function port">control function port</term>
   <def>a function port that accepts input/output that triggers the function
  <note>Line item  20.6 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>The constructs regular function port and control function port allow input/output 
   to trigger some function but not others.</note>
    </def>
</definition>

<definition>
   <term id="ap233_resource">resource</term>
   <def>the amount of input available to a function or the amount of
   output available from it; or, the amount of property of a system available to a function
  <note>Line item  20.7 in AP233's concept model and its semantically ordered dictionary list.</note>
  <example>There exists some number of missiles available to a missile battery available 
  for the function "Shoot". </example>
  <example>The function "transmit message" may be allocated to a satellite system, a 
  fiber optic line, a microwave link, etc. Each of these alternatives has some 
  value of the property "bandwidth" that may be used by the function.</example>
    </def>
</definition>

<definition>
   <term id="ap233_function exit">function exit</term>
   <def>a function based behavior construct that links a functional decomposition to the 
   exit paths identified for the parent function
  <note>Line item  20.8 in AP233's concept model and its semantically ordered dictionary list.</note>
  <example>If function exit is decomposed, there are function exit constructs corresponding 
  to the two exit paths in the higher level function. When one of the exit constructs is 
  encountered, execution of the decomposition is complete and control is passed to the 
  corresponding exit path at the higher level.</example>
    </def>
</definition>

<definition>
   <term id="ap233_input output">input output</term>
   <def>elements consumed by a function are inputs and those generated by a function are outputs
  <note>Line item  21 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>The name input/output or I/O is used because a given I/O entity is generated by one 
   function and consumed by another. It is a part of behavior. In the general case outputs 
   are different things than inputs, and physical properties, behaviors, values, variances 
   and probability distributions can all change. In this general definition "function" is an 
   element of type information and cannot be realized in the physical world except through 
   elements of type matter or energy that exhibit that function. In the physical world things 
   transform other things. It is this fact of reality that results in the allocation of 
   function to structure which is really a statement that this particular structure entity 
   exhibits this particular function and it will be used to provide that transformation. The 
   thought pattern is to think of the desired transformation, function, to consider 
   alternative things that might be used to provide it, and to select among these, using a 
   trade study based on optimization.</note>
   <example>I/O may trrigger functions and it may terminate functions.</example>
    </def>
</definition>

<definition>
   <term id="ap233_function ordering">function ordering</term>
   <def>imposes how/when functions execute, which may be sequential, concurrent, 
   traversed iteratively, or lie on separate alternative path
  <note>Line item  22 in AP233's concept model and its semantically ordered dictionary list.</note>
  <note>David <b>some word-smithing has been done, please check</b> </note>
   <note>It is a part of behavior. There are several ways to represent function 
   ordering. It may be done with ordering operators and triggering input/output as in 
   classical behavior 
   diagrams or it may be done with events, states, and transitions as done in state machines 
   and state charts. For this fine level of detail it is necessary to intercompare the 
   detailed models in SEDRES with those in the concept model and those emerging from 
   UML 2.0 development.
   </note>
   <example>A function is activated when all preceeding threads of functions are complete. At 
   this point the function examines its inputs. If all triggering inputs are present the 
   function proceeds to do its work. If one or more triggering inputs is absent, the 
   function waits for them before doing its work. Triggers that arrive while the functions 
   are running are stored in a first in first out queue. Ordinary input/output that arrives 
   while a function is 
   deactivated is stored in a last in first out queue. If the function is running it is 
   discarded.  A 
   function is deactivated when it completes its work or is deactivated by input/output.</example>
    </def>
</definition>

<definition>
   <term id="ap233_ordering operations">ordering operations</term>
   <def>function ordering constructions that establish how the functions are ordered
  <note>Line item  22.1 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_replicate">replicate</term>
   <def>an ordering_operation that replicates a function used many times
  <note>Line item  22.2 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Especially useful for distributed systems in which a particular function 
   is realized in many places</note>
   </def>
</definition>

<definition>
   <term id="ap233_and">and</term>
   <def>an ordering operation pair that establishes concurrency among functions
  <note>Line item  22.3 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_and out">and out</term>
   <def>an ordering operation that shows the branching our among concurrent functions
  <note>Line item  22.4 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_and in ">and in</term>
   <def>an ordering operation that shows the path rejoining among concurrent functions
  <note>Line item  22.5 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_iterate">iterate</term>
   <def>an ordering operation that repeats a function or group of functions 
  <note>Line item  22.6 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_iterate limit">iterate limit</term>
   <def>an ordering operation that establishes the set over which the iteration is performed
  <note>Line item  22.7 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_loop">loop</term>
   <def>an ordering operation that repeats a function or group of functions some number of times
  <note>Line item  22.8 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_loop limit">loop limit</term>
   <def>the number or expression for the number of repetitions in a loop 
  <note>Line item  22.9 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_loop exit">loop exit</term>
   <def>the ordering operation that terminates a loop and provides correct continuation of the execution path
  <note>Line item  22.10 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_sequence">sequence</term>
   <def>an ordering operator that establishes sequence among functions
  <note>Line item  22.11 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_or">or</term>
   <def>an ordering operator pair that establishes alternative paths for a group of functions
  <note>Line item  22.12 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_or out">or out</term>
   <def>the ordering operation that establishes branching of functions and their alternative paths
  <note>Line item  22.13 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_or in">or in</term>
   <def>the ordering operation that establishes the rejoin of alternative paths
  <note>Line item  22.14 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_multi exit function">multi exit function</term>
   <def>a special function with multiple exit conditions that can serve the same purpose as "or out"
  <note>Line item  22.15 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_probability">probability</term>
   <def>a set of numbers, of sum equal to 1.0, that can be assigned to the several exit paths of an 
   "or out" to establish the relative frequenty that each path is taken
  <note>Line item  22.16 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_activation rules">activation rules</term>
   <def>the set of rules used by an execution engine in a tool to execute the function based behavior
  <note>Line item  22.17 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>The same behavior model can produce different execution results if the rules of execution 
   differ between two tools that exchange data. These are the entities that allow recording of the 
   rules used by the tool putting data into the data model.</note>
    </def>
</definition>

<definition>
   <term id="ap233_start rules">start rules</term>
   <def>the activation rules that establish when a function begins to execute
  <note>Line item  22.18 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_run rules">run rules</term>
   <def>the activation rules that establish how the function executes
    <note>Line item  22.19 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_terminate_rules">terminate rules</term>
   <def>the activation rules that establish the conditions under which a function ceases to execute
    <note>Line item  22.20 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_internal function">internal function</term>
   <def>a kind of function that is allocated to and implemented by system/structure
    <note>Line item  23 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note> For each input/output there are two such functions, one that generates it and one that consumes it.</note>
    </def>
</definition>

<definition>
   <term id="ap233_external function">external function</term>
   <def>a kind of function that is allocated to and implemented by elements in the environment
    <note>Line item  24 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>These functions act as sources and sinks of input/output</note>
   <note>Input/output is associated with one function.</note>
    </def>
</definition>

<definition>
   <term id="ap233_unit">unit</term>
   <def>establishes the standard of measure against which the values of physical properties shall be stated
    <note>Line item  25 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Several different standards of units are in use around the world. It is essential to state the 
   standard in use.</note>
   <example>Failure is assured when different groups use different units without making the 
   necesaary transformations.</example>
    </def>
</definition>

<definition>
   <term id="ap233_property value">property value</term>
   <def>a numeric value assigned to a physical property
    <note>Line item  26 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Numeric values, real numbers, can be given as a mean and variance, a probability distribution 
   of values or as a histogram. Many probability distributions are used in systems engineering. These 
   may include: normal, log-normal, Bernoulli, beta, binomial, negative binomial, chi squared, discrete 
   uniformed, erlang, exponential, F, gamma, geometric, laplace, poisson, T, triangular, uniform, weibull.</note>
   <example>Property values are useful in making comparisons and decisions, in verification, and in 
   validation. Comparisons and decisions can only be made if there are both mean values and variances 
   available. Mean values alone are insufficient.</example>
    </def>
</definition>

<definition>
   <term id="ap233_required budgeted property value">required budgeted property value</term>
   <def>a property value allocated to a part by a requirement, or budgeted to that part by analysis
    <note>Line item  27 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Values that shall be met are stated in requirements. The laws of science and engineering 
   interrelate the values of properties and are used to calculate the values appropriate for the 
   parts based on the required value for the whole.</note>
   <example>A requirement may state that a space probe shall weigh no more than 150 pounds. In 
   that case the masses of the subsystems must add up to no more than 150 pounds. It is best 
   practice to budget values to the subsystems for guidance of the engineers working on the subsystems.</example>
    </def>
</definition>

   
<definition>
   <term id="ap233_calculated property value">calculated property value</term>
   <def>a property value of a whole calculated or estimated from the values of the parts that 
   assemble to make the whole
    <note>Line item  28 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>The laws of science and engineering interrelate the values of properties and are used 
   to calculate the values for the whole based on the designed values for the parts.</note>
   <example>As the designers do their work they arrive at design values for the parts. These 
   values will generally differ from the budgeted values because the designers have detailed 
   information unavailable before. It is necessary to calculate the properties of the whole based 
   on these design values to ensure that requirements are satisfied by the proposed design. The mass of 
   the space probe should be 150 pounds or less, based on the design data.</example>
    </def>
</definition>

<definition>
   <term id="ap233_target budget property value">target budget property value</term>
   <def>a temporary property value used by a designer as the design work proceeds and different 
   design alternatives are considered
    <note>Line item  29 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>As a designer considers several alternatives to meet ysystem requirements, it is 
   necessary to carry along temporary property values to accomplish the design work.</note>
   <example>A designer may have been budgeted 40 pounds for his subsystem. He may find a 
   design solution that weighs 38 pounds. In the design process he may consider alternatives 
   that turn out to weigh 36 , 38,  41, and 43 pounds. These are temporary targets. When he 
   examines other budgets he must meet for the subsystem, the designer may conclude that 
   the 38 pound alternative is the best found.</example>
    </def>
</definition>

<definition>
   <term id="ap233_measured property value">measured property value</term>
   <def>a property value established by measurement of an actual part
    <note>Line item  30 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>These measurements are often made when actual parts first become available. 
   They verify that the parts meet their requirements.  They also verify the quality of 
   analysis models used during design.</note>
   <example>A part like a turbine blade has a number of important properties critical to 
   the performance of a jet engine, These include aerodynamic efficiency, weight, moment 
   of inertia, vibration spectra, mean time between failure, and corrosion resistance. 
   Important properties are predicted durng design with analysis. Measurement is made as 
   soon as possible.</example>
    </def>
</definition>

<definition>
   <term id="ap233_model parameter">model parameter</term>
   <def>a formally declared variable of the analytical model provided for an external 
   application to populate at execution time in a computing environment
    <note>Line item  31 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Physical properties are represented in equations by parameters.</note>
   <example>In Spice, temperature is a model parameter that may be set at the execution time. </example>
    </def>
</definition>

<definition>
   <term id="ap233_parameter assignment">parameter assignment</term>
   <def>provides actual values for characteristics declared formally by the model parameter
    <note>Line item  32 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Some parameters are left in parametric form and are calculated. 
   Others are supplied values to fully specify the equations.</note>
    </def>
</definition>

<definition>
   <term id="ap233_analytical representation">analytical representation</term>
   <def>the association of specific properties of specific system assemblies with an 
   analytical model in order to unambiguously characterize the performance of a specific part
    <note>Line item  33 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>To perform a calculation it is necessary to associate parameters with other elements of equations.</note>
    </def>
</definition>

<definition>
   <term id="ap233_analytical model">analytical model</term>
   <def>provides a mathematical description of the properties of a system
    <note>Line item  34 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>An analytical model may be a library model. </note>
    </def>
</definition>

<definition>
   <term id="ap233_functional requirement">functional requirement</term>
   <def>states what the shall be done by the system to which it is allocated
    <note>Line item  35 in AP233's concept model and its semantically ordered dictionary list.</note>
   </def>
</definition>

<definition>
   <term id="ap233_performance requirement">performance requirement</term>
   <def>states a time duration or a time probability for the completion of a functional 
   requirement or a function as a modeling element
    <note>Line item  36 in AP233's concept model and its semantically ordered dictionary list.</note>
   </def>
</definition>

<definition>
   <term id="ap233_physical property requirement">physical property requirement</term>
   <def>states a physical property that shall be exhibited by the system or system asseembly 
   to which it is assigned
    <note>Line item  37 in AP233's concept model and its semantically ordered dictionary list.</note>
   </def>
</definition>

<definition>
   <term id="ap233_interface requirement">interface requirement</term>
   <def>states the characteristics of the interface to which it is assigned
    <note>Line item  38 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>It includes the geometric description, input/output description, protocols that must be met, 
   assemblies of parts required to join two ports, allowable defect characteristics, etc.</note>
   </def>
</definition>

<definition>
   <term id="ap233_imposed design requirement">imposed design requirement</term>
   <def>states particular elements that shall be used in the desiign of the system or part
    <note>Line item  39 in AP233's concept model and its semantically ordered dictionary list.</note>
   </def>
</definition>

<definition>
   <term id="ap233_reference requirement">reference requirement</term>
   <def>states a reference to a source of additional requirements that shall be met by the 
   system or part
    <note>Line item  40 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>The referenced source may be a requirements document, government 
   requirements for safety, security, environmental quality, etc., or a state or federal law</note>
   </def>
</definition>

<definition>
   <term id="ap233_reference source">reference source</term>
   <def>any requirements document, government regulation or law that contains applicable 
   requirement
    <note>Line item  41 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_effectiveness measure">effectiveness measure</term>
   <def>states an optimization condition that a system shall meet
    <note>Line item  42 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Requirements define the domain of the solution; that is, the solution space. The effectiveness 
   measures drive the solution to a particular region in that space. The effectiveness measures 
   are tightly related to stakeholder needs. 
   </note>
   <example>The requirements differences between a PC and a laptop are largely in the laptop 
   optimization conditions for minimum weight, minimum thickness, and maximum battery life. 
   These critiera are some of those that customers (one of the kinds of stakeholder) consider 
   in deciding what to purchase. 
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_optimization direction">optimization direction</term>
   <def>states the direction of optimization, maximize or minimize, for an effectiveness measure 
    <note>Line item  43 in AP233's concept model and its semantically ordered dictionary list.</note>
   <example>For a laptop computer weight and thickness are minimized and battery life is maximized.</example>
    </def>
</definition>

<definition>
   <term id="ap233_weight">weight</term>
   <def>relative importance of a particular effectriveness measure
    <note>Line item  44 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Weights are often expressed in a numerical form.</note>
   <example>They fix the relative importance in trade off weight, 
   thickness, and battery life. How many minutes of battery life are worth how many tenths of a 
   pound in weight.</example>
    </def>
</definition>

<definition>
   <term id="ap233_regularization function">regularization function</term>
   <def>an analytic expression that combines effectiveness measures with weights to produce a single 
   number for the goodness of a design option
    <note>Line item  45 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>This corresponds to the regularization function used in optimal control design and in 
   statistical optimization of processes. </note>
    </def>
</definition>

<definition>
   <term id="ap233_verification requirement">verification requirement</term>
   <def>statement of how a system design or instance shall be shown by the development 
   organization using test, analysis, inspection ,  demonstration, simulation, similarity, 
   sampling, or other method to meet a requirement allocated to the system
    <note>Line item  46 in AP233's concept model and its semantically ordered dictionary list.</note>
    <note>This is a requirement on the development organization and not on the system. </note>
    <note>This is performed to confirm that the deployed system will meet the requirements</note>
    </def>
</definition>

<definition>
   <term id="ap233_verification event">verification event</term>
   <def>occurrence (with date, performer and result) of a comparison of a requirement against 
   the test, analysis, or inspection results of a design or instance of a system
    <note>Line item  47 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_verification procedure">verification procedure</term>
   <def>describes the process used to compare a requirement against the test, analysis, 
   or inspection results of a design or instance of a system
    <note>Line item  48 in AP233's concept model and its semantically ordered dictionary list.</note>
    <example>For a complex digital 
   system the procedure may require the application of a suite of test vectors to the digital 
   system along with environmental tests involving temperature stress and vibration. </example>
   <example> 
   For a complex metal system the the procedure may require the application of several nondestructuve 
   tests to ensure that there are no flaws preset that will cause failure</example>
    </def>
</definition>

<definition>
   <term id="ap233_verification configuration">verification configuration</term>
   <def>arrangement of system and infrastructure necessary to perform the test, analysis, or 
   inspection of a design or instance of a system
    <note>Line item  49 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_verification plan">verification plan</term>
   <def>the schedule of tasks, task durations, start times, end times, task inputs, task 
   outputs, goals, and resources (both personnel and infrastructure) to perform the test, 
   analysis, or inspection of a design or instance of a system
    <note>Line item  50 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_organization">organization</term>
   <def> description of the roles of persons in a group or team 
    <note>Line item  51 in AP233's concept model and its semantically ordered dictionary list.</note>
    <note>This is a subclass of Part, line item  15 in AP233's concept model semantically 
    ordered definition list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_issue">issue</term>
   <def>any question raised concerning the system or the system development
    <note>Line item  52 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_risk">risk</term>
   <def>likelihood and impact of failure to meet any technical or development program goal
    <note>Line item  53 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_verification result">verification result</term>
   <def>describes the result of a verification  event
    <note>Line item  54 in AP233's concept model and its semantically ordered dictionary list.</note>
    <example>For a complex digital system 
   the procedure may require the application of a suite of test vectors to the digital system 
   along with environmental tests involving temperature stress and vibration.  The result 
   describes the test coverage and the tests passed and failed</example>
    </def>
</definition>

<definition>
   <term id="ap233_validation requirement">validation requirement</term>
   <def>statement of how a system requirement, design or instance shall be shown by the 
   development organization to meet stakeholder seeds 
    <note>Line item  55 in AP233's concept model and its semantically ordered dictionary list.</note>
    <note>This is to confirm that 
   the requirements are suitable for the marketplace. </note>
   <example>Proctor and Gamble recently 
   acquired an electric toothbrush product, SpinBrush, from four cleveland area entrepreneurs. 
   Out of a panel of twenty four consumers, twenty three raved about the product. Sales have 
   been sufficient to boost Proctor and Gamble to number 1 position in US oral care.</example>
    </def>
</definition>

<definition>
   <term id="ap233_validation event">validation event</term>
   <def>occurrence (with date, performer and result) of a comparison of a requirement against 
   the stakeholder needs
    <note>Line item  56 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_validation procedure">validation procedure</term>
   <def>describes the process used to compare a requirement against stakeholder needs
    <note>Line item  57 in AP233's concept model and its semantically ordered dictionary list.</note>
    <note>This is a requirement on the development organization and not on the system.</note>
    <note>The procedures may include stakeholder and market surveys, and test marketing</note>
    </def>
</definition>

<definition>
   <term id="ap233_validation infrastructure">validation infrastructure</term>
   <def>arrangement of requirement information and related infrastructure necessary to 
   check the corresondance with stakeholder needs and market realities
    <note>Line item  58 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_validation plan">validation plan</term>
   <def>the schedule of tasks, inputs, outputs, goals, and resources, both personnel and 
   infrastructure to perform the comparison of requirements against stakeholder Needs
    <note>Line item  59 in AP233's concept model and its semantically ordered dictionary list.</note>
    </def>
</definition>

<definition>
   <term id="ap233_validation result">validation result</term>
   <def>describes the result of the validation event
    <note>Line item  60 in AP233's concept model and its semantically ordered dictionary list.</note>
    <note>Entire new product lines 
   have been abandoned after completed development because of unsatisfactory consumer 
   panel responses and unsatisfactory test marketing</note>
    </def>
</definition>

<definition>
   <term id="ap233_design view">design view</term>
   <def>a partial view of the system that captures only design information; it 
   contains no information about realized, manufactured things that may have lot 
   numbers or serial numbers
    <note>Line item  61 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Several different design hierarchues can exist for different purposes. The 
   hierarchy appropriate for manufacturing may conatin more elemnts than the one for
   engineering design by including materials used in manufacture. The hierarchy for 
   verification of first system builkt may be different than others because of the 
   need to build parts of the system for early testing to reduce technical risk.</note>
   <example>This definition corresponds to the SC4 convention of saeparately 
   representing design and realization. SC4 uses the name Part to represent design .</example>
    </def>
</definition>

<definition>
   <term id="ap233_realization view">realization view</term>
   <def>a partial view of the system that captures only information relating 
   to realized things that may have lot numbers or serial numbers
    <note>Line item  62 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>Several different realization hierarchies can exist for different purposes. 
   The hierarchy appropriate for manufacturing may conatin more elemnts than the one 
   for maintenance because that discipline emphasizes line replaceable units.</note>
   <example>This definition corresponds to the SC4 convention of saeparately 
   representing design and realization. SC4  uses Product_as_realized to represent 
   realized things.</example>
    </def>
</definition>

<definition>
   <term id="ap233_functional breakdown">functional breakdown</term>
   <def>a particular collection of functional and other entities collected 
   for a particular engineering purpose
    <note>Line item  63 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>These collections allow an engineer to examine functionality for special 
   purposes, picking those elements needed from the prototypical design and realization views.</note>
   <example>An engineer  may wish to study the cooling system of a car engine and 
   reequire a collection of entities distributed through the prototypical design or 
   realization hierarchies.</example>
    </def>
</definition>

<definition>
   <term id="ap233_system breakdown">system breakdown</term>
   <def>a particular collection of system and other entities collected 
   for a particular engineering purpose
    <note>Line item  64 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>These collections allow an engineer to examine subsystems for special purposes, 
   picking those elements needed from the prototypical system, design and realization views.</note>
   <example>An engineer  may wish to study the cooling system of a car engine and 
   reequire a collection of entities distributed through the prototypical design or 
   realizaation hierarchies.</example>
    </def>
</definition>

<definition>
   <term id="ap233_physical breakdown">physical breakdown</term>
   <def>a particular collection of realized things and other entities collected 
   for a particular engineering purpose
    <note>Line item  65 in AP233's concept model and its semantically ordered dictionary list.</note>
   <note>These collections allow an engineer to examine physical realizations for 
   special purposes, picking those elements needed from the prototypical system, 
   design and realization views.</note>
   <example>An engineer  may wish to study the cooling system of a car engine and 
   reequire a collection of entities distributed through the prototypical design 
   or realizaation hierarchies.</example>
    </def>
</definition>


<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   </express-g>
 </arm>

 <!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <arm_lf>
   <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>

 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <mim_lf>
   <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>

 
 <usage_guide><p>This annex provides the AP233 Concept Model and associated semantic dictionary.  
	These two documents identify the breath and scope of AP233 capability while also providing
	the semantic reference base and model based requirements that have been used to drive
	AP233 development.</p>
	
	   <p>This part of ISO 10303 has its conceptual base founded in its "Concept model".  This model can be downloaded at
   <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model.ppt?rev=1.1"/>.
   Its companion semantic dictionary can be downloaded at
   <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/Concept_Model_Semantic_Dictionary.xls?rev=1.1"/>.and 
   </p>

   <p>These two interwoven documents have been extensively reviewed by the ISO 
   AP233 development team, members of the International Council on Systems Engineering (INCOSE) and
   members of the Object Management Groups (OMG).  This concept model consensus development 
   work was performed via the leadership efforts of INCOSE's Model Driven System Design (MDSD) working group, see 
   <a href="http://www.incose.org/practice/techactivities/modelingtools/mdsdwg.aspx/"/>.  
   This MDDSD group has, in its efforts to extend best practices of System Engineering into software engineering succeeded 
   in initiating the SysML project within the OMG and assisting with that activity. The home page for the SysML 
   partners is <a href="http://www.sysml.org"/>.  The AP233/SysML memo of understanding between INCOSE and OMG can 
   be downloaded at:
   <a href="http://cvs.sourceforge.net/viewcvs.py/*checkout*/stepmod/stepmod/etc/ap233/references/OMG-INCOSE-MOU.doc?rev=1.1"/>.
   </p>
   
   <p>The following 2 figures provide a very high level over view of AP233 from an organizational and 
   application points of view:</p>
		<figure> <title>AP233 module organization</title>
			<img src="Slide1.gif"/>	  </figure>
		<figure> <title>AP233 module application </title>
			<img src="Slide2.gif"/>	 </figure>
			
	<p><b>Comments from Tom Thurman re. Clause 3 definitions:</b></p>
	<p> The following definitions belong in AP210 modules.  </p><ul>
	<li>Change the 433 entry to a reference and write an internal comment against 
	210 to get it included in 210 E2. (don't need a formal ballot comment, just send it to Darla.).</li>
<li>analytical model;</li>
<li>analytical representation (actually there has been a name change to
'analytical model application');</li>
<li>'design view' should probably be in an AP210 module or other;</li>
<li>'model parameter' --move to an AP210 module;</li>
<li>'parameter assignment' --move to an AP210 module;</li>
<li>'port' --move to an AP210 module.  The proposed definition is actually
incorrect, as there is a long history of 'port' in the electrical world;</li>
<li>'property value' -- this is synonymous with Characteristic from AP210.</li></ul>

<p>General Comments:</p><ul>
<li>'and', 'and in','behavior'.. others should also be defined in lower level
modules.  The scope of an entire AP is too large for such specific
concepts.</li>
<li>'domain of interest' should probably be in a ISO 10303 document, maybe ISO
10303-1?</li>
<li>'xxx function' and 'function xxx'. there are no adjectives to make it easy
to discern that these concepts are only in the context of AP 233.  other
disciplines/ APs also use the word function (i.e, AP214).</li>
<li>'input output'--Is there an INCOSE or IEC or IEEE document that this word
is defined in?  It appears to be an AP233 created name.  If there are no
existing standards then an AP can be justified to define a new term, but
generally that is not a good idea.</li>
<li>'part' --move to another module that includes part information in it.</li>
<li>'property' -- This is defined in part 4x?</li>
</ul>


 </usage_guide>

</module>
