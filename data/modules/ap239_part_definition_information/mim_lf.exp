(* This file was generated by exppp (an EXPRESS Pretty Printer)
written at the National Institute of Standards and Technology
by Don Libes, February 19, 1993.

WARNING: If you modify this file and want to save the changes,
delete this comment block or else the file will be rewritten
the next time exppp processes this schema. *)

SCHEMA ap239_part_definition_information_mim_lf;

  TYPE action_items = SELECT
    (ascribable_state);
  END_TYPE; -- action_items

  TYPE action_method_items = SELECT
    (action_method_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- action_method_items

  TYPE ahead_or_behind = ENUMERATION OF
    (ahead,
     exact,
     behind);
  END_TYPE; -- ahead_or_behind

  TYPE aliasable_item = SELECT
    (product,
     product_definition,
     product_definition_formation,
     security_classification,
     event_occurrence,
     document_file,
     product_definition_relationship,
     interface_connector_as_realized,
     product_as_planned,
     organization,
     requirement_source,
     interface_connector_as_planned,
     approval_status,
     requirement_assignment,
     organizational_project,
     certification,
     product_definition_formation_relationship,
     product_as_realized,
     interface_connector_design);
  END_TYPE; -- aliasable_item

  TYPE amount_of_substance_measure = REAL;
  END_TYPE; -- amount_of_substance_measure

  TYPE ap239_dm_approval_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_approval_item

  TYPE ap239_dm_attribute_classification_item = SELECT
    (descriptive_representation_item,
     document_relationship,
     document_type,
     document_usage_role,
     envelope,
     envelope_relationship,
     identification_role,
     information_right,
     information_usage_right,
     measure_representation_item,
     message_relationship,
     object_role,
     product_definition_relationship,
     representation,
     representation_item,
     structured_message,
     usage_association);
  END_TYPE; -- ap239_dm_attribute_classification_item

  TYPE ap239_dm_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     message_relationship,
     structured_message);
  END_TYPE; -- ap239_dm_attribute_language_item

  TYPE ap239_dm_classification_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     applied_usage_right,
     descriptive_representation_item,
     document_file,
     document_relationship,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     measure_representation_item,
     message_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_relationship,
     representation,
     structured_message,
     usage_association);
  END_TYPE; -- ap239_dm_classification_item

  TYPE ap239_dm_contract_item = SELECT
    (product,
     structured_message);
  END_TYPE; -- ap239_dm_contract_item

  TYPE ap239_dm_date_and_time_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_usage_right,
     product);
  END_TYPE; -- ap239_dm_date_and_time_item

  TYPE ap239_dm_date_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_usage_right,
     product);
  END_TYPE; -- ap239_dm_date_item

  TYPE ap239_dm_document_reference_item = SELECT
    (applied_identification_assignment,
     certification,
     contract,
     information_right,
     information_usage_right,
     organization,
     person);
  END_TYPE; -- ap239_dm_document_reference_item

  TYPE ap239_dm_ir_usage_item = SELECT
    (applied_certification_assignment,
     certification,
     document_file,
     document_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_relationship,
     structured_message);
  END_TYPE; -- ap239_dm_ir_usage_item

  TYPE ap239_dm_multi_language_attribute_item = SELECT
    (envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     message_relationship,
     structured_message);
  END_TYPE; -- ap239_dm_multi_language_attribute_item

  TYPE ap239_dm_organization_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_organization_item

  TYPE ap239_dm_person_and_organization_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_person_and_organization_item

  TYPE ap239_dm_security_classification_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_security_classification_item

  TYPE ap239_dm_state_of_item = SELECT
    (applied_external_identification_assignment,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_dm_state_of_item

  TYPE ap239_dm_state_type_of_item = SELECT
    (applied_external_identification_assignment,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_dm_state_type_of_item

  TYPE ap239_mri_aliasable_item = SELECT
    (approval_status,
     certification,
     event_occurrence,
     organization,
     organizational_project,
     security_classification);
  END_TYPE; -- ap239_mri_aliasable_item

  TYPE ap239_mri_approval_item = SELECT
    (applied_contract_assignment,
     applied_event_occurrence_assignment,
     applied_identification_assignment,
     applied_organizational_project_assignment,
     event_occurrence,
     organizational_project);
  END_TYPE; -- ap239_mri_approval_item

  TYPE ap239_mri_attribute_classification_item = SELECT
    (approval,
     approval_relationship,
     approval_role,
     approval_status,
     certification,
     certification_type,
     contract_type,
     date_role,
     date_time_role,
     event_occurrence_context_role,
     event_occurrence_relationship,
     group,
     identification_role,
     name_attribute,
     object_role,
     organization_relationship,
     organization_role,
     organizational_address,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization_address,
     person_and_organization_role,
     security_classification_level,
     state_type,
     state_observed,
     state_type_relationship,
     state_observed_relationship,
     applied_state_type_assignment,
     applied_state_assignment);
  END_TYPE; -- ap239_mri_attribute_classification_item

  TYPE ap239_mri_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     event_occurrence);
  END_TYPE; -- ap239_mri_attribute_language_item

  TYPE ap239_mri_certification_item = SELECT
    (organizational_project);
  END_TYPE; -- ap239_mri_certification_item

  TYPE ap239_mri_classification_item = SELECT
    (address,
     applied_approval_assignment,
     applied_certification_assignment,
     applied_contract_assignment,
     applied_date_and_time_assignment,
     applied_date_assignment,
     applied_event_occurrence_assignment,
     applied_identification_assignment,
     applied_organization_assignment,
     applied_organizational_project_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     approval,
     approval_person_organization,
     approval_relationship,
     approval_status,
     calendar_date,
     certification,
     contract,
     date_and_time,
     event_occurrence,
     event_occurrence_relationship,
     language,
     multi_language_attribute_assignment,
     organization,
     organization_relationship,
     organizational_address,
     organizational_project,
     organizational_project_relationship,
     person_and_organization,
     person_and_organization_address,
     security_classification);
  END_TYPE; -- ap239_mri_classification_item

  TYPE ap239_mri_date_and_time_item = SELECT
    (applied_certification_assignment,
     applied_contract_assignment,
     applied_identification_assignment,
     organizational_address,
     person_and_organization_address);
  END_TYPE; -- ap239_mri_date_and_time_item

  TYPE ap239_mri_date_item = SELECT
    (applied_certification_assignment,
     applied_contract_assignment,
     applied_identification_assignment,
     organizational_address,
     person_and_organization_address);
  END_TYPE; -- ap239_mri_date_item

  TYPE ap239_mri_event_occurrence_item = SELECT
    (certification,
     organizational_project);
  END_TYPE; -- ap239_mri_event_occurrence_item

  TYPE ap239_mri_identification_item = SELECT
    (approval_status,
     certification,
     event_occurrence,
     organization,
     organizational_project,
     security_classification);
  END_TYPE; -- ap239_mri_identification_item

  TYPE ap239_mri_multi_language_attribute_item = SELECT
    (event_occurrence);
  END_TYPE; -- ap239_mri_multi_language_attribute_item

  TYPE ap239_mri_organization_item = SELECT
    (applied_certification_assignment,
     applied_contract_assignment,
     applied_event_occurrence_assignment,
     applied_organizational_project_assignment,
     certification,
     event_occurrence,
     organizational_project);
  END_TYPE; -- ap239_mri_organization_item

  TYPE ap239_mri_person_and_organization_item = SELECT
    (applied_certification_assignment,
     applied_contract_assignment,
     applied_event_occurrence_assignment,
     applied_organizational_project_assignment,
     certification,
     event_occurrence,
     organizational_project);
  END_TYPE; -- ap239_mri_person_and_organization_item

  TYPE ap239_padi_aliasable_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_aliasable_item

  TYPE ap239_padi_approval_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_concept,
     product_definition,
     product_definition_formation,
     product_design_to_individual,
     product_planned_to_realized);
  END_TYPE; -- ap239_padi_approval_item

  TYPE ap239_padi_attribute_classification_item = SELECT
    (application_context,
     application_context_element,
     product_category,
     product_concept,
     product_concept_context,
     product_definition,
     product_definition_context,
     product_definition_formation_relationship,
     product_definition_relationship);
  END_TYPE; -- ap239_padi_attribute_classification_item

  TYPE ap239_padi_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     connector_on,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_attribute_language_item

  TYPE ap239_padi_certification_item = SELECT
    (interface_connection,
     product,
     product_as_planned,
     product_as_realized,
     product_definition_formation,
     product_definition_formation_relationship);
  END_TYPE; -- ap239_padi_certification_item

  TYPE ap239_padi_classification_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     interface_definition_for,
     product,
     product_as_planned,
     product_as_realized,
     product_category,
     product_concept,
     product_definition,
     product_definition_context,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     product_design_to_individual,
     product_planned_to_realized,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- ap239_padi_classification_item

  TYPE ap239_padi_condition_action_method_items = SELECT
    (action_method_relationship,
     applied_approval_assignment,
     applied_certification_assignment,
     applied_classification_assignment,
     applied_contract_assignment,
     applied_date_and_time_assignment,
     applied_date_assignment,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_identification_assignment,
     applied_organization_assignment,
     applied_person_and_organization_assignment,
     calendar_date,
     date_and_time,
     product,
     product_as_individual,
     product_definition,
     product_definition_formation,
     product_related_product_category,
     property_definition);
  END_TYPE; -- ap239_padi_condition_action_method_items

  TYPE ap239_padi_condition_evaluation_action_items = SELECT
    (applied_approval_assignment,
     applied_certification_assignment,
     applied_classification_assignment,
     applied_contract_assignment,
     applied_date_and_time_assignment,
     applied_date_assignment,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_identification_assignment,
     applied_organization_assignment,
     applied_person_and_organization_assignment,
     calendar_date,
     date_and_time,
     product,
     product_as_individual,
     product_definition,
     product_definition_formation,
     product_related_product_category,
     property_definition);
  END_TYPE; -- ap239_padi_condition_evaluation_action_items

  TYPE ap239_padi_contract_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organizational_project,
     product,
     product_as_planned,
     product_as_realized,
     product_definition_formation);
  END_TYPE; -- ap239_padi_contract_item

  TYPE ap239_padi_date_and_time_item = SELECT
    (applied_organizational_project_assignment,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_concept,
     product_definition,
     product_definition_formation,
     product_design_to_individual,
     product_planned_to_realized);
  END_TYPE; -- ap239_padi_date_and_time_item

  TYPE ap239_padi_date_item = SELECT
    (applied_organizational_project_assignment,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_concept,
     product_definition,
     product_definition_formation,
     product_design_to_individual,
     product_planned_to_realized);
  END_TYPE; -- ap239_padi_date_item

  TYPE ap239_padi_document_reference_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     organizational_project,
     product,
     product_as_planned,
     product_as_realized,
     product_concept,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_design_to_individual,
     product_planned_to_realized);
  END_TYPE; -- ap239_padi_document_reference_item

  TYPE ap239_padi_identification_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_identification_item

  TYPE ap239_padi_ir_usage_item = SELECT
    (applied_security_classification_assignment,
     interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     requirement_assignment,
     security_classification);
  END_TYPE; -- ap239_padi_ir_usage_item

  TYPE ap239_padi_multi_language_attribute_item = SELECT
    (connector_on,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_multi_language_attribute_item

  TYPE ap239_padi_organization_item = SELECT
    (applied_identification_assignment,
     interface_connector_as_planned,
     interface_connector_as_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_organization_item

  TYPE ap239_padi_person_and_organization_item = SELECT
    (applied_identification_assignment,
     interface_connector_as_planned,
     interface_connector_as_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_person_and_organization_item

  TYPE ap239_padi_project_item = SELECT
    (product_concept);
  END_TYPE; -- ap239_padi_project_item

  TYPE ap239_padi_requirement_assigned_item = SELECT
    (organizational_project,
     product,
     product_as_planned,
     product_as_realized,
     product_definition_formation);
  END_TYPE; -- ap239_padi_requirement_assigned_item

  TYPE ap239_padi_requirement_source_item = SELECT
    (product_as_individual,
     product_definition_formation);
  END_TYPE; -- ap239_padi_requirement_source_item

  TYPE ap239_padi_security_classification_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_security_classification_item

  TYPE ap239_padi_state_of_item = SELECT
    (certification,
     connector_on,
     contract,
     interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organization,
     organizational_project,
     person_and_organization,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     security_classification);
  END_TYPE; -- ap239_padi_state_of_item

  TYPE ap239_padi_state_type_of_item = SELECT
    (certification,
     connector_on,
     contract,
     interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organization,
     organizational_project,
     person_and_organization,
     product,
     product_as_planned,
     product_as_realized,
     product_category,
     product_definition,
     product_definition_formation,
     security_classification);
  END_TYPE; -- ap239_padi_state_type_of_item

  TYPE ap239_props_approval_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship);
  END_TYPE; -- ap239_props_approval_item

  TYPE ap239_props_attribute_classification_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     property_definition_representation,
     representation,
     representation_context,
     representation_item);
  END_TYPE; -- ap239_props_attribute_classification_item

  TYPE ap239_props_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation_item);
  END_TYPE; -- ap239_props_attribute_language_item

  TYPE ap239_props_classification_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     property_definition_representation,
     representation,
     representation_context,
     representation_item);
  END_TYPE; -- ap239_props_classification_item

  TYPE ap239_props_date_and_time_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation);
  END_TYPE; -- ap239_props_date_and_time_item

  TYPE ap239_props_date_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation);
  END_TYPE; -- ap239_props_date_item

  TYPE ap239_props_identification_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship);
  END_TYPE; -- ap239_props_identification_item

  TYPE ap239_props_multi_language_attribute_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation_item);
  END_TYPE; -- ap239_props_multi_language_attribute_item

  TYPE ap239_props_organization_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation);
  END_TYPE; -- ap239_props_organization_item

  TYPE ap239_props_person_and_organization_item = SELECT
    (general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation);
  END_TYPE; -- ap239_props_person_and_organization_item

  TYPE approval_item = SELECT
    (applied_action_method_assignment,
     applied_document_reference,
     interface_connector_as_realized,
     interface_connector_design_to_planned,
     product_definition_formation,
     organizational_project,
     product_planned_to_realized,
     product_definition,
     action_method,
     applied_contract_assignment,
     property_definition,
     contract,
     interface_connector_planned_to_realized,
     interface_connection,
     interface_connector_design,
     property_definition_relationship,
     product_concept,
     product_design_to_individual,
     structured_message,
     general_property_relationship,
     certification,
     applied_organizational_project_assignment,
     applied_document_usage_constraint_assignment,
     product_as_planned,
     applied_identification_assignment,
     event_occurrence,
     product_as_realized,
     envelope,
     action,
     interface_connector_design_to_realized,
     general_property,
     applied_event_occurrence_assignment,
     interface_connector_as_planned,
     product,
     applied_action_assignment);
  END_TYPE; -- approval_item

  TYPE area_measure = REAL;
  END_TYPE; -- area_measure

  TYPE attribute_classification_item = SELECT
    (person_and_organization_role,
     document_type,
     security_classification_level,
     certification,
     information_usage_right,
     object_role,
     representation,
     event_occurrence_relationship,
     group,
     approval_relationship,
     organization_role,
     property_definition_representation,
     product_definition_formation_relationship,
     document_usage_role,
     name_attribute,
     product_definition_relationship,
     general_property,
     organizational_project_role,
     application_context,
     organizational_address,
     envelope,
     identification_role,
     certification_type,
     representation_context,
     product_concept,
     date_time_role,
     measure_representation_item,
     product_definition,
     approval_role,
     envelope_relationship,
     property_definition_relationship,
     contract_type,
     descriptive_representation_item,
     representation_item,
     event_occurrence_context_role,
     organizational_project_relationship,
     information_right,
     product_category,
     organization_relationship,
     usage_association,
     structured_message,
     message_relationship,
     product_concept_context,
     general_property_relationship,
     date_role,
     application_context_element,
     person_and_organization_address,
     product_definition_context,
     document_relationship,
     property_definition,
     approval,
     approval_status);
  END_TYPE; -- attribute_classification_item

  TYPE attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     identification_role,
     organization_relationship,
     property_definition,
     product,
     envelope,
     date_time_role,
     property_definition_relationship,
     structured_message,
     event_occurrence,
     information_right,
     person_and_organization,
     product_definition,
     message_relationship,
     approval,
     general_property,
     representation_item,
     organizational_project,
     organizational_project_role,
     envelope_relationship,
     general_property_relationship,
     organizational_project_relationship,
     approval_status,
     contract,
     certification,
     approval_relationship,
     connector_on,
     information_usage_right,
     date_role,
     certification_type,
     product_definition_formation);
  END_TYPE; -- attribute_language_item

  TYPE attribute_type = SELECT
    (label,
     text);
  END_TYPE; -- attribute_type

  TYPE celsius_temperature_measure = REAL;
  END_TYPE; -- celsius_temperature_measure

  TYPE certification_item = SELECT
    (product_as_planned,
     product,
     organizational_project,
     product_as_realized,
     interface_connection,
     product_definition_formation,
     product_definition_formation_relationship);
  END_TYPE; -- certification_item

  TYPE characterized_action_definition = SELECT
    (action,
     action_method,
     action_method_relationship,
     action_relationship);
  END_TYPE; -- characterized_action_definition

  TYPE characterized_definition = SELECT
    (characterized_object,
     characterized_product_definition,
     shape_definition);
  END_TYPE; -- characterized_definition

  TYPE characterized_material_property = SELECT
    (material_property_representation,
     product_material_composition_relationship);
  END_TYPE; -- characterized_material_property

  TYPE characterized_product_definition = SELECT
    (product_definition,
     product_definition_relationship);
  END_TYPE; -- characterized_product_definition

  TYPE characterized_resource_definition = SELECT
    (action_resource,
     action_resource_relationship,
     action_resource_requirement,
     action_resource_requirement_relationship);
  END_TYPE; -- characterized_resource_definition

  TYPE classification_item = SELECT
    (general_property_relationship,
     representation,
     applied_organization_assignment,
     requirement_source,
     applied_person_and_organization_assignment,
     action,
     event_occurrence_relationship,
     state_type_relationship,
     property_definition_representation,
     product_category,
     applied_identification_assignment,
     envelope,
     product_definition_relationship,
     state_type,
     interface_connector_design_to_planned,
     information_right,
     approval_relationship,
     applied_usage_right,
     interface_connector_as_planned,
     product_as_planned,
     envelope_relationship,
     product_planned_to_realized,
     organizational_project_relationship,
     applied_state_type_assignment,
     applied_document_usage_constraint_assignment,
     interface_connector_as_realized,
     organization,
     applied_document_reference,
     applied_date_and_time_assignment,
     interface_connector_planned_to_realized,
     event_occurrence,
     date_and_time,
     product_definition_formation_relationship,
     general_property,
     state_observed_relationship,
     organizational_project,
     product_definition_formation,
     document_relationship,
     message_relationship,
     representation_context,
     product,
     contract,
     product_concept,
     language,
     product_definition_context,
     product_as_realized,
     interface_connector_design_to_realized,
     interface_connector_design,
     applied_action_method_assignment,
     applied_event_occurrence_assignment,
     usage_association,
     descriptive_representation_item,
     representation_item,
     interface_connection,
     property_definition,
     property_definition_relationship,
     approval,
     organizational_address,
     applied_contract_assignment,
     approval_status,
     measure_representation_item,
     interface_definition_for,
     structured_message,
     address,
     applied_certification_assignment,
     information_usage_right,
     applied_action_assignment,
     applied_security_classification_assignment,
     multi_language_attribute_assignment,
     organization_relationship,
     product_definition,
     action_method,
     group,
     applied_state_assignment,
     approval_person_organization,
     requirement_assignment,
     person_and_organization_address,
     applied_organizational_project_assignment,
     certification,
     applied_external_identification_assignment,
     calendar_date,
     action_method_relationship,
     state_observed,
     person_and_organization,
     security_classification,
     applied_approval_assignment,
     document_file,
     applied_date_assignment,
     product_design_to_individual);
  END_TYPE; -- classification_item

  TYPE compound_item_definition = SELECT
    (list_representation_item,
     set_representation_item);
  END_TYPE; -- compound_item_definition

  TYPE condition_action_method_items = SELECT
    (action_method_relationship,
     applied_person_and_organization_assignment,
     applied_classification_assignment,
     product_definition_formation,
     applied_date_assignment,
     applied_certification_assignment,
     applied_document_reference,
     applied_organization_assignment,
     product_definition,
     applied_contract_assignment,
     calendar_date,
     applied_document_usage_constraint_assignment,
     product,
     date_and_time,
     applied_identification_assignment,
     product_as_individual,
     property_definition,
     applied_approval_assignment,
     product_related_product_category,
     applied_date_and_time_assignment);
  END_TYPE; -- condition_action_method_items

  TYPE condition_approval_item = SELECT
    (action_method,
     applied_action_method_assignment);
  END_TYPE; -- condition_approval_item

  TYPE condition_classification_item = SELECT
    (action_method,
     action_method_relationship,
     applied_action_method_assignment);
  END_TYPE; -- condition_classification_item

  TYPE condition_date_and_time_item = SELECT
    (action_method,
     applied_action_method_assignment);
  END_TYPE; -- condition_date_and_time_item

  TYPE condition_date_item = SELECT
    (action_method,
     applied_action_method_assignment);
  END_TYPE; -- condition_date_item

  TYPE condition_evaluation_action_items = SELECT
    (applied_certification_assignment,
     product_definition_formation,
     property_definition,
     applied_document_reference,
     applied_classification_assignment,
     calendar_date,
     product_as_individual,
     applied_contract_assignment,
     product_definition,
     product_related_product_category,
     applied_person_and_organization_assignment,
     applied_date_assignment,
     applied_document_usage_constraint_assignment,
     applied_date_and_time_assignment,
     product,
     applied_approval_assignment,
     applied_organization_assignment,
     applied_identification_assignment,
     date_and_time);
  END_TYPE; -- condition_evaluation_action_items

  TYPE condition_evaluation_approval_item = SELECT
    (action,
     applied_action_assignment);
  END_TYPE; -- condition_evaluation_approval_item

  TYPE condition_evaluation_classification_item = SELECT
    (action,
     applied_action_assignment,
     group);
  END_TYPE; -- condition_evaluation_classification_item

  TYPE condition_evaluation_date_and_time_item = SELECT
    (action,
     applied_action_assignment);
  END_TYPE; -- condition_evaluation_date_and_time_item

  TYPE condition_evaluation_date_item = SELECT
    (action,
     applied_action_assignment);
  END_TYPE; -- condition_evaluation_date_item

  TYPE condition_evaluation_groupable_item = SELECT
    (applied_action_assignment,
     applied_action_method_assignment);
  END_TYPE; -- condition_evaluation_groupable_item

  TYPE condition_evaluation_identification_item = SELECT
    (action);
  END_TYPE; -- condition_evaluation_identification_item

  TYPE condition_evaluation_name_item = SELECT
    (applied_action_assignment);
  END_TYPE; -- condition_evaluation_name_item

  TYPE condition_evaluation_organization_item = SELECT
    (action,
     applied_action_assignment);
  END_TYPE; -- condition_evaluation_organization_item

  TYPE condition_evaluation_person_and_organization_item = SELECT
    (action,
     applied_action_assignment);
  END_TYPE; -- condition_evaluation_person_and_organization_item

  TYPE condition_identification_item = SELECT
    (action_method);
  END_TYPE; -- condition_identification_item

  TYPE condition_name_item = SELECT
    (applied_action_method_assignment);
  END_TYPE; -- condition_name_item

  TYPE condition_organization_item = SELECT
    (action_method,
     applied_action_method_assignment);
  END_TYPE; -- condition_organization_item

  TYPE condition_person_and_organization_item = SELECT
    (action_method,
     applied_action_method_assignment);
  END_TYPE; -- condition_person_and_organization_item

  TYPE configuration_design_item = SELECT
    (product_definition,
     product_definition_formation);
  END_TYPE; -- configuration_design_item

  TYPE contents_item = SELECT
    (representation);
  END_TYPE; -- contents_item

  TYPE context_dependent_measure = REAL;
  END_TYPE; -- context_dependent_measure

  TYPE contract_item = SELECT
    (requirement_assignment,
     product_definition,
     interface_connector_as_planned,
     product_definition_formation,
     product_as_realized,
     interface_connector_design,
     product,
     structured_message,
     product_definition_relationship,
     information_usage_right,
     interface_connector_as_realized,
     organizational_project,
     product_definition_formation_relationship,
     requirement_source,
     product_as_planned);
  END_TYPE; -- contract_item

  TYPE count_measure = NUMBER;
  END_TYPE; -- count_measure

  TYPE date_and_time_item = SELECT
    (product_as_realized,
     applied_person_and_organization_assignment,
     applied_contract_assignment,
     security_classification,
     contract,
     approval_person_organization,
     applied_action_method_assignment,
     interface_connector_design_to_realized,
     applied_certification_assignment,
     interface_connector_as_realized,
     applied_identification_assignment,
     organizational_address,
     applied_organizational_project_assignment,
     applied_action_assignment,
     event_occurrence,
     structured_message,
     general_property,
     property_definition,
     interface_connector_planned_to_realized,
     action,
     property_definition_relationship,
     product_definition_formation,
     product_concept,
     product_definition,
     certification,
     product,
     general_property_relationship,
     organizational_project,
     envelope,
     applied_document_reference,
     representation,
     interface_connector_design_to_planned,
     product_planned_to_realized,
     applied_organization_assignment,
     person_and_organization_address,
     product_as_planned,
     applied_security_classification_assignment,
     interface_connector_as_planned,
     product_design_to_individual,
     applied_document_usage_constraint_assignment,
     action_method,
     applied_usage_right);
  END_TYPE; -- date_and_time_item

  TYPE date_and_time_item_approval = SELECT
    (approval_person_organization);
  END_TYPE; -- date_and_time_item_approval

  TYPE date_item = SELECT
    (product,
     general_property,
     interface_connector_planned_to_realized,
     applied_organization_assignment,
     approval_person_organization,
     interface_connector_design_to_realized,
     security_classification,
     event_occurrence,
     applied_organizational_project_assignment,
     general_property_relationship,
     interface_connector_as_planned,
     envelope,
     applied_identification_assignment,
     applied_certification_assignment,
     applied_person_and_organization_assignment,
     organizational_project,
     applied_contract_assignment,
     interface_connector_design_to_planned,
     interface_connector_as_realized,
     organizational_address,
     action,
     applied_document_reference,
     representation,
     action_method,
     applied_action_assignment,
     applied_document_usage_constraint_assignment,
     product_as_planned,
     property_definition_relationship,
     applied_usage_right,
     certification,
     product_concept,
     contract,
     product_definition_formation,
     property_definition,
     product_design_to_individual,
     structured_message,
     applied_security_classification_assignment,
     product_planned_to_realized,
     product_definition,
     applied_action_method_assignment,
     person_and_organization_address,
     product_as_realized);
  END_TYPE; -- date_item

  TYPE date_item_approval = SELECT
    (approval_person_organization);
  END_TYPE; -- date_item_approval

  TYPE date_time_or_event_occurrence = SELECT
    (date_time_select,
     event_occurrence);
  END_TYPE; -- date_time_or_event_occurrence

  TYPE date_time_select = SELECT
    (date,
     local_time,
     date_and_time);
  END_TYPE; -- date_time_select

  TYPE day_in_month_number = INTEGER;
  WHERE
    wr1: ((1 <= SELF) AND (SELF <= 31));
  END_TYPE; -- day_in_month_number

  TYPE day_in_week_number = INTEGER;
  WHERE
    wr1: ((1 <= SELF) AND (SELF <= 7));
  END_TYPE; -- day_in_week_number

  TYPE day_in_year_number = INTEGER;
  WHERE
    wr1: ((1 <= SELF) AND (SELF <= 366));
  END_TYPE; -- day_in_year_number

  TYPE derived_property_select = SELECT
    (property_definition,
     action_property,
     resource_property);
  END_TYPE; -- derived_property_select

  TYPE description_attribute_select = SELECT
    (action_request_solution,
     application_context,
     approval_role,
     configuration_design,
     date_role,
     date_time_role,
     context_dependent_shape_representation,
     effectivity,
     external_source,
     organization_role,
     person_and_organization_role,
     person_and_organization,
     person_role,
     property_definition_representation,
     representation,
     time_role);
  END_TYPE; -- description_attribute_select

  TYPE descriptive_measure = STRING;
  END_TYPE; -- descriptive_measure

  TYPE dm_aliasable_item = SELECT
    (document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_aliasable_item

  TYPE dm_approval_item = SELECT
    (contract,
     certification,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_approval_item

  TYPE dm_attribute_language_item = SELECT
    (organizational_project,
     approval_status,
     contract,
     person_and_organization,
     date_role,
     organizational_project_relationship,
     organization_relationship,
     organizational_project_role,
     certification_type,
     approval,
     approval_relationship,
     date_time_role,
     multi_language_attribute_assignment,
     certification,
     identification_role,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     document_relationship,
     document_usage_role,
     external_source,
     object_role,
     product,
     product_category,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_attribute_language_item

  TYPE dm_contract_item = SELECT
    (product_definition_formation);
  END_TYPE; -- dm_contract_item

  TYPE dm_date_and_time_item = SELECT
    (certification,
     applied_security_classification_assignment,
     contract,
     applied_person_and_organization_assignment,
     applied_organization_assignment,
     security_classification,
     document_file,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_date_and_time_item

  TYPE dm_date_item = SELECT
    (applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     contract,
     security_classification,
     certification,
     applied_organization_assignment,
     document_file,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_date_item

  TYPE dm_identification_item = SELECT
    (organization,
     contract,
     security_classification_level,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_identification_item

  TYPE dm_multi_language_attribute_item = SELECT
    (organizational_project_role,
     approval,
     contract,
     date_role,
     person_and_organization,
     organizational_project,
     organizational_project_relationship,
     certification,
     identification_role,
     certification_type,
     organization_relationship,
     date_time_role,
     approval_status,
     approval_relationship,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     document_relationship,
     document_usage_role,
     external_source,
     object_role,
     product,
     product_category,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_multi_language_attribute_item

  TYPE dm_organization_item = SELECT
    (applied_identification_assignment,
     contract,
     applied_security_classification_assignment,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_organization_item

  TYPE dm_person_and_organization_item = SELECT
    (contract,
     applied_identification_assignment,
     applied_security_classification_assignment,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_person_and_organization_item

  TYPE dm_security_classification_item = SELECT
    (document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_security_classification_item

  TYPE document_location_select = SELECT
    (product_definition);
  END_TYPE; -- document_location_select

  TYPE document_reference_item = SELECT
    (interface_connector_design,
     interface_connector_design_to_planned,
     product_design_to_individual,
     contract,
     applied_identification_assignment,
     information_right,
     product_definition,
     organizational_project,
     product,
     interface_connector_planned_to_realized,
     information_usage_right,
     product_as_realized,
     person,
     interface_connector_as_realized,
     product_concept,
     product_definition_formation,
     certification,
     product_planned_to_realized,
     interface_connector_design_to_realized,
     product_as_planned,
     product_definition_formation_relationship,
     organization,
     interface_connector_as_planned);
  END_TYPE; -- document_reference_item

  TYPE electric_current_measure = REAL;
  END_TYPE; -- electric_current_measure

  TYPE envelope_approval = SELECT
    (envelope);
  END_TYPE; -- envelope_approval

  TYPE envelope_date = SELECT
    (envelope);
  END_TYPE; -- envelope_date

  TYPE envelope_date_and_time = SELECT
    (envelope);
  END_TYPE; -- envelope_date_and_time

  TYPE envelope_organization_item = SELECT
    (envelope);
  END_TYPE; -- envelope_organization_item

  TYPE envelope_person_organization_item = SELECT
    (envelope);
  END_TYPE; -- envelope_person_organization_item

  TYPE event_occurrence_date_and_time_item = SELECT
    (event_occurrence);
  END_TYPE; -- event_occurrence_date_and_time_item

  TYPE event_occurrence_date_item = SELECT
    (event_occurrence);
  END_TYPE; -- event_occurrence_date_item

  TYPE event_occurrence_item = SELECT
    (certification,
     organizational_project);
  END_TYPE; -- event_occurrence_item

  TYPE external_class_name_item = SELECT
    (external_class_library);
  END_TYPE; -- external_class_name_item

  TYPE external_identification_item = SELECT
    (product_definition,
     document_file);
  END_TYPE; -- external_identification_item

  TYPE file_identification_item = SELECT
    (document_file);
  END_TYPE; -- file_identification_item

  TYPE file_location_select = SELECT
    (document_file);
  END_TYPE; -- file_location_select

  TYPE file_version_item = SELECT
    (document_file);
  END_TYPE; -- file_version_item

  TYPE founded_item_select = SELECT
    (founded_item,
     representation_item);
  END_TYPE; -- founded_item_select

  TYPE groupable_item = SELECT
    (applied_action_assignment,
     representation,
     applied_action_method_assignment);
  WHERE
    wr1: (NOT ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.GROUP' IN TYPEOF(
             SELF)));
  END_TYPE; -- groupable_item

  TYPE hour_in_day = INTEGER;
  WHERE
    wr1: ((0 <= SELF) AND (SELF <= 24));
  END_TYPE; -- hour_in_day

  TYPE id_attribute_select = SELECT
    (action,
     address,
     product_category,
     property_definition,
     shape_aspect,
     shape_aspect_relationship,
     application_context,
     group,
     organizational_project,
     representation);
  END_TYPE; -- id_attribute_select

  TYPE identification_item = SELECT
    (approval_status,
     interface_connector_as_planned,
     product_definition_formation,
     state_type_relationship,
     general_property,
     general_property_relationship,
     organization,
     interface_connector_as_realized,
     product_as_planned,
     document_file,
     action,
     product_as_realized,
     product_as_individual,
     state_type,
     security_classification_level,
     certification,
     property_definition,
     interface_connector_design,
     event_occurrence,
     contract,
     product_definition,
     product,
     action_method,
     security_classification,
     property_definition_relationship,
     organizational_project);
  END_TYPE; -- identification_item

  TYPE identifier = STRING;
  END_TYPE; -- identifier

  TYPE ir_approval_item = SELECT
    (contract,
     certification,
     applied_usage_right,
     information_usage_right);
  END_TYPE; -- ir_approval_item

  TYPE ir_contract_item = SELECT
    (information_usage_right);
  END_TYPE; -- ir_contract_item

  TYPE ir_date_and_time_item = SELECT
    (certification,
     applied_security_classification_assignment,
     contract,
     applied_person_and_organization_assignment,
     applied_organization_assignment,
     security_classification,
     information_usage_right);
  END_TYPE; -- ir_date_and_time_item

  TYPE ir_date_item = SELECT
    (applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     contract,
     security_classification,
     certification,
     applied_organization_assignment,
     information_usage_right);
  END_TYPE; -- ir_date_item

  TYPE ir_identification_item = SELECT
    (organization,
     contract,
     security_classification_level,
     information_right,
     information_usage_right);
  END_TYPE; -- ir_identification_item

  TYPE ir_organization_item = SELECT
    (applied_identification_assignment,
     contract,
     applied_security_classification_assignment,
     information_usage_right);
  END_TYPE; -- ir_organization_item

  TYPE ir_person_and_organization_item = SELECT
    (contract,
     applied_identification_assignment,
     applied_security_classification_assignment,
     information_usage_right);
  END_TYPE; -- ir_person_and_organization_item

  TYPE ir_usage_item = SELECT
    (certification,
     product_definition,
     product_as_realized,
     product_definition_relationship,
     product_definition_formation_relationship,
     product_definition_formation,
     interface_connector_as_planned,
     requirement_assignment,
     product,
     interface_connector_design,
     interface_connector_as_realized,
     structured_message,
     document_file,
     applied_security_classification_assignment,
     document_relationship,
     interface_connection,
     security_classification,
     applied_certification_assignment,
     product_as_planned);
  END_TYPE; -- ir_usage_item

  TYPE label = STRING;
  END_TYPE; -- label

  TYPE length_measure = REAL;
  END_TYPE; -- length_measure

  TYPE list_of_two_representation_items = list_representation_item;
  WHERE
    wr1: (HIINDEX(SELF) = 2);
  END_TYPE; -- list_of_two_representation_items

  TYPE list_representation_item = LIST [1:?] OF representation_item;
  END_TYPE; -- list_representation_item

  TYPE luminous_intensity_measure = REAL;
  END_TYPE; -- luminous_intensity_measure

  TYPE mass_measure = REAL;
  END_TYPE; -- mass_measure

  TYPE measure_value = SELECT
    (length_measure,
     mass_measure,
     time_measure,
     electric_current_measure,
     thermodynamic_temperature_measure,
     celsius_temperature_measure,
     amount_of_substance_measure,
     luminous_intensity_measure,
     plane_angle_measure,
     solid_angle_measure,
     area_measure,
     volume_measure,
     ratio_measure,
     parameter_value,
     numeric_measure,
     context_dependent_measure,
     descriptive_measure,
     positive_length_measure,
     positive_plane_angle_measure,
     positive_ratio_measure,
     count_measure);
  END_TYPE; -- measure_value

  TYPE message = STRING;
  END_TYPE; -- message

  TYPE message_approval = SELECT
    (structured_message);
  END_TYPE; -- message_approval

  TYPE message_date = SELECT
    (structured_message);
  END_TYPE; -- message_date

  TYPE message_date_time = SELECT
    (structured_message);
  END_TYPE; -- message_date_time

  TYPE message_having_contents = SELECT
    (structured_message);
  END_TYPE; -- message_having_contents

  TYPE message_organization = SELECT
    (structured_message);
  END_TYPE; -- message_organization

  TYPE message_person_and_organization = SELECT
    (structured_message);
  END_TYPE; -- message_person_and_organization

  TYPE message_security_classification = SELECT
    (structured_message);
  END_TYPE; -- message_security_classification

  TYPE message_state = SELECT
    (structured_message);
  END_TYPE; -- message_state

  TYPE minute_in_hour = INTEGER;
  WHERE
    wr1: ((0 <= SELF) AND (SELF <= 59));
  END_TYPE; -- minute_in_hour

  TYPE month_in_year_number = INTEGER;
  WHERE
    wr1: ((1 <= SELF) AND (SELF <= 12));
  END_TYPE; -- month_in_year_number

  TYPE mri_approval_item = SELECT
    (certification,
     contract,
     product_definition_relationship,
     information_usage_right,
     product_definition,
     product_definition_formation,
     applied_usage_right,
     requirement_assignment,
     product_definition_formation_relationship,
     requirement_source,
     product);
  END_TYPE; -- mri_approval_item

  TYPE mri_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     product_definition_relationship,
     requirement_source,
     document_relationship,
     state_type_relationship,
     product_definition_formation_relationship,
     product_definition_formation,
     applied_document_reference,
     object_role,
     product,
     document_usage_role,
     requirement_assignment,
     state_observed_relationship,
     external_source,
     product_definition,
     product_category,
     state_type,
     applied_external_identification_assignment,
     state_observed,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- mri_attribute_language_item

  TYPE mri_date_and_time_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     information_usage_right,
     state_observed_relationship,
     product_definition_formation,
     applied_state_assignment,
     document_file,
     applied_state_type_assignment,
     product_definition,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_source,
     state_type,
     requirement_assignment,
     product,
     state_type_relationship,
     state_observed,
     ascribable_state);
  END_TYPE; -- mri_date_and_time_item

  TYPE mri_date_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     product_definition,
     state_type,
     state_observed,
     product_definition_relationship,
     product_definition_formation,
     product_definition_formation_relationship,
     state_type_relationship,
     state_observed_relationship,
     document_file,
     requirement_assignment,
     ascribable_state,
     product,
     information_usage_right,
     applied_state_type_assignment,
     applied_state_assignment,
     requirement_source);
  END_TYPE; -- mri_date_item

  TYPE mri_identification_item = SELECT
    (contract,
     organization,
     security_classification_level,
     product_definition_formation,
     information_right,
     requirement_source,
     product,
     state_observed_relationship,
     product_definition,
     requirement_assignment,
     state_type_relationship,
     state_type,
     product_definition_formation_relationship,
     document_file,
     information_usage_right,
     product_definition_relationship,
     state_observed);
  END_TYPE; -- mri_identification_item

  TYPE mri_multi_language_attribute_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     requirement_source,
     product_definition,
     state_type_relationship,
     product_category,
     applied_document_usage_constraint_assignment,
     state_type,
     product_definition_formation_relationship,
     product_definition_relationship,
     object_role,
     requirement_assignment,
     external_source,
     state_observed,
     state_observed_relationship,
     product_definition_formation,
     product,
     document_usage_role,
     document_relationship,
     applied_document_reference,
     applied_external_identification_assignment);
  END_TYPE; -- mri_multi_language_attribute_item

  TYPE mri_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     information_usage_right,
     product_definition,
     product_definition_formation_relationship,
     state_observed_relationship,
     requirement_source,
     product,
     state_type,
     applied_state_type_assignment,
     document_file,
     state_observed,
     product_definition_formation,
     applied_state_assignment,
     requirement_assignment,
     state_type_relationship,
     product_definition_relationship,
     ascribable_state);
  END_TYPE; -- mri_organization_item

  TYPE mri_person_and_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     product,
     requirement_assignment,
     product_definition_formation,
     product_definition_relationship,
     ascribable_state,
     product_definition_formation_relationship,
     requirement_source,
     information_usage_right,
     product_definition,
     state_observed_relationship,
     applied_state_type_assignment,
     state_type_relationship,
     document_file,
     applied_state_assignment,
     state_type,
     state_observed);
  END_TYPE; -- mri_person_and_organization_item

  TYPE multi_language_attribute_item = SELECT
    (approval_relationship,
     organizational_project_relationship,
     date_time_role,
     connector_on,
     envelope,
     identification_role,
     general_property_relationship,
     organizational_project_role,
     certification,
     date_role,
     person_and_organization,
     approval_status,
     approval,
     organizational_project,
     property_definition_relationship,
     certification_type,
     general_property,
     event_occurrence,
     product_definition_formation,
     contract,
     product,
     structured_message,
     property_definition,
     representation_item,
     message_relationship,
     envelope_relationship,
     product_definition,
     organization_relationship,
     information_usage_right,
     information_right);
  END_TYPE; -- multi_language_attribute_item

  TYPE name_attribute_select = SELECT
    (action_request_solution,
     address,
     configuration_design,
     context_dependent_shape_representation,
     derived_unit,
     effectivity,
     person_and_organization,
     product_definition,
     product_definition_substitute,
     property_definition_representation);
  END_TYPE; -- name_attribute_select

  TYPE name_item = SELECT
    (applied_action_method_assignment,
     applied_action_assignment,
     external_class_library);
  END_TYPE; -- name_item

  TYPE numeric_measure = NUMBER;
  END_TYPE; -- numeric_measure

  TYPE organization_item = SELECT
    (contract,
     applied_identification_assignment,
     applied_action_method_assignment,
     applied_contract_assignment,
     organizational_project,
     representation,
     product_as_planned,
     certification,
     applied_action_assignment,
     applied_document_usage_constraint_assignment,
     general_property,
     product,
     property_definition_relationship,
     applied_organizational_project_assignment,
     event_occurrence,
     action_method,
     general_property_relationship,
     applied_certification_assignment,
     structured_message,
     envelope,
     action,
     product_definition_formation,
     applied_document_reference,
     product_definition,
     property_definition,
     product_as_realized,
     applied_security_classification_assignment,
     interface_connector_as_planned,
     applied_event_occurrence_assignment,
     interface_connector_as_realized);
  END_TYPE; -- organization_item

  TYPE parameter_value = REAL;
  END_TYPE; -- parameter_value

  TYPE person_and_organization_item = SELECT
    (general_property,
     applied_organizational_project_assignment,
     interface_connector_as_planned,
     applied_action_method_assignment,
     applied_contract_assignment,
     interface_connector_as_realized,
     product_definition_formation,
     representation,
     property_definition_relationship,
     applied_action_assignment,
     applied_security_classification_assignment,
     applied_certification_assignment,
     envelope,
     general_property_relationship,
     product_definition,
     applied_event_occurrence_assignment,
     applied_identification_assignment,
     event_occurrence,
     contract,
     property_definition,
     structured_message,
     product_as_planned,
     organizational_project,
     product,
     applied_document_usage_constraint_assignment,
     product_as_realized,
     action_method,
     applied_document_reference,
     action,
     certification);
  END_TYPE; -- person_and_organization_item

  TYPE person_organization_select = SELECT
    (person,
     organization,
     person_and_organization);
  END_TYPE; -- person_organization_select

  TYPE plane_angle_measure = REAL;
  END_TYPE; -- plane_angle_measure

  TYPE positive_length_measure = length_measure;
  WHERE
    wr1: (SELF > 0);
  END_TYPE; -- positive_length_measure

  TYPE positive_plane_angle_measure = plane_angle_measure;
  WHERE
    wr1: (SELF > 0);
  END_TYPE; -- positive_plane_angle_measure

  TYPE positive_ratio_measure = ratio_measure;
  WHERE
    wr1: (SELF > 0);
  END_TYPE; -- positive_ratio_measure

  TYPE product_as_individual_identification_item = SELECT
    (product_as_individual);
  END_TYPE; -- product_as_individual_identification_item

  TYPE product_or_formation_or_definition = SELECT
    (product,
     product_definition_formation,
     product_definition);
  END_TYPE; -- product_or_formation_or_definition

  TYPE project_as_date_and_time_item = SELECT
    (organizational_project);
  END_TYPE; -- project_as_date_and_time_item

  TYPE project_as_date_item = SELECT
    (organizational_project);
  END_TYPE; -- project_as_date_item

  TYPE project_item = SELECT
    (product_concept);
  END_TYPE; -- project_item

  TYPE property_or_shape_select = SELECT
    (property_definition,
     shape_definition);
  END_TYPE; -- property_or_shape_select

  TYPE ratio_measure = REAL;
  END_TYPE; -- ratio_measure

  TYPE represented_definition = SELECT
    (general_property,
     property_definition,
     property_definition_relationship,
     shape_aspect,
     shape_aspect_relationship);
  END_TYPE; -- represented_definition

  TYPE requirement_assigned_item = SELECT
    (product,
     product_as_realized,
     product_as_planned,
     organizational_project,
     product_definition_formation);
  END_TYPE; -- requirement_assigned_item

  TYPE requirement_identification_and_version_aliasable_item = SELECT
    (product,
     product_definition_formation);
  END_TYPE; -- requirement_identification_and_version_aliasable_item

  TYPE requirement_identification_and_version_mri_identification_item =
              SELECT
    (organization,
     contract,
     security_classification_level,
     product,
     product_definition_formation);
  END_TYPE; -- requirement_identification_and_version_mri_identification_item

  TYPE requirement_source_item = SELECT
    (product_definition_formation,
     product_as_individual);
  END_TYPE; -- requirement_source_item

  TYPE rm_aliasable_item = SELECT
    (product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_aliasable_item

  TYPE rm_contract_item = SELECT
    (product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_contract_item

  TYPE rm_mri_approval_item = SELECT
    (contract,
     certification,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_approval_item

  TYPE rm_mri_attribute_language_item = SELECT
    (organizational_project,
     approval_status,
     contract,
     person_and_organization,
     date_role,
     organizational_project_relationship,
     organization_relationship,
     organizational_project_role,
     certification_type,
     approval,
     approval_relationship,
     date_time_role,
     multi_language_attribute_assignment,
     certification,
     identification_role,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_attribute_language_item

  TYPE rm_mri_date_and_time_item = SELECT
    (certification,
     applied_security_classification_assignment,
     contract,
     applied_person_and_organization_assignment,
     applied_organization_assignment,
     security_classification,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_date_and_time_item

  TYPE rm_mri_date_item = SELECT
    (applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     contract,
     security_classification,
     certification,
     applied_organization_assignment,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_date_item

  TYPE rm_mri_identification_item = SELECT
    (organization,
     contract,
     security_classification_level,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_identification_item

  TYPE rm_mri_multi_language_attribute_item = SELECT
    (organizational_project_role,
     approval,
     contract,
     date_role,
     person_and_organization,
     organizational_project,
     organizational_project_relationship,
     certification,
     identification_role,
     certification_type,
     organization_relationship,
     date_time_role,
     approval_status,
     approval_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_multi_language_attribute_item

  TYPE rm_mri_organization_item = SELECT
    (applied_identification_assignment,
     contract,
     applied_security_classification_assignment,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_organization_item

  TYPE rm_mri_person_and_organization_item = SELECT
    (contract,
     applied_identification_assignment,
     applied_security_classification_assignment,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_person_and_organization_item

  TYPE rm_security_classification_item = SELECT
    (product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_security_classification_item

  TYPE role_select = SELECT
    (action_assignment,
     action_request_assignment,
     approval_assignment,
     approval_date_time,
     certification_assignment,
     contract_assignment,
     document_reference,
     effectivity_assignment,
     external_referent_assignment,
     group_assignment,
     name_assignment,
     security_classification_assignment);
  END_TYPE; -- role_select

  TYPE second_in_minute = REAL;
  WHERE
    wr1: ((0 <= SELF) AND (SELF <= 60));
  END_TYPE; -- second_in_minute

  TYPE security_classification_item = SELECT
    (requirement_source,
     applied_document_usage_constraint_assignment,
     product_definition_formation_relationship,
     interface_connector_as_planned,
     requirement_assignment,
     product_definition,
     product_definition_formation,
     structured_message,
     interface_connector_design,
     product_as_realized,
     document_file,
     product_as_planned,
     product_definition_relationship,
     applied_document_reference,
     interface_connector_as_realized,
     product);
  END_TYPE; -- security_classification_item

  TYPE set_representation_item = SET [1:?] OF representation_item;
  END_TYPE; -- set_representation_item

  TYPE shape_definition = SELECT
    (product_definition_shape,
     shape_aspect,
     shape_aspect_relationship);
  END_TYPE; -- shape_definition

  TYPE si_prefix = ENUMERATION OF
    (exa,
     peta,
     tera,
     giga,
     mega,
     kilo,
     hecto,
     deca,
     deci,
     centi,
     milli,
     micro,
     nano,
     pico,
     femto,
     atto);
  END_TYPE; -- si_prefix

  TYPE si_unit_name = ENUMERATION OF
    (metre,
     gram,
     second,
     ampere,
     kelvin,
     mole,
     candela,
     radian,
     steradian,
     hertz,
     newton,
     pascal,
     joule,
     watt,
     coulomb,
     volt,
     farad,
     ohm,
     siemens,
     weber,
     tesla,
     henry,
     degree_celsius,
     lumen,
     lux,
     becquerel,
     gray,
     sievert);
  END_TYPE; -- si_unit_name

  TYPE solid_angle_measure = REAL;
  END_TYPE; -- solid_angle_measure

  TYPE source = ENUMERATION OF
    (made,
     bought,
     not_known);
  END_TYPE; -- source

  TYPE source_item = SELECT
    (identifier,
     message);
  END_TYPE; -- source_item

  TYPE state_definition_classification_item = SELECT
    (applied_state_type_assignment,
     state_type,
     state_type_relationship);
  END_TYPE; -- state_definition_classification_item

  TYPE state_definition_identification_item = SELECT
    (state_type,
     state_type_relationship);
  END_TYPE; -- state_definition_identification_item

  TYPE state_observed_classification_item = SELECT
    (applied_state_assignment,
     state_observed,
     state_observed_relationship);
  END_TYPE; -- state_observed_classification_item

  TYPE state_of_item = SELECT
    (product_as_realized,
     product_definition,
     product_definition_formation,
     organizational_project,
     product,
     connector_on,
     security_classification,
     applied_external_identification_assignment,
     certification,
     product_as_planned,
     contract,
     document_file,
     interface_connector_as_planned,
     structured_message,
     interface_connector_design,
     interface_connection,
     interface_connector_as_realized,
     organization,
     person_and_organization);
  END_TYPE; -- state_of_item

  TYPE state_type_of_item = SELECT
    (product,
     person_and_organization,
     product_as_planned,
     applied_external_identification_assignment,
     product_definition_formation,
     contract,
     document_file,
     product_definition,
     connector_on,
     interface_connector_as_planned,
     security_classification,
     product_category,
     organizational_project,
     interface_connection,
     interface_connector_as_realized,
     certification,
     interface_connector_design,
     organization,
     product_as_realized);
  END_TYPE; -- state_type_of_item

  TYPE statechar_action_items = SELECT
    (ascribable_state);
  END_TYPE; -- statechar_action_items

  TYPE statechar_action_method_items = SELECT
    (state_type,
     state_type_relationship);
  END_TYPE; -- statechar_action_method_items

  TYPE statechar_ap239_mri_attribute_classification_item = SELECT
    (approval,
     organizational_address,
     approval_role,
     contract_type,
     identification_role,
     name_attribute,
     person_and_organization_role,
     approval_relationship,
     certification_type,
     organization_role,
     security_classification_level,
     organizational_project_role,
     group,
     approval_status,
     certification,
     date_time_role,
     event_occurrence_relationship,
     person_and_organization_address,
     organization_relationship,
     object_role,
     date_role,
     event_occurrence_context_role,
     organizational_project_relationship,
     applied_state_assignment,
     applied_state_type_assignment,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_ap239_mri_attribute_classification_item

  TYPE statechar_mri_attribute_language_item = SELECT
    (organizational_project,
     approval_status,
     contract,
     person_and_organization,
     date_role,
     organizational_project_relationship,
     organization_relationship,
     organizational_project_role,
     certification_type,
     approval,
     approval_relationship,
     date_time_role,
     multi_language_attribute_assignment,
     certification,
     identification_role,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_mri_attribute_language_item

  TYPE statechar_mri_date_and_time_item = SELECT
    (certification,
     applied_security_classification_assignment,
     contract,
     applied_person_and_organization_assignment,
     applied_organization_assignment,
     security_classification,
     applied_state_assignment,
     applied_state_type_assignment,
     ascribable_state,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_mri_date_and_time_item

  TYPE statechar_mri_date_item = SELECT
    (applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     contract,
     security_classification,
     certification,
     applied_organization_assignment,
     applied_state_assignment,
     applied_state_type_assignment,
     ascribable_state,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_mri_date_item

  TYPE statechar_mri_identification_item = SELECT
    (organization,
     contract,
     security_classification_level,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_mri_identification_item

  TYPE statechar_mri_multi_language_attribute_item = SELECT
    (organizational_project_role,
     approval,
     contract,
     date_role,
     person_and_organization,
     organizational_project,
     organizational_project_relationship,
     certification,
     identification_role,
     certification_type,
     organization_relationship,
     date_time_role,
     approval_status,
     approval_relationship,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_mri_multi_language_attribute_item

  TYPE statechar_mri_organization_item = SELECT
    (applied_identification_assignment,
     contract,
     applied_security_classification_assignment,
     applied_state_assignment,
     applied_state_type_assignment,
     ascribable_state,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_mri_organization_item

  TYPE statechar_mri_person_and_organization_item = SELECT
    (contract,
     applied_identification_assignment,
     applied_security_classification_assignment,
     applied_state_assignment,
     applied_state_type_assignment,
     ascribable_state,
     state_observed,
     state_observed_relationship,
     state_type,
     state_type_relationship);
  END_TYPE; -- statechar_mri_person_and_organization_item

  TYPE supported_item = SELECT
    (action_directive,
     action,
     action_method);
  END_TYPE; -- supported_item

  TYPE text = STRING;
  END_TYPE; -- text

  TYPE thermodynamic_temperature_measure = REAL;
  END_TYPE; -- thermodynamic_temperature_measure

  TYPE time_measure = REAL;
  END_TYPE; -- time_measure

  TYPE transformation = SELECT
    (item_defined_transformation,
     functionally_defined_transformation);
  END_TYPE; -- transformation

  TYPE unit = SELECT
    (named_unit,
     derived_unit);
  END_TYPE; -- unit

  TYPE value_qualifier = SELECT
    (precision_qualifier,
     type_qualifier,
     uncertainty_qualifier);
  END_TYPE; -- value_qualifier

  TYPE versionable_item = SELECT
    (document_file);
  END_TYPE; -- versionable_item

  TYPE volume_measure = REAL;
  END_TYPE; -- volume_measure

  TYPE week_in_year_number = INTEGER;
  WHERE
    wr1: ((1 <= SELF) AND (SELF <= 53));
  END_TYPE; -- week_in_year_number

  TYPE year_number = INTEGER;
  END_TYPE; -- year_number

  ENTITY action;
      name          : label;
      description   : OPTIONAL text;
      chosen_method : action_method;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- action

  ENTITY action_assignment
    ABSTRACT SUPERTYPE;
      assigned_action : action;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- action_assignment

  ENTITY action_directive;
      name        : label;
      description : OPTIONAL text;
      analysis    : text;
      comment     : text;
      requests    : SET [1:?] OF versioned_action_request;
  END_ENTITY; -- action_directive

  ENTITY action_method;
      name        : label;
      description : OPTIONAL text;
      consequence : text;
      purpose     : text;
  END_ENTITY; -- action_method

  ENTITY action_method_assignment
    ABSTRACT SUPERTYPE;
      assigned_action_method : action_method;
      role                   : action_method_role;
  END_ENTITY; -- action_method_assignment

  ENTITY action_method_relationship;
      name            : label;
      description     : OPTIONAL text;
      relating_method : action_method;
      related_method  : action_method;
  END_ENTITY; -- action_method_relationship

  ENTITY action_method_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- action_method_role

  ENTITY action_property;
      name        : label;
      description : text;
      definition  : characterized_action_definition;
  END_ENTITY; -- action_property

  ENTITY action_property_relationship;
      name                     : label;
      description              : text;
      relating_action_property : action_property;
      related_action_property  : action_property;
    WHERE
      wr1: (relating_action_property :<>: related_action_property);
  END_ENTITY; -- action_property_relationship

  ENTITY action_property_representation;
      name           : label;
      description    : text;
      property       : action_property;
      representation : representation;
  END_ENTITY; -- action_property_representation

  ENTITY action_relationship;
      name            : label;
      description     : OPTIONAL text;
      relating_action : action;
      related_action  : action;
  END_ENTITY; -- action_relationship

  ENTITY action_request_assignment
    ABSTRACT SUPERTYPE;
      assigned_action_request : versioned_action_request;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- action_request_assignment

  ENTITY action_request_solution;
      method  : action_method;
      request : versioned_action_request;
    DERIVE
      description : text := get_description_value(SELF);
      name        : label := get_name_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
  END_ENTITY; -- action_request_solution

  ENTITY action_request_status;
      status           : label;
      assigned_request : versioned_action_request;
  END_ENTITY; -- action_request_status

  ENTITY action_resource;
      name        : label;
      description : OPTIONAL text;
      usage       : SET [1:?] OF supported_item;
      kind        : action_resource_type;
  END_ENTITY; -- action_resource

  ENTITY action_resource_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_resource : action_resource;
      related_resource  : action_resource;
  END_ENTITY; -- action_resource_relationship

  ENTITY action_resource_requirement;
      name        : label;
      description : text;
      kind        : resource_requirement_type;
      operations  : SET [1:?] OF characterized_action_definition;
  END_ENTITY; -- action_resource_requirement

  ENTITY action_resource_requirement_relationship;
      name                                 : label;
      description                          : text;
      relating_action_resource_requirement : action_resource_requirement;
      related_action_resource_requirement  : action_resource_requirement;
    WHERE
      wr1: (relating_action_resource_requirement :<>: 
               related_action_resource_requirement);
  END_ENTITY; -- action_resource_requirement_relationship

  ENTITY action_resource_type;
      name : label;
  END_ENTITY; -- action_resource_type

  ENTITY action_status;
      status          : label;
      assigned_action : executed_action;
  END_ENTITY; -- action_status

  ENTITY address;
      internal_location       : OPTIONAL label;
      street_number           : OPTIONAL label;
      street                  : OPTIONAL label;
      postal_box              : OPTIONAL label;
      town                    : OPTIONAL label;
      region                  : OPTIONAL label;
      postal_code             : OPTIONAL label;
      country                 : OPTIONAL label;
      facsimile_number        : OPTIONAL label;
      telephone_number        : OPTIONAL label;
      electronic_mail_address : OPTIONAL label;
      telex_number            : OPTIONAL label;
    DERIVE
      name : label := get_name_value(SELF);
      url  : identifier := get_id_value(SELF);
    WHERE
      wr1: (EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(
               street) OR EXISTS(postal_box) OR EXISTS(town) OR EXISTS(
               region) OR EXISTS(postal_code) OR EXISTS(country) OR EXISTS(
               facsimile_number) OR EXISTS(telephone_number) OR EXISTS(
               electronic_mail_address) OR EXISTS(telex_number));
  END_ENTITY; -- address

  ENTITY alternate_product_relationship;
      name       : label;
      definition : OPTIONAL text;
      alternate  : product;
      base       : product;
      basis      : text;
    UNIQUE
      ur1 : alternate, base;
    WHERE
      wr1: (alternate :<>: base);
  END_ENTITY; -- alternate_product_relationship

  ENTITY amount_of_substance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- amount_of_substance_measure_with_unit

  ENTITY amount_of_substance_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 1) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- amount_of_substance_unit

  ENTITY application_context;
      application : label;
    DERIVE
      description : text := get_description_value(SELF);
      id          : identifier := get_id_value(SELF);
    INVERSE
      context_elements : SET [1:?] OF application_context_element FOR 
                            frame_of_reference;
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- application_context

  ENTITY application_context_element
    SUPERTYPE OF (ONEOF (library_context,product_concept_context,
        product_context,product_definition_context));
      name               : label;
      frame_of_reference : application_context;
  END_ENTITY; -- application_context_element

  ENTITY application_context_relationship;
      name             : label;
      description      : OPTIONAL text;
      relating_context : application_context;
      related_context  : application_context;
  END_ENTITY; -- application_context_relationship

  ENTITY application_protocol_definition;
      status                                    : label;
      application_interpreted_model_schema_name : label;
      application_protocol_year                 : year_number;
      application                               : application_context;
  END_ENTITY; -- application_protocol_definition

  ENTITY applied_action_assignment
    SUBTYPE OF (action_assignment);
      items : SET [1:?] OF action_items;
  END_ENTITY; -- applied_action_assignment

  ENTITY applied_action_method_assignment
    SUBTYPE OF (action_method_assignment);
      items : SET [1:?] OF action_method_items;
  END_ENTITY; -- applied_action_method_assignment

  ENTITY applied_approval_assignment
    SUBTYPE OF (approval_assignment);
      items : SET [1:?] OF approval_item;
  END_ENTITY; -- applied_approval_assignment

  ENTITY applied_attribute_classification_assignment
    SUBTYPE OF (attribute_classification_assignment);
      SELF\attribute_classification_assignment.assigned_class : class;
      items                                                   : SET [1:?]
                                                                    OF attribute_classification_item;
  END_ENTITY; -- applied_attribute_classification_assignment

  ENTITY applied_certification_assignment
    SUBTYPE OF (certification_assignment);
      items : SET [1:?] OF certification_item;
  END_ENTITY; -- applied_certification_assignment

  ENTITY applied_classification_assignment
    SUBTYPE OF (classification_assignment);
      items : SET [1:?] OF classification_item;
  END_ENTITY; -- applied_classification_assignment

  ENTITY applied_connector_on_product_definition
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : connector_on;
      SELF\applied_group_assignment.items  : SET [1:1] OF
                                                 product_definition;
  END_ENTITY; -- applied_connector_on_product_definition

  ENTITY applied_connector_on_product_definition_relationship
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : connector_on;
      SELF\applied_group_assignment.items  : SET [1:1] OF product_definition_relationship;
  END_ENTITY; -- applied_connector_on_product_definition_relationship

  ENTITY applied_contract_assignment
    SUBTYPE OF (contract_assignment);
      items : SET [1:?] OF contract_item;
  END_ENTITY; -- applied_contract_assignment

  ENTITY applied_date_and_time_assignment
    SUBTYPE OF (date_and_time_assignment);
      items : SET [1:?] OF date_and_time_item;
  END_ENTITY; -- applied_date_and_time_assignment

  ENTITY applied_date_assignment
    SUBTYPE OF (date_assignment);
      items : SET [1:?] OF date_item;
  END_ENTITY; -- applied_date_assignment

  ENTITY applied_document_reference
    SUBTYPE OF (document_reference);
      items : SET [1:?] OF document_reference_item;
  END_ENTITY; -- applied_document_reference

  ENTITY applied_document_usage_constraint_assignment
    SUBTYPE OF (document_usage_constraint_assignment);
      items : SET [1:?] OF document_reference_item;
  END_ENTITY; -- applied_document_usage_constraint_assignment

  ENTITY applied_event_occurrence_assignment
    SUBTYPE OF (event_occurrence_assignment);
      items : SET [1:?] OF event_occurrence_item;
  END_ENTITY; -- applied_event_occurrence_assignment

  ENTITY applied_external_identification_assignment
    SUBTYPE OF (external_identification_assignment);
      items : SET [1:?] OF external_identification_item;
  END_ENTITY; -- applied_external_identification_assignment

  ENTITY applied_group_assignment
    SUBTYPE OF (group_assignment);
      items : SET [1:?] OF groupable_item;
  END_ENTITY; -- applied_group_assignment

  ENTITY applied_identification_assignment
    SUBTYPE OF (identification_assignment);
      items : SET [1:?] OF identification_item;
  END_ENTITY; -- applied_identification_assignment

  ENTITY applied_name_assignment
    SUBTYPE OF (name_assignment);
      item : name_item;
  END_ENTITY; -- applied_name_assignment

  ENTITY applied_organization_assignment
    SUBTYPE OF (organization_assignment);
      items : SET [1:?] OF organization_item;
  END_ENTITY; -- applied_organization_assignment

  ENTITY applied_organizational_project_assignment
    SUBTYPE OF (organizational_project_assignment);
      items : SET [1:?] OF project_item;
  END_ENTITY; -- applied_organizational_project_assignment

  ENTITY applied_person_and_organization_assignment
    SUBTYPE OF (person_and_organization_assignment);
      items : SET [1:?] OF person_and_organization_item;
  END_ENTITY; -- applied_person_and_organization_assignment

  ENTITY applied_security_classification_assignment
    SUBTYPE OF (security_classification_assignment);
      items : SET [1:?] OF security_classification_item;
  END_ENTITY; -- applied_security_classification_assignment

  ENTITY applied_state_assignment;
      assigned_state : state_observed;
      item_set       : SET [1:?] OF state_of_item;
      role           : state_role;
  END_ENTITY; -- applied_state_assignment

  ENTITY applied_state_type_assignment;
      assigned_state_type : state_type;
      item_set            : SET [1:?] OF state_type_of_item;
      role                : state_type_role;
  END_ENTITY; -- applied_state_type_assignment

  ENTITY applied_usage_right
    SUBTYPE OF (applied_action_assignment);
      SELF\applied_action_assignment.items : SET [1:?] OF ir_usage_item;
  END_ENTITY; -- applied_usage_right

  ENTITY approval;
      status : approval_status;
      level  : label;
  END_ENTITY; -- approval

  ENTITY approval_assignment
    ABSTRACT SUPERTYPE;
      assigned_approval : approval;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- approval_assignment

  ENTITY approval_date_time;
      date_time      : date_time_select;
      dated_approval : approval;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- approval_date_time

  ENTITY approval_person_organization;
      person_organization : person_organization_select;
      authorized_approval : approval;
      role                : approval_role;
  END_ENTITY; -- approval_person_organization

  ENTITY approval_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_approval : approval;
      related_approval  : approval;
  END_ENTITY; -- approval_relationship

  ENTITY approval_role;
      role : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- approval_role

  ENTITY approval_status;
      name : label;
  END_ENTITY; -- approval_status

  ENTITY area_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.AREA_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- area_measure_with_unit

  ENTITY area_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 2) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- area_unit

  ENTITY ascribable_state;
      name             : STRING;
      description      : OPTIONAL STRING;
      pertaining_state : state_type;
      ascribed_state   : state_observed;
  END_ENTITY; -- ascribable_state

  ENTITY ascribable_state_relationship;
      name                      : STRING;
      description               : OPTIONAL STRING;
      relating_ascribable_state : ascribable_state;
      related_ascribable_state  : ascribable_state;
  END_ENTITY; -- ascribable_state_relationship

  ENTITY assembly_component_usage
    SUPERTYPE OF (ONEOF (next_assembly_usage_occurrence,
        specified_higher_usage_occurrence,promissory_usage_occurrence))
    SUBTYPE OF (product_definition_usage);
      reference_designator : OPTIONAL identifier;
  END_ENTITY; -- assembly_component_usage

  ENTITY assembly_component_usage_substitute;
      name       : label;
      definition : OPTIONAL text;
      base       : assembly_component_usage;
      substitute : assembly_component_usage;
    UNIQUE
      ur1 : base, substitute;
    WHERE
      wr1: (base.relating_product_definition :=: substitute.
               relating_product_definition);
      wr2: (base :<>: substitute);
  END_ENTITY; -- assembly_component_usage_substitute

  ENTITY assembly_component_usage_substitute_with_ranking
    SUBTYPE OF (assembly_component_usage_substitute);
      ranking           : INTEGER;
      ranking_rationale : text;
  END_ENTITY; -- assembly_component_usage_substitute_with_ranking

  ENTITY assigned_requirement
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_assignment;
      items                                : SET [1:1] OF
                                                 product_definition;
  END_ENTITY; -- assigned_requirement

  ENTITY attribute_classification_assignment
    ABSTRACT SUPERTYPE;
      assigned_class : group;
      attribute_name : label;
      role           : classification_role;
  END_ENTITY; -- attribute_classification_assignment

  ENTITY attribute_language_assignment
    SUBTYPE OF (attribute_classification_assignment);
      SELF\attribute_classification_assignment.assigned_class : language;
      items                                                   : SET [1:?]
                                                                    OF attribute_language_item;
    WHERE
      wr1: (SELF\attribute_classification_assignment.role.name IN [
               'primary','translated']);
      wr2: (SELF\attribute_classification_assignment.attribute_name <> '');
  END_ENTITY; -- attribute_language_assignment

  ENTITY attribute_value_assignment
    ABSTRACT SUPERTYPE;
      attribute_name  : label;
      attribute_value : attribute_type;
      role            : attribute_value_role;
  END_ENTITY; -- attribute_value_assignment

  ENTITY attribute_value_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- attribute_value_role

  ENTITY calendar_date
    SUBTYPE OF (date);
      day_component   : day_in_month_number;
      month_component : month_in_year_number;
    WHERE
      wr1: valid_calendar_date(SELF);
  END_ENTITY; -- calendar_date

  ENTITY celsius_temperature_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- celsius_temperature_measure_with_unit

  ENTITY certification;
      name    : label;
      purpose : text;
      kind    : certification_type;
  END_ENTITY; -- certification

  ENTITY certification_assignment
    ABSTRACT SUPERTYPE;
      assigned_certification : certification;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- certification_assignment

  ENTITY certification_type;
      description : label;
  END_ENTITY; -- certification_type

  ENTITY characterized_object;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- characterized_object

  ENTITY characterized_object_relationship;
      name            : label;
      description     : OPTIONAL text;
      relating_object : characterized_object;
      related_object  : characterized_object;
  END_ENTITY; -- characterized_object_relationship

  ENTITY class
    SUPERTYPE OF (ONEOF (class_by_extension,class_by_intension))
    SUBTYPE OF (group);
  END_ENTITY; -- class

  ENTITY class_by_extension
    SUBTYPE OF (class);
  END_ENTITY; -- class_by_extension

  ENTITY class_by_intension
    SUBTYPE OF (class);
  END_ENTITY; -- class_by_intension

  ENTITY classification_assignment
    ABSTRACT SUPERTYPE;
      assigned_class : group;
      role           : classification_role;
  END_ENTITY; -- classification_assignment

  ENTITY classification_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- classification_role

  ENTITY complement;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      set_1       : class;
      set_2       : class;
      universe    : class;
  END_ENTITY; -- complement

  ENTITY compound_representation_item
    SUBTYPE OF (representation_item);
      item_element : compound_item_definition;
  END_ENTITY; -- compound_representation_item

  ENTITY concept_feature_operator;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- concept_feature_operator

  ENTITY concept_feature_relationship;
      name                             : label;
      description                      : OPTIONAL text;
      relating_product_concept_feature : product_concept_feature;
      related_product_concept_feature  : product_concept_feature;
  END_ENTITY; -- concept_feature_relationship

  ENTITY concept_feature_relationship_with_condition
    SUBTYPE OF (concept_feature_relationship);
      conditional_operator : concept_feature_operator;
  END_ENTITY; -- concept_feature_relationship_with_condition

  ENTITY conditional_concept_feature
    SUBTYPE OF (product_concept_feature);
      condition : concept_feature_relationship_with_condition;
  END_ENTITY; -- conditional_concept_feature

  ENTITY configurable_item
    SUBTYPE OF (configuration_item);
      item_concept_feature : SET [1:?] OF
                                 product_concept_feature_association;
  END_ENTITY; -- configurable_item

  ENTITY configuration_design;
      configuration : configuration_item;
      design        : configuration_design_item;
    DERIVE
      name        : label := get_name_value(SELF);
      description : text := get_description_value(SELF);
    UNIQUE
      ur1 : configuration, design;
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- configuration_design

  ENTITY configuration_effectivity
    SUBTYPE OF (product_definition_effectivity);
      configuration : configuration_design;
    UNIQUE
      ur1 : configuration, usage, id;
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_USAGE' 
               IN TYPEOF(SELF\product_definition_effectivity.usage));
  END_ENTITY; -- configuration_effectivity

  ENTITY configuration_item;
      id           : identifier;
      name         : label;
      description  : OPTIONAL text;
      item_concept : product_concept;
      purpose      : OPTIONAL label;
  END_ENTITY; -- configuration_item

  ENTITY configuration_item_relationship;
      name                        : label;
      description                 : OPTIONAL text;
      relating_configuration_item : configuration_item;
      related_configuration_item  : configuration_item;
  END_ENTITY; -- configuration_item_relationship

  ENTITY connector_on
    SUBTYPE OF (group);
  END_ENTITY; -- connector_on

  ENTITY containing_message
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : message_contents_group;
      SELF\applied_group_assignment.items  : SET [1:1] OF
                                                 message_having_contents;
    DERIVE
      containing_message : message_having_contents := SELF\
                              containing_message.items;
  END_ENTITY; -- containing_message

  ENTITY context_dependent_shape_representation;
      representation_relation      : shape_representation_relationship;
      represented_product_relation : product_definition_shape;
    DERIVE
      description : text := get_description_value(SELF);
      name        : label := get_name_value(SELF);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP' 
               IN TYPEOF(SELF.represented_product_relation.definition));
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
      wr3: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
  END_ENTITY; -- context_dependent_shape_representation

  ENTITY context_dependent_unit
    SUBTYPE OF (named_unit);
      name : label;
  END_ENTITY; -- context_dependent_unit

  ENTITY contract;
      name    : label;
      purpose : text;
      kind    : contract_type;
  END_ENTITY; -- contract

  ENTITY contract_assignment
    ABSTRACT SUPERTYPE;
      assigned_contract : contract;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- contract_assignment

  ENTITY contract_relationship;
      id                : identifier;
      name              : label;
      description       : OPTIONAL text;
      relating_contract : contract;
      related_contract  : contract;
  END_ENTITY; -- contract_relationship

  ENTITY contract_type;
      description : label;
  END_ENTITY; -- contract_type

  ENTITY conversion_based_unit
    SUBTYPE OF (named_unit);
      name              : label;
      conversion_factor : measure_with_unit;
  END_ENTITY; -- conversion_based_unit

  ENTITY coordinated_universal_time_offset;
      hour_offset   : INTEGER;
      minute_offset : OPTIONAL INTEGER;
      sense         : ahead_or_behind;
    DERIVE
      actual_minute_offset : INTEGER := NVL(minute_offset,0);
    WHERE
      wr1: ((0 <= hour_offset) AND (hour_offset <= 24));
      wr2: ((0 <= actual_minute_offset) AND (actual_minute_offset <= 59));
      wr3: (NOT (((hour_offset <> 0) OR (actual_minute_offset <> 0)) AND (
               sense = exact)));
  END_ENTITY; -- coordinated_universal_time_offset

  ENTITY data_environment;
      name        : label;
      description : text;
      elements    : SET [1:?] OF property_definition_representation;
  END_ENTITY; -- data_environment

  ENTITY data_environment_relationship;
      name                      : label;
      description               : text;
      relating_data_environment : data_environment;
      related_data_environment  : data_environment;
  END_ENTITY; -- data_environment_relationship

  ENTITY date
    SUPERTYPE OF (ONEOF (calendar_date,ordinal_date,
        week_of_year_and_day_date));
      year_component : year_number;
  END_ENTITY; -- date

  ENTITY date_and_time;
      date_component : date;
      time_component : local_time;
  END_ENTITY; -- date_and_time

  ENTITY date_and_time_assignment
    ABSTRACT SUPERTYPE;
      assigned_date_and_time : date_and_time;
      role                   : date_time_role;
  END_ENTITY; -- date_and_time_assignment

  ENTITY date_assignment
    ABSTRACT SUPERTYPE;
      assigned_date : date;
      role          : date_role;
  END_ENTITY; -- date_assignment

  ENTITY date_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- date_role

  ENTITY date_time_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- date_time_role

  ENTITY dated_effectivity
    SUBTYPE OF (effectivity);
      effectivity_end_date   : OPTIONAL date_time_or_event_occurrence;
      effectivity_start_date : date_time_or_event_occurrence;
  END_ENTITY; -- dated_effectivity

  ENTITY definitional_representation
    SUBTYPE OF (representation);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PARAMETRIC_REPRESENTATION_CONTEXT' 
               IN TYPEOF(SELF\representation.context_of_items));
  END_ENTITY; -- definitional_representation

  ENTITY derived_unit;
      elements : SET [1:?] OF derived_unit_element;
    DERIVE
      name : label := get_name_value(SELF);
    WHERE
      wr1: ((SIZEOF(elements) > 1) OR ((SIZEOF(elements) = 1) AND (
               elements[1].exponent <> 1)));
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
  END_ENTITY; -- derived_unit

  ENTITY derived_unit_element;
      unit     : named_unit;
      exponent : REAL;
  END_ENTITY; -- derived_unit_element

  ENTITY description_attribute;
      attribute_value : text;
      described_item  : description_attribute_select;
  END_ENTITY; -- description_attribute

  ENTITY descriptive_representation_item
    SUBTYPE OF (representation_item);
      description : text;
  END_ENTITY; -- descriptive_representation_item

  ENTITY dimensional_exponents;
      length_exponent                    : REAL;
      mass_exponent                      : REAL;
      time_exponent                      : REAL;
      electric_current_exponent          : REAL;
      thermodynamic_temperature_exponent : REAL;
      amount_of_substance_exponent       : REAL;
      luminous_intensity_exponent        : REAL;
  END_ENTITY; -- dimensional_exponents

  ENTITY directed_action
    SUBTYPE OF (executed_action);
      directive : action_directive;
  END_ENTITY; -- directed_action

  ENTITY document;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      kind        : document_type;
    INVERSE
      representation_types : SET OF document_representation_type FOR 
                                represented_document;
  END_ENTITY; -- document

  ENTITY document_file
    SUBTYPE OF (document, characterized_object);
    WHERE
      wr1: (SELF\characterized_object.name = '');
      wr2: (NOT EXISTS(SELF\characterized_object.description));
      wr3: (SIZEOF(QUERY ( drt <* SELF\document.representation_types | (
               drt.name IN ['digital','physical']) )) = 1);
  END_ENTITY; -- document_file

  ENTITY document_product_association;
      name              : label;
      description       : OPTIONAL text;
      relating_document : document;
      related_product   : product_or_formation_or_definition;
  END_ENTITY; -- document_product_association

  ENTITY document_product_equivalence
    SUBTYPE OF (document_product_association);
    WHERE
      wr1: (SELF\document_product_association.name = 'equivalence');
      wr2: ((NOT ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT' IN 
               TYPEOF(SELF\document_product_association.related_product))) 
               OR ((SELF\document_product_association.relating_document.
               kind.product_data_type = 'configuration controlled document') 
               AND (SIZEOF(QUERY ( prpc <* USEDIN(SELF\
               document_product_association.related_product,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')
                | (prpc.name = 'document') )) = 1)));
      wr3: ((NOT ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_FORMATION' 
               IN TYPEOF(SELF.related_product))) OR ((SELF\
               document_product_association.relating_document.kind.
               product_data_type = 
               'configuration controlled document version') AND (SIZEOF(
               QUERY ( prpc <* USEDIN(SELF.related_product\
               product_definition_formation.of_product,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')
                | (prpc.name = 'document') )) = 1)));
      wr4: ((NOT ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION' 
               IN TYPEOF(SELF.related_product))) OR ((SELF\
               document_product_association.relating_document.kind.
               product_data_type = 
               'configuration controlled document definition') AND (SIZEOF(
               QUERY ( prpc <* USEDIN(SELF\document_product_association.
               related_product\product_definition.formation.of_product,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')
                | (prpc.name = 'document') )) = 1)));
  END_ENTITY; -- document_product_equivalence

  ENTITY document_reference
    ABSTRACT SUPERTYPE;
      assigned_document : document;
      source            : label;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- document_reference

  ENTITY document_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_document : document;
      related_document  : document;
  END_ENTITY; -- document_relationship

  ENTITY document_representation_type;
      name                 : label;
      represented_document : document;
  END_ENTITY; -- document_representation_type

  ENTITY document_type;
      product_data_type : label;
  END_ENTITY; -- document_type

  ENTITY document_usage_constraint;
      source                : document;
      subject_element       : label;
      subject_element_value : text;
  END_ENTITY; -- document_usage_constraint

  ENTITY document_usage_constraint_assignment
    ABSTRACT SUPERTYPE;
      assigned_document_usage : document_usage_constraint;
      role                    : document_usage_role;
  END_ENTITY; -- document_usage_constraint_assignment

  ENTITY document_usage_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- document_usage_role

  ENTITY document_with_class
    SUBTYPE OF (document);
      class : identifier;
  END_ENTITY; -- document_with_class

  ENTITY double_toleranced_measure_item
    SUBTYPE OF (compound_representation_item);
      SELF\compound_representation_item.item_element : list_of_two_representation_items;
  END_ENTITY; -- double_toleranced_measure_item

  ENTITY effectivity
    SUPERTYPE OF (ONEOF (serial_numbered_effectivity,dated_effectivity,
        lot_effectivity,time_interval_based_effectivity));
      id : identifier;
    DERIVE
      name        : label := get_name_value(SELF);
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- effectivity

  ENTITY effectivity_assignment
    ABSTRACT SUPERTYPE;
      assigned_effectivity : effectivity;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- effectivity_assignment

  ENTITY effectivity_context_assignment
    ABSTRACT SUPERTYPE;
      assigned_effectivity_assignment : effectivity_assignment;
      role                            : effectivity_context_role;
  END_ENTITY; -- effectivity_context_assignment

  ENTITY effectivity_context_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- effectivity_context_role

  ENTITY effectivity_relationship;
      name                 : label;
      description          : OPTIONAL text;
      related_effectivity  : effectivity;
      relating_effectivity : effectivity;
  END_ENTITY; -- effectivity_relationship

  ENTITY electric_current_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.ELECTRIC_CURRENT_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- electric_current_measure_with_unit

  ENTITY electric_current_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 1) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- electric_current_unit

  ENTITY envelope
    SUBTYPE OF (characterized_object, product);
  END_ENTITY; -- envelope

  ENTITY envelope_relationship
    SUBTYPE OF (product_relationship);
  END_ENTITY; -- envelope_relationship

  ENTITY event_occurrence;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- event_occurrence

  ENTITY event_occurrence_assignment
    ABSTRACT SUPERTYPE;
      assigned_event_occurrence : event_occurrence;
      role                      : event_occurrence_role;
  END_ENTITY; -- event_occurrence_assignment

  ENTITY event_occurrence_context_assignment
    ABSTRACT SUPERTYPE;
      assigned_event_occurrence_assignment : event_occurrence_assignment;
      role                                 : event_occurrence_context_role;
  END_ENTITY; -- event_occurrence_context_assignment

  ENTITY event_occurrence_context_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- event_occurrence_context_role

  ENTITY event_occurrence_relationship;
      name           : label;
      description    : OPTIONAL text;
      relating_event : event_occurrence;
      related_event  : event_occurrence;
  END_ENTITY; -- event_occurrence_relationship

  ENTITY event_occurrence_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- event_occurrence_role

  ENTITY executed_action
    SUBTYPE OF (action);
  END_ENTITY; -- executed_action

  ENTITY expanded_uncertainty
    SUBTYPE OF (standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY; -- expanded_uncertainty

  ENTITY experience;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- experience

  ENTITY experience_assignment
    ABSTRACT SUPERTYPE;
      id                  : STRING;
      name                : STRING;
      description         : OPTIONAL STRING;
      role                : OPTIONAL STRING;
      assigned_experience : experience;
  END_ENTITY; -- experience_assignment

  ENTITY experience_relationship;
      description         : OPTIONAL STRING;
      id                  : STRING;
      name                : STRING;
      related_experience  : experience;
      relating_experience : experience;
  END_ENTITY; -- experience_relationship

  ENTITY experience_type;
      description : OPTIONAL STRING;
      id          : STRING;
      name        : STRING;
  END_ENTITY; -- experience_type

  ENTITY experience_type_assignment
    ABSTRACT SUPERTYPE;
      id                       : STRING;
      name                     : STRING;
      description              : OPTIONAL STRING;
      role                     : OPTIONAL STRING;
      assigned_experience_type : experience_type;
  END_ENTITY; -- experience_type_assignment

  ENTITY experience_type_relationship;
      description              : OPTIONAL STRING;
      id                       : STRING;
      name                     : STRING;
      related_experience_type  : experience_type;
      relating_experience_type : experience_type;
  END_ENTITY; -- experience_type_relationship

  ENTITY external_class_library
    SUBTYPE OF (external_source);
  END_ENTITY; -- external_class_library

  ENTITY external_identification_assignment
    ABSTRACT SUPERTYPE
    SUBTYPE OF (identification_assignment);
      source : external_source;
  END_ENTITY; -- external_identification_assignment

  ENTITY external_referent_assignment
    ABSTRACT SUPERTYPE;
      assigned_name : label;
    DERIVE
      role : object_role := get_role(SELF);
    UNIQUE
      ur1 : assigned_name;
  END_ENTITY; -- external_referent_assignment

  ENTITY external_source;
      source_id : source_item;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- external_source

  ENTITY external_source_relationship;
      name            : label;
      description     : OPTIONAL text;
      relating_source : external_source;
      related_source  : external_source;
  END_ENTITY; -- external_source_relationship

  ENTITY externally_defined_class
    SUBTYPE OF (class, externally_defined_item);
  END_ENTITY; -- externally_defined_class

  ENTITY externally_defined_item;
      item_id : source_item;
      source  : external_source;
  END_ENTITY; -- externally_defined_item

  ENTITY externally_defined_item_relationship;
      name          : label;
      description   : OPTIONAL text;
      relating_item : externally_defined_item;
      related_item  : externally_defined_item;
  END_ENTITY; -- externally_defined_item_relationship

  ENTITY founded_item;
  END_ENTITY; -- founded_item

  ENTITY functionally_defined_transformation;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- functionally_defined_transformation

  ENTITY general_property;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- general_property

  ENTITY general_property_association;
      name               : label;
      description        : OPTIONAL text;
      base_definition    : general_property;
      derived_definition : derived_property_select;
    WHERE
      wr1: (SIZEOF(USEDIN(derived_definition,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.GENERAL_PROPERTY_ASSOCIATION.DERIVED_DEFINITION')) 
               = 1);
      wr2: (derived_definition.name = base_definition.name);
  END_ENTITY; -- general_property_association

  ENTITY general_property_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_property : general_property;
      related_property  : general_property;
  END_ENTITY; -- general_property_relationship

  ENTITY global_uncertainty_assigned_context
    SUBTYPE OF (representation_context);
      uncertainty : SET [1:?] OF uncertainty_measure_with_unit;
  END_ENTITY; -- global_uncertainty_assigned_context

  ENTITY global_unit_assigned_context
    SUBTYPE OF (representation_context);
      units : SET [1:?] OF unit;
  END_ENTITY; -- global_unit_assigned_context

  ENTITY group;
      name        : label;
      description : OPTIONAL text;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- group

  ENTITY group_assignment
    ABSTRACT SUPERTYPE;
      assigned_group : group;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- group_assignment

  ENTITY group_relationship;
      name           : label;
      description    : OPTIONAL text;
      relating_group : group;
      related_group  : group;
  END_ENTITY; -- group_relationship

  ENTITY id_attribute;
      attribute_value : identifier;
      identified_item : id_attribute_select;
  END_ENTITY; -- id_attribute

  ENTITY identification_assignment
    ABSTRACT SUPERTYPE;
      assigned_id : identifier;
      role        : identification_role;
  END_ENTITY; -- identification_assignment

  ENTITY identification_assignment_relationship;
      name                               : label;
      description                        : OPTIONAL text;
      relating_identification_assignment : identification_assignment;
      related_identification_assignment  : identification_assignment;
  END_ENTITY; -- identification_assignment_relationship

  ENTITY identification_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- identification_role

  ENTITY information_right
    SUBTYPE OF (action_method);
  END_ENTITY; -- information_right

  ENTITY information_usage_right
    SUBTYPE OF (action_method);
  END_ENTITY; -- information_usage_right

  ENTITY interface_connection
    SUBTYPE OF (product_definition_relationship);
  END_ENTITY; -- interface_connection

  ENTITY interface_connector_as_planned
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- interface_connector_as_planned

  ENTITY interface_connector_as_realized
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- interface_connector_as_realized

  ENTITY interface_connector_design
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- interface_connector_design

  ENTITY interface_connector_design_to_planned
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : interface_connector_as_planned;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_design;
    WHERE
      wr1: (SELF.relating_product_definition_formation.of_product :=: SELF
               .related_product_definition_formation.of_product);
  END_ENTITY; -- interface_connector_design_to_planned

  ENTITY interface_connector_design_to_realized
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : interface_connector_as_realized;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_design;
    WHERE
      wr1: (SELF.relating_product_definition_formation.of_product :=: SELF
               .related_product_definition_formation.of_product);
  END_ENTITY; -- interface_connector_design_to_realized

  ENTITY interface_connector_planned_to_realized
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : interface_connector_as_realized;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_as_planned;
    WHERE
      wr1: (SELF.relating_product_definition_formation.of_product :=: SELF
               .related_product_definition_formation.of_product);
  END_ENTITY; -- interface_connector_planned_to_realized

  ENTITY interface_definition_for
    SUBTYPE OF (product_definition_relationship);
  END_ENTITY; -- interface_definition_for

  ENTITY intersection;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      operand     : SET [2:?] OF class;
      resultant   : class;
  END_ENTITY; -- intersection

  ENTITY item_defined_transformation;
      name             : label;
      description      : OPTIONAL text;
      transform_item_1 : representation_item;
      transform_item_2 : representation_item;
  END_ENTITY; -- item_defined_transformation

  ENTITY item_identified_representation_usage;
      name                : label;
      description         : OPTIONAL text;
      definition          : represented_definition;
      used_representation : representation;
      identified_item     : representation_item;
    WHERE
      wr1: (SELF.used_representation IN using_representations(SELF.
               identified_item));
  END_ENTITY; -- item_identified_representation_usage

  ENTITY language
    SUBTYPE OF (group);
    WHERE
      wr1: (SELF\group.name <> '');
  END_ENTITY; -- language

  ENTITY length_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.LENGTH_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- length_measure_with_unit

  ENTITY length_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 1) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- length_unit

  ENTITY library_assignment
    ABSTRACT SUPERTYPE
    SUBTYPE OF (external_referent_assignment);
      frame_of_reference : library_context;
    UNIQUE
      ur1 : frame_of_reference;
  END_ENTITY; -- library_assignment

  ENTITY library_context
    SUBTYPE OF (application_context_element);
      library_reference : label;
  END_ENTITY; -- library_context

  ENTITY local_time;
      hour_component   : hour_in_day;
      minute_component : OPTIONAL minute_in_hour;
      second_component : OPTIONAL second_in_minute;
      zone             : coordinated_universal_time_offset;
    WHERE
      wr1: valid_time(SELF);
  END_ENTITY; -- local_time

  ENTITY location;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- location

  ENTITY location_assignment
    ABSTRACT SUPERTYPE;
      id                : STRING;
      name              : STRING;
      description       : OPTIONAL STRING;
      role              : OPTIONAL STRING;
      assigned_location : location;
  END_ENTITY; -- location_assignment

  ENTITY location_relationship;
      id                : STRING;
      name              : STRING;
      description       : OPTIONAL STRING;
      related_location  : location;
      relating_location : location;
  END_ENTITY; -- location_relationship

  ENTITY lot_effectivity
    SUBTYPE OF (effectivity);
      effectivity_lot_id   : identifier;
      effectivity_lot_size : measure_with_unit;
  END_ENTITY; -- lot_effectivity

  ENTITY luminous_intensity_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.LUMINOUS_INTENSITY_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- luminous_intensity_measure_with_unit

  ENTITY luminous_intensity_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 1));
  END_ENTITY; -- luminous_intensity_unit

  ENTITY make_from_usage_option
    SUBTYPE OF (product_definition_usage);
      ranking           : INTEGER;
      ranking_rationale : text;
      quantity          : measure_with_unit;
    WHERE
      wr1: ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) OR (
               quantity.value_component > 0));
  END_ENTITY; -- make_from_usage_option

  ENTITY make_from_usage_option_group;
      members : SET [2:?] OF make_from_usage_option;
    WHERE
      wr1: (SIZEOF(QUERY ( example <* members | (example.
               related_product_definition :=: members[1].
               related_product_definition) )) = SIZEOF(members));
  END_ENTITY; -- make_from_usage_option_group

  ENTITY mapped_item
    SUBTYPE OF (representation_item);
      mapping_source : representation_map;
      mapping_target : representation_item;
    WHERE
      wr1: acyclic_mapped_representation(using_representations(SELF),[SELF]);
  END_ENTITY; -- mapped_item

  ENTITY mass_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.MASS_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- mass_measure_with_unit

  ENTITY mass_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 1) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- mass_unit

  ENTITY material_designation;
      name        : label;
      definitions : SET [1:?] OF characterized_definition;
  END_ENTITY; -- material_designation

  ENTITY material_designation_characterization;
      name        : label;
      description : text;
      designation : material_designation;
      property    : characterized_material_property;
  END_ENTITY; -- material_designation_characterization

  ENTITY material_property
    SUBTYPE OF (property_definition);
    UNIQUE
      ur1 : name, definition;
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM_LF.CHARACTERIZED_OBJECT' 
               IN TYPEOF(SELF\property_definition.definition)) OR (SIZEOF(
               bag_to_set(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) 
               - QUERY ( temp <* bag_to_set(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'))
                | (('AP239_PART_DEFINITION_INFORMATION_MIM_LF.' + 
               'MATERIAL_PROPERTY_REPRESENTATION') IN TYPEOF(temp)) )) = 0));
  END_ENTITY; -- material_property

  ENTITY material_property_representation
    SUBTYPE OF (property_definition_representation);
      dependent_environment : data_environment;
  END_ENTITY; -- material_property_representation

  ENTITY measure_qualification;
      name              : label;
      description       : text;
      qualified_measure : measure_with_unit;
      qualifiers        : SET [1:?] OF value_qualifier;
    WHERE
      wr1: (SIZEOF(QUERY ( temp <* qualifiers | ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRECISION_QUALIFIER' 
               IN TYPEOF(temp)) )) < 2);
  END_ENTITY; -- measure_qualification

  ENTITY measure_representation_item
    SUBTYPE OF (representation_item, measure_with_unit);
  END_ENTITY; -- measure_representation_item

  ENTITY measure_with_unit
    SUPERTYPE OF (ONEOF (length_measure_with_unit,mass_measure_with_unit,
        time_measure_with_unit,electric_current_measure_with_unit,
        thermodynamic_temperature_measure_with_unit,
        celsius_temperature_measure_with_unit,
        amount_of_substance_measure_with_unit,
        luminous_intensity_measure_with_unit,plane_angle_measure_with_unit,
        solid_angle_measure_with_unit,area_measure_with_unit,
        volume_measure_with_unit,ratio_measure_with_unit));
      value_component : measure_value;
      unit_component  : unit;
    WHERE
      wr1: valid_units(SELF);
  END_ENTITY; -- measure_with_unit

  ENTITY message_contents_assignment
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : message_contents_group;
      SELF\applied_group_assignment.items  : SET [1:?] OF contents_item;
  END_ENTITY; -- message_contents_assignment

  ENTITY message_contents_group
    SUBTYPE OF (group);
  END_ENTITY; -- message_contents_group

  ENTITY message_relationship
    SUBTYPE OF (product_relationship);
      SELF\product_relationship.related_product  : structured_message;
      SELF\product_relationship.relating_product : structured_message;
    DERIVE
      related_message  : structured_message := SELF\product_relationship.
                            related_product;
      relating_message : structured_message := SELF\product_relationship.
                            relating_product;
  END_ENTITY; -- message_relationship

  ENTITY multi_language_attribute_assignment
    SUBTYPE OF (attribute_value_assignment);
      items : SET [1:?] OF multi_language_attribute_item;
    DERIVE
      translation_language : language := language_indication[1]\
                                attribute_classification_assignment.
                                assigned_class;
    INVERSE
      language_indication : SET [1:1] OF attribute_language_assignment FOR 
                               items;
    WHERE
      wr1: (SELF\attribute_value_assignment.role.name = 
               'alternate language');
      wr2: (SIZEOF(QUERY ( ala <* language_indication | ((ala\
               attribute_classification_assignment.attribute_name = 
               'attribute_value') AND (ala\
               attribute_classification_assignment.role.name = 'translated')) )) 
               = 1);
      wr3: (SELF\attribute_value_assignment.attribute_name <> '');
      wr4: (SIZEOF(QUERY ( ci <* items | (SIZEOF(QUERY ( ata <* USEDIN(ci,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS')
                | ((ata\attribute_value_assignment.attribute_name = SELF\
               attribute_value_assignment.attribute_name) AND (ata.
               translation_language :=: translation_language)) )) > 1) )) =
                0);
      wr5: (SIZEOF(QUERY ( ci <* items | (SIZEOF(QUERY ( ata <* USEDIN(ci,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS')
                | ((ata\attribute_classification_assignment.role.name = 
               'primary') AND (ata\attribute_classification_assignment.
               attribute_name = SELF\attribute_value_assignment.
               attribute_name) AND (ata\attribute_classification_assignment
               .assigned_class :=: translation_language)) )) > 0) )) = 0);
  END_ENTITY; -- multi_language_attribute_assignment

  ENTITY name_assignment
    ABSTRACT SUPERTYPE;
      assigned_name : label;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- name_assignment

  ENTITY name_attribute;
      attribute_value : label;
      named_item      : name_attribute_select;
  END_ENTITY; -- name_attribute

  ENTITY named_unit
    SUPERTYPE OF (ONEOF (si_unit,conversion_based_unit,
        context_dependent_unit) ANDOR ONEOF (length_unit,mass_unit,
        time_unit,electric_current_unit,thermodynamic_temperature_unit,
        amount_of_substance_unit,luminous_intensity_unit,plane_angle_unit,
        solid_angle_unit,area_unit,volume_unit,ratio_unit));
      dimensions : dimensional_exponents;
  END_ENTITY; -- named_unit

  ENTITY next_assembly_usage_occurrence
    SUBTYPE OF (assembly_component_usage);
  END_ENTITY; -- next_assembly_usage_occurrence

  ENTITY object_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- object_role

  ENTITY ordinal_date
    SUBTYPE OF (date);
      day_component : day_in_year_number;
    WHERE
      wr1: (((NOT leap_year(SELF.year_component)) AND (1 <= day_component) 
               AND (day_component <= 365)) OR (leap_year(SELF.
               year_component) AND (1 <= day_component) AND (day_component 
               <= 366)));
  END_ENTITY; -- ordinal_date

  ENTITY organization;
      id          : OPTIONAL identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- organization

  ENTITY organization_assignment
    ABSTRACT SUPERTYPE;
      assigned_organization : organization;
      role                  : organization_role;
  END_ENTITY; -- organization_assignment

  ENTITY organization_relationship;
      name                  : label;
      description           : OPTIONAL text;
      relating_organization : organization;
      related_organization  : organization;
  END_ENTITY; -- organization_relationship

  ENTITY organization_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- organization_role

  ENTITY organization_type;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- organization_type

  ENTITY organization_type_assignment
    ABSTRACT SUPERTYPE;
      id                         : STRING;
      name                       : STRING;
      description                : OPTIONAL STRING;
      role                       : OPTIONAL STRING;
      assigned_organization_type : organization_type;
  END_ENTITY; -- organization_type_assignment

  ENTITY organization_type_relationship;
      description                : OPTIONAL STRING;
      id                         : STRING;
      name                       : STRING;
      related_organization_type  : organization_type;
      relating_organization_type : organization_type;
  END_ENTITY; -- organization_type_relationship

  ENTITY organizational_address
    SUBTYPE OF (address);
      organizations : SET [1:?] OF organization;
      description   : OPTIONAL text;
  END_ENTITY; -- organizational_address

  ENTITY organizational_project;
      name                      : label;
      description               : OPTIONAL text;
      responsible_organizations : SET [1:?] OF organization;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- organizational_project

  ENTITY organizational_project_assignment
    ABSTRACT SUPERTYPE;
      assigned_organizational_project : organizational_project;
      role                            : organizational_project_role;
  END_ENTITY; -- organizational_project_assignment

  ENTITY organizational_project_relationship;
      name                            : label;
      description                     : OPTIONAL text;
      relating_organizational_project : organizational_project;
      related_organizational_project  : organizational_project;
  END_ENTITY; -- organizational_project_relationship

  ENTITY organizational_project_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- organizational_project_role

  ENTITY parametric_representation_context
    SUBTYPE OF (representation_context);
  END_ENTITY; -- parametric_representation_context

  ENTITY person;
      id            : identifier;
      last_name     : OPTIONAL label;
      first_name    : OPTIONAL label;
      middle_names  : OPTIONAL LIST [1:?] OF label;
      prefix_titles : OPTIONAL LIST [1:?] OF label;
      suffix_titles : OPTIONAL LIST [1:?] OF label;
    WHERE
      wr1: (EXISTS(last_name) OR EXISTS(first_name));
  END_ENTITY; -- person

  ENTITY person_and_organization;
      the_person       : person;
      the_organization : organization;
    DERIVE
      name        : label := get_name_value(SELF);
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- person_and_organization

  ENTITY person_and_organization_address
    SUBTYPE OF (organizational_address, personal_address);
      SELF\personal_address.people              : SET [1:1] OF person;
      SELF\organizational_address.organizations : SET [1:1] OF
                                                      organization;
    WHERE
      wr1: (SIZEOF(QUERY ( pao <* USEDIN(SELF\personal_address.people[1],'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PERSON_AND_ORGANIZATION.THE_PERSON')
                | (pao.the_organization :=: SELF\organizational_address.
               organizations[1]) )) = 1);
  END_ENTITY; -- person_and_organization_address

  ENTITY person_and_organization_assignment
    ABSTRACT SUPERTYPE;
      assigned_person_and_organization : person_and_organization;
      role                             : person_and_organization_role;
  END_ENTITY; -- person_and_organization_assignment

  ENTITY person_and_organization_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- person_and_organization_role

  ENTITY person_assignment
    ABSTRACT SUPERTYPE;
      assigned_person : person;
      role            : person_role;
  END_ENTITY; -- person_assignment

  ENTITY person_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- person_role

  ENTITY person_type;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- person_type

  ENTITY person_type_assignment
    ABSTRACT SUPERTYPE;
      id                   : STRING;
      name                 : STRING;
      description          : OPTIONAL STRING;
      role                 : OPTIONAL STRING;
      assigned_person_type : person_type;
  END_ENTITY; -- person_type_assignment

  ENTITY person_type_definition;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
      formation   : person_type_definition_formation;
  END_ENTITY; -- person_type_definition

  ENTITY person_type_definition_assignment
    ABSTRACT SUPERTYPE;
      id                              : STRING;
      name                            : STRING;
      description                     : OPTIONAL STRING;
      role                            : OPTIONAL STRING;
      assigned_person_type_definition : person_type_definition;
  END_ENTITY; -- person_type_definition_assignment

  ENTITY person_type_definition_formation;
      id             : STRING;
      name           : STRING;
      description    : OPTIONAL STRING;
      of_person_type : person_type;
  END_ENTITY; -- person_type_definition_formation

  ENTITY person_type_definition_relationship;
      id                              : STRING;
      name                            : STRING;
      description                     : OPTIONAL STRING;
      related_person_type_definition  : person_type_definition;
      relating_person_type_definition : person_type_definition;
  END_ENTITY; -- person_type_definition_relationship

  ENTITY personal_address
    SUBTYPE OF (address);
      people      : SET [1:?] OF person;
      description : OPTIONAL text;
  END_ENTITY; -- personal_address

  ENTITY plane_angle_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PLANE_ANGLE_UNIT' IN
                TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- plane_angle_measure_with_unit

  ENTITY plane_angle_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- plane_angle_unit

  ENTITY position_in_organization;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- position_in_organization

  ENTITY position_in_organization_assignment
    ABSTRACT SUPERTYPE;
      id                                : STRING;
      name                              : STRING;
      description                       : OPTIONAL STRING;
      role                              : OPTIONAL STRING;
      assigned_position_in_organization : position_in_organization;
  END_ENTITY; -- position_in_organization_assignment

  ENTITY position_in_organization_relationship;
      id                                : STRING;
      name                              : STRING;
      description                       : OPTIONAL STRING;
      related_position_in_organization  : position_in_organization;
      relating_position_in_organization : position_in_organization;
  END_ENTITY; -- position_in_organization_relationship

  ENTITY position_in_organization_type;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- position_in_organization_type

  ENTITY position_in_organization_type_assignment
    ABSTRACT SUPERTYPE;
      id                                     : STRING;
      name                                   : STRING;
      description                            : OPTIONAL STRING;
      role                                   : OPTIONAL STRING;
      assigned_position_in_organization_type : position_in_organization_type;
  END_ENTITY; -- position_in_organization_type_assignment

  ENTITY power_set;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      base        : class;
      derived     : class;
  END_ENTITY; -- power_set

  ENTITY pre_defined_item;
      name : label;
  END_ENTITY; -- pre_defined_item

  ENTITY precision_qualifier;
      precision_value : INTEGER;
  END_ENTITY; -- precision_qualifier

  ENTITY process_product_association;
      name            : label;
      description     : text;
      defined_product : characterized_product_definition;
      process         : product_definition_process;
  END_ENTITY; -- process_product_association

  ENTITY process_property_association;
      name              : label;
      description       : text;
      process           : property_process;
      property_or_shape : property_or_shape_select;
  END_ENTITY; -- process_property_association

  ENTITY product;
      id                 : identifier;
      name               : label;
      description        : OPTIONAL text;
      frame_of_reference : SET [1:?] OF product_context;
  END_ENTITY; -- product

  ENTITY product_as_individual
    ABSTRACT SUPERTYPE OF (ONEOF (product_as_planned,product_as_realized))
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- product_as_individual

  ENTITY product_as_planned
    SUBTYPE OF (product_as_individual);
  END_ENTITY; -- product_as_planned

  ENTITY product_as_realized
    SUBTYPE OF (product_as_individual);
  END_ENTITY; -- product_as_realized

  ENTITY product_category;
      name        : label;
      description : OPTIONAL text;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- product_category

  ENTITY product_category_relationship;
      name         : label;
      description  : OPTIONAL text;
      category     : product_category;
      sub_category : product_category;
    WHERE
      wr1: acyclic_product_category_relationship(SELF,[SELF.sub_category]);
  END_ENTITY; -- product_category_relationship

  ENTITY product_concept;
      id             : identifier;
      name           : label;
      description    : OPTIONAL text;
      market_context : product_concept_context;
    UNIQUE
      ur1 : id;
  END_ENTITY; -- product_concept

  ENTITY product_concept_context
    SUBTYPE OF (application_context_element);
      market_segment_type : label;
  END_ENTITY; -- product_concept_context

  ENTITY product_concept_feature;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- product_concept_feature

  ENTITY product_concept_feature_association;
      name        : label;
      description : OPTIONAL text;
      concept     : product_concept;
      feature     : product_concept_feature;
  END_ENTITY; -- product_concept_feature_association

  ENTITY product_concept_relationship;
      name                     : label;
      description              : OPTIONAL text;
      relating_product_concept : product_concept;
      related_product_concept  : product_concept;
  END_ENTITY; -- product_concept_relationship

  ENTITY product_context
    SUBTYPE OF (application_context_element);
      discipline_type : label;
  END_ENTITY; -- product_context

  ENTITY product_definition;
      id                 : identifier;
      description        : OPTIONAL text;
      formation          : product_definition_formation;
      frame_of_reference : product_definition_context;
    DERIVE
      name : label := get_name_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
  END_ENTITY; -- product_definition

  ENTITY product_definition_context
    SUBTYPE OF (application_context_element);
      life_cycle_stage : label;
  END_ENTITY; -- product_definition_context

  ENTITY product_definition_context_association;
      definition         : product_definition;
      frame_of_reference : product_definition_context;
      role               : product_definition_context_role;
  END_ENTITY; -- product_definition_context_association

  ENTITY product_definition_context_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- product_definition_context_role

  ENTITY product_definition_effectivity
    SUBTYPE OF (effectivity);
      usage : product_definition_relationship;
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY')) 
               = 0);
  END_ENTITY; -- product_definition_effectivity

  ENTITY product_definition_formation;
      id          : identifier;
      description : OPTIONAL text;
      of_product  : product;
    UNIQUE
      ur1 : id, of_product;
  END_ENTITY; -- product_definition_formation

  ENTITY product_definition_formation_relationship;
      id                                    : identifier;
      name                                  : label;
      description                           : OPTIONAL text;
      relating_product_definition_formation : product_definition_formation;
      related_product_definition_formation  : product_definition_formation;
  END_ENTITY; -- product_definition_formation_relationship

  ENTITY product_definition_formation_with_specified_source
    SUBTYPE OF (product_definition_formation);
      make_or_buy : source;
  END_ENTITY; -- product_definition_formation_with_specified_source

  ENTITY product_definition_occurrence_relationship;
      name             : label;
      description      : OPTIONAL text;
      occurrence       : product_definition;
      occurrence_usage : assembly_component_usage;
    WHERE
      wr1: (occurrence_usage.relating_product_definition :<>: occurrence);
      wr2: (occurrence_usage.related_product_definition :<>: occurrence);
      wr3: (occurrence.formation :=: occurrence_usage.
               related_product_definition.formation);
  END_ENTITY; -- product_definition_occurrence_relationship

  ENTITY product_definition_process
    SUBTYPE OF (action);
      identification : identifier;
    INVERSE
      product_definitions : SET [1:?] OF process_product_association FOR 
                               process;
  END_ENTITY; -- product_definition_process

  ENTITY product_definition_relationship;
      id                          : identifier;
      name                        : label;
      description                 : OPTIONAL text;
      relating_product_definition : product_definition;
      related_product_definition  : product_definition;
  END_ENTITY; -- product_definition_relationship

  ENTITY product_definition_shape
    SUBTYPE OF (property_definition);
    UNIQUE
      ur1 : definition;
    WHERE
      wr1: (SIZEOF(['AP239_PART_DEFINITION_INFORMATION_MIM_LF.CHARACTERIZED_PRODUCT_DEFINITION','AP239_PART_DEFINITION_INFORMATION_MIM_LF.CHARACTERIZED_OBJECT'] 
               * TYPEOF(SELF\property_definition.definition)) > 0);
  END_ENTITY; -- product_definition_shape

  ENTITY product_definition_substitute;
      description           : OPTIONAL text;
      context_relationship  : product_definition_relationship;
      substitute_definition : product_definition;
    DERIVE
      name : label := get_name_value(SELF);
    WHERE
      wr1: (context_relationship.related_product_definition :<>: 
               substitute_definition);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
  END_ENTITY; -- product_definition_substitute

  ENTITY product_definition_usage
    SUPERTYPE OF (ONEOF (make_from_usage_option,assembly_component_usage))
    SUBTYPE OF (product_definition_relationship);
    UNIQUE
      ur1 : id, relating_product_definition, related_product_definition;
    WHERE
      wr1: acyclic_product_definition_relationship(SELF,[SELF\
               product_definition_relationship.related_product_definition],'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_USAGE');
  END_ENTITY; -- product_definition_usage

  ENTITY product_definition_with_associated_documents
    SUBTYPE OF (product_definition);
      documentation_ids : SET [1:?] OF document;
  END_ENTITY; -- product_definition_with_associated_documents

  ENTITY product_design_to_individual
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : product_as_individual;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : product_definition_formation;
    DERIVE
      individual_product : product_as_individual := SELF\
                              product_definition_formation_relationship.
                              related_product_definition_formation;
      product_version    : product_definition_formation := SELF\
                              product_definition_formation_relationship.
                              relating_product_definition_formation;
  END_ENTITY; -- product_design_to_individual

  ENTITY product_material_composition_relationship
    SUBTYPE OF (product_definition_relationship);
      class                : label;
      constituent_amount   : SET [1:?] OF measure_with_unit;
      composition_basis    : label;
      determination_method : text;
  END_ENTITY; -- product_material_composition_relationship

  ENTITY product_planned_to_realized
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.relating_product_definition_formation : product_as_planned;
      SELF\product_definition_formation_relationship.related_product_definition_formation  : product_as_realized;
    DERIVE
      planned_product  : product_as_planned := SELF\
                            product_definition_formation_relationship.
                            relating_product_definition_formation;
      realized_product : product_as_realized := SELF\
                            product_definition_formation_relationship.
                            related_product_definition_formation;
  END_ENTITY; -- product_planned_to_realized

  ENTITY product_related_product_category
    SUBTYPE OF (product_category);
      products : SET [1:?] OF product;
  END_ENTITY; -- product_related_product_category

  ENTITY product_relationship;
      id               : identifier;
      name             : label;
      description      : OPTIONAL text;
      relating_product : product;
      related_product  : product;
  END_ENTITY; -- product_relationship

  ENTITY promissory_usage_occurrence
    SUBTYPE OF (assembly_component_usage);
  END_ENTITY; -- promissory_usage_occurrence

  ENTITY proper_subset;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      subset      : class;
      superset    : class;
  END_ENTITY; -- proper_subset

  ENTITY property_definition;
      name        : label;
      description : OPTIONAL text;
      definition  : characterized_definition;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- property_definition

  ENTITY property_definition_relationship;
      name                         : label;
      description                  : text;
      relating_property_definition : property_definition;
      related_property_definition  : property_definition;
  END_ENTITY; -- property_definition_relationship

  ENTITY property_definition_representation;
      definition          : represented_definition;
      used_representation : representation;
    DERIVE
      description : text := get_description_value(SELF);
      name        : label := get_name_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM')) 
               <= 1);
  END_ENTITY; -- property_definition_representation

  ENTITY property_process
    SUBTYPE OF (action);
      identification : identifier;
    INVERSE
      properties : SET [1:?] OF process_property_association FOR process;
  END_ENTITY; -- property_process

  ENTITY qualification_type;
      id          : STRING;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- qualification_type

  ENTITY qualification_type_assignment
    ABSTRACT SUPERTYPE;
      id                          : STRING;
      name                        : STRING;
      description                 : OPTIONAL STRING;
      role                        : OPTIONAL STRING;
      assigned_qualification_type : qualification_type;
  END_ENTITY; -- qualification_type_assignment

  ENTITY qualification_type_relationship;
      id                          : STRING;
      name                        : STRING;
      description                 : OPTIONAL STRING;
      related_qualification_type  : qualification_type;
      relating_qualification_type : qualification_type;
  END_ENTITY; -- qualification_type_relationship

  ENTITY qualified_representation_item
    SUBTYPE OF (representation_item);
      qualifiers : SET [1:?] OF value_qualifier;
    WHERE
      wr1: (SIZEOF(QUERY ( temp <* qualifiers | ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRECISION_QUALIFIER' 
               IN TYPEOF(temp)) )) < 2);
  END_ENTITY; -- qualified_representation_item

  ENTITY qualitative_uncertainty
    SUBTYPE OF (uncertainty_qualifier);
      uncertainty_value : text;
  END_ENTITY; -- qualitative_uncertainty

  ENTITY quantified_assembly_component_usage
    SUBTYPE OF (assembly_component_usage);
      quantity : measure_with_unit;
    WHERE
      wr1: ((NOT ('NUMBER' IN TYPEOF(quantity.value_component))) OR (
               quantity.value_component > 0));
  END_ENTITY; -- quantified_assembly_component_usage

  ENTITY ratio_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.RATIO_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- ratio_measure_with_unit

  ENTITY ratio_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- ratio_unit

  ENTITY relative_event_occurrence
    SUBTYPE OF (event_occurrence);
      base_event : event_occurrence;
      offset     : time_measure_with_unit;
  END_ENTITY; -- relative_event_occurrence

  ENTITY replacement_relationship
    SUBTYPE OF (action_relationship);
    WHERE
      wr1: acyclic_action_relationship(SELF,[SELF\action_relationship.
               related_action],'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPLACEMENT_RELATIONSHIP');
  END_ENTITY; -- replacement_relationship

  ENTITY representation;
      name             : label;
      items            : SET [1:?] OF representation_item;
      context_of_items : representation_context;
    DERIVE
      id          : identifier := get_id_value(SELF);
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- representation

  ENTITY representation_context;
      context_identifier : identifier;
      context_type       : text;
    INVERSE
      representations_in_context : SET [1:?] OF representation FOR 
                                      context_of_items;
  END_ENTITY; -- representation_context

  ENTITY representation_item;
      name : label;
    WHERE
      wr1: (SIZEOF(using_representations(SELF)) > 0);
  END_ENTITY; -- representation_item

  ENTITY representation_item_relationship;
      name                         : label;
      description                  : OPTIONAL text;
      relating_representation_item : representation_item;
      related_representation_item  : representation_item;
  END_ENTITY; -- representation_item_relationship

  ENTITY representation_map;
      mapping_origin        : representation_item;
      mapped_representation : representation;
    INVERSE
      map_usage : SET [1:?] OF mapped_item FOR mapping_source;
    WHERE
      wr1: item_in_context(SELF.mapping_origin,SELF.mapped_representation.
               context_of_items);
  END_ENTITY; -- representation_map

  ENTITY representation_relationship;
      name        : label;
      description : OPTIONAL text;
      rep_1       : representation;
      rep_2       : representation;
  END_ENTITY; -- representation_relationship

  ENTITY representation_relationship_with_transformation
    SUBTYPE OF (representation_relationship);
      transformation_operator : transformation;
    WHERE
      wr1: (SELF\representation_relationship.rep_1.context_of_items :<>: 
               SELF\representation_relationship.rep_2.context_of_items);
  END_ENTITY; -- representation_relationship_with_transformation

  ENTITY requirement_assigned_object
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_assignment;
      items                                : SET [1:1] OF
                                                 requirement_assigned_item;
  END_ENTITY; -- requirement_assigned_object

  ENTITY requirement_assignment
    SUBTYPE OF (characterized_object, group);
  END_ENTITY; -- requirement_assignment

  ENTITY requirement_for_action_resource
    SUBTYPE OF (action_resource_requirement);
      resources : SET [1:?] OF action_resource;
  END_ENTITY; -- requirement_for_action_resource

  ENTITY requirement_source
    SUBTYPE OF (group);
  END_ENTITY; -- requirement_source

  ENTITY resource_property;
      name        : label;
      description : text;
      resource    : characterized_resource_definition;
  END_ENTITY; -- resource_property

  ENTITY resource_property_relationship;
      name                       : label;
      description                : text;
      relating_resource_property : resource_property;
      related_resource_property  : resource_property;
    WHERE
      wr1: (relating_resource_property :<>: related_resource_property);
  END_ENTITY; -- resource_property_relationship

  ENTITY resource_property_representation;
      name           : label;
      description    : text;
      property       : resource_property;
      representation : representation;
  END_ENTITY; -- resource_property_representation

  ENTITY resource_requirement_type;
      name        : label;
      description : text;
  END_ENTITY; -- resource_requirement_type

  ENTITY resource_requirement_type_relationship;
      name                      : label;
      description               : text;
      relating_requirement_type : resource_requirement_type;
      related_requirement_type  : resource_requirement_type;
    WHERE
      wr1: (relating_requirement_type :<>: related_requirement_type);
  END_ENTITY; -- resource_requirement_type_relationship

  ENTITY right_to_usage_association
    SUBTYPE OF (action_method_relationship);
      SELF\action_method_relationship.related_method  : information_right;
      SELF\action_method_relationship.relating_method : information_usage_right;
    DERIVE
      right_applied : information_right := SELF\action_method_relationship
                         .related_method;
      right_usage   : information_usage_right := SELF\
                         action_method_relationship.relating_method;
  END_ENTITY; -- right_to_usage_association

  ENTITY role_association;
      role           : object_role;
      item_with_role : role_select;
  END_ENTITY; -- role_association

  ENTITY same_membership;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      set_1       : class;
      set_2       : class;
  END_ENTITY; -- same_membership

  ENTITY security_classification;
      name           : label;
      purpose        : text;
      security_level : security_classification_level;
  END_ENTITY; -- security_classification

  ENTITY security_classification_assignment
    ABSTRACT SUPERTYPE;
      assigned_security_classification : security_classification;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE')) 
               <= 1);
  END_ENTITY; -- security_classification_assignment

  ENTITY security_classification_level;
      name : label;
  END_ENTITY; -- security_classification_level

  ENTITY serial_numbered_effectivity
    SUBTYPE OF (effectivity);
      effectivity_start_id : identifier;
      effectivity_end_id   : OPTIONAL identifier;
  END_ENTITY; -- serial_numbered_effectivity

  ENTITY shape_aspect;
      name                 : label;
      description          : OPTIONAL text;
      of_shape             : product_definition_shape;
      product_definitional : LOGICAL;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- shape_aspect

  ENTITY shape_aspect_relationship;
      name                  : label;
      description           : OPTIONAL text;
      relating_shape_aspect : shape_aspect;
      related_shape_aspect  : shape_aspect;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM')) 
               <= 1);
  END_ENTITY; -- shape_aspect_relationship

  ENTITY shape_definition_representation
    SUBTYPE OF (property_definition_representation);
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_SHAPE' 
               IN TYPEOF(SELF.definition)) OR (
               'AP239_PART_DEFINITION_INFORMATION_MIM_LF.SHAPE_DEFINITION' 
               IN TYPEOF(SELF.definition.definition)));
      wr2: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.SHAPE_REPRESENTATION' 
               IN TYPEOF(SELF.used_representation));
  END_ENTITY; -- shape_definition_representation

  ENTITY shape_representation
    SUBTYPE OF (representation);
  END_ENTITY; -- shape_representation

  ENTITY shape_representation_relationship
    SUBTYPE OF (representation_relationship);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.SHAPE_REPRESENTATION' 
               IN (TYPEOF(SELF\representation_relationship.rep_1) + TYPEOF(
               SELF\representation_relationship.rep_2)));
  END_ENTITY; -- shape_representation_relationship

  ENTITY si_unit
    SUBTYPE OF (named_unit);
      prefix : OPTIONAL si_prefix;
      name   : si_unit_name;
    DERIVE
      SELF\named_unit.dimensions : dimensional_exponents := 
                                      dimensions_for_si_unit(name);
  END_ENTITY; -- si_unit

  ENTITY solid_angle_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.SOLID_ANGLE_UNIT' IN
                TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- solid_angle_measure_with_unit

  ENTITY solid_angle_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- solid_angle_unit

  ENTITY source_for_requirement
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_source;
      items                                : SET [1:1] OF
                                                 requirement_source_item;
  END_ENTITY; -- source_for_requirement

  ENTITY sourced_requirement
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_source;
      items                                : SET [1:1] OF
                                                 product_definition;
  END_ENTITY; -- sourced_requirement

  ENTITY specified_higher_usage_occurrence
    SUBTYPE OF (assembly_component_usage);
      upper_usage : assembly_component_usage;
      next_usage  : next_assembly_usage_occurrence;
    UNIQUE
      ur1 : upper_usage, next_usage;
    WHERE
      wr1: (SELF :<>: upper_usage);
      wr2: (SELF\product_definition_relationship.
               relating_product_definition :=: upper_usage.
               relating_product_definition);
      wr3: (SELF\product_definition_relationship.
               related_product_definition :=: next_usage.
               related_product_definition);
      wr4: ((upper_usage.related_product_definition :=: next_usage.
               relating_product_definition) OR (SIZEOF(QUERY ( pdr <* 
               USEDIN(upper_usage.related_product_definition,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION')
                | (pdr.relating_product_definition :=: next_usage.
               relating_product_definition) )) = 1));
      wr5: (SIZEOF(['AP239_PART_DEFINITION_INFORMATION_MIM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE','AP239_PART_DEFINITION_INFORMATION_MIM_LF.SPECIFIED_HIGHER_USAGE_OCCURRENCE'] 
               * TYPEOF(upper_usage)) = 1);
  END_ENTITY; -- specified_higher_usage_occurrence

  ENTITY standard_uncertainty
    SUPERTYPE OF (expanded_uncertainty)
    SUBTYPE OF (uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY; -- standard_uncertainty

  ENTITY state_characterized_object
    SUBTYPE OF (characterized_object, state_type);
  END_ENTITY; -- state_characterized_object

  ENTITY state_observed;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- state_observed

  ENTITY state_observed_relationship;
      name                    : STRING;
      description             : OPTIONAL STRING;
      relating_state_observed : SET [1:?] OF state_observed;
      related_state_observed  : SET [1:?] OF state_observed;
      role                    : STRING;
  END_ENTITY; -- state_observed_relationship

  ENTITY state_predicted
    SUBTYPE OF (state_observed);
  END_ENTITY; -- state_predicted

  ENTITY state_relationship_characterized_object
    SUBTYPE OF (characterized_object, state_type_relationship);
  END_ENTITY; -- state_relationship_characterized_object

  ENTITY state_role;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- state_role

  ENTITY state_type;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- state_type

  ENTITY state_type_relationship;
      name                : STRING;
      description         : OPTIONAL STRING;
      relating_state_type : SET [1:?] OF state_type;
      related_state_type  : SET [1:?] OF state_type;
      role                : STRING;
  END_ENTITY; -- state_type_relationship

  ENTITY state_type_role;
      name        : STRING;
      description : OPTIONAL STRING;
  END_ENTITY; -- state_type_role

  ENTITY structured_message
    SUBTYPE OF (product);
  END_ENTITY; -- structured_message

  ENTITY subset;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      subset      : class;
      superset    : class;
  END_ENTITY; -- subset

  ENTITY thermodynamic_temperature_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- thermodynamic_temperature_measure_with_unit

  ENTITY thermodynamic_temperature_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 1) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- thermodynamic_temperature_unit

  ENTITY time_assignment
    ABSTRACT SUPERTYPE;
      assigned_time : local_time;
      role          : time_role;
  END_ENTITY; -- time_assignment

  ENTITY time_interval;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- time_interval

  ENTITY time_interval_assignment
    ABSTRACT SUPERTYPE;
      assigned_time_interval : time_interval;
      role                   : time_interval_role;
  END_ENTITY; -- time_interval_assignment

  ENTITY time_interval_based_effectivity
    SUBTYPE OF (effectivity);
      effectivity_period : time_interval;
  END_ENTITY; -- time_interval_based_effectivity

  ENTITY time_interval_relationship;
      name                   : label;
      description            : OPTIONAL text;
      relating_time_interval : time_interval;
      related_time_interval  : time_interval;
  END_ENTITY; -- time_interval_relationship

  ENTITY time_interval_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- time_interval_role

  ENTITY time_interval_with_bounds
    SUBTYPE OF (time_interval);
      primary_bound   : OPTIONAL date_time_or_event_occurrence;
      secondary_bound : OPTIONAL date_time_or_event_occurrence;
      duration        : OPTIONAL time_measure_with_unit;
    WHERE
      wr1: (NOT (EXISTS(secondary_bound) AND EXISTS(duration)));
      wr2: (EXISTS(primary_bound) OR EXISTS(secondary_bound));
  END_ENTITY; -- time_interval_with_bounds

  ENTITY time_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.TIME_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- time_measure_with_unit

  ENTITY time_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) 
               <= 1);
  END_ENTITY; -- time_role

  ENTITY time_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 1) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- time_unit

  ENTITY type_qualifier;
      name : label;
  END_ENTITY; -- type_qualifier

  ENTITY uncertainty_assigned_representation
    SUBTYPE OF (representation);
      uncertainty : SET [1:?] OF uncertainty_measure_with_unit;
  END_ENTITY; -- uncertainty_assigned_representation

  ENTITY uncertainty_measure_with_unit
    SUBTYPE OF (measure_with_unit);
      name        : label;
      description : OPTIONAL text;
    WHERE
      wr1: valid_measure_value(SELF\measure_with_unit.value_component);
  END_ENTITY; -- uncertainty_measure_with_unit

  ENTITY uncertainty_qualifier
    SUPERTYPE OF (ONEOF (standard_uncertainty,qualitative_uncertainty));
      measure_name : label;
      description  : text;
  END_ENTITY; -- uncertainty_qualifier

  ENTITY union;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      operand     : SET [2:?] OF class;
      resultant   : class;
  END_ENTITY; -- union

  ENTITY usage_association
    SUBTYPE OF (action_method_relationship);
      SELF\action_method_relationship.related_method  : information_usage_right;
      SELF\action_method_relationship.relating_method : information_usage_right;
    DERIVE
      related  : information_usage_right := SELF\
                    action_method_relationship.related_method;
      relating : information_usage_right := SELF\
                    action_method_relationship.relating_method;
  END_ENTITY; -- usage_association

  ENTITY value_range
    SUBTYPE OF (compound_representation_item);
    WHERE
      wr1: ((('value_with_unit_mim.' + 'SET_REPRESENTATION_ITEM') IN 
               TYPEOF(item_element)) AND value_range_wr1(item_element));
      wr2: value_range_wr2(item_element);
      wr3: value_range_wr3(item_element);
  END_ENTITY; -- value_range

  ENTITY value_representation_item
    SUBTYPE OF (representation_item);
      value_component : measure_value;
    WHERE
      wr1: (SIZEOF(QUERY ( rep <* using_representations(SELF) | (NOT ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.GLOBAL_UNIT_ASSIGNED_CONTEXT' 
               IN TYPEOF(rep.context_of_items))) )) = 0);
  END_ENTITY; -- value_representation_item

  ENTITY versioned_action_request;
      id          : identifier;
      version     : label;
      purpose     : text;
      description : OPTIONAL text;
  END_ENTITY; -- versioned_action_request

  ENTITY volume_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.VOLUME_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- volume_measure_with_unit

  ENTITY volume_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 3) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- volume_unit

  ENTITY week_of_year_and_day_date
    SUBTYPE OF (date);
      week_component : week_in_year_number;
      day_component  : OPTIONAL day_in_week_number;
  END_ENTITY; -- week_of_year_and_day_date

  RULE aliases_are_valid FOR (applied_identification_assignment);

  WHERE
    wr1: (SIZEOF(QUERY ( aia <* applied_identification_assignment | (NOT 
             alias_assignment_is_valid(aia)) )) = 0);

  END_RULE; -- aliases_are_valid

  FUNCTION acyclic_action_method_relationship(
               relation: action_method_relationship;
               relatives: SET [1:?] OF action_method;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF action_method_relationship;
    END_LOCAL;
    IF relation.relating_method IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( am <* bag_to_set(USEDIN(relation.relating_method,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ACTION_METHOD_RELATIONSHIP.RELATED_METHOD'))
         | (specific_relation IN TYPEOF(am)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_action_method_relationship(x[i],relatives + relation.
          relating_method,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_action_method_relationship

  FUNCTION acyclic_action_relationship(
               relation: action_relationship;
               relatives: SET [1:?] OF action;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF action_relationship;
    END_LOCAL;
    IF relation.relating_action IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( actn <* bag_to_set(USEDIN(relation.relating_action,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ACTION_RELATIONSHIP.RELATED_ACTION'))
         | (specific_relation IN TYPEOF(actn)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_action_relationship(x[i],relatives + relation.
          relating_action,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_action_relationship

  FUNCTION acyclic_action_resource_relationship(
               relation: action_resource_relationship;
               relatives: SET [1:?] OF action_resource;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF action_resource_relationship;
    END_LOCAL;
    IF relation.relating_resource IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( ar <* bag_to_set(USEDIN(relation.relating_resource,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ACTION_RESOURCE_RELATIONSHIP.RELATED_RESOURCE'))
         | (specific_relation IN TYPEOF(ar)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_action_resource_relationship(x[i],relatives + 
          relation.relating_resource,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_action_resource_relationship

  FUNCTION acyclic_approval_relationship(
               relation: approval_relationship;
               relatives: SET [1:?] OF approval;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF approval_relationship;
    END_LOCAL;
    IF relation.relating_approval IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( app <* bag_to_set(USEDIN(relation.relating_approval,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.APPROVAL_RELATIONSHIP.RELATED_APPROVAL'))
         | (specific_relation IN TYPEOF(app)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_approval_relationship(x[i],relatives + relation.
          relating_approval,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_approval_relationship

  FUNCTION acyclic_characterized_object_relationship(
               relation: characterized_object_relationship;
               relatives: SET [1:?] OF characterized_object;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF characterized_object_relationship;
    END_LOCAL;
    IF relation.relating_object IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( ca <* bag_to_set(USEDIN(relation.relating_object,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.CHARACTERIZED_OBJECT_RELATIONSHIP.RELATED_OBJECT'))
         | (specific_relation IN TYPEOF(ca)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_characterized_object_relationship(x[i],relatives + 
          relation.relating_object,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_characterized_object_relationship

  FUNCTION acyclic_contract_relationship(
               relation: contract_relationship;
               relatives: SET [1:?] OF contract;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF contract_relationship;
    END_LOCAL;
    IF relation.relating_contract IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( cont <* bag_to_set(USEDIN(relation.relating_contract,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.CONTRACT_RELATIONSHIP.RELATED_CONTRACT'))
         | (specific_relation IN TYPEOF(cont)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_contract_relationship(x[i],relatives + relation.
          relating_contract,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_contract_relationship

  FUNCTION acyclic_document_relationship(
               relation: document_relationship;
               relatives: SET [1:?] OF document;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF document_relationship;
    END_LOCAL;
    IF relation.relating_document IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( doc <* bag_to_set(USEDIN(relation.relating_document,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DOCUMENT_RELATIONSHIP.RELATED_DOCUMENT'))
         | (specific_relation IN TYPEOF(doc)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_document_relationship(x[i],relatives + relation.
          relating_document,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_document_relationship

  FUNCTION acyclic_effectivity_relationship(
               relation: effectivity_relationship;
               relatives: SET [1:?] OF effectivity;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF effectivity_relationship;
    END_LOCAL;
    IF relation.relating_effectivity IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( eff <* bag_to_set(USEDIN(relation.relating_effectivity,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.EFFECTIVITY_RELATIONSHIP.RELATED_EFFECTIVITY'))
         | (specific_relation IN TYPEOF(eff)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_effectivity_relationship(x[i],relatives + relation.
          relating_effectivity,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_effectivity_relationship

  FUNCTION acyclic_event_occurrence_relationship(
               relation: event_occurrence_relationship;
               relatives: SET [1:?] OF event_occurrence;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF event_occurrence_relationship;
    END_LOCAL;
    IF relation.relating_event IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( evnt <* bag_to_set(USEDIN(relation.relating_event,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.EVENT_OCCURRENCE_RELATIONSHIP.RELATED_EVENT'))
         | (specific_relation IN TYPEOF(evnt)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_event_occurrence_relationship(x[i],relatives + 
          relation.relating_event,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_event_occurrence_relationship

  FUNCTION acyclic_external_source_relationship(
               relation: external_source_relationship;
               relatives: SET [1:?] OF external_source;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF external_source_relationship;
    END_LOCAL;
    IF relation.relating_source IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( es <* bag_to_set(USEDIN(relation.relating_source,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.EXTERNAL_SOURCE_RELATIONSHIP.RELATED_SOURCE'))
         | (specific_relation IN TYPEOF(es)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_external_source_relationship(x[i],relatives + 
          relation.relating_source,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_external_source_relationship

  FUNCTION acyclic_externally_defined_item_relationship(
               relation: externally_defined_item_relationship;
               relatives: SET [1:?] OF externally_defined_item;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF externally_defined_item_relationship;
    END_LOCAL;
    IF relation.relating_item IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( edi <* bag_to_set(USEDIN(relation.relating_item,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.EXTERNALLY_DEFINED_ITEM_RELATIONSHIP.RELATED_ITEM'))
         | (specific_relation IN TYPEOF(edi)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_externally_defined_item_relationship(x[i],relatives +
           relation.relating_item,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_externally_defined_item_relationship

  FUNCTION acyclic_general_property_relationship(
               relation: general_property_relationship;
               relatives: SET [1:?] OF general_property;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF general_property_relationship;
    END_LOCAL;
    IF relation.relating_property IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( genp <* bag_to_set(USEDIN(relation.relating_property,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.GENERAL_PROPERTY_RELATIONSHIP.RELATED_PROPERTY'))
         | (specific_relation IN TYPEOF(genp)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_general_property_relationship(x[i],relatives + 
          relation.relating_property,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_general_property_relationship

  FUNCTION acyclic_group_relationship(
               relation: group_relationship;
               relatives: SET [1:?] OF group;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF group_relationship;
    END_LOCAL;
    IF relation.relating_group IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( grp <* bag_to_set(USEDIN(relation.relating_group,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.GROUP_RELATIONSHIP.RELATED_GROUP'))
         | (specific_relation IN TYPEOF(grp)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_group_relationship(x[i],relatives + relation.
          relating_group,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_group_relationship

  FUNCTION acyclic_identification_assignment_relationship(
               relation: identification_assignment_relationship;
               relatives: SET [1:?] OF identification_assignment;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF identification_assignment_relationship;
    END_LOCAL;
    IF relation.relating_identification_assignment IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( ia <* bag_to_set(USEDIN(relation.
        relating_identification_assignment,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.IDENTIFICATION_ASSIGNMENT_RELATIONSHIP.RELATED_IDENTIFICATION_ASSIGNMENT'))
         | (specific_relation IN TYPEOF(ia)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_identification_assignment_relationship(x[i],relatives 
          + relation.relating_identification_assignment,specific_relation)
           THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_identification_assignment_relationship

  FUNCTION acyclic_mapped_representation(
               parent_set: SET OF representation;
               children_set: SET OF representation_item
      ): BOOLEAN;

    LOCAL
      x : SET OF representation_item;
      y : SET OF representation_item;
    END_LOCAL;
    x := QUERY ( z <* children_set | (
        'AP239_PART_DEFINITION_INFORMATION_MIM_LF.MAPPED_ITEM' IN TYPEOF(z)) );
    IF SIZEOF(x) > 0 THEN
      REPEAT i := 1 TO HIINDEX(x) BY 1;
        IF x[i]\mapped_item.mapping_source.mapped_representation IN 
            parent_set THEN
          RETURN(FALSE);
        END_IF;
        IF NOT acyclic_mapped_representation(parent_set + x[i]\mapped_item
            .mapping_source.mapped_representation,x[i]\mapped_item.
            mapping_source.mapped_representation.items) THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
    END_IF;
    x := children_set - x;
    IF SIZEOF(x) > 0 THEN
      REPEAT i := 1 TO HIINDEX(x) BY 1;
        y := QUERY ( z <* bag_to_set(USEDIN(x[i],'')) | (
            'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPRESENTATION_ITEM' 
            IN TYPEOF(z)) );
        IF NOT acyclic_mapped_representation(parent_set,y) THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_mapped_representation

  FUNCTION acyclic_organization_relationship(
               relation: organization_relationship;
               relatives: SET [1:?] OF organization;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF organization_relationship;
    END_LOCAL;
    IF relation.relating_organization IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( org <* bag_to_set(USEDIN(relation.relating_organization,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ORGANIZATION_RELATIONSHIP.RELATED_ORGANIZATION'))
         | (specific_relation IN TYPEOF(org)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_organization_relationship(x[i],relatives + relation.
          relating_organization,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_organization_relationship

  FUNCTION acyclic_organizational_project_relationship(
               relation: organizational_project_relationship;
               relatives: SET [1:?] OF organizational_project;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF organizational_project_relationship;
    END_LOCAL;
    IF relation.relating_organizational_project IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( op <* bag_to_set(USEDIN(relation.
        relating_organizational_project,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ORGANIZATIONAL_PROJECT_RELATIONSHIP.RELATED_ORGANIZATIONAL_PROJECT'))
         | (specific_relation IN TYPEOF(op)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_organizational_project_relationship(x[i],relatives + 
          relation.relating_organizational_project,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_organizational_project_relationship

  FUNCTION acyclic_product_category_relationship(
               relation: product_category_relationship;
               children: SET OF product_category
      ): BOOLEAN;

    LOCAL
      x              : SET OF product_category_relationship;
      local_children : SET OF product_category;
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(children) BY 1;
      IF relation.category :=: children[i] THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    x := bag_to_set(USEDIN(relation.category,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY'));
    local_children := children + relation.category;
    IF SIZEOF(x) > 0 THEN
      REPEAT i := 1 TO HIINDEX(x) BY 1;
        IF NOT acyclic_product_category_relationship(x[i],local_children)
             THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_product_category_relationship

  FUNCTION acyclic_product_definition_formation_relationship(
               relation: product_definition_formation_relationship;
               relatives: SET [1:?] OF product_definition_formation;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF product_definition_formation_relationship;
    END_LOCAL;
    IF relation.relating_product_definition_formation IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( pdf <* bag_to_set(USEDIN(relation.
        relating_product_definition_formation,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_FORMATION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION_FORMATION'))
         | (specific_relation IN TYPEOF(pdf)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_product_definition_formation_relationship(x[i],
          relatives + relation.relating_product_definition_formation,
          specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_product_definition_formation_relationship

  FUNCTION acyclic_product_definition_relationship(
               relation: product_definition_relationship;
               relatives: SET [1:?] OF product_definition;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF product_definition_relationship;
    END_LOCAL;
    IF relation.relating_product_definition IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( pd <* bag_to_set(USEDIN(relation.
        relating_product_definition,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION'))
         | (specific_relation IN TYPEOF(pd)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_product_definition_relationship(x[i],relatives + 
          relation.relating_product_definition,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_product_definition_relationship

  FUNCTION acyclic_product_relationship(
               relation: product_relationship;
               relatives: SET [1:?] OF product;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF product_relationship;
    END_LOCAL;
    IF relation.relating_product IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( prod <* bag_to_set(USEDIN(relation.relating_product,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_RELATIONSHIP.RELATED_PRODUCT'))
         | (specific_relation IN TYPEOF(prod)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_product_relationship(x[i],relatives + relation.
          relating_product,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_product_relationship

  FUNCTION acyclic_property_definition_relationship(
               relation: property_definition_relationship;
               relatives: SET [1:?] OF property_definition;
               specific_relation: STRING
      ): LOGICAL;

    LOCAL
      x : SET OF property_definition_relationship;
    END_LOCAL;
    IF relation.relating_property_definition IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( pd <* bag_to_set(USEDIN(relation.
        relating_property_definition,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PROPERTY_DEFINITION_RELATIONSHIP.RELATED_PROPERTY_DEFINITION'))
         | (specific_relation IN TYPEOF(pd)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_property_definition_relationship(x[i],relatives + 
          relation.relating_property_definition,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_property_definition_relationship

  FUNCTION acyclic_shape_aspect_relationship(
               relation: shape_aspect_relationship;
               relatives: SET [1:?] OF shape_aspect;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF shape_aspect_relationship;
    END_LOCAL;
    IF relation.relating_shape_aspect IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( sa <* bag_to_set(USEDIN(relation.relating_shape_aspect,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT'))
         | (specific_relation IN TYPEOF(sa)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_shape_aspect_relationship(x[i],relatives + relation.
          relating_shape_aspect,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_shape_aspect_relationship

  FUNCTION acyclic_time_interval_relationship(
               relation: time_interval_relationship;
               relatives: SET [1:?] OF time_interval;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF time_interval_relationship;
    END_LOCAL;
    IF relation.relating_time_interval IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( ti <* bag_to_set(USEDIN(relation.relating_time_interval,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.TIME_INTERVAL_RELATIONSHIP.RELATED_TIME_INTERVAL'))
         | (specific_relation IN TYPEOF(ti)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_time_interval_relationship(x[i],relatives + relation.
          relating_time_interval,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_time_interval_relationship

  FUNCTION alias_assignment_is_valid(
               aia: applied_identification_assignment
      ): BOOLEAN;

    LOCAL
      item : identification_item;
      role : identification_role;
    END_LOCAL;
    role := aia.role;
    IF role.name = 'alias' THEN
      REPEAT i := LOINDEX(aia.items) TO HIINDEX(aia.items) BY 1;
        item := aia.items[i];
        IF SIZEOF(['AP239_PART_DEFINITION_INFORMATION_MIM_LF.' + 
            'ALIASABLE_ITEM'] * TYPEOF(item)) = 0 THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
      RETURN(TRUE);
    ELSE
      RETURN(TRUE);
    END_IF;

  END_FUNCTION; -- alias_assignment_is_valid

  FUNCTION bag_to_set(
               the_bag: BAG OF GENERIC:intype
      ): SET OF GENERIC:intype;

    LOCAL
      the_set : SET OF GENERIC:intype := [];
    END_LOCAL;
    IF SIZEOF(the_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag) BY 1;
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);

  END_FUNCTION; -- bag_to_set

  FUNCTION derive_dimensional_exponents(
               x: unit
      ): dimensional_exponents;

    LOCAL
      result : dimensional_exponents := dimensional_exponents(0,0,0,0,0,0,
                0);
    END_LOCAL;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DERIVED_UNIT' IN TYPEOF(x)
         THEN
      REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements) BY 1;
        result.length_exponent := result.length_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.length_exponent);
        result.mass_exponent := result.mass_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.mass_exponent);
        result.time_exponent := result.time_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.time_exponent);
        result.electric_current_exponent := result.
            electric_current_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.electric_current_exponent);
        result.thermodynamic_temperature_exponent := result.
            thermodynamic_temperature_exponent + (x.elements[i].exponent * 
            x.elements[i].unit.dimensions.
            thermodynamic_temperature_exponent);
        result.amount_of_substance_exponent := result.
            amount_of_substance_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.amount_of_substance_exponent);
        result.luminous_intensity_exponent := result.
            luminous_intensity_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.luminous_intensity_exponent);
      END_REPEAT;
    ELSE
      result := x.dimensions;
    END_IF;
    RETURN(result);

  END_FUNCTION; -- derive_dimensional_exponents

  FUNCTION dimensions_for_si_unit(
               n: si_unit_name
      ): dimensional_exponents;
    CASE n OF
      metre         :         RETURN(dimensional_exponents(1,0,0,0,0,0,0));
      gram          :         RETURN(dimensional_exponents(0,1,0,0,0,0,0));
      second        :         RETURN(dimensional_exponents(0,0,1,0,0,0,0));
      ampere        :         RETURN(dimensional_exponents(0,0,0,1,0,0,0));
      kelvin        :         RETURN(dimensional_exponents(0,0,0,0,1,0,0));
      mole          :         RETURN(dimensional_exponents(0,0,0,0,0,1,0));
      candela       :         RETURN(dimensional_exponents(0,0,0,0,0,0,1));
      radian        :         RETURN(dimensional_exponents(0,0,0,0,0,0,0));
      steradian     :         RETURN(dimensional_exponents(0,0,0,0,0,0,0));
      hertz         :         RETURN(dimensional_exponents(0,0,-1,0,0,0,0));
      newton        :         RETURN(dimensional_exponents(1,1,-2,0,0,0,0));
      pascal        :         RETURN(dimensional_exponents(-1,1,-2,0,0,0,0));
      joule         :         RETURN(dimensional_exponents(2,1,-2,0,0,0,0));
      watt          :         RETURN(dimensional_exponents(2,1,-3,0,0,0,0));
      coulomb       :         RETURN(dimensional_exponents(0,0,1,1,0,0,0));
      volt          :         RETURN(dimensional_exponents(2,1,-3,-1,0,0,0));
      farad         :         RETURN(dimensional_exponents(-2,-1,4,1,0,0,0));
      ohm           :         RETURN(dimensional_exponents(2,1,-3,-2,0,0,0));
      siemens       :         RETURN(dimensional_exponents(-2,-1,3,2,0,0,0));
      weber         :         RETURN(dimensional_exponents(2,1,-2,-1,0,0,0));
      tesla         :         RETURN(dimensional_exponents(0,1,-2,-1,0,0,0));
      henry         :         RETURN(dimensional_exponents(2,1,-2,-2,0,0,0));
      degree_celsius  :         RETURN(dimensional_exponents(0,0,0,0,1,0,0));
      lumen         :         RETURN(dimensional_exponents(0,0,0,0,0,0,1));
      lux           :         RETURN(dimensional_exponents(-2,0,0,0,0,0,1));
      becquerel     :         RETURN(dimensional_exponents(0,0,-1,0,0,0,0));
      gray          :         RETURN(dimensional_exponents(2,0,-2,0,0,0,0));
      sievert       :         RETURN(dimensional_exponents(2,0,-2,0,0,0,0));
      OTHERWISE     :         RETURN(?);
      END_CASE;

  END_FUNCTION; -- dimensions_for_si_unit

  FUNCTION get_description_value(
               obj: description_attribute_select
      ): text;

    LOCAL
      description_bag : BAG OF description_attribute := USEDIN(obj,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM');
    END_LOCAL;
    IF SIZEOF(description_bag) = 1 THEN
      RETURN(description_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; -- get_description_value

  FUNCTION get_id_value(
               obj: id_attribute_select
      ): identifier;

    LOCAL
      id_bag : BAG OF id_attribute := USEDIN(obj,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ID_ATTRIBUTE.IDENTIFIED_ITEM');
    END_LOCAL;
    IF SIZEOF(id_bag) = 1 THEN
      RETURN(id_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; -- get_id_value

  FUNCTION get_name_value(
               obj: name_attribute_select
      ): label;

    LOCAL
      name_bag : BAG OF name_attribute := USEDIN(obj,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM');
    END_LOCAL;
    IF SIZEOF(name_bag) = 1 THEN
      RETURN(name_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; -- get_name_value

  FUNCTION get_product_definitions(
               c_def_instance: product
      ): SET OF product_definition;

    LOCAL
      pdr_set : SET OF product_definition := [];
      pd_set  : SET OF product_definition_formation := [];
    END_LOCAL;
    pd_set := bag_to_set(USEDIN(c_def_instance,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_FORMATION.OF_PRODUCT'));
    IF SIZEOF(pd_set) < 1 THEN
      RETURN(pdr_set);
    END_IF;
    REPEAT i := 1 TO HIINDEX(pd_set) BY 1;
      pdr_set := pdr_set + bag_to_set(USEDIN(pd_set[i],'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION.FORMATION'));
    END_REPEAT;
    RETURN(pdr_set);

  END_FUNCTION; -- get_product_definitions

  FUNCTION get_property_definition_representations(
               c_def_instance: characterized_definition
      ): SET OF property_definition_representation;

    LOCAL
      pdr_set : SET OF property_definition_representation := [];
      pd_set  : SET OF property_definition := [];
    END_LOCAL;
    pd_set := bag_to_set(USEDIN(c_def_instance,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PROPERTY_DEFINITION.DEFINITION'));
    IF SIZEOF(pd_set) < 1 THEN
      RETURN(pdr_set);
    END_IF;
    REPEAT i := 1 TO HIINDEX(pd_set) BY 1;
      pdr_set := pdr_set + bag_to_set(USEDIN(pd_set[i],'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION'));
    END_REPEAT;
    RETURN(pdr_set);

  END_FUNCTION; -- get_property_definition_representations

  FUNCTION get_role(
               obj: role_select
      ): object_role;

    LOCAL
      role_bag : BAG OF role_association := USEDIN(obj,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ROLE_ASSOCIATION.ITEM_WITH_ROLE');
    END_LOCAL;
    IF SIZEOF(role_bag) = 1 THEN
      RETURN(role_bag[1].role);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; -- get_role

  FUNCTION get_shape_aspects(
               c_def_instance: characterized_definition
      ): SET OF shape_aspect;

    LOCAL
      pdr_set : SET OF shape_aspect := [];
      pd_set  : SET OF product_definition_shape := [];
    END_LOCAL;
    pd_set := bag_to_set(QUERY ( pd <* USEDIN(c_def_instance,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PROPERTY_DEFINITION.DEFINITION')
         | ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_SHAPE' 
        IN TYPEOF(pd)) ));
    IF SIZEOF(pd_set) < 1 THEN
      RETURN(pdr_set);
    END_IF;
    REPEAT i := 1 TO HIINDEX(pd_set) BY 1;
      pdr_set := pdr_set + bag_to_set(USEDIN(pd_set[i],
          'AP239_PART_DEFINITION_INFORMATION_MIM_LF.SHAPE_ASPECT.OF_SHAPE'));
    END_REPEAT;
    RETURN(pdr_set);

  END_FUNCTION; -- get_shape_aspects

  FUNCTION initial_context_is_additional(
               pd: product_definition
      ): BOOLEAN;

    LOCAL
      initial_context      : product_definition_context;
      context_associations : SET OF product_definition_context_association;
    END_LOCAL;
    initial_context := pd.frame_of_reference;
    context_associations := QUERY ( pdca <* bag_to_set(USEDIN(pd,'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.DEFINITION'))
         | ((pdca.role.name = 'additional context') AND (pdca.
        frame_of_reference :=: initial_context)) );
    RETURN(SIZEOF(context_associations) > 0);

  END_FUNCTION; -- initial_context_is_additional

  FUNCTION item_in_context(
               item: representation_item;
               cntxt: representation_context
      ): BOOLEAN;

    LOCAL
      y : BAG OF representation_item;
    END_LOCAL;
    IF SIZEOF(USEDIN(item,
        'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPRESENTATION.ITEMS') * 
        cntxt.representations_in_context) > 0 THEN
      RETURN(TRUE);
    ELSE
      y := QUERY ( z <* USEDIN(item,'') | (
          'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPRESENTATION_ITEM' IN
           TYPEOF(z)) );
      IF SIZEOF(y) > 0 THEN
        REPEAT i := 1 TO HIINDEX(y) BY 1;
          IF item_in_context(y[i],cntxt) THEN
            RETURN(TRUE);
          END_IF;
        END_REPEAT;
      END_IF;
    END_IF;
    RETURN(FALSE);

  END_FUNCTION; -- item_in_context

  FUNCTION leap_year(
               year: year_number
      ): BOOLEAN;
    IF (((year MOD 4) = 0) AND ((year MOD 100) <> 0)) OR ((year MOD 400) =
         0) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;

  END_FUNCTION; -- leap_year

  FUNCTION local_relatives_of_product_definitions(
               definition_set: SET OF product_definition;
               total_definitions: SET OF product_definition;
               relation_subtype: STRING
      ): SET OF product_definition;

    LOCAL
      local_def   : SET OF product_definition := [];
      local_pdr   : SET OF product_definition_relationship := [];
      local_total : SET OF product_definition := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(definition_set) BY 1;
      local_pdr := local_pdr + bag_to_set(USEDIN(definition_set[i],
          relation_subtype + 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION'));
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX(local_pdr) BY 1;
      local_def := local_def + local_pdr[i].related_product_definition;
    END_REPEAT;
    IF (SIZEOF(local_def) - SIZEOF(total_definitions)) = 0 THEN
      RETURN(local_def);
    ELSE
      local_total := total_definitions + local_def;
      RETURN(local_def + local_relatives_of_product_definitions(local_def 
          - total_definitions,local_total,relation_subtype));
    END_IF;

  END_FUNCTION; -- local_relatives_of_product_definitions

  FUNCTION local_relatives_of_shape_representations(
               shape_representation_set: SET OF shape_representation;
               total_reps: SET OF shape_representation
      ): SET OF shape_representation;

    LOCAL
      local_shape_rep : SET OF shape_representation := [];
      local_srr       : SET OF shape_representation_relationship := [];
      local_total     : SET OF shape_representation := [];
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(shape_representation_set) BY 1;
      local_srr := local_srr + QUERY ( rr <* bag_to_set(USEDIN(
          shape_representation_set[i],'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPRESENTATION_RELATIONSHIP.REP_1'))
           | ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.SHAPE_REPRESENTATION_RELATIONSHIP' 
          IN TYPEOF(rr)) );
    END_REPEAT;
    REPEAT i := 1 TO HIINDEX(local_srr) BY 1;
      IF ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.' + 
          'SHAPE_REPRESENTATION_RELATIONSHIP') IN TYPEOF(local_srr[i])
           THEN
        local_shape_rep := local_shape_rep + local_srr[i].rep_2;
      END_IF;
    END_REPEAT;
    IF SIZEOF(local_shape_rep - total_reps) = 0 THEN
      RETURN(shape_representation_set);
    ELSE
      local_total := total_reps + local_shape_rep;
      RETURN(local_shape_rep + local_relatives_of_shape_representations(
          local_shape_rep - total_reps,local_total));
    END_IF;

  END_FUNCTION; -- local_relatives_of_shape_representations

  FUNCTION relatives_of_product_definitions(
               definition_set: SET OF product_definition;
               relation_subtype: STRING
      ): SET OF product_definition;
    RETURN(local_relatives_of_product_definitions(definition_set,
        definition_set,relation_subtype));

  END_FUNCTION; -- relatives_of_product_definitions

  FUNCTION relatives_of_shape_representations(
               shape_representation_set: SET OF shape_representation
      ): SET OF shape_representation;
    RETURN(local_relatives_of_shape_representations(
        shape_representation_set,shape_representation_set));

  END_FUNCTION; -- relatives_of_shape_representations

  FUNCTION type_check_function(
               the_type: GENERIC;
               sub_names: SET OF STRING;
               criterion: INTEGER
      ): LOGICAL;
    IF (NOT EXISTS(the_type)) OR (NOT ((0 <= criterion) AND (criterion <= 
        3))) OR (SIZEOF(sub_names) = 0) THEN
      RETURN(UNKNOWN);
    ELSE
      CASE criterion OF
        0  :           RETURN(SIZEOF(sub_names * TYPEOF(the_type)) > 0);
        1  :           RETURN(SIZEOF(sub_names * TYPEOF(the_type)) = 0);
        2  :           RETURN(SIZEOF(sub_names * TYPEOF(the_type)) = 1);
        3  :           RETURN(SIZEOF(sub_names * TYPEOF(the_type)) <= 1);
        END_CASE;
    END_IF;

  END_FUNCTION; -- type_check_function

  FUNCTION using_items(
               item: founded_item_select;
               checked_items: SET OF founded_item_select
      ): SET OF founded_item_select;

    LOCAL
      next_items      : SET OF founded_item_select;
      new_check_items : SET OF founded_item_select;
      result_items    : SET OF founded_item_select;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    next_items := QUERY ( z <* bag_to_set(USEDIN(item,'')) | ((
        'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPRESENTATION_ITEM' IN 
        TYPEOF(z)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM_LF.FOUNDED_ITEM' IN TYPEOF(z))) );
    IF SIZEOF(next_items) > 0 THEN
      REPEAT i := 1 TO HIINDEX(next_items) BY 1;
        IF NOT (next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] + using_items(
              next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(result_items);

  END_FUNCTION; -- using_items

  FUNCTION using_representations(
               item: founded_item_select
      ): SET OF representation;

    LOCAL
      results            : SET OF representation;
      intermediate_items : SET OF founded_item_select;
      result_bag         : BAG OF representation;
    END_LOCAL;
    results := [];
    result_bag := USEDIN(item,
        'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag) BY 1;
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    intermediate_items := using_items(item,[]);
    IF SIZEOF(intermediate_items) > 0 THEN
      REPEAT i := 1 TO HIINDEX(intermediate_items) BY 1;
        result_bag := USEDIN(intermediate_items[i],'AP239_PART_DEFINITION_INFORMATION_MIM_LF.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) > 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag) BY 1;
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(results);

  END_FUNCTION; -- using_representations

  FUNCTION valid_calendar_date(
               date: calendar_date
      ): LOGICAL;
    CASE date.month_component OF
      1 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      2 :         BEGIN
          IF leap_year(date.year_component) THEN
            RETURN((1 <= date.day_component) AND (date.day_component <= 29));
          ELSE
            RETURN((1 <= date.day_component) AND (date.day_component <= 28));
          END_IF;
        END;
      3 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      4 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 30));
      5 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      6 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 30));
      7 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      8 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      9 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 30));
      10  :         RETURN((1 <= date.day_component) AND (date.
            day_component <= 31));
      11  :         RETURN((1 <= date.day_component) AND (date.
            day_component <= 30));
      12  :         RETURN((1 <= date.day_component) AND (date.
            day_component <= 31));
      END_CASE;
    RETURN(FALSE);

  END_FUNCTION; -- valid_calendar_date

  FUNCTION valid_measure_value(
               m: measure_value
      ): BOOLEAN;
    IF 'REAL' IN TYPEOF(m) THEN
      RETURN(m > 0);
    ELSE
      IF 'INTEGER' IN TYPEOF(m) THEN
        RETURN(m > 0);
      ELSE
        RETURN(TRUE);
      END_IF;
    END_IF;

  END_FUNCTION; -- valid_measure_value

  FUNCTION valid_time(
               time: local_time
      ): BOOLEAN;
    IF EXISTS(time.second_component) THEN
      RETURN(EXISTS(time.minute_component));
    ELSE
      RETURN(TRUE);
    END_IF;

  END_FUNCTION; -- valid_time

  FUNCTION valid_units(
               m: measure_with_unit
      ): BOOLEAN;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.LENGTH_MEASURE' IN 
        TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(1,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.MASS_MEASURE' IN TYPEOF(m
        .value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,1,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.TIME_MEASURE' IN TYPEOF(m
        .value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,1,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.ELECTRIC_CURRENT_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,1,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,1,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.CELSIUS_TEMPERATURE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,1,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,1,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.LUMINOUS_INTENSITY_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,1) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.PLANE_ANGLE_MEASURE' IN 
        TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.SOLID_ANGLE_MEASURE' IN 
        TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.AREA_MEASURE' IN TYPEOF(m
        .value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(2,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.VOLUME_MEASURE' IN 
        TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(3,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.RATIO_MEASURE' IN TYPEOF(
        m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.POSITIVE_LENGTH_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(1,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    RETURN(TRUE);

  END_FUNCTION; -- valid_units

  FUNCTION value_range_wr1(
               agg: AGGREGATE OF representation_item
      ): BOOLEAN;
    IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY ( i1 <* agg | ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' 
        IN TYPEOF(i1)) )) = 2) OR (SIZEOF(QUERY ( i2 <* agg | ('AP239_PART_DEFINITION_INFORMATION_MIM_LF.VALUE_REPRESENTATION_ITEM' 
        IN TYPEOF(i2)) )) = 2)) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;

  END_FUNCTION; -- value_range_wr1

  FUNCTION value_range_wr2(
               agg: AGGREGATE OF representation_item
      ): BOOLEAN;
    IF (SIZEOF(QUERY ( i <* agg | (i.name = 'upper limit') )) = 1) AND (
        SIZEOF(QUERY ( i <* agg | (i.name = 'lower limit') )) = 1) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;

  END_FUNCTION; -- value_range_wr2

  FUNCTION value_range_wr3(
               agg: AGGREGATE OF representation_item
      ): BOOLEAN;
    IF SIZEOF(QUERY ( i1 <* agg | (('AP239_PART_DEFINITION_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' 
        IN TYPEOF(i1)) AND (SIZEOF(QUERY ( i2 <* agg | (('AP239_PART_DEFINITION_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' 
        IN TYPEOF(i2)) AND (i1 :<>: i2) AND (i1\measure_with_unit.
        unit_component :=: i2\measure_with_unit.unit_component)) )) = 1)) )) 
        = 2 THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;

  END_FUNCTION; -- value_range_wr3

  FUNCTION version_assignment_is_valid(
               aia: applied_identification_assignment
      ): BOOLEAN;

    LOCAL
      item : identification_item;
      role : identification_role;
    END_LOCAL;
    role := aia.role;
    IF role.name = 'version' THEN
      REPEAT i := LOINDEX(aia.items) TO HIINDEX(aia.items) BY 1;
        item := aia.items[i];
        IF SIZEOF(['AP239_PART_DEFINITION_INFORMATION_MIM_LF.' + 
            'VERSIONABLE_ITEM'] * TYPEOF(item)) = 0 THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
      RETURN(TRUE);
    ELSE
      RETURN(TRUE);
    END_IF;

  END_FUNCTION; -- version_assignment_is_valid

END_SCHEMA; -- ap239_part_definition_information_mim_lf
