(*
   $Id: mim_lf.exp,v 1.1 2002/12/04 07:29:06 robbod Exp $
   N - ISO/CD-TS - 10303- ap239_part_definition_information - EXPRESS MIM_LF
*)

SCHEMA ap239_part_definition_information_mim;

  TYPE action_items = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product_as_planned,
     product_as_realized,
     document_file,
     document_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- action_items

  TYPE ahead_or_behind = ENUMERATION OF
    (ahead,
     exact,
     behind);
  END_TYPE; -- ahead_or_behind

  TYPE aliasable_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product_as_planned,
     product_as_realized,
     approval_status,
     organization,
     security_classification,
     document_file,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- aliasable_item

  TYPE amount_of_substance_measure = REAL;
  END_TYPE; -- amount_of_substance_measure

  TYPE ap239_dm_approval_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_approval_item

  TYPE ap239_dm_attribute_classification_item = SELECT
    (descriptive_representation_item,
     document_relationship,
     document_type,
     document_usage_role,
     envelope,
     envelope_relationship,
     identification_role,
     information_right,
     information_usage_right,
     measure_representation_item,
     message_relationship,
     object_role,
     product_definition_relationship,
     representation,
     representation_item,
     structured_message,
     usage_association);
  END_TYPE; -- ap239_dm_attribute_classification_item

  TYPE ap239_dm_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     message_relationship,
     structured_message);
  END_TYPE; -- ap239_dm_attribute_language_item

  TYPE ap239_dm_classification_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     applied_usage_right,
     descriptive_representation_item,
     document_file,
     document_relationship,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     measure_representation_item,
     message_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_relationship,
     representation,
     structured_message,
     usage_association);
  END_TYPE; -- ap239_dm_classification_item

  TYPE ap239_dm_contract_item = SELECT
    (structured_message);
  END_TYPE; -- ap239_dm_contract_item

  TYPE ap239_dm_date_and_time_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_date_and_time_item

  TYPE ap239_dm_date_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_date_item

  TYPE ap239_dm_document_reference_item = SELECT
    (applied_identification_assignment,
     certification,
     contract,
     organization,
     person);
  END_TYPE; -- ap239_dm_document_reference_item

  TYPE ap239_dm_ir_usage_item = SELECT
    (document_file,
     document_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- ap239_dm_ir_usage_item

  TYPE ap239_dm_multi_language_attribute_item = SELECT
    (envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     message_relationship,
     structured_message);
  END_TYPE; -- ap239_dm_multi_language_attribute_item

  TYPE ap239_dm_organization_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_organization_item

  TYPE ap239_dm_person_and_organization_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_person_and_organization_item

  TYPE ap239_dm_security_classification_item = SELECT
    (applied_document_reference,
     applied_document_usage_constraint_assignment);
  END_TYPE; -- ap239_dm_security_classification_item

  TYPE ap239_dm_state_of_item = SELECT
    (product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_dm_state_of_item

  TYPE ap239_dm_state_type_of_item = SELECT
    (product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_dm_state_type_of_item

  TYPE ap239_mri_aliasable_item = SELECT
    (approval_status,
     organization,
     security_classification);
  END_TYPE; -- ap239_mri_aliasable_item

  TYPE ap239_mri_attribute_classification_item = SELECT
    (approval,
     approval_relationship,
     approval_role,
     approval_status,
     certification,
     certification_type,
     contract_type,
     date_role,
     date_time_role,
     group,
     identification_role,
     name_attribute,
     object_role,
     organization_relationship,
     organization_role,
     organizational_address,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization_address,
     person_and_organization_role,
     security_classification_level,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     property_definition_representation,
     representation,
     representation_context,
     representation_item);
  END_TYPE; -- ap239_mri_attribute_classification_item

  TYPE ap239_mri_classification_item = SELECT
    (address,
     applied_approval_assignment,
     applied_certification_assignment,
     applied_contract_assignment,
     applied_date_and_time_assignment,
     applied_date_assignment,
     applied_identification_assignment,
     applied_organization_assignment,
     applied_organizational_project_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     approval,
     approval_person_organization,
     approval_relationship,
     approval_status,
     calendar_date,
     certification,
     contract,
     date_and_time,
     language,
     multi_language_attribute_assignment,
     organization,
     organization_relationship,
     organizational_address,
     organizational_project,
     organizational_project_relationship,
     person_and_organization,
     person_and_organization_address,
     security_classification,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     property_definition_representation,
     representation,
     representation_context,
     representation_item);
  END_TYPE; -- ap239_mri_classification_item

  TYPE ap239_mri_date_and_time_item = SELECT
    (applied_identification_assignment);
  END_TYPE; -- ap239_mri_date_and_time_item

  TYPE ap239_mri_date_item = SELECT
    (applied_identification_assignment);
  END_TYPE; -- ap239_mri_date_item

  TYPE ap239_mri_identification_item = SELECT
    (approval_status,
     organization,
     security_classification);
  END_TYPE; -- ap239_mri_identification_item

  TYPE ap239_padi_aliasable_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_aliasable_item

  TYPE ap239_padi_approval_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     product_design_to_individual,
     product_planned_to_realized);
  END_TYPE; -- ap239_padi_approval_item

  TYPE ap239_padi_attribute_classification_item = SELECT
    (application_context,
     application_context_element,
     product_category,
     product_concept,
     product_concept_context,
     product_definition,
     product_definition_context,
     product_definition_formation_relationship,
     product_definition_relationship);
  END_TYPE; -- ap239_padi_attribute_classification_item

  TYPE ap239_padi_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     connector_on,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_attribute_language_item

  TYPE ap239_padi_certification_item = SELECT
    (interface_connection,
     product,
     product_as_planned,
     product_as_realized,
     product_definition_formation,
     product_definition_formation_relationship);
  END_TYPE; -- ap239_padi_certification_item

  TYPE ap239_padi_classification_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     interface_definition_for,
     product,
     product_as_planned,
     product_as_realized,
     product_category,
     product_concept,
     product_definition,
     product_definition_context,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     product_design_to_individual,
     product_planned_to_realized,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- ap239_padi_classification_item

  TYPE ap239_padi_contract_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organizational_project,
     product_as_planned,
     product_as_realized,
     product_definition_formation);
  END_TYPE; -- ap239_padi_contract_item

  TYPE ap239_padi_date_and_time_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_date_and_time_item

  TYPE ap239_padi_date_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_date_item

  TYPE ap239_padi_document_reference_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_design_to_individual,
     product_planned_to_realized);
  END_TYPE; -- ap239_padi_document_reference_item

  TYPE ap239_padi_identification_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_identification_item

  TYPE ap239_padi_ir_usage_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_ir_usage_item

  TYPE ap239_padi_multi_language_attribute_item = SELECT
    (connector_on,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_multi_language_attribute_item

  TYPE ap239_padi_organization_item = SELECT
    (applied_identification_assignment,
     interface_connector_as_planned,
     interface_connector_as_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_organization_item

  TYPE ap239_padi_person_and_organization_item = SELECT
    (applied_identification_assignment,
     interface_connector_as_planned,
     interface_connector_as_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_person_and_organization_item

  TYPE ap239_padi_project_item = SELECT
    (product_concept);
  END_TYPE; -- ap239_padi_project_item

  TYPE ap239_padi_requirement_assigned_item = SELECT
    (product,
     product_as_planned,
     product_as_realized,
     product_definition_formation);
  END_TYPE; -- ap239_padi_requirement_assigned_item

  TYPE ap239_padi_requirement_source_item = SELECT
    (product_definition_formation);
  END_TYPE; -- ap239_padi_requirement_source_item

  TYPE ap239_padi_security_classification_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation);
  END_TYPE; -- ap239_padi_security_classification_item

  TYPE ap239_padi_state_of_item = SELECT
    (certification,
     connector_on,
     contract,
     interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organization,
     organizational_project,
     person_and_organization,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     security_classification);
  END_TYPE; -- ap239_padi_state_of_item

  TYPE ap239_padi_state_type_of_item = SELECT
    (certification,
     connector_on,
     contract,
     interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organization,
     organizational_project,
     person_and_organization,
     product,
     product_as_planned,
     product_as_realized,
     product_category,
     product_definition,
     product_definition_formation,
     security_classification);
  END_TYPE; -- ap239_padi_state_type_of_item

  TYPE ap239_props_ap239_mri_attribute_classification_item = SELECT
    (approval,
     approval_relationship,
     approval_role,
     approval_status,
     certification,
     certification_type,
     contract_type,
     date_role,
     date_time_role,
     group,
     identification_role,
     name_attribute,
     object_role,
     organization_relationship,
     organization_role,
     organizational_address,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization_address,
     person_and_organization_role,
     security_classification_level,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     property_definition_representation,
     representation,
     representation_context,
     representation_item);
  END_TYPE; -- ap239_props_ap239_mri_attribute_classification_item

  TYPE ap239_props_ap239_mri_classification_item = SELECT
    (address,
     applied_approval_assignment,
     applied_certification_assignment,
     applied_contract_assignment,
     applied_date_and_time_assignment,
     applied_date_assignment,
     applied_identification_assignment,
     applied_organization_assignment,
     applied_organizational_project_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     approval,
     approval_person_organization,
     approval_relationship,
     approval_status,
     calendar_date,
     certification,
     contract,
     date_and_time,
     language,
     multi_language_attribute_assignment,
     organization,
     organization_relationship,
     organizational_address,
     organizational_project,
     organizational_project_relationship,
     person_and_organization,
     person_and_organization_address,
     security_classification,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     property_definition_representation,
     representation,
     representation_context,
     representation_item);
  END_TYPE; -- ap239_props_ap239_mri_classification_item

  TYPE ap239_props_mri_approval_item = SELECT
    (certification,
     contract,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     resource_property);
  END_TYPE; -- ap239_props_mri_approval_item

  TYPE ap239_props_mri_attribute_language_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     multi_language_attribute_assignment,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation_item,
     resource_property);
  END_TYPE; -- ap239_props_mri_attribute_language_item

  TYPE ap239_props_mri_date_and_time_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property);
  END_TYPE; -- ap239_props_mri_date_and_time_item

  TYPE ap239_props_mri_date_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property);
  END_TYPE; -- ap239_props_mri_date_item

  TYPE ap239_props_mri_identification_item = SELECT
    (contract,
     organization,
     security_classification_level,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     resource_property);
  END_TYPE; -- ap239_props_mri_identification_item

  TYPE ap239_props_mri_multi_language_attribute_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation_item,
     resource_property);
  END_TYPE; -- ap239_props_mri_multi_language_attribute_item

  TYPE ap239_props_mri_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property);
  END_TYPE; -- ap239_props_mri_organization_item

  TYPE ap239_props_mri_person_and_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property);
  END_TYPE; -- ap239_props_mri_person_and_organization_item

  TYPE approval_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     product_design_to_individual,
     product_planned_to_realized,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     certification,
     contract,
     envelope,
     structured_message);
  END_TYPE; -- approval_item

  TYPE area_measure = REAL;
  END_TYPE; -- area_measure

  TYPE associated_date = SELECT
    (condition,
     condition_relationship);
  END_TYPE; -- associated_date

  TYPE associated_date_time = SELECT
    (condition,
     condition_relationship);
  END_TYPE; -- associated_date_time

  TYPE associated_organization = SELECT
    (condition,
     condition_relationship);
  END_TYPE; -- associated_organization

  TYPE associated_person_organization = SELECT
    (condition,
     condition_relationship);
  END_TYPE; -- associated_person_organization

  TYPE attribute_classification_item = SELECT
    (application_context,
     application_context_element,
     product_category,
     product_concept,
     product_concept_context,
     product_definition,
     product_definition_context,
     product_definition_formation_relationship,
     descriptive_representation_item,
     document_relationship,
     document_type,
     document_usage_role,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     measure_representation_item,
     message_relationship,
     product_definition_relationship,
     representation,
     representation_item,
     structured_message,
     usage_association,
     approval,
     approval_relationship,
     approval_role,
     approval_status,
     certification,
     certification_type,
     contract_type,
     date_role,
     date_time_role,
     group,
     identification_role,
     name_attribute,
     object_role,
     organization_relationship,
     organization_role,
     organizational_address,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization_address,
     person_and_organization_role,
     security_classification_level);
  END_TYPE; -- attribute_classification_item

  TYPE attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     connector_on,
     product,
     product_definition,
     product_definition_formation,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     message_relationship,
     structured_message,
     approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization);
  END_TYPE; -- attribute_language_item

  TYPE attribute_type = SELECT
    (label,
     text);
  END_TYPE; -- attribute_type

  TYPE celsius_temperature_measure = REAL;
  END_TYPE; -- celsius_temperature_measure

  TYPE certification_item = SELECT
    (interface_connection,
     product,
     product_as_planned,
     product_as_realized,
     product_definition_formation,
     product_definition_formation_relationship);
  END_TYPE; -- certification_item

  TYPE characterized_action_definition = SELECT
    (action,
     action_method,
     action_method_relationship,
     action_relationship);
  END_TYPE; -- characterized_action_definition

  TYPE characterized_definition = SELECT
    (characterized_object,
     characterized_product_definition,
     shape_definition);
  END_TYPE; -- characterized_definition

  TYPE characterized_product_definition = SELECT
    (product_definition,
     product_definition_relationship);
  END_TYPE; -- characterized_product_definition

  TYPE characterized_resource_definition = SELECT
    (action_resource,
     action_resource_relationship);
  END_TYPE; -- characterized_resource_definition

  TYPE classification_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     interface_definition_for,
     product_as_planned,
     product_as_realized,
     product_category,
     product_concept,
     product_definition_context,
     product_definition_formation_relationship,
     product_design_to_individual,
     product_planned_to_realized,
     requirement_assignment,
     requirement_source,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     applied_usage_right,
     descriptive_representation_item,
     document_file,
     document_relationship,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     measure_representation_item,
     message_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_relationship,
     representation,
     structured_message,
     usage_association,
     address,
     applied_approval_assignment,
     applied_certification_assignment,
     applied_contract_assignment,
     applied_date_and_time_assignment,
     applied_date_assignment,
     applied_identification_assignment,
     applied_organization_assignment,
     applied_organizational_project_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     approval,
     approval_person_organization,
     approval_relationship,
     approval_status,
     calendar_date,
     certification,
     contract,
     date_and_time,
     language,
     multi_language_attribute_assignment,
     organization,
     organization_relationship,
     organizational_address,
     organizational_project,
     organizational_project_relationship,
     person_and_organization,
     person_and_organization_address,
     security_classification,
     applied_state_type_assignment,
     state_type,
     state_type_relationship,
     applied_state_assignment,
     state_observed,
     state_observed_relationship);
  END_TYPE; -- classification_item

  TYPE compound_item_definition = SELECT
    (list_representation_item);
  END_TYPE; -- compound_item_definition

  TYPE condition_item = SELECT
    (state_type,
     state_type_relationship);
  END_TYPE; -- condition_item

  TYPE contents_item = SELECT
    (representation);
  END_TYPE; -- contents_item

  TYPE context_dependent_measure = REAL;
  END_TYPE; -- context_dependent_measure

  TYPE contract_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organizational_project,
     product_as_planned,
     product_as_realized,
     structured_message,
     information_usage_right,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- contract_item

  TYPE count_measure = NUMBER;
  END_TYPE; -- count_measure

  TYPE date_and_time_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_identification_assignment,
     approval_person_organization,
     applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     envelope,
     structured_message,
     organizational_project,
     condition,
     condition_relationship,
     event_occurrence);
  END_TYPE; -- date_and_time_item

  TYPE date_and_time_item_approval = SELECT
    (approval_person_organization);
  END_TYPE; -- date_and_time_item_approval

  TYPE date_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_identification_assignment,
     approval_person_organization,
     applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     envelope,
     structured_message,
     organizational_project,
     condition,
     condition_relationship,
     event_occurrence);
  END_TYPE; -- date_item

  TYPE date_item_approval = SELECT
    (approval_person_organization);
  END_TYPE; -- date_item_approval

  TYPE date_time_or_event_occurrence = SELECT
    (date_time_select,
     event_occurrence);
  END_TYPE; -- date_time_or_event_occurrence

  TYPE date_time_select = SELECT
    (date,
     local_time,
     date_and_time);
  END_TYPE; -- date_time_select

  TYPE day_in_month_number = INTEGER;
  WHERE
    wr1: ((1 <= SELF) AND (SELF <= 31));
  END_TYPE; -- day_in_month_number

  TYPE derived_property_select = SELECT
    (property_definition,
     action_property,
     resource_property);
  END_TYPE; -- derived_property_select

  TYPE description_attribute_select = SELECT
    (action_request_solution,
     application_context,
     approval_role,
     date_role,
     date_time_role,
     external_source,
     organization_role,
     person_and_organization_role,
     person_and_organization,
     property_definition_representation,
     representation);
  END_TYPE; -- description_attribute_select

  TYPE descriptive_measure = STRING;
  END_TYPE; -- descriptive_measure

  TYPE dm_aliasable_item = SELECT
    (document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_aliasable_item

  TYPE dm_approval_item = SELECT
    (certification,
     contract,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_approval_item

  TYPE dm_attribute_language_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     multi_language_attribute_assignment,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     document_relationship,
     document_usage_role,
     external_source,
     object_role,
     product,
     product_category,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_attribute_language_item

  TYPE dm_contract_item = SELECT
    (product_definition_formation);
  END_TYPE; -- dm_contract_item

  TYPE dm_date_and_time_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     document_file,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_date_and_time_item

  TYPE dm_date_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     document_file,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_date_item

  TYPE dm_identification_item = SELECT
    (contract,
     organization,
     security_classification_level,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_identification_item

  TYPE dm_multi_language_attribute_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     document_relationship,
     document_usage_role,
     external_source,
     object_role,
     product,
     product_category,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- dm_multi_language_attribute_item

  TYPE dm_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_organization_item

  TYPE dm_person_and_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_person_and_organization_item

  TYPE dm_security_classification_item = SELECT
    (document_file,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- dm_security_classification_item

  TYPE document_location_select = SELECT
    (product_definition);
  END_TYPE; -- document_location_select

  TYPE document_reference_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     interface_connector_design_to_planned,
     interface_connector_design_to_realized,
     interface_connector_planned_to_realized,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_design_to_individual,
     product_planned_to_realized,
     applied_identification_assignment,
     certification,
     contract,
     organization,
     person);
  END_TYPE; -- document_reference_item

  TYPE electric_current_measure = REAL;
  END_TYPE; -- electric_current_measure

  TYPE envelope_approval = SELECT
    (envelope);
  END_TYPE; -- envelope_approval

  TYPE envelope_date = SELECT
    (envelope);
  END_TYPE; -- envelope_date

  TYPE envelope_date_and_time = SELECT
    (envelope);
  END_TYPE; -- envelope_date_and_time

  TYPE envelope_organization_item = SELECT
    (envelope);
  END_TYPE; -- envelope_organization_item

  TYPE envelope_person_organization_item = SELECT
    (envelope);
  END_TYPE; -- envelope_person_organization_item

  TYPE event_occurrence_date_and_time_item = SELECT
    (event_occurrence);
  END_TYPE; -- event_occurrence_date_and_time_item

  TYPE event_occurrence_date_item = SELECT
    (event_occurrence);
  END_TYPE; -- event_occurrence_date_item

  TYPE external_class_name_item = SELECT
    (external_class_library);
  END_TYPE; -- external_class_name_item

  TYPE external_identification_item = SELECT
    (product_definition,
     document_file);
  END_TYPE; -- external_identification_item

  TYPE file_identification_item = SELECT
    (document_file);
  END_TYPE; -- file_identification_item

  TYPE file_location_select = SELECT
    (document_file);
  END_TYPE; -- file_location_select

  TYPE file_version_item = SELECT
    (document_file);
  END_TYPE; -- file_version_item

  TYPE founded_item_select = SELECT
    (representation_item);
  END_TYPE; -- founded_item_select

  TYPE groupable_item = SELECT
    (representation);
  WHERE
    wr1: (NOT ('AP239_PART_DEFINITION_INFORMATION_MIM.GROUP' IN TYPEOF(
             SELF)));
  END_TYPE; -- groupable_item

  TYPE hour_in_day = INTEGER;
  WHERE
    wr1: ((0 <= SELF) AND (SELF < 24));
  END_TYPE; -- hour_in_day

  TYPE id_attribute_select = SELECT
    (action,
     address,
     product_category,
     property_definition,
     shape_aspect,
     shape_aspect_relationship,
     application_context,
     group,
     organizational_project,
     representation);
  END_TYPE; -- id_attribute_select

  TYPE identification = SELECT
    (condition);
  END_TYPE; -- identification

  TYPE identification_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     approval_status,
     security_classification,
     contract,
     organization,
     security_classification_level,
     document_file,
     state_type,
     state_type_relationship,
     product_as_individual,
     condition);
  END_TYPE; -- identification_item

  TYPE identifier = STRING;
  END_TYPE; -- identifier

  TYPE ir_approval_item = SELECT
    (certification,
     contract,
     applied_usage_right,
     information_usage_right);
  END_TYPE; -- ir_approval_item

  TYPE ir_contract_item = SELECT
    (information_usage_right);
  END_TYPE; -- ir_contract_item

  TYPE ir_date_and_time_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     information_usage_right);
  END_TYPE; -- ir_date_and_time_item

  TYPE ir_date_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     information_usage_right);
  END_TYPE; -- ir_date_item

  TYPE ir_identification_item = SELECT
    (contract,
     organization,
     security_classification_level,
     information_right,
     information_usage_right);
  END_TYPE; -- ir_identification_item

  TYPE ir_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     information_usage_right);
  END_TYPE; -- ir_organization_item

  TYPE ir_person_and_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     information_usage_right);
  END_TYPE; -- ir_person_and_organization_item

  TYPE ir_usage_item = SELECT
    (interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product_as_planned,
     product_as_realized,
     document_file,
     document_relationship,
     product,
     product_definition,
     product_definition_formation,
     product_definition_relationship);
  END_TYPE; -- ir_usage_item

  TYPE label = STRING;
  END_TYPE; -- label

  TYPE length_measure = REAL;
  END_TYPE; -- length_measure

  TYPE list_representation_item = LIST [1:?] OF representation_item;
  END_TYPE; -- list_representation_item

  TYPE luminous_intensity_measure = REAL;
  END_TYPE; -- luminous_intensity_measure

  TYPE mass_measure = REAL;
  END_TYPE; -- mass_measure

  TYPE measure_value = SELECT
    (length_measure,
     mass_measure,
     time_measure,
     electric_current_measure,
     thermodynamic_temperature_measure,
     celsius_temperature_measure,
     amount_of_substance_measure,
     luminous_intensity_measure,
     plane_angle_measure,
     solid_angle_measure,
     area_measure,
     volume_measure,
     ratio_measure,
     parameter_value,
     numeric_measure,
     context_dependent_measure,
     descriptive_measure,
     positive_length_measure,
     positive_plane_angle_measure,
     positive_ratio_measure,
     count_measure);
  END_TYPE; -- measure_value

  TYPE message_approval = SELECT
    (structured_message);
  END_TYPE; -- message_approval

  TYPE message_date = SELECT
    (structured_message);
  END_TYPE; -- message_date

  TYPE message_date_time = SELECT
    (structured_message);
  END_TYPE; -- message_date_time

  TYPE message_having_contents = SELECT
    (structured_message);
  END_TYPE; -- message_having_contents

  TYPE message_organization = SELECT
    (structured_message);
  END_TYPE; -- message_organization

  TYPE message_person_and_organization = SELECT
    (structured_message);
  END_TYPE; -- message_person_and_organization

  TYPE message_security_classification = SELECT
    (structured_message);
  END_TYPE; -- message_security_classification

  TYPE message_state = SELECT
    (structured_message);
  END_TYPE; -- message_state

  TYPE minute_in_hour = INTEGER;
  WHERE
    wr1: ((0 <= SELF) AND (SELF <= 59));
  END_TYPE; -- minute_in_hour

  TYPE month_in_year_number = INTEGER;
  WHERE
    wr1: ((1 <= SELF) AND (SELF <= 12));
  END_TYPE; -- month_in_year_number

  TYPE mri_approval_item = SELECT
    (certification,
     contract,
     applied_usage_right,
     information_usage_right,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_approval_item

  TYPE mri_attribute_language_item = SELECT
    (multi_language_attribute_assignment,
     approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     document_relationship,
     document_usage_role,
     external_source,
     object_role,
     product_category,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation_item,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_attribute_language_item

  TYPE mri_date_and_time_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     document_file,
     information_usage_right,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_date_and_time_item

  TYPE mri_date_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     document_file,
     information_usage_right,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_date_item

  TYPE mri_identification_item = SELECT
    (contract,
     organization,
     security_classification_level,
     document_file,
     information_right,
     information_usage_right,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_identification_item

  TYPE mri_multi_language_attribute_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_external_identification_assignment,
     document_relationship,
     document_usage_role,
     external_source,
     object_role,
     product_category,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation_item,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_multi_language_attribute_item

  TYPE mri_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     document_file,
     information_usage_right,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_organization_item

  TYPE mri_person_and_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     document_file,
     information_usage_right,
     action_property,
     general_property,
     general_property_relationship,
     property_definition,
     property_definition_relationship,
     representation,
     resource_property,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- mri_person_and_organization_item

  TYPE multi_language_attribute_item = SELECT
    (connector_on,
     product,
     product_definition,
     product_definition_formation,
     envelope,
     envelope_relationship,
     information_right,
     information_usage_right,
     message_relationship,
     structured_message,
     approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization);
  END_TYPE; -- multi_language_attribute_item

  TYPE name_attribute_select = SELECT
    (action_request_solution,
     address,
     derived_unit,
     person_and_organization,
     product_definition,
     property_definition_representation);
  END_TYPE; -- name_attribute_select

  TYPE name_item = SELECT
    (external_class_library);
  END_TYPE; -- name_item

  TYPE numeric_measure = NUMBER;
  END_TYPE; -- numeric_measure

  TYPE organization_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     envelope,
     structured_message,
     condition,
     condition_relationship);
  END_TYPE; -- organization_item

  TYPE parameter_value = REAL;
  END_TYPE; -- parameter_value

  TYPE person_and_organization_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     product,
     product_as_planned,
     product_as_realized,
     product_definition,
     product_definition_formation,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     envelope,
     structured_message,
     condition,
     condition_relationship);
  END_TYPE; -- person_and_organization_item

  TYPE person_organization_select = SELECT
    (person,
     organization,
     person_and_organization);
  END_TYPE; -- person_organization_select

  TYPE plane_angle_measure = REAL;
  END_TYPE; -- plane_angle_measure

  TYPE positive_length_measure = length_measure;
  WHERE
    wr1: (SELF > 0);
  END_TYPE; -- positive_length_measure

  TYPE positive_plane_angle_measure = plane_angle_measure;
  WHERE
    wr1: (SELF > 0);
  END_TYPE; -- positive_plane_angle_measure

  TYPE positive_ratio_measure = ratio_measure;
  WHERE
    wr1: (SELF > 0);
  END_TYPE; -- positive_ratio_measure

  TYPE product_as_individual_identification_item = SELECT
    (product_as_individual);
  END_TYPE; -- product_as_individual_identification_item

  TYPE product_or_formation_or_definition = SELECT
    (product,
     product_definition_formation,
     product_definition);
  END_TYPE; -- product_or_formation_or_definition

  TYPE project_as_date_and_time_item = SELECT
    (organizational_project);
  END_TYPE; -- project_as_date_and_time_item

  TYPE project_as_date_item = SELECT
    (organizational_project);
  END_TYPE; -- project_as_date_item

  TYPE project_item = SELECT
    (product_concept);
  END_TYPE; -- project_item

  TYPE ratio_measure = REAL;
  END_TYPE; -- ratio_measure

  TYPE represented_definition = SELECT
    (general_property,
     property_definition,
     property_definition_relationship,
     shape_aspect,
     shape_aspect_relationship);
  END_TYPE; -- represented_definition

  TYPE requirement_assigned_item = SELECT
    (product,
     product_as_planned,
     product_as_realized,
     product_definition_formation);
  END_TYPE; -- requirement_assigned_item

  TYPE requirement_identification_and_version_aliasable_item = SELECT
    (product,
     product_definition_formation);
  END_TYPE; -- requirement_identification_and_version_aliasable_item

  TYPE requirement_identification_and_version_mri_identification_item =
              SELECT
    (contract,
     organization,
     security_classification_level,
     product,
     product_definition_formation);
  END_TYPE; -- requirement_identification_and_version_mri_identification_item

  TYPE requirement_source_item = SELECT
    (product_definition_formation);
  END_TYPE; -- requirement_source_item

  TYPE rm_aliasable_item = SELECT
    (product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_aliasable_item

  TYPE rm_contract_item = SELECT
    (product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_contract_item

  TYPE rm_mri_approval_item = SELECT
    (certification,
     contract,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_approval_item

  TYPE rm_mri_attribute_language_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     multi_language_attribute_assignment,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_attribute_language_item

  TYPE rm_mri_date_and_time_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_date_and_time_item

  TYPE rm_mri_date_item = SELECT
    (applied_organization_assignment,
     applied_person_and_organization_assignment,
     applied_security_classification_assignment,
     certification,
     contract,
     security_classification,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_date_item

  TYPE rm_mri_identification_item = SELECT
    (contract,
     organization,
     security_classification_level,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_identification_item

  TYPE rm_mri_multi_language_attribute_item = SELECT
    (approval,
     approval_relationship,
     approval_status,
     certification,
     certification_type,
     contract,
     date_role,
     date_time_role,
     identification_role,
     organization_relationship,
     organizational_project,
     organizational_project_relationship,
     organizational_project_role,
     person_and_organization,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_multi_language_attribute_item

  TYPE rm_mri_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_organization_item

  TYPE rm_mri_person_and_organization_item = SELECT
    (applied_identification_assignment,
     applied_security_classification_assignment,
     contract,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_mri_person_and_organization_item

  TYPE rm_security_classification_item = SELECT
    (product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- rm_security_classification_item

  TYPE role_select = SELECT
    (action_assignment,
     approval_assignment,
     approval_date_time,
     certification_assignment,
     contract_assignment,
     document_reference,
     group_assignment,
     name_assignment,
     security_classification_assignment);
  END_TYPE; -- role_select

  TYPE second_in_minute = REAL;
  WHERE
    wr1: ((0 <= SELF) AND (SELF <= 60));
  END_TYPE; -- second_in_minute

  TYPE security_classification_item = SELECT
    (interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     product_as_planned,
     product_as_realized,
     applied_document_reference,
     applied_document_usage_constraint_assignment,
     document_file,
     structured_message,
     product,
     product_definition,
     product_definition_formation,
     product_definition_formation_relationship,
     product_definition_relationship,
     requirement_assignment,
     requirement_source);
  END_TYPE; -- security_classification_item

  TYPE shape_definition = SELECT
    (product_definition_shape,
     shape_aspect,
     shape_aspect_relationship);
  END_TYPE; -- shape_definition

  TYPE si_prefix = ENUMERATION OF
    (exa,
     peta,
     tera,
     giga,
     mega,
     kilo,
     hecto,
     deca,
     deci,
     centi,
     milli,
     micro,
     nano,
     pico,
     femto,
     atto);
  END_TYPE; -- si_prefix

  TYPE si_unit_name = ENUMERATION OF
    (metre,
     gram,
     second,
     ampere,
     kelvin,
     mole,
     candela,
     radian,
     steradian,
     hertz,
     newton,
     pascal,
     joule,
     watt,
     coulomb,
     volt,
     farad,
     ohm,
     siemens,
     weber,
     tesla,
     henry,
     degree_celsius,
     lumen,
     lux,
     becquerel,
     gray,
     sievert);
  END_TYPE; -- si_unit_name

  TYPE solid_angle_measure = REAL;
  END_TYPE; -- solid_angle_measure

  TYPE source_item = SELECT
    (identifier);
  END_TYPE; -- source_item

  TYPE state_definition_classification_item = SELECT
    (applied_state_type_assignment,
     state_type,
     state_type_relationship);
  END_TYPE; -- state_definition_classification_item

  TYPE state_definition_condition_item = SELECT
    (state_type,
     state_type_relationship);
  END_TYPE; -- state_definition_condition_item

  TYPE state_definition_identification_item = SELECT
    (state_type,
     state_type_relationship);
  END_TYPE; -- state_definition_identification_item

  TYPE state_observed_classification_item = SELECT
    (applied_state_assignment,
     state_observed,
     state_observed_relationship);
  END_TYPE; -- state_observed_classification_item

  TYPE state_of_item = SELECT
    (certification,
     connector_on,
     contract,
     interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organization,
     organizational_project,
     person_and_organization,
     product_as_planned,
     product_as_realized,
     security_classification,
     product,
     product_definition,
     product_definition_formation,
     structured_message);
  END_TYPE; -- state_of_item

  TYPE state_type_of_item = SELECT
    (certification,
     connector_on,
     contract,
     interface_connection,
     interface_connector_as_planned,
     interface_connector_as_realized,
     interface_connector_design,
     organization,
     organizational_project,
     person_and_organization,
     product_as_planned,
     product_as_realized,
     product_category,
     security_classification,
     product,
     product_definition,
     product_definition_formation);
  END_TYPE; -- state_type_of_item

  TYPE supported_item = SELECT
    (action_directive,
     action,
     action_method);
  END_TYPE; -- supported_item

  TYPE text = STRING;
  END_TYPE; -- text

  TYPE thermodynamic_temperature_measure = REAL;
  END_TYPE; -- thermodynamic_temperature_measure

  TYPE time_measure = REAL;
  END_TYPE; -- time_measure

  TYPE unit = SELECT
    (named_unit,
     derived_unit);
  END_TYPE; -- unit

  TYPE value_qualifier = SELECT
    (precision_qualifier,
     type_qualifier);
  END_TYPE; -- value_qualifier

  TYPE versionable_item = SELECT
    (document_file);
  END_TYPE; -- versionable_item

  TYPE volume_measure = REAL;
  END_TYPE; -- volume_measure

  TYPE year_number = INTEGER;
  END_TYPE; -- year_number

  ENTITY action;
      name          : label;
      description   : OPTIONAL text;
      chosen_method : action_method;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- action

  ENTITY action_assignment
    ABSTRACT SUPERTYPE;
      assigned_action : action;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- action_assignment

  ENTITY action_directive;
      name        : label;
      description : OPTIONAL text;
      analysis    : text;
      comment     : text;
      requests    : SET [1:?] OF versioned_action_request;
  END_ENTITY; -- action_directive

  ENTITY action_method;
      name        : label;
      description : OPTIONAL text;
      consequence : text;
      purpose     : text;
  END_ENTITY; -- action_method

  ENTITY action_method_relationship;
      name            : label;
      description     : OPTIONAL text;
      relating_method : action_method;
      related_method  : action_method;
  END_ENTITY; -- action_method_relationship

  ENTITY action_property;
      name        : label;
      description : text;
      definition  : characterized_action_definition;
  END_ENTITY; -- action_property

  ENTITY action_property_representation;
      name           : label;
      description    : text;
      property       : action_property;
      representation : representation;
  END_ENTITY; -- action_property_representation

  ENTITY action_relationship;
      name            : label;
      description     : OPTIONAL text;
      relating_action : action;
      related_action  : action;
  END_ENTITY; -- action_relationship

  ENTITY action_request_solution;
      method  : action_method;
      request : versioned_action_request;
    DERIVE
      description : text := get_description_value(SELF);
      name        : label := get_name_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1);
  END_ENTITY; -- action_request_solution

  ENTITY action_request_status;
      status           : label;
      assigned_request : versioned_action_request;
  END_ENTITY; -- action_request_status

  ENTITY action_resource;
      name        : label;
      description : OPTIONAL text;
      usage       : SET [1:?] OF supported_item;
      kind        : action_resource_type;
  END_ENTITY; -- action_resource

  ENTITY action_resource_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_resource : action_resource;
      related_resource  : action_resource;
  END_ENTITY; -- action_resource_relationship

  ENTITY action_resource_type;
      name : label;
  END_ENTITY; -- action_resource_type

  ENTITY action_status;
      status          : label;
      assigned_action : executed_action;
  END_ENTITY; -- action_status

  ENTITY address;
      internal_location       : OPTIONAL label;
      street_number           : OPTIONAL label;
      street                  : OPTIONAL label;
      postal_box              : OPTIONAL label;
      town                    : OPTIONAL label;
      region                  : OPTIONAL label;
      postal_code             : OPTIONAL label;
      country                 : OPTIONAL label;
      facsimile_number        : OPTIONAL label;
      telephone_number        : OPTIONAL label;
      electronic_mail_address : OPTIONAL label;
      telex_number            : OPTIONAL label;
    DERIVE
      name : label := get_name_value(SELF);
      url  : identifier := get_id_value(SELF);
    WHERE
      wr1: (EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(
               street) OR EXISTS(postal_box) OR EXISTS(town) OR EXISTS(
               region) OR EXISTS(postal_code) OR EXISTS(country) OR EXISTS(
               facsimile_number) OR EXISTS(telephone_number) OR EXISTS(
               electronic_mail_address) OR EXISTS(telex_number));
  END_ENTITY; -- address

  ENTITY amount_of_substance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.AMOUNT_OF_SUBSTANCE_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- amount_of_substance_measure_with_unit

  ENTITY amount_of_substance_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 1) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- amount_of_substance_unit

  ENTITY and_expression
    SUBTYPE OF (multiple_arity_boolean_expression);
  END_ENTITY; -- and_expression

  ENTITY application_context;
      application : label;
    DERIVE
      description : text := get_description_value(SELF);
      id          : identifier := get_id_value(SELF);
    INVERSE
      context_elements : SET [1:?] OF application_context_element FOR 
                            frame_of_reference;
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- application_context

  ENTITY application_context_element
    SUPERTYPE OF (ONEOF (product_concept_context,product_context,
        product_definition_context));
      name               : label;
      frame_of_reference : application_context;
  END_ENTITY; -- application_context_element

  ENTITY applied_action_assignment
    SUBTYPE OF (action_assignment);
      items : SET [1:?] OF action_items;
  END_ENTITY; -- applied_action_assignment

  ENTITY applied_approval_assignment
    SUBTYPE OF (approval_assignment);
      items : SET [1:?] OF approval_item;
  END_ENTITY; -- applied_approval_assignment

  ENTITY applied_attribute_classification_assignment
    SUBTYPE OF (attribute_classification_assignment);
      SELF\attribute_classification_assignment.assigned_class : class;
      items                                                   : SET [1:?]
                                                                    OF attribute_classification_item;
  END_ENTITY; -- applied_attribute_classification_assignment

  ENTITY applied_certification_assignment
    SUBTYPE OF (certification_assignment);
      items : SET [1:?] OF certification_item;
  END_ENTITY; -- applied_certification_assignment

  ENTITY applied_classification_assignment
    SUBTYPE OF (classification_assignment);
      items : SET [1:?] OF classification_item;
  END_ENTITY; -- applied_classification_assignment

  ENTITY applied_connector_on_product_definition
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : connector_on;
      SELF\applied_group_assignment.items  : SET [1:1] OF
                                                 product_definition;
  END_ENTITY; -- applied_connector_on_product_definition

  ENTITY applied_connector_on_product_definition_relationship
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : connector_on;
      SELF\applied_group_assignment.items  : SET [1:1] OF product_definition_relationship;
  END_ENTITY; -- applied_connector_on_product_definition_relationship

  ENTITY applied_contract_assignment
    SUBTYPE OF (contract_assignment);
      items : SET [1:?] OF contract_item;
  END_ENTITY; -- applied_contract_assignment

  ENTITY applied_date_and_time_assignment
    SUBTYPE OF (date_and_time_assignment);
      items : SET [1:?] OF date_and_time_item;
  END_ENTITY; -- applied_date_and_time_assignment

  ENTITY applied_date_assignment
    SUBTYPE OF (date_assignment);
      items : SET [1:?] OF date_item;
  END_ENTITY; -- applied_date_assignment

  ENTITY applied_document_reference
    SUBTYPE OF (document_reference);
      items : SET [1:?] OF document_reference_item;
  END_ENTITY; -- applied_document_reference

  ENTITY applied_document_usage_constraint_assignment
    SUBTYPE OF (document_usage_constraint_assignment);
      items : SET [1:?] OF document_reference_item;
  END_ENTITY; -- applied_document_usage_constraint_assignment

  ENTITY applied_external_identification_assignment
    SUBTYPE OF (external_identification_assignment);
      items : SET [1:?] OF external_identification_item;
  END_ENTITY; -- applied_external_identification_assignment

  ENTITY applied_group_assignment
    SUBTYPE OF (group_assignment);
      items : SET [1:?] OF groupable_item;
  END_ENTITY; -- applied_group_assignment

  ENTITY applied_identification_assignment
    SUBTYPE OF (identification_assignment);
      items : SET [1:?] OF identification_item;
  END_ENTITY; -- applied_identification_assignment

  ENTITY applied_name_assignment
    SUBTYPE OF (name_assignment);
      item : name_item;
  END_ENTITY; -- applied_name_assignment

  ENTITY applied_organization_assignment
    SUBTYPE OF (organization_assignment);
      items : SET [1:?] OF organization_item;
  END_ENTITY; -- applied_organization_assignment

  ENTITY applied_organizational_project_assignment
    SUBTYPE OF (organizational_project_assignment);
      items : SET [1:?] OF project_item;
  END_ENTITY; -- applied_organizational_project_assignment

  ENTITY applied_person_and_organization_assignment
    SUBTYPE OF (person_and_organization_assignment);
      items : SET [1:?] OF person_and_organization_item;
  END_ENTITY; -- applied_person_and_organization_assignment

  ENTITY applied_security_classification_assignment
    SUBTYPE OF (security_classification_assignment);
      items : SET [1:?] OF security_classification_item;
  END_ENTITY; -- applied_security_classification_assignment

  ENTITY applied_state_assignment;
      described_state : state_observed;
      assigned_to     : state_of_item;
      role            : state_role;
  END_ENTITY; -- applied_state_assignment

  ENTITY applied_state_type_assignment;
      described_state_type : state_type;
      assigned_to          : state_type_of_item;
      role                 : state_type_role;
  END_ENTITY; -- applied_state_type_assignment

  ENTITY applied_usage_right
    SUBTYPE OF (applied_action_assignment);
      SELF\applied_action_assignment.items : SET [1:?] OF ir_usage_item;
  END_ENTITY; -- applied_usage_right

  ENTITY approval;
      status : approval_status;
      level  : label;
  END_ENTITY; -- approval

  ENTITY approval_assignment
    ABSTRACT SUPERTYPE;
      assigned_approval : approval;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- approval_assignment

  ENTITY approval_date_time;
      date_time      : date_time_select;
      dated_approval : approval;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- approval_date_time

  ENTITY approval_person_organization;
      person_organization : person_organization_select;
      authorized_approval : approval;
      role                : approval_role;
  END_ENTITY; -- approval_person_organization

  ENTITY approval_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_approval : approval;
      related_approval  : approval;
  END_ENTITY; -- approval_relationship

  ENTITY approval_role;
      role : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- approval_role

  ENTITY approval_status;
      name : label;
  END_ENTITY; -- approval_status

  ENTITY area_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.AREA_UNIT' IN TYPEOF(
               SELF\measure_with_unit.unit_component));
  END_ENTITY; -- area_measure_with_unit

  ENTITY area_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 2) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- area_unit

  ENTITY assigned_requirement
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_assignment;
      items                                : SET [1:1] OF
                                                 product_definition;
  END_ENTITY; -- assigned_requirement

  ENTITY attribute_classification_assignment
    ABSTRACT SUPERTYPE;
      assigned_class : group;
      attribute_name : label;
      role           : classification_role;
  END_ENTITY; -- attribute_classification_assignment

  ENTITY attribute_language_assignment
    SUBTYPE OF (attribute_classification_assignment);
      SELF\attribute_classification_assignment.assigned_class : language;
      items                                                   : SET [1:?]
                                                                    OF attribute_language_item;
    WHERE
      wr1: (SELF\attribute_classification_assignment.role.name IN [
               'primary','translated']);
      wr2: (SELF\attribute_classification_assignment.attribute_name <> '');
  END_ENTITY; -- attribute_language_assignment

  ENTITY attribute_value_assignment
    ABSTRACT SUPERTYPE;
      attribute_name  : label;
      attribute_value : attribute_type;
      role            : attribute_value_role;
  END_ENTITY; -- attribute_value_assignment

  ENTITY attribute_value_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- attribute_value_role

  ENTITY binary_boolean_expression
    ABSTRACT SUPERTYPE OF (ONEOF (xor_expression,equals_expression))
    SUBTYPE OF (boolean_expression, binary_generic_expression);
  END_ENTITY; -- binary_boolean_expression

  ENTITY binary_function_call
    ABSTRACT SUPERTYPE
    SUBTYPE OF (binary_numeric_expression);
  END_ENTITY; -- binary_function_call

  ENTITY binary_generic_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF (generic_expression);
      operands : LIST [2:2] OF generic_expression;
  END_ENTITY; -- binary_generic_expression

  ENTITY binary_logical_expression
    SUPERTYPE OF (ONEOF (instance_equal,logical_xor))
    SUBTYPE OF (binary_generic_expression, logical_expression);
  END_ENTITY; -- binary_logical_expression

  ENTITY binary_numeric_expression
    ABSTRACT SUPERTYPE OF (ONEOF (minus_expression,div_expression,
        mod_expression,slash_expression,power_expression,
        binary_function_call))
    SUBTYPE OF (numeric_expression, binary_generic_expression);
      SELF\binary_generic_expression.operands : LIST [2:2] OF
                                                    numeric_expression;
  END_ENTITY; -- binary_numeric_expression

  ENTITY boolean_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF (defined_function, boolean_expression);
  END_ENTITY; -- boolean_defined_function

  ENTITY boolean_expression
    ABSTRACT SUPERTYPE OF (ONEOF (simple_boolean_expression,
        unary_boolean_expression,binary_boolean_expression,
        multiple_arity_boolean_expression,comparison_expression,
        interval_expression,boolean_defined_function))
    SUBTYPE OF (expression);
  END_ENTITY; -- boolean_expression

  ENTITY boolean_literal
    SUBTYPE OF (simple_boolean_expression, generic_literal);
      the_value : BOOLEAN;
  END_ENTITY; -- boolean_literal

  ENTITY boolean_variable
    SUBTYPE OF (simple_boolean_expression, variable);
  END_ENTITY; -- boolean_variable

  ENTITY calendar_date
    SUBTYPE OF (date);
      day_component   : day_in_month_number;
      month_component : month_in_year_number;
    WHERE
      wr1: valid_calendar_date(SELF);
  END_ENTITY; -- calendar_date

  ENTITY celsius_temperature_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.THERMODYNAMIC_TEMPERATURE_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- celsius_temperature_measure_with_unit

  ENTITY certification;
      name    : label;
      purpose : text;
      kind    : certification_type;
  END_ENTITY; -- certification

  ENTITY certification_assignment
    ABSTRACT SUPERTYPE;
      assigned_certification : certification;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- certification_assignment

  ENTITY certification_type;
      description : label;
  END_ENTITY; -- certification_type

  ENTITY characterized_object;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- characterized_object

  ENTITY characterized_object_relationship;
      name            : label;
      description     : OPTIONAL text;
      relating_object : characterized_object;
      related_object  : characterized_object;
  END_ENTITY; -- characterized_object_relationship

  ENTITY class
    SUPERTYPE OF (ONEOF (class_by_extension,class_by_intension))
    SUBTYPE OF (group);
  END_ENTITY; -- class

  ENTITY class_by_extension
    SUBTYPE OF (class);
  END_ENTITY; -- class_by_extension

  ENTITY class_by_intension
    SUBTYPE OF (class);
  END_ENTITY; -- class_by_intension

  ENTITY classification_assignment
    ABSTRACT SUPERTYPE;
      assigned_class : group;
      role           : classification_role;
  END_ENTITY; -- classification_assignment

  ENTITY classification_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- classification_role

  ENTITY comparison_equal
    SUBTYPE OF (comparison_expression);
  END_ENTITY; -- comparison_equal

  ENTITY comparison_expression
    ABSTRACT SUPERTYPE OF (ONEOF (comparison_equal,comparison_greater,
        comparison_greater_equal,comparison_less,comparison_less_equal,
        comparison_not_equal,like_expression))
    SUBTYPE OF (boolean_expression, binary_generic_expression);
      SELF\binary_generic_expression.operands : LIST [2:2] OF expression;
    WHERE
      wr1: (((('AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION' 
               IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND 
               'AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION') 
               IN TYPEOF(SELF\binary_generic_expression.operands[2])) OR ((
               'AP239_PART_DEFINITION_INFORMATION_MIM.BOOLEAN_EXPRESSION' 
               IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.BOOLEAN_EXPRESSION' 
               IN TYPEOF(SELF\binary_generic_expression.operands[2]))) OR (
               ('AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' 
               IN TYPEOF(SELF\binary_generic_expression.operands[1])) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN
                TYPEOF(SELF\binary_generic_expression.operands[2]))));
  END_ENTITY; -- comparison_expression

  ENTITY comparison_greater
    SUBTYPE OF (comparison_expression);
  END_ENTITY; -- comparison_greater

  ENTITY comparison_greater_equal
    SUBTYPE OF (comparison_expression);
  END_ENTITY; -- comparison_greater_equal

  ENTITY comparison_less
    SUBTYPE OF (comparison_expression);
  END_ENTITY; -- comparison_less

  ENTITY comparison_less_equal
    SUBTYPE OF (comparison_expression);
  END_ENTITY; -- comparison_less_equal

  ENTITY comparison_not_equal
    SUBTYPE OF (comparison_expression);
  END_ENTITY; -- comparison_not_equal

  ENTITY complement;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      set_1       : class;
      set_2       : class;
      universe    : class;
  END_ENTITY; -- complement

  ENTITY compound_representation_item
    SUBTYPE OF (representation_item);
      item_element : compound_item_definition;
  END_ENTITY; -- compound_representation_item

  ENTITY concat_expression
    SUBTYPE OF (string_expression, multiple_arity_generic_expression);
      SELF\multiple_arity_generic_expression.operands : LIST [2:?] OF string_expression;
  END_ENTITY; -- concat_expression

  ENTITY condition
    SUBTYPE OF (characterized_object, logical_expression);
  END_ENTITY; -- condition

  ENTITY condition_relationship
    SUBTYPE OF (characterized_object_relationship);
  END_ENTITY; -- condition_relationship

  ENTITY connector_on
    SUBTYPE OF (group);
  END_ENTITY; -- connector_on

  ENTITY containing_message
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : message_contents_group;
      SELF\applied_group_assignment.items  : SET [1:1] OF
                                                 message_having_contents;
    DERIVE
      containing_message : message_having_contents := SELF\
                              containing_message.items;
  END_ENTITY; -- containing_message

  ENTITY context_dependent_unit
    SUBTYPE OF (named_unit);
      name : label;
  END_ENTITY; -- context_dependent_unit

  ENTITY contract;
      name    : label;
      purpose : text;
      kind    : contract_type;
  END_ENTITY; -- contract

  ENTITY contract_assignment
    ABSTRACT SUPERTYPE;
      assigned_contract : contract;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- contract_assignment

  ENTITY contract_type;
      description : label;
  END_ENTITY; -- contract_type

  ENTITY conversion_based_unit
    SUBTYPE OF (named_unit);
      name              : label;
      conversion_factor : measure_with_unit;
  END_ENTITY; -- conversion_based_unit

  ENTITY coordinated_universal_time_offset;
      hour_offset   : INTEGER;
      minute_offset : OPTIONAL INTEGER;
      sense         : ahead_or_behind;
    DERIVE
      actual_minute_offset : INTEGER := NVL(minute_offset,0);
    WHERE
      wr1: ((0 <= hour_offset) AND (hour_offset < 24));
      wr2: ((0 <= actual_minute_offset) AND (actual_minute_offset <= 59));
      wr3: (NOT (((hour_offset <> 0) OR (actual_minute_offset <> 0)) AND (
               sense = exact)));
  END_ENTITY; -- coordinated_universal_time_offset

  ENTITY date
    SUPERTYPE OF (ONEOF (calendar_date));
      year_component : year_number;
  END_ENTITY; -- date

  ENTITY date_and_time;
      date_component : date;
      time_component : local_time;
  END_ENTITY; -- date_and_time

  ENTITY date_and_time_assignment
    ABSTRACT SUPERTYPE;
      assigned_date_and_time : date_and_time;
      role                   : date_time_role;
  END_ENTITY; -- date_and_time_assignment

  ENTITY date_assignment
    ABSTRACT SUPERTYPE;
      assigned_date : date;
      role          : date_role;
  END_ENTITY; -- date_assignment

  ENTITY date_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- date_role

  ENTITY date_time_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- date_time_role

  ENTITY default_boolean_literal
    SUBTYPE OF (logical_literal);
      SELF\logical_literal.the_value : BOOLEAN;
  END_ENTITY; -- default_boolean_literal

  ENTITY default_boolean_variable
    SUBTYPE OF (logical_variable);
  END_ENTITY; -- default_boolean_variable

  ENTITY defined_function
    ABSTRACT SUPERTYPE OF (ONEOF (string_defined_function,
        boolean_defined_function) ANDOR sql_mappable_defined_function);
  END_ENTITY; -- defined_function

  ENTITY defined_logical_comparison
    SUBTYPE OF (logical_comparison);
      declaration : STRING;
      description : STRING;
      encoding    : OPTIONAL STRING;
  END_ENTITY; -- defined_logical_comparison

  ENTITY defined_state_relationship;
      name             : STRING;
      description      : OPTIONAL STRING;
      defined_state    : state_assessment;
      definitive_state : state_assertion;
  END_ENTITY; -- defined_state_relationship

  ENTITY derived_unit;
      elements : SET [1:?] OF derived_unit_element;
    DERIVE
      name : label := get_name_value(SELF);
    WHERE
      wr1: ((SIZEOF(elements) > 1) OR ((SIZEOF(elements) = 1) AND (
               elements[1].exponent <> 1)));
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1);
  END_ENTITY; -- derived_unit

  ENTITY derived_unit_element;
      unit     : named_unit;
      exponent : REAL;
  END_ENTITY; -- derived_unit_element

  ENTITY description_attribute;
      attribute_value : text;
      described_item  : description_attribute_select;
  END_ENTITY; -- description_attribute

  ENTITY descriptive_representation_item
    SUBTYPE OF (representation_item);
      description : text;
  END_ENTITY; -- descriptive_representation_item

  ENTITY dimensional_exponents;
      length_exponent                    : REAL;
      mass_exponent                      : REAL;
      time_exponent                      : REAL;
      electric_current_exponent          : REAL;
      thermodynamic_temperature_exponent : REAL;
      amount_of_substance_exponent       : REAL;
      luminous_intensity_exponent        : REAL;
  END_ENTITY; -- dimensional_exponents

  ENTITY directed_action
    SUBTYPE OF (executed_action);
      directive : action_directive;
  END_ENTITY; -- directed_action

  ENTITY div_expression
    SUBTYPE OF (binary_numeric_expression);
  END_ENTITY; -- div_expression

  ENTITY document;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      kind        : document_type;
    INVERSE
      representation_types : SET [0:?] OF document_representation_type FOR 
                                represented_document;
  END_ENTITY; -- document

  ENTITY document_file
    SUBTYPE OF (document, characterized_object);
    WHERE
      wr1: (SELF\characterized_object.name = '');
      wr2: (NOT EXISTS(SELF\characterized_object.description));
      wr3: (SIZEOF(QUERY ( drt <* SELF\document.representation_types | (
               drt.name IN ['digital','physical']) )) = 1);
  END_ENTITY; -- document_file

  ENTITY document_product_association;
      name              : label;
      description       : OPTIONAL text;
      relating_document : document;
      related_product   : product_or_formation_or_definition;
  END_ENTITY; -- document_product_association

  ENTITY document_product_equivalence
    SUBTYPE OF (document_product_association);
    WHERE
      wr1: (SELF\document_product_association.name = 'equivalence');
      wr2: ((NOT ('AP239_PART_DEFINITION_INFORMATION_MIM.PRODUCT' IN 
               TYPEOF(SELF\document_product_association.related_product))) 
               OR ((SELF\document_product_association.relating_document.
               kind.product_data_type = 'configuration controlled document') 
               AND (SIZEOF(QUERY ( prpc <* USEDIN(SELF\
               document_product_association.related_product,
               'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | (prpc.name = 
               'document') )) = 1)));
      wr3: ((NOT ('AP239_PART_DEFINITION_INFORMATION_MIM.PRODUCT_DEFINITION_FORMATION' 
               IN TYPEOF(SELF.related_product))) OR ((SELF\
               document_product_association.relating_document.kind.
               product_data_type = 
               'configuration controlled document version') AND (SIZEOF(
               QUERY ( prpc <* USEDIN(SELF.related_product\
               product_definition_formation.of_product,'AP239_PART_DEFINITION_INFORMATION_MIM.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')
                | (prpc.name = 'document') )) = 1)));
      wr4: ((NOT (
               'AP239_PART_DEFINITION_INFORMATION_MIM.PRODUCT_DEFINITION' 
               IN TYPEOF(SELF.related_product))) OR ((SELF\
               document_product_association.relating_document.kind.
               product_data_type = 
               'configuration controlled document definition') AND (SIZEOF(
               QUERY ( prpc <* USEDIN(SELF\document_product_association.
               related_product\product_definition.formation.of_product,'AP239_PART_DEFINITION_INFORMATION_MIM.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')
                | (prpc.name = 'document') )) = 1)));
  END_ENTITY; -- document_product_equivalence

  ENTITY document_reference
    ABSTRACT SUPERTYPE;
      assigned_document : document;
      source            : label;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- document_reference

  ENTITY document_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_document : document;
      related_document  : document;
  END_ENTITY; -- document_relationship

  ENTITY document_representation_type;
      name                 : label;
      represented_document : document;
  END_ENTITY; -- document_representation_type

  ENTITY document_type;
      product_data_type : label;
  END_ENTITY; -- document_type

  ENTITY document_usage_constraint;
      source                : document;
      subject_element       : label;
      subject_element_value : text;
  END_ENTITY; -- document_usage_constraint

  ENTITY document_usage_constraint_assignment
    ABSTRACT SUPERTYPE;
      assigned_document_usage : document_usage_constraint;
      role                    : document_usage_role;
  END_ENTITY; -- document_usage_constraint_assignment

  ENTITY document_usage_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- document_usage_role

  ENTITY double_toleranced_measure_item
    SUBTYPE OF (compound_representation_item);
    DERIVE
      tolerance_range          : value_range := SELF\
                                    compound_representation_item.
                                    item_element;
      toleranced_measure_value : measure_representation_item := SELF\
                                    compound_representation_item.
                                    item_element;
    WHERE
      wr1: (SIZEOF(SELF\compound_representation_item.item_element) = 2);
      wr2: ('LIST_REPRESENTATION_ITEM' IN TYPEOF(SELF\
               compound_representation_item.item_element));
  END_ENTITY; -- double_toleranced_measure_item

  ENTITY electric_current_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.ELECTRIC_CURRENT_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- electric_current_measure_with_unit

  ENTITY electric_current_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 1) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- electric_current_unit

  ENTITY envelope
    SUBTYPE OF (characterized_object, product);
  END_ENTITY; -- envelope

  ENTITY envelope_relationship
    SUBTYPE OF (product_relationship);
  END_ENTITY; -- envelope_relationship

  ENTITY environment;
      syntactic_representation : generic_variable;
      semantics                : variable_semantics;
  END_ENTITY; -- environment

  ENTITY equals_expression
    SUBTYPE OF (binary_boolean_expression);
  END_ENTITY; -- equals_expression

  ENTITY event_occurrence;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- event_occurrence

  ENTITY event_occurrence_assignment
    ABSTRACT SUPERTYPE;
      assigned_event_occurrence : event_occurrence;
      role                      : event_occurrence_role;
  END_ENTITY; -- event_occurrence_assignment

  ENTITY event_occurrence_relationship;
      name           : label;
      description    : OPTIONAL text;
      relating_event : event_occurrence;
      related_event  : event_occurrence;
  END_ENTITY; -- event_occurrence_relationship

  ENTITY event_occurrence_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- event_occurrence_role

  ENTITY executed_action
    SUBTYPE OF (action);
  END_ENTITY; -- executed_action

  ENTITY expression
    ABSTRACT SUPERTYPE OF (ONEOF (numeric_expression,boolean_expression,
        string_expression))
    SUBTYPE OF (generic_expression);
  END_ENTITY; -- expression

  ENTITY external_class_library
    SUBTYPE OF (external_source);
  END_ENTITY; -- external_class_library

  ENTITY external_identification_assignment
    ABSTRACT SUPERTYPE
    SUBTYPE OF (identification_assignment);
      source : external_source;
  END_ENTITY; -- external_identification_assignment

  ENTITY external_source;
      source_id : source_item;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- external_source

  ENTITY externally_defined_class
    SUBTYPE OF (class, externally_defined_item);
  END_ENTITY; -- externally_defined_class

  ENTITY externally_defined_item;
      item_id : source_item;
      source  : external_source;
  END_ENTITY; -- externally_defined_item

  ENTITY format_function
    SUBTYPE OF (string_expression, binary_generic_expression);
    DERIVE
      value_to_format : generic_expression := SELF\
                           binary_generic_expression.operands[1];
      format_string   : generic_expression := SELF\
                           binary_generic_expression.operands[2];
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION' IN
                TYPEOF(value_to_format)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN
                TYPEOF(format_string)));
  END_ENTITY; -- format_function

  ENTITY general_property;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- general_property

  ENTITY general_property_association;
      name               : label;
      description        : OPTIONAL text;
      base_definition    : general_property;
      derived_definition : derived_property_select;
    WHERE
      wr1: (SIZEOF(USEDIN(derived_definition,
               'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'GENERAL_PROPERTY_ASSOCIATION.' + 'DERIVED_DEFINITION')) = 1);
      wr2: (derived_definition.name = base_definition.name);
  END_ENTITY; -- general_property_association

  ENTITY general_property_relationship;
      name              : label;
      description       : OPTIONAL text;
      relating_property : general_property;
      related_property  : general_property;
  END_ENTITY; -- general_property_relationship

  ENTITY generic_expression
    ABSTRACT SUPERTYPE OF (ONEOF (simple_generic_expression,
        unary_generic_expression,binary_generic_expression,
        multiple_arity_generic_expression));
    WHERE
      wr1: is_acyclic(SELF);
  END_ENTITY; -- generic_expression

  ENTITY generic_literal
    ABSTRACT SUPERTYPE
    SUBTYPE OF (simple_generic_expression);
  END_ENTITY; -- generic_literal

  ENTITY generic_variable
    ABSTRACT SUPERTYPE
    SUBTYPE OF (simple_generic_expression);
    INVERSE
      interpretation : environment FOR syntactic_representation;
  END_ENTITY; -- generic_variable

  ENTITY global_uncertainty_assigned_context
    SUBTYPE OF (representation_context);
      uncertainty : SET [1:?] OF uncertainty_measure_with_unit;
  END_ENTITY; -- global_uncertainty_assigned_context

  ENTITY global_unit_assigned_context
    SUBTYPE OF (representation_context);
      units : SET [1:?] OF unit;
  END_ENTITY; -- global_unit_assigned_context

  ENTITY group;
      name        : label;
      description : OPTIONAL text;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- group

  ENTITY group_assignment
    ABSTRACT SUPERTYPE;
      assigned_group : group;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- group_assignment

  ENTITY group_relationship;
      name           : label;
      description    : OPTIONAL text;
      relating_group : group;
      related_group  : group;
  END_ENTITY; -- group_relationship

  ENTITY id_attribute;
      attribute_value : identifier;
      identified_item : id_attribute_select;
  END_ENTITY; -- id_attribute

  ENTITY identification_assignment
    ABSTRACT SUPERTYPE;
      assigned_id : identifier;
      role        : identification_role;
  END_ENTITY; -- identification_assignment

  ENTITY identification_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- identification_role

  ENTITY index_expression
    SUBTYPE OF (string_expression, binary_generic_expression);
    DERIVE
      operand : generic_expression := SELF\binary_generic_expression.
                   operands[1];
      index   : generic_expression := SELF\binary_generic_expression.
                   operands[2];
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN 
               TYPEOF(operand)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION' 
               IN TYPEOF(index)));
      wr2: is_int_expr(index);
  END_ENTITY; -- index_expression

  ENTITY information_right
    SUBTYPE OF (action_method);
  END_ENTITY; -- information_right

  ENTITY information_usage_right
    SUBTYPE OF (action_method);
  END_ENTITY; -- information_usage_right

  ENTITY instance_equal
    SUBTYPE OF (binary_logical_expression);
  END_ENTITY; -- instance_equal

  ENTITY int_literal
    SUBTYPE OF (literal_number);
      SELF\literal_number.the_value : INTEGER;
  END_ENTITY; -- int_literal

  ENTITY int_numeric_variable
    SUBTYPE OF (numeric_variable);
  END_ENTITY; -- int_numeric_variable

  ENTITY interface_connection
    SUBTYPE OF (product_definition_relationship);
  END_ENTITY; -- interface_connection

  ENTITY interface_connector_as_planned
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- interface_connector_as_planned

  ENTITY interface_connector_as_realized
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- interface_connector_as_realized

  ENTITY interface_connector_design
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- interface_connector_design

  ENTITY interface_connector_design_to_planned
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : interface_connector_as_planned;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_design;
    WHERE
      wr1: (SELF.relating_product_definition_formation.of_product :=: SELF
               .related_product_definition_formation.of_product);
  END_ENTITY; -- interface_connector_design_to_planned

  ENTITY interface_connector_design_to_realized
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : interface_connector_as_realized;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_design;
    WHERE
      wr1: (SELF.relating_product_definition_formation.of_product :=: SELF
               .related_product_definition_formation.of_product);
  END_ENTITY; -- interface_connector_design_to_realized

  ENTITY interface_connector_planned_to_realized
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : interface_connector_as_realized;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_as_planned;
    WHERE
      wr1: (SELF.relating_product_definition_formation.of_product :=: SELF
               .related_product_definition_formation.of_product);
  END_ENTITY; -- interface_connector_planned_to_realized

  ENTITY interface_definition_for
    SUBTYPE OF (product_definition_relationship);
  END_ENTITY; -- interface_definition_for

  ENTITY intersection;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      operand     : SET [2:?] OF class;
      resultant   : class;
  END_ENTITY; -- intersection

  ENTITY interval_expression
    SUBTYPE OF (boolean_expression, multiple_arity_generic_expression);
    DERIVE
      interval_low  : generic_expression := SELF\
                         multiple_arity_generic_expression.operands[1];
      interval_item : generic_expression := SELF\
                         multiple_arity_generic_expression.operands[2];
      interval_high : generic_expression := SELF\
                         multiple_arity_generic_expression.operands[3];
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM.EXPRESSION' IN TYPEOF(
               interval_low)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.EXPRESSION' IN 
               TYPEOF(interval_item)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.EXPRESSION' IN 
               TYPEOF(interval_high)));
      wr2: ((('AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN
                TYPEOF(SELF.interval_low)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN
                TYPEOF(SELF.interval_high)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN
                TYPEOF(SELF.interval_item))) OR ((
               'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN
                TYPEOF(SELF.interval_low)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION' 
               IN TYPEOF(SELF.interval_item)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION' 
               IN TYPEOF(SELF.interval_high))));
  END_ENTITY; -- interval_expression

  ENTITY language
    SUBTYPE OF (group);
    WHERE
      wr1: (SELF\group.name <> '');
  END_ENTITY; -- language

  ENTITY length_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.LENGTH_UNIT' IN TYPEOF(
               SELF\measure_with_unit.unit_component));
  END_ENTITY; -- length_measure_with_unit

  ENTITY length_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 1) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- length_unit

  ENTITY like_expression
    SUBTYPE OF (comparison_expression);
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN 
               TYPEOF(SELF\comparison_expression.operands[1])) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN
                TYPEOF(SELF\comparison_expression.operands[2])));
  END_ENTITY; -- like_expression

  ENTITY literal_number
    ABSTRACT SUPERTYPE OF (ONEOF (int_literal,real_literal))
    SUBTYPE OF (simple_numeric_expression, generic_literal);
      the_value : NUMBER;
  END_ENTITY; -- literal_number

  ENTITY local_time;
      hour_component   : hour_in_day;
      minute_component : OPTIONAL minute_in_hour;
      second_component : OPTIONAL second_in_minute;
      zone             : coordinated_universal_time_offset;
    WHERE
      wr1: valid_time(SELF);
  END_ENTITY; -- local_time

  ENTITY logical_and
    SUBTYPE OF (multiple_arity_logical_expression);
  END_ENTITY; -- logical_and

  ENTITY logical_comparison
    SUPERTYPE OF (ONEOF (defined_logical_comparison,logical_equal,
        logical_greater,logical_greater_equal,logical_less,
        logical_less_equal,logical_like,logical_not_equal))
    SUBTYPE OF (logical_expression);
      specified_value : generic_literal;
      the_parameter   : generic_variable;
  END_ENTITY; -- logical_comparison

  ENTITY logical_equal
    SUBTYPE OF (logical_comparison);
  END_ENTITY; -- logical_equal

  ENTITY logical_expression
    SUPERTYPE OF (ONEOF (binary_logical_expression,logical_comparison,
        multiple_arity_logical_expression,simple_logical_expression,
        unary_logical_expression))
    SUBTYPE OF (expression);
  END_ENTITY; -- logical_expression

  ENTITY logical_greater
    SUBTYPE OF (logical_comparison);
  END_ENTITY; -- logical_greater

  ENTITY logical_greater_equal
    SUBTYPE OF (logical_comparison);
  END_ENTITY; -- logical_greater_equal

  ENTITY logical_less
    SUBTYPE OF (logical_comparison);
  END_ENTITY; -- logical_less

  ENTITY logical_less_equal
    SUBTYPE OF (logical_comparison);
  END_ENTITY; -- logical_less_equal

  ENTITY logical_like
    SUBTYPE OF (logical_comparison);
  END_ENTITY; -- logical_like

  ENTITY logical_literal
    SUBTYPE OF (generic_literal, simple_logical_expression);
      the_value : LOGICAL;
  END_ENTITY; -- logical_literal

  ENTITY logical_not
    SUBTYPE OF (unary_logical_expression);
  END_ENTITY; -- logical_not

  ENTITY logical_not_equal
    SUBTYPE OF (logical_comparison);
  END_ENTITY; -- logical_not_equal

  ENTITY logical_or
    SUBTYPE OF (multiple_arity_logical_expression);
  END_ENTITY; -- logical_or

  ENTITY logical_variable
    SUBTYPE OF (simple_logical_expression, variable);
  END_ENTITY; -- logical_variable

  ENTITY logical_xor
    SUBTYPE OF (binary_logical_expression);
  END_ENTITY; -- logical_xor

  ENTITY luminous_intensity_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.LUMINOUS_INTENSITY_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- luminous_intensity_measure_with_unit

  ENTITY luminous_intensity_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 1));
  END_ENTITY; -- luminous_intensity_unit

  ENTITY mass_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.MASS_UNIT' IN TYPEOF(
               SELF\measure_with_unit.unit_component));
  END_ENTITY; -- mass_measure_with_unit

  ENTITY mass_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 1) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- mass_unit

  ENTITY measure_representation_item
    SUBTYPE OF (representation_item, measure_with_unit);
  END_ENTITY; -- measure_representation_item

  ENTITY measure_with_unit
    SUPERTYPE OF (ONEOF (length_measure_with_unit,mass_measure_with_unit,
        time_measure_with_unit,electric_current_measure_with_unit,
        thermodynamic_temperature_measure_with_unit,
        celsius_temperature_measure_with_unit,
        amount_of_substance_measure_with_unit,
        luminous_intensity_measure_with_unit,plane_angle_measure_with_unit,
        solid_angle_measure_with_unit,area_measure_with_unit,
        volume_measure_with_unit,ratio_measure_with_unit));
      value_component : measure_value;
      unit_component  : unit;
    WHERE
      wr1: valid_units(SELF);
  END_ENTITY; -- measure_with_unit

  ENTITY message_contents_assignment
    SUBTYPE OF (applied_group_assignment);
      SELF\group_assignment.assigned_group : message_contents_group;
      SELF\applied_group_assignment.items  : SET [1:?] OF contents_item;
  END_ENTITY; -- message_contents_assignment

  ENTITY message_contents_group
    SUBTYPE OF (group);
  END_ENTITY; -- message_contents_group

  ENTITY message_relationship
    SUBTYPE OF (product_relationship);
      SELF\product_relationship.related_product  : structured_message;
      SELF\product_relationship.relating_product : structured_message;
    DERIVE
      relating_message : structured_message := SELF\message_relationship.
                            relating_product;
      related_message  : structured_message := SELF\message_relationship.
                            related_product;
  END_ENTITY; -- message_relationship

  ENTITY minus_expression
    SUBTYPE OF (binary_numeric_expression);
  END_ENTITY; -- minus_expression

  ENTITY mod_expression
    SUBTYPE OF (binary_numeric_expression);
  END_ENTITY; -- mod_expression

  ENTITY mult_expression
    SUBTYPE OF (multiple_arity_numeric_expression);
  END_ENTITY; -- mult_expression

  ENTITY multi_language_attribute_assignment
    SUBTYPE OF (attribute_value_assignment);
      items : SET [1:?] OF multi_language_attribute_item;
    DERIVE
      translation_language : language := language_indication[1]\
                                attribute_classification_assignment.
                                assigned_class;
    INVERSE
      language_indication : SET [1:1] OF attribute_language_assignment FOR 
                               items;
    WHERE
      wr1: (SELF\attribute_value_assignment.role.name = 
               'alternate language');
      wr2: (SIZEOF(QUERY ( ala <* language_indication | ((ala\
               attribute_classification_assignment.attribute_name = 
               'attribute_value') AND (ala\
               attribute_classification_assignment.role.name = 'translated')) )) 
               = 1);
      wr3: (SELF\attribute_value_assignment.attribute_name <> '');
      wr4: (SIZEOF(QUERY ( ci <* items | (SIZEOF(QUERY ( ata <* USEDIN(ci,'AP239_PART_DEFINITION_INFORMATION_MIM.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS')
                | ((ata\attribute_value_assignment.attribute_name = SELF\
               attribute_value_assignment.attribute_name) AND (ata.
               translation_language :=: translation_language)) )) > 1) )) =
                0);
      wr5: (SIZEOF(QUERY ( ci <* items | (SIZEOF(QUERY ( ata <* USEDIN(ci,'AP239_PART_DEFINITION_INFORMATION_MIM.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS')
                | ((ata\attribute_classification_assignment.role.name = 
               'primary') AND (ata\attribute_classification_assignment.
               attribute_name = SELF\attribute_value_assignment.
               attribute_name) AND (ata\attribute_classification_assignment
               .assigned_class :=: translation_language)) )) > 0) )) = 0);
  END_ENTITY; -- multi_language_attribute_assignment

  ENTITY multiple_arity_boolean_expression
    ABSTRACT SUPERTYPE OF (ONEOF (and_expression,or_expression))
    SUBTYPE OF (boolean_expression, multiple_arity_generic_expression);
      SELF\multiple_arity_generic_expression.operands : LIST [2:?] OF boolean_expression;
  END_ENTITY; -- multiple_arity_boolean_expression

  ENTITY multiple_arity_function_call
    ABSTRACT SUPERTYPE
    SUBTYPE OF (multiple_arity_numeric_expression);
  END_ENTITY; -- multiple_arity_function_call

  ENTITY multiple_arity_generic_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF (generic_expression);
      operands : LIST [2:?] OF generic_expression;
  END_ENTITY; -- multiple_arity_generic_expression

  ENTITY multiple_arity_logical_expression
    SUPERTYPE OF (ONEOF (logical_and,logical_or))
    SUBTYPE OF (logical_expression, multiple_arity_generic_expression);
  END_ENTITY; -- multiple_arity_logical_expression

  ENTITY multiple_arity_numeric_expression
    ABSTRACT SUPERTYPE OF (ONEOF (plus_expression,mult_expression,
        multiple_arity_function_call))
    SUBTYPE OF (numeric_expression, multiple_arity_generic_expression);
      SELF\multiple_arity_generic_expression.operands : LIST [2:?] OF numeric_expression;
  END_ENTITY; -- multiple_arity_numeric_expression

  ENTITY name_assignment
    ABSTRACT SUPERTYPE;
      assigned_name : label;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- name_assignment

  ENTITY name_attribute;
      attribute_value : label;
      named_item      : name_attribute_select;
  END_ENTITY; -- name_attribute

  ENTITY named_unit
    SUPERTYPE OF (ONEOF (si_unit,conversion_based_unit,
        context_dependent_unit) ANDOR ONEOF (length_unit,mass_unit,
        time_unit,electric_current_unit,thermodynamic_temperature_unit,
        amount_of_substance_unit,luminous_intensity_unit,plane_angle_unit,
        solid_angle_unit,area_unit,volume_unit,ratio_unit));
      dimensions : dimensional_exponents;
  END_ENTITY; -- named_unit

  ENTITY not_expression
    SUBTYPE OF (unary_boolean_expression);
      SELF\unary_generic_expression.operand : boolean_expression;
  END_ENTITY; -- not_expression

  ENTITY numeric_expression
    ABSTRACT SUPERTYPE OF (ONEOF (simple_numeric_expression,
        unary_numeric_expression,binary_numeric_expression,
        multiple_arity_numeric_expression))
    SUBTYPE OF (expression);
    DERIVE
      is_int       : BOOLEAN := is_int_expr(SELF);
      sql_mappable : BOOLEAN := is_sql_mappable(SELF);
  END_ENTITY; -- numeric_expression

  ENTITY numeric_variable
    SUPERTYPE OF (ONEOF (int_numeric_variable,real_numeric_variable))
    SUBTYPE OF (simple_numeric_expression, variable);
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM.INT_NUMERIC_VARIABLE' 
               IN TYPEOF(SELF)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.REAL_NUMERIC_VARIABLE' 
               IN TYPEOF(SELF)));
  END_ENTITY; -- numeric_variable

  ENTITY object_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- object_role

  ENTITY or_expression
    SUBTYPE OF (multiple_arity_boolean_expression);
  END_ENTITY; -- or_expression

  ENTITY organization;
      id          : OPTIONAL identifier;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- organization

  ENTITY organization_assignment
    ABSTRACT SUPERTYPE;
      assigned_organization : organization;
      role                  : organization_role;
  END_ENTITY; -- organization_assignment

  ENTITY organization_relationship;
      name                  : label;
      description           : OPTIONAL text;
      relating_organization : organization;
      related_organization  : organization;
  END_ENTITY; -- organization_relationship

  ENTITY organization_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- organization_role

  ENTITY organizational_address
    SUBTYPE OF (address);
      organizations : SET [1:?] OF organization;
      description   : OPTIONAL text;
  END_ENTITY; -- organizational_address

  ENTITY organizational_project;
      name                      : label;
      description               : OPTIONAL text;
      responsible_organizations : SET [1:?] OF organization;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- organizational_project

  ENTITY organizational_project_assignment
    ABSTRACT SUPERTYPE;
      assigned_organizational_project : organizational_project;
      role                            : organizational_project_role;
  END_ENTITY; -- organizational_project_assignment

  ENTITY organizational_project_relationship;
      name                            : label;
      description                     : OPTIONAL text;
      relating_organizational_project : organizational_project;
      related_organizational_project  : organizational_project;
  END_ENTITY; -- organizational_project_relationship

  ENTITY organizational_project_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- organizational_project_role

  ENTITY person;
      id            : identifier;
      last_name     : OPTIONAL label;
      first_name    : OPTIONAL label;
      middle_names  : OPTIONAL LIST [1:?] OF label;
      prefix_titles : OPTIONAL LIST [1:?] OF label;
      suffix_titles : OPTIONAL LIST [1:?] OF label;
    WHERE
      wr1: (EXISTS(last_name) OR EXISTS(first_name));
  END_ENTITY; -- person

  ENTITY person_and_organization;
      the_person       : person;
      the_organization : organization;
    DERIVE
      name        : label := get_name_value(SELF);
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- person_and_organization

  ENTITY person_and_organization_address
    SUBTYPE OF (organizational_address, personal_address);
      SELF\personal_address.people              : SET [1:1] OF person;
      SELF\organizational_address.organizations : SET [1:1] OF
                                                      organization;
    WHERE
      wr1: (SIZEOF(QUERY ( pao <* USEDIN(SELF\personal_address.people[1],'AP239_PART_DEFINITION_INFORMATION_MIM.PERSON_AND_ORGANIZATION.THE_PERSON')
                | (pao.the_organization :=: SELF\organizational_address.
               organizations[1]) )) = 1);
  END_ENTITY; -- person_and_organization_address

  ENTITY person_and_organization_assignment
    ABSTRACT SUPERTYPE;
      assigned_person_and_organization : person_and_organization;
      role                             : person_and_organization_role;
  END_ENTITY; -- person_and_organization_assignment

  ENTITY person_and_organization_role;
      name : label;
    DERIVE
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- person_and_organization_role

  ENTITY personal_address
    SUBTYPE OF (address);
      people      : SET [1:?] OF person;
      description : OPTIONAL text;
  END_ENTITY; -- personal_address

  ENTITY plane_angle_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.PLANE_ANGLE_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- plane_angle_measure_with_unit

  ENTITY plane_angle_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- plane_angle_unit

  ENTITY plus_expression
    SUBTYPE OF (multiple_arity_numeric_expression);
  END_ENTITY; -- plus_expression

  ENTITY power_expression
    SUBTYPE OF (binary_numeric_expression);
  END_ENTITY; -- power_expression

  ENTITY power_set;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      base        : class;
      derived     : class;
  END_ENTITY; -- power_set

  ENTITY pre_defined_item;
      name : label;
  END_ENTITY; -- pre_defined_item

  ENTITY precision_qualifier;
      precision_value : INTEGER;
  END_ENTITY; -- precision_qualifier

  ENTITY product;
      id                 : identifier;
      name               : label;
      description        : OPTIONAL text;
      frame_of_reference : SET [1:?] OF product_context;
  END_ENTITY; -- product

  ENTITY product_as_individual
    ABSTRACT SUPERTYPE OF (ONEOF (product_as_planned,product_as_realized))
    SUBTYPE OF (product_definition_formation);
  END_ENTITY; -- product_as_individual

  ENTITY product_as_planned
    SUBTYPE OF (product_as_individual);
  END_ENTITY; -- product_as_planned

  ENTITY product_as_realized
    SUBTYPE OF (product_as_individual);
  END_ENTITY; -- product_as_realized

  ENTITY product_category;
      name        : label;
      description : OPTIONAL text;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- product_category

  ENTITY product_category_relationship;
      name         : label;
      description  : OPTIONAL text;
      category     : product_category;
      sub_category : product_category;
    WHERE
      wr1: acyclic_product_category_relationship(SELF,[SELF.sub_category]);
  END_ENTITY; -- product_category_relationship

  ENTITY product_concept;
      id             : identifier;
      name           : label;
      description    : OPTIONAL text;
      market_context : product_concept_context;
    UNIQUE
      ur1 : id;
  END_ENTITY; -- product_concept

  ENTITY product_concept_context
    SUBTYPE OF (application_context_element);
      market_segment_type : label;
  END_ENTITY; -- product_concept_context

  ENTITY product_context
    SUBTYPE OF (application_context_element);
      discipline_type : label;
  END_ENTITY; -- product_context

  ENTITY product_definition;
      id                 : identifier;
      description        : OPTIONAL text;
      formation          : product_definition_formation;
      frame_of_reference : product_definition_context;
    DERIVE
      name : label := get_name_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1);
  END_ENTITY; -- product_definition

  ENTITY product_definition_context
    SUBTYPE OF (application_context_element);
      life_cycle_stage : label;
  END_ENTITY; -- product_definition_context

  ENTITY product_definition_context_association;
      definition         : product_definition;
      frame_of_reference : product_definition_context;
      role               : product_definition_context_role;
  END_ENTITY; -- product_definition_context_association

  ENTITY product_definition_context_role;
      name        : label;
      description : OPTIONAL text;
  END_ENTITY; -- product_definition_context_role

  ENTITY product_definition_formation;
      id          : identifier;
      description : OPTIONAL text;
      of_product  : product;
    UNIQUE
      ur1 : id, of_product;
  END_ENTITY; -- product_definition_formation

  ENTITY product_definition_formation_relationship;
      id                                    : identifier;
      name                                  : label;
      description                           : OPTIONAL text;
      relating_product_definition_formation : product_definition_formation;
      related_product_definition_formation  : product_definition_formation;
  END_ENTITY; -- product_definition_formation_relationship

  ENTITY product_definition_relationship;
      id                          : identifier;
      name                        : label;
      description                 : OPTIONAL text;
      relating_product_definition : product_definition;
      related_product_definition  : product_definition;
  END_ENTITY; -- product_definition_relationship

  ENTITY product_definition_shape
    SUBTYPE OF (property_definition);
    UNIQUE
      ur1 : definition;
    WHERE
      wr1: (SIZEOF(['AP239_PART_DEFINITION_INFORMATION_MIM.CHARACTERIZED_PRODUCT_DEFINITION','AP239_PART_DEFINITION_INFORMATION_MIM.CHARACTERIZED_OBJECT'] 
               * TYPEOF(SELF\property_definition.definition)) > 0);
  END_ENTITY; -- product_definition_shape

  ENTITY product_definition_usage
    SUBTYPE OF (product_definition_relationship);
    UNIQUE
      ur1 : id, relating_product_definition, related_product_definition;
    WHERE
      wr1: acyclic_product_definition_relationship(SELF,[SELF\
               product_definition_relationship.related_product_definition],'AP239_PART_DEFINITION_INFORMATION_MIM.PRODUCT_DEFINITION_USAGE');
  END_ENTITY; -- product_definition_usage

  ENTITY product_definition_with_associated_documents
    SUBTYPE OF (product_definition);
      documentation_ids : SET [1:?] OF document;
  END_ENTITY; -- product_definition_with_associated_documents

  ENTITY product_design_to_individual
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.related_product_definition_formation  : product_as_individual;
      SELF\product_definition_formation_relationship.relating_product_definition_formation : product_definition_formation;
    DERIVE
      product_version    : product_definition_formation := SELF\
                              product_design_to_individual.
                              relating_product_definition_formation;
      individual_product : product_as_individual := SELF\
                              product_design_to_individual.
                              related_product_definition_formation;
  END_ENTITY; -- product_design_to_individual

  ENTITY product_planned_to_realized
    SUBTYPE OF (product_definition_formation_relationship);
      SELF\product_definition_formation_relationship.relating_product_definition_formation : product_as_planned;
      SELF\product_definition_formation_relationship.related_product_definition_formation  : product_as_realized;
    DERIVE
      realized_product : product_as_realized := SELF\
                            product_planned_to_realized.
                            related_product_definition_formation;
      planned_product  : product_as_planned := SELF\
                            product_planned_to_realized.
                            relating_product_definition_formation;
  END_ENTITY; -- product_planned_to_realized

  ENTITY product_related_product_category
    SUBTYPE OF (product_category);
      products : SET [1:?] OF product;
  END_ENTITY; -- product_related_product_category

  ENTITY product_relationship;
      id               : identifier;
      name             : label;
      description      : OPTIONAL text;
      relating_product : product;
      related_product  : product;
  END_ENTITY; -- product_relationship

  ENTITY proper_subset;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      subset      : class;
      superset    : class;
  END_ENTITY; -- proper_subset

  ENTITY property_definition;
      name        : label;
      description : OPTIONAL text;
      definition  : characterized_definition;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- property_definition

  ENTITY property_definition_relationship;
      name                         : label;
      description                  : text;
      relating_property_definition : property_definition;
      related_property_definition  : property_definition;
  END_ENTITY; -- property_definition_relationship

  ENTITY property_definition_representation;
      definition          : represented_definition;
      used_representation : representation;
    DERIVE
      description : text := get_description_value(SELF);
      name        : label := get_name_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1);
  END_ENTITY; -- property_definition_representation

  ENTITY qualified_representation_item
    SUBTYPE OF (representation_item);
      qualifiers : SET [1:?] OF value_qualifier;
    WHERE
      wr1: (SIZEOF(QUERY ( temp <* qualifiers | (
               'AP239_PART_DEFINITION_INFORMATION_MIM.PRECISION_QUALIFIER' 
               IN TYPEOF(temp)) )) < 2);
  END_ENTITY; -- qualified_representation_item

  ENTITY ratio_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.RATIO_UNIT' IN TYPEOF(
               SELF\measure_with_unit.unit_component));
  END_ENTITY; -- ratio_measure_with_unit

  ENTITY ratio_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- ratio_unit

  ENTITY real_literal
    SUBTYPE OF (literal_number);
      SELF\literal_number.the_value : REAL;
  END_ENTITY; -- real_literal

  ENTITY real_numeric_variable
    SUBTYPE OF (numeric_variable);
  END_ENTITY; -- real_numeric_variable

  ENTITY relative_event_occurrence
    SUBTYPE OF (event_occurrence);
      base_event : event_occurrence;
      offset     : time_measure_with_unit;
  END_ENTITY; -- relative_event_occurrence

  ENTITY representation;
      name             : label;
      items            : SET [1:?] OF representation_item;
      context_of_items : representation_context;
    DERIVE
      id          : identifier := get_id_value(SELF);
      description : text := get_description_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
      wr2: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1);
  END_ENTITY; -- representation

  ENTITY representation_context;
      context_identifier : identifier;
      context_type       : text;
    INVERSE
      representations_in_context : SET [1:?] OF representation FOR 
                                      context_of_items;
  END_ENTITY; -- representation_context

  ENTITY representation_item;
      name : label;
    WHERE
      wr1: (SIZEOF(using_representations(SELF)) > 0);
  END_ENTITY; -- representation_item

  ENTITY representation_relationship;
      name        : label;
      description : OPTIONAL text;
      rep_1       : representation;
      rep_2       : representation;
  END_ENTITY; -- representation_relationship

  ENTITY requirement_assigned_object
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_assignment;
      items                                : SET [1:1] OF
                                                 requirement_assigned_item;
  END_ENTITY; -- requirement_assigned_object

  ENTITY requirement_assignment
    SUBTYPE OF (characterized_object, group);
  END_ENTITY; -- requirement_assignment

  ENTITY requirement_source
    SUBTYPE OF (group);
  END_ENTITY; -- requirement_source

  ENTITY resource_property;
      name        : label;
      description : text;
      resource    : characterized_resource_definition;
  END_ENTITY; -- resource_property

  ENTITY right_to_usage_association
    SUBTYPE OF (action_method_relationship);
      SELF\action_method_relationship.related_method  : information_right;
      SELF\action_method_relationship.relating_method : information_usage_right;
    DERIVE
      right_usage   : information_usage_right := SELF\
                         right_to_usage_association.relating_method;
      right_applied : information_right := SELF\right_to_usage_association
                         .related_method;
  END_ENTITY; -- right_to_usage_association

  ENTITY role_association;
      role           : object_role;
      item_with_role : role_select;
  END_ENTITY; -- role_association

  ENTITY same_membership;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      set_1       : class;
      set_2       : class;
  END_ENTITY; -- same_membership

  ENTITY security_classification;
      name           : label;
      purpose        : text;
      security_level : security_classification_level;
  END_ENTITY; -- security_classification

  ENTITY security_classification_assignment
    ABSTRACT SUPERTYPE;
      assigned_security_classification : security_classification;
    DERIVE
      role : object_role := get_role(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1);
  END_ENTITY; -- security_classification_assignment

  ENTITY security_classification_level;
      name : label;
  END_ENTITY; -- security_classification_level

  ENTITY shape_aspect;
      name                 : label;
      description          : OPTIONAL text;
      of_shape             : product_definition_shape;
      product_definitional : LOGICAL;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- shape_aspect

  ENTITY shape_aspect_relationship;
      name                  : label;
      description           : OPTIONAL text;
      relating_shape_aspect : shape_aspect;
      related_shape_aspect  : shape_aspect;
    DERIVE
      id : identifier := get_id_value(SELF);
    WHERE
      wr1: (SIZEOF(USEDIN(SELF,'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1);
  END_ENTITY; -- shape_aspect_relationship

  ENTITY si_unit
    SUBTYPE OF (named_unit);
      prefix : OPTIONAL si_prefix;
      name   : si_unit_name;
    DERIVE
      SELF\named_unit.dimensions : dimensional_exponents := 
                                      dimensions_for_si_unit(name);
  END_ENTITY; -- si_unit

  ENTITY simple_boolean_expression
    ABSTRACT SUPERTYPE OF (ONEOF (boolean_literal,boolean_variable))
    SUBTYPE OF (boolean_expression, simple_generic_expression);
  END_ENTITY; -- simple_boolean_expression

  ENTITY simple_generic_expression
    ABSTRACT SUPERTYPE OF (ONEOF (generic_literal,generic_variable))
    SUBTYPE OF (generic_expression);
  END_ENTITY; -- simple_generic_expression

  ENTITY simple_logical_expression
    SUBTYPE OF (logical_expression, simple_generic_expression);
  END_ENTITY; -- simple_logical_expression

  ENTITY simple_numeric_expression
    ABSTRACT SUPERTYPE OF (ONEOF (literal_number,numeric_variable))
    SUBTYPE OF (numeric_expression, simple_generic_expression);
  END_ENTITY; -- simple_numeric_expression

  ENTITY simple_string_expression
    ABSTRACT SUPERTYPE OF (ONEOF (string_literal,string_variable))
    SUBTYPE OF (string_expression, simple_generic_expression);
  END_ENTITY; -- simple_string_expression

  ENTITY slash_expression
    SUBTYPE OF (binary_numeric_expression);
  END_ENTITY; -- slash_expression

  ENTITY solid_angle_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.SOLID_ANGLE_UNIT' IN 
               TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- solid_angle_measure_with_unit

  ENTITY solid_angle_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- solid_angle_unit

  ENTITY source_for_requirement
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_source;
      items                                : SET [1:1] OF
                                                 requirement_source_item;
  END_ENTITY; -- source_for_requirement

  ENTITY sourced_requirement
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : requirement_source;
      items                                : SET [1:1] OF
                                                 product_definition;
  END_ENTITY; -- sourced_requirement

  ENTITY sql_mappable_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF (defined_function);
  END_ENTITY; -- sql_mappable_defined_function

  ENTITY state_assertion;
      asserted_state    : state_observed;
      conformance_state : state_type;
      assertion_result  : OPTIONAL LOGICAL;
  END_ENTITY; -- state_assertion

  ENTITY state_assessment;
      assessed_state          : state_observed;
      comparable_state        : state_type;
      assessment_result       : OPTIONAL LOGICAL;
      definitional_comparison : STRING;
  END_ENTITY; -- state_assessment

  ENTITY state_characterized_object
    SUBTYPE OF (characterized_object, state_type);
  END_ENTITY; -- state_characterized_object

  ENTITY state_observed;
      name        : STRING;
      description : STRING;
  END_ENTITY; -- state_observed

  ENTITY state_observed_relationship;
      name        : STRING;
      description : OPTIONAL STRING;
      relating    : state_observed;
      related     : state_observed;
      role        : STRING;
  END_ENTITY; -- state_observed_relationship

  ENTITY state_predicted
    SUBTYPE OF (state_observed);
  END_ENTITY; -- state_predicted

  ENTITY state_relationship_characterized_object
    SUBTYPE OF (characterized_object, state_type_relationship);
  END_ENTITY; -- state_relationship_characterized_object

  ENTITY state_role;
      name        : STRING;
      description : STRING;
  END_ENTITY; -- state_role

  ENTITY state_type;
      name        : STRING;
      description : STRING;
  END_ENTITY; -- state_type

  ENTITY state_type_relationship;
      name        : STRING;
      description : OPTIONAL STRING;
      relating    : state_type;
      related     : state_type;
      role        : STRING;
  END_ENTITY; -- state_type_relationship

  ENTITY state_type_role;
      name        : STRING;
      description : STRING;
  END_ENTITY; -- state_type_role

  ENTITY string_defined_function
    ABSTRACT SUPERTYPE
    SUBTYPE OF (defined_function, string_expression);
  END_ENTITY; -- string_defined_function

  ENTITY string_expression
    ABSTRACT SUPERTYPE OF (ONEOF (simple_string_expression,
        index_expression,substring_expression,concat_expression,
        format_function,string_defined_function))
    SUBTYPE OF (expression);
  END_ENTITY; -- string_expression

  ENTITY string_literal
    SUBTYPE OF (simple_string_expression, generic_literal);
      the_value : STRING;
  END_ENTITY; -- string_literal

  ENTITY string_variable
    SUBTYPE OF (simple_string_expression, variable);
  END_ENTITY; -- string_variable

  ENTITY structured_message
    SUBTYPE OF (product);
  END_ENTITY; -- structured_message

  ENTITY subset;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      subset      : class;
      superset    : class;
  END_ENTITY; -- subset

  ENTITY substring_expression
    SUBTYPE OF (string_expression, multiple_arity_generic_expression);
    DERIVE
      operand : generic_expression := SELF\
                   multiple_arity_generic_expression.operands[1];
      index1  : generic_expression := SELF\
                   multiple_arity_generic_expression.operands[2];
      index2  : generic_expression := SELF\
                   multiple_arity_generic_expression.operands[3];
    WHERE
      wr1: (('AP239_PART_DEFINITION_INFORMATION_MIM.STRING_EXPRESSION' IN 
               TYPEOF(operand)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION' 
               IN TYPEOF(index1)) AND (
               'AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_EXPRESSION' 
               IN TYPEOF(index2)));
      wr2: (SIZEOF(SELF\multiple_arity_generic_expression.operands) = 3);
      wr3: is_int_expr(index1);
      wr4: is_int_expr(index2);
  END_ENTITY; -- substring_expression

  ENTITY thermodynamic_temperature_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.THERMODYNAMIC_TEMPERATURE_UNIT' 
               IN TYPEOF(SELF\measure_with_unit.unit_component));
  END_ENTITY; -- thermodynamic_temperature_measure_with_unit

  ENTITY thermodynamic_temperature_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 1) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- thermodynamic_temperature_unit

  ENTITY time_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.TIME_UNIT' IN TYPEOF(
               SELF\measure_with_unit.unit_component));
  END_ENTITY; -- time_measure_with_unit

  ENTITY time_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 0) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 1) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- time_unit

  ENTITY type_qualifier;
      name : label;
  END_ENTITY; -- type_qualifier

  ENTITY unary_boolean_expression
    ABSTRACT SUPERTYPE OF (ONEOF (not_expression))
    SUBTYPE OF (boolean_expression, unary_generic_expression);
  END_ENTITY; -- unary_boolean_expression

  ENTITY unary_generic_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF (generic_expression);
      operand : generic_expression;
  END_ENTITY; -- unary_generic_expression

  ENTITY unary_logical_expression
    SUBTYPE OF (logical_expression, unary_generic_expression);
  END_ENTITY; -- unary_logical_expression

  ENTITY unary_numeric_expression
    ABSTRACT SUPERTYPE
    SUBTYPE OF (numeric_expression, unary_generic_expression);
      SELF\unary_generic_expression.operand : numeric_expression;
  END_ENTITY; -- unary_numeric_expression

  ENTITY uncertainty_measure_with_unit
    SUBTYPE OF (measure_with_unit);
      name        : label;
      description : OPTIONAL text;
    WHERE
      wr1: valid_measure_value(SELF\measure_with_unit.value_component);
  END_ENTITY; -- uncertainty_measure_with_unit

  ENTITY union;
      id          : identifier;
      name        : label;
      description : OPTIONAL text;
      operand     : SET [2:?] OF class;
      resultant   : class;
  END_ENTITY; -- union

  ENTITY usage_association
    SUBTYPE OF (action_method_relationship);
      SELF\action_method_relationship.related_method  : information_usage_right;
      SELF\action_method_relationship.relating_method : information_usage_right;
    DERIVE
      relating : information_usage_right := SELF\usage_association.
                    relating_method;
      related  : information_usage_right := SELF\usage_association.
                    related_method;
  END_ENTITY; -- usage_association

  ENTITY value_range
    SUBTYPE OF (compound_representation_item);
    WHERE
      wr1: ((('AP239_PART_DEFINITION_INFORMATION_MIM.' + 
               'SET_REPRESENTATION_ITEM') IN TYPEOF(item_element)) AND 
               value_range_wr1(item_element));
      wr2: value_range_wr2(item_element);
      wr3: value_range_wr3(item_element);
  END_ENTITY; -- value_range

  ENTITY value_representation_item
    SUBTYPE OF (representation_item);
      value_component : measure_value;
    WHERE
      wr1: (SIZEOF(QUERY ( rep <* using_representations(SELF) | (NOT ('AP239_PART_DEFINITION_INFORMATION_MIM.GLOBAL_UNIT_ASSIGNED_CONTEXT' 
               IN TYPEOF(rep.context_of_items))) )) = 0);
  END_ENTITY; -- value_representation_item

  ENTITY variable
    ABSTRACT SUPERTYPE OF (ONEOF (numeric_variable,boolean_variable,
        string_variable))
    SUBTYPE OF (generic_variable);
  END_ENTITY; -- variable

  ENTITY variable_semantics
    ABSTRACT SUPERTYPE;
  END_ENTITY; -- variable_semantics

  ENTITY versioned_action_request;
      id          : identifier;
      version     : label;
      purpose     : text;
      description : OPTIONAL text;
  END_ENTITY; -- versioned_action_request

  ENTITY volume_measure_with_unit
    SUBTYPE OF (measure_with_unit);
    WHERE
      wr1: ('AP239_PART_DEFINITION_INFORMATION_MIM.VOLUME_UNIT' IN TYPEOF(
               SELF\measure_with_unit.unit_component));
  END_ENTITY; -- volume_measure_with_unit

  ENTITY volume_unit
    SUBTYPE OF (named_unit);
    WHERE
      wr1: ((SELF\named_unit.dimensions.length_exponent = 3) AND (SELF\
               named_unit.dimensions.mass_exponent = 0) AND (SELF\
               named_unit.dimensions.time_exponent = 0) AND (SELF\
               named_unit.dimensions.electric_current_exponent = 0) AND (
               SELF\named_unit.dimensions.
               thermodynamic_temperature_exponent = 0) AND (SELF\named_unit
               .dimensions.amount_of_substance_exponent = 0) AND (SELF\
               named_unit.dimensions.luminous_intensity_exponent = 0));
  END_ENTITY; -- volume_unit

  ENTITY xor_expression
    SUBTYPE OF (binary_boolean_expression);
      SELF\binary_generic_expression.operands : LIST [2:2] OF
                                                    boolean_expression;
  END_ENTITY; -- xor_expression

  RULE restrict_language_assignment_per_attribute FOR (attribute_language_assignment);

  WHERE
    wr1: (SIZEOF(QUERY ( ala1 <* attribute_language_assignment | (SIZEOF(
             QUERY ( it <* ala1.items | (SIZEOF(QUERY ( ala2 <* USEDIN(it,'AP239_PART_DEFINITION_INFORMATION_MIM.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS')
              | ((ala1\attribute_classification_assignment.attribute_name =
              ala2\attribute_classification_assignment.attribute_name) AND 
             (ala1\attribute_classification_assignment.assigned_class :=: 
             ala2\attribute_classification_assignment.assigned_class)) )) >
              1) )) > 0) )) = 0);
  END_RULE;

  RULE version_assignments_are_valid FOR (
             applied_identification_assignment);

  WHERE
    wr1: (SIZEOF(QUERY ( aia <* applied_identification_assignment | (NOT 
             version_assignment_is_valid(aia)) )) = 0);

  END_RULE;

  FUNCTION acyclic(
               arg1: generic_expression;
               arg2: SET OF generic_expression
      ): BOOLEAN;

    LOCAL
      result : BOOLEAN;
    END_LOCAL;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.SIMPLE_GENERIC_EXPRESSION' 
        IN TYPEOF(arg1) THEN
      RETURN(TRUE);
    END_IF;
    IF arg1 IN arg2 THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.UNARY_GENERIC_EXPRESSION' IN
         TYPEOF(arg1) THEN
      RETURN(acyclic(arg1\unary_generic_expression.operand,arg2 + [arg1]));
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.BINARY_GENERIC_EXPRESSION' 
        IN TYPEOF(arg1) THEN
      RETURN(acyclic(arg1\binary_generic_expression.operands[1],arg2 + [
          arg1]) AND acyclic(arg1\binary_generic_expression.operands[2],
          arg2 + [arg1]));
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.MULTIPLE_ARITY_GENERIC_EXPRESSION' 
        IN TYPEOF(arg1) THEN
      result := TRUE;
      REPEAT i := 1 TO SIZEOF(arg1\multiple_arity_generic_expression.
          operands) BY 1;
        result := result AND acyclic(arg1\
            multiple_arity_generic_expression.operands[i],arg2 + [arg1]);
      END_REPEAT;
      RETURN(result);
    END_IF;

  END_FUNCTION;

  FUNCTION acyclic_product_category_relationship(
               relation: product_category_relationship;
               children: SET OF product_category
      ): BOOLEAN;

    LOCAL
      x              : SET OF product_category_relationship;
      local_children : SET OF product_category;
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX(children) BY 1;
      IF relation.category :=: children[i] THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    x := bag_to_set(USEDIN(relation.category,
        'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
        'PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY'));
    local_children := children + relation.category;
    IF SIZEOF(x) > 0 THEN
      REPEAT i := 1 TO HIINDEX(x) BY 1;
        IF NOT acyclic_product_category_relationship(x[i],local_children)
             THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_product_category_relationship

  FUNCTION acyclic_product_definition_relationship(
               relation: product_definition_relationship;
               relatives: SET [1:?] OF product_definition;
               specific_relation: STRING
      ): BOOLEAN;

    LOCAL
      x : SET OF product_definition_relationship;
    END_LOCAL;
    IF relation.relating_product_definition IN relatives THEN
      RETURN(FALSE);
    END_IF;
    x := QUERY ( pd <* bag_to_set(USEDIN(relation.
        relating_product_definition,
        'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
        'PRODUCT_DEFINITION_RELATIONSHIP.' + 'RELATED_PRODUCT_DEFINITION'))
         | (specific_relation IN TYPEOF(pd)) );
    REPEAT i := 1 TO HIINDEX(x) BY 1;
      IF NOT acyclic_product_definition_relationship(x[i],relatives + 
          relation.relating_product_definition,specific_relation) THEN
        RETURN(FALSE);
      END_IF;
    END_REPEAT;
    RETURN(TRUE);

  END_FUNCTION; -- acyclic_product_definition_relationship

  FUNCTION bag_to_set(
               the_bag: BAG OF GENERIC:intype
      ): SET OF GENERIC:intype;

    LOCAL
      the_set : SET OF GENERIC:intype := [];
    END_LOCAL;
    IF SIZEOF(the_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag) BY 1;
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);

  END_FUNCTION;

  FUNCTION derive_dimensional_exponents(
               x: unit
      ): dimensional_exponents;

    LOCAL
      result : dimensional_exponents := dimensional_exponents(0,0,0,0,0,0,
                0);
    END_LOCAL;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.DERIVED_UNIT' IN TYPEOF(x)
         THEN
      REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements) BY 1;
        result.length_exponent := result.length_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.length_exponent);
        result.mass_exponent := result.mass_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.mass_exponent);
        result.time_exponent := result.time_exponent + (x.elements[i].
            exponent * x.elements[i].unit.dimensions.time_exponent);
        result.electric_current_exponent := result.
            electric_current_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.electric_current_exponent);
        result.thermodynamic_temperature_exponent := result.
            thermodynamic_temperature_exponent + (x.elements[i].exponent * 
            x.elements[i].unit.dimensions.
            thermodynamic_temperature_exponent);
        result.amount_of_substance_exponent := result.
            amount_of_substance_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.amount_of_substance_exponent);
        result.luminous_intensity_exponent := result.
            luminous_intensity_exponent + (x.elements[i].exponent * x.
            elements[i].unit.dimensions.luminous_intensity_exponent);
      END_REPEAT;
    ELSE
      result := x.dimensions;
    END_IF;
    RETURN(result);

  END_FUNCTION; 

  FUNCTION dimensions_for_si_unit(
               n: si_unit_name
      ): dimensional_exponents;
    CASE n OF
      metre         :         RETURN(dimensional_exponents(1,0,0,0,0,0,0));
      gram          :         RETURN(dimensional_exponents(0,1,0,0,0,0,0));
      second        :         RETURN(dimensional_exponents(0,0,1,0,0,0,0));
      ampere        :         RETURN(dimensional_exponents(0,0,0,1,0,0,0));
      kelvin        :         RETURN(dimensional_exponents(0,0,0,0,1,0,0));
      mole          :         RETURN(dimensional_exponents(0,0,0,0,0,1,0));
      candela       :         RETURN(dimensional_exponents(0,0,0,0,0,0,1));
      radian        :         RETURN(dimensional_exponents(0,0,0,0,0,0,0));
      steradian     :         RETURN(dimensional_exponents(0,0,0,0,0,0,0));
      hertz         :         RETURN(dimensional_exponents(0,0,-1,0,0,0,0));
      newton        :         RETURN(dimensional_exponents(1,1,-2,0,0,0,0));
      pascal        :         RETURN(dimensional_exponents(-1,1,-2,0,0,0,0));
      joule         :         RETURN(dimensional_exponents(2,1,-2,0,0,0,0));
      watt          :         RETURN(dimensional_exponents(2,1,-3,0,0,0,0));
      coulomb       :         RETURN(dimensional_exponents(0,0,1,1,0,0,0));
      volt          :         RETURN(dimensional_exponents(2,1,-3,-1,0,0,0));
      farad         :         RETURN(dimensional_exponents(-2,-1,4,1,0,0,0));
      ohm           :         RETURN(dimensional_exponents(2,1,-3,-2,0,0,0));
      siemens       :         RETURN(dimensional_exponents(-2,-1,3,2,0,0,0));
      weber         :         RETURN(dimensional_exponents(2,1,-2,-1,0,0,0));
      tesla         :         RETURN(dimensional_exponents(0,1,-2,-1,0,0,0));
      henry         :         RETURN(dimensional_exponents(2,1,-2,-2,0,0,0));
      degree_celsius  :         RETURN(dimensional_exponents(0,0,0,0,1,0,0));
      lumen         :         RETURN(dimensional_exponents(0,0,0,0,0,0,1));
      lux           :         RETURN(dimensional_exponents(-2,0,0,0,0,0,1));
      becquerel     :         RETURN(dimensional_exponents(0,0,-1,0,0,0,0));
      gray          :         RETURN(dimensional_exponents(2,0,-2,0,0,0,0));
      sievert       :         RETURN(dimensional_exponents(2,0,-2,0,0,0,0));
      OTHERWISE     :         RETURN(?);
      END_CASE;

  END_FUNCTION; 

  FUNCTION get_description_value(
               obj: description_attribute_select
      ): text;

    LOCAL
      description_bag : BAG OF description_attribute := USEDIN(obj,
                         'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
                         'DESCRIPTION_ATTRIBUTE.' + 'DESCRIBED_ITEM');
    END_LOCAL;
    IF SIZEOF(description_bag) = 1 THEN
      RETURN(description_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; 

  FUNCTION get_id_value(
               obj: id_attribute_select
      ): identifier;

    LOCAL
      id_bag : BAG OF id_attribute := USEDIN(obj,
                'AP239_PART_DEFINITION_INFORMATION_MIM.' + 'ID_ATTRIBUTE.' 
                + 'IDENTIFIED_ITEM');
    END_LOCAL;
    IF SIZEOF(id_bag) = 1 THEN
      RETURN(id_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; 

  FUNCTION get_name_value(
               obj: name_attribute_select
      ): label;

    LOCAL
      name_bag : BAG OF name_attribute := USEDIN(obj,
                  'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
                  'NAME_ATTRIBUTE.' + 'NAMED_ITEM');
    END_LOCAL;
    IF SIZEOF(name_bag) = 1 THEN
      RETURN(name_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; 

  FUNCTION get_role(
               obj: role_select
      ): object_role;

    LOCAL
      role_bag : BAG OF role_association := USEDIN(obj,
                  'AP239_PART_DEFINITION_INFORMATION_MIM.' + 
                  'ROLE_ASSOCIATION.' + 'ITEM_WITH_ROLE');
    END_LOCAL;
    IF SIZEOF(role_bag) = 1 THEN
      RETURN(role_bag[1].role);
    ELSE
      RETURN(?);
    END_IF;

  END_FUNCTION; 

  FUNCTION is_acyclic(
               arg: generic_expression
      ): BOOLEAN;
    RETURN(acyclic(arg,[]));

  END_FUNCTION; -- is_acyclic

  FUNCTION is_int_expr(
               arg: numeric_expression
      ): BOOLEAN;

    LOCAL
      i : INTEGER;
    END_LOCAL;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.INT_LITERAL' IN TYPEOF(arg)
         THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.REAL_LITERAL' IN TYPEOF(arg)
         THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.INT_NUMERIC_VARIABLE' IN 
        TYPEOF(arg) THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.REAL_NUMERIC_VARIABLE' IN 
        TYPEOF(arg) THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.ABS_FUNCTION' IN TYPEOF(arg)
         THEN
      RETURN(is_int_expr(arg\unary_numeric_expression.operand));
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.MINUS_FUNCTION' IN TYPEOF(
        arg) THEN
      RETURN(is_int_expr(arg\unary_numeric_expression.operand));
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.SIN_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.COS_FUNCTION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.TAN_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.ASIN_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.ACOS_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.ATAN_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.EXP_FUNCTION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.LOG_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.LOG2_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.LOG10_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.SQUARE_ROOT_FUNCTION' IN 
        TYPEOF(arg)) THEN
      RETURN(FALSE);
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.PLUS_EXPRESSION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.MULT_EXPRESSION' 
        IN TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.MAXIMUM_FUNCTION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.MINIMUM_FUNCTION' 
        IN TYPEOF(arg)) THEN
      REPEAT i := 1 TO SIZEOF(arg\multiple_arity_numeric_expression.
          operands) BY 1;
        IF NOT is_int_expr(arg\multiple_arity_numeric_expression.operands[
            i]) THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
      RETURN(TRUE);
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.MINUS_EXPRESSION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.POWER_EXPRESSION' IN TYPEOF(
        arg)) THEN
      RETURN(is_int_expr(arg\binary_numeric_expression.operands[1]) AND 
          is_int_expr(arg\binary_numeric_expression.operands[2]));
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.DIV_EXPRESSION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.MOD_EXPRESSION' IN
         TYPEOF(arg)) THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.SLASH_EXPRESSION' IN TYPEOF(
        arg) THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.LENGTH_FUNCTION' IN TYPEOF(
        arg) THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.VALUE_FUNCTION' IN TYPEOF(
        arg) THEN
      IF 'AP239_PART_DEFINITION_INFORMATION_MIM.INT_VALUE_FUNCTION' IN 
          TYPEOF(arg) THEN
        RETURN(TRUE);
      ELSE
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.INTEGER_DEFINED_FUNCTION' IN
         TYPEOF(arg) THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.REAL_DEFINED_FUNCTION' IN 
        TYPEOF(arg) THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.BOOLEAN_DEFINED_FUNCTION' IN
         TYPEOF(arg) THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_DEFINED_FUNCTION' IN 
        TYPEOF(arg) THEN
      RETURN(FALSE);
    END_IF;
    RETURN(FALSE);

  END_FUNCTION; 

  FUNCTION is_sql_mappable(
               arg: expression
      ): BOOLEAN;

    LOCAL
      i : INTEGER;
    END_LOCAL;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.SIMPLE_NUMERIC_EXPRESSION' 
        IN TYPEOF(arg) THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.SQL_MAPPABLE_DEFINED_FUNCTION' 
        IN TYPEOF(arg) THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.MINUS_FUNCTION' IN TYPEOF(
        arg) THEN
      RETURN(is_sql_mappable(arg\unary_numeric_expression.operand));
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.ABS_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.SIN_FUNCTION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.COS_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.TAN_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.ASIN_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.ACOS_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.ATAN_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.EXP_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.LOG_FUNCTION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.LOG2_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.LOG10_FUNCTION' IN TYPEOF(
        arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.SQUARE_ROOT_FUNCTION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.VALUE_FUNCTION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.LENGTH_FUNCTION' 
        IN TYPEOF(arg)) THEN
      RETURN(FALSE);
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.PLUS_EXPRESSION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.MULT_EXPRESSION' 
        IN TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.MAXIMUM_FUNCTION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.MINIMUM_FUNCTION' 
        IN TYPEOF(arg)) THEN
      REPEAT i := 1 TO SIZEOF(arg\multiple_arity_numeric_expression.
          operands) BY 1;
        IF NOT is_sql_mappable(arg\multiple_arity_numeric_expression.
            operands[i]) THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
      RETURN(TRUE);
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.MINUS_EXPRESSION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.SLASH_EXPRESSION' IN TYPEOF(
        arg)) THEN
      RETURN(is_sql_mappable(arg\binary_numeric_expression.operands[1]) 
          AND is_sql_mappable(arg\binary_numeric_expression.operands[2]));
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.DIV_EXPRESSION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.MOD_EXPRESSION' IN
         TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.POWER_EXPRESSION' IN TYPEOF(
        arg)) THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.SIMPLE_BOOLEAN_EXPRESSION' 
        IN TYPEOF(arg) THEN
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.NOT_EXPRESSION' IN TYPEOF(
        arg) THEN
      RETURN(is_sql_mappable(arg\unary_generic_expression.operand));
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.ODD_FUNCTION' IN TYPEOF(arg)) 
        OR ('AP239_PART_DEFINITION_INFORMATION_MIM.XOR_EXPRESSION' IN 
        TYPEOF(arg)) THEN
      RETURN(FALSE);
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.AND_EXPRESSION' IN TYPEOF(
        arg)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.OR_EXPRESSION' IN 
        TYPEOF(arg)) THEN
      REPEAT i := 1 TO SIZEOF(arg\multiple_arity_boolean_expression.
          operands) BY 1;
        IF NOT is_sql_mappable(arg\multiple_arity_boolean_expression.
            operands[i]) THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
      RETURN(TRUE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.EQUALS_EXPRESSION' IN 
        TYPEOF(arg) THEN
      RETURN(is_sql_mappable(arg\binary_generic_expression.operands[1]) 
          AND is_sql_mappable(arg\binary_generic_expression.operands[2]));
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.COMPARISON_EQUAL' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.COMPARISON_GREATER' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.COMPARISON_GREATER_EQUAL' IN
         TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.COMPARISON_LESS' IN TYPEOF(
        arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.COMPARISON_LESS_EQUAL' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.COMPARISON_NOT_EQUAL' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.LIKE_EXPRESSION' IN TYPEOF(
        arg)) THEN
      RETURN(is_sql_mappable(arg\comparison_expression.operands[1]) AND 
          is_sql_mappable(arg\comparison_expression.operands[2]));
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.INTERVAL_EXPRESSION' IN 
        TYPEOF(arg) THEN
      RETURN(is_sql_mappable(arg\interval_expression.interval_low) AND 
          is_sql_mappable(arg\interval_expression.interval_high) AND 
          is_sql_mappable(arg\interval_expression.interval_item));
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.NUMERIC_DEFINED_FUNCTION' 
        IN TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.BOOLEAN_DEFINED_FUNCTION' IN
         TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.STRING_DEFINED_FUNCTION' IN 
        TYPEOF(arg)) THEN
      RETURN(FALSE);
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.SIMPLE_STRING_EXPRESSION' IN
         TYPEOF(arg) THEN
      RETURN(TRUE);
    END_IF;
    IF ('AP239_PART_DEFINITION_INFORMATION_MIM.INDEX_EXPRESSION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.SUBSTRING_EXPRESSION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.CONCAT_EXPRESSION' IN 
        TYPEOF(arg)) OR (
        'AP239_PART_DEFINITION_INFORMATION_MIM.FORMAT_FUNCTION' IN TYPEOF(
        arg)) THEN
      RETURN(FALSE);
    END_IF;
    RETURN(FALSE);

  END_FUNCTION;

  FUNCTION leap_year(
               year: year_number
      ): BOOLEAN;
    IF (((year MOD 4) = 0) AND ((year MOD 100) <> 0)) OR ((year MOD 400) =
         0) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;

  END_FUNCTION; 

  FUNCTION using_items(
               item: founded_item_select;
               checked_items: SET OF founded_item_select
      ): SET OF founded_item_select;

    LOCAL
      next_items      : SET OF founded_item_select;
      new_check_items : SET OF founded_item_select;
      result_items    : SET OF founded_item_select;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    next_items := QUERY ( z <* bag_to_set(USEDIN(item,'')) | ((
        'AP239_PART_DEFINITION_INFORMATION_MIM.REPRESENTATION_ITEM' IN 
        TYPEOF(z)) OR ('AP239_PART_DEFINITION_INFORMATION_MIM.FOUNDED_ITEM' 
        IN TYPEOF(z))) );
    IF SIZEOF(next_items) > 0 THEN
      REPEAT i := 1 TO HIINDEX(next_items) BY 1;
        IF NOT (next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] + using_items(
              next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(result_items);

  END_FUNCTION; 

  FUNCTION using_representations(
               item: founded_item_select
      ): SET OF representation;

    LOCAL
      results            : SET OF representation;
      intermediate_items : SET OF founded_item_select;
      result_bag         : BAG OF representation;
    END_LOCAL;
    results := [];
    result_bag := USEDIN(item,
        'AP239_PART_DEFINITION_INFORMATION_MIM.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag) BY 1;
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    intermediate_items := using_items(item,[]);
    IF SIZEOF(intermediate_items) > 0 THEN
      REPEAT i := 1 TO HIINDEX(intermediate_items) BY 1;
        result_bag := USEDIN(intermediate_items[i],
            'AP239_PART_DEFINITION_INFORMATION_MIM.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) > 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag) BY 1;
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN(results);

  END_FUNCTION; 

  FUNCTION valid_calendar_date(
               date: calendar_date
      ): LOGICAL;
    CASE date.month_component OF
      1 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      2 :         BEGIN
          IF leap_year(date.year_component) THEN
            RETURN((1 <= date.day_component) AND (date.day_component <= 29));
          ELSE
            RETURN((1 <= date.day_component) AND (date.day_component <= 28));
          END_IF;
        END;
      3 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      4 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 30));
      5 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      6 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 30));
      7 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      8 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 31));
      9 :         RETURN((1 <= date.day_component) AND (date.day_component 
            <= 30));
      10  :         RETURN((1 <= date.day_component) AND (date.
            day_component <= 31));
      11  :         RETURN((1 <= date.day_component) AND (date.
            day_component <= 30));
      12  :         RETURN((1 <= date.day_component) AND (date.
            day_component <= 31));
      END_CASE;
    RETURN(FALSE);

  END_FUNCTION; 

  FUNCTION valid_measure_value(
               m: measure_value
      ): BOOLEAN;
    IF 'REAL' IN TYPEOF(m) THEN
      RETURN(m > 0);
    ELSE
      IF 'INTEGER' IN TYPEOF(m) THEN
        RETURN(m > 0);
      ELSE
        RETURN(TRUE);
      END_IF;
    END_IF;

  END_FUNCTION; 

  FUNCTION valid_time(
               time: local_time
      ): BOOLEAN;
    IF EXISTS(time.second_component) THEN
      RETURN(EXISTS(time.minute_component));
    ELSE
      RETURN(TRUE);
    END_IF;

  END_FUNCTION; 

  FUNCTION valid_units(
               m: measure_with_unit
      ): BOOLEAN;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.LENGTH_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(1,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.MASS_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,1,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.TIME_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,1,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.ELECTRIC_CURRENT_MEASURE' IN
         TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,1,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.THERMODYNAMIC_TEMPERATURE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,1,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.CELSIUS_TEMPERATURE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,1,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.AMOUNT_OF_SUBSTANCE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,1,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.LUMINOUS_INTENSITY_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,1) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.PLANE_ANGLE_MEASURE' IN 
        TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.SOLID_ANGLE_MEASURE' IN 
        TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.AREA_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(2,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.VOLUME_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(3,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.RATIO_MEASURE' IN TYPEOF(m.
        value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.POSITIVE_LENGTH_MEASURE' IN 
        TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(1,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PART_DEFINITION_INFORMATION_MIM.POSITIVE_PLANE_ANGLE_MEASURE' 
        IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
          dimensional_exponents(0,0,0,0,0,0,0) THEN
        RETURN(FALSE);
      END_IF;
    END_IF;
    RETURN(TRUE);

  END_FUNCTION; 

  FUNCTION value_range_wr1(
               agg: AGGREGATE OF representation_item
      ): BOOLEAN;
    BEGIN
      IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY ( i1 <* agg | ('AP239_PART_DEFINITION_INFORMATION_MIM.MEASURE_REPRESENTATION_ITEM' 
          IN TYPEOF(i1)) )) = 2) OR (SIZEOF(QUERY ( i2 <* agg | ('AP239_PART_DEFINITION_INFORMATION_MIM.VALUE_REPRESENTATION_ITEM' 
          IN TYPEOF(i2)) )) = 2)) THEN
        RETURN(TRUE);
      ELSE
        RETURN(FALSE);
      END_IF;
    END;

  END_FUNCTION; 

  FUNCTION value_range_wr2(
               agg: AGGREGATE OF representation_item
      ): BOOLEAN;
    BEGIN
      IF (SIZEOF(QUERY ( i <* agg | (i.name = 'upper limit') )) = 1) AND (
          SIZEOF(QUERY ( i <* agg | (i.name = 'lower limit') )) = 1) THEN
        RETURN(TRUE);
      ELSE
        RETURN(FALSE);
      END_IF;
    END;

  END_FUNCTION; 

  FUNCTION value_range_wr3(
               agg: AGGREGATE OF representation_item
      ): BOOLEAN;
    BEGIN
      IF SIZEOF(QUERY ( i1 <* agg | (('AP239_PART_DEFINITION_INFORMATION_MIM.MEASURE_REPRESENTATION_ITEM' 
          IN TYPEOF(i1)) AND (SIZEOF(QUERY ( i2 <* agg | (('AP239_PART_DEFINITION_INFORMATION_MIM.MEASURE_REPRESENTATION_ITEM' 
          IN TYPEOF(i2)) AND (i1 :<>: i2) AND (i1\measure_with_unit.
          unit_component :=: i2\measure_with_unit.unit_component)) )) = 1)) )) 
          = 2 THEN
        RETURN(TRUE);
      ELSE
        RETURN(FALSE);
      END_IF;
    END;

  END_FUNCTION; 

  FUNCTION version_assignment_is_valid(
               aia: applied_identification_assignment
      ): BOOLEAN;

    LOCAL
      item : identification_item;
      role : identification_role;
    END_LOCAL;
    role := aia.role;
    IF role.name = 'version' THEN
      REPEAT i := LOINDEX(aia.items) TO HIINDEX(aia.items) BY 1;
        item := aia.items[i];
        IF SIZEOF(['AP239_PART_DEFINITION_INFORMATION_MIM.' + 
            'VERSIONABLE_ITEM'] * TYPEOF(item)) = 0 THEN
          RETURN(FALSE);
        END_IF;
      END_REPEAT;
      RETURN(TRUE);
    ELSE
      RETURN(TRUE);
    END_IF;

  END_FUNCTION; 

END_SCHEMA; 
