<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.41 2003/08/21 09:47:10 robbod Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->

<!-- No long forms until SHTOLO works
   wg.number.arm_lf="1224"
   wg.number.mim_lf="1225"
-->
<module
   name="ap239_product_definition_information"
   part="1292"
   version="1"
   sc4.working_group="3"
   wg.number=""
   wg.number.arm=""
   wg.number.mim=""

   wg.number.supersedes="1179"
   wg.number.arm.supersedes="1180"
   wg.number.mim.supersedes="1181"

   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="TS"
   language="E"
   publication.year="2003"
   published="y"
   rcs.date="$Date: 2003/08/21 09:47:10 $"
   rcs.revision="$Revision: 1.41 $"
   development.folder="dvlp">

 <keywords>
   module, product definition information, product structure, 
   product breakdown, document management
 </keywords>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="plcs.projlead"/>
   <editor ref="robbodington"/>
 </contacts>

 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of information that is the authoritative source for
     configuration definition information, it documents the product attributes
     and is the placeholder for the product requirements.  
   </p>
   <!--
   <note>
     This module is being developed as an Implementation module for ISO 10303-239.  
   </note>
   -->

   <p>
     The following definitions and diagram show the relationship of product
     definition information, product operational information and how together
     they form product configuration information.
   </p>
   <p>
     <b>Product definition information</b>
     defines the product requirements, documents the product attributes and
     is the authoritative source for configuration definition and control.
     It provides the technical basis for actions taken during all 
     product life cycle phases and for product validation and product
     operational information.  
   </p>
   <p>
     <b>Product operational information</b>
     is derived from the product definition information. It consists of
     procedures and technical information needed by operators and support
     personnel to operate, maintain and dispose of the product including
     operating procedures, security procedures, maintenance procedures, spare
     parts lists, and disposal methods. 
   </p>

   <figure id="f1" number="1">
     <title>Product Configuration Information</title>
     <img src="Product_Definition_Information_Diagram.jpg"/>
   </figure>

   <p>
     This part of ISO 10303 specifies an application module for the: 
   </p>
   <ul>
     <li>
       the representation of parts, their versions, their definitions, and
       their management information, such as dates, that are assigned to them;
     </li>
     <li>
    the   representation of assignments of an identifier and alias identifications to product data; 
     </li>
     <li>
     the  representation of characterization views of a version of a part; 
     </li>
     <li>
     the  representation of the data that identify a part and the
       categories of parts it belongs to;  
     </li>
     <li>
the       representation of relationships between versions of parts; 
     </li>
     <li>the
       representation of relationships between parts;
     </li>
     <li>the
       representation of context-dependent relationships between definitions of part versions;
     </li>
     <li>the
       representation of the replacement of a part by another; 
     </li>


     <li>the
       representation of the composition of an assembly as parent-child
       relationships between views on parts; 
     </li>
     <li>the
       representation of the shape of an assembly as the composition of the
       shape representation of its components; 
     </li>
     <li>the
       association of valued properties to a part or to an assembly; 
     </li>
     <li>the
       association of documentation to a part or to an assembly; 
     </li>
     <li>the
       identification of positions within an assembly of parts to which component parts may be attached; 
     </li>
     <li>the
       identification of parts that are attached to identified positions within an assembly; 
     </li>
     <li>
       the identification of a breakdown of a product or product_as_individual; 
     </li>
     <li>
       the identification of the elements that comprise a breakdown; 
     </li>
     <li>
       the identification of parent-child relationships between breakdown elements; 
     </li>
     <li>
       the identification of relationships between elements in different breakdowns;
     </li>

     <li>the
       representation and classification of documents and document
       information that may apply to part definition information;  
     </li>
     <li>the
       representation of properties of objects, their values and types, and
       classifications;  
     </li>
     <li>the
       representation of information that records the identification of an
       existing or potential future artifact - an actual product whose properties
       can only be known by observation or by derivation from observations;  
     </li>
     <li>the
       representation of interfaces between products; 
     </li>
     <li>the
       representation of the life cycle phase of existing interfaces
       between actual products (as realized), and includes planned interfaces
       between planned products; 
     </li>
     <li>the
       representation of relationships between requirements and items to
       which they are assigned, and between requirements and the items which are
       their source;  
     </li>
     <li>the
       representation of the information that identify a requirement and versions of requirements; 
     </li>
     <li>the
       representation of characterization views of a requirement version; 
     </li>
     <li>the
       representation of relationships between requirements which are
       expressed as relationships between requirement view definitions, for
       example, the relationships are dependent on the version of the requirement
       and the view of that version;  
     </li>
     <li>the
       representation of a type of state and its assignment to product data; 
     </li>
     <li>the
       representation of an observed state and  its assignment to product data; 
     </li>
     <li>the
       identification of the configuration of a product for a given product concept;
     </li>
     <li>the
       specification of effectivity constraints applied to configuration of a product.
     </li>
   </ul>
   <!-- repetition
   <p>
     This part of ISO 10303 describes the product's
     performance, functional, and physical attributes. It includes requirements
     information and provides the technical basis for actions taken during all
     product life cycle phases and for product validation.
   </p> -->
   <p>
     This module combines the functionality of the following modules to
     provide the capability to classify and represent product definition
     information:
   </p>

   <ul>
     <li>
       <module_ref linkend="ap239_part_definition_information:introduction">
         Ap239 part definition information
       </module_ref>
         (ISO 10303-1293);
     </li>

     <!--     
     <li>
       <module_ref linkend="assembly_structure:introduction">
         Assembly structure
       </module_ref> 
       (ISO 10303-1026);
     </li> -->

<li>
       <module_ref linkend="product_structure:introduction">
         Product structure
       </module_ref> 
       (ISO 10303-1134);
     </li>
     
     <li>
       <module_ref linkend="part_definition_relationship:introduction">
           Part definition relationship
       </module_ref> 
       (ISO 10303-1055);
     </li>
     
     <li>
       <module_ref linkend="product_replacement:introduction">
           Product replacement
       </module_ref> 
       (ISO 10303-1046);
     </li>
     
     <li>
       <module_ref linkend="product_view_definition_relationship:introduction">
         Product view definition relationship
       </module_ref> 
       (ISO 10303-1041);
     </li>     
     
     <li>
       <module_ref linkend="attachment_slot:introduction">
         Attachment slot
       </module_ref> 
       (ISO 10303-1250);
     </li>
   
     <li>
       <module_ref linkend="product_breakdown:introduction">
         Product breakdown 
       </module_ref>
       (ISO 10303-1248);
     </li>
     
     <li>
       <module_ref linkend="system_breakdown:introduction">
         System breakdown 
       </module_ref>
         (ISO 10303-1214);
     </li>
     
     <li>
       <module_ref linkend="functional_breakdown:introduction">
         Functional breakdown 
       </module_ref>
       (ISO 10303-1216);
     </li>
     
     <li>
       <module_ref linkend="physical_breakdown:introduction">
         Physical breakdown
       </module_ref> 
       (ISO 10303-1215);
     </li>

     
     <li>
       <module_ref linkend="zonal_breakdown:introduction">
         Zonal breakdown
       </module_ref> 
       (ISO 10303-1217);
     </li>

     <li>
       <module_ref linkend="hybrid_breakdown:introduction">
         Hybrid breakdown
       </module_ref> 
       (ISO 10303-1218);
     </li>
     
     <li>
       <module_ref linkend="configuration_item:introduction">
         Configuration item
       </module_ref> 
       (ISO 10303-1056);
     </li>

     <li>
       <module_ref linkend="configuration_effectivity:introduction">
         Configuration effectivity
       </module_ref> 
       (ISO 10303-1058).
     </li>

   </ul>

   <p></p>
       <p>
         The 
         <module_ref linkend="ap239_part_definition_information:introduction"/>
         module represents the product's
         performance, functional, and physical attributes. It includes requirements
         information and provides the technical basis for actions taken during all
         product life cycle phases and for product validation;
       </p>
       <p>
         The 
         <module_ref linkend="product_structure:introduction"/>
         module specifies the representation of assemblies of parts, of their
         properties, of their shape and of their associated documentation;
       </p>
       <p>
         The 
         <module_ref linkend="part_definition_relationship:introduction"/>
         module specifies the representation of relationships between definitions of
         parts; 
       </p>
       <p>
         The 
         <module_ref linkend="product_replacement:introduction"/>
         module specifies the representation of the replacement of a product by another; 
       </p>
       <p>
         The 
         <module_ref linkend="product_view_definition_relationship:introduction"/>
         module specifies the representation of context-dependent
         relationships between definitions of product versions; 
       </p>
       <p>
         The 
         <module_ref linkend="attachment_slot:introduction"/>
         module specifies the representation of data that tracks selected parts as an assembly and to
         note when some of those parts are not installed. A slot represents the
         position in which a part is or can be attached to an assembly, when it is
         necessary to record the history of usage of that slot;
       </p>
       <p>
         The 
         <module_ref linkend="product_breakdown:introduction"/>
         module specifies the representation of various breakdowns of products. A breakdown is a
         partitioning of a product into a set of related elements to support
         engineering, analysis and other activities that may be performed in
         relation to the product. These breakdowns are explicit, parent-child views
         that comprise the product elements;
       </p>
       <p>
         The 
         <module_ref linkend="system_breakdown:introduction"/>
         module specifies the representation of various breakdowns of a
         systems. A system breakdown is a partitioning of a system into a
         set of related elements to support engineering, analysis and other
         activities that may be performed in relation to the system. These
         breakdowns are explicit, parent-child views 
         that comprise the system elements; 
       </p>
       <p>
         The 
         <module_ref linkend="functional_breakdown:introduction"/>
         module specifies the representation of various functional breakdowns of products. A
         functional breakdown is a partitioning of a product into a set of related
         functional elements to support engineering, analysis and other activities
         that may be performed in relation to the product. These breakdowns are
         explicit, parent-child views that comprise the functional elements; 
       </p>
       <p>
         The 
         <module_ref linkend="physical_breakdown:introduction"/>
         module specifies the representation of various physical breakdowns of products. A
         physical breakdown is a partitioning of a physical view of a product into a
         set of related elements to support engineering, analysis and other
         activities that may be performed in relation to the product. These
         breakdowns are explicit, parent-child views that comprise the physical
         elements.
       </p>
       <p>
         The 
         <module_ref linkend="zonal_breakdown:introduction"/>
         module specifies the representation of various zonal breakdowns of products. A zonal
         breakdown is a partitioning of a product into a set of related zonal
         elements to support engineering, analysis and other activities that may be
         performed in relation to the product. These breakdowns are explicit,
         parent-child views that comprise the zonal elements; 
       </p>
       <p>
         The 
         <module_ref linkend="hybrid_breakdown:introduction"/>
         module specifies the representation of various hybrid breakdowns of products. A hybrid
         breakdown is a non-specific partitioning of a product into a set of related
         elements to support engineering, analysis and other activities that may be
         performed in relation to the product. These breakdowns are explicit,
         parent-child views that comprise the hybrid elements;
       </p>
       <p>
         The 
         <module_ref linkend="configuration_item:introduction"/> 
         module specifies the representation of configurations of a product
         for a given product concept;
       </p>
       <p>
         The 
         <module_ref linkend="configuration_effectivity:introduction"/>
         module specifies effectivity constraints applied to configurations
         of a product.
       </p>
   </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>
     the representation of parts, their versions, their definitions, and their
     management information, such as dates, that are assigned to them;  
   </li>

   <li>
     the representation of assignments of an identifier and alias identifications to parts and their versions; 
   </li>
   <li>
     the representation of characterization views of a version of a part; 
   </li>
   <li>the
     representation of the data that identify a product and the categories of products it belongs to; 
   </li>
   <li>the
     representation of relationships between versions of products; 
   </li>
   <li>the
     representation of context-dependent relationships between definitions of product versions; 
   </li>

   <li>the
     representation of the composition of an assembly as parent-child
     relationships between views on products; 
   </li>
   <li>the
     representation of the shape of an assembly as the composition of the
     shape representation of its components; 
   </li>
   <li>the
     association of valued properties to a part or to an assembly; 
   </li>
   <li>the
     association of documentation to a part or to an assembly;
   </li>

   <li>the
     identification of positions within an assembly of parts to which
     component parts may be attached;  
   </li>
   <li>the
     identification of parts that are attached to identified positions
     within an assembly;     
   </li>
   <li>
     the identification of a breakdown of a product or product_as_individual; 
   </li>
   <li>
     the identification of the elements that comprise a breakdown; 
   </li>
   <li>
     the identification of parent-child relationships between breakdown elements; 
   </li>
   <li>
     the identification of relationships between elements in different breakdowns; 
   </li>
   <li>
the     representation of the replacement of a product by another; 
   </li>
   <li>the
     representation and classification of documents and document
     information that may apply to part definition information;  
   </li>
   <li>the
     representation of properties of objects, their values and types, and classifications; 
   </li>
   <li>the
     representation of information that records the identification of an
     existing or potential future artifact - an actual product whose properties
     can only be known by observation or by derivation from observations;  
   </li>
   <li>the
     representation of interfaces between products; 
   </li>
   <li>the
     representation of the life cycle phase of existing interfaces between
     actual products (as realized), and includes planned interfaces between
     planned products;  
   </li>
   <li>the
     representation of relationships between requirements and items to
     which they are assigned, and between requirements and the items which are
     their source;  
   </li>
   <li>the
     representation of the information that identify a requirement and
     versions of requirements;  
   </li>
   <li>the
     representation of characterization views of a requirement version; 
   </li>
   <li>the
     representation of relationships between requirements which are expressed as
     relationships between requirement view definitions;  
   </li>
   <li>the
     representation of a type of state; 
   </li>
   <li>the
     representation of an observed state; 
   </li>
   <li>the
     identification of the configuration of a product for a given product concept;
   </li>
   <li>the
     specification of effectivity constraints applied to configuration of a product.
   </li>   
 </inscope>
 
 <!-- Items out of scope -->
 <outscope>
   <li>the
     representation of any work or activities to be performed on or by product data; 
   </li>
   <li>the
     specification of the location of parts; 
   </li>
   <li>the
     contents of an external class library; 
   </li>
   <li>the
     definitions of classes; 
   </li>
   <li>the
     assignments of particular properties to particular classes; 
   </li>
   <li>the
     description and structure of the requirement definition;
   </li>
   <li>the
     representation of any use of a requirement; 
   </li>
   <li>the
     behaviour or history of product data capable of having individual state; 
   </li>
   <li>the
     behaviour or history of product data capable of having state;
   </li>
   <li>the
     process of translation that results in a translation of a particular text.
   </li>

</outscope>



 <normrefs>
   <normref.inc normref="ref10303-41.e3"/>
   <normref.inc normref="ref10303-44.2000"/>
   <normref.inc normref="ref10303-56.-"/>
   <normref.inc module.name="product_as_individual">
     <term.ref linkend="product_actual"/>
     <term.ref linkend="product_planned"/>
     <term.ref linkend="product_as_individual"/>
   </normref.inc>
   <normref.inc module.name="external_class">
     <term.ref linkend="ecl"/>
   </normref.inc>
   <normref.inc module.name="part_and_version_identification">
     <term.ref linkend="part"/>
     <term.ref linkend="RM"/>
   </normref.inc>
   <normref.inc module.name="attachment_slot">
     <term.ref linkend="attachment_slot"/>
   </normref.inc>

   <normref.inc module.name="product_breakdown">
     <term.ref linkend="breakdown"/>
   </normref.inc>
   <normref.inc module.name="external_class">
     <term.ref linkend="cl"/>
     <term.ref linkend="ecl"/>
     <term.ref linkend="reference_data"/>
     <term.ref linkend="rdl"/>
   </normref.inc>
  <normref.inc module.name="document_and_version_identification">
     <term.ref linkend="document"/>
  </normref.inc>

 <normref.inc module.name="envelope">
     <term.ref linkend="envelope"/>
  </normref.inc>

   <normref.inc module.name="interface">
     <term.ref linkend="interface"/>
   </normref.inc>
   <normref.inc module.name="message">
     <term.ref linkend="message"/>
   </normref.inc>
  <normref.inc module.name="selected_item">
     <term.ref linkend="SI"/>
  </normref.inc>
  <normref.inc module.name="information_rights">
     <term.ref linkend="information_right"/>
  </normref.inc>

  <normref.inc module.name="interface_lifecycle">
     <term.ref linkend="life_cycle"/>
  </normref.inc>
  <normref.inc module.name="product_occurrence">
     <term.ref linkend="product_structure"/>
  </normref.inc>
  <normref.inc module.name="product_identification">
     <term.ref linkend="revision"/>
  </normref.inc>
  <normref.inc module.name="independent_property_definition">
     <term.ref linkend="independent_property_definition"/>
  </normref.inc>
 </normrefs>

 <definition>
   <term id="PRDI">product definition information</term>
   <def>
     the definition of the product requirements and attributes
     <note> 
       Product definition information is the authoritative source for
       configuration definition. 
     </note>
     <!--
     Product Definition Information defines the product requirements,
     documents the product attributes and is the authoritative source for
     configuration definition.
          -->
     <!--
     Product Definition Information describes the product's performance, functional, and 
     physical attributes including requirements information, for example, specifications, 
     requirements documents, and design information, for example, drawings, part models, software 
     listings and design descriptions.   It provides the technical basis for actions taken 
     during all product life cycle phases and for product validation and Product 
     Operational Information.
          -->
   </def>
 </definition>

 <definition>
   <term id="PROI">product operational information</term>
   <def>
     the procedures and technical information derived from the product
     definition information for use by operators and support personnel in
     the operation, maintenance and disposal of the product
     <note>
       Product operational information includes operating procedures,
       security procedures, maintenance procedures, spare parts lists, and
       disposal methods which, like the product definition information,  are
       subject to configuration change management. 
     </note>
     <!--
     Product Operational Information is derived from the Product Definition Information. 
     It consists of procedures and technical information needed by operators and support 
     personnel to operate, maintain and dispose of the product including operating 
     procedures, security procedures, maintenance procedures, spare parts lists, and 
     disposal methods.  Product operational information also includes field data that 
     can be fed back into the product design/improvement and the Status Accounting 
     processes.    
          -->
   </def>
 </definition>

 <definition>
   <term id="PRCI">product configuration information</term>
   <def>
     the combination of product definition and operational information
   </def>
 </definition>

 <definition>
   <term id="PROI">configuration status accounting </term>
   <def>
     the process of managing the capture and maintenance of product
     configuration information necessary to account for the  
     configuration of a product throughout the products life cycle
   </def>
 </definition>

 <abbreviations>
   <abbreviation id="PRDI">
     <acronym>prdi</acronym>
     <term>product definition information</term>
   </abbreviation>
 </abbreviations>



 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->
   <!-- Units of functionality -->
   <uof name="-">
     <description>
     </description>
     <uof.ae entity="-"/>
   </uof>

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
     <imgfile file="armexpg5.xml"/>
     <imgfile file="armexpg6.xml"/>
     <imgfile file="armexpg7.xml"/>
     <imgfile file="armexpg8.xml"/>
     <imgfile file="armexpg9.xml"/>
     <imgfile file="armexpg10.xml"/>
     <imgfile file="armexpg11.xml"/>
     <imgfile file="armexpg12.xml"/>
     <imgfile file="armexpg13.xml"/>
     <imgfile file="armexpg14.xml"/>
     <imgfile file="armexpg15.xml"/>
     <imgfile file="armexpg16.xml"/>
     <imgfile file="armexpg17.xml"/>
     <imgfile file="armexpg18.xml"/>
     <imgfile file="armexpg19.xml"/>
     <imgfile file="armexpg20.xml"/>
     <imgfile file="armexpg21.xml"/>
     <imgfile file="armexpg22.xml"/>
   </express-g>
 </arm>

 <!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
 <!-- Commented out as the e2toe1SHTOLO tools are not yet adequate 
 <arm_lf>
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>
-->

 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
<ae entity="Applied_information_usage_right" original_module="information_rights">

  <aa attribute="item" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
      ir_usage_item *&gt; ap239_prdi_ir_usage_item
      ap239_prdi_ir_usage_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
      ir_usage_item *&gt; ap239_prdi_ir_usage_item
      ap239_prdi_ir_usage_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
      ir_usage_item *&gt; ap239_prdi_ir_usage_item
      ap239_prdi_ir_usage_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
      ir_usage_item *&gt; ap239_prdi_ir_usage_item
      ap239_prdi_ir_usage_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
      ir_usage_item *&gt; ap239_prdi_ir_usage_item
      ap239_prdi_ir_usage_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
      ir_usage_item *&gt; ap239_prdi_ir_usage_item
      {ap239_prdi_ir_usage_item = breakdown_element_group_assignment
      ap239_prdi_ir_usage_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
         ir_usage_item *&gt; ap239_prdi_ir_usage_item
         ap239_prdi_ir_usage_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
         ir_usage_item *&gt; ap239_prdi_ir_usage_item
         ap239_prdi_ir_usage_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
         ir_usage_item *&gt; ap239_prdi_ir_usage_item
         ap239_prdi_ir_usage_item = product_definition
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
         ir_usage_item *&gt; ap239_prdi_ir_usage_item
         ap239_prdi_ir_usage_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
         ir_usage_item *&gt; ap239_prdi_ir_usage_item
         ap239_prdi_ir_usage_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
         ir_usage_item *&gt; ap239_prdi_ir_usage_item
         ap239_prdi_ir_usage_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="information_usage_right_item">
         ir_usage_item *&gt; ap239_prdi_ir_usage_item
         ap239_prdi_ir_usage_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

<ae entity="Applied_state_definition_assignment" original_module= "state_definition">

  <aa attribute="assigned_to" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
      state_type_of_item *&gt; ap239_prdi_state_type_of_item
      ap239_prdi_state_type_of_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
      state_type_of_item *&gt; ap239_prdi_state_type_of_item
      ap239_prdi_state_type_of_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
      state_type_of_item *&gt; ap239_prdi_state_type_of_item
      ap239_prdi_state_type_of_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
      state_type_of_item *&gt; ap239_prdi_state_type_of_item
      {ap239_prdi_state_type_of_item = breakdown_element_group_assignment
      ap239_prdi_state_type_of_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Product_in_slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = product_in_slot
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
      state_type_of_item *&gt; ap239_prdi_state_type_of_item
      ap239_prdi_state_type_of_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;= product_category
      product_category
      product_category.name='slot'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
      state_type_of_item *&gt; ap239_prdi_state_type_of_item
      ap239_prdi_state_type_of_item = product_definition
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
      state_type_of_item *&gt; ap239_prdi_state_type_of_item
      ap239_prdi_state_type_of_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_definition_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>


<ae entity="Applied_state_assignment" original_module= "state_observed">

  <aa attribute="assigned_to" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
      state_of_item *&gt; ap239_prdi_state_of_item
      ap239_prdi_state_of_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
      state_of_item *&gt; ap239_prdi_state_of_item
      ap239_prdi_state_of_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
      state_of_item *&gt; ap239_prdi_state_of_item
      {ap239_prdi_state_of_item = breakdown_element_group_assignment
      ap239_prdi_state_of_item = product_definition_group_assignment}  
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Product_in_slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_type_of_item *&gt; ap239_prdi_state_type_of_item
        ap239_prdi_state_type_of_item = product_in_slot
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
      state_of_item *&gt; ap239_prdi_state_of_item
      ap239_prdi_state_of_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;= product_category
      product_category
      product_category.name='slot'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = product_definition
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
      state_of_item *&gt; ap239_prdi_state_of_item
      ap239_prdi_state_of_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="state_of_item">
        state_of_item *&gt; ap239_prdi_state_of_item
        ap239_prdi_state_of_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

  <ae entity="Approval_assignment" original_module= "approval">

    <aa attribute="items" assertion_to="Alternate_product_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
      approval_item *> ap239_prdi_approval_item 
      ap239_prdi_approval_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
      approval_item *> ap239_prdi_approval_item 
      ap239_prdi_approval_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
      approval_item *&gt; ap239_prdi_approval_item 
      ap239_prdi_approval_item = product_definition
      {product_definition
      product_definition.frame_of_reference -&gt;
      product_definition_context &lt;= 
      application_context_element
      application_context_element.name = 'breakdown element definition'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
      approval_item *> ap239_prdi_approval_item 
      {ap239_prdi_approval_item = breakdown_element_group_assignment
      ap239_prdi_approval_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
      approval_item *> ap239_prdi_approval_item 
      ap239_prdi_approval_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
      approval_item *> ap239_prdi_approval_item 
      ap239_prdi_approval_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="In_zone">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = in_zone
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Product_in_slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = product_in_slot
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Selected_item_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = selected_item_assignment
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_as_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = slot_as_planned
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_as_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = slot_as_realized
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = slot_design
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="approval_item">
         approval_item *> ap239_prdi_approval_item 
         ap239_prdi_approval_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>
</ae>


<ae entity="Attribute_classification" original_module= "attribute_classification">

  <aa attribute="classified_entity" assertion_to="Alternate_part_relationship">
    <description>
      The 'criteria' attribute, inherited from the entity
      <express_ref linkend="product_replacement:arm:Product_replacement_arm.Alternate_product_relationship"/>
      is being classified.
    </description>
    <aimelt>PATH</aimelt>
    <refpath>
      applied_attribute_classification_assignment
      {applied_attribute_classification_assignment &lt;=
      attribute_classification_assignment
      attribute_classification_assignment.attribute_name ='name'}
      applied_attribute_classification_assignment.items[i] =
      attribute_classification_item
      attribute_classification_item *&gt; ap239_prdi_attribute_classification_item
      ap239_prdi_attribute_classification_item = alternate_product_relationship
    </refpath>
  </aa>

  <aa attribute="classified_entity" assertion_to="Breakdown_context">
    <description>
      - the 'name' attribute on the entity
      <express_ref linkend="product_breakdown:arm:Product_breakdown_arm.Breakdown_context"/>
      is being classified.
    </description>
    <aimelt>PATH</aimelt>
    <refpath>
      applied_attribute_classification_assignment
      {applied_attribute_classification_assignment &lt;=
      attribute_classification_assignment
      attribute_classification_assignment.attribute_name ='name'}
      applied_attribute_classification_assignment.items[i] =
      attribute_classification_item
      attribute_classification_item *&gt; ap239_prdi_attribute_classification_item
      ap239_prdi_attribute_classification_item = breakdown_context
    </refpath>
  </aa>

  <aa attribute="classified_entity" assertion_to="Breakdown_element_realization">
    <description>
      The 'name' inherited from the entity
      <express_ref
        linkend="product_breakdown:arm:Product_breakdown_arm.Product_definition_element_relationship"/> 
      is being classified.
    </description>
    <aimelt>PATH</aimelt>
    <refpath>
      applied_attribute_classification_assignment
      {applied_attribute_classification_assignment &lt;=
      attribute_classification_assignment
      attribute_classification_assignment.attribute_name ='name'}
      applied_attribute_classification_assignment.items[i] =
      attribute_classification_item
      attribute_classification_item *&gt; ap239_prdi_attribute_classification_item
      {ap239_prdi_attribute_classification_item = breakdown_element_group_assignment
      ap239_prdi_attribute_classification_item = product_definition_group_assignment}
    </refpath>
  </aa>

  <aa attribute="classified_entity" assertion_to="Breakdown_element_usage">
    <description>
      The 'name' attribute and the 'relation_type' attribute, inherited from the entity
      <express_ref
        linkend="product_view_definition_relationship:arm:Product_view_definition_relationship_arm.View_definition_relationship"/>, 
      is being classified.
    </description>
    <aimelt>PATH</aimelt>
    <refpath>
      applied_attribute_classification_assignment
      {applied_attribute_classification_assignment &lt;=
      attribute_classification_assignment
      attribute_classification_assignment.attribute_name ='name'}
      applied_attribute_classification_assignment.items[i] =
      attribute_classification_item
      attribute_classification_item *&gt; ap239_prdi_attribute_classification_item
      ap239_prdi_attribute_classification_item = breakdown_element_usage
    </refpath>
  </aa>
</ae>

<ae entity="Attribute_translation_assignment" original_module= "multi_linguism">

  <aa attribute="considered_instances" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      {ap239_prdi_multi_language_attribute_item = breakdown_element_group_assignment
      ap239_prdi_multi_language_attribute_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Document">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products
      product_related_product_category &lt;=
      product_category
      product_category.name='document'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Part">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      (product_category.name='part')
      (product_category.name='raw material')}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Product_as_individual">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_as_individual
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;= product_category
      product_category
      product_category.name='slot'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_definition
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

<ae entity="Certification_assignment" original_module= "certification">

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="certification_item">
      certification_item *&gt; ap239_prdi_certification_item
      ap239_prdi_certification_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>
</ae>

<ae entity="Classification_assignment" original_module= "classification_assignment">

  <aa attribute="items" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_context">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">

      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = breakdown_context
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      {ap239_prdi_classification_item = breakdown_element_group_assignment 
      ap239_prdi_classification_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Selected_item">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = selected_item
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Selected_item_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = selected_item_assignment
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="classification_item">
      classification_item *&gt; ap239_prdi_classification_item
      ap239_prdi_classification_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>
</ae>

<ae entity="Contract_assignment" original_module= "contract">

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="contract_item">
      contract_item *> ap239_prdi_contract_item
      ap239_prdi_contract_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="contract_item">
      contract_item *> ap239_prdi_contract_item
      ap239_prdi_contract_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="contract_item">
      contract_item *> ap239_prdi_contract_item
      ap239_prdi_contract_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

<ae entity="Date_or_date_time_assignment" original_module= "date_time_assignment">

  <aa attribute="items" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = alternate_product_relationship
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = alternate_product_relationship
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = assembly_component_usage
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = assembly_component_usage
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = assembly_component_usage_substitute
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = assembly_component_usage_substitute
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        {ap239_prdi_date_item = breakdown_element_group_assignment
        ap239_prdi_date_item = product_definition_group_assignment}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        {ap239_prdi_date_and_time_item =  breakdown_element_group_assignment
        ap239_prdi_date_and_time_item = product_definition_group_assignment}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = breakdown_element_usage
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = breakdown_element_usage
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = product_definition_formation
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = product_definition_formation
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Selected_item">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = selected_item
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = selected_item
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Selected_item_assignment">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = selected_item_assignment
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = selected_item_assignment
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;= product_category
        product_category
        product_category.name='slot'}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;= product_category
        product_category
        product_category.name='slot'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = product_definition
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = product_definition
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = slot_design_to_planned
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = slot_design_to_planned
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = slot_design_to_realized
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = slot_design_to_realized
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = slot_planned_to_realized 
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = slot_planned_to_realized 
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_item *> ap239_prdi_date_item
        ap239_prdi_date_item = product_definition_formation
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="date_or_date_time_item">
        date_and_time_item *> ap239_prdi_date_and_time_item
        ap239_prdi_date_and_time_item = product_definition_formation
      </refpath_extend>
    </alt_map>
  </aa>
</ae>

<ae entity="Document_assignment" original_module= "document_assignment">

  <aa attribute="is_assigned_to" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = alternate_product_relationship
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = alternate_product_relationship
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = assembly_component_usage
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = assembly_component_usage
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = assembly_component_usage_substitute
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = assembly_component_usage_substitute
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        {ap239_prdi_document_reference_item = breakdown_element_group_assignment
         ap239_prdi_document_reference_item = product_definition_group_assignment}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        {ap239_prdi_document_reference_item = breakdown_element_group_assignment
         ap239_prdi_document_reference_item = product_definition_group_assignment}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = breakdown_element_usage
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = breakdown_element_usage
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product_definition_formation
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product_definition_formation
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Selected_item">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = selected_item
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = selected_item
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;= product_category
        product_category
        product_category.name='slot'}
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;= product_category
        product_category
        product_category.name='slot'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = slot_design_to_planned
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = slot_design_to_planned
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = slot_design_to_realized
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = slot_design_to_realized
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = slot_planned_to_realized 
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = slot_planned_to_realized 
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="is_assigned_to" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product_definition_formation
      </refpath_extend>
    </alt_map>
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <refpath_extend extended_select="documented_element_select">
        document_reference_item *> ap239_prdi_document_reference_item
        ap239_prdi_document_reference_item = product_definition_formation
      </refpath_extend>
    </alt_map>
  </aa>
</ae>

<ae entity="Effectivity_assignment" original_module= "effectivity_application">

  <aa attribute="items" assertion_to="Address_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      (ap239_prdi_effectivity_item = person_and_organization_address)
      (ap239_prdi_effectivity_item = organizational_address)
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Applied_information_usage_right">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = applied_usage_right
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Assigned_property">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = property_definition
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition
      {product_definition
      product_definition.frame_of_reference -&gt;
      product_definition_context &lt;= 
      application_context_element
      application_context_element.name = 'breakdown element definition'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      {ap239_prdi_effectivity_item = breakdown_element_group_assignment
      ap239_prdi_effectivity_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_of">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_relationship
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Certification_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = applied_certification_assignment
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Contract_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = applied_contract_assignment
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Document">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product
      {product &lt;-
      product_related_product_category.products
      product_related_product_category &lt;=
      product_category
      product_category.name='document'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Document_assignment">
    <aimelt>PATH</aimelt>
    <alt_map id="1">
      <description>
        If the assignment is not a partial document assignment.
      </description>
      <refpath>
        (effectivity_item *> ap239_prdi_effectivity_item
        ap239_prdi_effectivity_item = applied_document_reference)
      </refpath>
    </alt_map>
    <alt_map id="2">
      <description>
        If the assignment is a partial document assignment.
      </description>
      <refpath>
        (effectivity_item *> ap239_prdi_effectivity_item
        ap239_prdi_effectivity_item = applied_document_usage_constraint_assignment)
      </refpath>
    </alt_map>
  </aa>
  
  <aa attribute="items" assertion_to="Document_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition
      product_definition
      product_definition.frame_of_reference -&gt;
      product_definition_context &lt;=
      application_context_element
      {application_context_element.name = 'physical document definition'
       application_context_element.name = 'digital document definition'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Document_definition_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_relationship
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Document_location_identification">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = applied_external_identification_assignment
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Document_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation
      product_definition_formation
      {product_definition_formation.of_product -&gt;
      product
      product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='document'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="File">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item =  document_type
      document_type &lt;- document.kind 
      document =&gt; document_file
      document_file
      [document
      {document &lt;- document_representation_type.represented_document
      {document_representation_type.name = 'physical'}
      {document_representation_type.name = 'digital'}}]
      [characterized_object]
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="File_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = document_relationship
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Identification_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = applied_identification_assignment
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Interface_connection">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = interface_connection
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Interface_connector_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = interface_connector_design_to_planned
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Interface_connector_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = interface_connector_design_to_realized
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Interface_connector_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = interface_connector_planned_to_realized
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Make_from_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = make_from_usage_option
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Part">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product
      {product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      (product_category.name='part')
      (product_category.name='raw material')}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Part_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation
      product_definition_formation.of_product -&gt; product
      {product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      (product_category.name='part')
      (product_category.name='raw material')}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Part_view_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition
      {product_definition.frame_of_reference -&gt; product_definition_context
      product_definition_context &lt;= application_context_element
      application_context_element.name = 'part definition'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Product_as_individual">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_as_individual
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Product_in_slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_in_slot
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Product_design_to_individual">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_design_to_individual
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Product_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_planned_to_realized
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Product_version_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation_relationship
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Project_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = applied_organizational_project_assignment
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Requirement">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product
      {product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category  &lt;=
      product_category
      product_category.name='requirement'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Requirement_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = requirement_assignment
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Requirement_collection_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_relationship
      {[product_definition_relationship
      product_definition_relationship.description='requirement collection relationship']
      [product_definition_relationship
      product_definition_relationship.relating_product_definition -&gt;
      product_definition
      product_definition.formation -&gt;
      product_definition_formation
      product_definition_formation.of_product -&gt;
      product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='requirement']}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Requirement_source">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = requirement_source
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Requirement_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation
      {product_definition_formation
      product_definition_formation.of_product -&gt;
      product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='requirement'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Requirement_version_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation_relationship
      {product_definition_formation_relationship
      product_definition_formation_relationship.relating_product_definition_formation -&gt;
      product_definition_formation
      product_definition_formation.of_product -&gt;
      product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='requirement'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Requirement_view_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition
      {product_definition
      product_definition.formation -&gt;
      product_definition_formation
      product_definition_formation.of_product -&gt;
      product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category 
      product_category.name='requirement'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Security_classification_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = applied_security_classification_assignment
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Selected_item_assignment">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = selected_item_assignment
    </refpath_extend>
  </aa>


  <aa attribute="items" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;= 
      product_category
      product_category.name='slot'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_as_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = slot_as_planned
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_as_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = slot_as_realized
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = slot_design
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="effectivity_item">
      effectivity_item *> ap239_prdi_effectivity_item
      ap239_prdi_effectivity_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

<ae entity="Identification_assignment" original_module= "identification_assignment">

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <alt_map id="1">
      <description>
        The mapping for when the identification is not an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product
        product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}
      </refpath>        
    </alt_map>
    
    <alt_map id="2">
      <description>
        The mapping for when the identification is an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        [applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        {(identification_role.name='alias')}}
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}]
        [aliasable_item *&gt; ap239_prdi_aliasable_item
          ap239_prdi_aliasable_item = product
         {product &lt;-
         product_related_product_category.products[i]
         product_related_product_category &lt;=
         product_category
         product_category.name='breakdown'}]
      </refpath>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <alt_map id="1">
      <description>
        The mapping for when the identification is not an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product
        product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}
      </refpath>        
    </alt_map>
    
    <alt_map id="2">
      <description>
        The mapping for when the identification is an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        [applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        {(identification_role.name='alias')}}
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}]
        [aliasable_item *&gt; ap239_prdi_aliasable_item
          ap239_prdi_aliasable_item = product
         {product &lt;-
         product_related_product_category.products[i]
         product_related_product_category &lt;=
         product_category
         product_category.name='breakdown element'}]
      </refpath> 
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <alt_map id="1">
      <description>
        The mapping for when the identification is not an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product_definition_formation}
      </refpath>        
    </alt_map>
    
    <alt_map id="2">
      <description>
        The mapping for when the identification is an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        [applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        {(identification_role.name='alias')}}
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product_definition_formation]
        [aliasable_item *&gt; ap239_prdi_aliasable_item
          ap239_prdi_aliasable_item = product_definition_formation]
      </refpath>        
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <alt_map id="1">
      <description>
        The mapping for when the identification is not an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product
        product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;= product_category
        product_category
        product_category.name='slot'}
      </refpath>        
    </alt_map>
    
    <alt_map id="2">
      <description>
        The mapping for when the identification is an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        [applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        {(identification_role.name='alias')}}
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;= product_category
        product_category
        product_category.name='slot'}]
        [aliasable_item *&gt; ap239_prdi_aliasable_item
          ap239_prdi_aliasable_item = product
         {product &lt;-
         product_related_product_category.products[i]
         product_related_product_category &lt;=
         product_category
         product_category.name='slot'}]
      </refpath>        
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <alt_map id="1">
      <description>
        The mapping for when the identification is not an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product_definition}
      </refpath>        
    </alt_map>
    
    <alt_map id="2">
      <description>
        The mapping for when the identification is an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        [applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        {(identification_role.name='alias')}}
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product_definition]
        [aliasable_item *&gt; ap239_prdi_aliasable_item
          ap239_prdi_aliasable_item = product_definition]
      </refpath>        
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <alt_map id="1">
      <description>
        The mapping for when the identification is not an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product_definition_formation}
      </refpath>        
    </alt_map>
    
    <alt_map id="2">
      <description>
        The mapping for when the identification is an alias identification.
      </description>
      <aimelt>PATH</aimelt>
      <refpath>
        [applied_identification_assignment
        {applied_identification_assignment &lt;= 
        identification_assignment
        identification_assignment.role -&gt; identification_role
        {(identification_role.name='alias')}}
        applied_identification_assignment.items[i] -&gt; 
        identification_item  *&gt; ap239_prdi_identification_item
        ap239_prdi_identification_item = product_definition_formation]
        [aliasable_item *&gt; ap239_prdi_aliasable_item
          ap239_prdi_aliasable_item = product_definition_formation]
      </refpath>        
    </alt_map>
  </aa>
</ae>

<ae entity="Language_indication" original_module= "multi_linguism">

  <aa attribute="considered_instances" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      {ap239_prdi_multi_language_attribute_item = breakdown_element_group_assignment
      ap239_prdi_multi_language_attribute_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Document">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products
      product_related_product_category &lt;=
      product_category
      product_category.name='document'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Part">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      (product_category.name='part')
      (product_category.name='raw material')}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Product_as_individual">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_as_individual
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;= product_category
      product_category
      product_category.name='slot'}
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_definition
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>

  <aa attribute="considered_instances" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="string_select">
      multi_language_attribute_item *&gt; ap239_prdi_multi_language_attribute_item
      ap239_prdi_multi_language_attribute_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>


<ae entity="Organization_or_person_in_organization_assignment" original_module= "person_organization_assignment">

  <aa attribute="items" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = alternate_product_relationship
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = alternate_product_relationship
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = assembly_component_usage
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = assembly_component_usage
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = assembly_component_usage_substitute
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = assembly_component_usage_substitute
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = product
        {product &lt;-
        product_related_product_category.products[i]
        product_related_product_category &lt;=
        product_category
        product_category.name='breakdown element'}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        {ap239_prdi_organization_item = breakdown_element_group_assignment
        ap239_prdi_organization_item = product_definition_group_assignment}
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        {ap239_prdi_person_and_organization_item = breakdown_element_group_assignment
        ap239_prdi_person_and_organization_item = product_definition_group_assignment}
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = breakdown_element_usage
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = breakdown_element_usage
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = product_definition_formation
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = product_definition_formation
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Selected_item">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = selected_item
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = selected_item
      </refpath_extend>
    </alt_map>
  </aa>

  <aa attribute="items" assertion_to="Selected_item_assignment">
    <aimelt>PATH</aimelt>
    <!-- referencing the alternative mapping (id="1") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="1">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        organization_item *&gt; ap239_prdi_organization_item 
        ap239_prdi_organization_item = selected_item_assignment
      </refpath_extend>
    </alt_map>
    
    <!-- referencing the alternative mapping (id="2") description provided in
         the person_organization_assignment module -->
    <alt_map alt_map.inc="2">
      <aimelt>PATH</aimelt>
      <!-- extending the mapping from person_organization_assignment module -->
      <refpath_extend extended_select="organization_or_person_in_organization_item">
        person_and_organization_item *&gt; ap239_prdi_person_and_organization_item 
        ap239_prdi_person_and_organization_item = selected_item_assignment
      </refpath_extend>
    </alt_map>
  </aa>
</ae>

<ae entity="Project_assignment" original_module= "project">

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="project_item">
      project_item *> ap239_prdi_project_item
      ap239_prdi_project_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>
</ae>

<ae entity="Requirement_assignment" original_module= "requirement_assignment">

  <aa attribute="assigned_to" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown element'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      {ap239_prdi_requirement_assigned_item = breakdown_element_group_assignment
      ap239_prdi_requirement_assigned_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Breakdown_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Product_in_slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = product_in_slot
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;= product_category
      product_category
      product_category.name='slot'}
    </refpath_extend>
  </aa>

  <aa attribute="assigned_to" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="requirement_assignment_item">
      requirement_assigned_item *&gt; ap239_prdi_requirement_assigned_item
      ap239_prdi_requirement_assigned_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

<ae entity="Security_classification_assignment" original_module= "security_classification">

  <aa attribute="items" assertion_to="Alternate_part_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = alternate_product_relationship
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Assembly_component_relationship">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = assembly_component_usage
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Assembly_relationship_substitution">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = assembly_component_usage_substitute
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = product
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='breakdown'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_definition">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = product_definition
      {product_definition
      product_definition.frame_of_reference -&gt;
      product_definition_context &lt;= 
      application_context_element
      application_context_element.name = 'breakdown element definition'}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_realization">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      {ap239_prdi_security_classification_item = breakdown_element_group_assignment
      ap239_prdi_security_classification_item = product_definition_group_assignment}
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_usage">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = breakdown_element_usage
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Breakdown_element_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = product_definition_formation
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_planned">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = slot_design_to_planned
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_design_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = slot_design_to_realized
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_on_product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = slot_on_product
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_planned_to_realized">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = slot_planned_to_realized 
    </refpath_extend>
  </aa>

  <aa attribute="items" assertion_to="Slot_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="security_classification_item">
      security_classification_item *&gt; ap239_prdi_security_classification_item
      ap239_prdi_security_classification_item = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

<ae entity="Selected_item_assignment" original_module= "selected_item">

  <aa attribute="item_context" assertion_to="Contract">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="selected_item_context_items">
      selected_item_context_items *> ap239_prdi_selected_item_context_items
      ap239_prdi_selected_item_context_items = contract
    </refpath_extend>
  </aa>

  <aa attribute="item_context" assertion_to="Part">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="selected_item_context_items">
      selected_item_context_items *> ap239_prdi_selected_item_context_items
      ap239_prdi_selected_item_context_items = product
      {product &lt;- 
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      (product_category.name='part')
      (product_category.name='raw material')}
    </refpath_extend>
  </aa>

  <aa attribute="item_context" assertion_to="Product_concept">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="selected_item_context_items">
      selected_item_context_items *> ap239_prdi_selected_item_context_items
      ap239_prdi_selected_item_context_items = product_concept
    </refpath_extend>
  </aa>

  <aa attribute="item_context" assertion_to="Project">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="selected_item_context_items">
      selected_item_context_items *> ap239_prdi_selected_item_context_items
      ap239_prdi_selected_item_context_items = organizational_project
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Product">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="selected_item_select">
      selected_item_select*> ap239_prdi_selected_item_select
      ap239_prdi_selected_item_select = product
    </refpath_extend>
  </aa>

  <aa attribute="item" assertion_to="Product_version">
    <aimelt>PATH</aimelt>
    <refpath_extend extended_select="selected_item_select">
      selected_item_select *> ap239_prdi_selected_item_select
      ap239_prdi_selected_item_select = product_definition_formation
    </refpath_extend>
  </aa>
</ae>

  <sc constraint="restrict_breakdown_context_subtypes" entity="Breakdown_context">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_breakdown_element_definition_subtypes" entity="Breakdown_element_definition">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_breakdown_element_subtypes" entity="Breakdown_element">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_breakdown_element_usage_subtypes" entity="Breakdown_element_usage">
    <constraint>restrict_product_definition_relationship_subtypes</constraint>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_breakdown_element_version_subtypes" entity="Breakdown_element_version">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_breakdown_subtypes" entity="Breakdown">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_breakdown_version_subtypes" entity="Breakdown_version">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_product_subtypes" entity="Product">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_product_version_subtype" entity="Product_version">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_product_view_definition_subtypes" entity="Product_view_definition">
    <rules>restrict_product_category_for_product</rules>
    <source>ISO 10303-1292</source>
  </sc>

  <sc constraint="restrict_view_definition_relationship_subtypes" entity="View_definition_relationship">
    <constraint>restrict_product_definition_relationship_subtypes</constraint>
    <source>ISO 10303-1292</source>
  </sc>

 </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
     <imgfile file="mimexpg3.xml"/>
     <imgfile file="mimexpg4.xml"/>
     <imgfile file="mimexpg5.xml"/>
     <imgfile file="mimexpg6.xml"/>
     <imgfile file="mimexpg7.xml"/>
     <imgfile file="mimexpg8.xml"/>
     <imgfile file="mimexpg9.xml"/>
     <imgfile file="mimexpg10.xml"/>
     <imgfile file="mimexpg11.xml"/>
     <imgfile file="mimexpg12.xml"/>
     <imgfile file="mimexpg13.xml"/>
     <imgfile file="mimexpg14.xml"/>
     <imgfile file="mimexpg15.xml"/>
     <imgfile file="mimexpg16.xml"/>
     <imgfile file="mimexpg17.xml"/>
     <imgfile file="mimexpg18.xml"/>
     <imgfile file="mimexpg19.xml"/>
     <imgfile file="mimexpg20.xml"/>
   </express-g>
 </mim>

 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
 <!-- Commented out as the e2toe1SHTOLO tools are not yet adequate 
 <mim_lf>
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>
-->
</module>
