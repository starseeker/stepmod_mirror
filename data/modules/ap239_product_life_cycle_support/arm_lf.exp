(*
   $Id: arm_lf.exp,v 1.2 2003/06/05 16:08:54 robbod Exp $
   N - ISO/CD-TS - 10303- ap239_product_life_cycle_support - EXPRESS ARM_LF
*)

(* 
UNDER DEVELOPMENT 
Derived from 20030704 concatenation of express
*)

SCHEMA ap239_product_life_cycle_support_arm_lf;
 
CONSTANT
  schema_name : STRING := 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF';
END_CONSTANT;
 
 

TYPE act_meth_charmri_approval_item = SELECT 
    (Activity_method,
     Certification,
     Contract); 
END_TYPE; 

TYPE actchar_ap239_mri_classification_item = SELECT 
    (Activity,
     Activity_relationship,
     Address,
     Address_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Attribute_translation_assignment,
     Calendar_date,
     Certification,
     Certification_assignment,
     Contract,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Event,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     Security_classification,
     Security_classification_assignment); 
END_TYPE; 

TYPE actchar_ap239_mri_classified_attribute_select = SELECT 
    (Activity,
     Activity_relationship,
     Address_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Certification,
     Certification_assignment,
     Contract,
     Date_or_date_time_assignment,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project_assignment,
     Project_relationship,
     Security_classification); 
END_TYPE; 

TYPE actchar_mri_approval_item = SELECT 
    (Activity,
     Certification,
     Contract); 
END_TYPE; 

TYPE actchar_mri_date_or_date_time_item = SELECT 
    (Activity,
     Activity_relationship,
     Certification,
     Contract,
     Organization_or_person_in_organization_assignment,
     Security_classification_assignment); 
END_TYPE; 

TYPE actchar_mri_identification_item = SELECT 
    (Activity,
     Approval_status,
     Contract,
     Organization,
     Security_classification); 
END_TYPE; 

TYPE actchar_mri_organization_or_person_in_organization_item = SELECT 
    (Activity,
     Activity_relationship,
     Contract,
     Identification_assignment,
     Security_classification_assignment); 
END_TYPE; 

TYPE actchar_mri_string_select = SELECT 
    (Activity,
     Activity_relationship,
     Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship); 
END_TYPE; 

TYPE activity_item = SELECT 
    (Activity,
     Applied_state_assignment,
     Contract,
     Document,
     Document_definition,
     Document_version,
     Event,
     File,
     Organization,
     Person,
     Person_in_organization,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Resource_item,
     State_assertion,
     State_assessment,
     Task,
     View_definition_relationship); 
END_TYPE; 

TYPE activity_method_implementation_classified_item = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship); 
END_TYPE; 

TYPE activity_method_item = SELECT 
    (Activity,
     Activity_method,
     Breakdown_element,
     Breakdown_element_definition,
     Breakdown_element_usage,
     Breakdown_element_version,
     Contract,
     Document,
     Document_version,
     Event,
     File,
     Location,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Person,
     Person_in_organization,
     Position,
     Position_type,
     Product,
     Product_as_individual,
     Product_group,
     Product_version,
     Product_view_definition,
     Project,
     Required_resource,
     Required_resource_assignment,
     Resource_event,
     Resource_item,
     Resource_item_assignment,
     Scheme_entry,
     Task,
     Type_of_person,
     Type_of_person_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE activity_realization_select = SELECT 
    (Scheme,
     Task,
     Task_method); 
END_TYPE; 

TYPE actmethchar_ap239_mri_classification_item = SELECT 
    (Activity_method,
     Address,
     Address_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Attribute_translation_assignment,
     Calendar_date,
     Certification,
     Certification_assignment,
     Contract,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Event,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     Security_classification,
     Security_classification_assignment); 
END_TYPE; 

TYPE actmethchar_ap239_mri_classified_attribute_select = SELECT 
    (Activity_method,
     Address_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Certification,
     Certification_assignment,
     Contract,
     Date_or_date_time_assignment,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project_assignment,
     Project_relationship,
     Security_classification); 
END_TYPE; 

TYPE actmethchar_mri_date_or_date_time_item = SELECT 
    (Activity_method,
     Certification,
     Contract,
     Organization_or_person_in_organization_assignment,
     Security_classification_assignment); 
END_TYPE; 

TYPE actmethchar_mri_identification_item = SELECT 
    (Activity_method,
     Approval_status,
     Contract,
     Organization,
     Security_classification); 
END_TYPE; 

TYPE actmethchar_mri_organization_or_person_in_organization_item = SELECT 
    (Activity_method,
     Contract,
     Identification_assignment,
     Security_classification_assignment); 
END_TYPE; 

TYPE actmethchar_mri_string_select = SELECT 
    (Activity_method,
     Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship); 
END_TYPE; 

TYPE affected_item_select = SELECT 
    (Activity_method,
     Contract,
     Document,
     Document_definition,
     Document_version,
     File,
     Organization,
     Person,
     Person_in_organization,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Resource_item,
     View_definition_relationship); 
END_TYPE; 

TYPE alias_identification_item = SELECT 
    (Approval_status,
     Breakdown,
     Breakdown_element,
     Breakdown_version,
     Certification,
     Contract,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     Event,
     Hardcopy,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Physical_document_definition,
     Product_as_planned,
     Product_as_realized,
     Project,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification,
     Slot,
     Slot_definition,
     Slot_version,
     Tracing_relationship); 
END_TYPE; 

TYPE any_number_value = NUMBER;
END_TYPE; 

TYPE any_string_value = STRING;
END_TYPE; 

TYPE ap239_dm_approval_item = SELECT 
    (Document_assignment); 
END_TYPE; 

TYPE ap239_dm_classification_item = SELECT 
    (Applied_information_usage_right,
     Content_item,
     Descriptive_document_property,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_assignment,
     Document_definition_relationship,
     Document_location_identification,
     Document_property_representation,
     Document_version,
     Envelope,
     Envelope_association,
     External_item_identification,
     External_source_identification,
     File_location_identification,
     File_relationship,
     Hardcopy,
     Information_right,
     Information_usage_right,
     Information_usage_right_relationship,
     Message,
     Message_association,
     Numerical_document_property,
     Partial_document_assignment,
     Physical_document_definition); 
END_TYPE; 

TYPE ap239_dm_classified_attribute_select = SELECT 
    (Content_item,
     Descriptive_document_property,
     Digital_file,
     Document_assignment,
     Document_definition_relationship,
     Document_location_identification,
     Document_property_representation,
     Envelope,
     Envelope_association,
     External_item_identification,
     External_source_identification,
     File_location_identification,
     File_relationship,
     Hardcopy,
     Information_right,
     Information_usage_right,
     Information_usage_right_relationship,
     Message,
     Message_association,
     Numerical_document_property,
     Partial_document_assignment); 
END_TYPE; 

TYPE ap239_dm_contract_item = SELECT 
    (Document,
     Message); 
END_TYPE; 

TYPE ap239_dm_date_or_date_time_item = SELECT 
    (Applied_information_usage_right,
     Document,
     Document_assignment); 
END_TYPE; 

TYPE ap239_dm_documented_element_select = SELECT 
    (Certification,
     Contract,
     Identification_assignment,
     Information_right,
     Information_usage_right,
     Organization,
     Person); 
END_TYPE; 

TYPE ap239_dm_information_usage_right_item = SELECT 
    (Certification,
     Certification_assignment,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_definition_relationship,
     Document_version,
     File_relationship,
     Hardcopy,
     Message,
     Physical_document_definition); 
END_TYPE; 

TYPE ap239_dm_organization_or_person_in_organization = SELECT 
    (Document_assignment); 
END_TYPE; 

TYPE ap239_dm_security_classification_item = SELECT 
    (Document_assignment); 
END_TYPE; 

TYPE ap239_dm_state_definition_of_item = SELECT 
    (Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     File_location_identification,
     Hardcopy,
     Physical_document_definition); 
END_TYPE; 

TYPE ap239_dm_state_of_item = SELECT 
    (Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     File_location_identification,
     Hardcopy,
     Physical_document_definition); 
END_TYPE; 

TYPE ap239_dm_string_select = SELECT 
    (Connector_on,
     Envelope,
     Envelope_association,
     Information_right,
     Information_usage_right,
     Interface_connector,
     Interface_connector_definition,
     Interface_connector_version,
     Message,
     Message_association,
     Part,
     Part_version,
     Part_view_definition); 
END_TYPE; 

TYPE ap239_mri_alias_identification_item = SELECT 
    (Approval_status,
     Certification,
     Event,
     Organization,
     Project,
     Security_classification); 
END_TYPE; 

TYPE ap239_mri_approval_item = SELECT 
    (Contract_assignment,
     Event,
     Event_assignment,
     Identification_assignment,
     Project,
     Project_assignment); 
END_TYPE; 

TYPE ap239_mri_certification_item = SELECT 
    (Project); 
END_TYPE; 

TYPE ap239_mri_classification_item = SELECT 
    (Activity,
     Activity_method,
     Activity_relationship,
     Address,
     Address_assignment,
     Affected_items_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Attribute_translation_assignment,
     Calendar_date,
     Certification,
     Certification_assignment,
     Contract,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Directed_activity,
     Event,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     Security_classification,
     Security_classification_assignment,
     Work_order,
     Work_request); 
END_TYPE; 

TYPE ap239_mri_classified_attribute_select = SELECT 
    (Activity,
     Activity_method,
     Activity_relationship,
     Address_assignment,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Certification,
     Certification_assignment,
     Contract,
     Date_or_date_time_assignment,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project_assignment,
     Project_relationship,
     Security_classification,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Work_order,
     Work_request,
     Work_request_status); 
END_TYPE; 

TYPE ap239_mri_date_or_date_time_item = SELECT 
    (Address_assignment,
     Alias_identification,
     Certification_assignment,
     Contract_assignment,
     Identification_assignment); 
END_TYPE; 

TYPE ap239_mri_event_item = SELECT 
    (Certification,
     Project); 
END_TYPE; 

TYPE ap239_mri_identification_item = SELECT 
    (Approval_status,
     Certification,
     Event,
     Organization,
     Project,
     Security_classification); 
END_TYPE; 

TYPE ap239_mri_organization_or_person_in_organization_item = SELECT 
    (Certification,
     Certification_assignment,
     Contract_assignment,
     Event,
     Event_assignment,
     Project,
     Project_assignment); 
END_TYPE; 

TYPE ap239_mri_string_select = SELECT 
    (Event); 
END_TYPE; 

TYPE ap239_padi_alias_identification_item = SELECT 
    (Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized); 
END_TYPE; 

TYPE ap239_padi_approval_item = SELECT 
    (Interface_connection,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_specification_definition,
     Interface_specification_version,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized,
     Product_concept,
     Product_design_to_individual,
     Product_planned_to_realized); 
END_TYPE; 

TYPE ap239_padi_certification_item = SELECT 
    (Document,
     Document_version,
     Interface_connection,
     Interface_connector_version,
     Interface_specification_version,
     Part,
     Part_version,
     Product_as_planned,
     Product_as_realized,
     Product_version_relationship); 
END_TYPE; 

TYPE ap239_padi_classification_item = SELECT 
    (Interface_connection,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_definition_for,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Market,
     Part,
     Part_version,
     Part_view_definition,
     Product,
     Product_as_planned,
     Product_as_realized,
     Product_category,
     Product_concept,
     Product_design_to_individual,
     Product_planned_to_realized,
     Product_version,
     Product_version_relationship,
     Product_view_definition,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Supplied_part_relationship,
     Tracing_relationship,
     View_definition_context); 
END_TYPE; 

TYPE ap239_padi_classified_attribute_select = SELECT 
    (Interface_connection,
     Interface_connector_definition,
     Interface_specification_definition,
     Market,
     Part_view_definition,
     Product_category,
     Product_concept,
     Product_version_relationship,
     Requirement_version_relationship,
     Requirement_view_definition,
     View_definition_context,
     View_definition_relationship); 
END_TYPE; 

TYPE ap239_padi_condition_evaluation_parameter_item = SELECT 
    (Approval_assignment,
     Assigned_property,
     Calendar_date,
     Certification_assignment,
     Classification_assignment,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Document_assignment,
     Identification_assignment,
     Organization_or_person_in_organization_assignment,
     Product,
     Product_as_individual,
     Product_category_assignment,
     Product_version,
     Product_view_definition); 
END_TYPE; 

TYPE ap239_padi_condition_parameter_item = SELECT 
    (Approval_assignment,
     Assigned_property,
     Calendar_date,
     Certification_assignment,
     Classification_assignment,
     Condition_relationship,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Document_assignment,
     Identification_assignment,
     Organization_or_person_in_organization_assignment,
     Product,
     Product_as_individual,
     Product_category_assignment,
     Product_version,
     Product_view_definition); 
END_TYPE; 

TYPE ap239_padi_contract_item = SELECT 
    (Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification_version,
     Part,
     Part_version,
     Product_as_planned,
     Product_as_realized,
     Project); 
END_TYPE; 

TYPE ap239_padi_date_and_time_item = SELECT 
    (Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_specification_definition,
     Interface_specification_version,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized,
     Product_concept,
     Product_design_to_individual,
     Product_planned_to_realized,
     Project_assignment); 
END_TYPE; 

TYPE ap239_padi_documented_element_select = SELECT 
    (Document,
     Document_definition,
     Document_version,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_design,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_specification_version,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized,
     Product_concept,
     Product_design_to_individual,
     Product_planned_to_realized,
     Product_version_relationship,
     Product_view_definition,
     Project,
     Requirement,
     Requirement_version); 
END_TYPE; 

TYPE ap239_padi_identification_item = SELECT 
    (Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized); 
END_TYPE; 

TYPE ap239_padi_information_usage_right_item = SELECT 
    (Interface_connection,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized,
     Requirement,
     Requirement_assignment,
     Requirement_version,
     Requirement_view_definition,
     Security_classification,
     Security_classification_assignment,
     Supplied_part_relationship); 
END_TYPE; 

TYPE ap239_padi_organization_or_person_in_organization = SELECT 
    (Alias_identification,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized); 
END_TYPE; 

TYPE ap239_padi_project_item = SELECT 
    (Product_concept); 
END_TYPE; 

TYPE ap239_padi_property_assignment_select = SELECT 
    (Part_view_definition); 
END_TYPE; 

TYPE ap239_padi_requirement_assignment_item = SELECT 
    (Document_version,
     Interface_specification,
     Part_version,
     Product_as_planned,
     Product_as_realized,
     Project); 
END_TYPE; 

TYPE ap239_padi_requirement_source_item = SELECT 
    (Document_version,
     Part_version,
     Product_as_individual); 
END_TYPE; 

TYPE ap239_padi_security_classification_item = SELECT 
    (Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification_definition,
     Interface_specification_version,
     Part_version,
     Part_view_definition,
     Product_as_planned,
     Product_as_realized); 
END_TYPE; 

TYPE ap239_padi_state_definition_of_item = SELECT 
    (Certification,
     Connector_on,
     Contract,
     Interface_connection,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Person_in_organization,
     Product_as_planned,
     Product_as_realized,
     Product_category,
     Project,
     Security_classification); 
END_TYPE; 

TYPE ap239_padi_state_of_item = SELECT 
    (Certification,
     Connector_on,
     Contract,
     Interface_connection,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Person_in_organization,
     Product_as_planned,
     Product_as_realized,
     Project,
     Security_classification); 
END_TYPE; 

TYPE ap239_padi_string_select = SELECT 
    (Connector_on,
     Envelope,
     Envelope_association,
     Information_right,
     Information_usage_right,
     Interface_connector,
     Interface_connector_definition,
     Interface_connector_version,
     Message,
     Message_association,
     Part,
     Part_version,
     Part_view_definition); 
END_TYPE; 

TYPE ap239_prdi_alias_identification_item = SELECT 
    (Breakdown,
     Breakdown_element,
     Breakdown_version,
     Slot,
     Slot_definition,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_approval_item = SELECT 
    (Alternate_product_relationship,
     Assembly_component_relationship,
     Breakdown,
     Breakdown_element,
     Breakdown_element_definition,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Breakdown_version,
     In_zone,
     Product_in_slot,
     Selected_item_assignment,
     Slot_as_planned,
     Slot_as_realized,
     Slot_design,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized); 
END_TYPE; 

TYPE ap239_prdi_certification_item = SELECT 
    (Breakdown); 
END_TYPE; 

TYPE ap239_prdi_classification_item = SELECT 
    (Alternate_part_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_context,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Selected_item,
     Selected_item_assignment,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_planned_to_realized); 
END_TYPE; 

TYPE ap239_prdi_classified_attribute_select = SELECT 
    (Alternate_part_relationship,
     Breakdown_context,
     Breakdown_element_realization,
     Breakdown_element_usage); 
END_TYPE; 

TYPE ap239_prdi_contract_item = SELECT 
    (Breakdown,
     Breakdown_element,
     Breakdown_version); 
END_TYPE; 

TYPE ap239_prdi_date_or_date_time_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Selected_item,
     Selected_item_assignment,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_documented_element_select = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Selected_item,
     Slot,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_effectivity_item = SELECT 
    (Address_assignment,
     Alternate_part_relationship,
     Applied_information_usage_right,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Assigned_property,
     Breakdown,
     Breakdown_element,
     Breakdown_element_definition,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Breakdown_of,
     Breakdown_version,
     Certification_assignment,
     Contract_assignment,
     Document,
     Document_assignment,
     Document_definition,
     Document_definition_relationship,
     Document_location_identification,
     Document_version,
     File,
     File_relationship,
     Identification_assignment,
     Interface_connection,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Make_from_relationship,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_individual,
     Product_design_to_individual,
     Product_in_slot,
     Product_planned_to_realized,
     Product_version_relationship,
     Project_assignment,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification_assignment,
     Selected_item_assignment,
     Slot,
     Slot_as_planned,
     Slot_as_realized,
     Slot_definition,
     Slot_design,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_identification_item = SELECT 
    (Breakdown,
     Breakdown_element,
     Breakdown_version,
     Slot,
     Slot_definition,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_information_usage_right_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_organization_or_person_in_organization_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Selected_item,
     Selected_item_assignment); 
END_TYPE; 

TYPE ap239_prdi_project_item = SELECT 
    (Breakdown); 
END_TYPE; 

TYPE ap239_prdi_requirement_assignment_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Breakdown_version,
     Product_in_slot,
     Slot,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_security_classification_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element_definition,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_selected_item_context_items = SELECT 
    (Contract,
     Part,
     Product_concept,
     Project); 
END_TYPE; 

TYPE ap239_prdi_selected_item_select = SELECT 
    (Product,
     Product_version); 
END_TYPE; 

TYPE ap239_prdi_state_definition_of_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Product_in_slot,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_state_of_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Product_in_slot,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE ap239_prdi_string_select = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Document,
     Part,
     Product_as_individual,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE ap239_props_approval_item = SELECT 
    (Assigned_property,
     Independent_property,
     Independent_property_relationship); 
END_TYPE; 

TYPE ap239_props_classification_item = SELECT 
    (Assigned_property,
     Independent_property,
     Property_representation,
     Representation,
     Representation_context,
     Representation_item); 
END_TYPE; 

TYPE ap239_props_classified_attribute_select = SELECT 
    (Assigned_property,
     Independent_property,
     Property_representation,
     Representation,
     Representation_context,
     Representation_item); 
END_TYPE; 

TYPE ap239_props_date_or_date_time_item = SELECT 
    (Assigned_property,
     Independent_property,
     Independent_property_relationship,
     Representation); 
END_TYPE; 

TYPE ap239_props_identification_item = SELECT 
    (Assigned_property,
     Independent_property,
     Independent_property_relationship); 
END_TYPE; 

TYPE ap239_props_organization_or_person_in_organization_item = SELECT 
    (Assigned_property,
     Independent_property,
     Independent_property_relationship,
     Representation); 
END_TYPE; 

TYPE ap239_props_string_select = SELECT 
    (Assigned_property,
     Independent_property,
     Independent_property_relationship,
     Representation_item); 
END_TYPE; 

TYPE ap239_psr_activity_item = SELECT 
    (Applied_state_assignment,
     State_assertion,
     State_assessment,
     state_observed_condition_evaluation_item); 
END_TYPE; 

TYPE ap239_psr_justification_item = SELECT 
    (Applied_state_assignment); 
END_TYPE; 

TYPE ap239_psr_location_assignment_select = SELECT 
    (ap239_prdi_alias_identification_item,
     ap239_prdi_identification_item,
     ap239_prdi_selected_item_select,
     Breakdown,
     Breakdown_element,
     Breakdown_version,
     Product,
     Product_group,
     Product_version,
     Slot,
     Slot_definition,
     Slot_version,
     View_definition_relationship); 
END_TYPE; 

TYPE ap239_psr_observed_context = SELECT 
    (ap239_prdi_alias_identification_item,
     ap239_prdi_identification_item,
     ap239_prdi_selected_item_select,
     Breakdown,
     Breakdown_element,
     Breakdown_version,
     Product,
     Product_group,
     Product_version,
     Slot,
     Slot_definition,
     Slot_version,
     View_definition_relationship); 
END_TYPE; 

TYPE ap239_psr_state_of_item = SELECT 
    (ap239_prdi_alias_identification_item,
     ap239_prdi_identification_item,
     ap239_prdi_selected_item_select,
     Breakdown,
     Breakdown_element,
     Breakdown_version,
     Product,
     Product_group,
     Product_version,
     Slot,
     Slot_definition,
     Slot_version,
     View_definition_relationship); 
END_TYPE; 

TYPE approval_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Alternate_product_relationship,
     Applied_activity_method_assignment,
     Applied_information_usage_right,
     Assembly_component_relationship,
     Assigned_property,
     Breakdown,
     Breakdown_element,
     Breakdown_element_definition,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Breakdown_version,
     Certification,
     Condition,
     Condition_assignment,
     Condition_evaluation,
     Condition_evaluation_assignment,
     Contract,
     Contract_assignment,
     Digital_document_definition,
     Directed_activity,
     Document_assignment,
     Document_definition_relationship,
     Document_version,
     Envelope,
     Event,
     Event_assignment,
     Identification_assignment,
     In_zone,
     Independent_property,
     Independent_property_relationship,
     Information_usage_right,
     Interface_connection,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_specification_definition,
     Interface_specification_version,
     Message,
     Observation,
     Part,
     Part_version,
     Part_view_definition,
     Physical_document_definition,
     Product_as_planned,
     Product_as_realized,
     Product_concept,
     Product_design_to_individual,
     Product_in_slot,
     Product_planned_to_realized,
     Project,
     Project_assignment,
     Required_resource,
     Required_resource_relationship,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_as_realized,
     Resource_item,
     Resource_item_assignment,
     Resource_item_relationship,
     Selected_item_assignment,
     Slot_as_planned,
     Slot_as_realized,
     Slot_design,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship,
     Tracing_relationship,
     Work_order,
     Work_output,
     Work_request); 
END_TYPE; 

TYPE ar_observed_context = SELECT 
    (Activity,
     Activity_method,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Required_resource,
     Resource_as_realized,
     Resource_item,
     Scheme,
     Scheme_entry,
     Task,
     Task_method,
     Work_order,
     Work_output,
     Work_request); 
END_TYPE; 

TYPE ar_resource_as_realized_item = SELECT 
    (Activity,
     Activity_method,
     Applied_activity_assignment,
     Applied_activity_method_assignment,
     Event); 
END_TYPE; 

TYPE assigned_document_select = SELECT
   (Document, 
    Document_definition, 
    Document_version, 
    File);
END_TYPE; 

TYPE assigned_name_select = SELECT 
    (External_class_library); 
END_TYPE; 

TYPE breakdown_item = SELECT 
    (Breakdown_element_definition,
     Breakdown_element_usage); 
END_TYPE; 

TYPE cartesian_transformation = SELECT
   (Cartesian_transformation_2d, 
    Cartesian_transformation_3d);
END_TYPE; 

TYPE certification_item = SELECT 
    (Activity,
     Activity_method,
     Breakdown,
     Document,
     Document_version,
     Interface_connection,
     Interface_connector_version,
     Interface_specification_version,
     Part,
     Part_version,
     Product_as_planned,
     Product_as_realized,
     Product_version_relationship,
     Project,
     Qualification_assignment,
     Resource_item,
     Task,
     Task_method,
     Task_result,
     Work_output); 
END_TYPE; 

TYPE characterized_activity_definition = SELECT 
    (Activity,
     Activity_method,
     Activity_method_relationship,
     Condition,
     Condition_evaluation,
     Condition_relationship,
     Resource_event,
     Task_result,
     Work_output); 
END_TYPE; 

TYPE characterized_resource_select = SELECT 
    (Managed_resource,
     Required_resource,
     Resource_as_realized,
     Resource_item,
     Resource_location); 
END_TYPE; 

TYPE classification_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Activity_relationship,
     Address,
     Address_assignment,
     Affected_items_assignment,
     Alternate_part_relationship,
     Applied_activity_method_assignment,
     Applied_information_usage_right,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Assembly_relationship_substitution,
     Assigned_property,
     Attribute_translation_assignment,
     Breakdown,
     Breakdown_context,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Calendar_date,
     Certification,
     Certification_assignment,
     Condition,
     Condition_assignment,
     Condition_evaluation,
     Condition_evaluation_assignment,
     Condition_evaluation_parameter,
     Condition_parameter,
     Condition_relationship,
     Content_item,
     Contract,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Descriptive_document_property,
     Digital_document_definition,
     Digital_file,
     Directed_activity,
     Document,
     Document_assignment,
     Document_definition_relationship,
     Document_location_identification,
     Document_property_representation,
     Document_version,
     Envelope,
     Envelope_association,
     Event,
     Event_assignment,
     Event_relationship,
     Experience_type,
     External_item_identification,
     External_source_identification,
     File_location_identification,
     File_relationship,
     Hardcopy,
     Identification_assignment,
     Independent_property,
     Information_right,
     Information_usage_right,
     Information_usage_right_relationship,
     Interface_connection,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_definition_for,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Language,
     Location_relationship,
     Managed_resource,
     Managed_resource_relationship,
     Market,
     Message,
     Message_association,
     Numerical_document_property,
     Observation,
     Observation_relationship,
     Organization,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Part,
     Part_version,
     Part_view_definition,
     Partial_document_assignment,
     Person_in_organization,
     Person_or_organization_or_person_in_organization_in_position_relationship,
     Physical_document_definition,
     Position_relationship,
     Probability_distribution,
     Product,
     Product_as_planned,
     Product_as_realized,
     Product_category,
     Product_concept,
     Product_design_to_individual,
     Product_group,
     Product_group_relationship,
     Product_planned_to_realized,
     Product_version,
     Product_version_relationship,
     Product_view_definition,
     Project,
     Project_assignment,
     Project_relationship,
     Property_representation,
     Qualification_type,
     Related_condition_parameter,
     Representation,
     Representation_context,
     Representation_item,
     Required_resource,
     Required_resource_assignment,
     Required_resource_relationship,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_as_realized,
     Resource_as_realized_assignment,
     Resource_as_realized_relationship,
     Resource_event,
     Resource_event_relationship,
     Resource_item,
     Resource_item_assignment,
     Resource_item_relationship,
     Resource_location,
     Resource_location_relationship,
     Security_classification,
     Security_classification_assignment,
     Selected_item,
     Selected_item_assignment,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_planned_to_realized,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Supplied_part_relationship,
     Task_method_state_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship,
     Tracing_relationship,
     Type_of_person_definition_relationship,
     View_definition_context,
     Work_order,
     Work_output,
     Work_output_assignment,
     Work_output_relationship,
     Work_request); 
END_TYPE; 

TYPE classified_attribute_select = SELECT 
    (Activity,
     Activity_method,
     Activity_relationship,
     Address_assignment,
     Alternate_part_relationship,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Assigned_property,
     Breakdown_context,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Certification,
     Certification_assignment,
     Content_item,
     Contract,
     Date_or_date_time_assignment,
     Descriptive_document_property,
     Digital_file,
     Document_assignment,
     Document_definition_relationship,
     Document_location_identification,
     Document_property_representation,
     Envelope,
     Envelope_association,
     Event_assignment,
     Event_relationship,
     External_item_identification,
     External_source_identification,
     File_location_identification,
     File_relationship,
     Hardcopy,
     Identification_assignment,
     Independent_property,
     Information_right,
     Information_usage_right,
     Information_usage_right_relationship,
     Interface_connection,
     Interface_connector_definition,
     Interface_specification_definition,
     Language,
     Market,
     Message,
     Message_association,
     Numerical_document_property,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Part_view_definition,
     Partial_document_assignment,
     Person_in_organization,
     Product_category,
     Product_concept,
     Product_version_relationship,
     Project_assignment,
     Project_relationship,
     Property_representation,
     Representation,
     Representation_context,
     Representation_item,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     View_definition_context,
     View_definition_relationship,
     Work_order,
     Work_request,
     Work_request_status); 
END_TYPE; 

TYPE classified_select_for_relationship = SELECT 
    (Person_or_organization_or_person_in_organization_in_position_relationship,
     Position_relationship); 
END_TYPE; 

TYPE condition_approval_item = SELECT 
    (Condition,
     Condition_assignment); 
END_TYPE; 

TYPE condition_assignment_classification_item = SELECT 
    (Condition_evaluation,
     Condition_evaluation_assignment,
     Condition_evaluation_parameter,
     Related_condition_parameter); 
END_TYPE; 

TYPE condition_characterized_activity_definition = SELECT 
    (Activity,
     Activity_method,
     Condition,
     Condition_relationship); 
END_TYPE; 

TYPE condition_classification_item = SELECT 
    (Condition,
     Condition_assignment,
     Condition_parameter,
     Condition_relationship); 
END_TYPE; 

TYPE condition_date_or_date_time_item = SELECT 
    (Condition,
     Condition_assignment); 
END_TYPE; 

TYPE condition_evaluation_approval_item = SELECT 
    (Condition_evaluation,
     Condition_evaluation_assignment); 
END_TYPE; 

TYPE condition_evaluation_characterized_activity_definition = SELECT 
    (Activity,
     Activity_method,
     Condition_evaluation); 
END_TYPE; 

TYPE condition_evaluation_date_or_date_time_item = SELECT 
    (Condition_evaluation,
     Condition_evaluation_assignment); 
END_TYPE; 

TYPE condition_evaluation_identification_item = SELECT 
    (Condition_evaluation); 
END_TYPE; 

TYPE condition_evaluation_item = SELECT 
    (State_assertion,
     State_assessment); 
END_TYPE; 

TYPE condition_evaluation_organization_or_person_in_organization_item = SELECT 
    (Condition_evaluation,
     Condition_evaluation_assignment); 
END_TYPE; 

TYPE condition_evaluation_parameter_item = SELECT 
    (Approval_assignment,
     Assigned_property,
     Calendar_date,
     Certification_assignment,
     Classification_assignment,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Document_assignment,
     Identification_assignment,
     Organization_or_person_in_organization_assignment,
     Product,
     Product_as_individual,
     Product_category_assignment,
     Product_version,
     Product_view_definition); 
END_TYPE; 

TYPE condition_identification_item = SELECT 
    (Condition); 
END_TYPE; 

TYPE condition_item = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment,
     Managed_resource,
     Managed_resource_relationship,
     Required_resource,
     Required_resource_assignment,
     Required_resource_relationship,
     Resource_event,
     Resource_event_relationship,
     Resource_item,
     Resource_item_assignment,
     Resource_item_relationship,
     Resource_location,
     Resource_location_relationship,
     State_definition,
     State_definition_relationship,
     Task_assignment,
     Task_method_relationship,
     Task_relationship); 
END_TYPE; 

TYPE condition_organization_or_person_in_organization_item = SELECT 
    (Condition,
     Condition_assignment); 
END_TYPE; 

TYPE condition_parameter_item = SELECT 
    (Approval_assignment,
     Assigned_property,
     Calendar_date,
     Certification_assignment,
     Classification_assignment,
     Condition_relationship,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Document_assignment,
     Identification_assignment,
     Organization_or_person_in_organization_assignment,
     Product,
     Product_as_individual,
     Product_category_assignment,
     Product_version,
     Product_view_definition); 
END_TYPE; 

TYPE connector_on_item = SELECT 
    (Product_view_definition,
     Slot_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE constraint_context = SELECT 
    (Task,
     Task_method); 
END_TYPE; 

TYPE contract_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment,
     Breakdown,
     Breakdown_element,
     Breakdown_version,
     Document,
     Document_version,
     Information_usage_right,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification_version,
     Managed_resource,
     Message,
     Part,
     Part_version,
     Product_as_planned,
     Product_as_realized,
     Project,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_event,
     Resource_item,
     Resource_location,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_relationship,
     Task_result,
     Tracing_relationship); 
END_TYPE; 

TYPE date_or_date_time_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Activity_relationship,
     Address_assignment,
     Alias_identification,
     Alternate_part_relationship,
     Applied_activity_method_assignment,
     Applied_information_usage_right,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Assigned_property,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Certification,
     Certification_assignment,
     Condition,
     Condition_assignment,
     Condition_evaluation,
     Condition_evaluation_assignment,
     Contract,
     Contract_assignment,
     Digital_document_definition,
     Digital_file,
     Directed_activity,
     Document,
     Document_assignment,
     Document_definition_relationship,
     Document_version,
     Envelope,
     Experience_gained,
     Experience_instance,
     Hardcopy,
     Identification_assignment,
     Independent_property,
     Independent_property_relationship,
     Information_usage_right,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_specification_definition,
     Interface_specification_version,
     Managed_resource,
     Message,
     Observation,
     Organization_or_person_in_organization_assignment,
     Part,
     Part_version,
     Part_view_definition,
     Physical_document_definition,
     Product_as_planned,
     Product_as_realized,
     Product_concept,
     Product_design_to_individual,
     Product_planned_to_realized,
     Project_assignment,
     Qualification_assignment,
     Representation,
     Required_resource,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_as_realized,
     Resource_event,
     Resource_item,
     Resource_item_assignment,
     Resource_location,
     Scheme_entry,
     Security_classification_assignment,
     Selected_item,
     Selected_item_assignment,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_planned_to_realized,
     Slot_version,
     State,
     State_assertion,
     State_assessment,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship,
     Tracing_relationship,
     Work_order,
     Work_output,
     Work_request); 
END_TYPE; 

TYPE date_or_date_time_select = SELECT
   (Calendar_date, 
    Date_time);
END_TYPE; 

TYPE date_or_event = SELECT
   (Calendar_date, 
    Date_time, 
    Event);
END_TYPE; 

TYPE day_in_month_number = INTEGER ;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 

TYPE defined_methods = SELECT 
    (Activity_method,
     Required_resource); 
END_TYPE; 

TYPE descriptive_or_numerical = SELECT
   (Descriptive_document_property, 
    Numerical_document_property);
END_TYPE; 

TYPE document_location_select = SELECT 
    (Document_definition); 
END_TYPE; 

TYPE document_management_alias_identification_item = SELECT 
    (Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     Hardcopy,
     Physical_document_definition); 
END_TYPE; 

TYPE document_management_approval_item = SELECT 
    (Certification,
     Contract,
     Digital_document_definition,
     Document_definition_relationship,
     Document_version,
     Physical_document_definition); 
END_TYPE; 

TYPE document_management_contract_item = SELECT 
    (Document_version); 
END_TYPE; 

TYPE document_management_date_or_date_time_item = SELECT 
    (Certification,
     Contract,
     Digital_document_definition,
     Digital_file,
     Document_definition_relationship,
     Document_version,
     Hardcopy,
     Organization_or_person_in_organization_assignment,
     Physical_document_definition,
     Security_classification_assignment); 
END_TYPE; 

TYPE document_management_identification_item = SELECT 
    (Approval_status,
     Contract,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     Hardcopy,
     Organization,
     Physical_document_definition,
     Security_classification); 
END_TYPE; 

TYPE document_management_person_and_organization_item = SELECT 
    (Contract,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     Hardcopy,
     Identification_assignment,
     Physical_document_definition,
     Security_classification_assignment); 
END_TYPE; 

TYPE document_management_security_classification_item = SELECT 
    (Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     Hardcopy,
     Physical_document_definition); 
END_TYPE; 

TYPE document_management_string_select = SELECT 
    (Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Digital_document_definition,
     Document,
     Document_assignment,
     Document_definition_relationship,
     Document_version,
     External_item_identification,
     External_source_identification,
     File_relationship,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Physical_document_definition,
     Product_category,
     Project,
     Project_assignment,
     Project_relationship); 
END_TYPE; 

TYPE document_property_item = SELECT 
    (Document_definition,
     File); 
END_TYPE; 

TYPE documented_element_select = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Alternate_part_relationship,
     Applied_activity_method_assignment,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Certification,
     Contract,
     Document,
     Document_definition,
     Document_version,
     Identification_assignment,
     Information_right,
     Information_usage_right,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_design,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Interface_connector_version,
     Interface_specification_version,
     Location,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Person,
     Product_as_planned,
     Product_as_realized,
     Product_concept,
     Product_design_to_individual,
     Product_planned_to_realized,
     Product_version_relationship,
     Product_view_definition,
     Project,
     Required_resource_assignment,
     Required_resource_relationship,
     Requirement,
     Requirement_version,
     Resource_event,
     Resource_item,
     Resource_item_assignment,
     Resource_item_relationship,
     Resource_location,
     Selected_item,
     Slot,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_planned_to_realized,
     Slot_version,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE effectivity_item = SELECT 
    (Address_assignment,
     Alternate_part_relationship,
     Applied_information_usage_right,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Assigned_property,
     Breakdown,
     Breakdown_element,
     Breakdown_element_definition,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Breakdown_of,
     Breakdown_version,
     Certification_assignment,
     Contract_assignment,
     Document,
     Document_assignment,
     Document_definition,
     Document_definition_relationship,
     Document_location_identification,
     Document_version,
     File,
     File_relationship,
     Identification_assignment,
     Interface_connection,
     Interface_connector_design_to_planned,
     Interface_connector_design_to_realized,
     Interface_connector_planned_to_realized,
     Make_from_relationship,
     Managed_resource,
     Managed_resource_relationship,
     Part,
     Part_version,
     Part_view_definition,
     Product_as_individual,
     Product_design_to_individual,
     Product_group_membership,
     Product_group_relationship,
     Product_in_slot,
     Product_planned_to_realized,
     Product_version_relationship,
     Project_assignment,
     Required_resource,
     Required_resource_relationship,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_item,
     Resource_item_assignment,
     Resource_item_relationship,
     Resource_location,
     Security_classification_assignment,
     Selected_item_assignment,
     Slot,
     Slot_as_planned,
     Slot_as_realized,
     Slot_definition,
     Slot_design,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE envelope_approval_select = SELECT 
    (Envelope); 
END_TYPE; 

TYPE envelope_date_time_select = SELECT 
    (Envelope); 
END_TYPE; 

TYPE envelope_person_organization_select = SELECT 
    (Envelope); 
END_TYPE; 

TYPE envelope_property_select = SELECT 
    (Envelope); 
END_TYPE; 

TYPE event_item = SELECT 
    (Certification,
     Project); 
END_TYPE; 

TYPE experience_classified_select = SELECT 
    (Experience_type); 
END_TYPE; 

TYPE experience_date_or_date_time_item = SELECT 
    (Experience_gained,
     Experience_instance); 
END_TYPE; 

TYPE experience_instance_property_assignment_select = SELECT 
    (Experience_instance); 
END_TYPE; 

TYPE external_class_assigned_name_select = SELECT 
    (External_class_library); 
END_TYPE; 

TYPE external_identification_item = SELECT 
    (Document_definition,
     File); 
END_TYPE; 

TYPE geometric_mapping_target = SELECT
   (Axis_placement, 
    cartesian_transformation);
END_TYPE; 

TYPE hour_in_day = INTEGER ;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 

TYPE identification_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment,
     Approval_status,
     Assigned_property,
     Breakdown,
     Breakdown_element,
     Breakdown_version,
     Certification,
     Condition,
     Condition_evaluation,
     Contract,
     Digital_document_definition,
     Digital_file,
     Directed_activity,
     Document,
     Document_version,
     Event,
     Hardcopy,
     Independent_property,
     Independent_property_relationship,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Managed_resource,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Physical_document_definition,
     Product_as_individual,
     Product_as_planned,
     Product_as_realized,
     Project,
     Required_resource,
     Required_resource_relationship,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_as_realized,
     Resource_event,
     Resource_item,
     Resource_location,
     Security_classification,
     Slot,
     Slot_definition,
     Slot_version,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship,
     Tracing_relationship,
     Work_order,
     Work_output,
     Work_request); 
END_TYPE; 

TYPE in_zone_item = SELECT 
    (Product_view_definition); 
END_TYPE; 

TYPE information_usage_right_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Certification,
     Certification_assignment,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_definition_relationship,
     Document_version,
     File_relationship,
     Hardcopy,
     Interface_connection,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Message,
     Part,
     Part_version,
     Part_view_definition,
     Physical_document_definition,
     Product_as_planned,
     Product_as_realized,
     Requirement,
     Requirement_assignment,
     Requirement_version,
     Requirement_view_definition,
     Security_classification,
     Security_classification_assignment,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_version,
     Supplied_part_relationship); 
END_TYPE; 

TYPE interface_on_slot_item = SELECT 
    (Product_view_definition,
     Slot_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE justification_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment,
     Applied_state_assignment,
     Location_assignment,
     Required_resource,
     Required_resource_relationship,
     Resource_as_realized,
     Resource_event,
     Resource_item,
     Resource_item_assignment,
     Resource_item_relationship,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE justification_support_item = SELECT 
    (Activity,
     Activity_method,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Contract,
     Document,
     Document_definition,
     Document_version,
     Event,
     Location,
     Location_assignment,
     Project,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Work_order,
     Work_request); 
END_TYPE; 

TYPE length_measure = NUMBER;
END_TYPE; 

TYPE limit_qualifier_list = ENUMERATION OF 
   (minimum,
    maximum);
END_TYPE; 

TYPE located_select = SELECT 
    (File); 
END_TYPE; 

TYPE location_assignment_select = SELECT 
    (Breakdown,
     Breakdown_element,
     Breakdown_version,
     Document,
     Document_definition,
     Document_version,
     File,
     Organization,
     Organization_type,
     Person,
     Person_in_organization,
     Position,
     Position_type,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Project,
     Required_resource,
     Required_resource_assignment,
     Resource_item,
     Resource_item_assignment,
     Resource_location,
     Slot,
     Slot_definition,
     Slot_version,
     Task,
     Task_assignment,
     Task_method,
     Type_of_person,
     View_definition_relationship); 
END_TYPE; 

TYPE location_classification_item = SELECT 
    (Location_relationship); 
END_TYPE; 

TYPE location_representation = SELECT 
    (Address_based_location_representation,
     Global_location_representation,
     Organization_based_location_representation,
     Product_based_location_identification,
     Regional_grid_location_representation); 
END_TYPE; 

TYPE measure_value = SELECT 
    (any_number_value,
     any_string_value,
     length_measure); 
END_TYPE; 

TYPE message_approval_select = SELECT 
    (Message); 
END_TYPE; 

TYPE message_date_time_select = SELECT 
    (Message); 
END_TYPE; 

TYPE message_definer_select = SELECT 
    (Organization,
     Person_in_organization); 
END_TYPE; 

TYPE message_security_classification_select = SELECT 
    (Message); 
END_TYPE; 

TYPE message_state_select = SELECT 
    (Message); 
END_TYPE; 

TYPE minute_in_hour = INTEGER ;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 

TYPE month_in_year_number = INTEGER ;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 

TYPE mri_alias_identification_item = SELECT 
    (Approval_status,
     Contract,
     Organization,
     Security_classification); 
END_TYPE; 

TYPE mri_approval_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Applied_information_usage_right,
     Certification,
     Contract,
     Digital_document_definition,
     Directed_activity,
     Document_definition_relationship,
     Document_version,
     Information_usage_right,
     Observation,
     Physical_document_definition,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Tracing_relationship,
     Work_order,
     Work_request); 
END_TYPE; 

TYPE mri_date_or_date_time_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Activity_relationship,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Certification,
     Contract,
     Digital_document_definition,
     Digital_file,
     Directed_activity,
     Document_definition_relationship,
     Document_version,
     Hardcopy,
     Information_usage_right,
     Observation,
     Organization_or_person_in_organization_assignment,
     Physical_document_definition,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification_assignment,
     State,
     State_assertion,
     State_assessment,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Tracing_relationship,
     Work_order,
     Work_request); 
END_TYPE; 

TYPE mri_identification_item = SELECT 
    (Activity,
     Activity_method,
     Approval_status,
     Contract,
     Digital_document_definition,
     Digital_file,
     Directed_activity,
     Document,
     Document_version,
     Hardcopy,
     Organization,
     Physical_document_definition,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Tracing_relationship,
     Work_order,
     Work_request); 
END_TYPE; 

TYPE mri_organization_or_person_in_organization_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Activity_relationship,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Contract,
     Digital_document_definition,
     Digital_file,
     Directed_activity,
     Document,
     Document_version,
     Hardcopy,
     Identification_assignment,
     Information_usage_right,
     Observation,
     Physical_document_definition,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification_assignment,
     State,
     State_assertion,
     State_assessment,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Tracing_relationship,
     Work_order,
     Work_request); 
END_TYPE; 

TYPE mri_string_select = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Activity_relationship,
     Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Digital_document_definition,
     Document,
     Document_assignment,
     Document_definition_relationship,
     Document_version,
     External_item_identification,
     External_source_identification,
     File_relationship,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Physical_document_definition,
     Product_category,
     Project,
     Project_assignment,
     Project_relationship,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Tracing_relationship,
     Work_order); 
END_TYPE; 

TYPE observation_approval = SELECT 
    (Certification,
     Contract,
     Observation); 
END_TYPE; 

TYPE observation_classification_item = SELECT 
    (Observation,
     Observation_relationship); 
END_TYPE; 

TYPE observation_date_time = SELECT 
    (Certification,
     Contract,
     Observation,
     Organization_or_person_in_organization_assignment,
     Security_classification_assignment); 
END_TYPE; 

TYPE observation_recorder = SELECT 
    (Product_as_realized); 
END_TYPE; 

TYPE observed_context = SELECT 
    (Activity,
     Activity_method,
     Breakdown,
     Breakdown_element,
     Breakdown_version,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Required_resource,
     Resource_as_realized,
     Resource_item,
     Scheme,
     Scheme_entry,
     Slot,
     Slot_definition,
     Slot_version,
     Task,
     Task_method,
     View_definition_relationship,
     Work_order,
     Work_output,
     Work_request); 
END_TYPE; 

TYPE observing_person = SELECT 
    (Contract,
     Identification_assignment,
     Observation,
     Security_classification_assignment); 
END_TYPE; 

TYPE offset_orientation = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 

TYPE organization_or_person_in_organization_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Activity_relationship,
     Alias_identification,
     Alternate_part_relationship,
     Applied_activity_method_assignment,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Assigned_property,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_version,
     Certification,
     Certification_assignment,
     Condition,
     Condition_assignment,
     Condition_evaluation,
     Condition_evaluation_assignment,
     Contract,
     Contract_assignment,
     Digital_document_definition,
     Digital_file,
     Directed_activity,
     Document,
     Document_assignment,
     Document_definition,
     Document_version,
     Envelope,
     Event,
     Event_assignment,
     Hardcopy,
     Identification_assignment,
     Independent_property,
     Independent_property_relationship,
     Information_usage_right,
     Interface_connector,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Managed_resource,
     Observation,
     Part,
     Part_version,
     Part_view_definition,
     Physical_document_definition,
     Product_as_planned,
     Product_as_realized,
     Project,
     Project_assignment,
     Qualification_assignment,
     Representation,
     Required_resource,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_event,
     Resource_item,
     Resource_item_assignment,
     Resource_location,
     Scheme,
     Scheme_entry,
     Security_classification_assignment,
     Selected_item,
     Selected_item_assignment,
     State,
     State_assertion,
     State_assessment,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship,
     Tracing_relationship,
     Work_order,
     Work_output,
     Work_request); 
END_TYPE; 

TYPE organization_or_person_in_organization_select = SELECT
   (Organization, 
    Person_in_organization);
END_TYPE; 

TYPE person_attributes = SELECT 
    (Experience_type,
     Qualification_type); 
END_TYPE; 

TYPE person_or_organization_or_person_in_organization_select = SELECT 
    (Organization,
     Person,
     Person_in_organization); 
END_TYPE; 

TYPE position_context_item = SELECT 
    (Organization,
     Position_group,
     Project); 
END_TYPE; 

(*
TYPE position_group_item = SELECT 
    (); 
END_TYPE; 
*)

(*
TYPE position_item = SELECT 
    (); 
END_TYPE; 
*)

TYPE position_person_or_organization_or_person_in_organization_select = SELECT 
    (Organization,
     Person,
     Person_in_organization); 
END_TYPE; 

(*
TYPE position_type_item = SELECT 
    (); 
END_TYPE; 
*)

TYPE probability_distribution_classification = SELECT 
    (Probability_distribution); 
END_TYPE; 

TYPE product_as_individual_identification_item = SELECT 
    (Product_as_individual); 
END_TYPE; 

TYPE product_based_location_representation = SELECT 
    (Product,
     Zone_element); 
END_TYPE; 

TYPE product_group_classification_item = SELECT 
    (Product_group,
     Product_group_relationship); 
END_TYPE; 

TYPE product_group_effectivity_item = SELECT 
    (Product_group_membership,
     Product_group_relationship); 
END_TYPE; 

TYPE product_item = SELECT 
    (Product_view_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE product_property_assignment = SELECT 
    (Product_view_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE product_select = SELECT 
    (Product_as_individual,
     Product_concept,
     Product_group,
     Product_version); 
END_TYPE; 

TYPE project_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment,
     Breakdown,
     Product_concept,
     Task,
     Task_assignment,
     Task_method,
     Task_result); 
END_TYPE; 

TYPE property_assignment_select = SELECT 
    (Applied_state_assignment,
     Applied_state_definition_assignment,
     Document_definition,
     Envelope,
     Experience_instance,
     File,
     Part_view_definition,
     Product_view_definition,
     Requirement_assignment,
     State,
     State_definition,
     State_definition_relationship,
     Task_assignment,
     Task_result_state_relationship,
     Task_state_relationship,
     Type_of_person_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE property_value_qualifier = ENUMERATION OF 
   (nominal,
    specified,
    typical);
END_TYPE; 

TYPE ps_product_property_assignment = SELECT 
    (View_definition_relationship); 
END_TYPE; 

TYPE qualification_organization_or_person_in_organization_item = SELECT 
    (Qualification_assignment); 
END_TYPE; 

TYPE qualifications_certification_item = SELECT 
    (Qualification_assignment); 
END_TYPE; 

TYPE qualifications_classified_select = SELECT 
    (Qualification_type); 
END_TYPE; 

TYPE qualifications_date_or_date_time_item = SELECT 
    (Qualification_assignment); 
END_TYPE; 

TYPE qualifications_select = SELECT 
    (Organization,
     Person,
     Person_in_organization); 
END_TYPE; 

TYPE required_resource_approval_item = SELECT 
    (Required_resource,
     Required_resource_relationship); 
END_TYPE; 

TYPE required_resource_characterized_resource_select = SELECT 
    (Required_resource); 
END_TYPE; 

TYPE required_resource_classification_item = SELECT 
    (Required_resource,
     Required_resource_assignment,
     Required_resource_relationship); 
END_TYPE; 

TYPE required_resource_condition_item = SELECT 
    (Required_resource,
     Required_resource_relationship); 
END_TYPE; 

TYPE required_resource_date_or_date_time_item = SELECT 
    (Required_resource); 
END_TYPE; 

TYPE required_resource_effectivity_item = SELECT 
    (Required_resource,
     Required_resource_relationship); 
END_TYPE; 

TYPE required_resource_identification_item = SELECT 
    (Required_resource,
     Required_resource_relationship); 
END_TYPE; 

TYPE required_resource_item = SELECT 
    (Activity,
     Activity_method,
     Event,
     Scheme,
     Scheme_entry,
     Task,
     Task_assignment,
     Task_method); 
END_TYPE; 

TYPE required_resource_justification_item = SELECT 
    (Required_resource,
     Required_resource_relationship); 
END_TYPE; 

TYPE required_resource_organization_or_person_in_organization_item = SELECT 
    (Required_resource); 
END_TYPE; 

TYPE required_resource_requirement_assignment_item = SELECT 
    (Required_resource_by_specification); 
END_TYPE; 

TYPE requirement_alias_idenfication_item = SELECT 
    (Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version_relationship,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_assignment_item = SELECT 
    (Activity_method,
     Alternate_part_relationship,
     Applied_activity_method_assignment,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Breakdown_version,
     Document_version,
     Interface_specification,
     Part_version,
     Product_as_planned,
     Product_as_realized,
     Product_in_slot,
     Project,
     Required_resource_by_specification,
     Slot,
     Slot_version,
     State,
     State_definition); 
END_TYPE; 

TYPE requirement_assignment_property_assignment_select = SELECT 
    (Requirement_assignment); 
END_TYPE; 

TYPE requirement_contract_item = SELECT 
    (Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_identification_and_version_alias_identification_item = SELECT 
    (Requirement,
     Requirement_version); 
END_TYPE; 

TYPE requirement_identification_and_version_identification_item = SELECT 
    (Requirement,
     Requirement_version); 
END_TYPE; 

TYPE requirement_mri_approval_item = SELECT 
    (Certification,
     Contract,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_mri_date_or_date_time_item = SELECT 
    (Certification,
     Contract,
     Organization_or_person_in_organization_assignment,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification_assignment,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_mri_identification_item = SELECT 
    (Approval_status,
     Contract,
     Organization,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_mri_organization_or_person_in_organization_item = SELECT 
    (Contract,
     Identification_assignment,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Security_classification_assignment,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_mri_string_select = SELECT 
    (Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_security_classification_item = SELECT 
    (Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Tracing_relationship); 
END_TYPE; 

TYPE requirement_source_item = SELECT 
    (Activity_method,
     Applied_activity_method_assignment,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Document_version,
     Part_version,
     Product_as_individual,
     State,
     State_definition); 
END_TYPE; 

TYPE requirement_view_definition_alias_identification_item = SELECT 
    (Requirement_view_definition); 
END_TYPE; 

TYPE requirement_view_definition_identification_item = SELECT 
    (Requirement_view_definition); 
END_TYPE; 

TYPE resource_as_realized_approval_item = SELECT 
    (Resource_as_realized); 
END_TYPE; 

TYPE resource_as_realized_characterized_resource_select = SELECT 
    (Resource_as_realized); 
END_TYPE; 

TYPE resource_as_realized_classification_item = SELECT 
    (Resource_as_realized,
     Resource_as_realized_assignment,
     Resource_as_realized_relationship); 
END_TYPE; 

TYPE resource_as_realized_date_or_date_time_item = SELECT 
    (Resource_as_realized); 
END_TYPE; 

TYPE resource_as_realized_identification_item = SELECT 
    (Resource_as_realized); 
END_TYPE; 

TYPE resource_as_realized_item = SELECT 
    (Activity,
     Activity_method,
     Applied_activity_assignment,
     Applied_activity_method_assignment,
     Event); 
END_TYPE; 

TYPE resource_as_realized_justification_item = SELECT 
    (Resource_as_realized); 
END_TYPE; 

TYPE resource_as_realized_relationship_select = SELECT
   (Required_resource, 
    Resource_event);
END_TYPE; 

TYPE resource_assignment_item = SELECT 
    (Contract,
     Location,
     Part,
     Part_version,
     Part_view_definition,
     Product_group,
     Project); 
END_TYPE; 

TYPE resource_item_approval_item = SELECT 
    (Resource_item,
     Resource_item_assignment,
     Resource_item_relationship); 
END_TYPE; 

TYPE resource_item_certification_item = SELECT 
    (Resource_item); 
END_TYPE; 

TYPE resource_item_characterized_resource_select = SELECT 
    (Resource_item); 
END_TYPE; 

TYPE resource_item_classification_item = SELECT 
    (Resource_item,
     Resource_item_assignment,
     Resource_item_relationship); 
END_TYPE; 

TYPE resource_item_condition_item = SELECT 
    (Resource_item,
     Resource_item_assignment,
     Resource_item_relationship); 
END_TYPE; 

TYPE resource_item_contract_item = SELECT 
    (Resource_item); 
END_TYPE; 

TYPE resource_item_date_or_date_time_item = SELECT 
    (Resource_item,
     Resource_item_assignment); 
END_TYPE; 

TYPE resource_item_documented_element_select = SELECT 
    (Resource_item); 
END_TYPE; 

TYPE resource_item_effectivity_item = SELECT 
    (Resource_item,
     Resource_item_assignment,
     Resource_item_relationship); 
END_TYPE; 

TYPE resource_item_identification_item = SELECT 
    (Resource_item); 
END_TYPE; 

TYPE resource_item_justification_item = SELECT 
    (Resource_item,
     Resource_item_assignment,
     Resource_item_relationship); 
END_TYPE; 

TYPE resource_item_organization_or_person_in_organization_item = SELECT 
    (Resource_item,
     Resource_item_assignment); 
END_TYPE; 

TYPE resource_item_security_classification_item = SELECT 
    (Resource_item); 
END_TYPE; 

TYPE resource_item_select = SELECT 
    (Document,
     Document_definition,
     Document_version,
     File,
     Location,
     Organization,
     Organization_type,
     Part,
     Part_version,
     Part_view_definition,
     Person,
     Person_in_organization,
     Position,
     Position_type,
     Product_as_individual,
     Product_group,
     Type_of_person); 
END_TYPE; 

TYPE resource_management_characterized_activity_definition = SELECT 
    (Activity,
     Activity_method,
     Resource_event); 
END_TYPE; 

TYPE resource_management_characterized_resource_select = SELECT 
    (Managed_resource,
     Resource_location); 
END_TYPE; 

TYPE resource_management_classification_item = SELECT 
    (Managed_resource,
     Managed_resource_relationship,
     Resource_event,
     Resource_event_relationship,
     Resource_location,
     Resource_location_relationship); 
END_TYPE; 

TYPE resource_management_condition_item = SELECT 
    (Managed_resource,
     Managed_resource_relationship,
     Resource_event,
     Resource_event_relationship,
     Resource_location,
     Resource_location_relationship); 
END_TYPE; 

TYPE resource_management_contract_item = SELECT 
    (Managed_resource,
     Resource_event,
     Resource_location); 
END_TYPE; 

TYPE resource_management_date_or_date_time_item = SELECT 
    (Managed_resource,
     Resource_event,
     Resource_location); 
END_TYPE; 

TYPE resource_management_documented_element_select = SELECT 
    (Resource_event,
     Resource_location); 
END_TYPE; 

TYPE resource_management_effectivity_item = SELECT 
    (Managed_resource,
     Managed_resource_relationship,
     Resource_location); 
END_TYPE; 

TYPE resource_management_identification_item = SELECT 
    (Managed_resource,
     Resource_event,
     Resource_location); 
END_TYPE; 

TYPE resource_management_justification_item = SELECT 
    (Resource_event); 
END_TYPE; 

TYPE resource_management_location_assignment_select = SELECT 
    (Resource_location); 
END_TYPE; 

TYPE resource_management_organization_or_person_in_organization_item = SELECT 
    (Managed_resource,
     Resource_event,
     Resource_location); 
END_TYPE; 

TYPE right_approval_item = SELECT 
    (Applied_information_usage_right,
     Certification,
     Contract,
     Information_usage_right); 
END_TYPE; 

TYPE right_contract_item = SELECT 
    (Information_usage_right); 
END_TYPE; 

TYPE right_date_item = SELECT 
    (Certification,
     Contract,
     Information_usage_right,
     Organization_or_person_in_organization_assignment,
     Security_classification_assignment); 
END_TYPE; 

TYPE right_person_organization_item = SELECT 
    (Contract,
     Identification_assignment,
     Information_usage_right,
     Security_classification_assignment); 
END_TYPE; 

TYPE scheme_date_or_date_time_item = SELECT 
    (Scheme_entry); 
END_TYPE; 

TYPE scheme_entry_item_select = SELECT 
    (Activity,
     Event,
     Resource_event); 
END_TYPE; 

TYPE scheme_person_organization_select = SELECT 
    (Scheme,
     Scheme_entry); 
END_TYPE; 

TYPE scheme_subject_select = SELECT 
    (Activity,
     Activity_method,
     Contract,
     Document,
     Document_version,
     Location,
     Organization,
     Person,
     Person_in_organization,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Project,
     Required_resource,
     Required_resource_assignment,
     Resource_item,
     Resource_item_assignment,
     Scheme_entry); 
END_TYPE; 

TYPE second_in_minute = REAL ;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 

TYPE security_classification_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Alternate_part_relationship,
     Applied_activity_method_assignment,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element_definition,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_assignment,
     Document_version,
     Hardcopy,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification_definition,
     Interface_specification_version,
     Message,
     Part_version,
     Part_view_definition,
     Physical_document_definition,
     Product_as_planned,
     Product_as_realized,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Resource_item,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship,
     Tracing_relationship,
     Work_output); 
END_TYPE; 

TYPE selected_item_context_items = SELECT 
    (Contract,
     Part,
     Product_concept,
     Project); 
END_TYPE; 

TYPE selected_item_select = SELECT 
    (Product,
     Product_version); 
END_TYPE; 

TYPE shape_dependent_select = SELECT
   (Item_shape, 
    Shape_element);
END_TYPE; 

TYPE shape_model = SELECT
   (External_geometric_model, 
    Geometric_model);
END_TYPE; 

TYPE shape_select = SELECT
   (Item_shape, 
    Shape_element, 
    Shape_element_relationship);
END_TYPE; 

TYPE shapeable_item = SELECT
   (Characterizable_object, 
    Product_view_definition, 
    View_definition_usage);
END_TYPE; 

TYPE spr_documented_element_select = SELECT 
    (Part,
     Part_version,
     Part_view_definition); 
END_TYPE; 

TYPE spr_organization_or_person_in_organization_item = SELECT 
    (Document,
     Document_definition,
     Document_version,
     Part,
     Part_version,
     Part_view_definition); 
END_TYPE; 

TYPE spr_product_property_assignment = SELECT 
    (Part_view_definition); 
END_TYPE; 

TYPE state_classification_item = SELECT 
    (Applied_state_assignment,
     State,
     State_relationship); 
END_TYPE; 

TYPE state_definition_classification_item = SELECT 
    (Applied_state_definition_assignment,
     State_definition,
     State_definition_relationship); 
END_TYPE; 

TYPE state_definition_condition_item = SELECT 
    (State_definition,
     State_definition_relationship); 
END_TYPE; 

TYPE state_definition_identification_item = SELECT 
    (State_definition,
     State_definition_relationship); 
END_TYPE; 

TYPE state_definition_of_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Certification,
     Connector_on,
     Contract,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     File_location_identification,
     Hardcopy,
     Interface_connection,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Person_in_organization,
     Physical_document_definition,
     Product_as_planned,
     Product_as_realized,
     Product_category,
     Product_in_slot,
     Project,
     Security_classification,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version); 
END_TYPE; 

TYPE state_definition_property_assignment = SELECT 
    (State_definition,
     State_definition_relationship); 
END_TYPE; 

TYPE state_observed_condition_evaluation_item = SELECT 
    (State_assertion,
     State_assessment); 
END_TYPE; 

TYPE state_of_item = SELECT 
    (Alternate_part_relationship,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Breakdown_version,
     Certification,
     Connector_on,
     Contract,
     Digital_document_definition,
     Digital_file,
     Document,
     Document_version,
     File_location_identification,
     Hardcopy,
     Interface_connection,
     Interface_connector_as_planned,
     Interface_connector_as_realized,
     Interface_connector_definition,
     Interface_connector_design,
     Interface_connector_version,
     Interface_specification,
     Interface_specification_definition,
     Interface_specification_version,
     Message,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Person_in_organization,
     Physical_document_definition,
     Product,
     Product_as_planned,
     Product_as_realized,
     Product_group,
     Product_in_slot,
     Product_version,
     Project,
     Security_classification,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version,
     View_definition_relationship); 
END_TYPE; 

TYPE state_or_state_definition_select = SELECT
   (State, 
    State_definition);
END_TYPE; 

TYPE statechar_ap239_mri_classified_attribute_select = SELECT 
    (Address_assignment,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Certification,
     Certification_assignment,
     Contract,
     Date_or_date_time_assignment,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project_assignment,
     Project_relationship,
     Security_classification,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship); 
END_TYPE; 

TYPE statechar_mri_date_or_date_time_item = SELECT 
    (Applied_state_assignment,
     Applied_state_definition_assignment,
     Certification,
     Contract,
     Organization_or_person_in_organization_assignment,
     Security_classification_assignment,
     State,
     State_assertion,
     State_assessment,
     State_definition,
     State_definition_relationship,
     State_relationship); 
END_TYPE; 

TYPE statechar_mri_identification_item = SELECT 
    (Approval_status,
     Contract,
     Organization,
     Security_classification,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship); 
END_TYPE; 

TYPE statechar_mri_organization_or_person_in_organization_item = SELECT 
    (Applied_state_assignment,
     Applied_state_definition_assignment,
     Contract,
     Identification_assignment,
     Security_classification_assignment,
     State,
     State_assertion,
     State_assessment,
     State_definition,
     State_definition_relationship,
     State_relationship); 
END_TYPE; 

TYPE statechar_mri_string_select = SELECT 
    (Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship); 
END_TYPE; 

TYPE statechar_property_assignment_select = SELECT 
    (Applied_state_assignment,
     Applied_state_definition_assignment,
     State,
     State_definition); 
END_TYPE; 

TYPE string_select = SELECT 
    (Activity,
     Activity_method,
     Activity_method_assignment,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Activity_relationship,
     Alternate_part_relationship,
     Applied_activity_method_assignment,
     Approval,
     Approval_relationship,
     Approval_status,
     Assembly_component_relationship,
     Assembly_relationship_substitution,
     Assigned_property,
     Breakdown,
     Breakdown_element,
     Breakdown_element_realization,
     Breakdown_element_usage,
     Breakdown_element_version,
     Certification,
     Connector_on,
     Contract,
     Date_or_date_time_assignment,
     Digital_document_definition,
     Document,
     Document_assignment,
     Document_definition_relationship,
     Document_version,
     Envelope,
     Envelope_association,
     Event,
     External_item_identification,
     External_source_identification,
     File_relationship,
     Identification_assignment,
     Independent_property,
     Independent_property_relationship,
     Information_right,
     Information_usage_right,
     Interface_connector,
     Interface_connector_definition,
     Interface_connector_version,
     Message,
     Message_association,
     Organization_relationship,
     Part,
     Part_version,
     Part_view_definition,
     Person_in_organization,
     Physical_document_definition,
     Product_as_individual,
     Product_category,
     Project,
     Project_assignment,
     Project_relationship,
     Representation_item,
     Requirement,
     Requirement_assignment,
     Requirement_collection_relationship,
     Requirement_source,
     Requirement_version,
     Requirement_version_relationship,
     Requirement_view_definition,
     Slot,
     Slot_definition,
     Slot_design_to_planned,
     Slot_design_to_realized,
     Slot_on_product,
     Slot_planned_to_realized,
     Slot_version,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_relationship,
     Task_result,
     Tracing_relationship,
     Work_order); 
END_TYPE; 

TYPE task_classification_item = SELECT 
    (Activity_method,
     Activity_method_relationship,
     Applied_activity_method_assignment,
     Task_method_state_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE task_item = SELECT 
    (Breakdown_element,
     Breakdown_element_definition,
     Breakdown_element_usage,
     Breakdown_element_version,
     Document,
     Document_version,
     File,
     Location,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Position,
     Position_type,
     Product,
     Product_as_individual,
     Product_group,
     Product_version,
     Product_view_definition,
     Required_resource,
     Required_resource_assignment,
     Resource_item,
     Task,
     Type_of_person,
     Type_of_person_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE task_resource_select = SELECT 
    (Document,
     Document_definition,
     Document_version,
     File,
     Location,
     Organization,
     Organization_type,
     Part,
     Part_version,
     Part_view_definition,
     Person,
     Person_in_organization,
     Position,
     Position_type,
     Product_as_individual,
     Product_group,
     Type_of_person); 
END_TYPE; 

TYPE template_instance = SELECT
   (Mapping_based_template_instance, 
    Transformation_based_template_instance);
END_TYPE; 

TYPE tsr_approval_item = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_certification_item = SELECT 
    (Task,
     Task_method,
     Task_result); 
END_TYPE; 

TYPE tsr_condition_item = SELECT 
    (Required_resource_assignment,
     Required_resource_relationship,
     Resource_item_assignment,
     Resource_item_relationship,
     Task_assignment,
     Task_method_relationship,
     Task_relationship); 
END_TYPE; 

TYPE tsr_contract_item = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_relationship,
     Task_result); 
END_TYPE; 

TYPE tsr_date_or_date_time_item = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_documented_element_select = SELECT 
    (Location,
     Required_resource_assignment,
     Required_resource_relationship,
     Resource_item_assignment,
     Resource_item_relationship,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_identification_item = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_justification_item = SELECT 
    (Location_assignment,
     Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_justification_support_item = SELECT 
    (Applied_state_assignment,
     Applied_state_definition_assignment,
     Contract,
     Document,
     Document_version,
     Location,
     Location_assignment,
     State,
     State_definition,
     State_definition_relationship,
     State_relationship); 
END_TYPE; 

TYPE tsr_location_assignment_select = SELECT 
    (Document,
     Document_definition,
     Document_version,
     File,
     Organization,
     Organization_type,
     Person,
     Person_in_organization,
     Position,
     Position_type,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Project,
     Required_resource,
     Required_resource_assignment,
     Resource_item,
     Resource_item_assignment,
     Task,
     Task_assignment,
     Task_method,
     Type_of_person); 
END_TYPE; 

TYPE tsr_organization_person_item = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_process_property_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_relationship,
     Task_result); 
END_TYPE; 

TYPE tsr_project_item = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_result); 
END_TYPE; 

TYPE tsr_property_item = SELECT 
    (Task_assignment,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_required_resource_item = SELECT 
    (Task,
     Task_assignment,
     Task_method); 
END_TYPE; 

TYPE tsr_requirement_assignment_item = SELECT 
    (Activity_method,
     Applied_activity_method_assignment,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     State,
     State_definition); 
END_TYPE; 

TYPE tsr_requirement_source_item = SELECT 
    (Activity_method,
     Applied_activity_method_assignment,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     State,
     State_definition); 
END_TYPE; 

TYPE tsr_resource_assignment_item = SELECT 
    (Contract,
     Location,
     Part,
     Part_version,
     Part_view_definition,
     Product_group,
     Project); 
END_TYPE; 

TYPE tsr_security_classification_item = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_method_state_relationship,
     Task_relationship,
     Task_result,
     Task_result_state_relationship,
     Task_state_relationship); 
END_TYPE; 

TYPE tsr_string_select = SELECT 
    (Task,
     Task_assignment,
     Task_method,
     Task_method_relationship,
     Task_relationship,
     Task_result); 
END_TYPE; 

TYPE tsr_task_item = SELECT 
    (Breakdown_element,
     Breakdown_element_definition,
     Breakdown_element_usage,
     Breakdown_element_version,
     Document,
     Document_version,
     File,
     Location,
     Organization,
     Part,
     Part_version,
     Part_view_definition,
     Position,
     Position_type,
     Product,
     Product_as_individual,
     Product_group,
     Product_version,
     Product_view_definition,
     Required_resource,
     Required_resource_assignment,
     Resource_item,
     Task,
     Type_of_person,
     Type_of_person_definition,
     View_definition_relationship); 
END_TYPE; 

TYPE tsr_work_item = SELECT 
    (Task,
     Task_method); 
END_TYPE; 

TYPE tsr_work_output_item = SELECT 
    (Document,
     Document_definition,
     Document_version,
     File,
     Organization,
     Organization_type,
     Part,
     Part_version,
     Part_view_definition,
     Person,
     Person_in_organization,
     Position,
     Position_type,
     Product_as_individual,
     Product_group,
     Type_of_person); 
END_TYPE; 

TYPE type_of_person_classified_select = SELECT 
    (Type_of_person_definition_relationship); 
END_TYPE; 

(*
TYPE type_of_person_item_select = SELECT 
    (); 
END_TYPE; 
*)

TYPE type_of_person_property_assignment_select = SELECT 
    (Type_of_person_definition); 
END_TYPE; 

TYPE version_or_definition = SELECT
   (Product_version, 
    Product_view_definition);
END_TYPE; 

TYPE wd_activity_item = SELECT 
    (Activity,
     Contract,
     Document,
     Document_definition,
     Document_version,
     Event,
     File,
     Organization,
     Person,
     Person_in_organization,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Resource_item,
     Task,
     View_definition_relationship); 
END_TYPE; 

TYPE wd_activity_realization_select = SELECT 
    (Scheme,
     Task,
     Task_method); 
END_TYPE; 

TYPE wd_affected_item_select = SELECT 
    (Activity_method,
     Contract,
     Document,
     Document_definition,
     Document_version,
     File,
     Organization,
     Person,
     Person_in_organization,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Resource_item,
     View_definition_relationship); 
END_TYPE; 

TYPE wd_approval_item = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_certification_item = SELECT 
    (Activity,
     Activity_method); 
END_TYPE; 

TYPE wd_condition_item = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_contract_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_date_or_date_time_item = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_documented_element_select = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_identification_item = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_justification_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_justification_support_item = SELECT 
    (Activity,
     Activity_method,
     Applied_state_assignment,
     Applied_state_definition_assignment,
     Contract,
     Document,
     Document_definition,
     Document_version,
     Event,
     Project,
     State,
     State_definition,
     Work_order,
     Work_request); 
END_TYPE; 

TYPE wd_organization_or_person_in_organization_item = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_project_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_required_resource_item = SELECT 
    (Activity,
     Activity_method,
     Event,
     Scheme,
     Scheme_entry); 
END_TYPE; 

TYPE wd_scheme_entry_item_select = SELECT 
    (Activity,
     Event,
     Resource_event); 
END_TYPE; 

TYPE wd_scheme_subject_select = SELECT 
    (Activity,
     Activity_method,
     Contract,
     Document,
     Document_version,
     Location,
     Organization,
     Person,
     Person_in_organization,
     Product,
     Product_group,
     Product_version,
     Product_view_definition,
     Project,
     Required_resource,
     Required_resource_assignment,
     Resource_item,
     Resource_item_assignment,
     Scheme_entry); 
END_TYPE; 

TYPE wd_security_classification_item = SELECT 
    (Activity,
     Activity_method,
     Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_string_select = SELECT 
    (Activity_method_realization,
     Activity_method_realization_relationship,
     Activity_method_relationship,
     Applied_activity_method_assignment); 
END_TYPE; 

TYPE wd_work_item = SELECT 
    (Activity,
     Activity_method,
     Event,
     Scheme,
     Scheme_entry); 
END_TYPE; 

TYPE wordchar_ap239_mri_classification_item = SELECT 
    (Address,
     Address_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Attribute_translation_assignment,
     Calendar_date,
     Certification,
     Certification_assignment,
     Contract,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Directed_activity,
     Event,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     Security_classification,
     Security_classification_assignment,
     Work_order); 
END_TYPE; 

TYPE wordchar_ap239_mri_classified_attribute_select = SELECT 
    (Address_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Certification,
     Certification_assignment,
     Contract,
     Date_or_date_time_assignment,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project_assignment,
     Project_relationship,
     Security_classification,
     Work_order); 
END_TYPE; 

TYPE wordchar_mri_approval_item = SELECT 
    (Certification,
     Contract,
     Directed_activity,
     Work_order); 
END_TYPE; 

TYPE wordchar_mri_date_or_date_time_item = SELECT 
    (Certification,
     Contract,
     Directed_activity,
     Organization_or_person_in_organization_assignment,
     Security_classification_assignment,
     Work_order); 
END_TYPE; 

TYPE wordchar_mri_identification_item = SELECT 
    (Approval_status,
     Contract,
     Directed_activity,
     Organization,
     Security_classification,
     Work_order); 
END_TYPE; 

TYPE wordchar_mri_organization_or_person_in_organization_item = SELECT 
    (Contract,
     Directed_activity,
     Identification_assignment,
     Security_classification_assignment,
     Work_order); 
END_TYPE; 

TYPE wordchar_mri_string_select = SELECT 
    (Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     Work_order); 
END_TYPE; 

TYPE work_item = SELECT 
    (Activity,
     Activity_method,
     Event,
     Scheme,
     Scheme_entry,
     Task,
     Task_method); 
END_TYPE; 

TYPE work_output_approval_item = SELECT 
    (Work_output); 
END_TYPE; 

TYPE work_output_certification_item = SELECT 
    (Work_output); 
END_TYPE; 

TYPE work_output_characterized_activity_definition = SELECT 
    (Activity,
     Activity_method,
     Work_output); 
END_TYPE; 

TYPE work_output_classification_item = SELECT 
    (Work_output,
     Work_output_assignment,
     Work_output_relationship); 
END_TYPE; 

TYPE work_output_date_or_date_time_item = SELECT 
    (Work_output); 
END_TYPE; 

TYPE work_output_identification_item = SELECT 
    (Work_output); 
END_TYPE; 

TYPE work_output_item = SELECT 
    (Document,
     Document_definition,
     Document_version,
     File,
     Organization,
     Organization_type,
     Part,
     Part_version,
     Part_view_definition,
     Person,
     Person_in_organization,
     Position,
     Position_type,
     Product_as_individual,
     Product_group,
     Type_of_person); 
END_TYPE; 

TYPE work_output_organization_or_person_in_organization = SELECT 
    (Work_output); 
END_TYPE; 

TYPE work_output_security_classification_item = SELECT 
    (Work_output); 
END_TYPE; 

TYPE wreqchar_ap239_mri_classification_item = SELECT 
    (Address,
     Address_assignment,
     Affected_items_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Attribute_translation_assignment,
     Calendar_date,
     Certification,
     Certification_assignment,
     Contract,
     Contract_assignment,
     Date_or_date_time_assignment,
     Date_time,
     Event,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship,
     Security_classification,
     Security_classification_assignment,
     Work_request); 
END_TYPE; 

TYPE wreqchar_ap239_mri_classified_attribute_select = SELECT 
    (Address_assignment,
     Approval,
     Approval_assignment,
     Approval_relationship,
     Approval_status,
     Approving_person_organization,
     Certification,
     Certification_assignment,
     Contract,
     Date_or_date_time_assignment,
     Event_assignment,
     Event_relationship,
     Identification_assignment,
     Language,
     Organization_or_person_in_organization_assignment,
     Organization_relationship,
     Person_in_organization,
     Project_assignment,
     Project_relationship,
     Security_classification,
     Work_request,
     Work_request_status); 
END_TYPE; 

TYPE wreqchar_mri_approval_item = SELECT 
    (Activity_method_assignment,
     Certification,
     Contract,
     Work_request); 
END_TYPE; 

TYPE wreqchar_mri_date_or_date_time_item = SELECT 
    (Activity_method_assignment,
     Certification,
     Contract,
     Organization_or_person_in_organization_assignment,
     Security_classification_assignment,
     Work_request); 
END_TYPE; 

TYPE wreqchar_mri_identification_item = SELECT 
    (Approval_status,
     Contract,
     Organization,
     Security_classification,
     Work_request); 
END_TYPE; 

TYPE wreqchar_mri_organization_or_person_in_organization_item = SELECT 
    (Activity_method_assignment,
     Contract,
     Identification_assignment,
     Security_classification_assignment,
     Work_request); 
END_TYPE; 

TYPE wreqchar_mri_string_select = SELECT 
    (Activity_method_assignment,
     Approval,
     Approval_relationship,
     Approval_status,
     Certification,
     Contract,
     Date_or_date_time_assignment,
     Identification_assignment,
     Organization_relationship,
     Person_in_organization,
     Project,
     Project_assignment,
     Project_relationship); 
END_TYPE; 

TYPE year_number = INTEGER;
END_TYPE; 


ENTITY Activity;
  chosen_method : activity_method;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Activity_actual
SUBTYPE OF (activity);
END_ENTITY;
 
ENTITY Activity_happening
SUBTYPE OF (activity_relationship);
  SELF\activity_relationship.relating_activity : activity_actual;
  SELF\activity_relationship.related_activity : activity;
DERIVE
  actual : activity_actual := SELF\activity_relationship.relating_activity;
  predicted : activity := SELF\activity_relationship.related_activity;
WHERE
  wr1 : NOT ('ACTIVITY_AS_REALIZED.ACTIVITY_ACTUAL' IN TYPEOF(predicted));
END_ENTITY;
 
ENTITY Activity_method
SUPERTYPE OF (ONEOF (task, task_method));
  consequence : OPTIONAL STRING;
  description : OPTIONAL STRING;
  name : STRING;
  purpose : STRING;
END_ENTITY;
 
ENTITY Activity_method_assignment;
  assigned_method : activity_method;
  associated_request : work_request;
  relation_type : STRING;
END_ENTITY;
 
ENTITY Activity_method_realization;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  activity_method : activity_method;
  realized_by : activity_realization_select;
END_ENTITY;
 
ENTITY Activity_method_realization_relationship;
  relating : activity_method_realization;
  related : activity_method_realization;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Activity_method_relationship
SUPERTYPE OF (ONEOF (task_method_relationship, task_relationship));
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : activity_method;
  related_method : activity_method;
END_ENTITY;
 
ENTITY Activity_property;
  described_element : characterized_activity_definition;
  name : STRING;
  description : STRING;
END_ENTITY;
 
ENTITY Activity_property_representation;
  description : OPTIONAL STRING;
  property : activity_property;
  rep : representation;
  role : STRING;
END_ENTITY;
 
ENTITY Activity_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related_activity : activity;
  relating_activity : activity;
END_ENTITY;
 
ENTITY Activity_status;
  assigned_activity : activity;
  status : STRING;
END_ENTITY;
 
ENTITY Address;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
  name : OPTIONAL STRING;
WHERE
  wr1 : EXISTS(street_number) OR EXISTS(street) OR EXISTS(postal_box) OR EXISTS
    (town) OR EXISTS(region) OR EXISTS(postal_code) OR EXISTS(country) OR 
    EXISTS(internal_location) OR EXISTS(facsimile_number) OR EXISTS(
    telephone_number) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number
    );
END_ENTITY;
 
ENTITY Address_assignment;
  assigned_address : address;
  address_type : OPTIONAL STRING;
  located_person_organizations : SET [1:?] OF 
  organization_or_person_in_organization_select;
END_ENTITY;
 
ENTITY Address_based_location_representation;
  postal_address : address_assignment;
END_ENTITY;
 
ENTITY Advisory_task_step
SUBTYPE OF (task_step);
END_ENTITY;
 
ENTITY Affected_items_assignment;
  assigned_work_request : work_request;
  items : SET [1:?] OF affected_item_select;
END_ENTITY;
 
ENTITY Alias_identification
SUBTYPE OF (identification_assignment);
DERIVE
  SELF\identification_assignment.role : STRING := 'alias';
WHERE
  wr1 : SIZEOF(QUERY(item <* SELF\identification_assignment.items | NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ALIAS_IDENTIFICATION_ITEM' IN 
    TYPEOF(item)))) = 0;
END_ENTITY;
 
ENTITY Alternate_part_relationship
SUBTYPE OF (alternate_product_relationship);
  SELF\alternate_product_relationship.alternate_product : part;
  SELF\alternate_product_relationship.base_product : part;
END_ENTITY;
 
ENTITY Alternate_product_relationship;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  alternate_product : product;
  base_product : product;
  criteria : STRING;
UNIQUE
  ur1 : alternate_product, base_product;
WHERE
  wr1 : alternate_product :<>: base_product;
END_ENTITY;
 
ENTITY Amount_of_substance_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY And_state_cause_effect_definition
SUBTYPE OF (state_cause_effect_definition);
END_ENTITY;
 
ENTITY Applied_activity_assignment;
  assigned_activity : activity;
  items : SET [1:?] OF activity_item;
  role : STRING;
END_ENTITY;
 
ENTITY Applied_activity_method_assignment;
  assigned_activity_method : activity_method;
  items : SET [1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;
 
ENTITY Applied_independent_activity_property
SUBTYPE OF (activity_property);
  base_element_property : independent_property;
DERIVE
  SELF\activity_property.name : STRING := base_element_property.property_type;
END_ENTITY;
 
ENTITY Applied_independent_property
SUBTYPE OF (assigned_property);
  base_independent_property : independent_property;
DERIVE
  SELF\assigned_property.name : STRING := base_independent_property.
  property_type;
END_ENTITY;
 
ENTITY Applied_independent_resource_property
SUBTYPE OF (resource_property);
  base_element_property : independent_property;
DERIVE
  SELF\resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;
 
ENTITY Applied_information_usage_right;
  item : SET [1:?] OF information_usage_right_item;
  right_applied : information_usage_right;
END_ENTITY;
 
ENTITY Applied_state_assignment;
  described_state : state;
  assigned_to : state_of_item;
  role : state_role;
END_ENTITY;
 
ENTITY Applied_state_definition_assignment;
  described_state_definition : state_definition;
  assigned_to : state_definition_of_item;
  role : state_definition_role;
END_ENTITY;
 
ENTITY Approval;
  status : approval_status;
  purpose : STRING;
  planned_date : OPTIONAL date_or_date_time_select;
  actual_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
 
ENTITY Approval_assignment;
  assigned_approval : approval;
  items : SET [1:?] OF approval_item;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Approval_relationship;
  relation_type : STRING;
  relating_approval : approval;
  related_approval : approval;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Approval_status;
  status_name : STRING;
END_ENTITY;
 
ENTITY Approving_person_organization;
  person_organization : organization_or_person_in_organization_select;
  approval_date : OPTIONAL date_or_date_time_select;
  authorized_approval : approval;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Assembly_component_relationship
ABSTRACT SUPERTYPE OF (ONEOF (next_assembly_usage, promissory_usage, 
component_upper_level_identification))
SUBTYPE OF (view_definition_usage);
  quantity : OPTIONAL value_with_unit;
  location_indicator : OPTIONAL STRING;
WHERE
  wr1 : NOT EXISTS(quantity) XOR NOT ('NUMBER' IN TYPEOF(quantity.
    value_component)) XOR (quantity.value_component > 0);
END_ENTITY;
 
ENTITY Assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship : assembly_component_relationship;
  substitute_relationship : assembly_component_relationship;
UNIQUE
  ur1 : base_relationship, substitute_relationship;
WHERE
  wr1 : base_relationship.relating_view :=: substitute_relationship.
    relating_view;
  wr2 : base_relationship :<>: substitute_relationship;
END_ENTITY;
 
ENTITY Assigned_document_property
SUBTYPE OF (assigned_property);
DERIVE
  SELF\assigned_property.name : STRING := 'document property';
UNIQUE
  ur1 : SELF\assigned_property.described_element;
WHERE
  wr1 : SIZEOF(['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.DOCUMENT_DEFINITION', 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.FILE'] * TYPEOF(SELF\
    assigned_property.described_element)) = 1;
END_ENTITY;
 
ENTITY Assigned_property;
  described_element : property_assignment_select;
  description : OPTIONAL STRING;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Attribute_classification;
  allowed_value : class;
  attribute_name : STRING;
  classified_entity : classified_attribute_select;
END_ENTITY;
 
ENTITY Attribute_translation_assignment;
  considered_instances : SET [1:?] OF string_select;
  considered_attribute : STRING;
  translation_text : STRING;
  translation_language : language;
WHERE
  wr1 : SIZEOF(QUERY(ci <* considered_instances | SIZEOF(QUERY(ata <* USEDIN(ci
    , 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ATTRIBUTE_TRANSLATION_ASSIGNMENT.CONSIDERED_INSTANCES'
    ) | (ata.considered_attribute = considered_attribute) AND (ata.
    translation_language :=: translation_language))) > 1)) = 0;
END_ENTITY;
 
ENTITY Axis_placement
SUBTYPE OF (detailed_geometric_model_element);
  origin : cartesian_point;
  x_axis : direction;
  y_axis : direction;
DERIVE
  dim : INTEGER := SIZEOF(origin.coordinates);
WHERE
  wr1 : dim > 1;
  wr2 : dim = SIZEOF(x_axis.coordinates);
  wr3 : dim = SIZEOF(y_axis.coordinates);
END_ENTITY;
 
ENTITY Axis_placement_mapping;
  source : axis_placement;
  target : axis_placement;
WHERE
  wr1 : source\axis_placement.dim = target\axis_placement.dim;
END_ENTITY;
 
ENTITY Axis_placement_transformation_mapping;
  source : axis_placement;
  target : cartesian_transformation;
WHERE
  wr1 : source\axis_placement.dim = SIZEOF(target.translation\cartesian_point.
    coordinates);
END_ENTITY;
 
ENTITY Breakdown
SUPERTYPE OF (ONEOF (functional_breakdown, hybrid_breakdown, physical_breakdown
, system_breakdown, zone_breakdown))
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY Breakdown_context
SUPERTYPE OF (ONEOF (functional_breakdown_context, hybrid_breakdown_context, 
physical_breakdown_context, system_breakdown_context, zone_breakdown_context));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  breakdown : breakdown_version;
  breakdown_element : breakdown_element_definition;
END_ENTITY;
 
ENTITY Breakdown_element
SUPERTYPE OF (ONEOF (functional_element, physical_element, system_element, 
zone_element))
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY Breakdown_element_definition
SUPERTYPE OF (ONEOF (functional_element_definition, physical_element_definition
, system_element_definition, zone_element_definition))
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : breakdown_element_version;
END_ENTITY;
 
ENTITY Breakdown_element_realization
SUBTYPE OF (product_definition_element_relationship);
END_ENTITY;

(* 
ENTITY Breakdown_element_usage
SUPERTYPE OF (ONEOF (functional_element_usage, hybrid_element_usage, 
physical_element_usage, system_element_usage, zone_element_usage))
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.related_view : breakdown_element_definition
  ;
  name : STRING;
  SELF\view_definition_relationship.relating_view : 
  breakdown_element_definition;
END_ENTITY;
*)

ENTITY Breakdown_element_usage
SUPERTYPE OF (ONEOF (functional_element_usage, hybrid_element_usage, 
physical_element_usage, system_element_usage, zone_element_usage))
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.related_view : breakdown_element_definition
  ;
  name : STRING;
  SELF\view_definition_relationship.relating_view : 
  breakdown_element_definition;
    DERIVE
      parent_element : breakdown_element_definition := SELF\
                          view_definition_relationship.relating_view;
      child_element  : breakdown_element_definition := SELF\
                          view_definition_relationship.related_view;
END_ENTITY;


ENTITY Breakdown_element_version
SUPERTYPE OF (ONEOF (functional_element_version, physical_element_version, 
system_element_version, zone_element_version))
SUBTYPE OF (product_version);
  SELF\product_version.of_product : breakdown_element;
END_ENTITY;
 
ENTITY Breakdown_of;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  breakdown : breakdown_version;
  of_view : product_view_definition;
END_ENTITY;
 
ENTITY Breakdown_version
SUPERTYPE OF (ONEOF (functional_breakdown_version, hybrid_breakdown_version, 
physical_breakdown_version, system_breakdown_version, zone_breakdown_version))
SUBTYPE OF (product_version);
  SELF\product_version.of_product : breakdown;
INVERSE
  breakdown_of : SET [1:1] OF breakdown_of FOR breakdown;
END_ENTITY;
 
ENTITY Calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;
 
ENTITY Cartesian_point
SUBTYPE OF (detailed_geometric_model_element);
  coordinates :  LIST [1:3] OF length_measure;
END_ENTITY;
 
ENTITY Cartesian_transformation_2d
SUBTYPE OF (detailed_geometric_model_element);
  multiplication_matrix :  ARRAY [1 : 2] OF direction;
  translation : cartesian_point;
WHERE
  wr1 : SIZEOF(multiplication_matrix[1]\direction.coordinates) = 2;
  wr2 : SIZEOF(multiplication_matrix[2]\direction.coordinates) = 2;
  wr3 : SIZEOF(translation.coordinates) = 2;
END_ENTITY;
 
ENTITY Cartesian_transformation_3d
SUBTYPE OF (detailed_geometric_model_element);
  multiplication_matrix :  ARRAY [1 : 3] OF direction;
  translation : cartesian_point;
WHERE
  wr1 : SIZEOF(multiplication_matrix[1]\direction.coordinates) = 3;
  wr2 : SIZEOF(multiplication_matrix[2]\direction.coordinates) = 3;
  wr3 : SIZEOF(multiplication_matrix[3]\direction.coordinates) = 3;
  wr4 : SIZEOF(translation.coordinates) = 3;
END_ENTITY;
 
ENTITY Certification;
  description : OPTIONAL STRING;
  kind : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Certification_assignment;
  assigned_certification : certification;
  items : SET [1:?] OF certification_item;
  role : STRING;
END_ENTITY;
 
ENTITY Characterizable_object;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Class
SUPERTYPE OF (ONEOF (class_by_extension, class_by_intension));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Class_by_extension
SUBTYPE OF (class);
END_ENTITY;
 
ENTITY Class_by_intension
SUBTYPE OF (class);
END_ENTITY;
 
ENTITY Classification_assignment;
  assigned_class : class;
  items : SET [1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Complement;
  id : STRING;
  name : STRING;
  description : STRING;
  set_1 : class;
  set_2 : class;
  universe : class;
END_ENTITY;
 
ENTITY Component_upper_level_identification
SUBTYPE OF (assembly_component_relationship);
  upper_assembly_relationship : assembly_component_relationship;
  sub_assembly_relationship : next_assembly_usage;
UNIQUE
  ur1 : upper_assembly_relationship, sub_assembly_relationship;
WHERE
  wr1 : SELF :<>: upper_assembly_relationship;
  wr2 : SELF\view_definition_relationship.relating_view :=: 
    upper_assembly_relationship\view_definition_relationship.relating_view;
  wr3 : SELF\view_definition_relationship.related_view :=: 
    sub_assembly_relationship\view_definition_relationship.related_view;
  wr4 : (upper_assembly_relationship\view_definition_relationship.related_view
     :=: sub_assembly_relationship\view_definition_relationship.relating_view) 
    OR (SIZEOF(QUERY(pdr <* USEDIN(upper_assembly_relationship\
    view_definition_relationship.related_view, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.VIEW_DEFINITION_RELATIONSHIP.RELATED_VIEW'
    ) | pdr.relating_view :=: sub_assembly_relationship\
    view_definition_relationship.relating_view)) = 1);
  wr5 : SIZEOF(['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.NEXT_ASSEMBLY_USAGE', 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.COMPONENT_UPPER_LEVEL_IDENTIFICATION'
    ] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;
 
ENTITY Composition_of_state
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  whole : SET [1:?] OF state := SELF\state_relationship.relating;
  part : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY Composition_of_state_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  whole : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  relating;
  part : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY Concurrent_methods
SUBTYPE OF (structured_task_method);
  methods : SET [2:?] OF task_method;
END_ENTITY;
 
ENTITY Condition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Condition_assignment;
  assigned_condition : condition;
  item : condition_item;
END_ENTITY;
 
ENTITY Condition_evaluation;
  name : STRING;
  description : OPTIONAL STRING;
  result : LOGICAL;
  condition : condition;
END_ENTITY;
 
ENTITY Condition_evaluation_assignment;
  assigned_condition_evaluation : condition_evaluation;
  item : condition_evaluation_item;
END_ENTITY;
 
ENTITY Condition_evaluation_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  condition_evaluation : condition_evaluation;
  evaluation_parameter : condition_evaluation_parameter_item;
END_ENTITY;
 
ENTITY Condition_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  condition : condition;
  parameter : condition_parameter_item;
END_ENTITY;
 
ENTITY Condition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_condition : condition;
  related_condition : condition;
END_ENTITY;
 
ENTITY Configuration_watched_item;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : product_concept;
INVERSE
  corresponding_design : SET [0:1] OF item_design_association FOR watched_item;
END_ENTITY;
 
ENTITY Connector_on;
  connector : interface_connector_definition;
  description : OPTIONAL STRING;
  id : STRING;
  item : connector_on_item;
  name : STRING;
END_ENTITY;
 
ENTITY Content_item;
  item_identifier : STRING;
  item_type : STRING;
  access_comment : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Context_dependent_unit
SUBTYPE OF (unit);
WHERE
  wr1 : EXISTS(SELF\unit.name);
END_ENTITY;
 
ENTITY Contextual_item_shape
SUBTYPE OF (item_shape);
  SELF\item_shape.described_element : view_definition_usage;
DERIVE
  shaped_product : product_view_definition := described_element\
  view_definition_relationship.related_view;
END_ENTITY;
 
ENTITY Contextual_shape_representation_inclusion;
  contextual_shape : contextual_item_shape;
  context_representation : geometric_model;
  positioned_representation : template_instance;
END_ENTITY;
 
ENTITY Contract;
  id : STRING;
  purpose : STRING;
  kind : STRING;
END_ENTITY;
 
ENTITY Contract_assignment;
  assigned_contract : contract;
  items : SET [1:?] OF contract_item;
END_ENTITY;
 
ENTITY Conversion_based_unit
SUBTYPE OF (unit);
  conversion_factor : value_with_unit;
WHERE
  wr1 : EXISTS(SELF\unit.name);
END_ENTITY;
 
ENTITY Date_or_date_time_assignment;
  assigned_date : date_or_date_time_select;
  role : STRING;
  items : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
 
ENTITY Date_time;
  date_component : calendar_date;
  time_component : local_time;
END_ENTITY;
 
ENTITY Dated_effectivity
SUBTYPE OF (effectivity);
  start_bound : date_or_event;
  end_bound : OPTIONAL date_or_event;
END_ENTITY;
 
ENTITY Decision_point
SUBTYPE OF (structured_task_method);
  condition : condition;
  true_case_method : OPTIONAL task_method;
  false_case_method : OPTIONAL task_method;
  unknown_case_method : OPTIONAL task_method;
END_ENTITY;
 
ENTITY Decreasing_resource_event
SUBTYPE OF (resource_event);
END_ENTITY;
 
ENTITY Defined_state_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  definitive_state : state_assertion;
  defined_state : state_assessment;
END_ENTITY;
 
ENTITY Derived_unit
SUBTYPE OF (unit);
  elements : SET [1:?] OF derived_unit_element;
END_ENTITY;
 
ENTITY Derived_unit_element;
  base_unit : unit;
  exponent : REAL;
END_ENTITY;
 
ENTITY Descriptive_document_property
SUBTYPE OF (string_representation_item);
INVERSE
  valued_characteristic : SET [1:1] OF document_property_representation FOR 
  items;
END_ENTITY;
 
ENTITY Detailed_geometric_model_element
ABSTRACT SUPERTYPE OF (ONEOF (cartesian_point, direction, axis_placement, 
cartesian_transformation_2d, cartesian_transformation_3d))
SUBTYPE OF (representation_item);
END_ENTITY;
 
ENTITY Digital_document_definition
SUBTYPE OF (document_definition);
  files : SET OF digital_file;
END_ENTITY;
 
ENTITY Digital_file
SUBTYPE OF (file);
END_ENTITY;
 
ENTITY Directed_activity
SUBTYPE OF (activity);
  directive : work_order;
END_ENTITY;
 
ENTITY Direction
SUBTYPE OF (detailed_geometric_model_element);
  coordinates :  LIST [2:3] OF length_measure;
END_ENTITY;
 
ENTITY Distribution_by_value
SUBTYPE OF (probability_distribution);
  defined_function : value_function;
  distribution_function : STRING;
END_ENTITY;
 
ENTITY Document
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY Document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : documented_element_select;
  role : STRING;
END_ENTITY;
 
ENTITY Document_definition
ABSTRACT SUPERTYPE OF (ONEOF (digital_document_definition, 
physical_document_definition));
  id : STRING;
  description : OPTIONAL STRING;
  associated_document_version : document_version;
END_ENTITY;
 
ENTITY Document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : document_definition;
  related_document_definition : document_definition;
WHERE
  wr1 : relating_document_definition :<>: related_document_definition;
END_ENTITY;
 
ENTITY Document_location_identification
SUBTYPE OF (external_source_identification);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.DOCUMENT_DEFINITION' IN TYPEOF
    (SELF\external_source_identification.item);
END_ENTITY;
 
ENTITY Document_property_representation
SUBTYPE OF (representation);
  SELF\representation.items : SET [1:?] OF descriptive_or_numerical;
WHERE
  wr1 : SIZEOF(QUERY(pr <* USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PROPERTY_REPRESENTATION.REP') | 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ASSIGNED_PROPERTY' IN TYPEOF(pr.
    property))) > 0;
  wr2 : SELF\representation.context_of_items.kind = 'document parameters';
  wr3 : valid_document_property_representation(SELF);
  wr4 : SIZEOF(QUERY(it1 <* SELF\representation.items | SIZEOF(QUERY(it2 <* 
    SELF\representation.items | it1.name = it2.name)) > 1)) = 0;
END_ENTITY;
 
ENTITY Document_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : document;
END_ENTITY;
 
ENTITY Duration
SUBTYPE OF (value_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF
    \value_with_unit.unit);
END_ENTITY;
 
ENTITY Effectivity
SUPERTYPE OF (ONEOF (serial_effectivity, dated_effectivity, lot_effectivity, 
time_interval_effectivity));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Effectivity_assignment;
  assigned_effectivity : effectivity;
  role : STRING;
  items : SET [1:?] OF effectivity_item;
END_ENTITY;
 
ENTITY Effectivity_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_effectivity : effectivity;
  related_effectivity : effectivity;
END_ENTITY;
 
ENTITY Electric_current_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY End_task
SUBTYPE OF (task_method);
END_ENTITY;
 
ENTITY Envelope;
  acknowledge : OPTIONAL STRING;
  id : STRING;
  wrapping : OPTIONAL message;
END_ENTITY;
 
ENTITY Envelope_association;
  related : envelope;
  relating : envelope;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Event;
  actual_start_date : OPTIONAL date_or_date_time_select;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
  planned_start_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
 
ENTITY Event_assignment;
  assigned_event : event;
  items : SET [1:?] OF event_item;
  role : STRING;
END_ENTITY;
 
ENTITY Event_relationship;
  description : OPTIONAL STRING;
  event1 : event;
  event2 : event;
  relation_type : STRING;
END_ENTITY;
 
ENTITY Exit_loop
SUBTYPE OF (task_method);
END_ENTITY;
 
ENTITY Experience_gained;
  experience_of : experience_type;
  gained_by : person_or_organization_or_person_in_organization_select;
END_ENTITY;
 
ENTITY Experience_instance;
  consists_of : OPTIONAL defined_methods;
  defines : experience_gained;
  description : OPTIONAL STRING;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Experience_type;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY External_class
SUBTYPE OF (class);
  external_source : external_class_library;
END_ENTITY;
 
ENTITY External_class_library;
  id : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY External_geometric_model
SUBTYPE OF (geometric_model);
  SELF\representation.items : SET [1:1] OF axis_placement;
  external_file : digital_file;
WHERE
  wr1 : SELF\representation.context_of_items.dimension_count = 3;
  wr2 : SELF\representation.context_of_items.kind = 'external';
END_ENTITY;
 
ENTITY External_item_identification
SUBTYPE OF (external_source_identification);
  external_id : STRING;
END_ENTITY;
 
ENTITY External_source_identification;
  source_id : STRING;
  source_type : STRING;
  item : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY File
ABSTRACT SUPERTYPE OF (ONEOF (digital_file, hardcopy));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;
 
ENTITY File_location_identification
SUBTYPE OF (external_item_identification);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.FILE' IN TYPEOF(SELF\
    external_source_identification.item);
END_ENTITY;
 
ENTITY File_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : file;
  related_document_file : file;
WHERE
  wr1 : relating_document_file :<>: related_document_file;
END_ENTITY;
 
ENTITY Function_value_pair;
  function_value : probability_function_value;
  variable_value : random_variable;
END_ENTITY;
 
ENTITY Functional_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY Functional_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : functional_breakdown_version;
  SELF\breakdown_context.breakdown_element : functional_element_definition;
END_ENTITY;
 
ENTITY Functional_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : functional_breakdown;
END_ENTITY;
 
ENTITY Functional_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY Functional_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : 
  functional_element_version;
END_ENTITY;
 
ENTITY Functional_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : functional_element_definition;
  SELF\breakdown_element_usage.child_element : functional_element_definition;
END_ENTITY;
 
ENTITY Functional_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : functional_element;
END_ENTITY;
 
ENTITY Geometric_coordinate_space
SUBTYPE OF (numerical_representation_context);
  dimension_count : INTEGER;
WHERE
  wr1 : dimension_count > 0;
END_ENTITY;
 
ENTITY Geometric_model
SUBTYPE OF (representation);
  version_id : OPTIONAL STRING;
  model_extent : OPTIONAL length_measure;
  SELF\representation.context_of_items : geometric_coordinate_space;
  SELF\representation.items : SET [1:?] OF detailed_geometric_model_element;
END_ENTITY;
 
ENTITY Global_location_representation;
  altitude : OPTIONAL value_with_unit;
  geographical_area : OPTIONAL STRING;
  latitude : value_with_unit;
  longitude : value_with_unit;
END_ENTITY;
 
ENTITY Hardcopy
SUBTYPE OF (file);
END_ENTITY;
 
ENTITY Hybrid_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY Hybrid_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : hybrid_breakdown_version;
END_ENTITY;
 
ENTITY Hybrid_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : hybrid_breakdown;
END_ENTITY;
 
ENTITY Hybrid_element_usage
SUBTYPE OF (breakdown_element_usage);
END_ENTITY;
 
ENTITY Identification_assignment;
  identifier : STRING;
  role : STRING;
  description : OPTIONAL STRING;
  items : SET [1:?] OF identification_item;
END_ENTITY;
 
ENTITY In_zone;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  located_item : in_zone_item;
  zone : zone_element_definition;
END_ENTITY;
 
ENTITY Increasing_resource_event
SUBTYPE OF (resource_event);
END_ENTITY;
 
ENTITY Independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Independent_property_relationship;
  relation_type : STRING;
  related : independent_property;
  relating : independent_property;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Independent_property_representation;
  description : OPTIONAL STRING;
  property : independent_property;
  rep : representation;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Information_right;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  restriction : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Information_usage_right;
  id : STRING;
  name : STRING;
  grants_right : SET [1:?] OF information_right;
  comment : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Information_usage_right_relationship;
  related : information_usage_right;
  relating : information_usage_right;
  role : STRING;
END_ENTITY;
 
ENTITY Interface_connection
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.related_view : 
  interface_connector_definition;
  SELF\view_definition_relationship.relating_view : 
  interface_connector_definition;
DERIVE
  connected : interface_connector_definition := SELF\
  view_definition_relationship.related_view;
  connecting : interface_connector_definition := SELF\
  view_definition_relationship.relating_view;
END_ENTITY;
 
ENTITY Interface_connector
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY Interface_connector_as_planned
SUBTYPE OF (interface_connector_version);
END_ENTITY;
 
ENTITY Interface_connector_as_realized
SUBTYPE OF (interface_connector_version);
END_ENTITY;
 
ENTITY Interface_connector_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : interface_connector_version;
END_ENTITY;
 
ENTITY Interface_connector_design
SUBTYPE OF (interface_connector_version);
END_ENTITY;
 
ENTITY Interface_connector_design_to_planned;
  description : OPTIONAL STRING;
  design : interface_connector_design;
  id : STRING;
  name : STRING;
  planned : interface_connector_as_planned;
END_ENTITY;
 
ENTITY Interface_connector_design_to_realized;
  description : OPTIONAL STRING;
  design : interface_connector_design;
  id : STRING;
  name : STRING;
  realized : interface_connector_as_realized;
END_ENTITY;
 
ENTITY Interface_connector_planned_to_realized;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
  planned : interface_connector_as_planned;
  realized : interface_connector_as_realized;
END_ENTITY;
 
ENTITY Interface_connector_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : interface_connector;
END_ENTITY;
 
ENTITY Interface_definition_for;
  description : OPTIONAL STRING;
  id : STRING;
  interface : interface_specification_definition;
  interface_component : product_view_definition;
  name : STRING;
END_ENTITY;
 
ENTITY Interface_specification
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY Interface_specification_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : 
  interface_specification_version;
END_ENTITY;
 
ENTITY Interface_specification_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : interface_specification;
END_ENTITY;
 
ENTITY Intersection;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  operand : SET [2:?] OF class;
  resultant : class;
END_ENTITY;
 
ENTITY Item_design_association;
  watched_item : configuration_watched_item;
  proposed_design : version_or_definition;
UNIQUE
  ur1 : watched_item, proposed_design;
END_ENTITY;
 
ENTITY Item_shape;
  described_element : shapeable_item;
  description : OPTIONAL STRING;
  id : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Item_usage_effectivity;
  effectivity_domain : effectivity;
  item_usage_relationship : view_definition_usage;
  resolved_configuration : item_design_association;
END_ENTITY;
 
ENTITY Justification;
  id : STRING;
  name : OPTIONAL STRING;
  description : STRING;
  context_description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Justification_assignment;
  justification : justification;
  description : OPTIONAL STRING;
  item : justification_item;
  role : STRING;
END_ENTITY;
 
ENTITY Justification_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_justification : justification;
  related_justification : justification;
END_ENTITY;
 
ENTITY Justification_support_assignment;
  justification : justification;
  description : OPTIONAL STRING;
  support_item : justification_support_item;
  role : STRING;
END_ENTITY;
 
ENTITY Language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Language_indication;
  considered_instances : SET [1:?] OF string_select;
  considered_attribute : STRING;
  used_language : language;
END_ENTITY;
 
ENTITY Length_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY Local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : time_offset;
END_ENTITY;
 
ENTITY Location;
  alternative_location_representations : SET [1:?] OF location_representation;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Location_assignment;
  description : OPTIONAL STRING;
  role : OPTIONAL STRING;
  entity_for_location : location_assignment_select;
  location_for_assignment : location;
END_ENTITY;
 
ENTITY Location_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related : location;
  relating : location;
END_ENTITY;
 
ENTITY Looping_method
SUPERTYPE OF (ONEOF (repeat_count, repeat_until, repeat_while))
SUBTYPE OF (structured_task_method);
  repeated_method : task_method;
END_ENTITY;
 
ENTITY Lot_effectivity
SUBTYPE OF (effectivity);
  lot_id : STRING;
  lot_size : value_with_unit;
END_ENTITY;
 
ENTITY Luminous_intensity_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY Make_from_relationship
SUBTYPE OF (view_definition_usage);
  SELF\view_definition_relationship.relating_view : part_view_definition;
  SELF\view_definition_relationship.related_view : part_view_definition;
  quantity : OPTIONAL value_with_unit;
  priority : OPTIONAL INTEGER;
WHERE
  wr1 : SELF\view_definition_relationship.relating_view :<>: SELF\
    view_definition_relationship.related_view;
  wr2 : NOT EXISTS(quantity) XOR NOT ('NUMBER' IN TYPEOF(quantity.
    value_component)) XOR (quantity.value_component > 0);
END_ENTITY;
 
ENTITY Managed_resource;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
  item : resource_item;
  location : OPTIONAL resource_location;
END_ENTITY;
 
ENTITY Managed_resource_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : managed_resource;
  related : managed_resource;
END_ENTITY;
 
ENTITY Mapping_based_template_instance
SUBTYPE OF (detailed_geometric_model_element);
  replicated_model : shape_model;
  source : axis_placement;
  target : geometric_mapping_target;
END_ENTITY;
 
ENTITY Market;
  name : STRING;
  market_segment_type : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Mass_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY Measure_item
ABSTRACT SUPERTYPE OF (ONEOF (numerical_item_with_unit, 
numerical_item_with_global_unit, value_limit, value_limit_with_global_unit, 
value_list, value_range, value_range_with_global_unit, value_with_tolerances))
SUBTYPE OF (representation_item);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PROPERTY_VALUE_REPRESENTATION.ITEMS'
    )) > 0;
END_ENTITY;
 
ENTITY Message;
  contains : SET OF content_item;
  defined_by : OPTIONAL SET OF message_definer_select;
  id : STRING;
  message_type : STRING;
  purpose : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Message_association;
  related : message;
  relating : message;
  role : STRING;
END_ENTITY;
 
ENTITY Method_constraint
SUBTYPE OF (task_method_relationship);
  applies_in : OPTIONAL constraint_context;
END_ENTITY;
 
ENTITY Name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;
 
ENTITY Next_assembly_usage
SUBTYPE OF (assembly_component_relationship);
END_ENTITY;
 
ENTITY Numerical_document_property
SUBTYPE OF (numerical_item_with_unit);
INVERSE
  valued_characteristic : SET [1:1] OF document_property_representation FOR 
  items;
END_ENTITY;
 
ENTITY Numerical_item_with_global_unit
SUBTYPE OF (measure_item);
  value_component : measure_value;
WHERE
  wr1 : SIZEOF(QUERY(pvr <* USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PROPERTY_VALUE_REPRESENTATION.ITEMS'
    ) | EXISTS(pvr.context_of_items.units))) > 0;
END_ENTITY;
 
ENTITY Numerical_item_with_unit
SUBTYPE OF (measure_item, value_with_unit);
END_ENTITY;
 
ENTITY Numerical_representation_context
SUBTYPE OF (representation_context);
  units : OPTIONAL SET [1:?] OF unit;
  accuracies : OPTIONAL SET [1:?] OF uncertainty_with_unit;
END_ENTITY;
 
ENTITY Observation;
  id : STRING;
  name : STRING;
  description : STRING;
  applies_to : SET OF observation_item;
  in_context : SET OF observed_context;
  observed_by : SET OF observation_recorder;
  observed_during : OPTIONAL activity_actual;
  related_records : SET OF observation_item;
END_ENTITY;
 
ENTITY Observation_consequence;
  id : STRING;
  name : STRING;
  infered_from : observation;
  requests : work_request;
  role : STRING;
END_ENTITY;
 
ENTITY Observation_item;
  access_comment : STRING;
  item_identifier : STRING;
  item_type : STRING;
END_ENTITY;
 
ENTITY Observation_relationship;
  related : observation;
  relating : observation;
  role : STRING;
END_ENTITY;
 
ENTITY Or_state_cause_effect_definition
SUBTYPE OF (state_cause_effect_definition);
END_ENTITY;
 
ENTITY Organization;
  id : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Organization_based_location_representation;
  location_identifications : SET OF organizational_location_identification;
  organization_for_location : organization;
END_ENTITY;
 
ENTITY Organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role : STRING;
  items : SET [1:?] OF organization_or_person_in_organization_item;
END_ENTITY;
 
ENTITY Organization_organization_type_relationship;
  organization : organization;
  organization_type : organization_type;
END_ENTITY;
 
ENTITY Organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : organization;
  related_organization : organization;
END_ENTITY;
 
ENTITY Organization_type;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Organizational_location_identification;
  identification_type : STRING;
  location_value : STRING;
END_ENTITY;
 
ENTITY Parameterized_distribution
SUBTYPE OF (probability_distribution);
  has_parameters :  LIST [1:?] OF probability_distribution_parameter;
  parameterization_name : STRING;
END_ENTITY;
 
ENTITY Part
SUBTYPE OF (product);
WHERE
  wr1 : SIZEOF(['part', 'raw material'] * types_of_product(SELF)) = 1;
END_ENTITY;
 
ENTITY Part_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : part;
END_ENTITY;
 
ENTITY Part_view_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : part_version;
END_ENTITY;
 
ENTITY Partial_document_assignment
SUBTYPE OF (document_assignment);
  document_portion : STRING;
END_ENTITY;
 
ENTITY Person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL  LIST [1:?] OF STRING;
  prefix_titles : OPTIONAL  LIST [1:?] OF STRING;
  suffix_titles : OPTIONAL  LIST [1:?] OF STRING;
END_ENTITY;
 
ENTITY Person_in_organization;
  concerned_person : person;
  containing_organization : organization;
  role : STRING;
UNIQUE
  person_is_unique_in_organization : concerned_person, containing_organization;
END_ENTITY;
 
ENTITY Person_or_organization_or_person_in_organization_in_position;
  description : STRING;
  name : STRING;
  person_or_organization : 
  position_person_or_organization_or_person_in_organization_select;
  position : position;
END_ENTITY;
 
ENTITY 
  Person_or_organization_or_person_in_organization_in_position_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related : person_or_organization_or_person_in_organization_in_position;
  relating : person_or_organization_or_person_in_organization_in_position;
END_ENTITY;
 
ENTITY Physical_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY Physical_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : physical_breakdown_version;
  SELF\breakdown_context.breakdown_element : physical_element_definition;
END_ENTITY;
 
ENTITY Physical_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : physical_breakdown;
END_ENTITY;
 
ENTITY Physical_document_definition
SUBTYPE OF (document_definition);
  components : SET OF hardcopy;
END_ENTITY;
 
ENTITY Physical_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY Physical_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : physical_element_version;
END_ENTITY;
 
ENTITY Physical_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : physical_element_definition;
  SELF\breakdown_element_usage.child_element : physical_element_definition;
END_ENTITY;
 
ENTITY Physical_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : physical_element;
END_ENTITY;
 
ENTITY Plane_angle_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY Position;
  address : OPTIONAL address;
  description : OPTIONAL STRING;
  name : STRING;
  position_context : position_context_item;
END_ENTITY;
 
(*
ENTITY Position_assignment;
  items : SET [1:?] OF position_item;
  position : position;
  role : position_role;
END_ENTITY;
*)
 
ENTITY Position_group;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;

(* 
ENTITY Position_group_assignment;
  items : SET [1:?] OF position_group_item;
  position_group : position_group;
  role : position_group_role;
END_ENTITY;
*)
 
ENTITY Position_group_relationship;
  group : position_group;
  position : position;
END_ENTITY;
 
ENTITY Position_group_role;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Position_position_type_assignment;
  assigned_position_type : position_type;
  assigned_to : position;
END_ENTITY;
 
ENTITY Position_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related_position : position;
  relating_position : position;
END_ENTITY;
 
ENTITY Position_role;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Position_type;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
(*
ENTITY Position_type_assignment;
  items : SET [1:?] OF position_type_item;
  position_type : position_type;
  role : position_type_role;
END_ENTITY;
*)
 
ENTITY Position_type_role;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Power_set;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  base : class;
  derived : class;
END_ENTITY;
 
ENTITY Probability ABSTRACT SUPERTYPE
SUBTYPE OF (representation);
END_ENTITY;
 
ENTITY Probability_by_name
SUBTYPE OF (probability);
  has_value : probability_named_value;
END_ENTITY;
 
ENTITY Probability_derivation_parameter
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY Probability_derived
SUBTYPE OF (probability_numeric);
  derives_from : probability_generator;
  has_parameter :  LIST OF probability_derivation_parameter;
END_ENTITY;
 
ENTITY Probability_distribution ABSTRACT SUPERTYPE
SUBTYPE OF (probability_generator);
  distribution_name : OPTIONAL STRING;
  is_continuous : STRING;
  mean : REAL;
  variance : REAL;
END_ENTITY;
 
ENTITY Probability_distribution_parameter
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY Probability_function_value
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY Probability_generator ABSTRACT SUPERTYPE
SUBTYPE OF (representation);
END_ENTITY;
 
ENTITY Probability_named_value
SUBTYPE OF (representation_item);
END_ENTITY;
 
ENTITY Probability_numeric
SUBTYPE OF (probability);
  has_value : probability_numeric_value;
END_ENTITY;
 
ENTITY Probability_numeric_value
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY Product
ABSTRACT SUPERTYPE OF (ONEOF (breakdown, breakdown_element, document, 
interface_connector, interface_specification, part, requirement, slot));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Product_as_individual
ABSTRACT SUPERTYPE OF (ONEOF (product_as_planned, product_as_realized))
SUBTYPE OF (product_version);
END_ENTITY;
 
ENTITY Product_as_planned
SUBTYPE OF (product_as_individual);
END_ENTITY;
 
ENTITY Product_as_realized
SUBTYPE OF (product_as_individual);
END_ENTITY;
 
ENTITY Product_based_location_identification;
  location_identification : STRING;
  location_value : STRING;
  referenced_product : product_based_location_representation;
END_ENTITY;
 
ENTITY Product_category;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Product_category_assignment;
  category : product_category;
  products : SET [1:?] OF product;
END_ENTITY;
 
ENTITY Product_category_hierarchy;
  super_category : product_category;
  sub_category : product_category;
END_ENTITY;
 
ENTITY Product_concept;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  target_market : OPTIONAL market;
UNIQUE
  ur1 : id;
END_ENTITY;
 
ENTITY Product_definition_element_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  breakdown : breakdown_item;
  product : product_item;
END_ENTITY;
 
ENTITY Product_design_to_individual;
  individual_product : product_as_individual;
  product_version : product_version;
END_ENTITY;
 
ENTITY Product_group;
  description : OPTIONAL STRING;
  id : STRING;
  membership_rule : OPTIONAL  LIST [1:?] OF STRING;
  product_group_context : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
 
ENTITY Product_group_membership;
  member : product_select;
  of_group : product_group;
END_ENTITY;
 
ENTITY Product_group_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related : product_group;
  relating : product_group;
END_ENTITY;
 
ENTITY Product_in_slot
SUBTYPE OF (view_definition_usage);
  name : STRING;
  SELF\view_definition_relationship.related_view : product_view_definition;
  SELF\view_definition_relationship.relating_view : slot_definition;
DERIVE
  product : product_view_definition := SELF\view_definition_relationship.
  related_view;
  slot : slot_definition := SELF\view_definition_relationship.relating_view;
END_ENTITY;
 
ENTITY Product_planned_to_realized;
  planned_product : product_as_planned;
  realized_product : product_as_realized;
END_ENTITY;
 
ENTITY Product_relationship;
  relating_product : product;
  related_product : product;
  relation_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Product_version
ABSTRACT SUPERTYPE OF (ONEOF (breakdown_element_version, breakdown_version, 
document_version, interface_connector_version, interface_specification_version
, part_version, product_as_individual, requirement_version, slot_version));
  id : STRING;
  description : OPTIONAL STRING;
  of_product : product;
UNIQUE
  ur1 : id, of_product;
END_ENTITY;
 
ENTITY Product_version_relationship;
  relating_version : product_version;
  related_version : product_version;
  relation_type : STRING;
  description : OPTIONAL STRING;
WHERE
  wr1 : relating_version :<>: related_version;
END_ENTITY;
 
ENTITY Product_view_definition
SUPERTYPE OF (ONEOF (breakdown_element_definition, 
interface_connector_definition, interface_specification_definition, 
part_view_definition, requirement_view_definition, slot_definition));
  id : STRING;
  name : OPTIONAL STRING;
  additional_characterization : OPTIONAL STRING;
  initial_context : view_definition_context;
  additional_contexts : SET OF view_definition_context;
  defined_version : product_version;
WHERE
  wr1 : NOT (initial_context IN additional_contexts);
END_ENTITY;
 
ENTITY Project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET OF organization;
  planned_start_date : date_or_event;
  planned_end_date : date_or_event;
  actual_start_date : date_or_date_time_select;
  actual_end_date : date_or_date_time_select;
END_ENTITY;
 
ENTITY Project_assignment;
  assigned_project : project;
  role : STRING;
  items : SET OF project_item;
END_ENTITY;
 
ENTITY Project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : project;
  related_project : project;
END_ENTITY;
 
ENTITY Promissory_usage
SUBTYPE OF (assembly_component_relationship);
END_ENTITY;
 
ENTITY Proper_subset;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  subset : class;
  superset : class;
END_ENTITY;
 
ENTITY Property_representation;
  description : OPTIONAL STRING;
  property : assigned_property;
  rep : representation;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Property_value_representation
SUBTYPE OF (representation);
  SELF\representation.context_of_items : numerical_representation_context;
END_ENTITY;
 
ENTITY Qualification_assignment;
  assigned_qualification_type : qualification_type;
  received_by : qualifications_select;
END_ENTITY;
 
ENTITY Qualification_type;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Qualification_type_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  related : qualification_type;
  relating : qualification_type;
END_ENTITY;
 
ENTITY Qualified_property_value_representation
SUBTYPE OF (property_value_representation);
  value_determination : OPTIONAL STRING;
  qualifier : OPTIONAL property_value_qualifier;
END_ENTITY;
 
ENTITY Random_variable
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY Ratio_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY Regional_coordinate;
  coordinate_value : value_with_unit;
  grid_system : regional_grid_location_representation;
  name : STRING;
END_ENTITY;
 
ENTITY Regional_grid_location_representation;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Related_condition_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  conditon_evaluation_parameter : condition_evaluation_parameter;
  condition_parameter : condition_parameter;
END_ENTITY;
 
ENTITY Relative_event
SUBTYPE OF (event);
  base_event : event;
  offset : duration;
END_ENTITY;
 
ENTITY Repeat_count
SUBTYPE OF (looping_method);
  count : INTEGER;
END_ENTITY;
 
ENTITY Repeat_until
SUBTYPE OF (looping_method);
  condition : condition;
END_ENTITY;
 
ENTITY Repeat_while
SUBTYPE OF (looping_method);
  condition : condition;
END_ENTITY;
 
ENTITY Representation;
  name : STRING;
  context_of_items : representation_context;
  items : SET [1:?] OF representation_item;
  description : OPTIONAL STRING;
  id : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Representation_context;
  id : STRING;
  kind : STRING;
INVERSE
  representations_in_context : SET [1:?] OF representation FOR context_of_items
  ;
END_ENTITY;
 
ENTITY Representation_item ABSTRACT SUPERTYPE;
  name : STRING;
END_ENTITY;
 
ENTITY Representation_relationship;
  relation_type : STRING;
  description : STRING;
  rep_1 : representation;
  rep_2 : representation;
END_ENTITY;
 
ENTITY Required_resource
ABSTRACT SUPERTYPE OF (ONEOF (required_resource_by_resource_item, 
required_resource_by_specification));
  name : STRING;
  description : OPTIONAL STRING;
  required_quantity : OPTIONAL value_with_unit;
END_ENTITY;
 
ENTITY Required_resource_assignment;
  assigned_resource : required_resource;
  item : required_resource_item;
END_ENTITY;
 
ENTITY Required_resource_by_resource_item
SUBTYPE OF (required_resource);
  resource_item : resource_item;
END_ENTITY;
 
ENTITY Required_resource_by_specification
SUBTYPE OF (required_resource);
END_ENTITY;
 
ENTITY Required_resource_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : required_resource;
  related : required_resource;
END_ENTITY;
 
ENTITY Requirement
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY Requirement_assignment;
  assigned_requirement : requirement_view_definition;
  assigned_to : requirement_assignment_item;
  description : OPTIONAL STRING;
  id : STRING;
END_ENTITY;
 
ENTITY Requirement_collection_relationship
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.relating_view : requirement_view_definition
  ;
  SELF\view_definition_relationship.related_view : requirement_view_definition;
DERIVE
  collection : requirement_view_definition := SELF\view_definition_relationship
  .relating_view;
  member : requirement_view_definition := SELF\view_definition_relationship.
  related_view;
END_ENTITY;
 
ENTITY Requirement_source;
  description : OPTIONAL STRING;
  id : STRING;
  source : requirement_source_item;
  sourced_requirement : requirement_view_definition;
END_ENTITY;
 
ENTITY Requirement_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : requirement;
END_ENTITY;
 
ENTITY Requirement_version_relationship
SUBTYPE OF (product_version_relationship);
  SELF\product_version_relationship.relating_version : requirement_version;
  SELF\product_version_relationship.related_version : requirement_version;
DERIVE
  predecessor : requirement_version := SELF\product_version_relationship.
  relating_version;
  successor : requirement_version := SELF\product_version_relationship.
  related_version;
END_ENTITY;
 
ENTITY Requirement_view_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : requirement_version;
  satisfied : OPTIONAL BOOLEAN;
  tbd : BOOLEAN;
END_ENTITY;
 
ENTITY Resource_as_realized;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
END_ENTITY;
 
ENTITY Resource_as_realized_assignment;
  assigned_resource : resource_as_realized;
  item : resource_as_realized_item;
END_ENTITY;
 
ENTITY Resource_as_realized_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_as_realized;
  related : resource_as_realized_relationship_select;
END_ENTITY;
 
ENTITY Resource_as_realized_resource_item
SUBTYPE OF (resource_as_realized);
  resource_item : resource_item;
END_ENTITY;
 
ENTITY Resource_event ABSTRACT SUPERTYPE;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
  resource : managed_resource;
END_ENTITY;
 
ENTITY Resource_event_correspondence_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_event;
  related : required_resource;
END_ENTITY;
 
ENTITY Resource_event_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_event;
  related : resource_event;
END_ENTITY;
 
ENTITY Resource_group_relationship
SUBTYPE OF (resource_item_relationship);
  quantity : OPTIONAL value_with_unit;
END_ENTITY;
 
ENTITY Resource_item;
  name : STRING;
  description : OPTIONAL STRING;
  resource_item : OPTIONAL resource_item_select;
END_ENTITY;
 
ENTITY Resource_item_assignment;
  assigned_resource : resource_item;
  item : resource_assignment_item;
END_ENTITY;
 
ENTITY Resource_item_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_item;
  related : resource_item;
END_ENTITY;
 
ENTITY Resource_location;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Resource_location_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_location;
  related : resource_location;
END_ENTITY;
 
ENTITY Resource_property;
  described_element : characterized_resource_select;
  description : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY Resource_property_representation;
  description : OPTIONAL STRING;
  property : resource_property;
  rep : representation;
  role : STRING;
END_ENTITY;
 
ENTITY Same_membership;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  set_1 : class;
  set_2 : class;
END_ENTITY;
 
ENTITY Scheme
SUBTYPE OF (activity_method);
END_ENTITY;
 
ENTITY Scheme_entry
SUBTYPE OF (activity_method);
  scheme : scheme;
END_ENTITY;
 
ENTITY Scheme_entry_assignment
SUBTYPE OF (applied_activity_method_assignment);
  SELF\applied_activity_method_assignment.assigned_activity_method : 
  scheme_entry;
  SELF\applied_activity_method_assignment.items : SET [1:?] OF 
  scheme_entry_item_select;
DERIVE
  assigned_entry : scheme_entry := SELF\applied_activity_method_assignment.
  assigned_activity_method;
END_ENTITY;
 
ENTITY Scheme_entry_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : scheme_entry;
  SELF\activity_method_relationship.relating_method : scheme_entry;
DERIVE
  related_entry : scheme_entry := SELF\activity_method_relationship.
  related_method;
  relating_entry : scheme_entry := SELF\activity_method_relationship.
  relating_method;
END_ENTITY;
 
ENTITY Scheme_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : scheme;
  SELF\activity_method_relationship.relating_method : scheme;
DERIVE
  related_scheme : scheme := SELF\activity_method_relationship.related_method;
  relating_scheme : scheme := SELF\activity_method_relationship.relating_method
  ;
END_ENTITY;
 
ENTITY Scheme_subject_assignment
SUBTYPE OF (applied_activity_method_assignment);
  SELF\applied_activity_method_assignment.assigned_activity_method : scheme;
  SELF\applied_activity_method_assignment.items : SET [1:?] OF 
  scheme_subject_select;
DERIVE
  assigned_scheme : scheme := SELF\applied_activity_method_assignment.
  assigned_activity_method;
END_ENTITY;
 
ENTITY Security_classification;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Security_classification_assignment;
  classification : security_classification;
  items : SET [1:?] OF security_classification_item;
END_ENTITY;
 
ENTITY Selected_item
SUBTYPE OF (class);
END_ENTITY;
 
ENTITY Selected_item_assignment;
  assigned_class : selected_item;
  item : selected_item_select;
  item_context : SET [1:?] OF selected_item_context_items;
END_ENTITY;
 
ENTITY Sequence_of_state
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  successor : SET [1:?] OF state := SELF\state_relationship.relating;
  predecessor : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY Sequence_of_state_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  successor : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  predecessor : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
END_ENTITY;
 
ENTITY Sequencing_relationship
SUBTYPE OF (scheme_entry_relationship);
  sequencing_type : STRING;
  time_lag : OPTIONAL time_interval;
END_ENTITY;
 
ENTITY Serial_effectivity
SUBTYPE OF (effectivity);
  start_id : STRING;
  end_id : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Shape_dependent_property_representation;
  described_element : shape_dependent_select;
  property_representation : representation;
  characteristic_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Shape_description_association;
  represented_characteristic : shape_select;
  representation : shape_model;
  role : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Shape_element;
  containing_shape : item_shape;
  element_name : STRING;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Shape_element_relationship;
  related : shape_element;
  relating : shape_element;
  relation_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Simultaneous_methods
SUBTYPE OF (concurrent_methods);
END_ENTITY;
 
ENTITY Slot
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY Slot_as_planned
SUBTYPE OF (slot_version);
END_ENTITY;
 
ENTITY Slot_as_realized
SUBTYPE OF (slot_version);
END_ENTITY;
 
ENTITY Slot_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : slot_version;
END_ENTITY;
 
ENTITY Slot_design
SUBTYPE OF (slot_version);
END_ENTITY;
 
ENTITY Slot_design_to_planned;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  design : slot_design;
  planned : slot_as_planned;
WHERE
  wr1 : SELF.design.of_product :=: SELF.planned.of_product;
END_ENTITY;
 
ENTITY Slot_design_to_realized;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  design : slot_design;
  realized : slot_as_realized;
WHERE
  wr1 : SELF.design.of_product :=: SELF.realized.of_product;
END_ENTITY;
 
ENTITY Slot_on_product;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  product : product_view_definition;
  slot : slot_definition;
END_ENTITY;
 
ENTITY Slot_planned_to_realized;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
  planned : slot_as_planned;
  realized : slot_as_realized;
WHERE
  wr1 : SELF.planned.of_product :=: SELF.realized.of_product;
END_ENTITY;
 
ENTITY Slot_version
SUPERTYPE OF (ONEOF (slot_as_planned, slot_as_realized, slot_design))
SUBTYPE OF (product_version);
  SELF\product_version.of_product : slot;
END_ENTITY;
 
ENTITY Solid_angle_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY State
SUPERTYPE OF (ONEOF (state_observed, state_predicted));
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY State_assertion;
  name : STRING;
  description : OPTIONAL STRING;
  asserted_state : state;
  conformance_state : state_definition;
END_ENTITY;
 
ENTITY State_assessment;
  name : STRING;
  description : OPTIONAL STRING;
  assessed_state : state;
  comparable_state : state_definition;
END_ENTITY;
 
ENTITY State_cause_effect
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  effect : SET [1:?] OF state := SELF\state_relationship.relating;
  cause : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY State_cause_effect_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  effect : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  relating;
  cause : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY State_complement_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
  set_2 : SET [1:?] OF state_definition;
DERIVE
  universe : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  set_1 : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY State_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY State_definition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : SET [1:?] OF state_definition;
  related : SET [1:?] OF state_definition;
END_ENTITY;
 
ENTITY State_definition_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY State_observed
SUBTYPE OF (state);
END_ENTITY;
 
ENTITY State_predicted
SUBTYPE OF (state);
END_ENTITY;
 
ENTITY State_predicted_to_observed
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state_observed;
  SELF\state_relationship.related : SET [1:?] OF state_predicted;
DERIVE
  observed_state : SET [1:?] OF state_observed := SELF\state_relationship.
  relating;
  predicted_state : SET [1:?] OF state_predicted := SELF\state_relationship.
  related;
END_ENTITY;
 
ENTITY State_proper_subset_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
DERIVE
  proper_subset : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
  proper_superset : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
END_ENTITY;
 
ENTITY State_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : SET [1:?] OF state;
  related : SET [1:?] OF state;
END_ENTITY;
 
ENTITY State_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY State_subset_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  superset : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  subset : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY State_symptom_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  symptom_effect : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  symptom_cause : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
END_ENTITY;
 
ENTITY State_transition
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  end_state : SET [1:?] OF state := SELF\state_relationship.relating;
  start_state : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY State_transition_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  end_state : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  start_state : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
END_ENTITY;
 
ENTITY String_representation_item
SUBTYPE OF (representation_item);
  string_value : STRING;
END_ENTITY;
 
ENTITY Structured_task_method
ABSTRACT SUPERTYPE OF (ONEOF (concurrent_methods, decision_point, 
looping_method, task_method_sequence))
SUBTYPE OF (task_method);
END_ENTITY;
 
ENTITY Subset;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  subset : class;
  superset : class;
END_ENTITY;
 
ENTITY Supplied_part_relationship
SUBTYPE OF (product_version_relationship);
WHERE
  wr1 : SELF\product_version_relationship.relation_type IN ['supplied item', 
    'supplied document'];
END_ENTITY;
 
ENTITY System_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY System_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : system_breakdown_version;
  SELF\breakdown_context.breakdown_element : system_element_definition;
END_ENTITY;
 
ENTITY System_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : system_breakdown;
END_ENTITY;
 
ENTITY System_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY System_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : system_element_version;
END_ENTITY;
 
ENTITY System_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : system_element_definition;
  SELF\breakdown_element_usage.child_element : system_element_definition;
END_ENTITY;
 
ENTITY System_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : system_element;
END_ENTITY;
 
ENTITY Task
SUBTYPE OF (activity_method);
  method : OPTIONAL task_method;
  objective : SET [1:?] OF task_result;
END_ENTITY;
 
ENTITY Task_assignment
SUBTYPE OF (applied_activity_method_assignment);
  SELF\applied_activity_method_assignment.assigned_activity_method : task;
  SELF\applied_activity_method_assignment.items : SET [1:?] OF task_item;
DERIVE
  assigned_task : task := SELF\applied_activity_method_assignment.
  assigned_activity_method;
END_ENTITY;
 
ENTITY Task_invocation
SUBTYPE OF (task_method);
  task : task;
END_ENTITY;
 
ENTITY Task_method
ABSTRACT SUPERTYPE OF (ONEOF (end_task, exit_loop, structured_task_method, 
task_invocation, task_method_levels, task_step))
SUBTYPE OF (activity_method);
  notes : OPTIONAL  LIST [1:?] OF advisory_task_step;
END_ENTITY;
 
ENTITY Task_method_levels
SUBTYPE OF (task_method);
  alternatives : SET [2:?] OF task_method;
END_ENTITY;
 
ENTITY Task_method_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : task_method;
  SELF\activity_method_relationship.relating_method : task_method;
END_ENTITY;
 
ENTITY Task_method_sequence
SUBTYPE OF (structured_task_method);
  methods :  LIST [2:?] OF task_method;
END_ENTITY;
 
ENTITY Task_method_state_relationship;
  state : state_or_state_definition_select;
  task_method : task_method;
END_ENTITY;
 
ENTITY Task_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : task;
  SELF\activity_method_relationship.relating_method : task;
DERIVE
  related_task : task := SELF\activity_method_relationship.related_method;
  relating_task : task := SELF\activity_method_relationship.relating_method;
END_ENTITY;
 
ENTITY Task_result;
  name : STRING;
  description : STRING;
END_ENTITY;
 
ENTITY Task_result_state_relationship;
  state : state_or_state_definition_select;
  task_result : task_result;
END_ENTITY;
 
ENTITY Task_state_relationship;
  state : state_or_state_definition_select;
  task : task;
END_ENTITY;
 
ENTITY Task_step
SUBTYPE OF (task_method);
  step_text : STRING;
END_ENTITY;
 
ENTITY Thermodynamic_temperature_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY Time_interval;
  id : STRING;
  name : STRING;
  description : STRING;
END_ENTITY;
 
ENTITY Time_interval_effectivity
SUBTYPE OF (effectivity);
  effectivity_period : time_interval;
END_ENTITY;
 
ENTITY Time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : time_interval;
  related_time_interval : time_interval;
END_ENTITY;
 
ENTITY Time_interval_with_bounds
SUBTYPE OF (time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL duration;
WHERE
  wr1 : NOT (EXISTS(secondary_bound) AND EXISTS(duration_from_primary_bound));
  wr2 : EXISTS(primary_bound) OR EXISTS(secondary_bound);
END_ENTITY;
 
ENTITY Time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset, 0);
WHERE
  wr1 : {0 <= hour_offset <= 24};
  wr2 : {0 <= minute_offset <= 59};
  wr3 : NOT (((hour_offset <> 0) OR (actual_minute_offset <> 0)) AND (sense = 
    exact));
END_ENTITY;
 
ENTITY Time_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY Tracing_relationship
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.relating_view : requirement_view_definition
  ;
  SELF\view_definition_relationship.related_view : requirement_view_definition;
DERIVE
  traces_from : requirement_view_definition := SELF\
  view_definition_relationship.relating_view;
  traces_to : requirement_view_definition := SELF\view_definition_relationship.
  related_view;
END_ENTITY;
 
ENTITY Transformation_based_template_instance
SUBTYPE OF (detailed_geometric_model_element);
  replicated_model : shape_model;
  replication_transformation : cartesian_transformation;
END_ENTITY;
 
ENTITY Type_of_person;
  name : STRING;
  description : OPTIONAL STRING;
  has : SET OF type_of_person_definition;
END_ENTITY;
 
(*
ENTITY Type_of_person_assignment;
  assigned_type_of_person : type_of_person;
  items : SET [1:?] OF type_of_person_item_select;
  role : STRING;
END_ENTITY;
*)
 
ENTITY Type_of_person_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Type_of_person_definition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : type_of_person_definition;
  related : type_of_person_definition;
END_ENTITY;
 
ENTITY Type_of_person_definition_required_attributes_relationship;
  assigned_required_attributes : type_of_person_definition;
  required_attributes : SET OF person_attributes;
END_ENTITY;
 
ENTITY Uncertainty_with_unit
SUBTYPE OF (value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Union;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  operand : SET [2:?] OF class;
  resultant : class;
END_ENTITY;
 
ENTITY Unit
SUPERTYPE OF (ONEOF (amount_of_substance_unit, electric_current_unit, 
length_unit, luminous_intensity_unit, mass_unit, plane_angle_unit, ratio_unit, 
solid_angle_unit, thermodynamic_temperature_unit, time_unit));
  name : OPTIONAL STRING;
  si_unit : BOOLEAN;
END_ENTITY;
 
ENTITY Value_function;
  function_element :  LIST [1:?] OF function_value_pair;
END_ENTITY;
 
ENTITY Value_limit
SUBTYPE OF (measure_item);
  limit_qualifier : limit_qualifier_list;
  limit : value_with_unit;
END_ENTITY;
 
ENTITY Value_limit_with_global_unit
SUBTYPE OF (measure_item);
  limit : numerical_item_with_global_unit;
  limit_qualifier : limit_qualifier_list;
END_ENTITY;
 
ENTITY Value_list
SUBTYPE OF (measure_item);
  values :  LIST [1:?] OF measure_item;
END_ENTITY;
 
ENTITY Value_range
SUBTYPE OF (measure_item);
  lower_limit : numerical_item_with_unit;
  upper_limit : numerical_item_with_unit;
END_ENTITY;
 
ENTITY Value_range_with_global_unit
SUBTYPE OF (measure_item);
  lower_limit : numerical_item_with_global_unit;
  upper_limit : numerical_item_with_global_unit;
END_ENTITY;
 
ENTITY Value_with_tolerances
SUBTYPE OF (measure_item);
  item_value : numerical_item_with_unit;
  tolerances : value_range;
END_ENTITY;
 
ENTITY Value_with_unit;
  unit : unit;
  value_component : measure_value;
END_ENTITY;
 
ENTITY View_definition_context;
  application_domain : STRING;
  life_cycle_stage : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY View_definition_relationship
ABSTRACT SUPERTYPE OF (ONEOF (breakdown_element_usage, interface_connection, 
requirement_collection_relationship, tracing_relationship, 
view_definition_usage));
  id : STRING;
  relating_view : product_view_definition;
  related_view : product_view_definition;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY View_definition_usage
SUBTYPE OF (view_definition_relationship);
END_ENTITY;
 
ENTITY Work_order;
  description : OPTIONAL STRING;
  in_response_to : SET OF work_request;
  name : STRING;
END_ENTITY;
 
ENTITY Work_output;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
  output_item : OPTIONAL work_output_item;
END_ENTITY;
 
ENTITY Work_output_assignment;
  assigned_output : work_output;
  item : work_item;
END_ENTITY;
 
ENTITY Work_output_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : work_output;
  related : work_output;
END_ENTITY;
 
ENTITY Work_request;
  request_id : STRING;
  version_id : STRING;
  purpose : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY Work_request_status;
  status : STRING;
  work_request : work_request;
END_ENTITY;
 
ENTITY Xor_state_cause_effect_definition
SUBTYPE OF (state_cause_effect_definition);
END_ENTITY;
 
ENTITY Zone_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY Zone_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : zone_breakdown_version;
  SELF\breakdown_context.breakdown_element : zone_element_definition;
END_ENTITY;
 
ENTITY Zone_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : zone_breakdown;
END_ENTITY;
 
ENTITY Zone_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY Zone_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : zone_element_version;
END_ENTITY;
 
ENTITY Zone_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : zone_element_definition;
  SELF\breakdown_element_usage.child_element : zone_element_definition;
END_ENTITY;
 
ENTITY Zone_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : zone_element;
END_ENTITY;
 
RULE part_requires_id_owner FOR (part);
WHERE
  wr1 : SIZEOF(QUERY(prod <* part | SIZEOF(QUERY(apoa <* USEDIN(prod, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS'
    ) | apoa\organization_or_person_in_organization_assignment.role = 
    'id owner')) <> 1)) = 0;
END_RULE;
 
FUNCTION types_of_product(obj : product) : SET OF STRING;
LOCAL
  category_assignments :  BAG OF product_category_assignment;
  categories : SET OF STRING := [];
  i : INTEGER;
END_LOCAL;
  category_assignments := USEDIN(obj, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS'
  );
  REPEAT i := LOINDEX(category_assignments) TO HIINDEX(category_assignments);
    categories := categories + category_assignments[i].category.name;
  END_REPEAT;
  RETURN (categories);
END_FUNCTION;
 
FUNCTION valid_document_property_representation(rep : 
  document_property_representation) : LOGICAL;
  CASE rep.name OF 
    'document content' : 
      BEGIN
        RETURN (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['detail level', 'geometry type', 'real world scale']))) = 0);
      END;
    'document creation' : 
      BEGIN
        IF NOT (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['creating interface', 'creating system', 'operating system']))
        ) = 0) THEN
          RETURN (FALSE);
        END_IF;
        IF NOT (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['creating system']))) = 1) THEN
          RETURN (FALSE);
        ELSE
          RETURN (TRUE);
        END_IF;
      END;
    'document format' : 
      BEGIN
        RETURN (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['character code', 'data format', 'size format', 
        'size format standard']))) = 0);
      END;
    'document size' : 
      BEGIN
        RETURN (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['file size', 'page count']))) = 0);
      END;
    OTHERWISE  : RETURN (UNKNOWN);
  END_CASE;
END_FUNCTION;
 
END_SCHEMA;

