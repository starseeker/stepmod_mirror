(*
   $Id: arm_lf.exp,v 1.1 2003/04/24 17:59:30 robbod Exp $
   N - ISO/CD-TS - 10303- ap239_product_life_cycle_support - EXPRESS ARM_LF*)
(* UNDER DEVELOPMENT *)
SCHEMA ap239_product_life_cycle_support_arm_lf;

 
CONSTANT
  schema_name : STRING := 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF';
END_CONSTANT;
 
TYPE act_meth_charmri_approval_item = SELECT 
  (certification, contract, activity_method);
END_TYPE;
 
TYPE actchar_ap239_mri_classification_item = SELECT 
  (security_classification, project_relationship, contract_assignment, 
  project_assignment, organization, person_in_organization, language, 
  address_assignment, attribute_translation_assignment, calendar_date, 
  event_assignment, address, security_classification_assignment, contract, 
  project, event_relationship, date_time, 
  organization_or_person_in_organization_assignment, 
  approving_person_organization, organization_relationship, 
  identification_assignment, approval_assignment, approval_status, event, 
  certification_assignment, certification, approval, approval_relationship, 
  date_or_date_time_assignment, activity, activity_relationship);
END_TYPE;
 
TYPE actchar_ap239_mri_classified_attribute_select = SELECT 
  (project_assignment, date_or_date_time_assignment, event_assignment, 
  security_classification, approving_person_organization, 
  identification_assignment, person_in_organization, language, approval, 
  approval_status, address_assignment, certification, organization_relationship
  , approval_relationship, certification_assignment, 
  organization_or_person_in_organization_assignment, approval_assignment, 
  contract, project_relationship, event_relationship, activity, 
  activity_relationship);
END_TYPE;
 
TYPE actchar_mri_approval_item = SELECT 
  (certification, contract, activity);
END_TYPE;
 
TYPE actchar_mri_date_or_date_time_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, activity, activity_relationship
  );
END_TYPE;
 
TYPE actchar_mri_identification_item = SELECT 
  (organization, security_classification, contract, activity);
END_TYPE;
 
TYPE actchar_mri_organization_or_person_in_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  activity, activity_relationship);
END_TYPE;
 
TYPE actchar_mri_string_select = SELECT 
  (project, approval_relationship, project_relationship, approval_status, 
  certification, contract, organization_relationship, identification_assignment
  , project_assignment, approval, date_or_date_time_assignment, 
  person_in_organization, activity, activity_relationship);
END_TYPE;
 
TYPE activity_item = SELECT 
  (view_definition_relationship, organization, product_version, document, 
  resource_item, document_version, task, product_group, document_definition, 
  file, activity, contract, person, product_view_definition, event, product, 
  applied_state_assignment, person_in_organization);
END_TYPE;
 
TYPE activity_method_implementation_classified_item = SELECT 
  (activity_method_realization, activity_method_realization_relationship);
END_TYPE;

(* NOT USED 
TYPE activity_method_item = SELECT 
  ();
END_TYPE;
*)
 
TYPE activity_realization_select = SELECT 
  (task, task_method, scheme);
END_TYPE;
 
TYPE actmethchar_ap239_mri_classification_item = SELECT 
  (security_classification, project_relationship, contract_assignment, 
  project_assignment, organization, person_in_organization, language, 
  address_assignment, attribute_translation_assignment, calendar_date, 
  event_assignment, address, security_classification_assignment, contract, 
  project, event_relationship, date_time, 
  organization_or_person_in_organization_assignment, 
  approving_person_organization, organization_relationship, 
  identification_assignment, approval_assignment, approval_status, event, 
  certification_assignment, certification, approval, approval_relationship, 
  date_or_date_time_assignment, activity_method);
END_TYPE;
 
TYPE actmethchar_ap239_mri_classified_attribute_select = SELECT 
  (project_assignment, date_or_date_time_assignment, event_assignment, 
  security_classification, approving_person_organization, 
  identification_assignment, person_in_organization, language, approval, 
  approval_status, address_assignment, certification, organization_relationship
  , approval_relationship, certification_assignment, 
  organization_or_person_in_organization_assignment, approval_assignment, 
  contract, project_relationship, event_relationship, activity_method);
END_TYPE;
 
TYPE actmethchar_mri_date_or_date_time_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, activity_method);
END_TYPE;
 
TYPE actmethchar_mri_identification_item = SELECT 
  (organization, security_classification, contract, activity_method);
END_TYPE;
 
TYPE actmethchar_mri_organization_or_person_in_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  activity_method);
END_TYPE;
 
TYPE actmethchar_mri_string_select = SELECT 
  (project, approval_relationship, project_relationship, approval_status, 
  certification, contract, organization_relationship, identification_assignment
  , project_assignment, approval, date_or_date_time_assignment, 
  person_in_organization, activity_method);
END_TYPE;
 
TYPE affected_item_select = SELECT 
  (product_version, document, document_definition, contract, organization, 
  document_version, file, product_group, person_in_organization, 
  product_view_definition, view_definition_relationship, resource_item, person
  , product, activity_method);
END_TYPE;
 
TYPE alias_identification_item = SELECT 
  (breakdown, part_version, state_relationship, interface_connector_version, 
  hardcopy, product_as_planned, part, slot, state, interface_connector, 
  digital_file, interface_connector_definition, approval_status, 
  requirement_view_definition, interface_connector_as_realized, 
  product_as_realized, slot_definition, requirement_version, 
  security_classification, document_version, certification, 
  interface_connector_as_planned, project, part_view_definition, 
  breakdown_element, organization, interface_specification_definition, 
  physical_document_definition, tracing_relationship, 
  requirement_version_relationship, requirement_assignment, slot_version, 
  interface_specification, digital_document_definition, requirement, 
  breakdown_version, requirement_collection_relationship, requirement_source, 
  document, interface_connector_design, event, interface_specification_version)
  ;
END_TYPE;
 
TYPE any_number_value = NUMBER;
END_TYPE;
 
TYPE any_string_value = STRING;
END_TYPE;
 
TYPE ap239_dm_approval_item = SELECT 
  (document_assignment);
END_TYPE;
 
TYPE ap239_dm_classification_item = SELECT 
  (applied_information_usage_right, content_item, descriptive_document_property
  , digital_document_definition, digital_file, document, document_assignment, 
  document_definition_relationship, document_location_identification, 
  document_property_representation, document_version, envelope, 
  envelope_association, external_item_identification, 
  external_source_identification, file_location_identification, 
  file_relationship, hardcopy, information_right, information_usage_right, 
  information_usage_right_relationship, message, message_association, 
  numerical_document_property, partial_document_assignment, 
  physical_document_definition);
END_TYPE;
 
TYPE ap239_dm_classified_attribute_select = SELECT 
  (content_item, descriptive_document_property, digital_file, 
  document_assignment, document_definition_relationship, 
  document_location_identification, document_property_representation, envelope
  , envelope_association, external_item_identification, 
  external_source_identification, file_location_identification, 
  file_relationship, hardcopy, information_right, information_usage_right, 
  information_usage_right_relationship, message, message_association, 
  numerical_document_property, partial_document_assignment);
END_TYPE;
 
TYPE ap239_dm_contract_item = SELECT 
  (document, message);
END_TYPE;
 
TYPE ap239_dm_date_or_date_time_item = SELECT 
  (applied_information_usage_right, document, document_assignment);
END_TYPE;
 
TYPE ap239_dm_documented_element_select = SELECT 
  (certification, contract, identification_assignment, information_right, 
  information_usage_right, organization, person);
END_TYPE;
 
TYPE ap239_dm_information_usage_right_item = SELECT 
  (certification, certification_assignment, digital_document_definition, 
  digital_file, document, document_definition_relationship, document_version, 
  file_relationship, hardcopy, message, physical_document_definition);
END_TYPE;
 
TYPE ap239_dm_organization_or_person_in_organization = SELECT 
  (document_assignment);
END_TYPE;
 
TYPE ap239_dm_security_classification_item = SELECT 
  (document_assignment);
END_TYPE;
 
TYPE ap239_dm_state_definition_of_item = SELECT 
  (digital_document_definition, digital_file, document, document_version, 
  file_location_identification, hardcopy, physical_document_definition);
END_TYPE;
 
TYPE ap239_dm_state_of_item = SELECT 
  (digital_document_definition, digital_file, document, document_version, 
  file_location_identification, hardcopy, physical_document_definition);
END_TYPE;
 
TYPE ap239_dm_string_select = SELECT 
  (envelope, envelope_association, information_right, information_usage_right, 
  message, message_association, part_version, part_view_definition, 
  connector_on, interface_connector_definition, interface_connector, part, 
  interface_connector_version);
END_TYPE;
 
TYPE ap239_mri_alias_identification_item = SELECT 
  (approval_status, certification, event, organization, project, 
  security_classification);
END_TYPE;
 
TYPE ap239_mri_approval_item = SELECT 
  (contract_assignment, event, event_assignment, identification_assignment, 
  project, project_assignment);
END_TYPE;
 
TYPE ap239_mri_certification_item = SELECT 
  (project);
END_TYPE;
 
TYPE ap239_mri_classification_item = SELECT 
  (address, address_assignment, approval, approval_assignment, 
  approval_relationship, approval_status, approving_person_organization, 
  attribute_translation_assignment, calendar_date, certification, 
  certification_assignment, contract, contract_assignment, 
  date_or_date_time_assignment, date_time, event, event_assignment, 
  event_relationship, identification_assignment, language, organization, 
  organization_or_person_in_organization_assignment, organization_relationship
  , person_in_organization, project, project_assignment, project_relationship, 
  security_classification, security_classification_assignment, 
  activity_relationship, work_order, activity, activity_method, 
  affected_items_assignment, directed_activity, work_request);
END_TYPE;
 
TYPE ap239_mri_classified_attribute_select = SELECT 
  (address_assignment, approval, approval_assignment, approval_relationship, 
  approval_status, approving_person_organization, certification, 
  certification_assignment, contract, date_or_date_time_assignment, 
  event_assignment, event_relationship, identification_assignment, language, 
  organization_or_person_in_organization_assignment, organization_relationship
  , person_in_organization, project_assignment, project_relationship, 
  security_classification, work_request_status, state_definition, 
  activity_method, activity, state_relationship, state, 
  applied_state_definition_assignment, applied_state_assignment, 
  state_definition_relationship, work_request, activity_relationship, 
  work_order);
END_TYPE;
 
TYPE ap239_mri_date_or_date_time_item = SELECT 
  (address_assignment, alias_identification, certification_assignment, 
  contract_assignment, identification_assignment);
END_TYPE;
 
TYPE ap239_mri_event_item = SELECT 
  (certification, project);
END_TYPE;
 
TYPE ap239_mri_identification_item = SELECT 
  (approval_status, certification, event, organization, project, 
  security_classification);
END_TYPE;
 
TYPE ap239_mri_organization_or_person_in_organization_item = SELECT 
  (certification, certification_assignment, contract_assignment, event, 
  event_assignment, project, project_assignment);
END_TYPE;
 
TYPE ap239_mri_string_select = SELECT 
  (event);
END_TYPE;
 
TYPE ap239_padi_alias_identification_item = SELECT 
  (interface_connector, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_design, interface_connector_version, 
  interface_specification, interface_specification_definition, 
  interface_specification_version, part, part_version, part_view_definition, 
  product_as_planned, product_as_realized);
END_TYPE;
 
TYPE ap239_padi_approval_item = SELECT 
  (interface_connection, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_design, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, 
  interface_connector_planned_to_realized, interface_connector_version, 
  interface_specification_definition, interface_specification_version, part, 
  part_version, part_view_definition, product_as_planned, product_as_realized, 
  product_concept, product_design_to_individual, product_planned_to_realized);
END_TYPE;
 
TYPE ap239_padi_certification_item = SELECT 
  (document, document_version, interface_connection, 
  interface_connector_version, interface_specification_version, part, 
  part_version, product_as_planned, product_as_realized, 
  product_version_relationship);
END_TYPE;
 
TYPE ap239_padi_classification_item = SELECT 
  (interface_connection, interface_connector, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_design, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, 
  interface_connector_planned_to_realized, interface_connector_version, 
  interface_definition_for, interface_specification, 
  interface_specification_definition, interface_specification_version, market, 
  part, part_version, part_view_definition, product, product_as_planned, 
  product_as_realized, product_category, product_concept, 
  product_design_to_individual, product_planned_to_realized, product_version, 
  product_version_relationship, product_view_definition, requirement, 
  requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version, requirement_version_relationship, 
  requirement_view_definition, supplied_part_relationship, tracing_relationship
  , view_definition_context);
END_TYPE;
 
TYPE ap239_padi_classified_attribute_select = SELECT 
  (interface_connection, interface_connector_definition, 
  interface_specification_definition, market, part_view_definition, 
  product_category, product_concept, product_version_relationship, 
  requirement_version_relationship, requirement_view_definition, 
  view_definition_context, view_definition_relationship);
END_TYPE;
 
TYPE ap239_padi_condition_evaluation_parameter_item = SELECT 
  (approval_assignment, assigned_property, calendar_date, 
  certification_assignment, classification_assignment, contract_assignment, 
  date_or_date_time_assignment, date_time, document_assignment, 
  identification_assignment, organization_or_person_in_organization_assignment
  , product, product_as_individual, product_category_assignment, 
  product_version, product_view_definition);
END_TYPE;
 
TYPE ap239_padi_condition_parameter_item = SELECT 
  (condition_relationship, approval_assignment, assigned_property, 
  calendar_date, certification_assignment, classification_assignment, 
  contract_assignment, date_or_date_time_assignment, date_time, 
  document_assignment, identification_assignment, 
  organization_or_person_in_organization_assignment, product, 
  product_as_individual, product_category_assignment, product_version, 
  product_view_definition);
END_TYPE;
 
TYPE ap239_padi_contract_item = SELECT 
  (interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_design, interface_connector_version, 
  interface_specification_version, part, part_version, product_as_planned, 
  product_as_realized, project);
END_TYPE;
 
TYPE ap239_padi_date_and_time_item = SELECT 
  (interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_definition, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, 
  interface_connector_planned_to_realized, interface_connector_version, 
  interface_specification_definition, interface_specification_version, part, 
  part_version, part_view_definition, product_as_planned, product_as_realized, 
  product_concept, product_design_to_individual, product_planned_to_realized, 
  project_assignment);
END_TYPE;
 
TYPE ap239_padi_documented_element_select = SELECT 
  (document, document_definition, document_version, 
  interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_design, interface_connector_design_to_planned, 
  interface_connector_design_to_realized, 
  interface_connector_planned_to_realized, interface_connector_version, 
  interface_specification_version, part, part_version, part_view_definition, 
  product_as_planned, product_as_realized, product_concept, 
  product_design_to_individual, product_planned_to_realized, 
  product_version_relationship, product_view_definition, project, requirement, 
  requirement_version);
END_TYPE;
 
TYPE ap239_padi_identification_item = SELECT 
  (interface_connector, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_design, interface_connector_version, 
  interface_specification, interface_specification_definition, 
  interface_specification_version, part, part_version, part_view_definition, 
  product_as_planned, product_as_realized);
END_TYPE;
 
TYPE ap239_padi_information_usage_right_item = SELECT 
  (interface_connection, interface_connector, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_design, interface_connector_version, 
  interface_specification, interface_specification_definition, 
  interface_specification_version, part, part_version, part_view_definition, 
  product_as_planned, product_as_realized, requirement, requirement_assignment
  , requirement_version, requirement_view_definition, security_classification, 
  security_classification_assignment, supplied_part_relationship);
END_TYPE;
 
TYPE ap239_padi_organization_or_person_in_organization = SELECT 
  (alias_identification, interface_connector, interface_connector_as_planned, 
  interface_connector_as_realized, interface_connector_definition, 
  interface_connector_version, interface_specification, 
  interface_specification_definition, interface_specification_version, part, 
  part_version, part_view_definition, product_as_planned, product_as_realized);
END_TYPE;
 
TYPE ap239_padi_project_item = SELECT 
  (product_concept);
END_TYPE;
 
TYPE ap239_padi_property_assignment_select = SELECT 
  (part_view_definition);
END_TYPE;
 
TYPE ap239_padi_requirement_assignment_item = SELECT 
  (document_version, interface_specification, part_version, product_as_planned
  , product_as_realized, project);
END_TYPE;
 
TYPE ap239_padi_requirement_source_item = SELECT 
  (document_version, part_version, product_as_individual);
END_TYPE;
 
TYPE ap239_padi_security_classification_item = SELECT 
  (interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_definition, interface_connector_design, 
  interface_connector_version, interface_specification_definition, 
  interface_specification_version, part_version, part_view_definition, 
  product_as_planned, product_as_realized);
END_TYPE;
 
TYPE ap239_padi_state_definition_of_item = SELECT 
  (certification, connector_on, contract, interface_connection, 
  interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_definition, interface_connector_design, 
  interface_connector_version, interface_specification, 
  interface_specification_definition, interface_specification_version, 
  organization, part, part_version, part_view_definition, 
  person_in_organization, product_as_planned, product_as_realized, 
  product_category, project, security_classification);
END_TYPE;
 
TYPE ap239_padi_state_of_item = SELECT 
  (certification, connector_on, contract, interface_connection, 
  interface_connector_as_planned, interface_connector_as_realized, 
  interface_connector_definition, interface_connector_design, 
  interface_connector_version, interface_specification, 
  interface_specification_definition, interface_specification_version, 
  organization, part, part_version, part_view_definition, 
  person_in_organization, product_as_planned, product_as_realized, project, 
  security_classification);
END_TYPE;
 
TYPE ap239_padi_string_select = SELECT 
  (information_right, information_usage_right, envelope, envelope_association, 
  message_association, message, connector_on, interface_connector, 
  interface_connector_definition, interface_connector_version, part, 
  part_version, part_view_definition);
END_TYPE;
 
TYPE ap239_prdi_alias_identification_item = SELECT 
  (breakdown, breakdown_element, breakdown_version, slot, slot_definition, 
  slot_version);
END_TYPE;
 
TYPE ap239_prdi_approval_item = SELECT 
  (alternate_product_relationship, assembly_component_relationship, breakdown, 
  breakdown_element, breakdown_element_definition, 
  breakdown_element_realization, breakdown_element_usage, 
  breakdown_element_version, breakdown_version, in_zone, product_in_slot, 
  selected_item_assignment, slot_as_planned, slot_as_realized, slot_design, 
  slot_design_to_planned, slot_design_to_realized, slot_on_product, 
  slot_planned_to_realized);
END_TYPE;
 
TYPE ap239_prdi_certification_item = SELECT 
  (breakdown);
END_TYPE;
 
TYPE ap239_prdi_classification_item = SELECT 
  (alternate_part_relationship, assembly_relationship_substitution, breakdown, 
  breakdown_context, breakdown_element, breakdown_element_realization, 
  breakdown_element_usage, breakdown_element_version, selected_item, 
  selected_item_assignment, slot_design_to_planned, slot_design_to_realized, 
  slot_planned_to_realized);
END_TYPE;
 
TYPE ap239_prdi_classified_attribute_select = SELECT 
  (alternate_part_relationship, breakdown_context, 
  breakdown_element_realization, breakdown_element_usage);
END_TYPE;
 
TYPE ap239_prdi_contract_item = SELECT 
  (breakdown, breakdown_element, breakdown_version);
END_TYPE;
 
TYPE ap239_prdi_date_or_date_time_item = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, breakdown_version, 
  selected_item, selected_item_assignment, slot, slot_definition, 
  slot_design_to_planned, slot_design_to_realized, slot_planned_to_realized, 
  slot_version);
END_TYPE;
 
TYPE ap239_prdi_documented_element_select = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, breakdown_version, 
  selected_item, slot, slot_design_to_planned, slot_design_to_realized, 
  slot_planned_to_realized, slot_version);
END_TYPE;
 
TYPE ap239_prdi_effectivity_item = SELECT 
  (address_assignment, alternate_part_relationship, 
  applied_information_usage_right, assembly_component_relationship, 
  assembly_relationship_substitution, assigned_property, breakdown, 
  breakdown_element, breakdown_element_definition, 
  breakdown_element_realization, breakdown_element_usage, 
  breakdown_element_version, breakdown_of, breakdown_version, 
  certification_assignment, contract_assignment, document, document_assignment
  , document_definition, document_definition_relationship, 
  document_location_identification, document_version, file, file_relationship, 
  identification_assignment, interface_connection, 
  interface_connector_design_to_planned, interface_connector_design_to_realized
  , interface_connector_planned_to_realized, make_from_relationship, part, 
  part_version, part_view_definition, product_as_individual, 
  product_design_to_individual, product_in_slot, product_planned_to_realized, 
  product_version_relationship, project_assignment, requirement, 
  requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version, requirement_version_relationship, 
  requirement_view_definition, security_classification_assignment, 
  selected_item_assignment, slot, slot_as_planned, slot_as_realized, 
  slot_definition, slot_design, slot_design_to_planned, slot_design_to_realized
  , slot_on_product, slot_planned_to_realized, slot_version);
END_TYPE;
 
TYPE ap239_prdi_identification_item = SELECT 
  (breakdown, breakdown_element, breakdown_version, slot, slot_definition, 
  slot_version);
END_TYPE;
 
TYPE ap239_prdi_information_usage_right_item = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, breakdown_version, 
  slot_definition, slot_design_to_planned, slot_design_to_realized, 
  slot_on_product, slot_version);
END_TYPE;
 
TYPE ap239_prdi_organization_or_person_in_organization_item = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, breakdown_version, 
  selected_item, selected_item_assignment);
END_TYPE;
 
TYPE ap239_prdi_project_item = SELECT 
  (breakdown);
END_TYPE;
 
TYPE ap239_prdi_requirement_assignment_item = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, 
  breakdown_element_version, breakdown_version, product_in_slot, slot, 
  slot_version);
END_TYPE;
 
TYPE ap239_prdi_security_classification_item = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element_definition, 
  breakdown_element_realization, breakdown_element_usage, 
  breakdown_element_version, slot_design_to_planned, slot_design_to_realized, 
  slot_on_product, slot_planned_to_realized, slot_version);
END_TYPE;
 
TYPE ap239_prdi_selected_item_context_items = SELECT 
  (contract, part, product_concept, project);
END_TYPE;
 
TYPE ap239_prdi_selected_item_select = SELECT 
  (product, product_version);
END_TYPE;
 
TYPE ap239_prdi_state_definition_of_item = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, 
  breakdown_element_version, product_in_slot, slot, slot_definition, 
  slot_design_to_planned, slot_design_to_realized, slot_on_product, 
  slot_planned_to_realized, slot_version);
END_TYPE;
 
TYPE ap239_prdi_state_of_item = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, 
  breakdown_element_version, product_in_slot, slot, slot_definition, 
  slot_design_to_planned, slot_design_to_realized, slot_on_product, 
  slot_planned_to_realized, slot_version);
END_TYPE;
 
TYPE ap239_prdi_string_select = SELECT 
  (alternate_part_relationship, assembly_component_relationship, 
  assembly_relationship_substitution, breakdown, breakdown_element, 
  breakdown_element_realization, breakdown_element_usage, 
  breakdown_element_version, document, part, product_as_individual, slot, 
  slot_definition, slot_design_to_planned, slot_design_to_realized, 
  slot_on_product, slot_planned_to_realized, slot_version);
END_TYPE;
 
TYPE ap239_props_approval_item = SELECT 
  (assigned_property, independent_property, independent_property_relationship);
END_TYPE;
 
TYPE ap239_props_classification_item = SELECT 
  (assigned_property, independent_property, property_representation, 
  representation, representation_context, representation_item);
END_TYPE;
 
TYPE ap239_props_classified_attribute_select = SELECT 
  (assigned_property, independent_property, property_representation, 
  representation, representation_context, representation_item);
END_TYPE;
 
TYPE ap239_props_date_or_date_time_item = SELECT 
  (assigned_property, independent_property, independent_property_relationship, 
  representation);
END_TYPE;
 
TYPE ap239_props_identification_item = SELECT 
  (assigned_property, independent_property, independent_property_relationship);
END_TYPE;
 
TYPE ap239_props_organization_or_person_in_organization_item = SELECT 
  (assigned_property, independent_property, independent_property_relationship, 
  representation);
END_TYPE;
 
TYPE ap239_props_string_select = SELECT 
  (assigned_property, independent_property, independent_property_relationship, 
  representation_item);
END_TYPE;
 
TYPE ap239_psr_activity_item = SELECT 
  (applied_state_assignment);
END_TYPE;
 
TYPE ap239_psr_alias_identification_item = SELECT 
  (state, state_relationship);
END_TYPE;
 
TYPE ap239_psr_condition_evaluation_item = SELECT 
  (applied_state_assignment);
END_TYPE;
 
TYPE ap239_psr_documented_element_select = SELECT 
  (applied_state_assignment, applied_state_definition_assignment, 
  defined_state_relationship, observation, state, state_assertion, 
  state_assessment, state_definition, state_definition_relationship, 
  state_relationship);
END_TYPE;
 
TYPE ap239_psr_event_item = SELECT 
  (applied_state_assignment, observation);
END_TYPE;
 
TYPE ap239_psr_justification_support_item = SELECT 
  (state, state_relationship);
END_TYPE;
 
TYPE ap239_psr_property_assignment_select = SELECT 
  (state, state_relationship);
END_TYPE;
 
TYPE ap239_psr_requirement_assignment_item = SELECT 
  (state, state_relationship);
END_TYPE;
 
TYPE ap239_psr_state_definition_of_item = SELECT 
  (activity, activity_relationship, document, document_definition, 
  document_version, file, location, organization, organization_type, part, 
  part_version, part_view_definition, person, person_in_organization, position
  , position_type, product_as_individual, product_group, type_of_person);
END_TYPE;
 
TYPE ap239_psr_state_of_item = SELECT 
  (activity_actual, activity_happening, document, document_definition, 
  document_version, file, location, organization, organization_type, part, 
  part_version, part_view_definition, person, person_in_organization, position
  , position_type, product_as_individual, product_group, type_of_person);
END_TYPE;
 
TYPE approval_item = SELECT 
  (message, task_result_state_relationship, task_method_state_relationship, 
  contract_assignment, task_method_relationship, required_resource, 
  slot_design_to_planned, interface_connector_as_realized, 
  alternate_product_relationship, condition_evaluation_assignment, 
  task_assignment, interface_connector_as_planned, activity_method_relationship
  , in_zone, independent_property_relationship, breakdown, 
  task_state_relationship, assembly_component_relationship, event_assignment, 
  contract, interface_connector_planned_to_realized, event, task_relationship, 
  envelope, part, product_planned_to_realized, 
  interface_connector_design_to_planned, required_resource_relationship, 
  interface_connection, task_result, work_output, slot_design, 
  breakdown_version, breakdown_element_realization, resource_item, 
  breakdown_element_usage, interface_connector_definition, 
  activity_method_realization_relationship, interface_connector_design, 
  slot_as_planned, product_as_planned, activity_method_realization, 
  product_design_to_individual, location_assignment, part_view_definition, 
  slot_as_realized, identification_assignment, slot_planned_to_realized, 
  slot_on_product, product_concept, applied_activity_method_assignment, 
  breakdown_element_definition, selected_item_assignment, 
  interface_specification_version, task, condition_assignment, 
  breakdown_element, breakdown_element_version, resource_as_realized, 
  task_method, interface_connector_design_to_realized, condition_evaluation, 
  document_assignment, condition, project_assignment, certification, project, 
  part_version, interface_connector_version, independent_property, 
  interface_specification_definition, product_as_realized, 
  slot_design_to_realized, product_in_slot, resource_item_assignment, 
  resource_item_relationship, assigned_property);
END_TYPE;
 
TYPE ar_observed_context = SELECT 
  (activity, activity_method, product, product_group, product_version, 
  product_view_definition, required_resource, resource_as_realized, 
  resource_item, scheme, scheme_entry, task, task_method, work_order, 
  work_output, work_request);
END_TYPE;
 
TYPE ar_resource_as_realized_item = SELECT 
  (activity, activity_method, applied_activity_assignment, 
  applied_activity_method_assignment, event);
END_TYPE;
 
TYPE assigned_document_select = SELECT 
  (document, document_definition, document_version, file);
END_TYPE;
 
TYPE assigned_name_select = SELECT 
  (external_class_library);
END_TYPE;
 
TYPE breakdown_item = SELECT 
  (breakdown_element_definition, breakdown_element_usage);
END_TYPE;
 
TYPE cartesian_transformation = SELECT 
  (cartesian_transformation_2d, cartesian_transformation_3d);
END_TYPE;
 
TYPE certification_item = SELECT 
  (resource_item, task_result, product_version_relationship, task_method, 
  interface_specification_version, qualification_assignment, activity, task, 
  part_version, part, product_as_planned, activity_method, work_output, 
  interface_connection, document, breakdown, project, 
  interface_connector_version, document_version, product_as_realized);
END_TYPE;
 
TYPE characterized_activity_definition = SELECT 
  (activity, activity_method, activity_method_relationship, condition, 
  resource_event, condition_evaluation, work_output, task_result, 
  condition_relationship);
END_TYPE;
 
TYPE characterized_resource_select = SELECT 
  (resource_item, resource_location, resource_as_realized, managed_resource, 
  required_resource);
END_TYPE;
 
TYPE classification_item = SELECT 
  (certification_assignment, breakdown_context, 
  interface_connector_design_to_realized, document, part_view_definition, 
  approving_person_organization, calendar_date, state_definition_relationship, 
  resource_as_realized, experience_type, event_relationship, 
  security_classification_assignment, product_concept, state_definition, 
  interface_connector, interface_specification_definition, representation_item
  , condition_evaluation_parameter, requirement, hardcopy, tracing_relationship
  , applied_state_assignment, product_view_definition, 
  required_resource_assignment, applied_information_usage_right, 
  message_association, supplied_part_relationship, language, 
  alternate_part_relationship, breakdown_element_version, 
  observation_relationship, breakdown, descriptive_document_property, 
  position_relationship, physical_document_definition, state_relationship, 
  document_definition_relationship, 
  organization_or_person_in_organization_assignment, 
  resource_location_relationship, product, product_version, 
  resource_as_realized_relationship, content_item, product_as_realized, 
  observation, address_assignment, 
  person_or_organization_or_person_in_organization_in_position_relationship, 
  interface_connector_version, applied_state_definition_assignment, 
  person_in_organization, resource_location, contract_assignment, 
  work_output_relationship, activity_method_relationship, 
  condition_evaluation_assignment, required_resource_relationship, 
  information_usage_right_relationship, task_result, resource_item_relationship
  , resource_event, required_resource, related_condition_parameter, 
  envelope_association, interface_connector_as_planned, condition_assignment, 
  selected_item, assigned_property, requirement_version, condition, 
  numerical_document_property, approval_status, representation_context, 
  resource_item, slot_design_to_realized, partial_document_assignment, 
  information_usage_right, slot_planned_to_realized, part_version, 
  activity_method, requirement_view_definition, product_design_to_individual, 
  breakdown_element_usage, work_output_assignment, 
  applied_activity_method_assignment, breakdown_element_realization, 
  slot_design_to_planned, product_version_relationship, document_version, 
  requirement_collection_relationship, requirement_source, 
  requirement_assignment, condition_parameter, resource_item_assignment, market
  , property_representation, approval_relationship, event, product_as_planned, 
  interface_connection, document_location_identification, file_relationship, 
  interface_connector_planned_to_realized, work_output, project_assignment, 
  task_method_state_relationship, date_time, envelope, 
  resource_as_realized_assignment, attribute_translation_assignment, 
  condition_relationship, product_planned_to_realized, 
  file_location_identification, location_assignment, location_relationship, 
  interface_connector_design, digital_file, external_item_identification, 
  activity_method_realization_relationship, managed_resource_relationship, 
  selected_item_assignment, interface_connector_design_to_planned, 
  information_right, approval, approval_assignment, representation, 
  security_classification, independent_property, interface_specification, 
  document_assignment, state, product_group, date_or_date_time_assignment, 
  product_category, managed_resource, interface_definition_for, address, 
  type_of_person_definition_relationship, external_source_identification, 
  probability_distribution, resource_event_relationship, project_relationship, 
  certification, identification_assignment, view_definition_context, 
  task_result_state_relationship, assembly_relationship_substitution, 
  interface_connector_as_realized, project, message, 
  interface_specification_version, digital_document_definition, contract, 
  breakdown_element, document_property_representation, qualification_type, 
  condition_evaluation, organization, part, activity_method_realization, 
  organization_relationship, product_group_relationship, event_assignment, 
  interface_connector_definition, requirement_version_relationship, 
  task_state_relationship);
END_TYPE;
 
TYPE classified_attribute_select = SELECT 
  (external_item_identification, view_definition_relationship, 
  representation_item, interface_connection, document_location_identification, 
  view_definition_context, message, file_relationship, property_representation
  , language, product_category, requirement_version_relationship, 
  organization_or_person_in_organization_assignment, 
  approving_person_organization, content_item, assigned_property, market, 
  breakdown_element_usage, part_view_definition, 
  document_property_representation, partial_document_assignment, 
  address_assignment, alternate_part_relationship, approval_relationship, 
  document_definition_relationship, organization_relationship, 
  envelope_association, representation, person_in_organization, contract, 
  event_assignment, project_assignment, product_concept, breakdown_context, 
  event_relationship, project_relationship, numerical_document_property, 
  descriptive_document_property, document_assignment, 
  interface_specification_definition, date_or_date_time_assignment, 
  file_location_identification, envelope, hardcopy, certification_assignment, 
  information_usage_right, identification_assignment, security_classification, 
  approval, product_version_relationship, information_usage_right_relationship
  , external_source_identification, message_association, approval_status, 
  requirement_view_definition, independent_property, information_right, 
  interface_connector_definition, digital_file, approval_assignment, 
  representation_context, certification, breakdown_element_realization);
END_TYPE;
 
TYPE classified_select_for_relationship = SELECT 
  (person_or_organization_or_person_in_organization_in_position_relationship, 
  position_relationship);
END_TYPE;
 
TYPE condition_approval_item = SELECT 
  (condition, condition_assignment);
END_TYPE;
 
TYPE condition_assignment_classification_item = SELECT 
  (condition_evaluation, condition_evaluation_assignment, 
  condition_evaluation_parameter, related_condition_parameter);
END_TYPE;
 
TYPE condition_characterized_activity_definition = SELECT 
  (activity_method, activity, condition, condition_relationship);
END_TYPE;
 
TYPE condition_classification_item = SELECT 
  (condition, condition_assignment, condition_parameter, condition_relationship
  );
END_TYPE;
 
TYPE condition_date_or_date_time_item = SELECT 
  (condition, condition_assignment);
END_TYPE;
 
TYPE condition_evaluation_approval_item = SELECT 
  (condition_evaluation, condition_evaluation_assignment);
END_TYPE;
 
TYPE condition_evaluation_characterized_activity_definition = SELECT 
  (activity_method, activity, condition_evaluation);
END_TYPE;
 
TYPE condition_evaluation_date_or_date_time_item = SELECT 
  (condition_evaluation, condition_evaluation_assignment);
END_TYPE;
 
TYPE condition_evaluation_identification_item = SELECT 
  (condition_evaluation);
END_TYPE;
 
TYPE condition_evaluation_item = SELECT 
  (applied_state_assignment, state_assertion, state_assessment);
END_TYPE;
 
TYPE condition_evaluation_organization_or_person_in_organization_item = SELECT 
  (condition_evaluation, condition_evaluation_assignment);
END_TYPE;
 
TYPE condition_evaluation_parameter_item = SELECT 
  (assigned_property, product_version, approval_assignment, 
  product_as_individual, organization_or_person_in_organization_assignment, 
  document_assignment, product_view_definition, product, 
  certification_assignment, calendar_date, product_category_assignment, 
  date_time, contract_assignment, identification_assignment, 
  date_or_date_time_assignment, classification_assignment);
END_TYPE;
 
TYPE condition_identification_item = SELECT 
  (condition);
END_TYPE;
 
TYPE condition_item = SELECT 
  (resource_event, task_assignment, resource_location_relationship, 
  required_resource_relationship, task_method_relationship, resource_location, 
  activity_method_realization_relationship, managed_resource_relationship, 
  resource_item_relationship, state_definition, state_definition_relationship, 
  applied_activity_method_assignment, resource_item_assignment, 
  resource_event_relationship, activity_method_realization, 
  required_resource_assignment, activity_method_relationship, required_resource
  , managed_resource, resource_item, task_relationship);
END_TYPE;
 
TYPE condition_organization_or_person_in_organization_item = SELECT 
  (condition, condition_assignment);
END_TYPE;
 
TYPE condition_parameter_item = SELECT 
  (condition_relationship, date_or_date_time_assignment, contract_assignment, 
  organization_or_person_in_organization_assignment, document_assignment, 
  product_view_definition, approval_assignment, assigned_property, 
  product_version, product, calendar_date, identification_assignment, 
  certification_assignment, date_time, product_as_individual, 
  classification_assignment, product_category_assignment);
END_TYPE;
 
TYPE connector_on_item = SELECT 
  (product_view_definition, view_definition_relationship, slot_definition);
END_TYPE;
 
TYPE constraint_context = SELECT 
  (task, task_method);
END_TYPE;
 
TYPE contract_item = SELECT 
  (requirement_view_definition, managed_resource, task, activity_method, 
  requirement_assignment, task_method_relationship, 
  interface_connector_as_realized, resource_event, requirement_source, 
  breakdown_element, document, interface_connector_design, 
  information_usage_right, requirement, project, 
  requirement_version_relationship, part, product_as_realized, task_method, 
  part_version, interface_connector_as_planned, activity_method_relationship, 
  activity_method_realization, activity_method_realization_relationship, 
  interface_connector_version, breakdown_version, message, tracing_relationship
  , breakdown, resource_location, activity, applied_activity_method_assignment
  , task_result, requirement_version, resource_item, 
  interface_specification_version, task_relationship, document_version, 
  product_as_planned, task_assignment, requirement_collection_relationship);
END_TYPE;
 
TYPE date_or_date_time_item = SELECT 
  (product_design_to_individual, slot, breakdown, breakdown_element_realization
  , organization_or_person_in_organization_assignment, resource_item_assignment
  , slot_planned_to_realized, document_assignment, project_assignment, 
  selected_item_assignment, part_view_definition, 
  condition_evaluation_assignment, condition_evaluation, 
  product_planned_to_realized, task_state_relationship, task_assignment, part, 
  applied_activity_method_assignment, product_as_planned, resource_location, 
  condition_assignment, applied_information_usage_right, independent_property, 
  document, task_result, part_version, slot_design_to_realized, 
  interface_specification_definition, interface_connector_definition, 
  breakdown_element, interface_connector_version, resource_event, 
  contract_assignment, slot_version, task_method_relationship, 
  assembly_relationship_substitution, address_assignment, 
  qualification_assignment, breakdown_version, certification, 
  interface_connector_as_realized, interface_specification_version, 
  managed_resource, identification_assignment, work_output, location_assignment
  , task_result_state_relationship, task_method, task, slot_design_to_planned, 
  security_classification_assignment, task_relationship, 
  independent_property_relationship, selected_item, experience_instance, 
  interface_connector_design_to_planned, condition, 
  assembly_component_relationship, product_concept, required_resource, 
  alias_identification, envelope, experience_gained, 
  task_method_state_relationship, slot_definition, message, scheme_entry, 
  certification_assignment, alternate_part_relationship, product_as_realized, 
  contract, assigned_property, resource_as_realized, 
  activity_method_realization_relationship, 
  interface_connector_design_to_realized, activity_method_relationship, 
  resource_item, breakdown_element_usage, 
  interface_connector_planned_to_realized, activity_method_realization, 
  interface_connector_as_planned, representation);
END_TYPE;
 
TYPE date_or_date_time_select = SELECT 
  (calendar_date, date_time);
END_TYPE;
 
TYPE date_or_event = SELECT 
  (calendar_date, date_time, event);
END_TYPE;
 
TYPE day_in_month_number = INTEGER;
WHERE
  wr1 : {1 <= SELF <= 31};
END_TYPE;
 
TYPE defined_attributes = SELECT 
  (experience_type, qualification_type);
END_TYPE;
 
TYPE defined_methods = SELECT 
  (activity_method, required_resource);
END_TYPE;
 
TYPE descriptive_or_numerical = SELECT 
  (descriptive_document_property, numerical_document_property);
END_TYPE;
 
TYPE document_location_select = SELECT 
  (document_definition);
END_TYPE;
 
TYPE document_management_alias_identification_item = SELECT 
  (digital_document_definition, digital_file, document, document_version, 
  hardcopy, physical_document_definition);
END_TYPE;
 
TYPE document_management_approval_item = SELECT 
  (certification, contract, digital_document_definition, 
  document_definition_relationship, document_version, 
  physical_document_definition);
END_TYPE;
 
TYPE document_management_contract_item = SELECT 
  (document_version);
END_TYPE;
 
TYPE document_management_date_or_date_time_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, digital_document_definition, 
  digital_file, document_definition_relationship, document_version, hardcopy, 
  physical_document_definition);
END_TYPE;
 
TYPE document_management_identification_item = SELECT 
  (organization, security_classification, contract, digital_document_definition
  , digital_file, document, document_version, hardcopy, 
  physical_document_definition);
END_TYPE;
 
TYPE document_management_person_and_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  digital_document_definition, digital_file, document, document_version, 
  hardcopy, physical_document_definition);
END_TYPE;
 
TYPE document_management_security_classification_item = SELECT 
  (digital_document_definition, digital_file, document, document_version, 
  hardcopy, physical_document_definition);
END_TYPE;
 
TYPE document_management_string_select = SELECT 
  (project, approval_relationship, project_relationship, approval_status, 
  certification, contract, organization_relationship, identification_assignment
  , project_assignment, approval, date_or_date_time_assignment, 
  person_in_organization, digital_document_definition, document, 
  document_assignment, document_definition_relationship, document_version, 
  external_item_identification, external_source_identification, 
  file_relationship, physical_document_definition, product_category);
END_TYPE;
 
TYPE document_property_item = SELECT 
  (document_definition, file);
END_TYPE;
 
TYPE documented_element_select = SELECT 
  (breakdown_version, selected_item, product_view_definition, task_result, slot
  , activity_method, document_definition, identification_assignment, 
  assembly_component_relationship, required_resource_assignment, observation, 
  organization, alternate_part_relationship, state_relationship, 
  slot_design_to_realized, product_version_relationship, 
  task_state_relationship, activity, part_view_definition, part_version, 
  information_usage_right, task_result_state_relationship, resource_event, 
  breakdown_element_realization, defined_state_relationship, 
  applied_state_definition_assignment, part, product_as_realized, resource_item
  , requirement_version, certification, product_design_to_individual, 
  task_method_state_relationship, activity_method_relationship, document, 
  task_method_relationship, slot_design_to_planned, 
  state_definition_relationship, slot_planned_to_realized, 
  applied_activity_method_assignment, assembly_relationship_substitution, 
  state_assessment, task_method, resource_item_assignment, 
  interface_connector_design_to_realized, state_assertion, 
  interface_specification_version, interface_connector_as_planned, 
  activity_method_realization, required_resource_relationship, 
  interface_connector_version, requirement, 
  interface_connector_design_to_planned, task_relationship, resource_location, 
  contract, interface_connector_planned_to_realized, state, information_right, 
  resource_item_relationship, task_assignment, applied_state_assignment, 
  state_definition, document_version, product_concept, 
  activity_method_realization_relationship, breakdown_element, breakdown, 
  interface_connector_as_realized, product_as_planned, 
  product_planned_to_realized, task, slot_version, breakdown_element_usage, 
  person, location, interface_connector_design, project);
END_TYPE;
 
TYPE effectivity_item = SELECT 
  (document_version, resource_item_relationship, selected_item_assignment, 
  required_resource, security_classification_assignment, 
  product_group_membership, assembly_relationship_substitution, 
  contract_assignment, interface_connector_design_to_realized, part, 
  breakdown_element_version, product_version_relationship, product_in_slot, 
  document, part_version, assigned_property, slot_as_realized, 
  resource_item_assignment, applied_information_usage_right, address_assignment
  , identification_assignment, requirement_view_definition, location_assignment
  , breakdown_element_usage, requirement, slot_as_planned, breakdown, 
  make_from_relationship, project_assignment, product_as_individual, 
  breakdown_of, product_group_relationship, breakdown_element_realization, 
  requirement_version, managed_resource_relationship, file, resource_item, 
  requirement_version_relationship, certification_assignment, 
  breakdown_element_definition, required_resource_relationship, 
  slot_planned_to_realized, slot, slot_version, requirement_source, 
  product_design_to_individual, assembly_component_relationship, 
  alternate_part_relationship, part_view_definition, file_relationship, 
  breakdown_element, document_assignment, resource_location, slot_on_product, 
  interface_connector_planned_to_realized, document_definition, 
  managed_resource, document_definition_relationship, slot_design, 
  product_planned_to_realized, slot_definition, breakdown_version, 
  requirement_assignment, interface_connector_design_to_planned, 
  requirement_collection_relationship, slot_design_to_planned, 
  slot_design_to_realized, document_location_identification, 
  interface_connection);
END_TYPE;
 
TYPE envelope_approval_select = SELECT 
  (envelope);
END_TYPE;
 
TYPE envelope_date_time_select = SELECT 
  (envelope);
END_TYPE;
 
TYPE envelope_person_organization_select = SELECT 
  (envelope);
END_TYPE;
 
TYPE envelope_property_select = SELECT 
  (envelope);
END_TYPE;
 
TYPE event_item = SELECT 
  (project, applied_state_assignment, certification, observation);
END_TYPE;
 
TYPE experience_classified_select = SELECT 
  (experience_type);
END_TYPE;
 
TYPE experience_date_or_date_time_item = SELECT 
  (experience_gained, experience_instance);
END_TYPE;
 
TYPE experience_instance_property_assignment_select = SELECT 
  (experience_instance);
END_TYPE;
 
TYPE external_class_assigned_name_select = SELECT 
  (external_class_library);
END_TYPE;
 
TYPE external_identification_item = SELECT 
  (document_definition, file);
END_TYPE;
 
TYPE geometric_mapping_target = SELECT 
  (axis_placement, cartesian_transformation);
END_TYPE;
 
TYPE hour_in_day = INTEGER;
WHERE
  wr1 : {0 <= SELF <= 24};
END_TYPE;
 
TYPE identification_item = SELECT 
  (required_resource, task_method, organization, project, slot, 
  interface_specification, activity_method_realization, independent_property, 
  part_view_definition, task_state_relationship, breakdown_element, 
  slot_version, independent_property_relationship, requirement_view_definition
  , activity_method_relationship, breakdown_version, 
  applied_activity_method_assignment, state_definition_relationship, 
  state_definition, part_version, interface_connector_design, 
  requirement_version, certification, resource_event, work_output, 
  activity_method_realization_relationship, condition_evaluation, contract, 
  task_result_state_relationship, security_classification, 
  required_resource_relationship, task_result, approval_status, event, 
  product_as_planned, requirement, task_method_relationship, slot_definition, 
  task_method_state_relationship, interface_connector_as_planned, task, 
  resource_location, interface_specification_version, resource_item, breakdown
  , task_assignment, interface_connector, interface_specification_definition, 
  managed_resource, product_as_realized, interface_connector_as_realized, 
  task_relationship, interface_connector_version, product_as_individual, 
  resource_as_realized, condition, interface_connector_definition, 
  assigned_property, part);
END_TYPE;
 
TYPE in_zone_item = SELECT 
  (product_view_definition);
END_TYPE;
 
TYPE information_usage_right_item = SELECT 
  (security_classification, interface_connector_as_planned, breakdown_element, 
  document, breakdown, supplied_part_relationship, part_version, 
  interface_connection, part_view_definition, interface_connector, 
  interface_connector_version, slot_version, digital_file, 
  interface_connector_as_realized, interface_specification_definition, 
  digital_document_definition, physical_document_definition, 
  breakdown_element_usage, assembly_relationship_substitution, 
  product_as_planned, requirement, file_relationship, hardcopy, 
  requirement_view_definition, breakdown_element_realization, 
  requirement_assignment, message, interface_connector_design, 
  breakdown_version, slot_design_to_realized, document_definition_relationship
  , interface_specification, slot_design_to_planned, part, slot_on_product, 
  certification_assignment, assembly_component_relationship, 
  interface_specification_version, interface_connector_definition, 
  certification, document_version, slot_definition, 
  security_classification_assignment, alternate_part_relationship, 
  product_as_realized, requirement_version);
END_TYPE;
 
TYPE interface_on_slot_item = SELECT 
  (view_definition_relationship, product_view_definition, slot_definition);
END_TYPE;
 
TYPE justification_item = SELECT 
  (task_assignment, resource_item_relationship, 
  applied_activity_method_assignment, task, task_state_relationship, 
  task_method_state_relationship, required_resource, resource_event, 
  task_method, resource_item_assignment, task_method_relationship, 
  resource_as_realized, activity_method, resource_item, 
  task_result_state_relationship, task_result, activity_method_relationship, 
  activity, activity_method_realization, 
  activity_method_realization_relationship, task_relationship, 
  required_resource_relationship, location_assignment);
END_TYPE;
 
TYPE justification_support_item = SELECT 
  (event, activity_method, document, applied_state_definition_assignment, state
  , contract, document_version, document_definition, applied_state_assignment, 
  work_request, state_relationship, project, state_definition, location, 
  state_definition_relationship, work_order, activity, location_assignment);
END_TYPE;
 
TYPE length_measure = NUMBER;
END_TYPE;
 
TYPE limit_qualifier_list = ENUMERATION OF 
  (minimum, maximum);
END_TYPE;
 
TYPE located_select = SELECT 
  (file);
END_TYPE;
 
TYPE location_assignment_approval_item = SELECT 
  (location_assignment);
END_TYPE;
 
TYPE location_assignment_classification_item = SELECT 
  (location_assignment);
END_TYPE;
 
TYPE location_assignment_date_or_date_time_item = SELECT 
  (location_assignment);
END_TYPE;
 
TYPE location_assignment_effectivity_item = SELECT 
  (location_assignment);
END_TYPE;
 
TYPE location_assignment_organization_or_person_in_organization_item = SELECT 
  (location_assignment);
END_TYPE;
 
TYPE location_assignment_select = SELECT 
  (person, document_definition, resource_item_assignment, 
  required_resource_assignment, product_version, person_in_organization, 
  product, document_version, task, document, file, required_resource, 
  type_of_person, product_group, resource_item, task_method, position, 
  organization_type, organization, task_assignment, position_type, 
  product_view_definition, resource_location, project);
END_TYPE;
 
TYPE location_classification_item = SELECT 
  (location_relationship);
END_TYPE;
 
TYPE location_representation = SELECT 
  (address_based_location_representation, global_location_representation, 
  organization_based_location_representation, 
  product_based_location_identification, regional_grid_location_representation)
  ;
END_TYPE;
 
TYPE measure_value = SELECT 
  (any_number_value, any_string_value, length_measure);
END_TYPE;
 
TYPE message_approval_select = SELECT 
  (message);
END_TYPE;
 
TYPE message_date_time_select = SELECT 
  (message);
END_TYPE;
 
TYPE message_definer_select = SELECT 
  (organization, person_in_organization);
END_TYPE;
 
TYPE message_security_classification_select = SELECT 
  (message);
END_TYPE;
 
TYPE message_state_select = SELECT 
  (message);
END_TYPE;
 
TYPE minute_in_hour = INTEGER;
WHERE
  wr1 : {0 <= SELF <= 59};
END_TYPE;
 
TYPE month_in_year_number = INTEGER;
WHERE
  wr1 : {1 <= SELF <= 12};
END_TYPE;
 
TYPE mri_approval_item = SELECT 
  (certification, contract, digital_document_definition, observation, 
  requirement_assignment, information_usage_right, 
  applied_information_usage_right, requirement_version_relationship, 
  document_version, activity_method, work_order, work_request, 
  activity_method_assignment, physical_document_definition, directed_activity, 
  requirement_source, document_definition_relationship, 
  requirement_view_definition, tracing_relationship, requirement_version, 
  requirement_collection_relationship, activity, requirement);
END_TYPE;
 
TYPE mri_date_or_date_time_item = SELECT 
  (certification, contract, organization_or_person_in_organization_assignment, 
  security_classification_assignment, activity, 
  requirement_version_relationship, requirement_view_definition, observation, 
  state_definition, digital_document_definition, activity_method, 
  requirement_assignment, activity_relationship, requirement_source, 
  document_version, hardcopy, state_assessment, information_usage_right, 
  requirement_version, activity_method_assignment, applied_state_assignment, 
  tracing_relationship, state, applied_state_definition_assignment, 
  physical_document_definition, requirement, work_request, directed_activity, 
  state_assertion, digital_file, state_relationship, work_order, 
  state_definition_relationship, document_definition_relationship, 
  requirement_collection_relationship);
END_TYPE;
 
TYPE mri_identification_item = SELECT 
  (contract, organization, security_classification, work_order, 
  directed_activity, state_definition, requirement_source, 
  requirement_assignment, document, state_definition_relationship, 
  document_version, requirement_version_relationship, tracing_relationship, 
  work_request, requirement_view_definition, hardcopy, 
  digital_document_definition, state_relationship, digital_file, state, 
  activity_method, activity, requirement_collection_relationship, 
  physical_document_definition, requirement_version, requirement);
END_TYPE;
 
TYPE mri_organization_or_person_in_organization_item = SELECT 
  (contract, identification_assignment, security_classification_assignment, 
  applied_state_definition_assignment, requirement_version, 
  activity_relationship, activity_method, applied_state_assignment, 
  requirement_collection_relationship, requirement_version_relationship, 
  hardcopy, information_usage_right, state_definition_relationship, activity, 
  state, requirement_source, requirement, state_relationship, 
  tracing_relationship, work_request, state_definition, document_version, 
  requirement_assignment, activity_method_assignment, digital_file, 
  physical_document_definition, requirement_view_definition, 
  digital_document_definition, directed_activity, document, observation, 
  state_assessment, work_order, state_assertion);
END_TYPE;
 
TYPE mri_string_select = SELECT 
  (approval, approval_relationship, approval_status, certification, contract, 
  date_or_date_time_assignment, identification_assignment, 
  organization_relationship, person_in_organization, project, 
  project_assignment, project_relationship, state_relationship, 
  physical_document_definition, requirement, activity_method_assignment, 
  external_item_identification, state, activity_method, document_version, 
  digital_document_definition, document, state_definition_relationship, 
  work_order, requirement_version_relationship, 
  requirement_collection_relationship, product_category, requirement_assignment
  , requirement_version, document_assignment, tracing_relationship, 
  document_definition_relationship, activity_relationship, 
  requirement_view_definition, external_source_identification, state_definition
  , file_relationship, requirement_source, activity);
END_TYPE;
 
TYPE observation_approval = SELECT 
  (certification, contract, observation);
END_TYPE;
 
TYPE observation_classification_item = SELECT 
  (observation, observation_relationship);
END_TYPE;
 
TYPE observation_date_time = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, observation);
END_TYPE;
 
TYPE observation_recorder = SELECT 
  (product_as_realized);
END_TYPE;
 
TYPE observed_context = SELECT 
  (work_order, task, required_resource, work_output, scheme, work_request, 
  product_view_definition, activity_method, product, resource_as_realized, 
  task_method, product_version, activity, resource_item, product_group, 
  scheme_entry);
END_TYPE;
 
TYPE observing_person = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  observation);
END_TYPE;
 
TYPE offset_orientation = ENUMERATION OF 
  (ahead, exact, behind);
END_TYPE;
 
TYPE organization_or_person_in_organization_item = SELECT 
  (interface_connector_as_planned, interface_specification_definition, 
  certification, work_output, part_view_definition, task_method, 
  contract_assignment, independent_property, task_assignment, task_relationship
  , independent_property_relationship, security_classification_assignment, 
  project, representation, envelope, scheme, breakdown_version, 
  identification_assignment, task, condition_evaluation, 
  task_state_relationship, part_version, interface_specification, 
  applied_activity_method_assignment, selected_item_assignment, resource_event
  , activity_method_relationship, part, breakdown_element_usage, 
  activity_method_realization_relationship, required_resource, 
  task_method_relationship, location_assignment, breakdown_element_realization
  , interface_connector_definition, document_assignment, event, selected_item, 
  project_assignment, document_version, condition_assignment, breakdown_element
  , qualification_assignment, task_result_state_relationship, breakdown, 
  interface_connector_version, certification_assignment, contract, 
  product_as_planned, interface_specification_version, 
  task_method_state_relationship, assembly_component_relationship, 
  assigned_property, alternate_part_relationship, alias_identification, 
  activity_method_realization, interface_connector, resource_location, 
  scheme_entry, document_definition, condition, event_assignment, 
  condition_evaluation_assignment, interface_connector_as_realized, document, 
  product_as_realized, managed_resource, task_result, resource_item_assignment
  , assembly_relationship_substitution, resource_item);
END_TYPE;
 
TYPE organization_or_person_in_organization_select = SELECT 
  (organization, person_in_organization);
END_TYPE;
 
TYPE person_or_organization_or_person_in_organization_select = SELECT 
  (organization, person, person_in_organization);
END_TYPE;
 
TYPE position_context_item = SELECT 
  (organization, position_group, project);
END_TYPE;
 
(* NOT USED
TYPE position_group_item = SELECT 
  ();
END_TYPE;
 
TYPE position_item = SELECT 
  ();
END_TYPE;
*) 

TYPE position_person_or_organization_or_person_in_organization_select = SELECT 
  (organization, person, person_in_organization);
END_TYPE;
 
(* NOT USED
TYPE position_type_item = SELECT 
  ();
END_TYPE;
*)

TYPE probability_distribution_classification = SELECT 
  (probability_distribution);
END_TYPE;
 
TYPE product_as_individual_identification_item = SELECT 
  (product_as_individual);
END_TYPE;
 
TYPE product_based_location_representation = SELECT 
  (product, zone_element);
END_TYPE;
 
TYPE product_group_classification_item = SELECT 
  (product_group, product_group_relationship);
END_TYPE;
 
TYPE product_group_effectivity_item = SELECT 
  (product_group_membership, product_group_relationship);
END_TYPE;
 
TYPE product_item = SELECT 
  (product_view_definition, view_definition_relationship);
END_TYPE;
 
TYPE product_property_assignment = SELECT 
  (product_view_definition, view_definition_relationship);
END_TYPE;
 
TYPE product_select = SELECT 
  (product_as_individual, product_concept, product_group, product_version);
END_TYPE;
 
TYPE project_item = SELECT 
  (activity_method_realization, task, applied_activity_method_assignment, 
  activity, breakdown, activity_method_realization_relationship, 
  activity_method, product_concept, task_method, task_assignment, 
  activity_method_relationship, task_result);
END_TYPE;
 
TYPE property_assignment_select = SELECT 
  (view_definition_relationship, document_definition, 
  state_definition_relationship, state_definition, file, experience_instance, 
  product_view_definition, state_relationship, state, envelope, 
  task_state_relationship, part_view_definition, task_result_state_relationship
  , task_assignment, type_of_person_definition, requirement_assignment);
END_TYPE;
 
TYPE property_value_qualifier = ENUMERATION OF 
  (nominal, specified, typical);
END_TYPE;
 
TYPE ps_product_property_assignment = SELECT 
  (view_definition_relationship);
END_TYPE;
 
TYPE qualification_organization_or_person_in_organization_item = SELECT 
  (qualification_assignment);
END_TYPE;
 
TYPE qualifications_certification_item = SELECT 
  (qualification_assignment);
END_TYPE;
 
TYPE qualifications_classified_select = SELECT 
  (qualification_type);
END_TYPE;
 
TYPE qualifications_date_or_date_time_item = SELECT 
  (qualification_assignment);
END_TYPE;
 
TYPE qualifications_select = SELECT 
  (organization, person, person_in_organization);
END_TYPE;
 
TYPE required_resource_approval_item = SELECT 
  (required_resource, required_resource_relationship);
END_TYPE;
 
TYPE required_resource_characterized_resource_select = SELECT 
  (required_resource);
END_TYPE;
 
TYPE required_resource_classification_item = SELECT 
  (required_resource, required_resource_assignment, 
  required_resource_relationship);
END_TYPE;
 
TYPE required_resource_condition_item = SELECT 
  (required_resource, required_resource_relationship);
END_TYPE;
 
TYPE required_resource_date_or_date_time_item = SELECT 
  (required_resource);
END_TYPE;
 
TYPE required_resource_effectivity_item = SELECT 
  (required_resource, required_resource_relationship);
END_TYPE;
 
TYPE required_resource_identification_item = SELECT 
  (required_resource, required_resource_relationship);
END_TYPE;
 
TYPE required_resource_item = SELECT 
  (task_assignment, task, task_method, activity, activity_method, scheme, 
  scheme_entry, event);
END_TYPE;
 
TYPE required_resource_justification_item = SELECT 
  (required_resource, required_resource_relationship);
END_TYPE;
 
TYPE required_resource_organization_or_person_in_organization_item = SELECT 
  (required_resource);
END_TYPE;
 
TYPE required_resource_requirement_assignment_item = SELECT 
  (required_resource_by_specification);
END_TYPE;
 
TYPE requirement_alias_idenfication_item = SELECT 
  (requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version_relationship, tracing_relationship);
END_TYPE;
 
TYPE requirement_assignment_item = SELECT 
  (state, breakdown_element_realization, required_resource_by_specification, 
  product_in_slot, document_version, state_relationship, 
  alternate_part_relationship, product_as_planned, product_as_realized, 
  breakdown, assembly_relationship_substitution, breakdown_element_usage, 
  breakdown_version, breakdown_element_version, project, slot, slot_version, 
  breakdown_element, part_version, assembly_component_relationship, 
  interface_specification);
END_TYPE;
 
TYPE requirement_assignment_property_assignment_select = SELECT 
  (requirement_assignment);
END_TYPE;
 
TYPE requirement_contract_item = SELECT 
  (requirement, requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version, requirement_version_relationship, 
  requirement_view_definition, tracing_relationship);
END_TYPE;
 
TYPE requirement_identification_and_version_alias_identification_item = SELECT 
  (requirement, requirement_version);
END_TYPE;
 
TYPE requirement_identification_and_version_identification_item = SELECT 
  (requirement, requirement_version);
END_TYPE;
 
TYPE requirement_mri_approval_item = SELECT 
  (certification, contract, requirement, requirement_assignment, 
  requirement_collection_relationship, requirement_source, requirement_version
  , requirement_version_relationship, requirement_view_definition, 
  tracing_relationship);
END_TYPE;
 
TYPE requirement_mri_date_or_date_time_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, requirement, 
  requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version, requirement_version_relationship, 
  requirement_view_definition, tracing_relationship);
END_TYPE;
 
TYPE requirement_mri_identification_item = SELECT 
  (organization, security_classification, contract, requirement, 
  requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version, requirement_version_relationship, 
  requirement_view_definition, tracing_relationship);
END_TYPE;
 
TYPE requirement_mri_organization_or_person_in_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  requirement, requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version, requirement_version_relationship, 
  requirement_view_definition, tracing_relationship);
END_TYPE;
 
TYPE requirement_mri_string_select = SELECT 
  (project, approval_relationship, project_relationship, approval_status, 
  certification, contract, organization_relationship, identification_assignment
  , project_assignment, approval, date_or_date_time_assignment, 
  person_in_organization, requirement, requirement_assignment, 
  requirement_collection_relationship, requirement_source, requirement_version
  , requirement_version_relationship, requirement_view_definition, 
  tracing_relationship);
END_TYPE;
 
TYPE requirement_security_classification_item = SELECT 
  (requirement, requirement_assignment, requirement_collection_relationship, 
  requirement_source, requirement_version, requirement_version_relationship, 
  requirement_view_definition, tracing_relationship);
END_TYPE;
 
TYPE requirement_source_item = SELECT 
  (part_version, document_version, product_as_individual);
END_TYPE;
 
TYPE requirement_view_definition_alias_identification_item = SELECT 
  (requirement_view_definition);
END_TYPE;
 
TYPE requirement_view_definition_identification_item = SELECT 
  (requirement_view_definition);
END_TYPE;
 
TYPE resource_as_realized_approval_item = SELECT 
  (resource_as_realized);
END_TYPE;
 
TYPE resource_as_realized_characterized_resource_select = SELECT 
  (resource_as_realized);
END_TYPE;
 
TYPE resource_as_realized_classification_item = SELECT 
  (resource_as_realized, resource_as_realized_assignment, 
  resource_as_realized_relationship);
END_TYPE;
 
TYPE resource_as_realized_date_or_date_time_item = SELECT 
  (resource_as_realized);
END_TYPE;
 
TYPE resource_as_realized_identification_item = SELECT 
  (resource_as_realized);
END_TYPE;
 
TYPE resource_as_realized_item = SELECT 
  (activity, applied_activity_assignment, activity_method, 
  applied_activity_method_assignment, event);
END_TYPE;
 
TYPE resource_as_realized_justification_item = SELECT 
  (resource_as_realized);
END_TYPE;
 
TYPE resource_as_realized_relationship_select = SELECT 
  (required_resource, resource_event);
END_TYPE;
 
TYPE resource_assignment_item = SELECT 
  (location, part_version, contract, part_view_definition, project, part, 
  product_group);
END_TYPE;
 
TYPE resource_item_approval_item = SELECT 
  (resource_item, resource_item_assignment, resource_item_relationship);
END_TYPE;
 
TYPE resource_item_certification_item = SELECT 
  (resource_item);
END_TYPE;
 
TYPE resource_item_characterized_resource_select = SELECT 
  (resource_item);
END_TYPE;
 
TYPE resource_item_classification_item = SELECT 
  (resource_item, resource_item_assignment, resource_item_relationship);
END_TYPE;
 
TYPE resource_item_condition_item = SELECT 
  (resource_item, resource_item_assignment, resource_item_relationship);
END_TYPE;
 
TYPE resource_item_contract_item = SELECT 
  (resource_item);
END_TYPE;
 
TYPE resource_item_date_or_date_time_item = SELECT 
  (resource_item, resource_item_assignment);
END_TYPE;
 
TYPE resource_item_documented_element_select = SELECT 
  (resource_item);
END_TYPE;
 
TYPE resource_item_effectivity_item = SELECT 
  (resource_item, resource_item_assignment, resource_item_relationship);
END_TYPE;
 
TYPE resource_item_identification_item = SELECT 
  (resource_item);
END_TYPE;
 
TYPE resource_item_justification_item = SELECT 
  (resource_item, resource_item_assignment, resource_item_relationship);
END_TYPE;
 
TYPE resource_item_organization_or_person_in_organization_item = SELECT 
  (resource_item, resource_item_assignment);
END_TYPE;
 
TYPE resource_item_security_classification_item = SELECT 
  (resource_item);
END_TYPE;
 
TYPE resource_item_select = SELECT 
  (product_group, person_in_organization, position_type, person, 
  document_definition, product_as_individual, document_version, location, 
  type_of_person, file, organization_type, position, part, organization, 
  part_view_definition, document, part_version);
END_TYPE;
 
TYPE resource_management_characterized_activity_definition = SELECT 
  (activity_method, activity, resource_event);
END_TYPE;
 
TYPE resource_management_characterized_resource_select = SELECT 
  (managed_resource, resource_location);
END_TYPE;
 
TYPE resource_management_classification_item = SELECT 
  (managed_resource, managed_resource_relationship, resource_event, 
  resource_event_relationship, resource_location, 
  resource_location_relationship);
END_TYPE;
 
TYPE resource_management_condition_item = SELECT 
  (managed_resource, managed_resource_relationship, resource_event, 
  resource_event_relationship, resource_location, 
  resource_location_relationship);
END_TYPE;
 
TYPE resource_management_contract_item = SELECT 
  (managed_resource, resource_event, resource_location);
END_TYPE;
 
TYPE resource_management_date_or_date_time_item = SELECT 
  (managed_resource, resource_event, resource_location);
END_TYPE;
 
TYPE resource_management_documented_element_select = SELECT 
  (resource_event, resource_location);
END_TYPE;
 
TYPE resource_management_effectivity_item = SELECT 
  (managed_resource, managed_resource_relationship, resource_location);
END_TYPE;
 
TYPE resource_management_identification_item = SELECT 
  (managed_resource, resource_event, resource_location);
END_TYPE;
 
TYPE resource_management_justification_item = SELECT 
  (resource_event);
END_TYPE;
 
TYPE resource_management_location_assignment_select = SELECT 
  (resource_location);
END_TYPE;
 
TYPE resource_management_organization_or_person_in_organization_item = SELECT 
  (managed_resource, resource_event, resource_location);
END_TYPE;
 
TYPE right_approval_item = SELECT 
  (certification, contract, applied_information_usage_right, 
  information_usage_right);
END_TYPE;
 
TYPE right_contract_item = SELECT 
  (information_usage_right);
END_TYPE;
 
TYPE right_date_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, information_usage_right);
END_TYPE;
 
TYPE right_person_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  information_usage_right);
END_TYPE;
 
TYPE scheme_date_or_date_time_item = SELECT 
  (scheme_entry);
END_TYPE;
 
TYPE scheme_entry_item_select = SELECT 
  (event, activity);
END_TYPE;
 
TYPE scheme_person_organization_select = SELECT 
  (scheme, scheme_entry);
END_TYPE;
 
TYPE scheme_subject_select = SELECT 
  (product, activity, project, scheme_entry, activity_method, 
  product_view_definition, product_version, product_group, contract);
END_TYPE;
 
TYPE second_in_minute = REAL;
WHERE
  wr1 : {0 <= SELF <= 60.0};
END_TYPE;
 
TYPE security_classification_item = SELECT 
  (hardcopy, assembly_component_relationship, message, 
  physical_document_definition, alternate_part_relationship, 
  slot_design_to_realized, task_method_relationship, 
  requirement_view_definition, task_assignment, tracing_relationship, document
  , interface_connector_as_planned, work_output, part_version, activity_method
  , document_assignment, breakdown_element_usage, digital_document_definition, 
  slot_planned_to_realized, digital_file, interface_connector_design, 
  interface_connector_version, requirement_collection_relationship, 
  applied_activity_method_assignment, slot_on_product, requirement_version, 
  interface_connector_as_realized, activity_method_realization, 
  document_version, breakdown, task, breakdown_element_realization, 
  part_view_definition, task_method, requirement_assignment, product_as_planned
  , breakdown_element_definition, task_result, 
  assembly_relationship_substitution, product_as_realized, 
  task_method_state_relationship, requirement_source, breakdown_element_version
  , resource_item, requirement, activity_method_relationship, 
  slot_design_to_planned, activity, requirement_version_relationship, 
  task_result_state_relationship, interface_connector_definition, 
  interface_specification_version, slot_version, task_relationship, 
  task_state_relationship, activity_method_realization_relationship, 
  interface_specification_definition);
END_TYPE;
 
TYPE selected_item_context_items = SELECT 
  (product_concept, part, contract, project);
END_TYPE;
 
TYPE selected_item_select = SELECT 
  (product, product_version);
END_TYPE;
 
TYPE shape_dependent_select = SELECT 
  (item_shape, shape_element);
END_TYPE;
 
TYPE shape_model = SELECT 
  (external_geometric_model, geometric_model);
END_TYPE;
 
TYPE shape_select = SELECT 
  (item_shape, shape_element, shape_element_relationship);
END_TYPE;
 
TYPE shapeable_item = SELECT 
  (characterizable_object, product_view_definition, view_definition_usage);
END_TYPE;
 
TYPE spr_documented_element_select = SELECT 
  (part_view_definition, part, part_version);
END_TYPE;
 
TYPE spr_organization_or_person_in_organization_item = SELECT 
  (document, document_version, document_definition, part, part_view_definition
  , part_version);
END_TYPE;
 
TYPE spr_product_property_assignment = SELECT 
  (part_view_definition);
END_TYPE;
 
TYPE state_classification_item = SELECT 
  (applied_state_assignment, state, state_relationship);
END_TYPE;
 
TYPE state_definition_classification_item = SELECT 
  (applied_state_definition_assignment, state_definition, 
  state_definition_relationship);
END_TYPE;
 
TYPE state_definition_condition_item = SELECT 
  (state_definition, state_definition_relationship);
END_TYPE;
 
TYPE state_definition_identification_item = SELECT 
  (state_definition, state_definition_relationship);
END_TYPE;
 
TYPE state_definition_of_item = SELECT 
  (assembly_relationship_substitution, digital_document_definition, 
  product_group, type_of_person, project, part, product_as_planned, 
  physical_document_definition, slot, product_as_individual, position_type, 
  interface_connector_definition, certification, part_view_definition, 
  assembly_component_relationship, organization, interface_connection, 
  slot_design_to_realized, organization_type, 
  interface_specification_definition, interface_specification_version, 
  product_as_realized, security_classification, product_category, 
  document_version, interface_connector_as_planned, breakdown, 
  breakdown_element_usage, product_in_slot, interface_specification, 
  breakdown_element_version, interface_connector_as_realized, 
  interface_connector_design, person_in_organization, slot_definition, 
  file_location_identification, contract, activity_relationship, location, 
  slot_design_to_planned, part_version, breakdown_element, 
  breakdown_element_realization, digital_file, document, file, activity, 
  document_definition, slot_on_product, position, slot_planned_to_realized, 
  hardcopy, slot_version, alternate_part_relationship, person, connector_on, 
  interface_connector_version);
END_TYPE;
 
TYPE state_definition_property_assignment = SELECT 
  (state_definition, state_definition_relationship);
END_TYPE;
 
TYPE state_observed_condition_evaluation_item = SELECT 
  (state_assertion, state_assessment);
END_TYPE;
 
TYPE state_of_item = SELECT 
  (assembly_component_relationship, digital_file, slot_definition, 
  document_version, product_as_realized, activity_actual, contract, 
  organization, document, slot_design_to_planned, file_location_identification
  , product_in_slot, file, interface_specification_version, 
  interface_connector_as_planned, assembly_relationship_substitution, 
  position_type, slot_version, breakdown_element_usage, hardcopy, 
  alternate_part_relationship, slot, security_classification, 
  interface_connector_version, part_version, person, slot_design_to_realized, 
  part, part_view_definition, interface_connection, organization_type, 
  interface_connector_as_realized, breakdown_element_version, message, location
  , digital_document_definition, position, slot_planned_to_realized, 
  interface_specification_definition, project, connector_on, breakdown_element
  , person_in_organization, product_as_individual, 
  interface_connector_definition, breakdown, interface_specification, 
  type_of_person, physical_document_definition, breakdown_element_realization, 
  product_as_planned, activity_happening, product_group, slot_on_product, 
  certification, interface_connector_design, document_definition);
END_TYPE;
 
TYPE state_or_state_definition_select = SELECT 
  (state, state_definition);
END_TYPE;
 
TYPE statechar_ap239_mri_classified_attribute_select = SELECT 
  (project_assignment, date_or_date_time_assignment, event_assignment, 
  security_classification, approving_person_organization, 
  identification_assignment, person_in_organization, language, approval, 
  approval_status, address_assignment, certification, organization_relationship
  , approval_relationship, certification_assignment, 
  organization_or_person_in_organization_assignment, approval_assignment, 
  contract, project_relationship, event_relationship, applied_state_assignment
  , applied_state_definition_assignment, state, state_definition, 
  state_definition_relationship, state_relationship);
END_TYPE;
 
TYPE statechar_mri_date_or_date_time_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, applied_state_assignment, 
  applied_state_definition_assignment, state, state_assertion, state_assessment
  , state_definition, state_definition_relationship, state_relationship);
END_TYPE;
 
TYPE statechar_mri_identification_item = SELECT 
  (organization, security_classification, contract, state, state_definition, 
  state_definition_relationship, state_relationship);
END_TYPE;
 
TYPE statechar_mri_organization_or_person_in_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  applied_state_assignment, applied_state_definition_assignment, state, 
  state_assertion, state_assessment, state_definition, 
  state_definition_relationship, state_relationship);
END_TYPE;
 
TYPE statechar_mri_string_select = SELECT 
  (project, approval_relationship, project_relationship, approval_status, 
  certification, contract, organization_relationship, identification_assignment
  , project_assignment, approval, date_or_date_time_assignment, 
  person_in_organization, state, state_definition, 
  state_definition_relationship, state_relationship);
END_TYPE;
 
TYPE string_select = SELECT 
  (assembly_component_relationship, event, slot_definition, 
  envelope_association, part, task_result, breakdown_element_realization, 
  information_right, contract, message_association, person_in_organization, 
  breakdown, slot_version, approval, task_relationship, 
  independent_property_relationship, identification_assignment, task, 
  approval_relationship, activity_method_realization_relationship, 
  date_or_date_time_assignment, organization_relationship, document, 
  project_assignment, representation_item, applied_activity_method_assignment, 
  slot_design_to_planned, alternate_part_relationship, breakdown_element_usage
  , activity_method_relationship, assembly_relationship_substitution, envelope
  , independent_property, slot_design_to_realized, project, approval_status, 
  project_relationship, slot_on_product, task_method, task_assignment, 
  information_usage_right, task_method_relationship, breakdown_element, 
  slot_planned_to_realized, breakdown_element_version, 
  activity_method_realization, product_as_individual, message, certification, 
  assigned_property, slot);
END_TYPE;
 
TYPE task_classification_item = SELECT 
  (activity_method, activity_method_relationship, 
  applied_activity_method_assignment, task_method_state_relationship, 
  task_result, task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE task_item = SELECT 
  (required_resource_assignment, breakdown_element, breakdown_element_usage, 
  part_version, task, product_group, position, document, product_as_individual
  , breakdown_element_definition, location, type_of_person, 
  breakdown_element_version, resource_item, view_definition_relationship, 
  required_resource, file, organization, product_view_definition, 
  product_version, part_view_definition, position_type, document_version, 
  type_of_person_definition, part, product);
END_TYPE;
 
TYPE task_resource_select = SELECT 
  (document, document_definition, document_version, file, location, 
  organization, organization_type, part, part_version, part_view_definition, 
  person, person_in_organization, position, position_type, 
  product_as_individual, product_group, type_of_person);
END_TYPE;
 
TYPE template_instance = SELECT 
  (mapping_based_template_instance, transformation_based_template_instance);
END_TYPE;
 
TYPE tsr_approval_item = SELECT 
  (task, task_assignment, task_method, task_method_relationship, 
  task_method_state_relationship, task_relationship, task_result, 
  task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE tsr_certification_item = SELECT 
  (task, task_method, task_result);
END_TYPE;
 
TYPE tsr_condition_item = SELECT 
  (required_resource_assignment, required_resource_relationship, 
  resource_item_assignment, resource_item_relationship, task_assignment, 
  task_method_relationship, task_relationship);
END_TYPE;
 
TYPE tsr_contract_item = SELECT 
  (task, task_assignment, task_method, task_method_relationship, 
  task_relationship, task_result);
END_TYPE;
 
TYPE tsr_date_or_date_time_item = SELECT 
  (task, task_assignment, task_method, task_method_relationship, 
  task_method_state_relationship, task_relationship, task_result, 
  task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE tsr_documented_element_select = SELECT 
  (location, required_resource_assignment, required_resource_relationship, 
  resource_item_assignment, resource_item_relationship, task, task_assignment, 
  task_method, task_method_relationship, task_method_state_relationship, 
  task_relationship, task_result, task_result_state_relationship, 
  task_state_relationship);
END_TYPE;
 
TYPE tsr_identification_item = SELECT 
  (task, task_assignment, task_method, task_method_relationship, 
  task_method_state_relationship, task_relationship, task_result, 
  task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE tsr_justification_item = SELECT 
  (location_assignment, task, task_assignment, task_method, 
  task_method_relationship, task_method_state_relationship, task_relationship, 
  task_result, task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE tsr_justification_support_item = SELECT 
  (applied_state_assignment, applied_state_definition_assignment, contract, 
  document, document_version, location, location_assignment, state, 
  state_definition, state_definition_relationship, state_relationship);
END_TYPE;
 
TYPE tsr_location_assignment_select = SELECT 
  (document, document_definition, document_version, file, organization, 
  organization_type, person, person_in_organization, position, position_type, 
  product, product_group, product_version, product_view_definition, project, 
  required_resource, required_resource_assignment, resource_item, 
  resource_item_assignment, task, task_assignment, task_method, type_of_person)
  ;
END_TYPE;
 
TYPE tsr_organization_person_item = SELECT 
  (task, task_assignment, task_method, task_method_relationship, 
  task_method_state_relationship, task_relationship, task_result, 
  task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE tsr_process_property_item = SELECT 
  (activity_method, activity, activity_method_relationship, task_result);
END_TYPE;
 
TYPE tsr_project_item = SELECT 
  (task, task_assignment, task_method, task_result);
END_TYPE;
 
TYPE tsr_property_item = SELECT 
  (task_assignment, task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE tsr_required_resource_item = SELECT 
  (task, task_assignment, task_method);
END_TYPE;
 
TYPE tsr_resource_assignment_item = SELECT 
  (contract, location, part, part_version, part_view_definition, product_group
  , project);
END_TYPE;
 
TYPE tsr_security_classification_item = SELECT 
  (task, task_assignment, task_method, task_method_relationship, 
  task_method_state_relationship, task_relationship, task_result, 
  task_result_state_relationship, task_state_relationship);
END_TYPE;
 
TYPE tsr_string_select = SELECT 
  (task, task_assignment, task_method, task_method_relationship, 
  task_relationship, task_result);
END_TYPE;
 
TYPE tsr_task_item = SELECT 
  (breakdown_element, breakdown_element_definition, breakdown_element_usage, 
  breakdown_element_version, document, document_version, file, location, 
  organization, part, part_version, part_view_definition, position, 
  position_type, product, product_as_individual, product_group, product_version
  , product_view_definition, required_resource, required_resource_assignment, 
  resource_item, task, type_of_person, type_of_person_definition, 
  view_definition_relationship);
END_TYPE;
 
TYPE tsr_work_item = SELECT 
  (task, task_method);
END_TYPE;
 
TYPE tsr_work_output_item = SELECT 
  (document, document_definition, document_version, file, organization, 
  organization_type, part, part_version, part_view_definition, person, 
  person_in_organization, position, position_type, product_as_individual, 
  product_group, type_of_person);
END_TYPE;
 
TYPE type_of_person_classified_select = SELECT 
  (type_of_person_definition_relationship);
END_TYPE;
 
(* NOT USED
TYPE type_of_person_item_select = SELECT 
  ();
END_TYPE;
*)

TYPE type_of_person_property_assignment_select = SELECT 
  (type_of_person_definition);
END_TYPE;
 
TYPE version_or_definition = SELECT 
  (product_version, product_view_definition);
END_TYPE;
 
TYPE wd_activity_item = SELECT 
  (activity, contract, document, document_definition, document_version, event, 
  file, organization, person, person_in_organization, product, product_group, 
  product_version, product_view_definition, resource_item, task, 
  view_definition_relationship);
END_TYPE;
 
TYPE wd_activity_realization_select = SELECT 
  (scheme, task, task_method);
END_TYPE;
 
TYPE wd_affected_item_select = SELECT 
  (activity_method, contract, document, document_definition, document_version, 
  file, organization, person, person_in_organization, product, product_group, 
  product_version, product_view_definition, resource_item, 
  view_definition_relationship);
END_TYPE;
 
TYPE wd_approval_item = SELECT 
  (activity_method_realization, activity_method_realization_relationship, 
  activity_method_relationship, applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_certification_item = SELECT 
  (activity, activity_method);
END_TYPE;
 
TYPE wd_condition_item = SELECT 
  (activity_method_realization, activity_method_realization_relationship, 
  activity_method_relationship, applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_contract_item = SELECT 
  (activity, activity_method, activity_method_realization, 
  activity_method_realization_relationship, activity_method_relationship, 
  applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_date_or_date_time_item = SELECT 
  (activity_method_realization, activity_method_realization_relationship, 
  activity_method_relationship, applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_documented_element_select = SELECT 
  (activity, activity_method, activity_method_realization, 
  activity_method_realization_relationship, activity_method_relationship, 
  applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_identification_item = SELECT 
  (activity_method_realization, activity_method_realization_relationship, 
  activity_method_relationship, applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_justification_item = SELECT 
  (activity, activity_method, activity_method_realization, 
  activity_method_realization_relationship, activity_method_relationship, 
  applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_justification_support_item = SELECT 
  (activity, activity_method, applied_state_assignment, 
  applied_state_definition_assignment, contract, document, document_definition
  , document_version, event, project, state, state_definition, work_order, 
  work_request);
END_TYPE;
 
TYPE wd_organization_or_person_in_organization_item = SELECT 
  (activity_method_realization, activity_method_realization_relationship, 
  activity_method_relationship, applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_project_item = SELECT 
  (activity, activity_method, activity_method_realization, 
  activity_method_realization_relationship, activity_method_relationship, 
  applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_required_resource_item = SELECT 
  (activity, activity_method, event, scheme, scheme_entry);
END_TYPE;
 
TYPE wd_scheme_entry_item_select = SELECT 
  (activity, event);
END_TYPE;
 
TYPE wd_scheme_subject_select = SELECT 
  (activity, activity_method, contract, product, product_group, product_version
  , product_view_definition, project, scheme_entry);
END_TYPE;
 
TYPE wd_security_classification_item = SELECT 
  (activity, activity_method, activity_method_realization, 
  activity_method_realization_relationship, activity_method_relationship, 
  applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_string_select = SELECT 
  (activity_method_realization, activity_method_realization_relationship, 
  activity_method_relationship, applied_activity_method_assignment);
END_TYPE;
 
TYPE wd_work_item = SELECT 
  (activity, activity_method, event, scheme, scheme_entry);
END_TYPE;
 
TYPE wordchar_ap239_mri_classification_item = SELECT 
  (security_classification, project_relationship, contract_assignment, 
  project_assignment, organization, person_in_organization, language, 
  address_assignment, attribute_translation_assignment, calendar_date, 
  event_assignment, address, security_classification_assignment, contract, 
  project, event_relationship, date_time, 
  organization_or_person_in_organization_assignment, 
  approving_person_organization, organization_relationship, 
  identification_assignment, approval_assignment, approval_status, event, 
  certification_assignment, certification, approval, approval_relationship, 
  date_or_date_time_assignment, directed_activity, work_order);
END_TYPE;
 
TYPE wordchar_ap239_mri_classified_attribute_select = SELECT 
  (project_assignment, date_or_date_time_assignment, event_assignment, 
  security_classification, approving_person_organization, 
  identification_assignment, person_in_organization, language, approval, 
  approval_status, address_assignment, certification, organization_relationship
  , approval_relationship, certification_assignment, 
  organization_or_person_in_organization_assignment, approval_assignment, 
  contract, project_relationship, event_relationship, work_order);
END_TYPE;
 
TYPE wordchar_mri_approval_item = SELECT 
  (certification, contract, directed_activity, work_order);
END_TYPE;
 
TYPE wordchar_mri_date_or_date_time_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, directed_activity, work_order);
END_TYPE;
 
TYPE wordchar_mri_identification_item = SELECT 
  (organization, security_classification, contract, directed_activity, 
  work_order);
END_TYPE;
 
TYPE wordchar_mri_organization_or_person_in_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  directed_activity, work_order);
END_TYPE;
 
TYPE wordchar_mri_string_select = SELECT 
  (project, approval_relationship, project_relationship, approval_status, 
  certification, contract, organization_relationship, identification_assignment
  , project_assignment, approval, date_or_date_time_assignment, 
  person_in_organization, work_order);
END_TYPE;
 
TYPE work_item = SELECT 
  (activity_method, scheme_entry, activity, task, scheme, task_method, event);
END_TYPE;
 
TYPE work_output_approval_item = SELECT 
  (work_output);
END_TYPE;
 
TYPE work_output_certification_item = SELECT 
  (work_output);
END_TYPE;
 
TYPE work_output_characterized_activity_definition = SELECT 
  (activity_method, activity, work_output);
END_TYPE;
 
TYPE work_output_classification_item = SELECT 
  (work_output, work_output_assignment, work_output_relationship);
END_TYPE;
 
TYPE work_output_date_or_date_time_item = SELECT 
  (work_output);
END_TYPE;
 
TYPE work_output_identification_item = SELECT 
  (work_output);
END_TYPE;
 
TYPE work_output_item = SELECT 
  (document_version, position_type, document, document_definition, part, person
  , part_view_definition, product_as_individual, part_version, file, 
  type_of_person, organization, person_in_organization, position, 
  organization_type, product_group);
END_TYPE;
 
TYPE work_output_organization_or_person_in_organization = SELECT 
  (work_output);
END_TYPE;
 
TYPE work_output_security_classification_item = SELECT 
  (work_output);
END_TYPE;
 
TYPE wreqchar_ap239_mri_classification_item = SELECT 
  (security_classification, project_relationship, contract_assignment, 
  project_assignment, organization, person_in_organization, language, 
  address_assignment, attribute_translation_assignment, calendar_date, 
  event_assignment, address, security_classification_assignment, contract, 
  project, event_relationship, date_time, 
  organization_or_person_in_organization_assignment, 
  approving_person_organization, organization_relationship, 
  identification_assignment, approval_assignment, approval_status, event, 
  certification_assignment, certification, approval, approval_relationship, 
  date_or_date_time_assignment, affected_items_assignment, work_request);
END_TYPE;
 
TYPE wreqchar_ap239_mri_classified_attribute_select = SELECT 
  (project_assignment, date_or_date_time_assignment, event_assignment, 
  security_classification, approving_person_organization, 
  identification_assignment, person_in_organization, language, approval, 
  approval_status, address_assignment, certification, organization_relationship
  , approval_relationship, certification_assignment, 
  organization_or_person_in_organization_assignment, approval_assignment, 
  contract, project_relationship, event_relationship, work_request, 
  work_request_status);
END_TYPE;
 
TYPE wreqchar_mri_approval_item = SELECT 
  (certification, contract, activity_method_assignment, work_request);
END_TYPE;
 
TYPE wreqchar_mri_date_or_date_time_item = SELECT 
  (organization_or_person_in_organization_assignment, certification, 
  security_classification_assignment, contract, activity_method_assignment, 
  work_request);
END_TYPE;
 
TYPE wreqchar_mri_identification_item = SELECT 
  (organization, security_classification, contract, work_request);
END_TYPE;
 
TYPE wreqchar_mri_organization_or_person_in_organization_item = SELECT 
  (identification_assignment, contract, security_classification_assignment, 
  activity_method_assignment, work_request);
END_TYPE;
 
TYPE wreqchar_mri_string_select = SELECT 
  (project, approval_relationship, project_relationship, approval_status, 
  certification, contract, organization_relationship, identification_assignment
  , project_assignment, approval, date_or_date_time_assignment, 
  person_in_organization, activity_method_assignment);
END_TYPE;
 
TYPE year_number = INTEGER;
END_TYPE;
 
ENTITY activity;
  chosen_method : activity_method;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY activity_actual
SUBTYPE OF (activity);
END_ENTITY;
 
ENTITY activity_happening
SUBTYPE OF (activity_relationship);
  SELF\activity_relationship.relating_activity : activity_actual;
  SELF\activity_relationship.related_activity : activity;
DERIVE
  actual : activity_actual := SELF\activity_relationship.relating_activity;
  predicted : activity := SELF\activity_relationship.related_activity;
WHERE
  wr1 : NOT ('ACTIVITY_AS_REALIZED.ACTIVITY_ACTUAL' IN TYPEOF(predicted));
END_ENTITY;
 
ENTITY activity_method
SUPERTYPE OF (ONEOF (task, task_method));
  consequence : OPTIONAL STRING;
  description : OPTIONAL STRING;
  name : STRING;
  purpose : STRING;
END_ENTITY;
 
ENTITY activity_method_assignment;
  assigned_method : activity_method;
  associated_request : work_request;
  relation_type : STRING;
END_ENTITY;
 
ENTITY activity_method_realization;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  activity_method : activity_method;
  realized_by : activity_realization_select;
END_ENTITY;
 
ENTITY activity_method_realization_relationship;
  relating : activity_method_realization;
  related : activity_method_realization;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY activity_method_relationship
SUPERTYPE OF (ONEOF (task_method_relationship, task_relationship));
  name : STRING;
  description : OPTIONAL STRING;
  relating_method : activity_method;
  related_method : activity_method;
END_ENTITY;
 
ENTITY activity_property;
  described_element : characterized_activity_definition;
  name : STRING;
  description : STRING;
END_ENTITY;
 
ENTITY activity_property_representation;
  description : OPTIONAL STRING;
  property : activity_property;
  rep : representation;
  role : STRING;
END_ENTITY;
 
ENTITY activity_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related_activity : activity;
  relating_activity : activity;
END_ENTITY;
 
ENTITY activity_status;
  assigned_activity : activity;
  status : STRING;
END_ENTITY;
 
ENTITY address;
  street_number : OPTIONAL STRING;
  street : OPTIONAL STRING;
  postal_box : OPTIONAL STRING;
  town : OPTIONAL STRING;
  region : OPTIONAL STRING;
  postal_code : OPTIONAL STRING;
  country : OPTIONAL STRING;
  internal_location : OPTIONAL STRING;
  facsimile_number : OPTIONAL STRING;
  telephone_number : OPTIONAL STRING;
  electronic_mail_address : OPTIONAL STRING;
  telex_number : OPTIONAL STRING;
  url : OPTIONAL STRING;
  name : OPTIONAL STRING;
WHERE
  wr1 : EXISTS(street_number) OR EXISTS(street) OR EXISTS(postal_box) OR EXISTS
    (town) OR EXISTS(region) OR EXISTS(postal_code) OR EXISTS(country) OR 
    EXISTS(internal_location) OR EXISTS(facsimile_number) OR EXISTS(
    telephone_number) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number
    );
END_ENTITY;
 
ENTITY address_assignment;
  assigned_address : address;
  address_type : OPTIONAL STRING;
  located_person_organizations : SET [1:?] OF 
  organization_or_person_in_organization_select;
END_ENTITY;
 
ENTITY address_based_location_representation;
  postal_address : address_assignment;
END_ENTITY;
 
ENTITY advisory_task_step
SUBTYPE OF (task_step);
END_ENTITY;
 
ENTITY affected_items_assignment;
  assigned_work_request : work_request;
  items : SET [1:?] OF affected_item_select;
END_ENTITY;
 
ENTITY alias_identification
SUBTYPE OF (identification_assignment);
DERIVE
  SELF\identification_assignment.role : STRING := 'alias';
WHERE
  wr1 : SIZEOF(QUERY(item <* SELF\identification_assignment.items | NOT (
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ALIAS_IDENTIFICATION_ITEM' IN 
    TYPEOF(item)))) = 0;
END_ENTITY;
 
ENTITY alternate_part_relationship
SUBTYPE OF (alternate_product_relationship);
  SELF\alternate_product_relationship.alternate_product : part;
  SELF\alternate_product_relationship.base_product : part;
END_ENTITY;
 
ENTITY alternate_product_relationship;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  alternate_product : product;
  base_product : product;
  criteria : STRING;
UNIQUE
  ur1 : alternate_product, base_product;
WHERE
  wr1 : alternate_product :<>: base_product;
END_ENTITY;
 
ENTITY amount_of_substance_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY and_state_cause_effect_definition
SUBTYPE OF (state_cause_effect_definition);
END_ENTITY;
 
ENTITY applied_activity_assignment;
  assigned_activity : activity;
  items : SET [1:?] OF activity_item;
  role : STRING;
END_ENTITY;

(* NOT USED 
ENTITY applied_activity_method_assignment;
  assigned_activity_method : activity_method;
  items : SET [1:?] OF activity_method_item;
  role : STRING;
END_ENTITY;
*)

ENTITY applied_independent_activity_property
SUBTYPE OF (activity_property);
  base_element_property : independent_property;
DERIVE
  SELF\activity_property.name : STRING := base_element_property.property_type;
END_ENTITY;
 
ENTITY applied_independent_property
SUBTYPE OF (assigned_property);
  base_independent_property : independent_property;
DERIVE
  SELF\assigned_property.name : STRING := base_independent_property.
  property_type;
END_ENTITY;
 
ENTITY applied_independent_resource_property
SUBTYPE OF (resource_property);
  base_element_property : independent_property;
DERIVE
  SELF\resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;
 
ENTITY applied_information_usage_right;
  item : SET [1:?] OF information_usage_right_item;
  right_applied : information_usage_right;
END_ENTITY;
 
ENTITY applied_state_assignment;
  described_state : state;
  assigned_to : state_of_item;
  role : state_role;
END_ENTITY;
 
ENTITY applied_state_definition_assignment;
  described_state_definition : state_definition;
  assigned_to : state_definition_of_item;
  role : state_definition_role;
END_ENTITY;
 
ENTITY approval;
  status : approval_status;
  purpose : STRING;
  planned_date : OPTIONAL date_or_date_time_select;
  actual_date : OPTIONAL date_or_date_time_select;
END_ENTITY;
 
ENTITY approval_assignment;
  assigned_approval : approval;
  items : SET [1:?] OF approval_item;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY approval_relationship;
  relation_type : STRING;
  relating_approval : approval;
  related_approval : approval;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY approval_status;
  status_name : STRING;
END_ENTITY;
 
ENTITY approving_person_organization;
  person_organization : organization_or_person_in_organization_select;
  approval_date : OPTIONAL date_or_date_time_select;
  authorized_approval : approval;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY assembly_component_relationship
ABSTRACT SUPERTYPE OF (ONEOF (next_assembly_usage, promissory_usage, 
component_upper_level_identification))
SUBTYPE OF (view_definition_usage);
  quantity : OPTIONAL value_with_unit;
  location_indicator : OPTIONAL STRING;
WHERE
  wr1 : NOT EXISTS(quantity) XOR NOT ('NUMBER' IN TYPEOF(quantity.
    value_component)) XOR (quantity.value_component > 0);
END_ENTITY;
 
ENTITY assembly_relationship_substitution;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  base_relationship : assembly_component_relationship;
  substitute_relationship : assembly_component_relationship;
UNIQUE
  ur1 : base_relationship, substitute_relationship;
WHERE
  wr1 : base_relationship.relating_view :=: substitute_relationship.
    relating_view;
  wr2 : base_relationship :<>: substitute_relationship;
END_ENTITY;
 
ENTITY assigned_document_property
SUBTYPE OF (assigned_property);
DERIVE
  SELF\assigned_property.name : STRING := 'document property';
UNIQUE
  ur1 : SELF\assigned_property.described_element;
WHERE
  wr1 : SIZEOF(['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.DOCUMENT_DEFINITION', 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.FILE'] * TYPEOF(SELF\
    assigned_property.described_element)) = 1;
END_ENTITY;
 
ENTITY assigned_property;
  described_element : property_assignment_select;
  description : OPTIONAL STRING;
  id : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY attribute_classification;
  allowed_value : class;
  attribute_name : STRING;
  classified_entity : classified_attribute_select;
END_ENTITY;
 
ENTITY attribute_translation_assignment;
  considered_instances : SET [1:?] OF string_select;
  considered_attribute : STRING;
  translation_text : STRING;
  translation_language : language;
WHERE
  wr1 : SIZEOF(QUERY(ci <* considered_instances | SIZEOF(QUERY(ata <* USEDIN(ci
    , 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ATTRIBUTE_TRANSLATION_ASSIGNMENT.CONSIDERED_INSTANCES'
    ) | (ata.considered_attribute = considered_attribute) AND (ata.
    translation_language :=: translation_language))) > 1)) = 0;
END_ENTITY;
 
ENTITY axis_placement
SUBTYPE OF (detailed_geometric_model_element);
  origin : cartesian_point;
  x_axis : direction;
  y_axis : direction;
DERIVE
  dim : INTEGER := SIZEOF(origin.coordinates);
WHERE
  wr1 : dim > 1;
  wr2 : dim = SIZEOF(x_axis.coordinates);
  wr3 : dim = SIZEOF(y_axis.coordinates);
END_ENTITY;
 
ENTITY axis_placement_mapping;
  source : axis_placement;
  target : axis_placement;
WHERE
  wr1 : source\axis_placement.dim = target\axis_placement.dim;
END_ENTITY;
 
ENTITY axis_placement_transformation_mapping;
  source : axis_placement;
  target : cartesian_transformation;
WHERE
  wr1 : source\axis_placement.dim = SIZEOF(target.translation\cartesian_point.
    coordinates);
END_ENTITY;
 
ENTITY breakdown
SUPERTYPE OF (ONEOF (functional_breakdown, hybrid_breakdown, physical_breakdown
, system_breakdown, zone_breakdown))
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY breakdown_context
SUPERTYPE OF (ONEOF (functional_breakdown_context, hybrid_breakdown_context, 
physical_breakdown_context, system_breakdown_context, zone_breakdown_context));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  breakdown : breakdown_version;
  breakdown_element : breakdown_element_definition;
END_ENTITY;
 
ENTITY breakdown_element
SUPERTYPE OF (ONEOF (functional_element, physical_element, system_element, 
zone_element))
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY breakdown_element_definition
SUPERTYPE OF (ONEOF (functional_element_definition, physical_element_definition
, system_element_definition, zone_element_definition))
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : breakdown_element_version;
END_ENTITY;
 
ENTITY breakdown_element_realization
SUBTYPE OF (product_definition_element_relationship);
END_ENTITY;
 
ENTITY breakdown_element_usage
ABSTRACT SUPERTYPE OF (ONEOF (functional_element_usage, hybrid_element_usage, 
physical_element_usage, system_element_usage, zone_element_usage))
SUBTYPE OF (view_definition_relationship);
  name : STRING;
  SELF\view_definition_relationship.relating_view : 
  breakdown_element_definition;
  SELF\view_definition_relationship.related_view : breakdown_element_definition
  ;
END_ENTITY;
 
ENTITY breakdown_element_version
SUPERTYPE OF (ONEOF (functional_element_version, physical_element_version, 
system_element_version, zone_element_version))
SUBTYPE OF (product_version);
  SELF\product_version.of_product : breakdown_element;
END_ENTITY;
 
ENTITY breakdown_of;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  breakdown : breakdown_version;
  of_view : product_view_definition;
END_ENTITY;
 
ENTITY breakdown_version
SUPERTYPE OF (ONEOF (functional_breakdown_version, hybrid_breakdown_version, 
physical_breakdown_version, system_breakdown_version, zone_breakdown_version))
SUBTYPE OF (product_version);
  SELF\product_version.of_product : breakdown;
INVERSE
  breakdown_of : SET [1:1] OF breakdown_of FOR breakdown;
END_ENTITY;
 
ENTITY calendar_date;
  year_component : year_number;
  month_component : month_in_year_number;
  day_component : day_in_month_number;
END_ENTITY;
 
ENTITY cartesian_point
SUBTYPE OF (detailed_geometric_model_element);
  coordinates :  LIST [1:3] OF length_measure;
END_ENTITY;
 
ENTITY cartesian_transformation_2d
SUBTYPE OF (detailed_geometric_model_element);
  multiplication_matrix :  ARRAY [1 : 2] OF direction;
  translation : cartesian_point;
WHERE
  wr1 : SIZEOF(multiplication_matrix[1]\direction.coordinates) = 2;
  wr2 : SIZEOF(multiplication_matrix[2]\direction.coordinates) = 2;
  wr3 : SIZEOF(translation.coordinates) = 2;
END_ENTITY;
 
ENTITY cartesian_transformation_3d
SUBTYPE OF (detailed_geometric_model_element);
  multiplication_matrix :  ARRAY [1 : 3] OF direction;
  translation : cartesian_point;
WHERE
  wr1 : SIZEOF(multiplication_matrix[1]\direction.coordinates) = 3;
  wr2 : SIZEOF(multiplication_matrix[2]\direction.coordinates) = 3;
  wr3 : SIZEOF(multiplication_matrix[3]\direction.coordinates) = 3;
  wr4 : SIZEOF(translation.coordinates) = 3;
END_ENTITY;
 
ENTITY certification;
  description : OPTIONAL STRING;
  kind : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY certification_assignment;
  assigned_certification : certification;
  items : SET [1:?] OF certification_item;
  role : STRING;
END_ENTITY;
 
ENTITY characterizable_object;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY class
SUPERTYPE OF (ONEOF (class_by_extension, class_by_intension));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY class_by_extension
SUBTYPE OF (class);
END_ENTITY;
 
ENTITY class_by_intension
SUBTYPE OF (class);
END_ENTITY;
 
ENTITY classification_assignment;
  assigned_class : class;
  items : SET [1:?] OF classification_item;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY complement;
  id : STRING;
  name : STRING;
  description : STRING;
  set_1 : class;
  set_2 : class;
  universe : class;
END_ENTITY;
 
ENTITY component_upper_level_identification
SUBTYPE OF (assembly_component_relationship);
  upper_assembly_relationship : assembly_component_relationship;
  sub_assembly_relationship : next_assembly_usage;
UNIQUE
  ur1 : upper_assembly_relationship, sub_assembly_relationship;
WHERE
  wr1 : SELF :<>: upper_assembly_relationship;
  wr2 : SELF\view_definition_relationship.relating_view :=: 
    upper_assembly_relationship\view_definition_relationship.relating_view;
  wr3 : SELF\view_definition_relationship.related_view :=: 
    sub_assembly_relationship\view_definition_relationship.related_view;
  wr4 : (upper_assembly_relationship\view_definition_relationship.related_view
     :=: sub_assembly_relationship\view_definition_relationship.relating_view) 
    OR (SIZEOF(QUERY(pdr <* USEDIN(upper_assembly_relationship\
    view_definition_relationship.related_view, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.VIEW_DEFINITION_RELATIONSHIP.RELATED_VIEW'
    ) | pdr.relating_view :=: sub_assembly_relationship\
    view_definition_relationship.relating_view)) = 1);
  wr5 : SIZEOF(['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.NEXT_ASSEMBLY_USAGE', 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.COMPONENT_UPPER_LEVEL_IDENTIFICATION'
    ] * TYPEOF(upper_assembly_relationship)) = 1;
END_ENTITY;
 
ENTITY composition_of_state
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  whole : SET [1:?] OF state := SELF\state_relationship.relating;
  part : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY composition_of_state_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  whole : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  relating;
  part : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY concurrent_methods
SUBTYPE OF (structured_task_method);
  methods : SET [2:?] OF task_method;
END_ENTITY;
 
ENTITY condition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY condition_assignment;
  assigned_condition : condition;
  item : condition_item;
END_ENTITY;
 
ENTITY condition_evaluation;
  name : STRING;
  description : OPTIONAL STRING;
  result : LOGICAL;
  condition : condition;
END_ENTITY;
 
ENTITY condition_evaluation_assignment;
  assigned_condition_evaluation : condition_evaluation;
  item : condition_evaluation_item;
END_ENTITY;
 
ENTITY condition_evaluation_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  condition_evaluation : condition_evaluation;
  evaluation_parameter : condition_evaluation_parameter_item;
END_ENTITY;
 
ENTITY condition_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  condition : condition;
  parameter : condition_parameter_item;
END_ENTITY;
 
ENTITY condition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_condition : condition;
  related_condition : condition;
END_ENTITY;
 
ENTITY configuration_watched_item;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  item_context : product_concept;
INVERSE
  corresponding_design : SET [0:1] OF item_design_association FOR watched_item;
END_ENTITY;
 
ENTITY connector_on;
  connector : interface_connector_definition;
  description : OPTIONAL STRING;
  id : STRING;
  item : connector_on_item;
  name : STRING;
END_ENTITY;
 
ENTITY content_item;
  item_identifier : STRING;
  item_type : STRING;
  access_comment : OPTIONAL STRING;
END_ENTITY;
 
ENTITY context_dependent_unit
SUBTYPE OF (unit);
WHERE
  wr1 : EXISTS(SELF\unit.name);
END_ENTITY;
 
ENTITY contextual_item_shape
SUBTYPE OF (item_shape);
  SELF\item_shape.described_element : view_definition_usage;
DERIVE
  shaped_product : product_view_definition := described_element\
  view_definition_relationship.related_view;
END_ENTITY;
 
ENTITY contextual_shape_representation_inclusion;
  contextual_shape : contextual_item_shape;
  context_representation : geometric_model;
  positioned_representation : template_instance;
END_ENTITY;
 
ENTITY contract;
  id : STRING;
  purpose : STRING;
  kind : STRING;
END_ENTITY;
 
ENTITY contract_assignment;
  assigned_contract : contract;
  items : SET [1:?] OF contract_item;
END_ENTITY;
 
ENTITY conversion_based_unit
SUBTYPE OF (unit);
  conversion_factor : value_with_unit;
WHERE
  wr1 : EXISTS(SELF\unit.name);
END_ENTITY;
 
ENTITY date_or_date_time_assignment;
  assigned_date : date_or_date_time_select;
  role : STRING;
  items : SET [1:?] OF date_or_date_time_item;
END_ENTITY;
 
ENTITY date_time;
  date_component : calendar_date;
  time_component : local_time;
END_ENTITY;
 
ENTITY dated_effectivity
SUBTYPE OF (effectivity);
  start_bound : date_or_event;
  end_bound : OPTIONAL date_or_event;
END_ENTITY;
 
ENTITY decision_point
SUBTYPE OF (structured_task_method);
  condition : condition;
  true_case_method : OPTIONAL task_method;
  false_case_method : OPTIONAL task_method;
  unknown_case_method : OPTIONAL task_method;
END_ENTITY;
 
ENTITY decreasing_resource_event
SUBTYPE OF (resource_event);
END_ENTITY;
 
ENTITY defined_state_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  definitive_state : state_assertion;
  defined_state : state_assessment;
END_ENTITY;
 
ENTITY derived_unit
SUBTYPE OF (unit);
  elements : SET [1:?] OF derived_unit_element;
END_ENTITY;
 
ENTITY derived_unit_element;
  base_unit : unit;
  exponent : REAL;
END_ENTITY;
 
ENTITY descriptive_document_property
SUBTYPE OF (string_representation_item);
INVERSE
  valued_characteristic : SET [1:1] OF document_property_representation FOR 
  items;
END_ENTITY;
 
ENTITY detailed_geometric_model_element
ABSTRACT SUPERTYPE OF (ONEOF (cartesian_point, direction, axis_placement, 
cartesian_transformation_2d, cartesian_transformation_3d))
SUBTYPE OF (representation_item);
END_ENTITY;
 
ENTITY digital_document_definition
SUBTYPE OF (document_definition);
  files : SET OF digital_file;
END_ENTITY;
 
ENTITY digital_file
SUBTYPE OF (file);
END_ENTITY;
 
ENTITY directed_activity
SUBTYPE OF (activity);
  directive : work_order;
END_ENTITY;
 
ENTITY direction
SUBTYPE OF (detailed_geometric_model_element);
  coordinates :  LIST [2:3] OF length_measure;
END_ENTITY;
 
ENTITY distribution_by_value
SUBTYPE OF (probability_distribution);
  defined_function : value_function;
  distribution_function : STRING;
END_ENTITY;
 
ENTITY document
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY document_assignment;
  assigned_document : assigned_document_select;
  is_assigned_to : documented_element_select;
  role : STRING;
END_ENTITY;
 
ENTITY document_definition
ABSTRACT SUPERTYPE OF (ONEOF (digital_document_definition, 
physical_document_definition));
  id : STRING;
  description : OPTIONAL STRING;
  associated_document_version : document_version;
END_ENTITY;
 
ENTITY document_definition_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_definition : document_definition;
  related_document_definition : document_definition;
WHERE
  wr1 : relating_document_definition :<>: related_document_definition;
END_ENTITY;
 
ENTITY document_location_identification
SUBTYPE OF (external_source_identification);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.DOCUMENT_DEFINITION' IN TYPEOF
    (SELF\external_source_identification.item);
END_ENTITY;
 
ENTITY document_property_representation
SUBTYPE OF (representation);
  SELF\representation.items : SET [1:?] OF descriptive_or_numerical;
WHERE
  wr1 : SIZEOF(QUERY(pr <* USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PROPERTY_REPRESENTATION.REP') | 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ASSIGNED_PROPERTY' IN TYPEOF(pr.
    property))) > 0;
  wr2 : SELF\representation.context_of_items.kind = 'document parameters';
  wr3 : valid_document_property_representation(SELF);
  wr4 : SIZEOF(QUERY(it1 <* SELF\representation.items | SIZEOF(QUERY(it2 <* 
    SELF\representation.items | it1.name = it2.name)) > 1)) = 0;
END_ENTITY;
 
ENTITY document_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : document;
END_ENTITY;
 
ENTITY duration
SUBTYPE OF (value_with_unit);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.' + 'TIME_UNIT' IN TYPEOF(SELF
    \value_with_unit.unit);
END_ENTITY;
 
ENTITY effectivity
SUPERTYPE OF (ONEOF (serial_effectivity, dated_effectivity, lot_effectivity, 
time_interval_effectivity));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY effectivity_assignment;
  assigned_effectivity : effectivity;
  role : STRING;
  items : SET [1:?] OF effectivity_item;
END_ENTITY;
 
ENTITY effectivity_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_effectivity : effectivity;
  related_effectivity : effectivity;
END_ENTITY;
 
ENTITY electric_current_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY end_task
SUBTYPE OF (task_method);
END_ENTITY;
 
ENTITY envelope;
  acknowledge : OPTIONAL STRING;
  id : STRING;
  wrapping : OPTIONAL message;
END_ENTITY;
 
ENTITY envelope_association;
  related : envelope;
  relating : envelope;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY event;
  actual_start_date : date_or_date_time_select;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
  planned_start_date : date_or_date_time_select;
END_ENTITY;
 
ENTITY event_assignment;
  assigned_event : event;
  items : SET [1:?] OF event_item;
  role : STRING;
END_ENTITY;
 
ENTITY event_relationship;
  description : OPTIONAL STRING;
  event1 : event;
  event2 : event;
  relation_type : STRING;
END_ENTITY;
 
ENTITY exit_loop
SUBTYPE OF (task_method);
END_ENTITY;
 
ENTITY experience_gained;
  experience_of : experience_type;
  gained_by : person_or_organization_or_person_in_organization_select;
END_ENTITY;
 
ENTITY experience_instance;
  consists_of : OPTIONAL defined_methods;
  defines : experience_gained;
  description : OPTIONAL STRING;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY experience_type;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY external_class
SUBTYPE OF (class);
  external_source : external_class_library;
END_ENTITY;
 
ENTITY external_class_library;
  id : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY external_geometric_model
SUBTYPE OF (geometric_model);
  SELF\representation.items : SET [1:1] OF axis_placement;
  external_file : digital_file;
WHERE
  wr1 : SELF\representation.context_of_items.dimension_count = 3;
  wr2 : SELF\representation.context_of_items.kind = 'external';
END_ENTITY;
 
ENTITY external_item_identification
SUBTYPE OF (external_source_identification);
  external_id : STRING;
END_ENTITY;
 
ENTITY external_source_identification;
  source_id : STRING;
  source_type : STRING;
  item : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY file
ABSTRACT SUPERTYPE OF (ONEOF (digital_file, hardcopy));
  id : STRING;
  version : OPTIONAL STRING;
  contained_data_type : OPTIONAL STRING;
END_ENTITY;
 
ENTITY file_location_identification
SUBTYPE OF (external_item_identification);
WHERE
  wr1 : 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.FILE' IN TYPEOF(SELF\
    external_source_identification.item);
END_ENTITY;
 
ENTITY file_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_document_file : file;
  related_document_file : file;
WHERE
  wr1 : relating_document_file :<>: related_document_file;
END_ENTITY;
 
ENTITY function_value_pair;
  function_value : probability_function_value;
  variable_value : random_variable;
END_ENTITY;
 
ENTITY functional_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY functional_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : functional_breakdown_version;
  SELF\breakdown_context.breakdown_element : functional_element_definition;
END_ENTITY;
 
ENTITY functional_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : functional_breakdown;
END_ENTITY;
 
ENTITY functional_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY functional_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : 
  functional_element_version;
END_ENTITY;
 
ENTITY functional_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : functional_element_definition;
  SELF\breakdown_element_usage.child_element : functional_element_definition;
END_ENTITY;
 
ENTITY functional_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : functional_element;
END_ENTITY;
 
ENTITY geometric_coordinate_space
SUBTYPE OF (numerical_representation_context);
  dimension_count : INTEGER;
WHERE
  wr1 : dimension_count > 0;
END_ENTITY;
 
ENTITY geometric_model
SUBTYPE OF (representation);
  version_id : OPTIONAL STRING;
  model_extent : OPTIONAL length_measure;
  SELF\representation.context_of_items : geometric_coordinate_space;
  SELF\representation.items : SET [1:?] OF detailed_geometric_model_element;
END_ENTITY;
 
ENTITY global_location_representation;
  altitude : OPTIONAL value_with_unit;
  geographical_area : OPTIONAL STRING;
  latitude : value_with_unit;
  longitude : value_with_unit;
END_ENTITY;
 
ENTITY hardcopy
SUBTYPE OF (file);
END_ENTITY;
 
ENTITY hybrid_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY hybrid_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : hybrid_breakdown_version;
  SELF\breakdown_context.breakdown_element : hybrid_element_definition;
END_ENTITY;
 
ENTITY hybrid_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : hybrid_breakdown;
END_ENTITY;
 
ENTITY hybrid_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY hybrid_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : hybrid_element_version;
END_ENTITY;
 
ENTITY hybrid_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.child_element : hybrid_element_definition;
  SELF\breakdown_element_usage.parent_element : hybrid_element_definition;
END_ENTITY;
 
ENTITY hybrid_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : hybrid_element;
END_ENTITY;
 
ENTITY identification_assignment;
  identifier : STRING;
  role : STRING;
  description : OPTIONAL STRING;
  items : SET [1:?] OF identification_item;
END_ENTITY;
 
ENTITY in_zone;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  located_item : in_zone_item;
  zone : zone_element_definition;
END_ENTITY;
 
ENTITY increasing_resource_event
SUBTYPE OF (resource_event);
END_ENTITY;
 
ENTITY independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY independent_property_relationship;
  relation_type : STRING;
  related : independent_property;
  relating : independent_property;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY independent_property_representation;
  property : independent_property;
  rep : representation;
END_ENTITY;
 
ENTITY information_right;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  restriction : OPTIONAL STRING;
END_ENTITY;
 
ENTITY information_usage_right;
  id : STRING;
  name : STRING;
  grants_right : SET [1:?] OF information_right;
  comment : OPTIONAL STRING;
END_ENTITY;
 
ENTITY information_usage_right_relationship;
  related : information_usage_right;
  relating : information_usage_right;
  role : STRING;
END_ENTITY;
 
ENTITY interface_connection
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.related_view : 
  interface_connector_definition;
  SELF\view_definition_relationship.relating_view : 
  interface_connector_definition;
DERIVE
  connected : interface_connector_definition := SELF\
  view_definition_relationship.related_view;
  connecting : interface_connector_definition := SELF\
  view_definition_relationship.relating_view;
END_ENTITY;
 
ENTITY interface_connector
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY interface_connector_as_planned
SUBTYPE OF (interface_connector_version);
END_ENTITY;
 
ENTITY interface_connector_as_realized
SUBTYPE OF (interface_connector_version);
END_ENTITY;
 
ENTITY interface_connector_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : interface_connector_version;
END_ENTITY;
 
ENTITY interface_connector_design
SUBTYPE OF (interface_connector_version);
END_ENTITY;
 
ENTITY interface_connector_design_to_planned;
  description : OPTIONAL STRING;
  design : interface_connector_design;
  id : STRING;
  name : STRING;
  planned : interface_connector_as_planned;
END_ENTITY;
 
ENTITY interface_connector_design_to_realized;
  description : OPTIONAL STRING;
  design : interface_connector_design;
  id : STRING;
  name : STRING;
  realized : interface_connector_as_realized;
END_ENTITY;
 
ENTITY interface_connector_planned_to_realized;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
  planned : interface_connector_as_planned;
  realized : interface_connector_as_realized;
END_ENTITY;
 
ENTITY interface_connector_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : interface_connector;
END_ENTITY;
 
ENTITY interface_definition_for;
  description : OPTIONAL STRING;
  id : STRING;
  interface : interface_specification_definition;
  interface_component : product_view_definition;
  name : STRING;
END_ENTITY;
 
ENTITY interface_specification
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY interface_specification_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : 
  interface_specification_version;
END_ENTITY;
 
ENTITY interface_specification_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : interface_specification;
END_ENTITY;
 
ENTITY intersection;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  operand : SET [2:?] OF class;
  resultant : class;
END_ENTITY;
 
ENTITY item_design_association;
  watched_item : configuration_watched_item;
  proposed_design : version_or_definition;
UNIQUE
  ur1 : watched_item, proposed_design;
END_ENTITY;
 
ENTITY item_shape;
  described_element : shapeable_item;
  description : OPTIONAL STRING;
  id : OPTIONAL STRING;
END_ENTITY;
 
ENTITY item_usage_effectivity;
  effectivity_domain : effectivity;
  item_usage_relationship : view_definition_usage;
  resolved_configuration : item_design_association;
END_ENTITY;
 
ENTITY justification;
  id : STRING;
  name : OPTIONAL STRING;
  description : STRING;
  context_description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY justification_assignment;
  justification : justification;
  description : OPTIONAL STRING;
  item : justification_item;
  role : STRING;
END_ENTITY;
 
ENTITY justification_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_justification : justification;
  related_justification : justification;
END_ENTITY;
 
ENTITY justification_support_assignment;
  justification : justification;
  description : OPTIONAL STRING;
  support_item : justification_support_item;
  role : STRING;
END_ENTITY;
 
ENTITY language;
  language_code : STRING;
  country_code : OPTIONAL STRING;
END_ENTITY;
 
ENTITY language_indication;
  considered_instances : SET [1:?] OF string_select;
  considered_attribute : STRING;
  used_language : language;
END_ENTITY;
 
ENTITY length_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : time_offset;
END_ENTITY;
 
ENTITY location;
  alternative_location_representations : SET [1:?] OF location_representation;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY location_assignment;
  description : OPTIONAL STRING;
  role : OPTIONAL STRING;
  entity_for_location : location_assignment_select;
  location_for_assignment : location;
END_ENTITY;
 
ENTITY location_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related : location;
  relating : location;
END_ENTITY;
 
ENTITY looping_method
SUPERTYPE OF (ONEOF (repeat_count, repeat_until, repeat_while))
SUBTYPE OF (structured_task_method);
  repeated_method : task_method;
END_ENTITY;
 
ENTITY lot_effectivity
SUBTYPE OF (effectivity);
  lot_id : STRING;
  lot_size : value_with_unit;
END_ENTITY;
 
ENTITY luminous_intensity_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY make_from_relationship
SUBTYPE OF (view_definition_usage);
  SELF\view_definition_relationship.relating_view : part_view_definition;
  SELF\view_definition_relationship.related_view : part_view_definition;
  quantity : OPTIONAL value_with_unit;
  priority : OPTIONAL INTEGER;
WHERE
  wr1 : SELF\view_definition_relationship.relating_view :<>: SELF\
    view_definition_relationship.related_view;
  wr2 : NOT EXISTS(quantity) XOR NOT ('NUMBER' IN TYPEOF(quantity.
    value_component)) XOR (quantity.value_component > 0);
END_ENTITY;
 
ENTITY managed_resource;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
  item : resource_item;
  location : OPTIONAL resource_location;
END_ENTITY;
 
ENTITY managed_resource_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : managed_resource;
  related : managed_resource;
END_ENTITY;
 
ENTITY mapping_based_template_instance
SUBTYPE OF (detailed_geometric_model_element);
  replicated_model : shape_model;
  source : axis_placement;
  target : geometric_mapping_target;
END_ENTITY;
 
ENTITY market;
  name : STRING;
  market_segment_type : OPTIONAL STRING;
END_ENTITY;
 
ENTITY mass_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY measure_item
ABSTRACT SUPERTYPE OF (ONEOF (numerical_item_with_unit, 
numerical_item_with_global_unit, value_limit, value_limit_with_global_unit, 
value_list, value_range, value_range_with_global_unit, value_with_tolerances))
SUBTYPE OF (representation_item);
WHERE
  wr1 : SIZEOF(USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PROPERTY_VALUE_REPRESENTATION.ITEMS'
    )) > 0;
END_ENTITY;
 
ENTITY message;
  contains : SET OF content_item;
  defined_by : OPTIONAL SET OF message_definer_select;
  id : STRING;
  message_type : STRING;
  purpose : OPTIONAL STRING;
END_ENTITY;
 
ENTITY message_association;
  related : message;
  relating : message;
  role : STRING;
END_ENTITY;
 
ENTITY method_constraint
SUBTYPE OF (task_method_relationship);
  applies_in : OPTIONAL constraint_context;
END_ENTITY;
 
ENTITY name_assignment;
  name : STRING;
  role : STRING;
  items : assigned_name_select;
END_ENTITY;
 
ENTITY next_assembly_usage
SUBTYPE OF (assembly_component_relationship);
END_ENTITY;
 
ENTITY numerical_document_property
SUBTYPE OF (numerical_item_with_unit);
INVERSE
  valued_characteristic : SET [1:1] OF document_property_representation FOR 
  items;
END_ENTITY;
 
ENTITY numerical_item_with_global_unit
SUBTYPE OF (measure_item);
  value_component : measure_value;
WHERE
  wr1 : SIZEOF(QUERY(pvr <* USEDIN(SELF, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PROPERTY_VALUE_REPRESENTATION.ITEMS'
    ) | EXISTS(pvr.context_of_items.units))) > 0;
END_ENTITY;
 
ENTITY numerical_item_with_unit
SUBTYPE OF (measure_item, value_with_unit);
END_ENTITY;
 
ENTITY numerical_representation_context
SUBTYPE OF (representation_context);
  units : OPTIONAL SET [1:?] OF unit;
  accuracies : OPTIONAL SET [1:?] OF uncertainty_with_unit;
END_ENTITY;
 
ENTITY observation;
  id : STRING;
  name : STRING;
  description : STRING;
  applies_to : SET OF observation_item;
  in_context : SET OF observed_context;
  observed_by : SET OF observation_recorder;
  observed_during : OPTIONAL activity_actual;
  related_records : SET OF observation_item;
END_ENTITY;
 
ENTITY observation_consequence;
  id : STRING;
  name : STRING;
  infered_from : observation;
  requests : work_request;
  role : STRING;
END_ENTITY;
 
ENTITY observation_item;
  access_comment : STRING;
  item_identifier : STRING;
  item_type : STRING;
END_ENTITY;
 
ENTITY observation_relationship;
  related : observation;
  relating : observation;
  role : STRING;
END_ENTITY;
 
ENTITY or_state_cause_effect_definition
SUBTYPE OF (state_cause_effect_definition);
END_ENTITY;
 
ENTITY organization;
  id : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY organization_based_location_representation;
  location_identifications : SET OF organizational_location_identification;
  organization_for_location : organization;
END_ENTITY;
 
ENTITY organization_or_person_in_organization_assignment;
  assigned_entity : organization_or_person_in_organization_select;
  role : STRING;
  items : SET [1:?] OF organization_or_person_in_organization_item;
END_ENTITY;
 
ENTITY organization_organization_type_relationship;
  organization : organization;
  organization_type : organization_type;
END_ENTITY;
 
ENTITY organization_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_organization : organization;
  related_organization : organization;
END_ENTITY;
 
ENTITY organization_type;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY organizational_location_identification;
  identification_type : STRING;
  location_value : STRING;
END_ENTITY;
 
ENTITY parameterized_distribution
SUBTYPE OF (probability_distribution);
  has_parameters :  LIST [1:?] OF probability_distribution_parameter;
  parameterization_name : STRING;
END_ENTITY;
 
ENTITY part
SUBTYPE OF (product);
WHERE
  wr1 : SIZEOF(['part', 'raw material'] * types_of_product(SELF)) = 1;
END_ENTITY;
 
ENTITY part_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : part;
END_ENTITY;
 
ENTITY part_view_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : part_version;
END_ENTITY;
 
ENTITY partial_document_assignment
SUBTYPE OF (document_assignment);
  document_portion : STRING;
END_ENTITY;
 
ENTITY person;
  last_name : STRING;
  first_name : OPTIONAL STRING;
  middle_names : OPTIONAL  LIST [1:?] OF STRING;
  prefix_titles : OPTIONAL  LIST [1:?] OF STRING;
  suffix_titles : OPTIONAL  LIST [1:?] OF STRING;
END_ENTITY;
 
ENTITY person_in_organization;
  concerned_person : person;
  containing_organization : organization;
  role : STRING;
UNIQUE
  person_is_unique_in_organization : concerned_person, containing_organization;
END_ENTITY;
 
ENTITY person_or_organization_or_person_in_organization_in_position;
  description : STRING;
  name : STRING;
  person_or_organization : 
  position_person_or_organization_or_person_in_organization_select;
  position : position;
END_ENTITY;
 
ENTITY 
  person_or_organization_or_person_in_organization_in_position_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related : person_or_organization_or_person_in_organization_in_position;
  relating : person_or_organization_or_person_in_organization_in_position;
END_ENTITY;
 
ENTITY physical_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY physical_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : physical_breakdown_version;
  SELF\breakdown_context.breakdown_element : physical_element_definition;
END_ENTITY;
 
ENTITY physical_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : physical_breakdown;
END_ENTITY;
 
ENTITY physical_document_definition
SUBTYPE OF (document_definition);
  components : SET OF hardcopy;
END_ENTITY;
 
ENTITY physical_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY physical_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : physical_element_version;
END_ENTITY;
 
ENTITY physical_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : physical_element_definition;
  SELF\breakdown_element_usage.child_element : physical_element_definition;
END_ENTITY;
 
ENTITY physical_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : physical_element;
END_ENTITY;
 
ENTITY plane_angle_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY position;
  address : OPTIONAL address;
  description : OPTIONAL STRING;
  name : STRING;
  position_context : position_context_item;
END_ENTITY;

(* NOT USED 
ENTITY position_assignment;
  items : SET [1:?] OF position_item;
  position : position;
  role : position_role;
END_ENTITY;
*)
 
ENTITY position_group;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY position_group_assignment;
  items : SET [1:?] OF position_group_item;
  position_group : position_group;
  role : position_group_role;
END_ENTITY;
 
ENTITY position_group_relationship;
  group : position_group;
  position : position;
END_ENTITY;
 
ENTITY position_group_role;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY position_position_type_assignment;
  assigned_position_type : position_type;
  assigned_to : position;
END_ENTITY;
 
ENTITY position_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related_position : position;
  relating_position : position;
END_ENTITY;
 
ENTITY position_role;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY position_type;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY position_type_assignment;
  items : SET [1:?] OF position_type_item;
  position_type : position_type;
  role : position_type_role;
END_ENTITY;
 
ENTITY position_type_role;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY power_set;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  base : class;
  derived : class;
END_ENTITY;
 
ENTITY probability ABSTRACT SUPERTYPE
SUBTYPE OF (representation);
END_ENTITY;
 
ENTITY probability_by_name
SUBTYPE OF (probability);
  has_value : probability_named_value;
END_ENTITY;
 
ENTITY probability_derivation_parameter
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY probability_derived
SUBTYPE OF (probability_numeric);
  derives_from : probability_generator;
  has_parameter :  LIST OF probability_derivation_parameter;
END_ENTITY;
 
ENTITY probability_distribution ABSTRACT SUPERTYPE
SUBTYPE OF (probability_generator);
  distribution_name : OPTIONAL STRING;
  is_continuous : STRING;
  mean : REAL;
  variance : REAL;
END_ENTITY;
 
ENTITY probability_distribution_parameter
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY probability_function_value
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY probability_generator ABSTRACT SUPERTYPE
SUBTYPE OF (representation);
END_ENTITY;
 
ENTITY probability_named_value
SUBTYPE OF (representation_item);
END_ENTITY;
 
ENTITY probability_numeric
SUBTYPE OF (probability);
  has_value : probability_numeric_value;
END_ENTITY;
 
ENTITY probability_numeric_value
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY product
ABSTRACT SUPERTYPE OF (ONEOF (breakdown, breakdown_element, document, 
interface_connector, interface_specification, part, requirement, slot));
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY product_as_individual
ABSTRACT SUPERTYPE OF (ONEOF (product_as_planned, product_as_realized))
SUBTYPE OF (product_version);
END_ENTITY;
 
ENTITY product_as_planned
SUBTYPE OF (product_as_individual);
END_ENTITY;
 
ENTITY product_as_realized
SUBTYPE OF (product_as_individual);
END_ENTITY;
 
ENTITY product_based_location_identification;
  location_identification : STRING;
  location_value : STRING;
  referenced_product : product_based_location_representation;
END_ENTITY;
 
ENTITY product_category;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY product_category_assignment;
  category : product_category;
  products : SET [1:?] OF product;
END_ENTITY;
 
ENTITY product_category_hierarchy;
  super_category : product_category;
  sub_category : product_category;
END_ENTITY;
 
ENTITY product_concept;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  target_market : OPTIONAL market;
UNIQUE
  ur1 : id;
END_ENTITY;
 
ENTITY product_definition_element_relationship;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  breakdown : breakdown_item;
  product : product_item;
END_ENTITY;
 
ENTITY product_design_to_individual;
  individual_product : product_as_individual;
  product_version : product_version;
END_ENTITY;
 
ENTITY product_group;
  description : OPTIONAL STRING;
  id : STRING;
  membership_rule : OPTIONAL  LIST [1:?] OF STRING;
  product_group_context : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;
 
ENTITY product_group_membership;
  member : product_select;
  of_group : product_group;
END_ENTITY;
 
ENTITY product_group_relationship;
  description : OPTIONAL STRING;
  name : STRING;
  related : product_group;
  relating : product_group;
END_ENTITY;
 
ENTITY product_in_slot
SUBTYPE OF (view_definition_usage);
  name : STRING;
  product : product_view_definition;
  slot : slot_definition;
END_ENTITY;
 
ENTITY product_planned_to_realized;
  planned_product : product_as_planned;
  realized_product : product_as_realized;
END_ENTITY;
 
ENTITY product_relationship;
  relating_product : product;
  related_product : product;
  relation_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY product_version
ABSTRACT SUPERTYPE OF (ONEOF (breakdown_element_version, breakdown_version, 
document_version, interface_connector_version, interface_specification_version
, part_version, product_as_individual, requirement_version, slot_version));
  id : STRING;
  description : OPTIONAL STRING;
  of_product : product;
UNIQUE
  ur1 : id, of_product;
END_ENTITY;
 
ENTITY product_version_relationship;
  relating_version : product_version;
  related_version : product_version;
  relation_type : STRING;
  description : OPTIONAL STRING;
WHERE
  wr1 : relating_version :<>: related_version;
END_ENTITY;
 
ENTITY product_view_definition
SUPERTYPE OF (ONEOF (breakdown_element_definition, 
interface_connector_definition, interface_specification_definition, 
part_view_definition, requirement_view_definition, slot_definition));
  id : STRING;
  name : OPTIONAL STRING;
  additional_characterization : OPTIONAL STRING;
  initial_context : view_definition_context;
  additional_contexts : SET OF view_definition_context;
  defined_version : product_version;
WHERE
  wr1 : NOT (initial_context IN additional_contexts);
END_ENTITY;
 
ENTITY project;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  responsible_organizations : SET OF organization;
  planned_start_date : date_or_event;
  planned_end_date : date_or_event;
  actual_start_date : date_or_date_time_select;
  actual_end_date : date_or_date_time_select;
END_ENTITY;
 
ENTITY project_assignment;
  assigned_project : project;
  role : STRING;
  items : SET OF project_item;
END_ENTITY;
 
ENTITY project_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating_project : project;
  related_project : project;
END_ENTITY;
 
ENTITY promissory_usage
SUBTYPE OF (assembly_component_relationship);
END_ENTITY;
 
ENTITY proper_subset;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  subset : class;
  superset : class;
END_ENTITY;
 
ENTITY property_representation;
  description : OPTIONAL STRING;
  property : assigned_property;
  rep : representation;
  role : OPTIONAL STRING;
END_ENTITY;
 
ENTITY property_value_representation
SUBTYPE OF (representation);
  SELF\representation.context_of_items : numerical_representation_context;
END_ENTITY;
 
ENTITY qualification_assignment;
  assigned_qualification_type : qualification_type;
  received_by : qualifications_select;
END_ENTITY;
 
ENTITY qualification_type;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY qualification_type_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  related : qualification_type;
  relating : qualification_type;
END_ENTITY;
 
ENTITY qualified_property_value_representation
SUBTYPE OF (property_value_representation);
  value_determination : OPTIONAL STRING;
  qualifier : OPTIONAL property_value_qualifier;
END_ENTITY;
 
ENTITY random_variable
SUBTYPE OF (numerical_item_with_global_unit);
END_ENTITY;
 
ENTITY ratio_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY regional_coordinate;
  coordinate_value : value_with_unit;
  grid_system : regional_grid_location_representation;
  name : STRING;
END_ENTITY;
 
ENTITY regional_grid_location_representation;
  description : OPTIONAL STRING;
  name : STRING;
END_ENTITY;
 
ENTITY related_condition_parameter;
  name : STRING;
  description : OPTIONAL STRING;
  conditon_evaluation_parameter : condition_evaluation_parameter;
  condition_parameter : condition_parameter;
END_ENTITY;
 
ENTITY relative_event
SUBTYPE OF (event);
  base_event : event;
  offset : duration;
END_ENTITY;
 
ENTITY repeat_count
SUBTYPE OF (looping_method);
  count : INTEGER;
END_ENTITY;
 
ENTITY repeat_until
SUBTYPE OF (looping_method);
  condition : condition;
END_ENTITY;
 
ENTITY repeat_while
SUBTYPE OF (looping_method);
  condition : condition;
END_ENTITY;
 
ENTITY representation;
  name : STRING;
  context_of_items : representation_context;
  items : SET [1:?] OF representation_item;
  description : OPTIONAL STRING;
  id : OPTIONAL STRING;
END_ENTITY;
 
ENTITY representation_context;
  id : STRING;
  kind : STRING;
INVERSE
  representations_in_context : SET [1:?] OF representation FOR context_of_items
  ;
END_ENTITY;
 
ENTITY representation_item ABSTRACT SUPERTYPE;
  name : STRING;
END_ENTITY;
 
ENTITY representation_relationship;
  relation_type : STRING;
  description : STRING;
  rep_1 : representation;
  rep_2 : representation;
END_ENTITY;
 
ENTITY required_resource
ABSTRACT SUPERTYPE OF (ONEOF (required_resource_by_resource_item, 
required_resource_by_specification));
  name : STRING;
  description : OPTIONAL STRING;
  required_quantity : OPTIONAL value_with_unit;
END_ENTITY;
 
ENTITY required_resource_assignment;
  assigned_resource : required_resource;
  item : required_resource_item;
END_ENTITY;
 
ENTITY required_resource_by_resource_item
SUBTYPE OF (required_resource);
  resource_item : resource_item;
END_ENTITY;
 
ENTITY required_resource_by_specification
SUBTYPE OF (required_resource);
END_ENTITY;
 
ENTITY required_resource_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : required_resource;
  related : required_resource;
END_ENTITY;
 
ENTITY requirement
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY requirement_assignment;
  assigned_requirement : requirement_view_definition;
  assigned_to : requirement_assignment_item;
  description : OPTIONAL STRING;
  id : STRING;
END_ENTITY;
 
ENTITY requirement_collection_relationship
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.relating_view : requirement_view_definition
  ;
  SELF\view_definition_relationship.related_view : requirement_view_definition;
DERIVE
  collection : requirement_view_definition := SELF\view_definition_relationship
  .relating_view;
  member : requirement_view_definition := SELF\view_definition_relationship.
  related_view;
END_ENTITY;
 
ENTITY requirement_source;
  description : OPTIONAL STRING;
  id : STRING;
  source : requirement_source_item;
  sourced_requirement : requirement_view_definition;
END_ENTITY;
 
ENTITY requirement_version
SUBTYPE OF (product_version);
  SELF\product_version.of_product : requirement;
END_ENTITY;
 
ENTITY requirement_version_relationship
SUBTYPE OF (product_version_relationship);
  SELF\product_version_relationship.relating_version : requirement_version;
  SELF\product_version_relationship.related_version : requirement_version;
DERIVE
  predecessor : requirement_version := SELF\product_version_relationship.
  relating_version;
  successor : requirement_version := SELF\product_version_relationship.
  related_version;
END_ENTITY;
 
ENTITY requirement_view_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : requirement_version;
  satisfied : OPTIONAL BOOLEAN;
  tbd : BOOLEAN;
END_ENTITY;
 
ENTITY resource_as_realized;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
END_ENTITY;
 
ENTITY resource_as_realized_assignment;
  assigned_resource : resource_as_realized;
  item : resource_as_realized_item;
END_ENTITY;
 
ENTITY resource_as_realized_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_as_realized;
  related : resource_as_realized_relationship_select;
END_ENTITY;
 
ENTITY resource_as_realized_resource_item
SUBTYPE OF (resource_as_realized);
  resource_item : resource_item;
END_ENTITY;
 
ENTITY resource_event ABSTRACT SUPERTYPE;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
  resource : managed_resource;
END_ENTITY;
 
ENTITY resource_event_correspondence_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_event;
  related : required_resource;
END_ENTITY;
 
ENTITY resource_event_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_event;
  related : resource_event;
END_ENTITY;
 
ENTITY resource_group_relationship
SUBTYPE OF (resource_item_relationship);
  quantity : OPTIONAL value_with_unit;
END_ENTITY;
 
ENTITY resource_item;
  name : STRING;
  description : OPTIONAL STRING;
  resource_item : OPTIONAL resource_item_select;
END_ENTITY;
 
ENTITY resource_item_assignment;
  assigned_resource : resource_item;
  item : resource_assignment_item;
END_ENTITY;
 
ENTITY resource_item_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_item;
  related : resource_item;
END_ENTITY;
 
ENTITY resource_location;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY resource_location_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : resource_location;
  related : resource_location;
END_ENTITY;
 
ENTITY resource_property;
  described_element : characterized_resource_select;
  description : STRING;
  name : STRING;
END_ENTITY;
 
ENTITY resource_property_representation;
  description : OPTIONAL STRING;
  property : resource_property;
  rep : representation;
  role : STRING;
END_ENTITY;
 
ENTITY same_membership;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  set_1 : class;
  set_2 : class;
END_ENTITY;
 
ENTITY scheme
SUBTYPE OF (activity_method);
END_ENTITY;
 
ENTITY scheme_entry
SUBTYPE OF (activity_method);
  scheme : scheme;
END_ENTITY;
 
ENTITY scheme_entry_assignment
SUBTYPE OF (applied_activity_method_assignment);
  SELF\applied_activity_method_assignment.assigned_activity_method : 
  scheme_entry;
  SELF\applied_activity_method_assignment.items : SET [1:?] OF 
  scheme_entry_item_select;
DERIVE
  assigned_entry : scheme_entry := SELF\applied_activity_method_assignment.
  assigned_activity_method;
END_ENTITY;
 
ENTITY scheme_entry_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : scheme_entry;
  SELF\activity_method_relationship.relating_method : scheme_entry;
DERIVE
  related_entry : scheme_entry := SELF\activity_method_relationship.
  related_method;
  relating_entry : scheme_entry := SELF\activity_method_relationship.
  relating_method;
END_ENTITY;
 
ENTITY scheme_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : scheme;
  SELF\activity_method_relationship.relating_method : scheme;
DERIVE
  related_scheme : scheme := SELF\activity_method_relationship.related_method;
  relating_scheme : scheme := SELF\activity_method_relationship.relating_method
  ;
END_ENTITY;
 
ENTITY scheme_subject_assignment
SUBTYPE OF (applied_activity_method_assignment);
  SELF\applied_activity_method_assignment.assigned_activity_method : scheme;
  SELF\applied_activity_method_assignment.items : SET [1:?] OF 
  scheme_subject_select;
DERIVE
  assigned_scheme : scheme := SELF\applied_activity_method_assignment.
  assigned_activity_method;
END_ENTITY;
 
ENTITY security_classification;
  classification_level : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY security_classification_assignment;
  classification : security_classification;
  items : SET [1:?] OF security_classification_item;
END_ENTITY;
 
ENTITY selected_item
SUBTYPE OF (class);
END_ENTITY;
 
ENTITY selected_item_assignment;
  assigned_class : selected_item;
  item : selected_item_select;
  item_context : SET [1:?] OF selected_item_context_items;
END_ENTITY;
 
ENTITY sequence_of_state
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  successor : SET [1:?] OF state := SELF\state_relationship.relating;
  predecessor : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY sequence_of_state_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  successor : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  predecessor : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
END_ENTITY;
 
ENTITY sequencing_relationship
SUBTYPE OF (scheme_entry_relationship);
  sequencing_type : STRING;
  time_lag : OPTIONAL time_interval;
END_ENTITY;
 
ENTITY serial_effectivity
SUBTYPE OF (effectivity);
  start_id : STRING;
  end_id : OPTIONAL STRING;
END_ENTITY;
 
ENTITY shape_dependent_property_representation;
  described_element : shape_dependent_select;
  property_representation : representation;
  characteristic_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY shape_description_association;
  represented_characteristic : shape_select;
  representation : shape_model;
  role : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY shape_element;
  containing_shape : item_shape;
  element_name : STRING;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY shape_element_relationship;
  related : shape_element;
  relating : shape_element;
  relation_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY simultaneous_methods
SUBTYPE OF (concurrent_methods);
END_ENTITY;
 
ENTITY slot
SUBTYPE OF (product);
END_ENTITY;
 
ENTITY slot_as_planned
SUBTYPE OF (slot_version);
END_ENTITY;
 
ENTITY slot_as_realized
SUBTYPE OF (slot_version);
END_ENTITY;
 
ENTITY slot_definition
SUBTYPE OF (product_view_definition);
  SELF\product_view_definition.defined_version : slot_version;
END_ENTITY;
 
ENTITY slot_design
SUBTYPE OF (slot_version);
END_ENTITY;
 
ENTITY slot_design_to_planned;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  design : slot_design;
  planned : slot_as_planned;
WHERE
  wr1 : SELF.design.of_product :=: SELF.planned.of_product;
END_ENTITY;
 
ENTITY slot_design_to_realized;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  design : slot_design;
  realized : slot_as_realized;
WHERE
  wr1 : SELF.design.of_product :=: SELF.realized.of_product;
END_ENTITY;
 
ENTITY slot_on_product;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  product : product_view_definition;
  slot : slot_definition;
END_ENTITY;
 
ENTITY slot_planned_to_realized;
  description : OPTIONAL STRING;
  id : STRING;
  name : STRING;
  planned : slot_as_planned;
  realized : slot_as_realized;
WHERE
  wr1 : SELF.planned.of_product :=: SELF.realized.of_product;
END_ENTITY;
 
ENTITY slot_version
SUPERTYPE OF (ONEOF (slot_as_planned, slot_as_realized, slot_design))
SUBTYPE OF (product_version);
  SELF\product_version.of_product : slot;
END_ENTITY;
 
ENTITY solid_angle_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY state
SUPERTYPE OF (ONEOF (state_observed, state_predicted));
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY state_assertion;
  name : STRING;
  description : OPTIONAL STRING;
  asserted_state : state;
  conformance_state : state_definition;
END_ENTITY;
 
ENTITY state_assessment;
  name : STRING;
  description : OPTIONAL STRING;
  assessed_state : state;
  comparable_state : state_definition;
END_ENTITY;
 
ENTITY state_cause_effect
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  effect : SET [1:?] OF state := SELF\state_relationship.relating;
  cause : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY state_cause_effect_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  effect : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  relating;
  cause : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY state_complement_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
  set_2 : SET [1:?] OF state_definition;
DERIVE
  universe : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  set_1 : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY state_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY state_definition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : SET [1:?] OF state_definition;
  related : SET [1:?] OF state_definition;
END_ENTITY;
 
ENTITY state_definition_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY state_observed
SUBTYPE OF (state);
END_ENTITY;
 
ENTITY state_predicted
SUBTYPE OF (state);
END_ENTITY;
 
ENTITY state_predicted_to_observed
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state_observed;
  SELF\state_relationship.related : SET [1:?] OF state_predicted;
DERIVE
  observed_state : SET [1:?] OF state_observed := SELF\state_relationship.
  relating;
  predicted_state : SET [1:?] OF state_predicted := SELF\state_relationship.
  related;
END_ENTITY;
 
ENTITY state_proper_subset_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
DERIVE
  proper_subset : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
  proper_superset : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
END_ENTITY;
 
ENTITY state_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : SET [1:?] OF state;
  related : SET [1:?] OF state;
END_ENTITY;
 
ENTITY state_role;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY state_subset_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  superset : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  subset : SET [1:?] OF state_definition := SELF\state_definition_relationship.
  related;
END_ENTITY;
 
ENTITY state_symptom_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  symptom_effect : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  symptom_cause : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
END_ENTITY;
 
ENTITY state_transition
SUBTYPE OF (state_relationship);
  SELF\state_relationship.relating : SET [1:?] OF state;
  SELF\state_relationship.related : SET [1:?] OF state;
DERIVE
  end_state : SET [1:?] OF state := SELF\state_relationship.relating;
  start_state : SET [1:?] OF state := SELF\state_relationship.related;
END_ENTITY;
 
ENTITY state_transition_definition
SUBTYPE OF (state_definition_relationship);
  SELF\state_definition_relationship.relating : SET [1:?] OF state_definition;
  SELF\state_definition_relationship.related : SET [1:?] OF state_definition;
DERIVE
  end_state : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.relating;
  start_state : SET [1:?] OF state_definition := SELF\
  state_definition_relationship.related;
END_ENTITY;
 
ENTITY string_representation_item
SUBTYPE OF (representation_item);
  string_value : STRING;
END_ENTITY;
 
ENTITY structured_task_method
ABSTRACT SUPERTYPE OF (ONEOF (concurrent_methods, decision_point, 
looping_method, task_method_sequence))
SUBTYPE OF (task_method);
END_ENTITY;
 
ENTITY subset;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  subset : class;
  superset : class;
END_ENTITY;
 
ENTITY supplied_part_relationship
SUBTYPE OF (product_version_relationship);
WHERE
  wr1 : SELF\product_version_relationship.relation_type IN ['supplied item', 
    'supplied document'];
END_ENTITY;
 
ENTITY system_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY system_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : system_breakdown_version;
  SELF\breakdown_context.breakdown_element : system_element_definition;
END_ENTITY;
 
ENTITY system_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : system_breakdown;
END_ENTITY;
 
ENTITY system_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY system_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : system_element_version;
END_ENTITY;
 
ENTITY system_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : system_element_definition;
  SELF\breakdown_element_usage.child_element : system_element_definition;
END_ENTITY;
 
ENTITY system_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : system_element;
END_ENTITY;
 
ENTITY task
SUBTYPE OF (activity_method);
  method : OPTIONAL task_method;
  objective : SET [1:?] OF task_result;
END_ENTITY;
 
ENTITY task_assignment
SUBTYPE OF (applied_activity_method_assignment);
  SELF\applied_activity_method_assignment.assigned_activity_method : task;
  SELF\applied_activity_method_assignment.items : SET [1:?] OF task_item;
DERIVE
  assigned_task : task := SELF\applied_activity_method_assignment.
  assigned_activity_method;
END_ENTITY;
 
ENTITY task_invocation
SUBTYPE OF (task_method);
  task : task;
END_ENTITY;
 
ENTITY task_method
ABSTRACT SUPERTYPE OF (ONEOF (end_task, exit_loop, structured_task_method, 
task_invocation, task_method_levels, task_step))
SUBTYPE OF (activity_method);
  notes : OPTIONAL  LIST [1:?] OF advisory_task_step;
END_ENTITY;
 
ENTITY task_method_levels
SUBTYPE OF (task_method);
  alternatives : SET [2:?] OF task_method;
END_ENTITY;
 
ENTITY task_method_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : task_method;
  SELF\activity_method_relationship.relating_method : task_method;
END_ENTITY;
 
ENTITY task_method_sequence
SUBTYPE OF (structured_task_method);
  methods :  LIST [2:?] OF task_method;
END_ENTITY;
 
ENTITY task_method_state_relationship;
  state : state_or_state_definition_select;
  task_method : task_method;
END_ENTITY;
 
ENTITY task_relationship
SUBTYPE OF (activity_method_relationship);
  SELF\activity_method_relationship.related_method : task;
  SELF\activity_method_relationship.relating_method : task;
DERIVE
  related_task : task := SELF\activity_method_relationship.related_method;
  relating_task : task := SELF\activity_method_relationship.relating_method;
END_ENTITY;
 
ENTITY task_result;
  name : STRING;
  description : STRING;
END_ENTITY;
 
ENTITY task_result_state_relationship;
  state : state_or_state_definition_select;
  task_result : task_result;
END_ENTITY;
 
ENTITY task_state_relationship;
  state : state_or_state_definition_select;
  task : task;
END_ENTITY;
 
ENTITY task_step
SUBTYPE OF (task_method);
  step_text : STRING;
END_ENTITY;
 
ENTITY thermodynamic_temperature_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY time_interval;
  id : STRING;
  name : STRING;
  description : STRING;
END_ENTITY;
 
ENTITY time_interval_effectivity
SUBTYPE OF (effectivity);
  effectivity_period : time_interval;
END_ENTITY;
 
ENTITY time_interval_relationship;
  relation_type : STRING;
  description : STRING;
  relating_time_interval : time_interval;
  related_time_interval : time_interval;
END_ENTITY;
 
ENTITY time_interval_with_bounds
SUBTYPE OF (time_interval);
  primary_bound : OPTIONAL date_or_event;
  secondary_bound : OPTIONAL date_or_event;
  duration_from_primary_bound : OPTIONAL duration;
WHERE
  wr1 : NOT (EXISTS(secondary_bound) AND EXISTS(duration_from_primary_bound));
  wr2 : EXISTS(primary_bound) OR EXISTS(secondary_bound);
END_ENTITY;
 
ENTITY time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : offset_orientation;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset, 0);
WHERE
  wr1 : {0 <= hour_offset <= 24};
  wr2 : {0 <= minute_offset <= 59};
  wr3 : NOT (((hour_offset <> 0) OR (actual_minute_offset <> 0)) AND (sense = 
    exact));
END_ENTITY;
 
ENTITY time_unit
SUBTYPE OF (unit);
END_ENTITY;
 
ENTITY tracing_relationship
SUBTYPE OF (view_definition_relationship);
  SELF\view_definition_relationship.relating_view : requirement_view_definition
  ;
  SELF\view_definition_relationship.related_view : requirement_view_definition;
DERIVE
  traces_from : requirement_view_definition := SELF\
  view_definition_relationship.relating_view;
  traces_to : requirement_view_definition := SELF\view_definition_relationship.
  related_view;
END_ENTITY;
 
ENTITY transformation_based_template_instance
SUBTYPE OF (detailed_geometric_model_element);
  replicated_model : shape_model;
  replication_transformation : cartesian_transformation;
END_ENTITY;
 
ENTITY type_of_person;
  name : STRING;
  description : OPTIONAL STRING;
  has : SET OF type_of_person_definition;
END_ENTITY;
 
ENTITY type_of_person_assignment;
  assigned_type_of_person : type_of_person;
  items : SET [1:?] OF type_of_person_item_select;
  role : STRING;
END_ENTITY;
 
ENTITY type_of_person_definition;
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY type_of_person_definition_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : type_of_person_definition;
  related : type_of_person_definition;
END_ENTITY;
 
ENTITY type_of_person_definition_required_attributes_relationship;
  assigned_required_attributes : type_of_person_definition;
  required_attributes : SET OF defined_attributes;
END_ENTITY;
 
ENTITY uncertainty_with_unit
SUBTYPE OF (value_with_unit);
  name : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY union;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  operand : SET [2:?] OF class;
  resultant : class;
END_ENTITY;
 
ENTITY unit
SUPERTYPE OF (ONEOF (amount_of_substance_unit, electric_current_unit, 
length_unit, luminous_intensity_unit, mass_unit, plane_angle_unit, ratio_unit, 
solid_angle_unit, thermodynamic_temperature_unit, time_unit));
  name : OPTIONAL STRING;
  si_unit : BOOLEAN;
END_ENTITY;
 
ENTITY value_function;
  function_element :  LIST [1:?] OF function_value_pair;
END_ENTITY;
 
ENTITY value_limit
SUBTYPE OF (measure_item);
  limit_qualifier : limit_qualifier_list;
  limit : value_with_unit;
END_ENTITY;
 
ENTITY value_limit_with_global_unit
SUBTYPE OF (measure_item);
  limit : numerical_item_with_global_unit;
  limit_qualifier : limit_qualifier_list;
END_ENTITY;
 
ENTITY value_list
SUBTYPE OF (measure_item);
  values :  LIST [1:?] OF measure_item;
END_ENTITY;
 
ENTITY value_range
SUBTYPE OF (measure_item);
  lower_limit : numerical_item_with_unit;
  upper_limit : numerical_item_with_unit;
END_ENTITY;
 
ENTITY value_range_with_global_unit
SUBTYPE OF (measure_item);
  lower_limit : numerical_item_with_global_unit;
  upper_limit : numerical_item_with_global_unit;
END_ENTITY;
 
ENTITY value_with_tolerances
SUBTYPE OF (measure_item);
  item_value : numerical_item_with_unit;
  tolerances : value_range;
END_ENTITY;
 
ENTITY value_with_unit;
  unit : unit;
  value_component : measure_value;
END_ENTITY;
 
ENTITY view_definition_context;
  application_domain : STRING;
  life_cycle_stage : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY view_definition_relationship
ABSTRACT SUPERTYPE OF (ONEOF (breakdown_element_usage, interface_connection, 
requirement_collection_relationship, tracing_relationship, 
view_definition_usage));
  id : STRING;
  relating_view : product_view_definition;
  related_view : product_view_definition;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY view_definition_usage
SUBTYPE OF (view_definition_relationship);
END_ENTITY;
 
ENTITY work_order;
  description : OPTIONAL STRING;
  in_response_to : SET OF work_request;
  name : STRING;
END_ENTITY;
 
ENTITY work_output;
  name : STRING;
  description : OPTIONAL STRING;
  quantity : OPTIONAL value_with_unit;
  output_item : OPTIONAL work_output_item;
END_ENTITY;
 
ENTITY work_output_assignment;
  assigned_output : work_output;
  item : work_item;
END_ENTITY;
 
ENTITY work_output_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating : work_output;
  related : work_output;
END_ENTITY;
 
ENTITY work_request;
  request_id : STRING;
  version_id : STRING;
  purpose : STRING;
  description : OPTIONAL STRING;
END_ENTITY;
 
ENTITY work_request_status;
  status : STRING;
  work_request : work_request;
END_ENTITY;
 
ENTITY xor_state_cause_effect_definition
SUBTYPE OF (state_cause_effect_definition);
END_ENTITY;
 
ENTITY zone_breakdown
SUBTYPE OF (breakdown);
END_ENTITY;
 
ENTITY zone_breakdown_context
SUBTYPE OF (breakdown_context);
  SELF\breakdown_context.breakdown : zone_breakdown_version;
  SELF\breakdown_context.breakdown_element : zone_element_definition;
END_ENTITY;
 
ENTITY zone_breakdown_version
SUBTYPE OF (breakdown_version);
  SELF\breakdown_version.of_product : zone_breakdown;
END_ENTITY;
 
ENTITY zone_element
SUBTYPE OF (breakdown_element);
END_ENTITY;
 
ENTITY zone_element_definition
SUBTYPE OF (breakdown_element_definition);
  SELF\breakdown_element_definition.defined_version : zone_element_version;
END_ENTITY;
 
ENTITY zone_element_usage
SUBTYPE OF (breakdown_element_usage);
  SELF\breakdown_element_usage.parent_element : zone_element_definition;
  SELF\breakdown_element_usage.child_element : zone_element_definition;
END_ENTITY;
 
ENTITY zone_element_version
SUBTYPE OF (breakdown_element_version);
  SELF\breakdown_element_version.of_product : zone_element;
END_ENTITY;
 
RULE part_requires_id_owner FOR (part);
WHERE
  wr1 : SIZEOF(QUERY(prod <* part | SIZEOF(QUERY(apoa <* USEDIN(prod, 
    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS'
    ) | apoa\organization_or_person_in_organization_assignment.role = 
    'id owner')) <> 1)) = 0;
END_RULE;
 
FUNCTION types_of_product(obj : product) : SET OF STRING;
LOCAL
  category_assignments :  BAG OF product_category_assignment;
  categories : SET OF STRING := [];
  i : INTEGER;
END_LOCAL;
  category_assignments := USEDIN(obj, 
  'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_ARM_LF.PRODUCT_CATEGORY_ASSIGNMENT.PRODUCTS'
  );
  REPEAT i := LOINDEX(category_assignments) TO HIINDEX(category_assignments);
    categories := categories + category_assignments[i].category.name;
  END_REPEAT;
  RETURN (categories);
END_FUNCTION;
 
FUNCTION valid_document_property_representation(rep : 
  document_property_representation) : LOGICAL;
  CASE rep.name OF 
    'document content' : 
      BEGIN
        RETURN (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['detail level', 'geometry type', 'real world scale']))) = 0);
      END;
    'document creation' : 
      BEGIN
        IF NOT (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['creating interface', 'creating system', 'operating system']))
        ) = 0) THEN
          RETURN (FALSE);
        END_IF;
        IF NOT (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['creating system']))) = 1) THEN
          RETURN (FALSE);
        ELSE
          RETURN (TRUE);
        END_IF;
      END;
    'document format' : 
      BEGIN
        RETURN (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['character code', 'data format', 'size format', 
        'size format standard']))) = 0);
      END;
    'document size' : 
      BEGIN
        RETURN (SIZEOF(QUERY(items <* rep\representation.items | NOT (items.
        name IN ['file size', 'page count']))) = 0);
      END;
    OTHERWISE  : RETURN (UNKNOWN);
  END_CASE;
END_FUNCTION;
 
END_SCHEMA;
