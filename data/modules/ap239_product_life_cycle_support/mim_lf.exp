(*
 $Id: mim_lf.exp,v 1.24 2009/06/09 06:13:58 robbod Exp $
 ISO TC184/SC4/WG3 N2567 - ISO/CD-TS 10303-439 AP239 product life cycle support - EXPRESS MIM Long form
 Supersedes ISO TC184/SC4/WG3 N1568
*)

(* ===================================================================================== *)
(* Long form schema generated by The EXPRESS Data Manager  compiler version 9.8.1B.20090502*)
(* Mon Jun 08 12:46:54 2009                                                                *)
(* The schema is converted from ISO10303 P11-2003 to ISO10303 P11-1994                     *)
(* ===================================================================================== *)

SCHEMA Ap239_product_life_cycle_support_mim_LF;


(*
USE FROM Analysis_assignment_mim;    

USE FROM Analysis_characterized_mim;    

USE FROM Analysis_identification_mim;    

USE FROM Analysis_representation_mim;    

USE FROM Ap239_activity_recording_mim;    

USE FROM Ap239_product_status_recording_mim;    

USE FROM application_context_schema   
  (application_context,
   application_protocol_definition); 

USE FROM Collection_identification_and_version_mim;    

USE FROM Conditional_effectivity_mim;    

USE FROM Description_assignment_mim;    

USE FROM External_analysis_representation_mim;    

USE FROM Identification_relationship_mim;    

USE FROM Product_environment_definition_mim;    

USE FROM Product_environment_observed_mim;    

USE FROM Property_as_definition_mim;    

USE FROM Same_as_external_item_mim;    

USE FROM System_view_definition_mim;    

USE FROM Verification_and_validation_mim;    
*)

CONSTANT

(* Implicit interfaced from: geometry_schema *)
  dummy_gri : geometric_representation_item :=  representation_item('')||
                                   geometric_representation_item();

END_CONSTANT;

(* Pruned unused type: interface_connector_occurrence_of_item  *)


(* Pruned unused type: plcs_action_method_items  *)


(* Pruned unused type: plcs_action_request_item  *)


(* Pruned unused type: plcs_analysed_item  *)


(* Pruned unused type: plcs_approval_item  *)


(* Pruned unused type: plcs_attribute_language_item  *)


(* Pruned unused type: plcs_certification_item  *)


(* Pruned unused type: plcs_classification_item  *)


(* Pruned unused type: plcs_collection_assignment_groupable_item  *)


(* Pruned unused type: plcs_collection_membership_groupable_item  *)


(* Pruned unused type: plcs_condition_action_method_items  *)


(* Pruned unused type: plcs_condition_evaluation_action_items  *)


(* Pruned unused type: plcs_contract_item  *)


(* Pruned unused type: plcs_date_and_time_item  *)


(* Pruned unused type: plcs_date_item  *)


(* Pruned unused type: plcs_description_item  *)


(* Pruned unused type: plcs_document_reference_item  *)


(* Pruned unused type: plcs_effectivity_item  *)


(* Pruned unused type: plcs_evidence_item  *)


(* Pruned unused type: plcs_groupable_item  *)


(* Pruned unused type: plcs_identification_item  *)


(* Pruned unused type: plcs_in_zone_groupable_item  *)


(* Pruned unused type: plcs_ir_usage_item  *)


(* Pruned unused type: plcs_justification_item  *)


(* Pruned unused type: plcs_justification_support_item  *)


(* Pruned unused type: plcs_location_item  *)


(* Pruned unused type: plcs_message_content_groupable_item  *)


(* Pruned unused type: plcs_multi_language_attribute_item  *)


(* Pruned unused type: plcs_observation_item  *)


(* Pruned unused type: plcs_observed_context_item  *)


(* Pruned unused type: plcs_organization_item  *)


(* Pruned unused type: plcs_person_and_organization_item  *)


(* Pruned unused type: plcs_person_type_item  *)


(* Pruned unused type: plcs_product_definition_or_product_definition_relationship  *)


(* Pruned unused type: plcs_representation_proxy_select  *)


(* Pruned unused type: plcs_requirement_assigned_item  *)


(* Pruned unused type: plcs_requirement_source_item  *)


(* Pruned unused type: plcs_same_as_item  *)


(* Pruned unused type: plcs_security_classification_item  *)


(* Pruned unused type: plcs_state_observed_of_item  *)


(* Pruned unused type: plcs_state_type_of_item  *)

(* USED FROM (Analysis_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE analysed_item = SELECT (
   action,
   action_method,
   action_method_assignment,
   action_method_relationship,
   action_property,
   action_relationship,
   action_resource_relationship,
   alternate_product_relationship,
   ascribable_state,
   assembly_component_usage_substitute,
   condition,
   evidence,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   interface_definition_for,
   observation,
   observation_consequence,
   observation_relationship,
   organization,
   organization_relationship,
   organizational_project_relationship,
   product,
   product_concept,
   product_definition,
   product_definition_context,
   product_definition_formation_relationship,
   product_definition_relationship,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group_relationship,
   product_planned_to_realized,
   product_relationship,
   property_definition,
   requirement_assignment,
   resource_property,
   state_observed,
   state_observed_role,
   state_type,
   task_method,
   validation,
   verification,
   verification_relationship);
END_TYPE;


(* Pruned unused type: analysis_approval_item  *)


(* Pruned unused type: analysis_classification_item  *)


(* Pruned unused type: analysis_contract_item  *)


(* Pruned unused type: analysis_date_and_time_item  *)


(* Pruned unused type: analysis_date_item  *)


(* Pruned unused type: analysis_organization_item  *)


(* Pruned unused type: analysis_person_and_organization_item  *)


(* Pruned unused type: analysis_security_classification_item  *)


(* Pruned unused type: analysis_identification_item  *)


(* Pruned unused type: ar_action_method_items  *)


(* Pruned unused type: ar_attribute_language_item  *)


(* Pruned unused type: ar_classification_item  *)


(* Pruned unused type: ar_condition_evaluation_action_items  *)


(* Pruned unused type: ar_document_reference_item  *)


(* Pruned unused type: ar_identification_item  *)


(* Pruned unused type: ar_justification_support_item  *)


(* Pruned unused type: ar_multi_language_attribute_item  *)


(* Pruned unused type: ar_observed_context_item  *)


(* Pruned unused type: ap239_psr_action_items  *)


(* Pruned unused type: ap239_psr_attribute_language_item  *)


(* Pruned unused type: ap239_psr_justification_item  *)


(* Pruned unused type: ap239_psr_location_item  *)


(* Pruned unused type: ap239_psr_multi_language_attribute_item  *)


(* Pruned unused type: ap239_psr_observed_context_item  *)


(* Pruned unused type: ap239_psr_state_of_item  *)


(* Pruned unused type: collection_assignment_groupable_item  *)


(* Pruned unused type: collection_membership_groupable_item  *)

(* USED FROM (Description_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE description_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   alternate_product_relationship,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_description_text_assignment,
   applied_external_identification_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   approval_relationship,
   ascribable_state,
   ascribable_state_relationship,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   breakdown_context,
   breakdown_element_group_assignment,
   breakdown_of,
   certification,
   characterized_object,
   class,
   condition,
   configuration_item,
   document_relationship,
   effectivity,
   effectivity_relationship,
   environment_definition_view,
   event_occurrence,
   event_occurrence_relationship,
   evidence,
   executed_action,
   experience,
   experience_type,
   external_source,
   general_property,
   general_property_relationship,
   geometric_item_specific_usage,
   group,
   identification_assignment_relationship,
   in_zone,
   information_right,
   interface_connection,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_connection,
   interface_definition_for,
   intersection,
   item_assumed,
   justification_assignment,
   justification_group_assignment,
   justification_item_group_assignment,
   location,
   location_relationship,
   measure_qualification,
   observation,
   observation_consequence,
   observed_environment_view,
   organization_relationship,
   organization_type,
   organizational_project,
   organizational_project_relationship,
   person_type,
   person_type_definition,
   person_type_definition_relationship,
   position_in_organization,
   position_in_organization_assignment,
   position_in_organization_relationship,
   position_in_organization_type,
   position_in_organization_type_assignment,
   product,
   product_concept,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_definition_shape,
   product_definition_usage,
   product_group,
   product_group_relationship,
   product_relationship,
   property_definition,
   property_definition_representation,
   qualification_type,
   qualification_type_relationship,
   representation,
   representation_relationship,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   security_classification,
   shape_aspect,
   shape_aspect_relationship,
   shape_definition_representation,
   state_observed,
   state_observed_relationship,
   state_observed_role,
   state_type,
   state_type_relationship,
   state_type_role,
   task_objective,
   time_interval,
   time_interval_relationship,
   uncertainty_measure_with_unit,
   uncertainty_qualifier,
   validation,
   verification,
   verification_relationship,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: end_dfn_activity_method_item  *)


(* Pruned unused type: env_dfn_activity_item  *)


(* Pruned unused type: env_dfn_classification_item  *)


(* Pruned unused type: env_dfn_description_item  *)


(* Pruned unused type: env_dfn_documented_element_select  *)


(* Pruned unused type: env_dfn_identifcation_assignment  *)


(* Pruned unused type: env_dfn_location_assignment_select  *)


(* Pruned unused type: env_dfn_organization_item  *)


(* Pruned unused type: env_dfn_person_in_organization_item  *)


(* Pruned unused type: env_dfn_resource_assignment_item  *)


(* Pruned unused type: env_dfn_state_defnition_of_item  *)


(* Pruned unused type: env_dfn_state_of_item  *)


(* Pruned unused type: env_obs_activity_item  *)


(* Pruned unused type: env_obs_activity_method_item  *)


(* Pruned unused type: env_obs_classification_item  *)


(* Pruned unused type: env_obs_date_and_time_item  *)


(* Pruned unused type: env_obs_date_item  *)


(* Pruned unused type: env_obs_description_item  *)


(* Pruned unused type: env_obs_documented_element_select  *)


(* Pruned unused type: env_obs_identification_assignment  *)


(* Pruned unused type: env_obs_location_assignment_select  *)


(* Pruned unused type: env_obs_organization_item  *)


(* Pruned unused type: env_obs_person_in_organization_item  *)


(* Pruned unused type: env_obs_resource_assignment_item  *)


(* Pruned unused type: env_obs_state_of_item  *)

(* USED FROM (Same_as_external_item_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE same_as_item = SELECT (
   action,
   action_method,
   action_method_relationship,
   action_property,
   action_request_status,
   action_resource,
   action_resource_requirement,
   action_status,
   address,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_experience_assignment,
   applied_external_identification_assignment,
   applied_group_assignment,
   applied_location_representation_assignment,
   applied_position_in_organization_group_assignment,
   approval,
   approval_status,
   ascribable_state,
   assumption,
   attribute_language_assignment,
   breakdown_context,
   calendar_date,
   certification,
   characterized_object,
   condition,
   configuration_effectivity,
   contract,
   coordinated_universal_time_offset,
   date_and_time,
   derived_unit,
   derived_unit_element,
   description_text,
   event_occurrence,
   evidence,
   executed_action,
   experience,
   experience_type,
   external_source,
   general_property,
   group,
   information_right,
   information_usage_right,
   item_assumed,
   language,
   local_time,
   location,
   measure_qualification,
   measure_representation_item,
   measure_with_unit,
   named_unit,
   observation,
   observation_consequence,
   organization,
   organization_type,
   person,
   person_type,
   person_type_definition,
   position_in_organization,
   position_in_organization_assignment,
   position_in_organization_type,
   position_in_organization_type_assignment,
   precision_qualifier,
   product,
   product_concept,
   product_concept_context,
   product_definition_context,
   qualification_type,
   representation,
   representation_context,
   requirement_source,
   resource_property,
   security_classification,
   state_observed,
   state_observed_role,
   state_type,
   state_type_role,
   task_objective,
   time_interval,
   type_qualifier,
   uncertainty_qualifier,
   usage_association);
END_TYPE;


(* Pruned unused type: system_definition_identification_item  *)

(* USED FROM (Verification_and_validation_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE evidence_item = SELECT (
   action_actual,
   action_method,
   action_relationship,
   action_status,
   analysis_assignment,
   applied_action_assignment,
   applied_approval_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_organization_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_security_classification_assignment,
   applied_usage_right,
   date_and_time_assignment,
   date_assignment,
   justification_assignment,
   justification_group_assignment,
   justification_item_group_assignment,
   justification_support_assignment,
   justification_support_item_group_assignment,
   person,
   person_and_organization,
   product,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   product_relationship,
   property_definition,
   representation,
   representation_context,
   representation_item,
   validation,
   verification);
END_TYPE;


(* Pruned unused type: validation_groupable_item  *)

(* USED FROM (management_resources_schema); *)
  TYPE attribute_type = SELECT (label, text);
  END_TYPE;
(* USED FROM (Approval_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE approval_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_request_solution,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_experience_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_organization_assignment,
   applied_organization_type_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   applied_usage_right,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_as_planned,
   attachment_slot_as_realized,
   attachment_slot_design,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   configuration_item,
   contract,
   date_and_time_assignment,
   date_assignment,
   descriptive_representation_item,
   directed_action,
   effectivity,
   envelope,
   event_occurrence,
   evidence,
   executed_action,
   experience_type,
   general_property,
   general_property_relationship,
   group,
   identification_assignment_relationship,
   in_zone,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_definition,
   interface_connector_design,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_connector_version,
   interface_definition_for,
   interface_specification_definition,
   interface_specification_version,
   item_assumed,
   justification_group_assignment,
   justification_support_assignment,
   measure_representation_item,
   observation,
   organization_relationship,
   organizational_address,
   organizational_project,
   person_and_organization,
   person_and_organization_address,
   person_type,
   position_in_organization,
   position_in_organization_type,
   product,
   product_as_individual,
   product_as_planned,
   product_as_realized,
   product_concept,
   product_definition,
   product_definition_context,
   product_definition_element_relationship,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_in_attachment_slot,
   product_planned_to_realized,
   product_related_product_category,
   product_relationship,
   property_definition,
   property_definition_relationship,
   qualification_type,
   requirement_assignment,
   requirement_source,
   resource_property,
   security_classification,
   selected_item_assignment,
   structured_message,
   validation,
   verification,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: date_and_time_item_approval  *)


(* Pruned unused type: date_item_approval  *)

(* USED FROM (Classification_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE classification_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_assignment,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_request_status,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   action_status,
   address,
   alternate_product_relationship,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_approval_assignment,
   applied_certification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_experience_assignment,
   applied_external_identification_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_location_representation_assignment,
   applied_organization_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_person_type_definition_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   applied_usage_right,
   approval,
   approval_person_organization,
   approval_relationship,
   approval_status,
   ascribable_state,
   ascribable_state_relationship,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   attribute_language_assignment,
   breakdown_context,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   breakdown_of,
   calendar_date,
   certification,
   characterized_object,
   class,
   configuration_design,
   configuration_effectivity,
   configuration_item,
   context_dependent_unit,
   contract,
   contract_relationship,
   conversion_based_unit,
   date_and_time,
   date_and_time_assignment,
   date_assignment,
   derived_unit,
   descriptive_representation_item,
   directed_action,
   document_file,
   document_relationship,
   effectivity,
   effectivity_relationship,
   envelope,
   envelope_relationship,
   environment_definition,
   environment_definition_version,
   environment_definition_view,
   environment_product_assignment,
   environment_view_definition_relationship,
   event_occurrence,
   event_occurrence_relationship,
   evidence,
   executed_action,
   experience,
   experience_type,
   external_class_library,
   general_property,
   general_property_relationship,
   group,
   identification_assignment_relationship,
   in_zone,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_design,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_connection,
   interface_definition_for,
   item_assumed,
   justification_group_assignment,
   justification_support_assignment,
   language,
   local_time,
   location,
   location_relationship,
   measure_representation_item,
   measure_with_unit,
   message_relationship,
   multi_language_attribute_assignment,
   named_unit,
   observation,
   observation_consequence,
   observation_relationship,
   observed_environment,
   observed_environment_product_assignment,
   observed_environment_version,
   observed_environment_view_definition_relationship,
   organization,
   organization_relationship,
   organization_type,
   organizational_address,
   organizational_project,
   organizational_project_relationship,
   person,
   person_and_organization,
   person_and_organization_address,
   person_type,
   person_type_definition,
   person_type_definition_relationship,
   position_in_organization,
   position_in_organization_relationship,
   position_in_organization_type,
   product,
   product_as_planned,
   product_as_realized,
   product_category,
   product_concept,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_definition_shape,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_planned_to_realized,
   product_relationship,
   property_definition,
   property_definition_relationship,
   property_definition_representation,
   qualification_type,
   qualification_type_relationship,
   representation,
   representation_context,
   representation_item,
   representation_relationship,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   security_classification,
   selected_item,
   selected_item_assignment,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_observed_role,
   state_type,
   state_type_assignment,
   state_type_relationship,
   structured_message,
   time_interval_relationship,
   uncertainty_measure_with_unit,
   usage_association,
   validation,
   verification,
   versioned_action_request);
END_TYPE;

(* USED FROM (Contract_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE contract_item = SELECT (
   action,
   action_method,
   action_method_relationship,
   action_resource,
   applied_action_assignment,
   applied_action_method_assignment,
   configuration_item,
   external_class_library,
   externally_defined_class,
   group,
   information_usage_right,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_design,
   organizational_project,
   product,
   product_as_individual,
   product_as_planned,
   product_as_realized,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   product_group,
   product_group_relationship,
   requirement_assignment,
   requirement_source,
   security_classification,
   structured_message,
   validation,
   verification);
END_TYPE;

(* USED FROM (Date_time_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE date_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   address,
   alternate_product_relationship,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_experience_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_location_representation_assignment,
   applied_organization_assignment,
   applied_organization_type_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   applied_usage_right,
   approval,
   approval_person_organization,
   ascribable_state,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   configuration_item,
   contract,
   date_and_time_assignment,
   date_assignment,
   descriptive_representation_item,
   directed_action,
   document_file,
   effectivity,
   envelope,
   event_occurrence,
   evidence,
   executed_action,
   experience,
   general_property,
   general_property_relationship,
   group,
   hierarchical_interface_connection,
   identification_assignment_relationship,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_connection,
   interface_definition_for,
   item_assumed,
   justification_group_assignment,
   justification_support_assignment,
   measure_representation_item,
   observed_environment_view,
   organization_relationship,
   organizational_address,
   organizational_project,
   person,
   person_and_organization,
   person_and_organization_address,
   product,
   product_as_planned,
   product_as_realized,
   product_concept,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_in_attachment_slot,
   product_planned_to_realized,
   product_related_product_category,
   product_relationship,
   property_definition,
   property_definition_relationship,
   property_definition_representation,
   representation,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   security_classification,
   selected_item,
   selected_item_assignment,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_type,
   state_type_assignment,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   verification_relationship,
   versioned_action_request);
END_TYPE;

(* USED FROM (Date_time_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE date_and_time_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   address,
   alternate_product_relationship,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_experience_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_location_representation_assignment,
   applied_organization_assignment,
   applied_organization_type_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   applied_usage_right,
   approval,
   approval_person_organization,
   ascribable_state,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   configuration_item,
   contract,
   date_and_time_assignment,
   date_assignment,
   descriptive_representation_item,
   directed_action,
   document_file,
   effectivity,
   envelope,
   event_occurrence,
   evidence,
   executed_action,
   experience,
   general_property,
   general_property_relationship,
   group,
   hierarchical_interface_connection,
   identification_assignment_relationship,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_connection,
   interface_definition_for,
   item_assumed,
   justification_group_assignment,
   justification_support_assignment,
   measure_representation_item,
   observation,
   observed_environment_view,
   organization_relationship,
   organizational_address,
   organizational_project,
   person,
   person_and_organization,
   person_and_organization_address,
   product,
   product_as_planned,
   product_as_realized,
   product_concept,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_in_attachment_slot,
   product_planned_to_realized,
   product_related_product_category,
   product_relationship,
   property_definition,
   property_definition_relationship,
   property_definition_representation,
   representation,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   security_classification,
   selected_item,
   selected_item_assignment,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_type,
   state_type_assignment,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   verification_relationship,
   versioned_action_request);
END_TYPE;

(* USED FROM (Person_organization_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE organization_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_organization_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   approval,
   ascribable_state,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   configuration_item,
   contract,
   date_and_time_assignment,
   date_assignment,
   descriptive_representation_item,
   directed_action,
   document_file,
   effectivity,
   envelope,
   environment_definition_view,
   event_occurrence,
   evidence,
   executed_action,
   general_property,
   general_property_relationship,
   group,
   identification_assignment_relationship,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_occurrence,
   interface_definition_connection,
   interface_definition_for,
   item_assumed,
   justification_group_assignment,
   justification_support_assignment,
   measure_representation_item,
   observation,
   observed_environment_view,
   organizational_address,
   organizational_project,
   person_and_organization,
   person_and_organization_address,
   position_in_organization_type,
   product,
   product_as_individual,
   product_as_planned,
   product_as_realized,
   product_category,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_related_product_category,
   product_relationship,
   property_definition,
   property_definition_relationship,
   property_definition_representation,
   representation,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   security_classification,
   selected_item,
   selected_item_assignment,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_type,
   state_type_assignment,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   versioned_action_request);
END_TYPE;

(* USED FROM (Person_organization_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE person_and_organization_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_organization_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   approval,
   ascribable_state,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   configuration_item,
   contract,
   date_and_time_assignment,
   date_assignment,
   descriptive_representation_item,
   directed_action,
   document_file,
   effectivity,
   envelope,
   environment_definition_view,
   event_occurrence,
   evidence,
   executed_action,
   general_property,
   general_property_relationship,
   group,
   identification_assignment_relationship,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_occurrence,
   interface_definition_connection,
   interface_definition_for,
   item_assumed,
   justification_group_assignment,
   justification_support_assignment,
   measure_representation_item,
   observation,
   observed_environment_view,
   organizational_address,
   organizational_project,
   person_and_organization,
   person_and_organization_address,
   position_in_organization_type,
   product,
   product_as_individual,
   product_as_planned,
   product_as_realized,
   product_category,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_related_product_category,
   product_relationship,
   property_definition,
   property_definition_relationship,
   property_definition_representation,
   qualification_type,
   representation,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   security_classification,
   selected_item,
   selected_item_assignment,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_type,
   state_type_assignment,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   versioned_action_request);
END_TYPE;

(* USED FROM (Security_classification_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE security_classification_item = SELECT (
   action,
   action_method,
   action_method_relationship,
   action_resource,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   assembly_component_usage,
   assembly_component_usage_substitute,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   configuration_item,
   document_file,
   evidence,
   group,
   hierarchical_interface_connection,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_design,
   interface_connector_occurrence,
   interface_definition_connection,
   interface_definition_for,
   product,
   product_as_individual,
   product_as_individual_view,
   product_as_planned,
   product_as_realized,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_relationship,
   requirement_assignment,
   requirement_source,
   structured_message,
   validation,
   verification);
END_TYPE;

(* USED FROM (Identification_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE identification_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_relationship,
   action_resource,
   action_resource_requirement,
   action_resource_requirement_relationship,
   address,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_external_identification_assignment,
   applied_identification_assignment,
   applied_location_representation_assignment,
   applied_organization_assignment,
   applied_person_and_organization_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   approval,
   approval_status,
   ascribable_state,
   ascribable_state_relationship,
   assembly_component_usage,
   assumption,
   assumption_relationship,
   certification,
   class,
   configuration_item,
   contract,
   descriptive_representation_item,
   directed_action,
   document_file,
   effectivity,
   environment_definition,
   environment_definition_version,
   environment_product_assignment,
   environment_view_definition_relationship,
   event_occurrence,
   evidence,
   executed_action,
   experience,
   experience_type,
   external_class_library,
   general_property,
   general_property_relationship,
   group,
   identification_assignment_relationship,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_definition,
   interface_connector_design,
   interface_connector_occurrence,
   interface_connector_version,
   interface_definition_connection,
   interface_definition_for,
   interface_specification_definition,
   interface_specification_version,
   justification_assignment,
   justification_group_assignment,
   justification_support_assignment,
   location,
   measure_representation_item,
   observation,
   observation_consequence,
   observed_environment,
   observed_environment_product_assignment,
   observed_environment_version,
   observed_environment_view_definition_relationship,
   organization,
   organization_type,
   organizational_project,
   person,
   person_and_organization,
   person_type,
   person_type_definition,
   position_in_organization,
   probability_generator,
   product,
   product_as_individual,
   product_as_individual_version,
   product_as_individual_view,
   product_as_planned,
   product_as_realized,
   product_concept,
   product_concept_context,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   product_definition_shape,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_relationship,
   property_definition,
   property_definition_relationship,
   qualification_type,
   representation,
   requirement_assignment,
   requirement_source,
   requirement_view_definition_relationship,
   resource_property,
   security_classification,
   security_classification_level,
   shape_aspect_relationship,
   shape_representation,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_type,
   state_type_assignment,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: versionable_item  *)


(* Pruned unused type: wd_action_items  *)


(* Pruned unused type: wd_action_method_items  *)


(* Pruned unused type: wd_action_request_item  *)


(* Pruned unused type: wd_approval_item  *)


(* Pruned unused type: wd_attribute_language_item  *)


(* Pruned unused type: wd_certification_item  *)


(* Pruned unused type: wd_condition_action_method_items  *)


(* Pruned unused type: wd_contract_item  *)


(* Pruned unused type: wd_date_and_time_item  *)


(* Pruned unused type: wd_date_item  *)


(* Pruned unused type: wd_document_reference_item  *)


(* Pruned unused type: wd_effectivity_item  *)


(* Pruned unused type: wd_identification_item  *)


(* Pruned unused type: wd_justification_item  *)


(* Pruned unused type: wd_justification_support_item  *)


(* Pruned unused type: wd_location_item  *)


(* Pruned unused type: wd_multi_language_attribute_item  *)


(* Pruned unused type: wd_organization_item  *)


(* Pruned unused type: wd_person_and_organization_item  *)


(* Pruned unused type: wd_product_item  *)


(* Pruned unused type: wd_project_item  *)


(* Pruned unused type: wd_security_classification_item  *)


(* Pruned unused type: wd_state_of_item  *)


(* Pruned unused type: wd_state_type_of_item  *)


(* Pruned unused type: resource_as_realized_approval_item  *)


(* Pruned unused type: resource_as_realized_attribute_classification_item  *)


(* Pruned unused type: resource_as_realized_attribute_language_item  *)


(* Pruned unused type: resource_as_realized_date_and_time_item  *)


(* Pruned unused type: resource_as_realized_date_item  *)


(* Pruned unused type: resource_as_realized_identification_item  *)


(* Pruned unused type: resource_as_realized_justification_item  *)


(* Pruned unused type: resource_as_realized_multi_language_attribute_item  *)


(* Pruned unused type: resource_as_realized_organization_item  *)


(* Pruned unused type: resource_as_realized_person_and_organization_item  *)


(* Pruned unused type: resource_as_realized_state_observed_of_item  *)


(* Pruned unused type: resource_as_realized_state_type_of_item  *)

(* USED FROM (Activity_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE action_items = SELECT (
   action,
   action_directive,
   action_method,
   action_method_assignment,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_request_status,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   action_status,
   address,
   alternate_product_relationship,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_approval_assignment,
   applied_attribute_classification_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_description_text_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_experience_assignment,
   applied_external_identification_assignment,
   applied_group_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_location_representation_assignment,
   applied_name_assignment,
   applied_organization_assignment,
   applied_organization_type_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_person_type_definition_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   applied_usage_right,
   approval,
   approval_person_organization,
   approval_relationship,
   approval_status,
   ascribable_state,
   ascribable_state_relationship,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   attribute_language_assignment,
   breakdown_context,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   breakdown_of,
   calendar_date,
   certification,
   characterized_object,
   class,
   collection_assignment,
   collection_membership,
   complement,
   compound_representation_item,
   condition,
   configuration_design,
   configuration_effectivity,
   configuration_item,
   configuration_item_relationship,
   context_dependent_shape_representation,
   contract,
   contract_relationship,
   coordinated_universal_time_offset,
   date_and_time,
   date_and_time_assignment,
   date_assignment,
   derived_unit,
   derived_unit_element,
   description_text,
   descriptive_representation_item,
   document_file,
   document_relationship,
   effectivity,
   effectivity_relationship,
   envelope,
   envelope_relationship,
   environment_definition_view,
   environment_product_assignment,
   event_occurrence,
   event_occurrence_relationship,
   evidence,
   executed_action,
   experience,
   experience_type,
   experience_type_relationship,
   external_source,
   general_property,
   general_property_relationship,
   geometric_item_specific_usage,
   group,
   hierarchical_interface_connection,
   identification_assignment_relationship,
   in_zone,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_design,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_connection,
   interface_definition_for,
   intersection,
   item_assumed,
   item_defined_transformation,
   justification_assignment,
   justification_support_assignment,
   language,
   local_time,
   location,
   location_relationship,
   measure_qualification,
   measure_representation_item,
   measure_with_unit,
   message_relationship,
   multi_language_attribute_assignment,
   named_unit,
   observation,
   observation_consequence,
   observation_relationship,
   observed_environment_product_assignment,
   observed_environment_to_definition,
   observed_environment_to_definition_version,
   observed_environment_to_definition_view,
   observed_environment_view,
   organization,
   organization_relationship,
   organization_type,
   organizational_address,
   organizational_project,
   organizational_project_relationship,
   person,
   person_and_organization,
   person_and_organization_address,
   person_type,
   person_type_definition,
   person_type_definition_relationship,
   position_in_organization,
   position_in_organization_assignment,
   position_in_organization_relationship,
   position_in_organization_type,
   position_in_organization_type_assignment,
   power_set,
   precision_qualifier,
   product,
   product_as_individual,
   product_as_individual_view,
   product_as_planned,
   product_as_realized,
   product_concept,
   product_concept_context,
   product_definition,
   product_definition_context,
   product_definition_element_relationship,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_definition_shape,
   product_definition_usage,
   product_design_to_individual,
   product_design_version_to_individual,
   product_design_view_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_planned_to_realized,
   product_related_product_category,
   product_relationship,
   proper_subset,
   property_definition,
   property_definition_representation,
   qualification_type,
   qualification_type_relationship,
   representation,
   representation_context,
   representation_item,
   representation_relationship,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   same_as_external_item_assignment,
   same_membership,
   satisfies_requirement,
   security_classification,
   selected_item_assignment,
   shape_aspect,
   shape_aspect_relationship,
   shape_definition_representation,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_observed_role,
   state_type,
   state_type_assignment,
   state_type_relationship,
   state_type_role,
   statechar_action_items,
   structured_message,
   subset,
   task_element,
   task_method,
   task_method_version,
   task_objective,
   time_interval,
   time_interval_relationship,
   type_qualifier,
   uncertainty_qualifier,
   union,
   usage_association,
   validation,
   verification,
   verification_relationship,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: ap239_prdi_aliasable_item  *)


(* Pruned unused type: ap239_prdi_approval_item  *)


(* Pruned unused type: ap239_prdi_attribute_classification_item  *)


(* Pruned unused type: ap239_prdi_certification_item  *)


(* Pruned unused type: ap239_prdi_classification_item  *)


(* Pruned unused type: ap239_prdi_condition_action_items  *)


(* Pruned unused type: ap239_prdi_condition_evaluation_action_items  *)


(* Pruned unused type: ap239_prdi_contract_item  *)


(* Pruned unused type: ap239_prdi_date_and_time_item  *)


(* Pruned unused type: ap239_prdi_date_item  *)


(* Pruned unused type: ap239_prdi_document_reference_item  *)


(* Pruned unused type: ap239_prdi_effectivity_item  *)


(* Pruned unused type: ap239_prdi_identification_item  *)


(* Pruned unused type: ap239_prdi_in_zone_groupable_item  *)


(* Pruned unused type: ap239_prdi_ir_usage_item  *)


(* Pruned unused type: ap239_prdi_multi_language_attribute_item  *)


(* Pruned unused type: ap239_prdi_organization_item  *)


(* Pruned unused type: ap239_prdi_person_and_organization_item  *)


(* Pruned unused type: ap239_prdi_product_definition_or_product_definition_relationship  *)


(* Pruned unused type: ap239_prdi_project_item  *)


(* Pruned unused type: ap239_prdi_requirement_assigned_item  *)


(* Pruned unused type: ap239_prdi_security_classification_item  *)


(* Pruned unused type: ap239_prdi_selected_item_context_items  *)


(* Pruned unused type: ap239_prdi_selected_item_select  *)


(* Pruned unused type: ap239_prdi_state_observed_of_item  *)


(* Pruned unused type: ap239_prdi_state_type_of_item  *)


(* Pruned unused type: aliasable_item  *)


(* Pruned unused type: ap239_padi_aliasable_item  *)


(* Pruned unused type: ap239_padi_approval_item  *)


(* Pruned unused type: ap239_padi_attribute_classification_item  *)


(* Pruned unused type: ap239_padi_attribute_language_item  *)


(* Pruned unused type: ap239_padi_certification_item  *)


(* Pruned unused type: ap239_padi_classification_item  *)


(* Pruned unused type: ap239_padi_condition_action_method_items  *)


(* Pruned unused type: ap239_padi_condition_evaluation_action_items  *)


(* Pruned unused type: ap239_padi_contract_item  *)


(* Pruned unused type: ap239_padi_date_and_time_item  *)


(* Pruned unused type: ap239_padi_date_item  *)


(* Pruned unused type: ap239_padi_document_reference_item  *)


(* Pruned unused type: ap239_padi_effectivity_item  *)


(* Pruned unused type: ap239_padi_identification_item  *)


(* Pruned unused type: ap239_padi_ir_usage_item  *)


(* Pruned unused type: ap239_padi_justification_item  *)


(* Pruned unused type: ap239_padi_justification_support_item  *)


(* Pruned unused type: ap239_padi_multi_language_attribute_item  *)


(* Pruned unused type: ap239_padi_organization_item  *)


(* Pruned unused type: ap239_padi_person_and_organization_item  *)


(* Pruned unused type: ap239_padi_project_item  *)


(* Pruned unused type: ap239_padi_requirement_assigned_item  *)


(* Pruned unused type: ap239_padi_requirement_source_item  *)


(* Pruned unused type: ap239_padi_security_classification_item  *)


(* Pruned unused type: ap239_padi_state_observed_of_item  *)


(* Pruned unused type: ap239_padi_state_type_of_item  *)


(* Pruned unused type: ap239_dm_aliasable_item  *)


(* Pruned unused type: ap239_dm_approval_item  *)


(* Pruned unused type: ap239_dm_attribute_classification_item  *)


(* Pruned unused type: ap239_dm_attribute_language_item  *)


(* Pruned unused type: ap239_dm_classification_item  *)


(* Pruned unused type: ap239_dm_contract_item  *)


(* Pruned unused type: ap239_dm_date_and_time_item  *)


(* Pruned unused type: ap239_dm_date_item  *)


(* Pruned unused type: ap239_dm_document_reference_item  *)


(* Pruned unused type: ap239_dm_identification_item  *)


(* Pruned unused type: ap239_dm_ir_usage_item  *)


(* Pruned unused type: ap239_dm_multi_language_attribute_item  *)


(* Pruned unused type: ap239_dm_organization_item  *)


(* Pruned unused type: ap239_dm_person_and_organization_item  *)


(* Pruned unused type: ap239_dm_security_classification_item  *)


(* Pruned unused type: ap239_dm_state_observed_of_item  *)


(* Pruned unused type: ap239_dm_state_type_of_item  *)


(* Pruned unused type: ap239_mri_aliasable_item  *)


(* Pruned unused type: ap239_mri_approval_item  *)


(* Pruned unused type: ap239_mri_attribute_classification_item  *)


(* Pruned unused type: ap239_mri_attribute_language_item  *)


(* Pruned unused type: ap239_mri_certification_item  *)


(* Pruned unused type: ap239_mri_classification_item  *)


(* Pruned unused type: ap239_mri_contract_item  *)


(* Pruned unused type: ap239_mri_date_and_time_item  *)


(* Pruned unused type: ap239_mri_date_item  *)


(* Pruned unused type: ap239_mri_event_occurrence_item  *)


(* Pruned unused type: ap239_mri_identification_item  *)


(* Pruned unused type: ap239_mri_multi_language_attribute_item  *)


(* Pruned unused type: ap239_mri_organization_item  *)


(* Pruned unused type: ap239_mri_person_and_organization_item  *)

(* USED FROM (Attribute_classification_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE attribute_classification_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_request_status,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   address,
   alternate_product_relationship,
   application_context,
   application_context_element,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_location_representation_assignment,
   approval,
   approval_relationship,
   approval_role,
   approval_status,
   breakdown_context,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   certification_type,
   context_dependent_unit,
   contract_type,
   conversion_based_unit,
   date_role,
   date_time_role,
   derived_unit,
   descriptive_representation_item,
   document_relationship,
   document_type,
   document_usage_role,
   effectivity,
   effectivity_relationship,
   envelope,
   envelope_relationship,
   event_occurrence_context_role,
   event_occurrence_relationship,
   executed_action,
   general_property,
   general_property_relationship,
   group,
   identification_role,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_definition,
   interface_definition_connection,
   interface_specification_definition,
   location,
   location_relationship,
   measure_representation_item,
   measure_with_unit,
   message_relationship,
   name_attribute,
   named_unit,
   object_role,
   organization_relationship,
   organization_role,
   organizational_address,
   organizational_project_relationship,
   organizational_project_role,
   person_and_organization_address,
   person_and_organization_role,
   product,
   product_category,
   product_concept,
   product_concept_context,
   product_context,
   product_definition,
   product_definition_context,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_design_version_to_individual,
   product_relationship,
   property_definition,
   property_definition_relationship,
   property_definition_representation,
   representation,
   representation_context,
   representation_item,
   resource_property,
   resource_property_representation,
   security_classification_level,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_type,
   state_type_assignment,
   state_type_relationship,
   structured_message,
   time_interval_relationship,
   uncertainty_measure_with_unit,
   usage_association,
   versioned_action_request);
END_TYPE;

(* USED FROM (Certification_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE certification_item = SELECT (
   action,
   action_method,
   action_resource,
   analysis_assignment,
   applied_action_method_assignment,
   applied_qualification_type_assignment,
   assembly_component_usage,
   configuration_item,
   evidence,
   interface_connection,
   interface_connector_version,
   interface_definition_connection,
   interface_specification_version,
   organizational_project,
   product,
   product_as_individual,
   product_as_planned,
   product_as_realized,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   product_group,
   product_group_relationship);
END_TYPE;

(* USED FROM (Document_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE document_reference_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   address,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_approval_assignment,
   applied_certification_assignment,
   applied_contract_assignment,
   applied_document_reference,
   applied_effectivity_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_location_representation_assignment,
   applied_organization_assignment,
   applied_person_and_organization_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_type_assignment,
   applied_security_classification_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   approval,
   ascribable_state,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_planned_to_realized,
   breakdown_context,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   class,
   configuration_item,
   contract,
   contract_relationship,
   descriptive_representation_item,
   effectivity,
   environment_definition_view,
   evidence,
   experience,
   experience_type,
   general_property,
   general_property_relationship,
   group,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_design,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_connection,
   item_assumed,
   location,
   measure_representation_item,
   observation,
   observation_consequence,
   observed_environment_view,
   organization,
   organization_type,
   organizational_project,
   person,
   person_type,
   person_type_definition,
   position_in_organization,
   position_in_organization_type,
   probability_generator,
   product,
   product_as_planned,
   product_as_realized,
   product_concept,
   product_concept_context,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_planned_to_realized,
   product_relationship,
   property_definition,
   property_definition_representation,
   qualification_type,
   representation,
   representation_item,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   security_classification,
   selected_item,
   shape_aspect,
   shape_aspect_relationship,
   state_observed,
   state_type,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: document_location_select  *)


(* Pruned unused type: dm_aliasable_item  *)


(* Pruned unused type: dm_approval_item  *)


(* Pruned unused type: dm_attribute_language_item  *)


(* Pruned unused type: dm_contract_item  *)


(* Pruned unused type: dm_date_and_time_item  *)


(* Pruned unused type: dm_date_item  *)


(* Pruned unused type: dm_identification_item  *)


(* Pruned unused type: dm_multi_language_attribute_item  *)


(* Pruned unused type: dm_organization_item  *)


(* Pruned unused type: dm_person_and_organization_item  *)


(* Pruned unused type: dm_security_classification_item  *)


(* Pruned unused type: envelope_approval  *)


(* Pruned unused type: envelope_date  *)


(* Pruned unused type: envelope_date_and_time  *)


(* Pruned unused type: envelope_organization_item  *)


(* Pruned unused type: envelope_person_organization_item  *)

(* USED FROM (External_item_identification_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE external_identification_item = SELECT (
   document_file,
   product_definition);
END_TYPE;


(* Pruned unused type: file_identification_item  *)


(* Pruned unused type: file_version_item  *)


(* Pruned unused type: file_location_select  *)


(* Pruned unused type: ir_approval_item  *)


(* Pruned unused type: ir_contract_item  *)


(* Pruned unused type: ir_date_and_time_item  *)


(* Pruned unused type: ir_date_item  *)


(* Pruned unused type: ir_identification_item  *)


(* Pruned unused type: ir_organization_item  *)


(* Pruned unused type: ir_person_and_organization_item  *)

(* USED FROM (Information_rights_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE ir_usage_item = action_items;
WHERE
  wr1 : NOT ('INFORMATION_RIGHTS_MIM.ACTION' IN TYPEOF(SELF));
  wr2 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_DIRECTIVE' IN TYPEOF(SELF));
  wr3 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_METHOD' IN TYPEOF(SELF));
  wr4 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr5 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_METHOD_RELATIONSHIP' IN TYPEOF(SELF));
  wr6 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_PROPERTY' IN TYPEOF(SELF));
  wr7 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_PROPERTY_REPRESENTATION' IN TYPEOF(SELF));
  wr8 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_RELATIONSHIP' IN TYPEOF(SELF));
  wr9 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_REQUEST_SOLUTION' IN TYPEOF(SELF));
  wr10 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_REQUEST_STATUS' IN TYPEOF(SELF));
  wr11 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_RESOURCE' IN TYPEOF(SELF));
  wr12 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_RESOURCE_RELATIONSHIP' IN TYPEOF(SELF));
  wr13 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_RESOURCE_REQUIREMENT' IN TYPEOF(SELF));
  wr14 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_RESOURCE_REQUIREMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr15 : NOT ('INFORMATION_RIGHTS_MIM.ACTION_STATUS' IN TYPEOF(SELF));
  wr16 : NOT ('INFORMATION_RIGHTS_MIM.ADDRESS' IN TYPEOF(SELF));
  wr17 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_ACTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr18 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_ACTION_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr19 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_ACTION_REQUEST_ASSIGNMENT' IN TYPEOF(SELF));
  wr20 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_APPROVAL_ASSIGNMENT' IN TYPEOF(SELF));
  wr21 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_ATTRIBUTE_CLASSIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr22 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_CLASSIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr23 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_CONTRACT_ASSIGNMENT' IN TYPEOF(SELF));
  wr24 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_DATE_AND_TIME_ASSIGNMENT' IN TYPEOF(SELF));
  wr25 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_DATE_ASSIGNMENT' IN TYPEOF(SELF));
  wr26 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_DESCRIPTION_TEXT_ASSIGNMENT' IN TYPEOF(SELF));
  wr27 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_DOCUMENT_REFERENCE' IN TYPEOF(SELF));
  wr28 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT' IN TYPEOF(SELF));
  wr29 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_EFFECTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr30 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_EVENT_OCCURRENCE_ASSIGNMENT' IN TYPEOF(SELF));
  wr31 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_EXPERIENCE_ASSIGNMENT' IN TYPEOF(SELF));
  wr32 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr33 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr34 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_IDENTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr35 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_LOCATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr36 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_LOCATION_REPRESENTATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr37 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_NAME_ASSIGNMENT' IN TYPEOF(SELF));
  wr38 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr39 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_ORGANIZATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr40 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT' IN TYPEOF(SELF));
  wr41 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr42 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_PERSON_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr43 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_PERSON_TYPE_DEFINITION_ASSIGNMENT' IN TYPEOF(SELF));
  wr44 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_POSITION_IN_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr45 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_POSITION_IN_ORGANIZATION_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr46 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_POSITION_IN_ORGANIZATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr47 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_QUALIFICATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr48 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_STATE_OBSERVED_ASSIGNMENT' IN TYPEOF(SELF));
  wr49 : NOT ('INFORMATION_RIGHTS_MIM.APPLIED_STATE_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr50 : NOT ('INFORMATION_RIGHTS_MIM.APPROVAL' IN TYPEOF(SELF));
  wr51 : NOT ('INFORMATION_RIGHTS_MIM.APPROVAL_PERSON_ORGANIZATION' IN TYPEOF(SELF));
  wr52 : NOT ('INFORMATION_RIGHTS_MIM.APPROVAL_RELATIONSHIP' IN TYPEOF(SELF));
  wr53 : NOT ('INFORMATION_RIGHTS_MIM.APPROVAL_STATUS' IN TYPEOF(SELF));
  wr54 : NOT ('INFORMATION_RIGHTS_MIM.ASCRIBABLE_STATE' IN TYPEOF(SELF));
  wr55 : NOT ('INFORMATION_RIGHTS_MIM.ASCRIBABLE_STATE_RELATIONSHIP' IN TYPEOF(SELF));
  wr56 : NOT ('INFORMATION_RIGHTS_MIM.ASSUMPTION' IN TYPEOF(SELF));
  wr57 : NOT ('INFORMATION_RIGHTS_MIM.ASSUMPTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr58 : NOT ('INFORMATION_RIGHTS_MIM.ASSUMPTION_RELATIONSHIP' IN TYPEOF(SELF));
  wr59 : NOT ('INFORMATION_RIGHTS_MIM.ATTACHMENT_SLOT_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr60 : NOT ('INFORMATION_RIGHTS_MIM.ATTRIBUTE_LANGUAGE_ASSIGNMENT' IN TYPEOF(SELF));
  wr61 : NOT ('INFORMATION_RIGHTS_MIM.BREAKDOWN_CONTEXT' IN TYPEOF(SELF));
  wr62 : NOT ('INFORMATION_RIGHTS_MIM.BREAKDOWN_OF' IN TYPEOF(SELF));
  wr63 : NOT ('INFORMATION_RIGHTS_MIM.CALENDAR_DATE' IN TYPEOF(SELF));
  wr64 : NOT ('INFORMATION_RIGHTS_MIM.CHARACTERIZED_OBJECT' IN TYPEOF(SELF));
  wr65 : NOT ('INFORMATION_RIGHTS_MIM.CLASS' IN TYPEOF(SELF));
  wr66 : NOT ('INFORMATION_RIGHTS_MIM.COLLECTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr67 : NOT ('INFORMATION_RIGHTS_MIM.COLLECTION_MEMBERSHIP' IN TYPEOF(SELF));
  wr68 : NOT ('INFORMATION_RIGHTS_MIM.COMPLEMENT' IN TYPEOF(SELF));
  wr69 : NOT ('INFORMATION_RIGHTS_MIM.COMPOUND_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr70 : NOT ('INFORMATION_RIGHTS_MIM.CONDITION' IN TYPEOF(SELF));
  wr71 : NOT ('INFORMATION_RIGHTS_MIM.CONFIGURATION_DESIGN' IN TYPEOF(SELF));
  wr72 : NOT ('INFORMATION_RIGHTS_MIM.CONFIGURATION_EFFECTIVITY' IN TYPEOF(SELF));
  wr73 : NOT ('INFORMATION_RIGHTS_MIM.CONFIGURATION_ITEM_RELATIONSHIP' IN TYPEOF(SELF));
  wr74 : NOT ('INFORMATION_RIGHTS_MIM.CONTEXT_DEPENDENT_SHAPE_REPRESENTATION' IN TYPEOF(SELF));
  wr75 : NOT ('INFORMATION_RIGHTS_MIM.CONTRACT' IN TYPEOF(SELF));
  wr76 : NOT ('INFORMATION_RIGHTS_MIM.CONTRACT_RELATIONSHIP' IN TYPEOF(SELF));
  wr77 : NOT ('INFORMATION_RIGHTS_MIM.COORDINATED_UNIVERSAL_TIME_OFFSET' IN TYPEOF(SELF));
  wr78 : NOT ('INFORMATION_RIGHTS_MIM.DATE_AND_TIME' IN TYPEOF(SELF));
  wr79 : NOT ('INFORMATION_RIGHTS_MIM.DATE_AND_TIME_ASSIGNMENT' IN TYPEOF(SELF));
  wr80 : NOT ('INFORMATION_RIGHTS_MIM.DATE_ASSIGNMENT' IN TYPEOF(SELF));
  wr81 : NOT ('INFORMATION_RIGHTS_MIM.DERIVED_UNIT' IN TYPEOF(SELF));
  wr82 : NOT ('INFORMATION_RIGHTS_MIM.DERIVED_UNIT_ELEMENT' IN TYPEOF(SELF));
  wr83 : NOT ('INFORMATION_RIGHTS_MIM.DESCRIPTION_TEXT' IN TYPEOF(SELF));
  wr84 : NOT ('INFORMATION_RIGHTS_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr85 : NOT ('INFORMATION_RIGHTS_MIM.EFFECTIVITY' IN TYPEOF(SELF));
  wr86 : NOT ('INFORMATION_RIGHTS_MIM.EFFECTIVITY_RELATIONSHIP' IN TYPEOF(SELF));
  wr87 : NOT ('INFORMATION_RIGHTS_MIM.ENVELOPE' IN TYPEOF(SELF));
  wr88 : NOT ('INFORMATION_RIGHTS_MIM.ENVELOPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr89 : NOT ('INFORMATION_RIGHTS_MIM.ENVIRONMENT_DEFINITION_VIEW' IN TYPEOF(SELF));
  wr90 : NOT ('INFORMATION_RIGHTS_MIM.ENVIRONMENT_PRODUCT_ASSIGNMENT' IN TYPEOF(SELF));
  wr91 : NOT ('INFORMATION_RIGHTS_MIM.EVENT_OCCURRENCE' IN TYPEOF(SELF));
  wr92 : NOT ('INFORMATION_RIGHTS_MIM.EVENT_OCCURRENCE_RELATIONSHIP' IN TYPEOF(SELF));
  wr93 : NOT ('INFORMATION_RIGHTS_MIM.EXECUTED_ACTION' IN TYPEOF(SELF));
  wr94 : NOT ('INFORMATION_RIGHTS_MIM.EXPERIENCE' IN TYPEOF(SELF));
  wr95 : NOT ('INFORMATION_RIGHTS_MIM.EXPERIENCE_TYPE' IN TYPEOF(SELF));
  wr96 : NOT ('INFORMATION_RIGHTS_MIM.EXPERIENCE_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr97 : NOT ('INFORMATION_RIGHTS_MIM.EXTERNAL_SOURCE' IN TYPEOF(SELF));
  wr98 : NOT ('INFORMATION_RIGHTS_MIM.GENERAL_PROPERTY' IN TYPEOF(SELF));
  wr99 : NOT ('INFORMATION_RIGHTS_MIM.GENERAL_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr100 : NOT ('INFORMATION_RIGHTS_MIM.GEOMETRIC_ITEM_SPECIFIC_USAGE' IN TYPEOF(SELF));
  wr101 : NOT ('INFORMATION_RIGHTS_MIM.GROUP' IN TYPEOF(SELF));
  wr102 : NOT ('INFORMATION_RIGHTS_MIM.HIERARCHICAL_INTERFACE_CONNECTION' IN TYPEOF(SELF));
  wr103 : NOT ('INFORMATION_RIGHTS_MIM.IDENTIFICATION_ASSIGNMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr104 : NOT ('INFORMATION_RIGHTS_MIM.IN_ZONE' IN TYPEOF(SELF));
  wr105 : NOT ('INFORMATION_RIGHTS_MIM.INFORMATION_RIGHT' IN TYPEOF(SELF));
  wr106 : NOT ('INFORMATION_RIGHTS_MIM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr107 : NOT ('INFORMATION_RIGHTS_MIM.INTERFACE_CONNECTOR_DESIGN_TO_PLANNED' IN TYPEOF(SELF));
  wr108 : NOT ('INFORMATION_RIGHTS_MIM.INTERFACE_CONNECTOR_DESIGN_TO_REALIZED' IN TYPEOF(SELF));
  wr109 : NOT ('INFORMATION_RIGHTS_MIM.INTERFACE_CONNECTOR_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr110 : NOT ('INFORMATION_RIGHTS_MIM.INTERSECTION' IN TYPEOF(SELF));
  wr111 : NOT ('INFORMATION_RIGHTS_MIM.ITEM_ASSUMED' IN TYPEOF(SELF));
  wr112 : NOT ('INFORMATION_RIGHTS_MIM.ITEM_DEFINED_TRANSFORMATION' IN TYPEOF(SELF));
  wr113 : NOT ('INFORMATION_RIGHTS_MIM.JUSTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr114 : NOT ('INFORMATION_RIGHTS_MIM.JUSTIFICATION_SUPPORT_ASSIGNMENT' IN TYPEOF(SELF));
  wr115 : NOT ('INFORMATION_RIGHTS_MIM.LANGUAGE' IN TYPEOF(SELF));
  wr116 : NOT ('INFORMATION_RIGHTS_MIM.LOCAL_TIME' IN TYPEOF(SELF));
  wr117 : NOT ('INFORMATION_RIGHTS_MIM.LOCATION' IN TYPEOF(SELF));
  wr118 : NOT ('INFORMATION_RIGHTS_MIM.LOCATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr119 : NOT ('INFORMATION_RIGHTS_MIM.MEASURE_QUALIFICATION' IN TYPEOF(SELF));
  wr120 : NOT ('INFORMATION_RIGHTS_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr121 : NOT ('INFORMATION_RIGHTS_MIM.MEASURE_WITH_UNIT' IN TYPEOF(SELF));
  wr122 : NOT ('INFORMATION_RIGHTS_MIM.MESSAGE_RELATIONSHIP' IN TYPEOF(SELF));
  wr123 : NOT ('INFORMATION_RIGHTS_MIM.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT' IN TYPEOF(SELF));
  wr124 : NOT ('INFORMATION_RIGHTS_MIM.NAMED_UNIT' IN TYPEOF(SELF));
  wr125 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVATION' IN TYPEOF(SELF));
  wr126 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVATION_CONSEQUENCE' IN TYPEOF(SELF));
  wr127 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr128 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVED_ENVIRONMENT_PRODUCT_ASSIGNMENT' IN TYPEOF(SELF));
  wr129 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVED_ENVIRONMENT_TO_DEFINITION' IN TYPEOF(SELF));
  wr130 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVED_ENVIRONMENT_TO_DEFINITION_VERSION' IN TYPEOF(SELF));
  wr131 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVED_ENVIRONMENT_TO_DEFINITION_VIEW' IN TYPEOF(SELF));
  wr132 : NOT ('INFORMATION_RIGHTS_MIM.OBSERVED_ENVIRONMENT_VIEW' IN TYPEOF(SELF));
  wr133 : NOT ('INFORMATION_RIGHTS_MIM.ORGANIZATION' IN TYPEOF(SELF));
  wr134 : NOT ('INFORMATION_RIGHTS_MIM.ORGANIZATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr135 : NOT ('INFORMATION_RIGHTS_MIM.ORGANIZATION_TYPE' IN TYPEOF(SELF));
  wr136 : NOT ('INFORMATION_RIGHTS_MIM.ORGANIZATIONAL_ADDRESS' IN TYPEOF(SELF));
  wr137 : NOT ('INFORMATION_RIGHTS_MIM.ORGANIZATIONAL_PROJECT' IN TYPEOF(SELF));
  wr138 : NOT ('INFORMATION_RIGHTS_MIM.ORGANIZATIONAL_PROJECT_RELATIONSHIP' IN TYPEOF(SELF));
  wr139 : NOT ('INFORMATION_RIGHTS_MIM.PERSON' IN TYPEOF(SELF));
  wr140 : NOT ('INFORMATION_RIGHTS_MIM.PERSON_AND_ORGANIZATION' IN TYPEOF(SELF));
  wr141 : NOT ('INFORMATION_RIGHTS_MIM.PERSON_AND_ORGANIZATION_ADDRESS' IN TYPEOF(SELF));
  wr142 : NOT ('INFORMATION_RIGHTS_MIM.PERSON_TYPE' IN TYPEOF(SELF));
  wr143 : NOT ('INFORMATION_RIGHTS_MIM.PERSON_TYPE_DEFINITION' IN TYPEOF(SELF));
  wr144 : NOT ('INFORMATION_RIGHTS_MIM.PERSON_TYPE_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr145 : NOT ('INFORMATION_RIGHTS_MIM.POSITION_IN_ORGANIZATION' IN TYPEOF(SELF));
  wr146 : NOT ('INFORMATION_RIGHTS_MIM.POSITION_IN_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr147 : NOT ('INFORMATION_RIGHTS_MIM.POSITION_IN_ORGANIZATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr148 : NOT ('INFORMATION_RIGHTS_MIM.POSITION_IN_ORGANIZATION_TYPE' IN TYPEOF(SELF));
  wr149 : NOT ('INFORMATION_RIGHTS_MIM.POSITION_IN_ORGANIZATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr150 : NOT ('INFORMATION_RIGHTS_MIM.POWER_SET' IN TYPEOF(SELF));
  wr151 : NOT ('INFORMATION_RIGHTS_MIM.PRECISION_QUALIFIER' IN TYPEOF(SELF));
  wr152 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_CONCEPT' IN TYPEOF(SELF));
  wr153 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_CONCEPT_CONTEXT' IN TYPEOF(SELF));
  wr154 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_DEFINITION_CONTEXT' IN TYPEOF(SELF));
  wr155 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr156 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_DEFINITION_SHAPE' IN TYPEOF(SELF));
  wr157 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_DEFINITION_USAGE' IN TYPEOF(SELF));
  wr158 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_DESIGN_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr159 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr160 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_DESIGN_VIEW_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr161 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_GROUP' IN TYPEOF(SELF));
  wr162 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_GROUP_MEMBERSHIP' IN TYPEOF(SELF));
  wr163 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr164 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr165 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_RELATED_PRODUCT_CATEGORY' IN TYPEOF(SELF));
  wr166 : NOT ('INFORMATION_RIGHTS_MIM.PRODUCT_RELATIONSHIP' IN TYPEOF(SELF));
  wr167 : NOT ('INFORMATION_RIGHTS_MIM.PROPER_SUBSET' IN TYPEOF(SELF));
  wr168 : NOT ('INFORMATION_RIGHTS_MIM.PROPERTY_DEFINITION' IN TYPEOF(SELF));
  wr169 : NOT ('INFORMATION_RIGHTS_MIM.PROPERTY_DEFINITION_REPRESENTATION' IN TYPEOF(SELF));
  wr170 : NOT ('INFORMATION_RIGHTS_MIM.QUALIFICATION_TYPE' IN TYPEOF(SELF));
  wr171 : NOT ('INFORMATION_RIGHTS_MIM.QUALIFICATION_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr172 : NOT ('INFORMATION_RIGHTS_MIM.REPRESENTATION' IN TYPEOF(SELF));
  wr173 : NOT ('INFORMATION_RIGHTS_MIM.REPRESENTATION_CONTEXT' IN TYPEOF(SELF));
  wr174 : NOT ('INFORMATION_RIGHTS_MIM.REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr175 : NOT ('INFORMATION_RIGHTS_MIM.REPRESENTATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr176 : NOT ('INFORMATION_RIGHTS_MIM.REQUIREMENT_SOURCE' IN TYPEOF(SELF));
  wr177 : NOT ('INFORMATION_RIGHTS_MIM.RESOURCE_PROPERTY' IN TYPEOF(SELF));
  wr178 : NOT ('INFORMATION_RIGHTS_MIM.RESOURCE_PROPERTY_REPRESENTATION' IN TYPEOF(SELF));
  wr179 : NOT ('INFORMATION_RIGHTS_MIM.SAME_AS_EXTERNAL_ITEM_ASSIGNMENT' IN TYPEOF(SELF));
  wr180 : NOT ('INFORMATION_RIGHTS_MIM.SAME_MEMBERSHIP' IN TYPEOF(SELF));
  wr181 : NOT ('INFORMATION_RIGHTS_MIM.SATISFIES_REQUIREMENT' IN TYPEOF(SELF));
  wr182 : NOT ('INFORMATION_RIGHTS_MIM.SELECTED_ITEM_ASSIGNMENT' IN TYPEOF(SELF));
  wr183 : NOT ('INFORMATION_RIGHTS_MIM.SHAPE_ASPECT' IN TYPEOF(SELF));
  wr184 : NOT ('INFORMATION_RIGHTS_MIM.SHAPE_ASPECT_RELATIONSHIP' IN TYPEOF(SELF));
  wr185 : NOT ('INFORMATION_RIGHTS_MIM.SHAPE_DEFINITION_REPRESENTATION' IN TYPEOF(SELF));
  wr186 : NOT ('INFORMATION_RIGHTS_MIM.STATE_OBSERVED' IN TYPEOF(SELF));
  wr187 : NOT ('INFORMATION_RIGHTS_MIM.STATE_OBSERVED_ASSIGNMENT' IN TYPEOF(SELF));
  wr188 : NOT ('INFORMATION_RIGHTS_MIM.STATE_OBSERVED_RELATIONSHIP' IN TYPEOF(SELF));
  wr189 : NOT ('INFORMATION_RIGHTS_MIM.STATE_OBSERVED_ROLE' IN TYPEOF(SELF));
  wr190 : NOT ('INFORMATION_RIGHTS_MIM.STATE_TYPE' IN TYPEOF(SELF));
  wr191 : NOT ('INFORMATION_RIGHTS_MIM.STATE_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr192 : NOT ('INFORMATION_RIGHTS_MIM.STATE_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr193 : NOT ('INFORMATION_RIGHTS_MIM.STATE_TYPE_ROLE' IN TYPEOF(SELF));
  wr194 : NOT ('INFORMATION_RIGHTS_MIM.STATECHAR_ACTION_ITEMS' IN TYPEOF(SELF));
  wr195 : NOT ('INFORMATION_RIGHTS_MIM.SUBSET' IN TYPEOF(SELF));
  wr196 : NOT ('INFORMATION_RIGHTS_MIM.TIME_INTERVAL' IN TYPEOF(SELF));
  wr197 : NOT ('INFORMATION_RIGHTS_MIM.TIME_INTERVAL_RELATIONSHIP' IN TYPEOF(SELF));
  wr198 : NOT ('INFORMATION_RIGHTS_MIM.TYPE_QUALIFIER' IN TYPEOF(SELF));
  wr199 : NOT ('INFORMATION_RIGHTS_MIM.UNCERTAINTY_QUALIFIER' IN TYPEOF(SELF));
  wr200 : NOT ('INFORMATION_RIGHTS_MIM.UNION' IN TYPEOF(SELF));
  wr201 : NOT ('INFORMATION_RIGHTS_MIM.USAGE_ASSOCIATION' IN TYPEOF(SELF));
  wr202 : NOT ('INFORMATION_RIGHTS_MIM.VERIFICATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr203 : NOT ('INFORMATION_RIGHTS_MIM.VERSIONED_ACTION_REQUEST' IN TYPEOF(SELF));
END_TYPE;


(* Pruned unused type: message_approval  *)


(* Pruned unused type: message_date  *)


(* Pruned unused type: message_date_time  *)


(* Pruned unused type: message_organization  *)


(* Pruned unused type: message_person_and_organization  *)


(* Pruned unused type: message_security_classification  *)


(* Pruned unused type: message_state  *)

(* USED FROM (Multi_linguism_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE attribute_language_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_relationship,
   action_request_solution,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   address,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_experience_assignment,
   applied_external_identification_assignment,
   applied_location_assignment,
   applied_location_representation_assignment,
   applied_organizational_project_assignment,
   applied_person_type_assignment,
   approval,
   approval_relationship,
   approval_status,
   attribute_value_assignment,
   certification,
   certification_type,
   contract,
   date_role,
   date_time_role,
   document_relationship,
   document_usage_role,
   envelope,
   envelope_relationship,
   event_occurrence,
   evidence,
   executed_action,
   experience_type,
   external_source,
   general_property,
   general_property_relationship,
   group,
   identification_role,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   interface_definition_for,
   justification_group_assignment,
   justification_support_assignment,
   location,
   location_relationship,
   measure_representation_item,
   message_relationship,
   multi_language_attribute_assignment,
   object_role,
   observation,
   observation_consequence,
   organization_relationship,
   organization_type,
   organizational_project,
   organizational_project_relationship,
   organizational_project_role,
   person_and_organization,
   person_type,
   person_type_definition,
   person_type_definition_relationship,
   position_in_organization,
   position_in_organization_assignment,
   position_in_organization_relationship,
   position_in_organization_type,
   product,
   product_as_individual,
   product_as_individual_version,
   product_as_individual_view,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   product_group,
   product_group_relationship,
   product_relationship,
   property_definition,
   property_definition_relationship,
   qualification_type,
   representation,
   representation_item,
   requirement_assignment,
   requirement_source,
   resource_property,
   state_observed,
   state_observed_relationship,
   state_type,
   state_type_relationship,
   structured_message,
   validation,
   verification);
END_TYPE;

(* USED FROM (Multi_linguism_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE multi_language_attribute_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_relationship,
   action_request_solution,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   address,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_experience_assignment,
   applied_external_identification_assignment,
   applied_location_representation_assignment,
   applied_organizational_project_assignment,
   applied_person_type_assignment,
   approval,
   approval_relationship,
   approval_status,
   assembly_component_usage,
   assembly_component_usage_substitute,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   certification_type,
   configuration_item,
   contract,
   date_role,
   date_time_role,
   document_relationship,
   document_usage_role,
   envelope,
   envelope_relationship,
   event_occurrence,
   evidence,
   executed_action,
   experience_type,
   external_source,
   general_property,
   general_property_relationship,
   group,
   identification_role,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   interface_definition_for,
   justification_group_assignment,
   justification_support_assignment,
   location,
   location_relationship,
   measure_representation_item,
   message_relationship,
   object_role,
   observation,
   observation_consequence,
   organization_relationship,
   organization_type,
   organizational_project,
   organizational_project_relationship,
   organizational_project_role,
   person_and_organization,
   person_type,
   person_type_definition,
   person_type_definition_relationship,
   position_in_organization,
   position_in_organization_assignment,
   position_in_organization_relationship,
   position_in_organization_type,
   product,
   product_as_individual,
   product_as_individual_version,
   product_as_individual_view,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_group,
   product_group_relationship,
   product_relationship,
   property_definition,
   property_definition_relationship,
   qualification_type,
   representation,
   representation_item,
   requirement_assignment,
   requirement_source,
   resource_property,
   state_observed,
   state_observed_relationship,
   state_type,
   state_type_relationship,
   structured_message,
   validation,
   verification);
END_TYPE;


(* Pruned unused type: state_observed_role_classification_item  *)

(* USED FROM (State_characterized_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE statechar_action_items = action_items;
WHERE
  wr1 : NOT ('STATE_CHARACTERIZED_MIM.ACTION' IN TYPEOF(SELF));
  wr2 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_DIRECTIVE' IN TYPEOF(SELF));
  wr3 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_METHOD' IN TYPEOF(SELF));
  wr4 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr5 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_METHOD_RELATIONSHIP' IN TYPEOF(SELF));
  wr6 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_PROPERTY' IN TYPEOF(SELF));
  wr7 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_PROPERTY_REPRESENTATION' IN TYPEOF(SELF));
  wr8 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_RELATIONSHIP' IN TYPEOF(SELF));
  wr9 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_REQUEST_SOLUTION' IN TYPEOF(SELF));
  wr10 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_REQUEST_STATUS' IN TYPEOF(SELF));
  wr11 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_RESOURCE' IN TYPEOF(SELF));
  wr12 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_RESOURCE_RELATIONSHIP' IN TYPEOF(SELF));
  wr13 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_RESOURCE_REQUIREMENT' IN TYPEOF(SELF));
  wr14 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_RESOURCE_REQUIREMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr15 : NOT ('STATE_CHARACTERIZED_MIM.ACTION_STATUS' IN TYPEOF(SELF));
  wr16 : NOT ('STATE_CHARACTERIZED_MIM.ADDRESS' IN TYPEOF(SELF));
  wr17 : NOT ('STATE_CHARACTERIZED_MIM.ALTERNATE_PRODUCT_RELATIONSHIP' IN TYPEOF(SELF));
  wr18 : NOT ('STATE_CHARACTERIZED_MIM.ANALYSIS_ASSIGNMENT' IN TYPEOF(SELF));
  wr19 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_ACTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr20 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_ACTION_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr21 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_ACTION_REQUEST_ASSIGNMENT' IN TYPEOF(SELF));
  wr22 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_APPROVAL_ASSIGNMENT' IN TYPEOF(SELF));
  wr23 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_ATTRIBUTE_CLASSIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr24 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_CERTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr25 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_CLASSIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr26 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_CONTRACT_ASSIGNMENT' IN TYPEOF(SELF));
  wr27 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_DATE_AND_TIME_ASSIGNMENT' IN TYPEOF(SELF));
  wr28 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_DATE_ASSIGNMENT' IN TYPEOF(SELF));
  wr29 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_DESCRIPTION_TEXT_ASSIGNMENT' IN TYPEOF(SELF));
  wr30 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_DOCUMENT_REFERENCE' IN TYPEOF(SELF));
  wr31 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT' IN TYPEOF(SELF));
  wr32 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_EFFECTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr33 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_EVENT_OCCURRENCE_ASSIGNMENT' IN TYPEOF(SELF));
  wr34 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_EXPERIENCE_ASSIGNMENT' IN TYPEOF(SELF));
  wr35 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr36 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr37 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_IDENTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr38 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_LOCATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr39 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_LOCATION_REPRESENTATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr40 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_NAME_ASSIGNMENT' IN TYPEOF(SELF));
  wr41 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr42 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_ORGANIZATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr43 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT' IN TYPEOF(SELF));
  wr44 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr45 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_PERSON_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr46 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_PERSON_TYPE_DEFINITION_ASSIGNMENT' IN TYPEOF(SELF));
  wr47 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_POSITION_IN_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr48 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_POSITION_IN_ORGANIZATION_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr49 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_POSITION_IN_ORGANIZATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr50 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_QUALIFICATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr51 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr52 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_STATE_OBSERVED_ASSIGNMENT' IN TYPEOF(SELF));
  wr53 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_STATE_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr54 : NOT ('STATE_CHARACTERIZED_MIM.APPLIED_USAGE_RIGHT' IN TYPEOF(SELF));
  wr55 : NOT ('STATE_CHARACTERIZED_MIM.APPROVAL' IN TYPEOF(SELF));
  wr56 : NOT ('STATE_CHARACTERIZED_MIM.APPROVAL_PERSON_ORGANIZATION' IN TYPEOF(SELF));
  wr57 : NOT ('STATE_CHARACTERIZED_MIM.APPROVAL_RELATIONSHIP' IN TYPEOF(SELF));
  wr58 : NOT ('STATE_CHARACTERIZED_MIM.APPROVAL_STATUS' IN TYPEOF(SELF));
  wr59 : NOT ('STATE_CHARACTERIZED_MIM.ASCRIBABLE_STATE_RELATIONSHIP' IN TYPEOF(SELF));
  wr60 : NOT ('STATE_CHARACTERIZED_MIM.ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(SELF));
  wr61 : NOT ('STATE_CHARACTERIZED_MIM.ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE' IN TYPEOF(SELF));
  wr62 : NOT ('STATE_CHARACTERIZED_MIM.ASSUMPTION' IN TYPEOF(SELF));
  wr63 : NOT ('STATE_CHARACTERIZED_MIM.ASSUMPTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr64 : NOT ('STATE_CHARACTERIZED_MIM.ASSUMPTION_RELATIONSHIP' IN TYPEOF(SELF));
  wr65 : NOT ('STATE_CHARACTERIZED_MIM.ATTACHMENT_SLOT_DESIGN_TO_PLANNED' IN TYPEOF(SELF));
  wr66 : NOT ('STATE_CHARACTERIZED_MIM.ATTACHMENT_SLOT_DESIGN_TO_REALIZED' IN TYPEOF(SELF));
  wr67 : NOT ('STATE_CHARACTERIZED_MIM.ATTACHMENT_SLOT_ON_PRODUCT' IN TYPEOF(SELF));
  wr68 : NOT ('STATE_CHARACTERIZED_MIM.ATTACHMENT_SLOT_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr69 : NOT ('STATE_CHARACTERIZED_MIM.ATTRIBUTE_LANGUAGE_ASSIGNMENT' IN TYPEOF(SELF));
  wr70 : NOT ('STATE_CHARACTERIZED_MIM.BREAKDOWN_CONTEXT' IN TYPEOF(SELF));
  wr71 : NOT ('STATE_CHARACTERIZED_MIM.BREAKDOWN_ELEMENT_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr72 : NOT ('STATE_CHARACTERIZED_MIM.BREAKDOWN_ELEMENT_USAGE' IN TYPEOF(SELF));
  wr73 : NOT ('STATE_CHARACTERIZED_MIM.BREAKDOWN_OF' IN TYPEOF(SELF));
  wr74 : NOT ('STATE_CHARACTERIZED_MIM.CALENDAR_DATE' IN TYPEOF(SELF));
  wr75 : NOT ('STATE_CHARACTERIZED_MIM.CERTIFICATION' IN TYPEOF(SELF));
  wr76 : NOT ('STATE_CHARACTERIZED_MIM.CHARACTERIZED_OBJECT' IN TYPEOF(SELF));
  wr77 : NOT ('STATE_CHARACTERIZED_MIM.CLASS' IN TYPEOF(SELF));
  wr78 : NOT ('STATE_CHARACTERIZED_MIM.COLLECTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr79 : NOT ('STATE_CHARACTERIZED_MIM.COLLECTION_MEMBERSHIP' IN TYPEOF(SELF));
  wr80 : NOT ('STATE_CHARACTERIZED_MIM.COMPLEMENT' IN TYPEOF(SELF));
  wr81 : NOT ('STATE_CHARACTERIZED_MIM.COMPOUND_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr82 : NOT ('STATE_CHARACTERIZED_MIM.CONDITION' IN TYPEOF(SELF));
  wr83 : NOT ('STATE_CHARACTERIZED_MIM.CONFIGURATION_DESIGN' IN TYPEOF(SELF));
  wr84 : NOT ('STATE_CHARACTERIZED_MIM.CONFIGURATION_EFFECTIVITY' IN TYPEOF(SELF));
  wr85 : NOT ('STATE_CHARACTERIZED_MIM.CONFIGURATION_ITEM' IN TYPEOF(SELF));
  wr86 : NOT ('STATE_CHARACTERIZED_MIM.CONFIGURATION_ITEM_RELATIONSHIP' IN TYPEOF(SELF));
  wr87 : NOT ('STATE_CHARACTERIZED_MIM.CONTEXT_DEPENDENT_SHAPE_REPRESENTATION' IN TYPEOF(SELF));
  wr88 : NOT ('STATE_CHARACTERIZED_MIM.CONTRACT' IN TYPEOF(SELF));
  wr89 : NOT ('STATE_CHARACTERIZED_MIM.CONTRACT_RELATIONSHIP' IN TYPEOF(SELF));
  wr90 : NOT ('STATE_CHARACTERIZED_MIM.COORDINATED_UNIVERSAL_TIME_OFFSET' IN TYPEOF(SELF));
  wr91 : NOT ('STATE_CHARACTERIZED_MIM.DATE_AND_TIME' IN TYPEOF(SELF));
  wr92 : NOT ('STATE_CHARACTERIZED_MIM.DATE_AND_TIME_ASSIGNMENT' IN TYPEOF(SELF));
  wr93 : NOT ('STATE_CHARACTERIZED_MIM.DATE_ASSIGNMENT' IN TYPEOF(SELF));
  wr94 : NOT ('STATE_CHARACTERIZED_MIM.DERIVED_UNIT' IN TYPEOF(SELF));
  wr95 : NOT ('STATE_CHARACTERIZED_MIM.DERIVED_UNIT_ELEMENT' IN TYPEOF(SELF));
  wr96 : NOT ('STATE_CHARACTERIZED_MIM.DESCRIPTION_TEXT' IN TYPEOF(SELF));
  wr97 : NOT ('STATE_CHARACTERIZED_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr98 : NOT ('STATE_CHARACTERIZED_MIM.DOCUMENT_FILE' IN TYPEOF(SELF));
  wr99 : NOT ('STATE_CHARACTERIZED_MIM.DOCUMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr100 : NOT ('STATE_CHARACTERIZED_MIM.EFFECTIVITY' IN TYPEOF(SELF));
  wr101 : NOT ('STATE_CHARACTERIZED_MIM.EFFECTIVITY_RELATIONSHIP' IN TYPEOF(SELF));
  wr102 : NOT ('STATE_CHARACTERIZED_MIM.ENVELOPE' IN TYPEOF(SELF));
  wr103 : NOT ('STATE_CHARACTERIZED_MIM.ENVELOPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr104 : NOT ('STATE_CHARACTERIZED_MIM.ENVIRONMENT_DEFINITION_VIEW' IN TYPEOF(SELF));
  wr105 : NOT ('STATE_CHARACTERIZED_MIM.ENVIRONMENT_PRODUCT_ASSIGNMENT' IN TYPEOF(SELF));
  wr106 : NOT ('STATE_CHARACTERIZED_MIM.EVENT_OCCURRENCE' IN TYPEOF(SELF));
  wr107 : NOT ('STATE_CHARACTERIZED_MIM.EVENT_OCCURRENCE_RELATIONSHIP' IN TYPEOF(SELF));
  wr108 : NOT ('STATE_CHARACTERIZED_MIM.EVIDENCE' IN TYPEOF(SELF));
  wr109 : NOT ('STATE_CHARACTERIZED_MIM.EXECUTED_ACTION' IN TYPEOF(SELF));
  wr110 : NOT ('STATE_CHARACTERIZED_MIM.EXPERIENCE' IN TYPEOF(SELF));
  wr111 : NOT ('STATE_CHARACTERIZED_MIM.EXPERIENCE_TYPE' IN TYPEOF(SELF));
  wr112 : NOT ('STATE_CHARACTERIZED_MIM.EXPERIENCE_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr113 : NOT ('STATE_CHARACTERIZED_MIM.EXTERNAL_SOURCE' IN TYPEOF(SELF));
  wr114 : NOT ('STATE_CHARACTERIZED_MIM.GENERAL_PROPERTY' IN TYPEOF(SELF));
  wr115 : NOT ('STATE_CHARACTERIZED_MIM.GENERAL_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr116 : NOT ('STATE_CHARACTERIZED_MIM.GEOMETRIC_ITEM_SPECIFIC_USAGE' IN TYPEOF(SELF));
  wr117 : NOT ('STATE_CHARACTERIZED_MIM.GROUP' IN TYPEOF(SELF));
  wr118 : NOT ('STATE_CHARACTERIZED_MIM.HIERARCHICAL_INTERFACE_CONNECTION' IN TYPEOF(SELF));
  wr119 : NOT ('STATE_CHARACTERIZED_MIM.IDENTIFICATION_ASSIGNMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr120 : NOT ('STATE_CHARACTERIZED_MIM.IN_ZONE' IN TYPEOF(SELF));
  wr121 : NOT ('STATE_CHARACTERIZED_MIM.INFORMATION_RIGHT' IN TYPEOF(SELF));
  wr122 : NOT ('STATE_CHARACTERIZED_MIM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr123 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTION' IN TYPEOF(SELF));
  wr124 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTOR_AS_PLANNED' IN TYPEOF(SELF));
  wr125 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTOR_AS_REALIZED' IN TYPEOF(SELF));
  wr126 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTOR_DESIGN' IN TYPEOF(SELF));
  wr127 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTOR_DESIGN_TO_PLANNED' IN TYPEOF(SELF));
  wr128 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTOR_DESIGN_TO_REALIZED' IN TYPEOF(SELF));
  wr129 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTOR_OCCURRENCE' IN TYPEOF(SELF));
  wr130 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_CONNECTOR_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr131 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_DEFINITION_CONNECTION' IN TYPEOF(SELF));
  wr132 : NOT ('STATE_CHARACTERIZED_MIM.INTERFACE_DEFINITION_FOR' IN TYPEOF(SELF));
  wr133 : NOT ('STATE_CHARACTERIZED_MIM.INTERSECTION' IN TYPEOF(SELF));
  wr134 : NOT ('STATE_CHARACTERIZED_MIM.ITEM_ASSUMED' IN TYPEOF(SELF));
  wr135 : NOT ('STATE_CHARACTERIZED_MIM.ITEM_DEFINED_TRANSFORMATION' IN TYPEOF(SELF));
  wr136 : NOT ('STATE_CHARACTERIZED_MIM.JUSTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr137 : NOT ('STATE_CHARACTERIZED_MIM.JUSTIFICATION_SUPPORT_ASSIGNMENT' IN TYPEOF(SELF));
  wr138 : NOT ('STATE_CHARACTERIZED_MIM.LANGUAGE' IN TYPEOF(SELF));
  wr139 : NOT ('STATE_CHARACTERIZED_MIM.LOCAL_TIME' IN TYPEOF(SELF));
  wr140 : NOT ('STATE_CHARACTERIZED_MIM.LOCATION' IN TYPEOF(SELF));
  wr141 : NOT ('STATE_CHARACTERIZED_MIM.LOCATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr142 : NOT ('STATE_CHARACTERIZED_MIM.MEASURE_QUALIFICATION' IN TYPEOF(SELF));
  wr143 : NOT ('STATE_CHARACTERIZED_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr144 : NOT ('STATE_CHARACTERIZED_MIM.MEASURE_WITH_UNIT' IN TYPEOF(SELF));
  wr145 : NOT ('STATE_CHARACTERIZED_MIM.MESSAGE_RELATIONSHIP' IN TYPEOF(SELF));
  wr146 : NOT ('STATE_CHARACTERIZED_MIM.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT' IN TYPEOF(SELF));
  wr147 : NOT ('STATE_CHARACTERIZED_MIM.NAMED_UNIT' IN TYPEOF(SELF));
  wr148 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVATION' IN TYPEOF(SELF));
  wr149 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVATION_CONSEQUENCE' IN TYPEOF(SELF));
  wr150 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr151 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVED_ENVIRONMENT_PRODUCT_ASSIGNMENT' IN TYPEOF(SELF));
  wr152 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVED_ENVIRONMENT_TO_DEFINITION' IN TYPEOF(SELF));
  wr153 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVED_ENVIRONMENT_TO_DEFINITION_VERSION' IN TYPEOF(SELF));
  wr154 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVED_ENVIRONMENT_TO_DEFINITION_VIEW' IN TYPEOF(SELF));
  wr155 : NOT ('STATE_CHARACTERIZED_MIM.OBSERVED_ENVIRONMENT_VIEW' IN TYPEOF(SELF));
  wr156 : NOT ('STATE_CHARACTERIZED_MIM.ORGANIZATION' IN TYPEOF(SELF));
  wr157 : NOT ('STATE_CHARACTERIZED_MIM.ORGANIZATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr158 : NOT ('STATE_CHARACTERIZED_MIM.ORGANIZATION_TYPE' IN TYPEOF(SELF));
  wr159 : NOT ('STATE_CHARACTERIZED_MIM.ORGANIZATIONAL_ADDRESS' IN TYPEOF(SELF));
  wr160 : NOT ('STATE_CHARACTERIZED_MIM.ORGANIZATIONAL_PROJECT' IN TYPEOF(SELF));
  wr161 : NOT ('STATE_CHARACTERIZED_MIM.ORGANIZATIONAL_PROJECT_RELATIONSHIP' IN TYPEOF(SELF));
  wr162 : NOT ('STATE_CHARACTERIZED_MIM.PERSON' IN TYPEOF(SELF));
  wr163 : NOT ('STATE_CHARACTERIZED_MIM.PERSON_AND_ORGANIZATION' IN TYPEOF(SELF));
  wr164 : NOT ('STATE_CHARACTERIZED_MIM.PERSON_AND_ORGANIZATION_ADDRESS' IN TYPEOF(SELF));
  wr165 : NOT ('STATE_CHARACTERIZED_MIM.PERSON_TYPE' IN TYPEOF(SELF));
  wr166 : NOT ('STATE_CHARACTERIZED_MIM.PERSON_TYPE_DEFINITION' IN TYPEOF(SELF));
  wr167 : NOT ('STATE_CHARACTERIZED_MIM.PERSON_TYPE_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr168 : NOT ('STATE_CHARACTERIZED_MIM.POSITION_IN_ORGANIZATION' IN TYPEOF(SELF));
  wr169 : NOT ('STATE_CHARACTERIZED_MIM.POSITION_IN_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr170 : NOT ('STATE_CHARACTERIZED_MIM.POSITION_IN_ORGANIZATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr171 : NOT ('STATE_CHARACTERIZED_MIM.POSITION_IN_ORGANIZATION_TYPE' IN TYPEOF(SELF));
  wr172 : NOT ('STATE_CHARACTERIZED_MIM.POSITION_IN_ORGANIZATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr173 : NOT ('STATE_CHARACTERIZED_MIM.POWER_SET' IN TYPEOF(SELF));
  wr174 : NOT ('STATE_CHARACTERIZED_MIM.PRECISION_QUALIFIER' IN TYPEOF(SELF));
  wr175 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT' IN TYPEOF(SELF));
  wr176 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_AS_INDIVIDUAL' IN TYPEOF(SELF));
  wr177 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_AS_INDIVIDUAL_VIEW' IN TYPEOF(SELF));
  wr178 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_AS_PLANNED' IN TYPEOF(SELF));
  wr179 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_AS_REALIZED' IN TYPEOF(SELF));
  wr180 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_CONCEPT' IN TYPEOF(SELF));
  wr181 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_CONCEPT_CONTEXT' IN TYPEOF(SELF));
  wr182 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION' IN TYPEOF(SELF));
  wr183 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_CONTEXT' IN TYPEOF(SELF));
  wr184 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_ELEMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr185 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_FORMATION' IN TYPEOF(SELF));
  wr186 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_FORMATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr187 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr188 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr189 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_SHAPE' IN TYPEOF(SELF));
  wr190 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DEFINITION_USAGE' IN TYPEOF(SELF));
  wr191 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DESIGN_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr192 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr193 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_DESIGN_VIEW_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr194 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_GROUP' IN TYPEOF(SELF));
  wr195 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_GROUP_MEMBERSHIP' IN TYPEOF(SELF));
  wr196 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr197 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr198 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_RELATED_PRODUCT_CATEGORY' IN TYPEOF(SELF));
  wr199 : NOT ('STATE_CHARACTERIZED_MIM.PRODUCT_RELATIONSHIP' IN TYPEOF(SELF));
  wr200 : NOT ('STATE_CHARACTERIZED_MIM.PROPER_SUBSET' IN TYPEOF(SELF));
  wr201 : NOT ('STATE_CHARACTERIZED_MIM.PROPERTY_DEFINITION' IN TYPEOF(SELF));
  wr202 : NOT ('STATE_CHARACTERIZED_MIM.PROPERTY_DEFINITION_REPRESENTATION' IN TYPEOF(SELF));
  wr203 : NOT ('STATE_CHARACTERIZED_MIM.QUALIFICATION_TYPE' IN TYPEOF(SELF));
  wr204 : NOT ('STATE_CHARACTERIZED_MIM.QUALIFICATION_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr205 : NOT ('STATE_CHARACTERIZED_MIM.REPRESENTATION' IN TYPEOF(SELF));
  wr206 : NOT ('STATE_CHARACTERIZED_MIM.REPRESENTATION_CONTEXT' IN TYPEOF(SELF));
  wr207 : NOT ('STATE_CHARACTERIZED_MIM.REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr208 : NOT ('STATE_CHARACTERIZED_MIM.REPRESENTATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr209 : NOT ('STATE_CHARACTERIZED_MIM.REQUIREMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr210 : NOT ('STATE_CHARACTERIZED_MIM.REQUIREMENT_SOURCE' IN TYPEOF(SELF));
  wr211 : NOT ('STATE_CHARACTERIZED_MIM.RESOURCE_PROPERTY' IN TYPEOF(SELF));
  wr212 : NOT ('STATE_CHARACTERIZED_MIM.RESOURCE_PROPERTY_REPRESENTATION' IN TYPEOF(SELF));
  wr213 : NOT ('STATE_CHARACTERIZED_MIM.SAME_AS_EXTERNAL_ITEM_ASSIGNMENT' IN TYPEOF(SELF));
  wr214 : NOT ('STATE_CHARACTERIZED_MIM.SAME_MEMBERSHIP' IN TYPEOF(SELF));
  wr215 : NOT ('STATE_CHARACTERIZED_MIM.SATISFIES_REQUIREMENT' IN TYPEOF(SELF));
  wr216 : NOT ('STATE_CHARACTERIZED_MIM.SECURITY_CLASSIFICATION' IN TYPEOF(SELF));
  wr217 : NOT ('STATE_CHARACTERIZED_MIM.SELECTED_ITEM_ASSIGNMENT' IN TYPEOF(SELF));
  wr218 : NOT ('STATE_CHARACTERIZED_MIM.SHAPE_ASPECT' IN TYPEOF(SELF));
  wr219 : NOT ('STATE_CHARACTERIZED_MIM.SHAPE_ASPECT_RELATIONSHIP' IN TYPEOF(SELF));
  wr220 : NOT ('STATE_CHARACTERIZED_MIM.SHAPE_DEFINITION_REPRESENTATION' IN TYPEOF(SELF));
  wr221 : NOT ('STATE_CHARACTERIZED_MIM.STATE_OBSERVED' IN TYPEOF(SELF));
  wr222 : NOT ('STATE_CHARACTERIZED_MIM.STATE_OBSERVED_ASSIGNMENT' IN TYPEOF(SELF));
  wr223 : NOT ('STATE_CHARACTERIZED_MIM.STATE_OBSERVED_RELATIONSHIP' IN TYPEOF(SELF));
  wr224 : NOT ('STATE_CHARACTERIZED_MIM.STATE_OBSERVED_ROLE' IN TYPEOF(SELF));
  wr225 : NOT ('STATE_CHARACTERIZED_MIM.STATE_TYPE' IN TYPEOF(SELF));
  wr226 : NOT ('STATE_CHARACTERIZED_MIM.STATE_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr227 : NOT ('STATE_CHARACTERIZED_MIM.STATE_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr228 : NOT ('STATE_CHARACTERIZED_MIM.STATE_TYPE_ROLE' IN TYPEOF(SELF));
  wr229 : NOT ('STATE_CHARACTERIZED_MIM.STATECHAR_ACTION_ITEMS' IN TYPEOF(SELF));
  wr230 : NOT ('STATE_CHARACTERIZED_MIM.STRUCTURED_MESSAGE' IN TYPEOF(SELF));
  wr231 : NOT ('STATE_CHARACTERIZED_MIM.SUBSET' IN TYPEOF(SELF));
  wr232 : NOT ('STATE_CHARACTERIZED_MIM.TASK_ELEMENT' IN TYPEOF(SELF));
  wr233 : NOT ('STATE_CHARACTERIZED_MIM.TASK_METHOD' IN TYPEOF(SELF));
  wr234 : NOT ('STATE_CHARACTERIZED_MIM.TASK_METHOD_VERSION' IN TYPEOF(SELF));
  wr235 : NOT ('STATE_CHARACTERIZED_MIM.TASK_OBJECTIVE' IN TYPEOF(SELF));
  wr236 : NOT ('STATE_CHARACTERIZED_MIM.TIME_INTERVAL' IN TYPEOF(SELF));
  wr237 : NOT ('STATE_CHARACTERIZED_MIM.TIME_INTERVAL_RELATIONSHIP' IN TYPEOF(SELF));
  wr238 : NOT ('STATE_CHARACTERIZED_MIM.TYPE_QUALIFIER' IN TYPEOF(SELF));
  wr239 : NOT ('STATE_CHARACTERIZED_MIM.UNCERTAINTY_QUALIFIER' IN TYPEOF(SELF));
  wr240 : NOT ('STATE_CHARACTERIZED_MIM.UNION' IN TYPEOF(SELF));
  wr241 : NOT ('STATE_CHARACTERIZED_MIM.USAGE_ASSOCIATION' IN TYPEOF(SELF));
  wr242 : NOT ('STATE_CHARACTERIZED_MIM.VALIDATION' IN TYPEOF(SELF));
  wr243 : NOT ('STATE_CHARACTERIZED_MIM.VERIFICATION' IN TYPEOF(SELF));
  wr244 : NOT ('STATE_CHARACTERIZED_MIM.VERIFICATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr245 : NOT ('STATE_CHARACTERIZED_MIM.VERSIONED_ACTION_REQUEST' IN TYPEOF(SELF));
END_TYPE;


(* Pruned unused type: statechar_action_method_items  *)


(* Pruned unused type: statechar_attribute_classification_item  *)


(* Pruned unused type: statechar_attribute_language_item  *)


(* Pruned unused type: statechar_date_and_time_item  *)


(* Pruned unused type: statechar_date_item  *)


(* Pruned unused type: statechar_identification_item  *)


(* Pruned unused type: statechar_multi_language_attribute_item  *)


(* Pruned unused type: statechar_organization_item  *)


(* Pruned unused type: statechar_person_and_organization_item  *)


(* Pruned unused type: state_definition_action_items  *)


(* Pruned unused type: state_definition_classification_item  *)


(* Pruned unused type: state_definition_identification_item  *)


(* Pruned unused type: state_observed_classification_item  *)

(* USED FROM (State_observed_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE state_observed_of_item = SELECT (
   action,
   action_directive,
   action_method,
   action_property,
   action_relationship,
   action_resource,
   action_resource_relationship,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_external_identification_assignment,
   approval,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   configuration_item,
   contract,
   document_file,
   environment_definition_view,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_definition,
   interface_connector_design,
   interface_connector_occurrence,
   interface_connector_version,
   interface_definition_connection,
   interface_specification_definition,
   interface_specification_version,
   location,
   observed_environment_view,
   organization,
   organizational_project,
   person_and_organization,
   product,
   product_as_individual,
   product_as_individual_view,
   product_as_planned,
   product_as_realized,
   product_category,
   product_concept,
   product_definition,
   product_definition_formation,
   product_definition_group_assignment,
   product_definition_relationship,
   product_group,
   product_in_attachment_slot,
   security_classification,
   structured_message,
   task_method_version,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: ap239_props_approval_item  *)


(* Pruned unused type: ap239_props_attribute_classification_item  *)


(* Pruned unused type: ap239_props_attribute_language_item  *)


(* Pruned unused type: ap239_props_classification_item  *)


(* Pruned unused type: ap239_props_date_and_time_item  *)


(* Pruned unused type: ap239_props_date_item  *)


(* Pruned unused type: ap239_props_document_reference_item  *)


(* Pruned unused type: ap239_props_identification_item  *)


(* Pruned unused type: ap239_props_multi_language_attribute_item  *)


(* Pruned unused type: ap239_props_organization_item  *)


(* Pruned unused type: ap239_props_person_and_organization_item  *)


(* Pruned unused type: just_state_observed_of_item  *)


(* Pruned unused type: just_state_type_of_item  *)

(* USED FROM (Justification_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE justification_item = SELECT (
   action,
   action_method,
   action_method_relationship,
   action_property,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_approval_assignment,
   applied_classification_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_location_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   approval,
   ascribable_state,
   assembly_component_usage,
   descriptive_representation_item,
   document_relationship,
   effectivity,
   evidence,
   general_property,
   general_property_relationship,
   group,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   measure_representation_item,
   product,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   property_definition,
   representation,
   resource_property,
   state_type_assignment,
   structured_message,
   validation,
   verification);
END_TYPE;

(* USED FROM (Justification_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE justification_support_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_relationship,
   action_property,
   action_request_solution,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_location_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   approval,
   ascribable_state,
   assembly_component_usage,
   certification,
   contract,
   descriptive_representation_item,
   document_relationship,
   effectivity,
   event_occurrence,
   evidence,
   general_property,
   general_property_relationship,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   location,
   measure_representation_item,
   observation,
   organizational_project,
   product,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   property_definition,
   resource_property,
   state_observed,
   state_observed_relationship,
   state_type,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: product_as_individual_identification_item  *)


(* Pruned unused type: requirement_aliasable_item  *)


(* Pruned unused type: requirement_certification_item  *)


(* Pruned unused type: requirement_classification_item  *)


(* Pruned unused type: requirement_collection_assignment_groupable_item  *)


(* Pruned unused type: requirement_collection_membership_groupable_item  *)


(* Pruned unused type: requirement_contract_item  *)


(* Pruned unused type: requirement_document_reference_item  *)


(* Pruned unused type: requirement_effectivity_item  *)


(* Pruned unused type: requirement_event_occurrence_item  *)


(* Pruned unused type: requirement_ir_usage_item  *)


(* Pruned unused type: requirement_mri_approval_item  *)


(* Pruned unused type: requirement_mri_attribute_language_item  *)


(* Pruned unused type: requirement_mri_date_and_time_item  *)


(* Pruned unused type: requirement_mri_date_item  *)


(* Pruned unused type: requirement_mri_identification_item  *)


(* Pruned unused type: requirement_mri_multi_language_attribute_item  *)


(* Pruned unused type: requirement_mri_organization_item  *)


(* Pruned unused type: requirement_mri_person_and_organization_item  *)


(* Pruned unused type: requirement_project_item  *)


(* Pruned unused type: requirement_representation_proxy_select  *)


(* Pruned unused type: requirement_same_as_item  *)


(* Pruned unused type: requirement_security_classification_item  *)


(* Pruned unused type: rm_requirement_assigned_item  *)


(* Pruned unused type: rm_requirement_source_item  *)


(* Pruned unused type: condition_evaluation_action_items  *)


(* Pruned unused type: condition_evaluation_classification_item  *)


(* Pruned unused type: condition_evaluation_groupable_item  *)


(* Pruned unused type: condition_evaluation_name_item  *)


(* Pruned unused type: condition_action_method_items  *)


(* Pruned unused type: condition_classification_item  *)


(* Pruned unused type: condition_name_item  *)

(* USED FROM (Effectivity_application_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE effectivity_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_assignment,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_resource_relationship,
   action_resource_requirement_relationship,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_approval_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_external_identification_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_organization_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_usage_right,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_as_planned,
   attachment_slot_as_realized,
   attachment_slot_design,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   configuration_item,
   date_and_time_assignment,
   date_assignment,
   document_file,
   document_relationship,
   document_type,
   evidence,
   group,
   identification_assignment_relationship,
   in_zone,
   interface_connection,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_for,
   item_assumed,
   justification_group_assignment,
   justification_support_assignment,
   make_from_usage_option,
   multi_language_attribute_assignment,
   organization_relationship,
   organizational_address,
   person_and_organization,
   person_and_organization_address,
   person_type_definition_relationship,
   product,
   product_as_individual,
   product_as_individual_version,
   product_as_individual_view,
   product_definition,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_definition_usage,
   product_design_to_individual,
   product_design_version_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_in_attachment_slot,
   product_planned_to_realized,
   product_relationship,
   property_definition,
   property_definition_representation,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   selected_item_assignment,
   state_type_assignment,
   state_type_relationship,
   validation,
   verification,
   verification_relationship);
END_TYPE;


(* Pruned unused type: connection_items  *)


(* Pruned unused type: interface_component_item  *)


(* Pruned unused type: plcs_action_items  *)


(* Pruned unused type: interface_connector_on_item  *)

(* USED FROM (Product_breakdown_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE product_definition_or_breakdown_element_usage = SELECT (
   product_definition,
   product_definition_usage);
END_TYPE;

(* USED FROM (Product_breakdown_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE product_definition_or_product_definition_relationship = SELECT (
   assembly_component_usage,
   interface_connector_occurrence,
   product_definition,
   product_definition_usage,
   product_group);
END_TYPE;


(* Pruned unused type: project_as_date_and_time_item  *)


(* Pruned unused type: project_as_date_item  *)


(* Pruned unused type: project_event_occurrence_item  *)

(* USED FROM (Project_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE project_item = SELECT (
   action,
   action_method,
   action_method_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   configuration_item,
   general_property,
   group,
   product,
   product_concept,
   product_definition_formation,
   product_group,
   product_group_membership,
   product_group_relationship);
END_TYPE;

(* USED FROM (Requirement_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_assigned_item = SELECT (
   action_method,
   action_resource_requirement,
   alternate_product_relationship,
   applied_action_method_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   assembly_component_usage,
   assembly_component_usage_substitute,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   configuration_item,
   interface_connector_occurrence,
   organizational_project,
   product,
   product_as_individual_version,
   product_as_planned,
   product_as_realized,
   product_definition,
   product_definition_formation,
   product_definition_group_assignment,
   product_in_attachment_slot,
   state_observed,
   state_type,
   validation,
   verification,
   versioned_action_request);
END_TYPE;

(* USED FROM (Requirement_assignment_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE requirement_satisfaction_item = SELECT (
   requirement_assigned_item);
END_TYPE;

(* USED FROM (Requirement_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE requirement_source_item = SELECT (
   action_method,
   applied_action_method_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   interface_connector_occurrence,
   product,
   product_as_individual_version,
   product_definition,
   product_definition_formation,
   state_observed,
   state_type,
   validation,
   verification);
END_TYPE;


(* Pruned unused type: requirement_identification_and_version_identification_item  *)

(* USED FROM (Selected_item_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE selected_item_context_items = SELECT (
   configuration_item,
   contract,
   organizational_project,
   product,
   product_as_individual,
   product_as_individual_version,
   product_concept);
END_TYPE;

(* USED FROM (Selected_item_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE selected_item_select = SELECT (
   interface_connection,
   interface_connector_definition,
   interface_connector_occurrence,
   interface_definition_connection,
   product,
   product_definition_formation);
END_TYPE;

(* USED FROM (Shape_property_assignment_mim); *)
TYPE geometric_item_specific_usage_select = SELECT
   (shape_aspect,
    shape_aspect_relationship);
END_TYPE; 

(* Pruned unused type: in_zone_groupable_item  *)

(* USED FROM (Location_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE location_item = SELECT (
   action,
   action_method,
   action_request_solution,
   action_resource,
   action_resource_requirement,
   applied_action_assignment,
   applied_action_method_assignment,
   assembly_component_usage,
   document_file,
   environment_definition_view,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   observed_environment_view,
   organization,
   organization_type,
   organizational_project,
   person,
   person_and_organization,
   person_type,
   person_type_definition,
   position_in_organization,
   position_in_organization_type,
   product,
   product_definition,
   product_definition_formation,
   product_definition_relationship,
   product_group);
END_TYPE;


(* Pruned unused type: observation_approval  *)


(* Pruned unused type: observation_classification  *)


(* Pruned unused type: observation_consequence_name_item  *)


(* Pruned unused type: observation_consequence_role  *)


(* Pruned unused type: observation_date  *)


(* Pruned unused type: observation_date_and_time  *)


(* Pruned unused type: observation_identification_item  *)


(* Pruned unused type: observation_organization  *)


(* Pruned unused type: observation_person_and_organization  *)


(* Pruned unused type: observation_recorder_item  *)


(* Pruned unused type: observed_context_item  *)

(* USED FROM (Product_group_mim); *)
TYPE attribute_select = SELECT
   (product_group_context, 
    product_group_purpose);
END_TYPE; 

(* Pruned unused type: product_group_classification_item  *)


(* Pruned unused type: product_group_effectivity_item  *)

(* USED FROM (Product_group_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE product_select = SELECT (
   product,
   product_as_individual,
   product_concept,
   product_definition_formation,
   product_group);
END_TYPE;

(* USED FROM (Group_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE groupable_item = SELECT (
   action,
   action_directive,
   action_method,
   action_method_assignment,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_request_solution,
   action_request_status,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   action_status,
   address,
   alternate_product_relationship,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_action_request_assignment,
   applied_approval_assignment,
   applied_attribute_classification_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_description_text_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_effectivity_assignment,
   applied_event_occurrence_assignment,
   applied_experience_assignment,
   applied_external_identification_assignment,
   applied_group_assignment,
   applied_identification_assignment,
   applied_location_assignment,
   applied_location_representation_assignment,
   applied_name_assignment,
   applied_organization_assignment,
   applied_organization_type_assignment,
   applied_organizational_project_assignment,
   applied_person_and_organization_assignment,
   applied_person_type_assignment,
   applied_person_type_definition_assignment,
   applied_position_in_organization_assignment,
   applied_position_in_organization_group_assignment,
   applied_position_in_organization_type_assignment,
   applied_qualification_type_assignment,
   applied_security_classification_assignment,
   applied_usage_right,
   approval,
   approval_person_organization,
   approval_relationship,
   approval_status,
   ascribable_state,
   ascribable_state_relationship,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   assumption_assignment,
   assumption_relationship,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   attribute_language_assignment,
   breakdown_context,
   breakdown_element_group_assignment,
   breakdown_of,
   calendar_date,
   certification,
   characterized_object,
   class,
   collection_assignment,
   collection_membership,
   complement,
   compound_representation_item,
   condition,
   configuration_design,
   configuration_effectivity,
   configuration_item,
   configuration_item_relationship,
   context_dependent_shape_representation,
   contract,
   contract_relationship,
   coordinated_universal_time_offset,
   date_and_time,
   date_and_time_assignment,
   date_assignment,
   derived_unit,
   derived_unit_element,
   description_text,
   document_file,
   document_relationship,
   effectivity,
   effectivity_relationship,
   envelope,
   envelope_relationship,
   environment_product_assignment,
   event_occurrence,
   event_occurrence_relationship,
   evidence,
   executed_action,
   experience,
   experience_type,
   experience_type_relationship,
   external_source,
   general_property,
   general_property_relationship,
   geometric_item_specific_usage,
   group,
   identification_assignment_relationship,
   in_zone,
   information_right,
   information_usage_right,
   interface_connection,
   interface_connector_definition,
   interface_connector_design_to_planned,
   interface_connector_design_to_realized,
   interface_connector_occurrence,
   interface_connector_planned_to_realized,
   interface_definition_connection,
   interface_definition_for,
   intersection,
   item_assumed,
   item_defined_transformation,
   justification_assignment,
   justification_support_assignment,
   language,
   local_time,
   location,
   location_relationship,
   measure_qualification,
   measure_representation_item,
   measure_with_unit,
   message_relationship,
   multi_language_attribute_assignment,
   named_unit,
   observation,
   observation_consequence,
   observation_relationship,
   observed_environment_product_assignment,
   observed_environment_to_definition,
   observed_environment_to_definition_version,
   observed_environment_to_definition_view,
   organization,
   organization_relationship,
   organization_type,
   organizational_address,
   organizational_project,
   organizational_project_relationship,
   person,
   person_and_organization,
   person_and_organization_address,
   person_type,
   person_type_definition,
   person_type_definition_relationship,
   position_in_organization,
   position_in_organization_assignment,
   position_in_organization_relationship,
   position_in_organization_type,
   position_in_organization_type_assignment,
   power_set,
   precision_qualifier,
   product,
   product_concept,
   product_concept_context,
   product_definition,
   product_definition_context,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_group_assignment,
   product_definition_relationship,
   product_definition_shape,
   product_definition_usage,
   product_design_to_individual,
   product_design_version_to_individual,
   product_design_view_to_individual,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_planned_to_realized,
   product_relationship,
   proper_subset,
   property_definition,
   property_definition_representation,
   qualification_type,
   qualification_type_relationship,
   representation,
   representation_context,
   representation_item,
   representation_relationship,
   requirement_assignment,
   requirement_source,
   resource_property,
   resource_property_representation,
   same_as_external_item_assignment,
   same_membership,
   satisfies_requirement,
   security_classification,
   selected_item_assignment,
   shape_aspect,
   shape_aspect_relationship,
   shape_definition_representation,
   state_observed,
   state_observed_assignment,
   state_observed_relationship,
   state_observed_role,
   state_type,
   state_type_assignment,
   state_type_relationship,
   state_type_role,
   structured_message,
   subset,
   task_objective,
   time_interval,
   time_interval_relationship,
   type_qualifier,
   uncertainty_qualifier,
   union,
   usage_association,
   validation,
   verification,
   verification_relationship,
   versioned_action_request);
   WHERE
  WR1: NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GROUP' IN TYPEOF(SELF));
END_TYPE; 
(* USED FROM (Activity_method_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE action_method_items = SELECT (
   action,
   action_actual,
   action_method,
   action_method_assignment,
   action_method_relationship,
   action_property,
   action_property_representation,
   action_relationship,
   action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship,
   analysis_assignment,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_approval_assignment,
   applied_certification_assignment,
   applied_classification_assignment,
   applied_contract_assignment,
   applied_date_and_time_assignment,
   applied_date_assignment,
   applied_document_reference,
   applied_document_usage_constraint_assignment,
   applied_identification_assignment,
   applied_location_representation_assignment,
   applied_organization_assignment,
   applied_person_and_organization_assignment,
   applied_state_observed_assignment,
   applied_state_type_assignment,
   approval,
   assembly_component_usage,
   breakdown_element_usage,
   calendar_date,
   configuration_item,
   contract,
   date_and_time,
   document_file,
   effectivity,
   envelope,
   environment_definition_view,
   event_occurrence,
   evidence,
   general_property,
   group,
   hierarchical_interface_connection,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   location,
   observation_consequence,
   observed_environment_view,
   organization,
   organization_role,
   organization_type,
   organizational_project,
   person,
   person_and_organization,
   person_type,
   person_type_definition,
   position_in_organization,
   position_in_organization_type,
   product,
   product_as_individual,
   product_as_individual_version,
   product_as_individual_view,
   product_concept,
   product_definition,
   product_definition_element_relationship,
   product_definition_formation,
   product_definition_formation_relationship,
   product_definition_relationship,
   product_group,
   product_group_membership,
   product_group_relationship,
   product_related_product_category,
   property_definition,
   property_definition_representation,
   representation,
   resource_property,
   resource_property_representation,
   state_observed,
   state_observed_relationship,
   state_type,
   state_type_relationship,
   structured_message,
   validation,
   verification,
   versioned_action_request);
END_TYPE;

(* USED FROM (Name_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE name_item = SELECT (
   applied_action_assignment,
   applied_action_method_assignment,
   external_class_library,
   observation_consequence);
END_TYPE;

(* USED FROM (Foundation_state_definition_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE state_type_of_item = SELECT (
   action,
   action_directive,
   action_method,
   action_property,
   action_relationship,
   action_resource,
   action_resource_relationship,
   alternate_product_relationship,
   applied_action_assignment,
   applied_action_method_assignment,
   applied_external_identification_assignment,
   approval,
   assembly_component_usage,
   assembly_component_usage_substitute,
   assumption,
   attachment_slot_design_to_planned,
   attachment_slot_design_to_realized,
   attachment_slot_on_product,
   attachment_slot_planned_to_realized,
   breakdown_element_group_assignment,
   breakdown_element_usage,
   certification,
   configuration_item,
   contract,
   document_file,
   environment_definition_view,
   executed_action,
   interface_connection,
   interface_connector_as_planned,
   interface_connector_as_realized,
   interface_connector_definition,
   interface_connector_design,
   interface_connector_occurrence,
   interface_connector_version,
   interface_definition_connection,
   interface_specification_definition,
   interface_specification_version,
   location,
   organization,
   organizational_project,
   person_and_organization,
   product,
   product_as_individual,
   product_as_individual_view,
   product_as_planned,
   product_as_realized,
   product_category,
   product_concept,
   product_definition,
   product_definition_formation,
   product_definition_group_assignment,
   product_definition_relationship,
   product_group,
   product_in_attachment_slot,
   security_classification,
   structured_message,
   versioned_action_request);
END_TYPE;


(* Pruned unused type: location_classification_item  *)

(* USED FROM (Location_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE location_representation_item = SELECT (
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   organizational_address,
   person_and_organization_address,
   product,
   product_definition_formation);
END_TYPE;

(* USED FROM (product_property_definition_schema); *)
  TYPE characterized_definition = SELECT (characterized_object, characterized_product_definition, shape_definition);
  END_TYPE;
(* USED FROM (product_property_representation_schema); *)
  TYPE represented_definition = SELECT (general_property, property_definition, property_definition_relationship, shape_aspect, shape_aspect_relationship);
  END_TYPE;
(* USED FROM (basic_attribute_schema); *)
  TYPE id_attribute_select = SELECT (action, address, product_category, property_definition, shape_aspect, shape_aspect_relationship, application_context, group, organizational_project, representation);
  END_TYPE;
(* USED FROM (basic_attribute_schema); *)
(* This SELECT set has been pruned. *)
TYPE name_attribute_select = SELECT (
   action_request_solution,
   address,
   configuration_design,
   context_dependent_shape_representation,
   derived_unit,
   effectivity,
   person_and_organization,
   product_definition,
   property_definition_representation);
END_TYPE;


(* Pruned unused type: resource_item_classification_item  *)

(* USED FROM (systems_engineering_representation_schema); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE representation_proxy_select = SELECT (
   action_method,
   product_definition_formation,
   state_type,
   state_type_relationship);
END_TYPE;

(* USED FROM (external_reference_schema); *)
  TYPE message = STRING;
  END_TYPE;
(* USED FROM (external_reference_schema); *)
  TYPE source_item = SELECT (identifier, message);
  END_TYPE;

(* Pruned unused type: system_identification_item  *)

(* USED FROM (basic_attribute_schema); *)
  TYPE role_select = SELECT (action_assignment, action_request_assignment, approval_assignment, approval_date_time, certification_assignment, contract_assignment, document_reference, effectivity_assignment, external_referent_assignment, group_assignment, name_assignment, security_classification_assignment);
  END_TYPE;
(* USED FROM (basic_attribute_schema); *)
  TYPE description_attribute_select = SELECT (action_request_solution, application_context, approval_role, configuration_design, date_role, date_time_role, context_dependent_shape_representation, effectivity, external_source, organization_role, person_and_organization_role, person_and_organization, person_role, property_definition_representation, representation, time_role);
  END_TYPE;

(* Pruned unused type: actchar_ap239_mri_attribute_classification_item  *)


(* Pruned unused type: actchar_ap239_mri_classification_item  *)


(* Pruned unused type: actchar_mri_approval_item  *)


(* Pruned unused type: actchar_mri_attribute_language_item  *)


(* Pruned unused type: actchar_mri_date_and_time_item  *)


(* Pruned unused type: actchar_mri_date_item  *)


(* Pruned unused type: actchar_mri_identification_item  *)


(* Pruned unused type: actchar_mri_multi_language_attribute_item  *)


(* Pruned unused type: actchar_mri_organization_item  *)


(* Pruned unused type: actchar_mri_person_and_organization_item  *)


(* Pruned unused type: mri_aliasable_item  *)


(* Pruned unused type: mri_approval_item  *)


(* Pruned unused type: mri_attribute_language_item  *)


(* Pruned unused type: mri_date_and_time_item  *)


(* Pruned unused type: mri_date_item  *)


(* Pruned unused type: mri_identification_item  *)


(* Pruned unused type: mri_multi_language_attribute_item  *)


(* Pruned unused type: mri_organization_item  *)


(* Pruned unused type: mri_person_and_organization_item  *)


(* Pruned unused type: actmethchar_ap239_mri_attribute_classification_item  *)


(* Pruned unused type: actmethchar_ap239_mri_classification_item  *)


(* Pruned unused type: actmethchar_mri_approval_item  *)


(* Pruned unused type: actmethchar_mri_attribute_language_item  *)


(* Pruned unused type: actmethchar_mri_date_and_time_item  *)


(* Pruned unused type: actmethchar_mri_date_item  *)


(* Pruned unused type: actmethchar_mri_identification_item  *)


(* Pruned unused type: actmethchar_mri_multi_language_attribute_item  *)


(* Pruned unused type: actmethchar_mri_organization_item  *)


(* Pruned unused type: actmethchar_mri_person_and_organization_item  *)


(* Pruned unused type: action_method_implementation_groupable_item  *)


(* Pruned unused type: action_method_implementation_identification_item  *)


(* Pruned unused type: activity_method_implementation_classification_item  *)


(* Pruned unused type: tsr_action_method_items  *)


(* Pruned unused type: tsr_approval_item  *)


(* Pruned unused type: tsr_attribute_classification_item  *)


(* Pruned unused type: tsr_attribute_language_item  *)


(* Pruned unused type: tsr_certification_item  *)


(* Pruned unused type: tsr_classification_item  *)


(* Pruned unused type: tsr_condition_action_method_items  *)


(* Pruned unused type: tsr_contract_item  *)


(* Pruned unused type: tsr_date_and_time_item  *)


(* Pruned unused type: tsr_date_item  *)


(* Pruned unused type: tsr_document_reference_item  *)


(* Pruned unused type: tsr_effectivity_item  *)


(* Pruned unused type: tsr_identification_item  *)


(* Pruned unused type: tsr_ir_usage_right_item  *)


(* Pruned unused type: tsr_justification_item  *)


(* Pruned unused type: tsr_justification_support_item  *)


(* Pruned unused type: tsr_location_item  *)


(* Pruned unused type: tsr_location_representation_item  *)


(* Pruned unused type: tsr_multi_language_attribute_item  *)


(* Pruned unused type: tsr_organization_item  *)


(* Pruned unused type: tsr_person_and_organization_item  *)


(* Pruned unused type: tsr_person_type_item  *)


(* Pruned unused type: tsr_position_in_organization_group_item  *)


(* Pruned unused type: tsr_position_in_organization_item  *)


(* Pruned unused type: tsr_position_in_organization_type_item  *)


(* Pruned unused type: tsr_project_item  *)


(* Pruned unused type: tsr_requirement_assigned_item  *)


(* Pruned unused type: tsr_requirement_source_item  *)


(* Pruned unused type: tsr_resource_assignment_items  *)


(* Pruned unused type: tsr_security_classification_item  *)


(* Pruned unused type: tsr_state_observed_of_item  *)


(* Pruned unused type: tsr_state_type_of_item  *)


(* Pruned unused type: location_assignment_approval_item  *)


(* Pruned unused type: location_assignment_attribute_language_item  *)


(* Pruned unused type: location_assignment_classification_item  *)


(* Pruned unused type: location_assignment_date_and_time_item  *)


(* Pruned unused type: location_assignment_date_item  *)


(* Pruned unused type: location_assignment_effectivity_item  *)


(* Pruned unused type: location_assignment_organization_item  *)


(* Pruned unused type: location_assignment_person_and_organization_item  *)

(* USED FROM (Organization_type_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE organization_type_item = SELECT (
   organization);
END_TYPE;


(* Pruned unused type: position_in_organization_classification_item  *)

(* USED FROM (Position_in_organization_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE position_in_organization_group_assignment_item = SELECT (
   position_in_organization_assignment);
END_TYPE;

(* USED FROM (Position_in_organization_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE position_in_organization_group_item = SELECT (
   applied_organization_assignment,
   applied_person_and_organization_assignment,
   approval_person_organization,
   product,
   product_definition,
   product_definition_formation);
END_TYPE;

(* USED FROM (Position_in_organization_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE position_in_organization_item = SELECT (
   address,
   applied_organization_assignment,
   applied_person_and_organization_assignment,
   approval_person_organization,
   organization,
   organizational_project,
   person,
   product,
   product_definition,
   product_definition_formation);
END_TYPE;

(* USED FROM (Position_in_organization_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE position_in_organization_type_item = SELECT (
   applied_organization_assignment,
   applied_person_and_organization_assignment,
   approval_person_organization,
   person_type,
   position_in_organization,
   product,
   product_definition,
   product_definition_formation);
END_TYPE;

(* USED FROM (Position_in_organization_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE project_group_name_item = SELECT (
   applied_position_in_organization_group_assignment);
END_TYPE;


(* Pruned unused type: probability_distribution_item  *)


(* Pruned unused type: required_resource_approval_item  *)


(* Pruned unused type: required_resource_attribute_classification_item  *)


(* Pruned unused type: required_resource_attribute_language_item  *)


(* Pruned unused type: required_resource_condition_action_method_items  *)


(* Pruned unused type: required_resource_date_and_time_item  *)


(* Pruned unused type: required_resource_date_item  *)


(* Pruned unused type: required_resource_identification_item  *)


(* Pruned unused type: required_resource_justification_item  *)


(* Pruned unused type: required_resource_multi_language_attribute_item  *)


(* Pruned unused type: required_resource_organization_item  *)


(* Pruned unused type: required_resource_person_and_organization_item  *)


(* Pruned unused type: required_resource_requirement_assigned_item  *)


(* Pruned unused type: task_classification_item  *)


(* Pruned unused type: task_specification_groupable_item  *)


(* Pruned unused type: task_state_items  *)

(* USED FROM (Type_of_person_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE person_definition_item = SELECT (
   experience_type,
   qualification_type);
END_TYPE;


(* Pruned unused type: person_type_definition_relationship_classification_item  *)

(* USED FROM (Type_of_person_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE person_type_item = SELECT (
   analysis_assignment,
   group,
   person,
   person_and_organization,
   position_in_organization,
   position_in_organization_type);
END_TYPE;


(* Pruned unused type: work_output_approval_item  *)


(* Pruned unused type: work_output_attribute_classification_item  *)


(* Pruned unused type: work_output_attribute_language_item  *)


(* Pruned unused type: work_output_certification_item  *)


(* Pruned unused type: work_output_date_and_time_item  *)


(* Pruned unused type: work_output_date_item  *)


(* Pruned unused type: work_output_identification_item  *)


(* Pruned unused type: work_output_multi_language_attribute_item  *)


(* Pruned unused type: work_output_organization_item  *)


(* Pruned unused type: work_output_person_and_organization_item  *)


(* Pruned unused type: work_output_security_classification_item  *)


(* Pruned unused type: resource_management_approval_item  *)


(* Pruned unused type: resource_management_attribute_classification_item  *)


(* Pruned unused type: resource_management_attribute_language_item  *)


(* Pruned unused type: resource_management_characterized_state_observed_of_item  *)


(* Pruned unused type: resource_management_characterized_state_type_of_item  *)


(* Pruned unused type: resource_management_condition_action_method_items  *)


(* Pruned unused type: resource_management_contract_item  *)


(* Pruned unused type: resource_management_date_and_time_item  *)


(* Pruned unused type: resource_management_date_item  *)


(* Pruned unused type: resource_management_document_reference_item  *)


(* Pruned unused type: resource_management_identification_item  *)


(* Pruned unused type: resource_management_justification_item  *)


(* Pruned unused type: resource_management_multi_language_attribute_item  *)


(* Pruned unused type: resource_management_organization_item  *)


(* Pruned unused type: resource_management_person_and_organization_item  *)


(* Pruned unused type: scheme_date_and_time_item  *)


(* Pruned unused type: scheme_identification_item  *)


(* Pruned unused type: scheme_person_and_organization_item  *)


(* Pruned unused type: scheme_time_interval_item  *)


(* Pruned unused type: wordchar_ap239_mri_attribute_classification_item  *)


(* Pruned unused type: wordchar_ap239_mri_classification_item  *)


(* Pruned unused type: wordchar_document_reference_item  *)


(* Pruned unused type: wordchar_mri_approval_item  *)


(* Pruned unused type: wordchar_mri_attribute_language_item  *)


(* Pruned unused type: wordchar_mri_date_and_time_item  *)


(* Pruned unused type: wordchar_mri_date_item  *)


(* Pruned unused type: wordchar_mri_identification_item  *)


(* Pruned unused type: wordchar_mri_multi_language_attribute_item  *)


(* Pruned unused type: wordchar_mri_organization_item  *)


(* Pruned unused type: wordchar_mri_person_and_organization_item  *)


(* Pruned unused type: wreqchar_ap239_mri_attribute_classification_item  *)


(* Pruned unused type: wreqchar_ap239_mri_classification_item  *)


(* Pruned unused type: wreqchar_document_reference_item  *)


(* Pruned unused type: wreqchar_mri_approval_item  *)


(* Pruned unused type: wreqchar_mri_attribute_language_item  *)


(* Pruned unused type: wreqchar_mri_date_and_time_item  *)


(* Pruned unused type: wreqchar_mri_date_item  *)


(* Pruned unused type: wreqchar_mri_identification_item  *)


(* Pruned unused type: wreqchar_mri_multi_language_attribute_item  *)


(* Pruned unused type: wreqchar_mri_organization_item  *)


(* Pruned unused type: wreqchar_mri_person_and_organization_item  *)

(* USED FROM (process_property_schema); *)
TYPE characterized_action_definition = SELECT
   (action,
   action_method,
   action_method_relationship,
   action_relationship);
END_TYPE;
(* USED FROM (product_property_definition_schema); *)
  TYPE derived_property_select = SELECT (property_definition, action_property, resource_property);
  END_TYPE;

(* Pruned unused type: resource_as_realized_classification_item  *)

(* USED FROM (action_schema); *)
  TYPE supported_item = SELECT (action_directive, action, action_method);
  END_TYPE;

(* Pruned unused type: required_resource_classification_item  *)

(* USED FROM (process_property_schema); *)
TYPE characterized_resource_definition = SELECT
  (action_resource,
   action_resource_relationship,
   action_resource_requirement,
   action_resource_requirement_relationship);
END_TYPE;

(* Pruned unused type: resource_management_classification_item  *)


(* Pruned unused type: resource_management_location_item  *)

(* USED FROM (Event_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE event_occurrence_item = SELECT (
   certification,
   organizational_project);
END_TYPE;


(* Pruned unused type: event_occurrence_date_and_time_item  *)


(* Pruned unused type: event_occurrence_date_item  *)


(* Pruned unused type: external_class_name_item  *)

(* USED FROM (product_property_definition_schema); *)
  TYPE characterized_product_definition = SELECT (product_definition, product_definition_relationship);
  END_TYPE;
(* USED FROM (support_resource_schema); *)
  TYPE identifier = STRING;
  END_TYPE;

(* Pruned unused type: condition_approval_item  *)


(* Pruned unused type: condition_attribute_classification_item  *)


(* Pruned unused type: condition_attribute_language_item  *)


(* Pruned unused type: condition_date_and_time_item  *)


(* Pruned unused type: condition_date_item  *)


(* Pruned unused type: condition_identification_item  *)


(* Pruned unused type: condition_multi_language_attribute_item  *)


(* Pruned unused type: condition_organization_item  *)


(* Pruned unused type: condition_person_and_organization_item  *)


(* Pruned unused type: condition_evaluation_approval_item  *)


(* Pruned unused type: condition_evaluation_attribute_classification_item  *)


(* Pruned unused type: condition_evaluation_attribute_language_item  *)


(* Pruned unused type: condition_evaluation_date_and_time_item  *)


(* Pruned unused type: condition_evaluation_date_item  *)


(* Pruned unused type: condition_evaluation_identification_item  *)


(* Pruned unused type: condition_evaluation_multi_language_attribute_item  *)


(* Pruned unused type: condition_evaluation_organization_item  *)


(* Pruned unused type: condition_evaluation_person_and_organization_item  *)


(* Pruned unused type: representation_identification_item  *)


(* Pruned unused type: representation_version_item  *)


(* Pruned unused type: spr_document_reference_item  *)


(* Pruned unused type: spr_organization_item  *)


(* Pruned unused type: spr_person_and_organization_item  *)

(* USED FROM (Work_request_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE action_request_item = SELECT (
   action_method,
   action_property,
   action_resource,
   analysis_assignment,
   assembly_component_usage,
   contract,
   document_file,
   interface_connection,
   interface_connector_occurrence,
   interface_definition_connection,
   organization,
   person,
   person_and_organization,
   product,
   product_definition,
   product_definition_formation,
   product_definition_relationship,
   product_group,
   property_definition,
   resource_property,
   state_observed,
   state_type);
END_TYPE;

(* USED FROM (measure_schema); *)
  TYPE absorbed_dose_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
TYPE acceleration_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE radioactivity_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
TYPE amount_of_substance_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE area_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE celsius_temperature_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE context_dependent_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE count_measure = NUMBER;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE descriptive_measure = STRING;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE capacitance_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE dose_equivalent_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE electric_charge_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE electric_current_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE conductance_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE electric_potential_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE energy_measure = REAL;
  END_TYPE;  
(* USED FROM (measure_schema); *)
  TYPE force_measure = REAL;
  END_TYPE;  
(* USED FROM (measure_schema); *)
  TYPE frequency_measure = REAL;
  END_TYPE; 
(* USED FROM (measure_schema); *)
  TYPE magnetic_flux_density_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE illuminance_measure = REAL;
  END_TYPE;  
(* USED FROM (measure_schema); *)
  TYPE inductance_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE length_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE luminous_intensity_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE luminous_flux_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE mass_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE measure_value = SELECT 
    (absorbed_dose_measure,
     dose_equivalent_measure,
     radioactivity_measure,
     acceleration_measure,
     amount_of_substance_measure, 
     area_measure, 
     celsius_temperature_measure, 
     context_dependent_measure, 
     count_measure, 
     descriptive_measure, 
     capacitance_measure,
     electric_charge_measure,
     conductance_measure,
     electric_current_measure, 
     electric_potential_measure,
     energy_measure,
     magnetic_flux_density_measure,
     force_measure,
     frequency_measure,
     illuminance_measure,
     inductance_measure,
     length_measure, 
     luminous_flux_measure,
     luminous_intensity_measure, 
     magnetic_flux_measure,
     mass_measure, 
     numeric_measure, 
     non_negative_length_measure,
     parameter_value, 
     plane_angle_measure, 
     positive_length_measure, 
     positive_plane_angle_measure, 
     positive_ratio_measure, 
     power_measure,
     pressure_measure,
     ratio_measure, 
     resistance_measure,
     solid_angle_measure, 
     thermodynamic_temperature_measure, 
     time_measure, 
     velocity_measure,
     volume_measure);
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE magnetic_flux_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE non_negative_length_measure = length_measure;
   WHERE
    WR1: SELF >= 0.0;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE numeric_measure = NUMBER;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE parameter_value = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE plane_angle_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE positive_length_measure = non_negative_length_measure;
    WHERE
      WR1: SELF > 0.0;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE positive_plane_angle_measure = plane_angle_measure;
    WHERE
      WR1: SELF > 0.0;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE positive_ratio_measure = ratio_measure;
    WHERE
      WR1: SELF > 0.0;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE power_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE pressure_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE ratio_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE resistance_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE si_prefix = ENUMERATION OF (exa, peta, tera, giga, mega, kilo, hecto, deca, deci, centi, milli, micro, nano, pico, femto, atto);
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE si_unit_name = ENUMERATION OF (metre, gram, second, ampere, kelvin, mole, candela, radian, steradian, hertz, newton, pascal, joule, watt, coulomb, volt, farad, ohm, siemens, weber, tesla, henry, degree_Celsius, lumen, lux, becquerel, gray, sievert);
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE solid_angle_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE thermodynamic_temperature_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE time_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE unit = SELECT (derived_unit, named_unit);
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE velocity_measure = REAL;
  END_TYPE;
(* USED FROM (measure_schema); *)
  TYPE volume_measure = REAL;
  END_TYPE;
(* USED FROM (representation_schema); *)
  TYPE list_representation_item = LIST [1:?] OF representation_item;
  END_TYPE;
(* USED FROM (representation_schema); *)
  TYPE set_representation_item = SET [1:?] OF representation_item;
  END_TYPE;

(* Pruned unused type: resource_item_approval_item  *)


(* Pruned unused type: resource_item_attribute_classification_item  *)


(* Pruned unused type: resource_item_attribute_language_item  *)


(* Pruned unused type: resource_item_certification_item  *)


(* Pruned unused type: resource_item_condition_action_method_items  *)


(* Pruned unused type: resource_item_contract_item  *)


(* Pruned unused type: resource_item_date_and_time_item  *)


(* Pruned unused type: resource_item_date_item  *)


(* Pruned unused type: resource_item_document_reference_item  *)


(* Pruned unused type: resource_item_identification_item  *)


(* Pruned unused type: resource_item_justification_item  *)


(* Pruned unused type: resource_item_multi_language_attribute_item  *)


(* Pruned unused type: resource_item_organization_item  *)


(* Pruned unused type: resource_item_person_and_organization_item  *)


(* Pruned unused type: resource_item_security_classification_item  *)


(* Pruned unused type: resource_item_state_observed_of_item  *)


(* Pruned unused type: resource_item_state_type_of_item  *)

(* USED FROM (method_definition_schema); *)
TYPE relationship_with_condition = SELECT
  (action_method_relationship,
   action_relationship,
   context_dependent_action_method_relationship,
   context_dependent_action_relationship);
END_TYPE;
(* USED FROM (method_definition_schema); *)
(* This SELECT set has been pruned. *)
TYPE process_or_process_relationship = SELECT (
   relationship_with_condition);
END_TYPE;

(* USED FROM (support_resource_schema); *)
  TYPE text = STRING;
  END_TYPE;

(* Pruned unused type: experience_date_and_time_item  *)


(* Pruned unused type: experience_date_item  *)

(* USED FROM (Experience_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE experience_item = SELECT (
   action_actual,
   action_resource,
   experience_type,
   experience_type_classification_item);
END_TYPE;

(* USED FROM (Experience_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE experience_type_classification_item = classification_item;
WHERE
  wr1 : NOT ('EXPERIENCE_MIM.ACTION' IN TYPEOF(SELF));
  wr2 : NOT ('EXPERIENCE_MIM.ACTION_DIRECTIVE' IN TYPEOF(SELF));
  wr3 : NOT ('EXPERIENCE_MIM.ACTION_METHOD' IN TYPEOF(SELF));
  wr4 : NOT ('EXPERIENCE_MIM.ACTION_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr5 : NOT ('EXPERIENCE_MIM.ACTION_METHOD_RELATIONSHIP' IN TYPEOF(SELF));
  wr6 : NOT ('EXPERIENCE_MIM.ACTION_PROPERTY' IN TYPEOF(SELF));
  wr7 : NOT ('EXPERIENCE_MIM.ACTION_PROPERTY_REPRESENTATION' IN TYPEOF(SELF));
  wr8 : NOT ('EXPERIENCE_MIM.ACTION_RELATIONSHIP' IN TYPEOF(SELF));
  wr9 : NOT ('EXPERIENCE_MIM.ACTION_REQUEST_SOLUTION' IN TYPEOF(SELF));
  wr10 : NOT ('EXPERIENCE_MIM.ACTION_REQUEST_STATUS' IN TYPEOF(SELF));
  wr11 : NOT ('EXPERIENCE_MIM.ACTION_RESOURCE' IN TYPEOF(SELF));
  wr12 : NOT ('EXPERIENCE_MIM.ACTION_RESOURCE_RELATIONSHIP' IN TYPEOF(SELF));
  wr13 : NOT ('EXPERIENCE_MIM.ACTION_RESOURCE_REQUIREMENT' IN TYPEOF(SELF));
  wr14 : NOT ('EXPERIENCE_MIM.ACTION_RESOURCE_REQUIREMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr15 : NOT ('EXPERIENCE_MIM.ACTION_STATUS' IN TYPEOF(SELF));
  wr16 : NOT ('EXPERIENCE_MIM.ADDRESS' IN TYPEOF(SELF));
  wr17 : NOT ('EXPERIENCE_MIM.ALTERNATE_PRODUCT_RELATIONSHIP' IN TYPEOF(SELF));
  wr18 : NOT ('EXPERIENCE_MIM.ANALYSIS_ASSIGNMENT' IN TYPEOF(SELF));
  wr19 : NOT ('EXPERIENCE_MIM.APPLIED_ACTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr20 : NOT ('EXPERIENCE_MIM.APPLIED_ACTION_METHOD_ASSIGNMENT' IN TYPEOF(SELF));
  wr21 : NOT ('EXPERIENCE_MIM.APPLIED_ACTION_REQUEST_ASSIGNMENT' IN TYPEOF(SELF));
  wr22 : NOT ('EXPERIENCE_MIM.APPLIED_APPROVAL_ASSIGNMENT' IN TYPEOF(SELF));
  wr23 : NOT ('EXPERIENCE_MIM.APPLIED_CERTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr24 : NOT ('EXPERIENCE_MIM.APPLIED_CONTRACT_ASSIGNMENT' IN TYPEOF(SELF));
  wr25 : NOT ('EXPERIENCE_MIM.APPLIED_DATE_AND_TIME_ASSIGNMENT' IN TYPEOF(SELF));
  wr26 : NOT ('EXPERIENCE_MIM.APPLIED_DATE_ASSIGNMENT' IN TYPEOF(SELF));
  wr27 : NOT ('EXPERIENCE_MIM.APPLIED_DOCUMENT_REFERENCE' IN TYPEOF(SELF));
  wr28 : NOT ('EXPERIENCE_MIM.APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT' IN TYPEOF(SELF));
  wr29 : NOT ('EXPERIENCE_MIM.APPLIED_EFFECTIVITY_ASSIGNMENT' IN TYPEOF(SELF));
  wr30 : NOT ('EXPERIENCE_MIM.APPLIED_EVENT_OCCURRENCE_ASSIGNMENT' IN TYPEOF(SELF));
  wr31 : NOT ('EXPERIENCE_MIM.APPLIED_EXPERIENCE_ASSIGNMENT' IN TYPEOF(SELF));
  wr32 : NOT ('EXPERIENCE_MIM.APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr33 : NOT ('EXPERIENCE_MIM.APPLIED_IDENTIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr34 : NOT ('EXPERIENCE_MIM.APPLIED_LOCATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr35 : NOT ('EXPERIENCE_MIM.APPLIED_LOCATION_REPRESENTATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr36 : NOT ('EXPERIENCE_MIM.APPLIED_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr37 : NOT ('EXPERIENCE_MIM.APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT' IN TYPEOF(SELF));
  wr38 : NOT ('EXPERIENCE_MIM.APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr39 : NOT ('EXPERIENCE_MIM.APPLIED_PERSON_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr40 : NOT ('EXPERIENCE_MIM.APPLIED_PERSON_TYPE_DEFINITION_ASSIGNMENT' IN TYPEOF(SELF));
  wr41 : NOT ('EXPERIENCE_MIM.APPLIED_POSITION_IN_ORGANIZATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr42 : NOT ('EXPERIENCE_MIM.APPLIED_POSITION_IN_ORGANIZATION_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr43 : NOT ('EXPERIENCE_MIM.APPLIED_POSITION_IN_ORGANIZATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr44 : NOT ('EXPERIENCE_MIM.APPLIED_QUALIFICATION_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr45 : NOT ('EXPERIENCE_MIM.APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT' IN TYPEOF(SELF));
  wr46 : NOT ('EXPERIENCE_MIM.APPLIED_STATE_OBSERVED_ASSIGNMENT' IN TYPEOF(SELF));
  wr47 : NOT ('EXPERIENCE_MIM.APPLIED_STATE_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr48 : NOT ('EXPERIENCE_MIM.APPLIED_USAGE_RIGHT' IN TYPEOF(SELF));
  wr49 : NOT ('EXPERIENCE_MIM.APPROVAL' IN TYPEOF(SELF));
  wr50 : NOT ('EXPERIENCE_MIM.APPROVAL_PERSON_ORGANIZATION' IN TYPEOF(SELF));
  wr51 : NOT ('EXPERIENCE_MIM.APPROVAL_RELATIONSHIP' IN TYPEOF(SELF));
  wr52 : NOT ('EXPERIENCE_MIM.APPROVAL_STATUS' IN TYPEOF(SELF));
  wr53 : NOT ('EXPERIENCE_MIM.ASCRIBABLE_STATE' IN TYPEOF(SELF));
  wr54 : NOT ('EXPERIENCE_MIM.ASCRIBABLE_STATE_RELATIONSHIP' IN TYPEOF(SELF));
  wr55 : NOT ('EXPERIENCE_MIM.ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(SELF));
  wr56 : NOT ('EXPERIENCE_MIM.ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE' IN TYPEOF(SELF));
  wr57 : NOT ('EXPERIENCE_MIM.ASSUMPTION' IN TYPEOF(SELF));
  wr58 : NOT ('EXPERIENCE_MIM.ASSUMPTION_ASSIGNMENT' IN TYPEOF(SELF));
  wr59 : NOT ('EXPERIENCE_MIM.ASSUMPTION_RELATIONSHIP' IN TYPEOF(SELF));
  wr60 : NOT ('EXPERIENCE_MIM.ATTACHMENT_SLOT_DESIGN_TO_PLANNED' IN TYPEOF(SELF));
  wr61 : NOT ('EXPERIENCE_MIM.ATTACHMENT_SLOT_DESIGN_TO_REALIZED' IN TYPEOF(SELF));
  wr62 : NOT ('EXPERIENCE_MIM.ATTACHMENT_SLOT_ON_PRODUCT' IN TYPEOF(SELF));
  wr63 : NOT ('EXPERIENCE_MIM.ATTACHMENT_SLOT_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr64 : NOT ('EXPERIENCE_MIM.ATTRIBUTE_LANGUAGE_ASSIGNMENT' IN TYPEOF(SELF));
  wr65 : NOT ('EXPERIENCE_MIM.BREAKDOWN_CONTEXT' IN TYPEOF(SELF));
  wr66 : NOT ('EXPERIENCE_MIM.BREAKDOWN_ELEMENT_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr67 : NOT ('EXPERIENCE_MIM.BREAKDOWN_ELEMENT_USAGE' IN TYPEOF(SELF));
  wr68 : NOT ('EXPERIENCE_MIM.BREAKDOWN_OF' IN TYPEOF(SELF));
  wr69 : NOT ('EXPERIENCE_MIM.CALENDAR_DATE' IN TYPEOF(SELF));
  wr70 : NOT ('EXPERIENCE_MIM.CERTIFICATION' IN TYPEOF(SELF));
  wr71 : NOT ('EXPERIENCE_MIM.CHARACTERIZED_OBJECT' IN TYPEOF(SELF));
  wr72 : NOT ('EXPERIENCE_MIM.CLASS' IN TYPEOF(SELF));
  wr73 : NOT ('EXPERIENCE_MIM.CONFIGURATION_DESIGN' IN TYPEOF(SELF));
  wr74 : NOT ('EXPERIENCE_MIM.CONFIGURATION_EFFECTIVITY' IN TYPEOF(SELF));
  wr75 : NOT ('EXPERIENCE_MIM.CONFIGURATION_ITEM' IN TYPEOF(SELF));
  wr76 : NOT ('EXPERIENCE_MIM.CONTEXT_DEPENDENT_UNIT' IN TYPEOF(SELF));
  wr77 : NOT ('EXPERIENCE_MIM.CONTRACT' IN TYPEOF(SELF));
  wr78 : NOT ('EXPERIENCE_MIM.CONTRACT_RELATIONSHIP' IN TYPEOF(SELF));
  wr79 : NOT ('EXPERIENCE_MIM.CONVERSION_BASED_UNIT' IN TYPEOF(SELF));
  wr80 : NOT ('EXPERIENCE_MIM.DATE_AND_TIME' IN TYPEOF(SELF));
  wr81 : NOT ('EXPERIENCE_MIM.DATE_AND_TIME_ASSIGNMENT' IN TYPEOF(SELF));
  wr82 : NOT ('EXPERIENCE_MIM.DATE_ASSIGNMENT' IN TYPEOF(SELF));
  wr83 : NOT ('EXPERIENCE_MIM.DERIVED_UNIT' IN TYPEOF(SELF));
  wr84 : NOT ('EXPERIENCE_MIM.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr85 : NOT ('EXPERIENCE_MIM.DIRECTED_ACTION' IN TYPEOF(SELF));
  wr86 : NOT ('EXPERIENCE_MIM.DOCUMENT_FILE' IN TYPEOF(SELF));
  wr87 : NOT ('EXPERIENCE_MIM.DOCUMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr88 : NOT ('EXPERIENCE_MIM.EFFECTIVITY' IN TYPEOF(SELF));
  wr89 : NOT ('EXPERIENCE_MIM.EFFECTIVITY_RELATIONSHIP' IN TYPEOF(SELF));
  wr90 : NOT ('EXPERIENCE_MIM.ENVELOPE' IN TYPEOF(SELF));
  wr91 : NOT ('EXPERIENCE_MIM.ENVELOPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr92 : NOT ('EXPERIENCE_MIM.ENVIRONMENT_DEFINITION' IN TYPEOF(SELF));
  wr93 : NOT ('EXPERIENCE_MIM.ENVIRONMENT_DEFINITION_VERSION' IN TYPEOF(SELF));
  wr94 : NOT ('EXPERIENCE_MIM.ENVIRONMENT_DEFINITION_VIEW' IN TYPEOF(SELF));
  wr95 : NOT ('EXPERIENCE_MIM.ENVIRONMENT_PRODUCT_ASSIGNMENT' IN TYPEOF(SELF));
  wr96 : NOT ('EXPERIENCE_MIM.ENVIRONMENT_VIEW_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr97 : NOT ('EXPERIENCE_MIM.EVENT_OCCURRENCE' IN TYPEOF(SELF));
  wr98 : NOT ('EXPERIENCE_MIM.EVENT_OCCURRENCE_RELATIONSHIP' IN TYPEOF(SELF));
  wr99 : NOT ('EXPERIENCE_MIM.EVIDENCE' IN TYPEOF(SELF));
  wr100 : NOT ('EXPERIENCE_MIM.EXECUTED_ACTION' IN TYPEOF(SELF));
  wr101 : NOT ('EXPERIENCE_MIM.EXPERIENCE' IN TYPEOF(SELF));
  wr102 : NOT ('EXPERIENCE_MIM.EXTERNAL_CLASS_LIBRARY' IN TYPEOF(SELF));
  wr103 : NOT ('EXPERIENCE_MIM.GENERAL_PROPERTY' IN TYPEOF(SELF));
  wr104 : NOT ('EXPERIENCE_MIM.GENERAL_PROPERTY_RELATIONSHIP' IN TYPEOF(SELF));
  wr105 : NOT ('EXPERIENCE_MIM.GROUP' IN TYPEOF(SELF));
  wr106 : NOT ('EXPERIENCE_MIM.IDENTIFICATION_ASSIGNMENT_RELATIONSHIP' IN TYPEOF(SELF));
  wr107 : NOT ('EXPERIENCE_MIM.IN_ZONE' IN TYPEOF(SELF));
  wr108 : NOT ('EXPERIENCE_MIM.INFORMATION_RIGHT' IN TYPEOF(SELF));
  wr109 : NOT ('EXPERIENCE_MIM.INFORMATION_USAGE_RIGHT' IN TYPEOF(SELF));
  wr110 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTION' IN TYPEOF(SELF));
  wr111 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTOR_AS_PLANNED' IN TYPEOF(SELF));
  wr112 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTOR_AS_REALIZED' IN TYPEOF(SELF));
  wr113 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTOR_DESIGN' IN TYPEOF(SELF));
  wr114 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTOR_DESIGN_TO_PLANNED' IN TYPEOF(SELF));
  wr115 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTOR_DESIGN_TO_REALIZED' IN TYPEOF(SELF));
  wr116 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTOR_OCCURRENCE' IN TYPEOF(SELF));
  wr117 : NOT ('EXPERIENCE_MIM.INTERFACE_CONNECTOR_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr118 : NOT ('EXPERIENCE_MIM.INTERFACE_DEFINITION_CONNECTION' IN TYPEOF(SELF));
  wr119 : NOT ('EXPERIENCE_MIM.INTERFACE_DEFINITION_FOR' IN TYPEOF(SELF));
  wr120 : NOT ('EXPERIENCE_MIM.ITEM_ASSUMED' IN TYPEOF(SELF));
  wr121 : NOT ('EXPERIENCE_MIM.JUSTIFICATION_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr122 : NOT ('EXPERIENCE_MIM.JUSTIFICATION_SUPPORT_ASSIGNMENT' IN TYPEOF(SELF));
  wr123 : NOT ('EXPERIENCE_MIM.LANGUAGE' IN TYPEOF(SELF));
  wr124 : NOT ('EXPERIENCE_MIM.LOCAL_TIME' IN TYPEOF(SELF));
  wr125 : NOT ('EXPERIENCE_MIM.LOCATION' IN TYPEOF(SELF));
  wr126 : NOT ('EXPERIENCE_MIM.LOCATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr127 : NOT ('EXPERIENCE_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr128 : NOT ('EXPERIENCE_MIM.MEASURE_WITH_UNIT' IN TYPEOF(SELF));
  wr129 : NOT ('EXPERIENCE_MIM.MESSAGE_RELATIONSHIP' IN TYPEOF(SELF));
  wr130 : NOT ('EXPERIENCE_MIM.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT' IN TYPEOF(SELF));
  wr131 : NOT ('EXPERIENCE_MIM.NAMED_UNIT' IN TYPEOF(SELF));
  wr132 : NOT ('EXPERIENCE_MIM.OBSERVATION' IN TYPEOF(SELF));
  wr133 : NOT ('EXPERIENCE_MIM.OBSERVATION_CONSEQUENCE' IN TYPEOF(SELF));
  wr134 : NOT ('EXPERIENCE_MIM.OBSERVATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr135 : NOT ('EXPERIENCE_MIM.OBSERVED_ENVIRONMENT' IN TYPEOF(SELF));
  wr136 : NOT ('EXPERIENCE_MIM.OBSERVED_ENVIRONMENT_PRODUCT_ASSIGNMENT' IN TYPEOF(SELF));
  wr137 : NOT ('EXPERIENCE_MIM.OBSERVED_ENVIRONMENT_VERSION' IN TYPEOF(SELF));
  wr138 : NOT ('EXPERIENCE_MIM.OBSERVED_ENVIRONMENT_VIEW_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr139 : NOT ('EXPERIENCE_MIM.ORGANIZATION' IN TYPEOF(SELF));
  wr140 : NOT ('EXPERIENCE_MIM.ORGANIZATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr141 : NOT ('EXPERIENCE_MIM.ORGANIZATION_TYPE' IN TYPEOF(SELF));
  wr142 : NOT ('EXPERIENCE_MIM.ORGANIZATIONAL_ADDRESS' IN TYPEOF(SELF));
  wr143 : NOT ('EXPERIENCE_MIM.ORGANIZATIONAL_PROJECT' IN TYPEOF(SELF));
  wr144 : NOT ('EXPERIENCE_MIM.ORGANIZATIONAL_PROJECT_RELATIONSHIP' IN TYPEOF(SELF));
  wr145 : NOT ('EXPERIENCE_MIM.PERSON' IN TYPEOF(SELF));
  wr146 : NOT ('EXPERIENCE_MIM.PERSON_AND_ORGANIZATION' IN TYPEOF(SELF));
  wr147 : NOT ('EXPERIENCE_MIM.PERSON_AND_ORGANIZATION_ADDRESS' IN TYPEOF(SELF));
  wr148 : NOT ('EXPERIENCE_MIM.PERSON_TYPE' IN TYPEOF(SELF));
  wr149 : NOT ('EXPERIENCE_MIM.PERSON_TYPE_DEFINITION' IN TYPEOF(SELF));
  wr150 : NOT ('EXPERIENCE_MIM.PERSON_TYPE_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr151 : NOT ('EXPERIENCE_MIM.POSITION_IN_ORGANIZATION' IN TYPEOF(SELF));
  wr152 : NOT ('EXPERIENCE_MIM.POSITION_IN_ORGANIZATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr153 : NOT ('EXPERIENCE_MIM.POSITION_IN_ORGANIZATION_TYPE' IN TYPEOF(SELF));
  wr154 : NOT ('EXPERIENCE_MIM.PRODUCT' IN TYPEOF(SELF));
  wr155 : NOT ('EXPERIENCE_MIM.PRODUCT_AS_PLANNED' IN TYPEOF(SELF));
  wr156 : NOT ('EXPERIENCE_MIM.PRODUCT_AS_REALIZED' IN TYPEOF(SELF));
  wr157 : NOT ('EXPERIENCE_MIM.PRODUCT_CATEGORY' IN TYPEOF(SELF));
  wr158 : NOT ('EXPERIENCE_MIM.PRODUCT_CONCEPT' IN TYPEOF(SELF));
  wr159 : NOT ('EXPERIENCE_MIM.PRODUCT_DEFINITION' IN TYPEOF(SELF));
  wr160 : NOT ('EXPERIENCE_MIM.PRODUCT_DEFINITION_CONTEXT' IN TYPEOF(SELF));
  wr161 : NOT ('EXPERIENCE_MIM.PRODUCT_DEFINITION_FORMATION' IN TYPEOF(SELF));
  wr162 : NOT ('EXPERIENCE_MIM.PRODUCT_DEFINITION_FORMATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr163 : NOT ('EXPERIENCE_MIM.PRODUCT_DEFINITION_GROUP_ASSIGNMENT' IN TYPEOF(SELF));
  wr164 : NOT ('EXPERIENCE_MIM.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr165 : NOT ('EXPERIENCE_MIM.PRODUCT_DEFINITION_SHAPE' IN TYPEOF(SELF));
  wr166 : NOT ('EXPERIENCE_MIM.PRODUCT_DESIGN_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr167 : NOT ('EXPERIENCE_MIM.PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL' IN TYPEOF(SELF));
  wr168 : NOT ('EXPERIENCE_MIM.PRODUCT_GROUP' IN TYPEOF(SELF));
  wr169 : NOT ('EXPERIENCE_MIM.PRODUCT_GROUP_MEMBERSHIP' IN TYPEOF(SELF));
  wr170 : NOT ('EXPERIENCE_MIM.PRODUCT_GROUP_RELATIONSHIP' IN TYPEOF(SELF));
  wr171 : NOT ('EXPERIENCE_MIM.PRODUCT_PLANNED_TO_REALIZED' IN TYPEOF(SELF));
  wr172 : NOT ('EXPERIENCE_MIM.PRODUCT_RELATIONSHIP' IN TYPEOF(SELF));
  wr173 : NOT ('EXPERIENCE_MIM.PROPERTY_DEFINITION' IN TYPEOF(SELF));
  wr174 : NOT ('EXPERIENCE_MIM.PROPERTY_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF));
  wr175 : NOT ('EXPERIENCE_MIM.PROPERTY_DEFINITION_REPRESENTATION' IN TYPEOF(SELF));
  wr176 : NOT ('EXPERIENCE_MIM.QUALIFICATION_TYPE' IN TYPEOF(SELF));
  wr177 : NOT ('EXPERIENCE_MIM.QUALIFICATION_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr178 : NOT ('EXPERIENCE_MIM.REPRESENTATION' IN TYPEOF(SELF));
  wr179 : NOT ('EXPERIENCE_MIM.REPRESENTATION_CONTEXT' IN TYPEOF(SELF));
  wr180 : NOT ('EXPERIENCE_MIM.REPRESENTATION_ITEM' IN TYPEOF(SELF));
  wr181 : NOT ('EXPERIENCE_MIM.REPRESENTATION_RELATIONSHIP' IN TYPEOF(SELF));
  wr182 : NOT ('EXPERIENCE_MIM.REQUIREMENT_ASSIGNMENT' IN TYPEOF(SELF));
  wr183 : NOT ('EXPERIENCE_MIM.REQUIREMENT_SOURCE' IN TYPEOF(SELF));
  wr184 : NOT ('EXPERIENCE_MIM.RESOURCE_PROPERTY' IN TYPEOF(SELF));
  wr185 : NOT ('EXPERIENCE_MIM.RESOURCE_PROPERTY_REPRESENTATION' IN TYPEOF(SELF));
  wr186 : NOT ('EXPERIENCE_MIM.SECURITY_CLASSIFICATION' IN TYPEOF(SELF));
  wr187 : NOT ('EXPERIENCE_MIM.SELECTED_ITEM' IN TYPEOF(SELF));
  wr188 : NOT ('EXPERIENCE_MIM.SELECTED_ITEM_ASSIGNMENT' IN TYPEOF(SELF));
  wr189 : NOT ('EXPERIENCE_MIM.STATE_OBSERVED' IN TYPEOF(SELF));
  wr190 : NOT ('EXPERIENCE_MIM.STATE_OBSERVED_ASSIGNMENT' IN TYPEOF(SELF));
  wr191 : NOT ('EXPERIENCE_MIM.STATE_OBSERVED_RELATIONSHIP' IN TYPEOF(SELF));
  wr192 : NOT ('EXPERIENCE_MIM.STATE_OBSERVED_ROLE' IN TYPEOF(SELF));
  wr193 : NOT ('EXPERIENCE_MIM.STATE_TYPE' IN TYPEOF(SELF));
  wr194 : NOT ('EXPERIENCE_MIM.STATE_TYPE_ASSIGNMENT' IN TYPEOF(SELF));
  wr195 : NOT ('EXPERIENCE_MIM.STATE_TYPE_RELATIONSHIP' IN TYPEOF(SELF));
  wr196 : NOT ('EXPERIENCE_MIM.STRUCTURED_MESSAGE' IN TYPEOF(SELF));
  wr197 : NOT ('EXPERIENCE_MIM.TIME_INTERVAL_RELATIONSHIP' IN TYPEOF(SELF));
  wr198 : NOT ('EXPERIENCE_MIM.UNCERTAINTY_MEASURE_WITH_UNIT' IN TYPEOF(SELF));
  wr199 : NOT ('EXPERIENCE_MIM.USAGE_ASSOCIATION' IN TYPEOF(SELF));
  wr200 : NOT ('EXPERIENCE_MIM.VALIDATION' IN TYPEOF(SELF));
  wr201 : NOT ('EXPERIENCE_MIM.VERIFICATION' IN TYPEOF(SELF));
  wr202 : NOT ('EXPERIENCE_MIM.VERSIONED_ACTION_REQUEST' IN TYPEOF(SELF));
END_TYPE;

(* USED FROM (Experience_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE experience_type_item = SELECT (
   action_method,
   action_resource_requirement,
   executed_action,
   organization,
   person,
   person_and_organization);
END_TYPE;

(* USED FROM (Qualifications_mim); *)
(* This EXTENSIBLE SELECT have been replaced with plain SELECT for EXPRESS E1 layout. *)
TYPE person_organization_item = SELECT (
   person);
END_TYPE;


(* Pruned unused type: qualification_type_certification_item  *)


(* Pruned unused type: qualification_type_classification_item  *)


(* Pruned unused type: qualification_type_date_and_time_item  *)


(* Pruned unused type: qualification_type_date_item  *)


(* Pruned unused type: qualification_type_person_and_organization_item  *)


(* Pruned unused type: work_output_classification_item  *)

(* USED FROM (Time_interval_assignment_mim); *)
(* This SELECT set has been been expanded or truncated for EXPRESS E1 layout. *)
TYPE time_interval_item = SELECT (
   action_method_relationship);
END_TYPE;

(* USED FROM (representation_schema); *)
  TYPE compound_item_definition = SELECT
    (list_representation_item,
     set_representation_item);
  END_TYPE;

(* Chained implicit interfaced from: support_resource_schema *)
  TYPE label = STRING;
  END_TYPE;

(* Chained implicit interfaced from: date_time_schema *)
TYPE year_number = INTEGER;
END_TYPE; 

(* Implicit interfaced from: representation_schema *)
(* This SELECT set has been pruned. *)
TYPE founded_item_select = SELECT (
   representation_item);
END_TYPE;


(* Implicit interfaced from: configuration_management_schema *)
TYPE configuration_design_item = SELECT
   (product_definition,
    product_definition_formation);
END_TYPE;

(* Implicit interfaced from: document_schema *)
  TYPE product_or_formation_or_definition = SELECT (product, product_definition_formation, product_definition);
  END_TYPE;

(* Implicit interfaced from: date_time_schema *)
TYPE day_in_month_number = INTEGER;
WHERE
  WR1: {1 <= SELF <= 31};
END_TYPE; 

(* Implicit interfaced from: date_time_schema *)
TYPE month_in_year_number = INTEGER;
WHERE
  WR1: { 1 <= SELF <= 12 };
END_TYPE; 

(* Implicit interfaced from: date_time_schema *)
TYPE ahead_or_behind = ENUMERATION OF 
   (ahead,
    exact,
    behind);
END_TYPE; 

(* Chained implicit interfaced from: date_time_schema *)
TYPE date_time_select = SELECT
   (date, 
    date_and_time, 
    local_time);
END_TYPE; 

(* Chained implicit interfaced from: person_organization_schema *)
  TYPE person_organization_select = SELECT (person, organization, person_and_organization);
  END_TYPE;

(* Implicit interfaced from: date_time_schema *)
TYPE hour_in_day = INTEGER;
WHERE
  WR1: { 0 <= SELF < 24 };
END_TYPE; 

(* Implicit interfaced from: date_time_schema *)
TYPE minute_in_hour = INTEGER;
WHERE
  WR1: { 0 <= SELF <= 59 };
END_TYPE; 

(* Implicit interfaced from: date_time_schema *)
TYPE second_in_minute = REAL;
WHERE
  WR1: { 0 <= SELF <= 60.0 };
END_TYPE; 

(* Chained implicit interfaced from: date_time_schema *)
TYPE date_time_or_event_occurrence = SELECT
   (date_time_select, 
    event_occurrence);
END_TYPE; 

(* Implicit interfaced from: representation_schema *)
  TYPE transformation = SELECT
    (item_defined_transformation,
     functionally_defined_transformation);
  END_TYPE;

(* Implicit interfaced from: geometry_schema *)
 TYPE vector_or_direction = SELECT
   (vector, 
    direction);
 END_TYPE;

(* Implicit interfaced from: geometry_schema *)
TYPE dimension_count = INTEGER;
WHERE
  WR1: SELF > 0;
END_TYPE;

(* Implicit interfaced from: qualified_measure_schema *)
TYPE value_qualifier = SELECT
  (precision_qualifier,
   type_qualifier,
   uncertainty_qualifier);
END_TYPE;

(* Implicit interfaced from: product_property_definition_schema *)
  TYPE shape_definition = SELECT (product_definition_shape, shape_aspect, shape_aspect_relationship);
  END_TYPE;

(* Pruned unused type: trimming_select  *)


(* Pruned unused type: axis2_placement  *)


(* Pruned unused type: geometric_set_select  *)

(* USED FROM (Product_group_mim); *)
ENTITY product_group_rules
  SUBTYPE OF (group);
END_ENTITY;

ENTITY characterized_action_method_relationship
  SUBTYPE OF (action_method_relationship, characterized_object);
END_ENTITY;

ENTITY characterized_analysis_assignment
  SUBTYPE OF (analysis_assignment, characterized_object);
END_ENTITY;

ENTITY characterized_assembly_component_usage
  SUBTYPE OF (assembly_component_usage, characterized_object);
END_ENTITY;

ENTITY characterized_versioned_action_request
  SUBTYPE OF (characterized_object, versioned_action_request);
END_ENTITY;
(* USED FROM (Analysis_assignment_mim); *)
ENTITY analysis_assignment
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Analysis_assignment_mim); *)
ENTITY analysis_item
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : analysis_assignment;
  items : SET[1:1] OF analysed_item;
END_ENTITY;
(* USED FROM (Analysis_assignment_mim); *)
ENTITY assigned_analysis
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : analysis_assignment;
  items : SET[1:1] OF product_definition_formation;
END_ENTITY;
(* USED FROM (application_context_schema); *)
  ENTITY application_context;
    application : label;
  DERIVE
    description : text := get_description_value(SELF);
    id : identifier := get_id_value(SELF);
  INVERSE
    context_elements : SET [1:?] OF application_context_element FOR frame_of_reference;
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
    WR2: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (application_context_schema); *)
  ENTITY application_protocol_definition;
    status : label;
    application_interpreted_model_schema_name : label;
    application_protocol_year : year_number;
    application : application_context;
  END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection
  SUBTYPE OF (product);
END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection_assignment
  SUBTYPE OF (applied_group_assignment);
END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection_membership
  SUBTYPE OF (applied_group_assignment);
END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection_relationship
  SUBTYPE OF (product_relationship);
  SELF\product_relationship.relating_product : collection;    -- relating_collection : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_relationship.related_product : collection;     -- related_collection : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      related_collection : COLLECTION := SELF\product_relationship.related_product;  -- RELATED_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      relating_collection : COLLECTION := SELF\product_relationship.relating_product;  -- RELATING_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection_version
  SUBTYPE OF (product_definition_formation);
  SELF\product_definition_formation.of_product : collection;  -- of_collection : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      of_collection : COLLECTION := SELF\product_definition_formation.of_product;  -- OF_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection_version_relationship
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : collection_version;  -- relating_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_definition_formation_relationship.related_product_definition_formation : collection_version;  -- related_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      related_version : COLLECTION_VERSION := SELF\product_definition_formation_relationship.related_product_definition_formation;  -- RELATED_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      relating_version : COLLECTION_VERSION := SELF\product_definition_formation_relationship.relating_product_definition_formation;  -- RELATING_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection_version_sequence_relationship
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : collection_version;  -- predecessor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_definition_formation_relationship.related_product_definition_formation : collection_version;  -- successor : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      predecessor : COLLECTION_VERSION := SELF\product_definition_formation_relationship.relating_product_definition_formation;  -- RELATING_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      successor : COLLECTION_VERSION := SELF\product_definition_formation_relationship.related_product_definition_formation;  -- RELATED_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Collection_identification_and_version_mim); *)
ENTITY collection_view_definition
  SUBTYPE OF (product_definition);
  SELF\product_definition.formation : collection_version;     -- defined_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      defined_version : COLLECTION_VERSION := SELF\product_definition.formation;  -- FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Conditional_effectivity_mim); *)
ENTITY conditional_effectivity
  SUBTYPE OF (condition, effectivity);
END_ENTITY;
(* USED FROM (Description_assignment_mim); *)
ENTITY applied_description_text_assignment
SUBTYPE OF (description_text_assignment);
  items : SET [1 : ?] OF description_item;
END_ENTITY;
(* USED FROM (Product_environment_definition_mim); *)
ENTITY environment_definition
  SUBTYPE OF (product);
END_ENTITY;
(* USED FROM (Product_environment_definition_mim); *)
ENTITY environment_definition_version
  SUBTYPE OF (product_definition_formation);
  SELF\product_definition_formation.of_product : environment_definition;  -- of_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      of_environment : ENVIRONMENT_DEFINITION := SELF\product_definition_formation.of_product;  -- OF_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_definition_mim); *)
ENTITY environment_definition_view
  SUBTYPE OF (characterized_object, product_definition);
  SELF\product_definition.formation : environment_definition_version;  -- defined_environment_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      defined_environment_version : ENVIRONMENT_DEFINITION_VERSION := SELF\product_definition.formation;  -- FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_definition_mim); *)
ENTITY environment_product_assignment
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Product_environment_definition_mim); *)
ENTITY environment_view_definition_relationship
  SUBTYPE OF (product_definition_relationship);
  SELF\product_definition_relationship.relating_product_definition : environment_definition_view;  -- relating_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_definition_relationship.related_product_definition : environment_definition_view;  -- related_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      related_environment : ENVIRONMENT_DEFINITION_VIEW := SELF\product_definition_relationship.related_product_definition;  -- RELATED_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      relating_environment : ENVIRONMENT_DEFINITION_VIEW := SELF\product_definition_relationship.relating_product_definition;  -- RELATING_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment
  SUBTYPE OF (product);
END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment_product_assignment
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment_to_definition
  SUBTYPE OF (product_relationship);
  SELF\product_relationship.relating_product : environment_definition;  -- defined_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_relationship.related_product : observed_environment;  -- observed_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      defined_environment : ENVIRONMENT_DEFINITION := SELF\product_relationship.relating_product;  -- RELATING_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      observed_environment : OBSERVED_ENVIRONMENT := SELF\product_relationship.related_product;  -- RELATED_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment_to_definition_version
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : environment_definition_version;  -- defined_environment_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_definition_formation_relationship.related_product_definition_formation : observed_environment_version;  -- observed_environment_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      defined_environment_version : ENVIRONMENT_DEFINITION_VERSION := SELF\product_definition_formation_relationship.relating_product_definition_formation;  -- RELATING_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      observed_environment_version : OBSERVED_ENVIRONMENT_VERSION := SELF\product_definition_formation_relationship.related_product_definition_formation;  -- RELATED_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment_to_definition_view
  SUBTYPE OF (product_definition_relationship);
  SELF\product_definition_relationship.relating_product_definition : observed_environment_view;  -- defined_environment_view : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_definition_relationship.related_product_definition : environment_definition_view;  -- observed_environment_view : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      defined_environment_view : OBSERVED_ENVIRONMENT_VIEW := SELF\product_definition_relationship.relating_product_definition;  -- RELATING_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      observed_environment_view : ENVIRONMENT_DEFINITION_VIEW := SELF\product_definition_relationship.related_product_definition;  -- RELATED_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment_version
  SUBTYPE OF (product_definition_formation);
  SELF\product_definition_formation.of_product : observed_environment;  -- of_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      of_environment : OBSERVED_ENVIRONMENT := SELF\product_definition_formation.of_product;  -- OF_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment_view
  SUBTYPE OF (characterized_object, product_definition);
  SELF\product_definition.formation : observed_environment_version;  -- observed_environment_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      observed_environment_version : OBSERVED_ENVIRONMENT_VERSION := SELF\product_definition.formation;  -- FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_environment_observed_mim); *)
ENTITY observed_environment_view_definition_relationship
  SUBTYPE OF (product_definition_relationship);
  SELF\product_definition_relationship.relating_product_definition : observed_environment_view;  -- relating_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_definition_relationship.related_product_definition : observed_environment_view;  -- related_environment : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      related_environment : OBSERVED_ENVIRONMENT_VIEW := SELF\product_definition_relationship.related_product_definition;  -- RELATED_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      relating_environment : OBSERVED_ENVIRONMENT_VIEW := SELF\product_definition_relationship.relating_product_definition;  -- RELATING_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Same_as_external_item_mim); *)
ENTITY same_as_external_item_assignment
  SUBTYPE OF (external_identification_assignment);
  items : SET[0:?] OF same_as_item;
END_ENTITY;
(* USED FROM (Verification_and_validation_mim); *)
ENTITY evidence
  SUBTYPE OF (group_assignment);
  items : SET[1:?] OF evidence_item;
END_ENTITY;
(* USED FROM (Verification_and_validation_mim); *)
ENTITY validation
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Verification_and_validation_mim); *)
ENTITY verification
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Verification_and_validation_mim); *)
ENTITY verification_relationship
  SUBTYPE OF (group_relationship);
  SELF\group_relationship.relating_group : verification;
  SELF\group_relationship.related_group : verification;
END_ENTITY;
(* USED FROM (group_schema); *)
  ENTITY group;
    name : label;
    description : OPTIONAL text;
  DERIVE
    id : identifier := get_id_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (group_schema); *)
  ENTITY group_relationship;
    name : label;
    description : OPTIONAL text;
    relating_group : group;
    related_group : group;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY action_assignment
     ABSTRACT SUPERTYPE;
    assigned_action : action;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY action_method_assignment
     ABSTRACT SUPERTYPE;
    assigned_action_method : action_method;
    role : action_method_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY action_method_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY action_request_assignment
     ABSTRACT SUPERTYPE;
    assigned_action_request : versioned_action_request;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY approval_assignment
     ABSTRACT SUPERTYPE;
    assigned_approval : approval;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY attribute_classification_assignment
     ABSTRACT SUPERTYPE;
    assigned_class : group;
    attribute_name : label;
    role : classification_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY attribute_value_assignment
     ABSTRACT SUPERTYPE;
    attribute_name : label;
    attribute_value : attribute_type;
    role : attribute_value_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY attribute_value_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY certification_assignment
     ABSTRACT SUPERTYPE;
    assigned_certification : certification;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY classification_assignment
     ABSTRACT SUPERTYPE;
    assigned_class : group;
    role : classification_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY classification_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY contract_assignment
     ABSTRACT SUPERTYPE;
    assigned_contract : contract;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY date_and_time_assignment
     ABSTRACT SUPERTYPE;
    assigned_date_and_time : date_and_time;
    role : date_time_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY date_assignment
     ABSTRACT SUPERTYPE;
    assigned_date : date;
    role : date_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY document_reference
     ABSTRACT SUPERTYPE;
    assigned_document : document;
    source : label;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY document_usage_constraint_assignment
     ABSTRACT SUPERTYPE;
    assigned_document_usage : document_usage_constraint;
    role : document_usage_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY document_usage_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY effectivity_assignment
     ABSTRACT SUPERTYPE;
    assigned_effectivity : effectivity;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY effectivity_context_assignment
     ABSTRACT SUPERTYPE;
    assigned_effectivity_assignment : effectivity_assignment;
    role : effectivity_context_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY effectivity_context_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY event_occurrence_assignment
     ABSTRACT SUPERTYPE;
    assigned_event_occurrence : event_occurrence;
    role : event_occurrence_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY event_occurrence_context_assignment
     ABSTRACT SUPERTYPE;
    assigned_event_occurrence_assignment : event_occurrence_assignment;
    role : event_occurrence_context_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY experience_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_experience : experience;
    role : experience_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY experience_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY experience_type_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_experience_type : experience_type;
    role : experience_type_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY experience_type_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY external_identification_assignment
     ABSTRACT SUPERTYPE
  SUBTYPE OF (identification_assignment);
    source : external_source;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY external_referent_assignment
     ABSTRACT SUPERTYPE;
    assigned_name : label;
  DERIVE
    role : object_role := get_role(SELF);
  UNIQUE
    UR1: assigned_name;
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY group_assignment
     ABSTRACT SUPERTYPE;
    assigned_group : group;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY identification_assignment
     ABSTRACT SUPERTYPE;
    assigned_id : identifier;
    role : identification_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY identification_assignment_relationship;
    name : label;
    description : OPTIONAL text;
    relating_identification_assignment : identification_assignment;
    related_identification_assignment : identification_assignment;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY identification_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY library_assignment
     ABSTRACT SUPERTYPE
  SUBTYPE OF (external_referent_assignment);
    frame_of_reference : library_context;
  UNIQUE
    UR1: frame_of_reference;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY location_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_location : location;
    role : location_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY location_representation_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    represented_location : location;
    role : location_representation_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY location_representation_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY location_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY name_assignment
     ABSTRACT SUPERTYPE;
    assigned_name : label;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY organization_assignment
     ABSTRACT SUPERTYPE;
    assigned_organization : organization;
    role : organization_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY organization_type_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_organization_type : organization_type;
    role : organization_type_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY organization_type_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY organizational_project_assignment
     ABSTRACT SUPERTYPE;
    assigned_organizational_project : organizational_project;
    role : organizational_project_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY organizational_project_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY person_and_organization_assignment
     ABSTRACT SUPERTYPE;
    assigned_person_and_organization : person_and_organization;
    role : person_and_organization_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY person_assignment
     ABSTRACT SUPERTYPE;
    assigned_person : person;
    role : person_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY person_type_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_person_type : person_type;
    role : person_type_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY person_type_definition_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_person_type_definition : person_type_definition;
    role : person_type_definition_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY person_type_definition_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY person_type_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY position_in_organization_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_position_in_organization : position_in_organization;
    role : position_in_organization_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY position_in_organization_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY position_in_organization_type_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_position_in_organization_type : position_in_organization_type;
    role : position_in_organization_type_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY position_in_organization_type_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY qualification_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_qualification : qualification;
    role : qualification_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY qualification_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY qualification_type_assignment
     ABSTRACT SUPERTYPE;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    assigned_qualification_type : qualification_type;
    role : qualification_type_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY qualification_type_role;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY security_classification_assignment
     ABSTRACT SUPERTYPE;
    assigned_security_classification : security_classification;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY time_assignment
     ABSTRACT SUPERTYPE;
    assigned_time : local_time;
    role : time_role;
  END_ENTITY;
(* USED FROM (management_resources_schema); *)
  ENTITY time_interval_assignment
     ABSTRACT SUPERTYPE;
    assigned_time_interval : time_interval;
    role : time_interval_role;
  END_ENTITY;
(* USED FROM (Approval_mim); *)
ENTITY applied_approval_assignment
  SUBTYPE OF (approval_assignment);
  items : SET[1:?] OF approval_item;
END_ENTITY;
(* USED FROM (Classification_assignment_mim); *)
ENTITY applied_classification_assignment
  SUBTYPE OF (classification_assignment);
  items : SET[1:?] OF classification_item;
END_ENTITY;
(* USED FROM (Contract_mim); *)
ENTITY applied_contract_assignment
  SUBTYPE OF (contract_assignment);
  items : SET[1:?] OF contract_item;
END_ENTITY;
(* USED FROM (Date_time_assignment_mim); *)
ENTITY applied_date_and_time_assignment
  SUBTYPE OF (date_and_time_assignment);
  items : SET [1:?] OF date_and_time_item;
END_ENTITY;
(* USED FROM (Date_time_assignment_mim); *)
ENTITY applied_date_assignment
  SUBTYPE OF (date_assignment);
  items : SET [1:?] OF date_item;
END_ENTITY;
(* USED FROM (Person_organization_assignment_mim); *)
ENTITY applied_organization_assignment
  SUBTYPE OF (organization_assignment);
  items : SET [1:?] OF organization_item;
END_ENTITY;
(* USED FROM (Person_organization_assignment_mim); *)
ENTITY applied_person_and_organization_assignment
  SUBTYPE OF (person_and_organization_assignment);
  items : SET [1:?] OF person_and_organization_item;
END_ENTITY;
(* USED FROM (Security_classification_mim); *)
ENTITY applied_security_classification_assignment
  SUBTYPE OF (security_classification_assignment);
  items : SET [1:?] OF security_classification_item;
END_ENTITY;
(* USED FROM (Identification_assignment_mim); *)
ENTITY applied_identification_assignment
  SUBTYPE OF (identification_assignment);
  items : SET[1:?] OF identification_item;
END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_category;
    name : label;
    description : OPTIONAL text;
  DERIVE
    id : identifier := get_id_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_related_product_category
    SUBTYPE OF (product_category);
    products : SET [1:?] OF product;
  END_ENTITY;
(* USED FROM (systems_engineering_representation_schema); *)
ENTITY analysis_model
SUBTYPE OF (representation);
  SELF\representation.context_of_items : analysis_representation_context;
END_ENTITY;
(* USED FROM (systems_engineering_representation_schema); *)
ENTITY analysis_representation_context
SUBTYPE OF (representation_context);
END_ENTITY;
(* USED FROM (Ap239_work_definition_mim); *)
ENTITY characterized_applied_action_assignment
  SUBTYPE OF (applied_action_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Activity_mim); *)
ENTITY applied_action_assignment
SUBTYPE OF (action_assignment);
  items : SET [1 : ?] OF action_items;
END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action;
    name : label;
    description : OPTIONAL text;
    chosen_method : action_method;
  DERIVE
    id : identifier := get_id_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_relationship;
    name : label;
    description : OPTIONAL text;
    relating_action : action;
    related_action : action;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_status;
    status : label;
    assigned_action : executed_action;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY executed_action
    SUBTYPE OF (action);
  END_ENTITY;
(* USED FROM (basic_attribute_schema); *)
  ENTITY id_attribute;
    attribute_value : identifier;
    identified_item : id_attribute_select;
  END_ENTITY;
(* USED FROM (basic_attribute_schema); *)
  ENTITY object_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY applied_effectivity_context_assignment
  SUBTYPE OF (effectivity_context_assignment);
  items : SET[1:?] OF product_as_individual;
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_address
  SUBTYPE OF (address, characterized_object);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_applied_organization_assignment
  SUBTYPE OF (applied_organization_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_applied_person_and_organization_assignment
  SUBTYPE OF (applied_person_and_organization_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_hierarchical_interface_connection
  SUBTYPE OF (characterized_object, hierarchical_interface_connection);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_interface_connection
  SUBTYPE OF (characterized_object, interface_connection);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_interface_connector_occurrence
  SUBTYPE OF (characterized_object, interface_connector_occurrence);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_interface_definition_connection
  SUBTYPE OF (characterized_object, interface_definition_connection);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_organizational_project
  SUBTYPE OF (characterized_object, organizational_project);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_person
  SUBTYPE OF (characterized_object, person);
END_ENTITY;
(* USED FROM (Ap239_part_definition_information_mim); *)
ENTITY characterized_person_and_organization
  SUBTYPE OF (characterized_object, person_and_organization);
END_ENTITY;
(* USED FROM (Ap239_document_management_mim); *)
ENTITY characterized_applied_document_reference
  SUBTYPE OF (applied_document_reference, characterized_object);
END_ENTITY;
(* USED FROM (Ap239_document_management_mim); *)
ENTITY characterized_applied_document_usage_constraint_assignment
  SUBTYPE OF (applied_document_usage_constraint_assignment, characterized_object);
END_ENTITY;
(* USED FROM (approval_schema); *)
  ENTITY approval;
    status : approval_status;
    level : label;
  END_ENTITY;
(* USED FROM (Attribute_classification_mim); *)
ENTITY applied_attribute_classification_assignment
  SUBTYPE OF (attribute_classification_assignment);
  SELF\attribute_classification_assignment.assigned_class : class;
  items : SET[1:?] OF attribute_classification_item;
END_ENTITY;
(* USED FROM (Certification_mim); *)
ENTITY applied_certification_assignment
  SUBTYPE OF (certification_assignment);
  items : SET[1:?] OF certification_item;
END_ENTITY;
(* USED FROM (certification_schema); *)
  ENTITY certification;
    name : label;
    purpose : text;
    kind : certification_type;
  END_ENTITY;
(* USED FROM (contract_schema); *)
  ENTITY contract;
    name : label;
    purpose : text;
    kind : contract_type;
  END_ENTITY;
(* USED FROM (Document_assignment_mim); *)
ENTITY applied_document_reference
  SUBTYPE OF (document_reference);
  items : SET[1:?] OF document_reference_item;
END_ENTITY;
(* USED FROM (Document_assignment_mim); *)
ENTITY applied_document_usage_constraint_assignment
  SUBTYPE OF (document_usage_constraint_assignment);
  items : SET[1:?] OF document_reference_item;
END_ENTITY;
(* USED FROM (Document_assignment_mim); *)
ENTITY document_product_equivalence
  SUBTYPE OF (document_product_association);
WHERE
  WR1: SELF\document_product_association.name = 'equivalence';
  WR2: NOT('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT' IN TYPEOF(SELF\document_product_association.related_product)) OR ((SELF\document_product_association.relating_document.kind. product_data_type = 'configuration controlled document') AND (SIZEOF( QUERY( prpc <* USEDIN(SELF\document_product_association.related_product,'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document' )) = 1));
  WR3: NOT('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_FORMATION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document version') AND (SIZEOF( QUERY( prpc <* USEDIN(SELF.related_product\product_definition_formation.of_product, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document')) = 1));
  WR4: NOT('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document definition') AND (SIZEOF( QUERY( prpc <* USEDIN(SELF\document_product_association.related_product\product_definition.formation.of_product, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document' )) = 1));
END_ENTITY;
(* USED FROM (document_schema); *)
  ENTITY document_relationship;
    name : label;
    description : OPTIONAL text;
    relating_document : document;
    related_document : document;
  END_ENTITY;
(* USED FROM (document_schema); *)
  ENTITY document_type;
    product_data_type : label;
  END_ENTITY;
(* USED FROM (Envelope_mim); *)
ENTITY envelope
  SUBTYPE OF (characterized_object, product);
END_ENTITY;
(* USED FROM (Envelope_mim); *)
ENTITY envelope_relationship
  SUBTYPE OF (product_relationship);
END_ENTITY;
(* USED FROM (External_item_identification_assignment_mim); *)
ENTITY applied_external_identification_assignment
SUBTYPE OF (external_identification_assignment);
  items : SET [1 : ?] OF external_identification_item;
END_ENTITY;
(* USED FROM (File_identification_mim); *)
ENTITY document_file
SUBTYPE OF (document, characterized_object);
WHERE
  WR1: SELF\characterized_object.name = '';
  WR2: NOT EXISTS(SELF\characterized_object.description);
  WR3: SIZEOF( QUERY( drt <* SELF\document.representation_types |
               drt.name IN ['digital','physical'])) = 1;
END_ENTITY;
(* USED FROM (Information_rights_mim); *)
ENTITY applied_usage_right
  SUBTYPE OF (applied_action_assignment);
  SELF\applied_action_assignment.items : SET[1:?] OF ir_usage_item;
END_ENTITY;
(* USED FROM (Information_rights_mim); *)
ENTITY information_right
  SUBTYPE OF (action_method);
END_ENTITY;
(* USED FROM (Information_rights_mim); *)
ENTITY information_usage_right
  SUBTYPE OF (action_method);
END_ENTITY;
(* USED FROM (Information_rights_mim); *)
ENTITY right_to_usage_association
  SUBTYPE OF (action_method_relationship);
  SELF\action_method_relationship.relating_method : information_usage_right;  -- right_usage : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\action_method_relationship.related_method : information_right;  -- right_applied : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      right_applied : INFORMATION_RIGHT := SELF\action_method_relationship.related_method;  -- RELATED_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      right_usage : INFORMATION_USAGE_RIGHT := SELF\action_method_relationship.relating_method;  -- RELATING_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Information_rights_mim); *)
ENTITY usage_association
  SUBTYPE OF (action_method_relationship);
  SELF\action_method_relationship.relating_method : information_usage_right;  -- relating : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\action_method_relationship.related_method : information_usage_right;  -- related : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      related : INFORMATION_USAGE_RIGHT := SELF\action_method_relationship.related_method;  -- RELATED_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      relating : INFORMATION_USAGE_RIGHT := SELF\action_method_relationship.relating_method;  -- RELATING_METHOD : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Message_mim); *)
ENTITY containing_message
  SUBTYPE OF (group_assignment);
  items : SET[1:1] OF structured_message;

  SELF\group_assignment.assigned_group : message_contents_group;  -- message_contents_group : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      message_contents_group : MESSAGE_CONTENTS_GROUP := SELF\group_assignment.assigned_group;  -- ASSIGNED_GROUP : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Message_mim); *)
ENTITY message_contents_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:?] OF representation;

  SELF\group_assignment.assigned_group : message_contents_group;  -- message_contents_group : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      message_contents_group : MESSAGE_CONTENTS_GROUP := SELF\group_assignment.assigned_group;  -- ASSIGNED_GROUP : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Message_mim); *)
ENTITY message_contents_group
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Message_mim); *)
ENTITY message_relationship
  SUBTYPE OF (product_relationship);
  SELF\product_relationship.relating_product : structured_message;  -- relating_message : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_relationship.related_product : structured_message;  -- related_message : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      related_message : STRUCTURED_MESSAGE := SELF\product_relationship.related_product;  -- RELATED_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      relating_message : STRUCTURED_MESSAGE := SELF\product_relationship.relating_product;  -- RELATING_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Message_mim); *)
ENTITY structured_message
  SUBTYPE OF (product);
END_ENTITY;
(* USED FROM (Multi_linguism_mim); *)
ENTITY language 
SUBTYPE OF (group); 
WHERE
WR1: SELF\group.name <> '';
END_ENTITY; 
(* USED FROM (Multi_linguism_mim); *)
ENTITY attribute_language_assignment 
SUBTYPE OF (attribute_classification_assignment); 
  SELF\attribute_classification_assignment.assigned_class: language;
  items : SET [1:?] OF attribute_language_item; 
WHERE 
WR1: SELF\attribute_classification_assignment.role.name IN ['primary', 'translated']; 
WR2: SELF\attribute_classification_assignment.attribute_name<> '';
END_ENTITY; 
(* USED FROM (Multi_linguism_mim); *)
ENTITY multi_language_attribute_assignment 
SUBTYPE OF (attribute_value_assignment); 
  items : SET [1:?] OF multi_language_attribute_item;

DERIVE
  translation_language : language := language_indication[1]\attribute_classification_assignment.assigned_class;

INVERSE
  language_indication: SET[1:1] OF attribute_language_assignment FOR items;

WHERE 
WR1: (SELF\attribute_value_assignment.role.name = 'alternate language');
WR2: SIZEOF( QUERY( ala <* language_indication |  
   (ala\attribute_classification_assignment.attribute_name = 'attribute_value') AND 
   (ala\attribute_classification_assignment.role.name='translated') )) = 1 ; 
WR3: SELF\attribute_value_assignment.attribute_name <> '' ;
WR4: SIZEOF(QUERY(ci <* items |
SIZEOF(QUERY(ata <* USEDIN(ci, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS') |
(ata\attribute_value_assignment.attribute_name = SELF\attribute_value_assignment.attribute_name) AND 
(ata.translation_language :=: translation_language) ))>1 )) =0;
WR5: SIZEOF(QUERY(ci <* items |
SIZEOF(QUERY(ata <* USEDIN(ci, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS') |
 (ata\attribute_classification_assignment.role.name='primary') AND
 (ata\attribute_classification_assignment.attribute_name= SELF\attribute_value_assignment.attribute_name) AND 
 (ata\attribute_classification_assignment.assigned_class :=: translation_language) ))>0 )) =0;
END_ENTITY; 
(* USED FROM (Person_organization_mim); *)
ENTITY person_and_organization_address
  SUBTYPE OF (organizational_address, personal_address);
  SELF\organizational_address.organizations : SET[1:1] OF organization;
  SELF\personal_address.people : SET[1:1] OF person;
WHERE
  WR1: SIZEOF(QUERY(pao <* USEDIN (SELF\personal_address.people[1], 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PERSON_AND_ORGANIZATION.THE_PERSON') | pao.the_organization :=: SELF\organizational_address.organizations[1])) = 1;
END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY organization;
    id : OPTIONAL identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY person;
    id : identifier;
    last_name : OPTIONAL label;
    first_name : OPTIONAL label;
    middle_names : OPTIONAL LIST [1:?] OF label;
    prefix_titles : OPTIONAL LIST [1:?] OF label;
    suffix_titles : OPTIONAL LIST [1:?] OF label;
  WHERE
    WR1: EXISTS(last_name) OR EXISTS(first_name);
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    frame_of_reference : SET [1:?] OF product_context;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_definition;
    id : identifier;
    description : OPTIONAL text;
    formation : product_definition_formation;
    frame_of_reference : product_definition_context;
  DERIVE
    name : label := get_name_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_definition_formation;
    id : identifier;
    description : OPTIONAL text;
    of_product : product;
  UNIQUE
    UR1: id, of_product;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_definition_relationship  SUPERTYPE OF (ONEOF (
               ATTACHMENT_SLOT_ON_PRODUCT,
               BREAKDOWN_CONTEXT,
               BREAKDOWN_ELEMENT_USAGE,
               BREAKDOWN_OF,
               INTERFACE_DEFINITION_CONNECTION,
               INTERFACE_DEFINITION_FOR,
               PRODUCT_IN_ATTACHMENT_SLOT) ) ;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_product_definition : product_definition;
    related_product_definition : product_definition;
  END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY characterized_object;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY descriptive_representation_item
  SUBTYPE OF (representation_item);
  description : text;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY measure_representation_item
  SUBTYPE OF (representation_item, measure_with_unit);
END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY representation;
      name             : label;
      items            : SET[1:?] OF representation_item;
      context_of_items : representation_context;
    DERIVE
      id               : identifier := get_id_value (SELF);
      description      : text := get_description_value (SELF);
    WHERE
      WR1: SIZEOF (USEDIN (SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' +
                                 'ID_ATTRIBUTE.IDENTIFIED_ITEM'))
         <= 1;
      WR2: SIZEOF (USEDIN (SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' +
                                 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))
         <= 1;
  END_ENTITY;
(* USED FROM (representation_schema); *)
(* Pruned SUPERTYPE *)
  ENTITY representation_item
    SUPERTYPE OF (ONEOF (
              COMPOUND_REPRESENTATION_ITEM,
              MAPPED_ITEM,
              VALUE_REPRESENTATION_ITEM));
      name : label;
    WHERE
      WR1: SIZEOF(using_representations(SELF)) > 0;
  END_ENTITY;
(* USED FROM (State_characterized_mim); *)
ENTITY statechar_applied_object
  SUBTYPE OF (characterized_object, state_observed_assignment);
END_ENTITY;
(* USED FROM (State_characterized_mim); *)
ENTITY statechar_object
  SUBTYPE OF (characterized_object, state_observed);
END_ENTITY;
(* USED FROM (State_characterized_mim); *)
ENTITY statechar_relationship_object
  SUBTYPE OF (characterized_object, state_observed_relationship);
END_ENTITY;
(* USED FROM (State_characterized_mim); *)
ENTITY statechar_type_applied_object
  SUBTYPE OF (characterized_object, state_type_assignment);
END_ENTITY;
(* USED FROM (State_characterized_mim); *)
ENTITY statechar_type_object
  SUBTYPE OF (characterized_object, state_type);
END_ENTITY;
(* USED FROM (State_characterized_mim); *)
ENTITY statechar_type_relationship_object
  SUBTYPE OF (characterized_object, state_type_relationship);
END_ENTITY;
(* USED FROM (State_observed_mim); *)
ENTITY applied_state_observed_assignment
  SUBTYPE OF (state_observed_assignment);
  items : SET[1:?] OF state_observed_of_item;
END_ENTITY;
(* USED FROM (State_observed_mim); *)
ENTITY state_predicted
  SUBTYPE OF (state_observed);
END_ENTITY;
(* USED FROM (application_context_schema); *)
  ENTITY application_context_element
    SUPERTYPE OF (ONEOF (
              LIBRARY_CONTEXT,
              PRODUCT_CONCEPT_CONTEXT,
              PRODUCT_CONTEXT,
              PRODUCT_DEFINITION_CONTEXT));
    name : label;
    frame_of_reference : application_context;
  END_ENTITY;
(* USED FROM (application_context_schema); *)
  ENTITY product_concept_context
    SUBTYPE OF (application_context_element);
    market_segment_type : label;
  END_ENTITY;
(* USED FROM (application_context_schema); *)
  ENTITY product_context
    SUBTYPE OF (application_context_element);
    discipline_type : label;
  END_ENTITY;
(* USED FROM (application_context_schema); *)
  ENTITY product_definition_context
    SUBTYPE OF (application_context_element);
    life_cycle_stage : label;
  END_ENTITY;
(* USED FROM (effectivity_schema); *)
  ENTITY effectivity
    SUPERTYPE OF (ONEOF (
              SERIAL_NUMBERED_EFFECTIVITY,
              DATED_EFFECTIVITY,
              LOT_EFFECTIVITY,
              TIME_INTERVAL_BASED_EFFECTIVITY));
    id : identifier;
  DERIVE
    name : label := get_name_value(SELF);
    description : text := get_description_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
    WR2: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (effectivity_schema); *)
  ENTITY effectivity_relationship;
    name : label;
    description : OPTIONAL text;
    related_effectivity : effectivity;
    relating_effectivity : effectivity;
  END_ENTITY;
(* USED FROM (Interface_lifecycle_mim); *)
ENTITY interface_connector_as_planned
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (Interface_lifecycle_mim); *)
ENTITY interface_connector_as_realized
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (Interface_lifecycle_mim); *)
ENTITY interface_connector_design
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (Interface_lifecycle_mim); *)
ENTITY interface_connector_design_to_planned
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_design;
  SELF\product_definition_formation_relationship.related_product_definition_formation : interface_connector_as_planned;
WHERE
  WR1: SELF.relating_product_definition_formation.of_product :=: SELF.related_product_definition_formation.of_product;
END_ENTITY;
(* USED FROM (Interface_lifecycle_mim); *)
ENTITY interface_connector_design_to_realized
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_design;
  SELF\product_definition_formation_relationship.related_product_definition_formation : interface_connector_as_realized;
WHERE
  WR1: SELF.relating_product_definition_formation.of_product :=: SELF.related_product_definition_formation.of_product;
END_ENTITY;
(* USED FROM (Interface_lifecycle_mim); *)
ENTITY interface_connector_planned_to_realized
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : interface_connector_as_planned;
  SELF\product_definition_formation_relationship.related_product_definition_formation : interface_connector_as_realized;
WHERE
  WR1: SELF.relating_product_definition_formation.of_product :=: SELF.related_product_definition_formation.of_product;
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY assumption
  SUBTYPE OF (state_observed);
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY assumption_assignment
  SUBTYPE OF (characterized_applied_state_observed_assignment);
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY assumption_relationship
  SUBTYPE OF (state_observed_relationship);
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY characterized_applied_state_observed_assignment
  SUBTYPE OF (applied_state_observed_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY item_assumed
  SUBTYPE OF (characterized_applied_state_observed_assignment);
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY justification_assignment
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY justification_group_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:1] OF product;
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY justification_item_group_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:1] OF justification_item;
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY justification_support_assignment
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Justification_mim); *)
ENTITY justification_support_item_group_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:1] OF justification_support_item;
END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_as_individual
  SUBTYPE OF (product);
END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_as_individual_version
   ABSTRACT SUPERTYPE OF (ONEOF (
                        PRODUCT_AS_PLANNED,
                        PRODUCT_AS_REALIZED))
  SUBTYPE OF (product_definition_formation);
  SELF\product_definition_formation.of_product : product_as_individual;
END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_as_individual_view
  SUBTYPE OF (product_definition);
  SELF\product_definition.formation : product_as_individual_version;  -- defined_version : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      defined_version : PRODUCT_AS_INDIVIDUAL_VERSION := SELF\product_definition.formation;  -- FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_as_planned
  SUBTYPE OF (product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_as_realized
  SUBTYPE OF (product_as_individual_version);
END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_design_to_individual
  SUBTYPE OF (product_relationship);
  SELF\product_relationship.related_product : product_as_individual;  -- individual_product : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause

  (* removed : SELF\product_relationship.product_design :  PRODUCT *)
    DERIVE
      individual_product : PRODUCT_AS_INDIVIDUAL := SELF\product_relationship.related_product;  -- RELATED_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      product_design : PRODUCT := SELF\product_relationship.relating_product;  -- RELATING_PRODUCT : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_design_version_to_individual
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.related_product_definition_formation : product_as_individual_version;  -- individual_product : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause

  (* removed : SELF\product_definition_formation_relationship.product_design_version :  PRODUCT_DEFINITION_FORMATION *)
    DERIVE
      individual_product : PRODUCT_AS_INDIVIDUAL_VERSION := SELF\product_definition_formation_relationship.related_product_definition_formation;  -- RELATED_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      product_design_version : PRODUCT_DEFINITION_FORMATION := SELF\product_definition_formation_relationship.relating_product_definition_formation;  -- RELATING_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_design_view_to_individual
  SUBTYPE OF (product_definition_relationship);
  SELF\product_definition_relationship.related_product_definition : product_as_individual_view;  -- product_as_individual_view : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause

  (* removed : SELF\product_definition_relationship.product_definition :  PRODUCT_DEFINITION *)
    DERIVE
      product_as_individual_view : PRODUCT_AS_INDIVIDUAL_VIEW := SELF\product_definition_relationship.related_product_definition;  -- RELATED_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      product_definition : PRODUCT_DEFINITION := SELF\product_definition_relationship.relating_product_definition;  -- RELATING_PRODUCT_DEFINITION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (Product_as_individual_mim); *)
ENTITY product_planned_to_realized
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : product_as_planned;  -- planned_product : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
  SELF\product_definition_formation_relationship.related_product_definition_formation : product_as_realized;  -- realized_product : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, an attribute with the new name is in the DERIVE clause
    DERIVE
      planned_product : PRODUCT_AS_PLANNED := SELF\product_definition_formation_relationship.relating_product_definition_formation;  -- RELATING_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE
      realized_product : PRODUCT_AS_REALIZED := SELF\product_definition_formation_relationship.related_product_definition_formation;  -- RELATED_PRODUCT_DEFINITION_FORMATION : This ATTRIBUTE was RENAMED in the EXPRESS E2 source, this is the new name implemented as DERIVE

END_ENTITY;
(* USED FROM (product_concept_schema); *)
ENTITY product_concept;
  id                  : identifier;
  name                : label;
  description         : OPTIONAL text;
  market_context      : product_concept_context;
UNIQUE
  UR1: id;
END_ENTITY;
(* USED FROM (product_property_representation_schema); *)
  ENTITY property_definition_representation;
    definition : represented_definition;
    used_representation : representation;
  DERIVE
    description : text := get_description_value(SELF);
    name : label := get_name_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
    WR2: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (state_observed_schema); *)
ENTITY ascribable_state;
  name : label;
  description : OPTIONAL text;
  pertaining_state_type : state_type;
  ascribed_state_observed : state_observed;
END_ENTITY;
(* USED FROM (state_observed_schema); *)
ENTITY ascribable_state_relationship;
  name : label;
  description : OPTIONAL text;
  relating_ascribable_state : ascribable_state;
  related_ascribable_state : ascribable_state;
END_ENTITY;
(* USED FROM (state_observed_schema); *)
ENTITY state_observed;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (state_observed_schema); *)
ENTITY state_observed_relationship;
  name : label;
  description : OPTIONAL text;
  relating_state_observed : SET[1:?] OF state_observed;
  related_state_observed : SET[1:?] OF state_observed;
END_ENTITY;
(* USED FROM (state_type_schema); *)
ENTITY state_type;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (state_type_schema); *)
ENTITY state_type_relationship;
  name : label;
  description : OPTIONAL text;
  relating_state_type : SET[1:?] OF state_type;
  related_state_type : SET[1:?] OF state_type;
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY attachment_slot_as_planned
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY attachment_slot_as_realized
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY attachment_slot_design
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY attachment_slot_design_to_planned
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : attachment_slot_design;
  SELF\product_definition_formation_relationship.related_product_definition_formation : attachment_slot_as_planned;
WHERE
  WR1: SELF.relating_product_definition_formation.of_product :=: SELF.related_product_definition_formation.of_product;
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY attachment_slot_design_to_realized
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : attachment_slot_design;
  SELF\product_definition_formation_relationship.related_product_definition_formation : attachment_slot_as_realized;
WHERE
  WR1: SELF.relating_product_definition_formation.of_product :=: SELF.related_product_definition_formation.of_product;
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY attachment_slot_on_product
  SUBTYPE OF (product_definition_relationship);
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY attachment_slot_planned_to_realized
  SUBTYPE OF (product_definition_formation_relationship);
  SELF\product_definition_formation_relationship.relating_product_definition_formation : attachment_slot_as_planned;
  SELF\product_definition_formation_relationship.related_product_definition_formation : attachment_slot_as_realized;
WHERE
  WR1: SELF.relating_product_definition_formation.of_product :=: SELF.related_product_definition_formation.of_product;
END_ENTITY;
(* USED FROM (Attachment_slot_mim); *)
ENTITY product_in_attachment_slot
  SUBTYPE OF (product_definition_relationship);
END_ENTITY;
(* USED FROM (Condition_mim); *)
ENTITY condition
  SUBTYPE OF (action_method);
END_ENTITY;
(* USED FROM (Configuration_item_mim); *)
ENTITY configuration_item_hierarchical_relationship
  SUBTYPE OF (configuration_item_relationship);
END_ENTITY;
(* USED FROM (Configuration_item_mim); *)
ENTITY configuration_item_revision_sequence
  SUBTYPE OF (configuration_item_relationship);
END_ENTITY;
(* USED FROM (configuration_management_schema); *)
ENTITY configuration_design;
  configuration : configuration_item;
  design        : configuration_design_item;
DERIVE
  name          : label := get_name_value (SELF);
  description   : text := get_description_value (SELF);
UNIQUE
  UR1: configuration, design;
WHERE
  WR1: SIZEOF (USEDIN (SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' +
                             'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  WR2: SIZEOF (USEDIN (SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' +
                             'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
END_ENTITY;
(* USED FROM (configuration_management_schema); *)
ENTITY configuration_effectivity
  SUBTYPE OF (product_definition_effectivity);
  configuration : configuration_design;
UNIQUE
  UR1: configuration,
       usage,
       id;
WHERE
  WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_USAGE' IN
        TYPEOF (SELF\product_definition_effectivity.usage);
END_ENTITY;
(* USED FROM (configuration_management_schema); *)
ENTITY configuration_item;
   id                  :  identifier;
   name                :  label;
   description         :  OPTIONAL text;
   item_concept        :  product_concept;
   purpose             :  OPTIONAL label;
END_ENTITY;
(* USED FROM (Effectivity_application_mim); *)
ENTITY applied_effectivity_assignment
  SUBTYPE OF (effectivity_assignment);
  items : SET[1:?] OF effectivity_item;
END_ENTITY;
(* USED FROM (Functional_breakdown_mim); *)
  ENTITY functional_breakdown_context
    SUBTYPE OF (breakdown_context);
  END_ENTITY;
(* USED FROM (Functional_breakdown_mim); *)
  ENTITY functional_element_usage
    SUBTYPE OF (breakdown_element_usage);
  END_ENTITY;
(* USED FROM (Hybrid_breakdown_mim); *)
ENTITY hybrid_breakdown_context
  SUBTYPE OF (breakdown_context);
END_ENTITY;
(* USED FROM (Hybrid_breakdown_mim); *)
ENTITY hybrid_element_usage
  SUBTYPE OF (breakdown_element_usage);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY hierarchical_interface_connection
  SUBTYPE OF (interface_connection);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_connection
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_connector_definition
  SUBTYPE OF (product_definition);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_connector_occurrence
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_connector_version
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_definition_connection
  SUBTYPE OF (product_definition_relationship);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_definition_for
  SUBTYPE OF (product_definition_relationship);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_specification_definition
  SUBTYPE OF (product_definition);
END_ENTITY;
(* USED FROM (Interface_mim); *)
ENTITY interface_specification_version
  SUBTYPE OF (product_definition_formation);
END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY organizational_address
    SUBTYPE OF (address);
    organizations : SET [1:?] OF organization;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY organizational_project;
    name : label;
    description : OPTIONAL text;
    responsible_organizations : SET [1:?] OF organization;
  DERIVE
    id : identifier := get_id_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (Physical_breakdown_mim); *)
  ENTITY physical_breakdown_context
    SUBTYPE OF (breakdown_context);
  END_ENTITY;
(* USED FROM (Physical_breakdown_mim); *)
  ENTITY physical_element_usage
    SUBTYPE OF (breakdown_element_usage);
  END_ENTITY;
(* USED FROM (Product_breakdown_mim); *)
  ENTITY breakdown_context
      SUPERTYPE OF (ONEOF (
               FUNCTIONAL_BREAKDOWN_CONTEXT,
               HYBRID_BREAKDOWN_CONTEXT,
               PHYSICAL_BREAKDOWN_CONTEXT,
               SYSTEM_BREAKDOWN_CONTEXT,
               ZONE_BREAKDOWN_CONTEXT) ) 
      SUBTYPE OF (product_definition_relationship);
  END_ENTITY;
(* USED FROM (Product_breakdown_mim); *)
  ENTITY breakdown_element_group_assignment
    SUBTYPE OF (group_assignment);
      SELF\group_assignment.assigned_group : product_definition_element_relationship;
      items : SET[1:1] OF product_definition_or_breakdown_element_usage;
  END_ENTITY;
(* USED FROM (Product_breakdown_mim); *)
  ENTITY breakdown_element_realization
    SUBTYPE OF (characterized_object, product_definition_element_relationship);
  END_ENTITY;
(* USED FROM (Product_breakdown_mim); *)
  ENTITY breakdown_element_usage
      SUPERTYPE OF (ONEOF (
               FUNCTIONAL_ELEMENT_USAGE,
               HYBRID_ELEMENT_USAGE,
               PHYSICAL_ELEMENT_USAGE,
               SYSTEM_ELEMENT_USAGE,
               ZONE_ELEMENT_USAGE) ) 
      SUBTYPE OF (product_definition_relationship);
  END_ENTITY;
(* USED FROM (Product_breakdown_mim); *)
  ENTITY breakdown_of
    SUBTYPE OF (product_definition_relationship);
  END_ENTITY;
(* USED FROM (Product_breakdown_mim); *)
  ENTITY product_definition_element_relationship
    SUBTYPE OF (group);
  END_ENTITY;
(* USED FROM (Product_breakdown_mim); *)
  ENTITY product_definition_group_assignment
    SUBTYPE OF (group_assignment);
    SELF\group_assignment.assigned_group : product_definition_element_relationship;
    items : SET[1:1] OF product_definition_or_product_definition_relationship;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_definition_formation_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_product_definition_formation : product_definition_formation;
    related_product_definition_formation : product_definition_formation;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_product : product;
    related_product : product;
  END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY product_definition_shape
    SUBTYPE OF (property_definition);
  UNIQUE
    UR1: SELF\property_definition.definition;
  WHERE
    WR1: SIZEOF(['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CHARACTERIZED_PRODUCT_DEFINITION', 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CHARACTERIZED_OBJECT'] * TYPEOF(SELF\property_definition.definition)) > 0;
  END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY property_definition;
    name : label;
    description : OPTIONAL text;
    definition : characterized_definition;
  DERIVE
    id : identifier := get_id_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY shape_aspect;
    name : label;
    description : OPTIONAL text;
    of_shape : product_definition_shape;
    product_definitional : LOGICAL;
  DERIVE
    id : identifier := get_id_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY shape_aspect_relationship;
    name : label;
    description : OPTIONAL text;
    relating_shape_aspect : shape_aspect;
    related_shape_aspect : shape_aspect;
  DERIVE
    id : identifier := get_id_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY alternate_product_relationship;
  name        : label;
  definition  : OPTIONAL text;
  alternate   : product;
  base        : product;
  basis       : text;
UNIQUE
  UR1: alternate, base;
WHERE
  WR1: alternate :<>: base;
END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY assembly_component_usage
  SUPERTYPE OF (ONEOF (
              NEXT_ASSEMBLY_USAGE_OCCURRENCE,
              SPECIFIED_HIGHER_USAGE_OCCURRENCE,
              PROMISSORY_USAGE_OCCURRENCE))
  SUBTYPE OF (product_definition_usage);
  reference_designator : OPTIONAL identifier;
END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY assembly_component_usage_substitute;
  name              : label;
  definition        : OPTIONAL text;
  base              : assembly_component_usage;
  substitute        : assembly_component_usage;
UNIQUE
  UR1: base,substitute;
WHERE
  WR1: base.relating_product_definition :=:
       substitute.relating_product_definition;
  WR2: base :<>: substitute;
END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY make_from_usage_option
  SUBTYPE OF (product_definition_usage);
  ranking           : INTEGER;
  ranking_rationale : text;
  quantity          : measure_with_unit;
WHERE
  WR1: (NOT ('NUMBER' IN TYPEOF(quantity.value_component)))
       OR (quantity.value_component > 0);
END_ENTITY;
(* USED FROM (Project_mim); *)
ENTITY applied_organizational_project_assignment
  SUBTYPE OF (organizational_project_assignment);
  items : SET[1:?] OF project_item;
END_ENTITY;
(* USED FROM (Property_as_definition_mim); *)
ENTITY single_property_is_definition
  SUBTYPE OF (property_definition);
  SELF\property_definition.definition : product_definition;
UNIQUE
  UR1: SELF\property_definition.definition;
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY assigned_requirement
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_assignment;
  items : SET[1:1] OF product_definition;
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY requirement_assigned_object
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_assignment;
  items : SET[1:1] OF requirement_assigned_item;
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY requirement_assignment
  SUBTYPE OF (characterized_object, group);
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY requirement_source
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY satisfied_requirement
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : satisfies_requirement;
  items : SET[1:1] OF product_definition;
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY satisfies_requirement
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY satisfying_item
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : satisfies_requirement;
  items : SET[1:1] OF requirement_satisfaction_item;
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY source_for_requirement
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_source;
  items : SET[1:1] OF requirement_source_item;
END_ENTITY;
(* USED FROM (Requirement_assignment_mim); *)
ENTITY sourced_requirement
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : requirement_source;
  items : SET[1:1] OF product_definition;
END_ENTITY;
(* USED FROM (Requirement_view_definition_relationship_mim); *)
ENTITY requirement_view_definition_relationship
  SUBTYPE OF (product_definition_relationship);
END_ENTITY;
(* USED FROM (Selected_item_mim); *)
ENTITY selected_item
  SUBTYPE OF (class);
END_ENTITY;
(* USED FROM (Selected_item_mim); *)
ENTITY selected_item_assignment;
  assigned_class : selected_item;
  item : selected_item_select;
END_ENTITY;
(* USED FROM (Selected_item_mim); *)
ENTITY selected_items_assignment_in_context_group
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : selected_items_context_group;
  selected_item_assignment : SET[1:1] OF selected_item_assignment;
END_ENTITY;
(* USED FROM (Selected_item_mim); *)
ENTITY selected_items_context_group
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Selected_item_mim); *)
ENTITY selected_items_context_group_to_context
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : selected_items_context_group;
  item_context : SET[1:?] OF selected_item_context_items;
END_ENTITY;
(* USED FROM (Shape_property_assignment_mim); *)
ENTITY geometric_item_specific_usage
  SUBTYPE OF(item_identified_representation_usage);
    SELF\item_identified_representation_usage.definition          : geometric_item_specific_usage_select;
    SELF\item_identified_representation_usage.used_representation : shape_representation;
    SELF\item_identified_representation_usage.identified_item     : geometric_representation_item;
END_ENTITY;
(* USED FROM (System_breakdown_mim); *)
ENTITY system_breakdown_context
  SUBTYPE OF (breakdown_context);
END_ENTITY;
(* USED FROM (System_breakdown_mim); *)
ENTITY system_element_usage
  SUBTYPE OF (breakdown_element_usage);
END_ENTITY;
(* USED FROM (Zonal_breakdown_mim); *)
ENTITY in_zone
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Zonal_breakdown_mim); *)
ENTITY zone_breakdown_context
  SUBTYPE OF (breakdown_context);
END_ENTITY;
(* USED FROM (Zonal_breakdown_mim); *)
ENTITY zone_element_usage
  SUBTYPE OF (breakdown_element_usage);
END_ENTITY;
(* USED FROM (Location_assignment_mim); *)
ENTITY applied_location_assignment
  SUBTYPE OF (location_assignment);
  items : SET[1:?] OF location_item;
END_ENTITY;
(* USED FROM (Observation_mim); *)
ENTITY observation
  SUBTYPE OF (action_actual);
END_ENTITY;
(* USED FROM (Observation_mim); *)
ENTITY observation_consequence
  SUBTYPE OF (applied_action_assignment);
END_ENTITY;
(* USED FROM (Observation_mim); *)
ENTITY observation_relationship
  SUBTYPE OF (action_relationship);
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_attribute_assignment
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group_attributes;
  attributes : SET[1:1] OF attribute_select;
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_attribute_set
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group;
  product_group_attributes : SET[1:1] OF product_group_attributes;
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_attributes
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_context
  SUBTYPE OF (descriptive_representation_item);
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_membership
  SUBTYPE OF (characterized_object, group_assignment);
  member : product_select;
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_membership_rules
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group;
  product_group_rules : SET[1:1] OF product_group_rules;
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_purpose
  SUBTYPE OF (descriptive_representation_item);
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_relationship
  SUBTYPE OF (group_relationship);
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_rule
  SUBTYPE OF (descriptive_representation_item);
END_ENTITY;
(* USED FROM (Product_group_mim); *)
ENTITY product_group_rule_assignment
  SUBTYPE OF (group_assignment);
  SELF\group_assignment.assigned_group : product_group_rules;
  product_group_rules : SET[1:?] OF product_group_rule;
END_ENTITY;

ENTITY characterized_action_directive
  SUBTYPE OF (action_directive, characterized_object);
END_ENTITY;
(* USED FROM (state_observed_schema); *)
ENTITY state_observed_assignment
   ABSTRACT SUPERTYPE;
  assigned_state_observed : state_observed;
  role : state_observed_role;
END_ENTITY;
(* USED FROM (state_observed_schema); *)
ENTITY state_observed_role;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (Group_mim); *)
ENTITY applied_group_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:?] OF groupable_item;
END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_method  SUPERTYPE OF (ONEOF (
               TASK_ELEMENT,
               TASK_METHOD,
               TASK_METHOD_VERSION,
               TASK_OBJECTIVE) ) ;
    name : label;
    description : OPTIONAL text;
    consequence : text;
    purpose : text;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_method_relationship  SUPERTYPE OF (ONEOF (
               TASK_ELEMENT_RELATIONSHIP,
               TASK_METHOD_RELATIONSHIP,
               TASK_METHOD_VERSION_RELATIONSHIP) ) ;
    name : label;
    description : OPTIONAL text;
    relating_method : action_method;
    related_method : action_method;
  END_ENTITY;
(* USED FROM (Activity_method_assignment_mim); *)
ENTITY applied_action_method_assignment
  SUBTYPE OF (action_method_assignment);
  items : SET[1:?] OF action_method_items;
END_ENTITY;
(* USED FROM (classification_schema); *)
ENTITY class
  SUBTYPE OF (group);
END_ENTITY;
(* USED FROM (classification_schema); *)
ENTITY class_by_extension
  SUBTYPE OF (class);
END_ENTITY;
(* USED FROM (classification_schema); *)
ENTITY class_by_intension
  SUBTYPE OF (class);
END_ENTITY;
(* USED FROM (Name_assignment_mim); *)
ENTITY applied_name_assignment
  SUBTYPE OF (name_assignment);
  item : name_item;
END_ENTITY;
(* USED FROM (systems_engineering_representation_schema); *)
ENTITY description_text;
  description : text;
END_ENTITY;
(* USED FROM (systems_engineering_representation_schema); *)
ENTITY description_text_assignment  ABSTRACT SUPERTYPE;
  description : description_text;
END_ENTITY;
(* USED FROM (document_schema); *)
  ENTITY document_product_association;
    name : label;
    description : OPTIONAL text;
    relating_document : document;
    related_product : product_or_formation_or_definition;
  END_ENTITY;
(* USED FROM (Foundation_state_definition_mim); *)
ENTITY applied_state_type_assignment
  SUBTYPE OF (state_type_assignment);
  items : SET[1:?] OF state_type_of_item;
END_ENTITY;
(* USED FROM (state_type_schema); *)
ENTITY state_type_assignment
   ABSTRACT SUPERTYPE;
  assigned_state_type : state_type;
  role : state_type_role;
END_ENTITY;
(* USED FROM (Location_mim); *)
ENTITY applied_location_representation_assignment
  SUBTYPE OF (location_representation_assignment);
  items : SET[1:?] OF location_representation_item;
END_ENTITY;
(* USED FROM (Location_mim); *)
ENTITY characterized_location_object
  SUBTYPE OF (characterized_object, location);
END_ENTITY;
(* USED FROM (location_schema); *)
  ENTITY location;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (location_schema); *)
  ENTITY location_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_location : location;
    related_location : location;
  END_ENTITY;
(* USED FROM (basic_attribute_schema); *)
  ENTITY name_attribute;
    attribute_value : label;
    named_item : name_attribute_select;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY address;
    internal_location : OPTIONAL label;
    street_number : OPTIONAL label;
    street : OPTIONAL label;
    postal_box : OPTIONAL label;
    town : OPTIONAL label;
    region : OPTIONAL label;
    postal_code : OPTIONAL label;
    country : OPTIONAL label;
    facsimile_number : OPTIONAL label;
    telephone_number : OPTIONAL label;
    electronic_mail_address : OPTIONAL label;
    telex_number : OPTIONAL label;
  DERIVE
    name : label := get_name_value(SELF);
    url : identifier := get_id_value(SELF);
  WHERE
    WR1: EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(street) OR EXISTS(postal_box) OR EXISTS(town) OR EXISTS(region) OR EXISTS(postal_code) OR EXISTS(country) OR EXISTS(facsimile_number) OR EXISTS(telephone_number) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number);
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY organization_relationship;
    name : label;
    description : OPTIONAL text;
    relating_organization : organization;
    related_organization : organization;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY person_and_organization;
    the_person : person;
    the_organization : organization;
  DERIVE
    name : label := get_name_value(SELF);
    description : text := get_description_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
    WR2: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY personal_address
    SUBTYPE OF (address);
    people : SET [1:?] OF person;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY organization_role;
    name : label;
  DERIVE
    description : text := get_description_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY person_and_organization_role;
    name : label;
  DERIVE
    description : text := get_description_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY calendar_date
  SUBTYPE OF (date);
  day_component : day_in_month_number;
  month_component : month_in_year_number;
WHERE
  WR1: valid_calendar_date (SELF);
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY date_and_time;
  date_component : date;
  time_component : local_time;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY coordinated_universal_time_offset;
  hour_offset : INTEGER;
  minute_offset : OPTIONAL INTEGER;
  sense : ahead_or_behind;
DERIVE
  actual_minute_offset : INTEGER := NVL(minute_offset,0);
WHERE
  WR1: { 0 <= hour_offset < 24 };
  WR2: { 0 <= actual_minute_offset <= 59 };
  WR3: NOT (((hour_offset <> 0) OR (actual_minute_offset <>0)) AND (sense = exact));
END_ENTITY;
(* USED FROM (date_time_schema); *)
(* Pruned SUPERTYPE *)
ENTITY date
  ;
  year_component : year_number;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY date_role;
  name : label;
DERIVE
  description : text := get_description_value (SELF);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY date_time_role;
  name : label;
DERIVE
  description : text := get_description_value (SELF);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
END_ENTITY;
(* USED FROM (systems_engineering_representation_schema); *)
ENTITY representation_proxy_item
SUBTYPE OF (representation_item);
  item : representation_proxy_select;
END_ENTITY;
(* USED FROM (external_reference_schema); *)
  ENTITY external_source;
    source_id : source_item;
  DERIVE
    description : text := get_description_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (external_reference_schema); *)
  ENTITY external_source_relationship;
    name : label;
    description : OPTIONAL text;
    relating_source : external_source;
    related_source : external_source;
  END_ENTITY;
(* USED FROM (external_reference_schema); *)
  ENTITY externally_defined_item;
    item_id : source_item;
    source : external_source;
  END_ENTITY;
(* USED FROM (external_reference_schema); *)
  ENTITY externally_defined_item_relationship;
    name : label;
    description : OPTIONAL text;
    relating_item : externally_defined_item;
    related_item : externally_defined_item;
  END_ENTITY;
(* USED FROM (external_reference_schema); *)
  ENTITY pre_defined_item;
    name : label;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_definition_context_association;
    definition : product_definition;
    frame_of_reference : product_definition_context;
    role : product_definition_context_role;
  END_ENTITY;
(* USED FROM (approval_schema); *)
  ENTITY approval_date_time;
    date_time : date_time_select;
    dated_approval : approval;
  DERIVE
    role : object_role := get_role(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) <= 1;
  END_ENTITY;
(* USED FROM (approval_schema); *)
  ENTITY approval_person_organization;
    person_organization : person_organization_select;
    authorized_approval : approval;
    role : approval_role;
  END_ENTITY;
(* USED FROM (approval_schema); *)
  ENTITY approval_relationship;
    name : label;
    description : OPTIONAL text;
    relating_approval : approval;
    related_approval : approval;
  END_ENTITY;
(* USED FROM (approval_schema); *)
  ENTITY approval_role;
    role : label;
  DERIVE
    description : text := get_description_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (approval_schema); *)
  ENTITY approval_status;
    name : label;
  END_ENTITY;
(* USED FROM (basic_attribute_schema); *)
  ENTITY role_association;
    role : object_role;
    item_with_role : role_select;
  END_ENTITY;
(* USED FROM (contract_schema); *)
  ENTITY contract_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_contract : contract;
    related_contract : contract;
  END_ENTITY;
(* USED FROM (security_classification_schema); *)
  ENTITY security_classification;
    name : label;
    purpose : text;
    security_level : security_classification_level;
  END_ENTITY;
(* USED FROM (security_classification_schema); *)
  ENTITY security_classification_level;
    name : label;
  END_ENTITY;
(* USED FROM (basic_attribute_schema); *)
  ENTITY description_attribute;
    attribute_value : text;
    described_item : description_attribute_select;
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY global_unit_assigned_context
    SUBTYPE OF (representation_context);
    units : SET [1:?] OF unit;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY global_uncertainty_assigned_context
    SUBTYPE OF (representation_context);
      uncertainty : SET [1:?] OF uncertainty_measure_with_unit;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY representation_context;
      context_identifier : identifier;
      context_type       : text;
    INVERSE
      representations_in_context : SET [1:?] OF representation FOR context_of_items;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY representation_relationship;
      name        : label;
      description : OPTIONAL text;
      rep_1       : representation;
      rep_2       : representation;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY uncertainty_measure_with_unit
    SUBTYPE OF (measure_with_unit);
      name        : label;
      description : OPTIONAL text;
    WHERE
      WR1: valid_measure_value (SELF\measure_with_unit.value_component);
  END_ENTITY;
(* USED FROM (Activity_characterized_mim); *)
ENTITY characterizable_applied_action_assignment
  SUBTYPE OF (applied_action_assignment, characterized_object);
END_ENTITY;
(* USED FROM (process_property_schema); *)
ENTITY action_property;
  name        : label;
  description : text;
  definition  : characterized_action_definition;
END_ENTITY;
(* USED FROM (Ap239_task_specification_resourced_mim); *)
ENTITY characterized_applied_action_method_assignment
  SUBTYPE OF (applied_action_method_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Ap239_task_specification_resourced_mim); *)
ENTITY characterized_applied_state_assignment
  SUBTYPE OF (applied_state_observed_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Ap239_task_specification_resourced_mim); *)
ENTITY characterized_applied_state_type_assignment
  SUBTYPE OF (applied_state_type_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Location_assignment_characterized_mim); *)
ENTITY characterized_applied_location_assignment
  SUBTYPE OF (applied_location_assignment, characterized_object);
END_ENTITY;
(* USED FROM (Organization_type_mim); *)
ENTITY applied_organization_type_assignment
  SUBTYPE OF (organization_type_assignment);
  items : SET[1:?] OF organization_type_item;
END_ENTITY;
(* USED FROM (Position_in_organization_mim); *)
ENTITY applied_position_in_organization_assignment
  SUBTYPE OF (position_in_organization_assignment);
  items : SET[1:?] OF position_in_organization_item;
END_ENTITY;
(* USED FROM (Position_in_organization_mim); *)
ENTITY applied_position_in_organization_assignment_group_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:?] OF position_in_organization_group_assignment_item;
END_ENTITY;
(* USED FROM (Position_in_organization_mim); *)
ENTITY applied_position_in_organization_group_assignment
  SUBTYPE OF (group_assignment);
  items : SET[1:?] OF position_in_organization_group_item;
END_ENTITY;
(* USED FROM (Position_in_organization_mim); *)
ENTITY applied_position_in_organization_type_assignment
  SUBTYPE OF (position_in_organization_type_assignment);
  items : SET[1:?] OF position_in_organization_type_item;
END_ENTITY;
(* USED FROM (Position_in_organization_mim); *)
ENTITY applied_project_group_name_assignment
  SUBTYPE OF (name_assignment);
  items : SET[1:?] OF project_group_name_item;
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY advisory_task_step
  SUBTYPE OF (task_step);
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY simultaneous_task_element
  SUBTYPE OF (concurrent_task_element);
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY task_invocation
  SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY task_method
  SUBTYPE OF (action_method);
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY task_method_relationship
  SUBTYPE OF (action_method_relationship);
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY task_method_version
  SUBTYPE OF (action_method);
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY task_method_version_relationship
  SUBTYPE OF (action_method_relationship);
END_ENTITY;
(* USED FROM (Task_specification_mim); *)
ENTITY task_objective
  SUBTYPE OF (action_method);
END_ENTITY;
(* USED FROM (Type_of_person_mim); *)
ENTITY applied_person_type_assignment
  SUBTYPE OF (person_type_assignment);
  items : SET[1:?] OF person_type_item;
END_ENTITY;
(* USED FROM (Type_of_person_mim); *)
ENTITY applied_person_type_definition_assignment
  SUBTYPE OF (person_type_definition_assignment);
  items : SET[1:?] OF person_definition_item;
END_ENTITY;
(* USED FROM (Type_of_person_mim); *)
ENTITY characterized_person_type_definition
  SUBTYPE OF (characterized_object, person_type_definition);
END_ENTITY;
(* USED FROM (state_type_schema); *)
ENTITY state_type_role;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_resource;
    name : label;
    description : OPTIONAL text;
    usage : SET [1:?] OF supported_item;
    kind : action_resource_type;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_resource_relationship;
    name : label;
    description : OPTIONAL text;
    relating_resource : action_resource;
    related_resource : action_resource;
  END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY general_property;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY general_property_relationship;
    name : label;
    description : OPTIONAL text;
    relating_property : general_property;
    related_property : general_property;
  END_ENTITY;
(* USED FROM (process_property_representation_schema); *)
ENTITY action_property_representation;
  name           : label;
  description    : text;
  property       : action_property;
  representation : representation;
END_ENTITY;
(* USED FROM (product_property_definition_schema); *)
  ENTITY general_property_association;
    name : label;
    description : OPTIONAL text;
    base_definition : general_property;
    derived_definition : derived_property_select;
  WHERE
    WR1: SIZEOF(USEDIN(derived_definition, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'GENERAL_PROPERTY_ASSOCIATION.' + 'DERIVED_DEFINITION')) = 1;
    WR2: derived_definition.name = base_definition.name;
  END_ENTITY;
(* USED FROM (process_property_schema); *)
ENTITY action_resource_requirement;
  name        : label;
  description : text;
  kind        : resource_requirement_type;
  operations  : SET [1:?] OF characterized_action_definition;
END_ENTITY;
(* USED FROM (process_property_schema); *)
ENTITY action_resource_requirement_relationship;
  name                                 : label;
  description                          : text;
  relating_action_resource_requirement : action_resource_requirement;
  related_action_resource_requirement  : action_resource_requirement;
WHERE
  WR1: relating_action_resource_requirement :<>: 
       related_action_resource_requirement;
END_ENTITY;
(* USED FROM (process_property_schema); *)
ENTITY requirement_for_action_resource
  SUBTYPE OF (action_resource_requirement);
  resources : SET [1:?] OF action_resource;
END_ENTITY;
(* USED FROM (process_property_schema); *)
ENTITY resource_property;
  name        : label;
  description : text;
  resource    : characterized_resource_definition;
END_ENTITY;
(* USED FROM (process_property_schema); *)
ENTITY resource_requirement_type;
  name        : label;
  description : text;
END_ENTITY;
(* USED FROM (certification_schema); *)
  ENTITY certification_type;
    description : label;
  END_ENTITY;
(* USED FROM (contract_schema); *)
  ENTITY contract_type;
    description : label;
  END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY event_occurrence;
  id : identifier;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY event_occurrence_context_role;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY event_occurrence_relationship;
  name : label;
  description : OPTIONAL text;
  relating_event : event_occurrence;
  related_event : event_occurrence;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY local_time;
  hour_component : hour_in_day;
  minute_component : OPTIONAL minute_in_hour;
  second_component : OPTIONAL second_in_minute;
  zone : coordinated_universal_time_offset;
WHERE
  WR1: valid_time (SELF);
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY time_interval_relationship;
  name : label;
  description : OPTIONAL text;
  relating_time_interval : time_interval;
  related_time_interval : time_interval;
END_ENTITY;
(* USED FROM (Event_assignment_mim); *)
ENTITY applied_event_occurrence_assignment
  SUBTYPE OF (event_occurrence_assignment);
  items : SET[1:?] OF event_occurrence_item;
END_ENTITY;
(* USED FROM (External_class_mim); *)
  ENTITY external_class_library
    SUBTYPE OF (external_source);
  END_ENTITY;
(* USED FROM (External_class_mim); *)
  ENTITY externally_defined_class
    SUBTYPE OF (class, externally_defined_item);
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY organizational_project_relationship;
    name : label;
    description : OPTIONAL text;
    relating_organizational_project : organizational_project;
    related_organizational_project : organizational_project;
  END_ENTITY;
(* USED FROM (product_definition_schema); *)
  ENTITY product_definition_with_associated_documents
    SUBTYPE OF (product_definition);
    documentation_ids : SET [1:?] OF document;
  END_ENTITY;
(* USED FROM (document_schema); *)
  ENTITY document;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    kind : document_type;
  INVERSE
    representation_types : SET [0:?] OF document_representation_type FOR represented_document;
  END_ENTITY;
(* USED FROM (document_schema); *)
  ENTITY document_representation_type;
    name : label;
    represented_document : document;
  END_ENTITY;
(* USED FROM (Extended_measure_representation_mim); *)
  ENTITY value_range
    SUBTYPE OF (compound_representation_item);
    WHERE
      WR1: ( 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.'+ 'SET_REPRESENTATION_ITEM' IN TYPEOF ( item_element ) ) AND value_range_wr1 ( item_element );
      WR2: value_range_wr2 ( item_element );
      WR3: value_range_wr3 ( item_element );
  END_ENTITY;
(* USED FROM (material_property_definition_schema); *)
ENTITY property_definition_relationship;
  name                       		: label;
  description                 	: text;
  relating_property_definition 	: property_definition;
  related_property_definition  	: property_definition;
END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY context_dependent_unit
    SUBTYPE OF (named_unit);
    name : label;
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY conversion_based_unit
    SUBTYPE OF (named_unit);
     name : label;
     conversion_factor : measure_with_unit;
   DERIVE
     SELF\named_unit.dimensions : dimensional_exponents := 
    derive_dimensional_exponents(conversion_factor\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY derived_unit
    SUPERTYPE OF (ONEOF (
              ABSORBED_DOSE_UNIT,
              ACCELERATION_UNIT,
              RADIOACTIVITY_UNIT,
              AREA_UNIT,
              CAPACITANCE_UNIT,
              DOSE_EQUIVALENT_UNIT,
              ELECTRIC_CHARGE_UNIT,
              CONDUCTANCE_UNIT,
              ELECTRIC_POTENTIAL_UNIT,
              ENERGY_UNIT,
              MAGNETIC_FLUX_DENSITY_UNIT,
              FORCE_UNIT,
              FREQUENCY_UNIT,
              ILLUMINANCE_UNIT,
              INDUCTANCE_UNIT,
              MAGNETIC_FLUX_UNIT,
              POWER_UNIT,
              PRESSURE_UNIT,
              RESISTANCE_UNIT,
              VELOCITY_UNIT,
              VOLUME_UNIT));
    elements : SET [1:?] OF derived_unit_element;
  DERIVE
    name : label := get_name_value(SELF);
  WHERE
    WR1: (SIZEOF(elements) > 1) OR ((SIZEOF(elements) = 1) AND (elements[1].exponent <> 1.0));
    WR2: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY measure_with_unit
    SUPERTYPE OF (ONEOF (
              LENGTH_MEASURE_WITH_UNIT,
              MASS_MEASURE_WITH_UNIT,
              TIME_MEASURE_WITH_UNIT,
              ELECTRIC_CURRENT_MEASURE_WITH_UNIT,
              THERMODYNAMIC_TEMPERATURE_MEASURE_WITH_UNIT,
              CELSIUS_TEMPERATURE_MEASURE_WITH_UNIT,
              AMOUNT_OF_SUBSTANCE_MEASURE_WITH_UNIT,
              LUMINOUS_INTENSITY_MEASURE_WITH_UNIT,
              PLANE_ANGLE_MEASURE_WITH_UNIT,
              SOLID_ANGLE_MEASURE_WITH_UNIT,
              AREA_MEASURE_WITH_UNIT,
              VOLUME_MEASURE_WITH_UNIT,
              RATIO_MEASURE_WITH_UNIT,
              ACCELERATION_MEASURE_WITH_UNIT,
              CAPACITANCE_MEASURE_WITH_UNIT,
              ELECTRIC_CHARGE_MEASURE_WITH_UNIT,
              CONDUCTANCE_MEASURE_WITH_UNIT,
              ELECTRIC_POTENTIAL_MEASURE_WITH_UNIT,
              ENERGY_MEASURE_WITH_UNIT,
              MAGNETIC_FLUX_DENSITY_MEASURE_WITH_UNIT,
              FORCE_MEASURE_WITH_UNIT,
              FREQUENCY_MEASURE_WITH_UNIT,
              ILLUMINANCE_MEASURE_WITH_UNIT,
              INDUCTANCE_MEASURE_WITH_UNIT,
              LUMINOUS_FLUX_MEASURE_WITH_UNIT,
              MAGNETIC_FLUX_MEASURE_WITH_UNIT,
              POWER_MEASURE_WITH_UNIT,
              PRESSURE_MEASURE_WITH_UNIT,
              RESISTANCE_MEASURE_WITH_UNIT,
              VELOCITY_MEASURE_WITH_UNIT,
              ABSORBED_DOSE_MEASURE_WITH_UNIT,
              RADIOACTIVITY_MEASURE_WITH_UNIT,
              DOSE_EQUIVALENT_MEASURE_WITH_UNIT));
    value_component : measure_value;
    unit_component : unit;
  WHERE
    WR1: valid_units(SELF);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY named_unit
    SUPERTYPE OF (ONEOF (
              SI_UNIT,
              CONVERSION_BASED_UNIT,
              CONTEXT_DEPENDENT_UNIT)
              ANDOR ONEOF (
              LENGTH_UNIT,
              MASS_UNIT,
              TIME_UNIT,
              ELECTRIC_CURRENT_UNIT,
              THERMODYNAMIC_TEMPERATURE_UNIT,
              AMOUNT_OF_SUBSTANCE_UNIT,
              LUMINOUS_FLUX_UNIT,
              LUMINOUS_INTENSITY_UNIT,
              PLANE_ANGLE_UNIT,
              SOLID_ANGLE_UNIT,
              RATIO_UNIT));
    dimensions : dimensional_exponents;
  END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY next_assembly_usage_occurrence
  SUBTYPE OF (assembly_component_usage);
END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY promissory_usage_occurrence
  SUBTYPE OF (assembly_component_usage);
END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY quantified_assembly_component_usage
  SUBTYPE OF (assembly_component_usage);
  quantity   : measure_with_unit;
WHERE
  WR1: (NOT ('NUMBER' IN TYPEOF(quantity.value_component)))
       OR (quantity.value_component > 0);
END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY specified_higher_usage_occurrence
  SUBTYPE OF (assembly_component_usage);
  upper_usage   : assembly_component_usage;
  next_usage    : next_assembly_usage_occurrence;
UNIQUE
  UR1: upper_usage, next_usage;
WHERE
  WR1: SELF :<>: upper_usage;
  WR2: SELF\product_definition_relationship.relating_product_definition
       :=: upper_usage.relating_product_definition;
  WR3: SELF\product_definition_relationship.related_product_definition
       :=: next_usage.related_product_definition;
  WR4: (upper_usage.related_product_definition :=:
       next_usage.relating_product_definition) OR
       (SIZEOF (QUERY (pdr <* USEDIN (upper_usage.related_product_definition,
       'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.' +
       'RELATED_PRODUCT_DEFINITION') |
        pdr.relating_product_definition :=: 
        next_usage.relating_product_definition)) = 1);
  WR5: SIZEOF (['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE',
       'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SPECIFIED_HIGHER_USAGE_OCCURRENCE']
       * TYPEOF(upper_usage)) = 1;
END_ENTITY;
(* USED FROM (effectivity_schema); *)
  ENTITY dated_effectivity
    SUBTYPE OF (effectivity);
    effectivity_end_date : OPTIONAL date_time_or_event_occurrence;
    effectivity_start_date : date_time_or_event_occurrence;
  END_ENTITY;
(* USED FROM (effectivity_schema); *)
  ENTITY lot_effectivity
    SUBTYPE OF (effectivity);
    effectivity_lot_id : identifier;
    effectivity_lot_size : measure_with_unit;
  END_ENTITY;
(* USED FROM (effectivity_schema); *)
  ENTITY serial_numbered_effectivity
    SUBTYPE OF (effectivity);
    effectivity_start_id : identifier;
    effectivity_end_id : OPTIONAL identifier;
  END_ENTITY;
(* USED FROM (effectivity_schema); *)
  ENTITY time_interval_based_effectivity
    SUBTYPE OF (effectivity);
    effectivity_period : time_interval;
  END_ENTITY;
(* USED FROM (configuration_management_schema); *)
ENTITY configuration_item_relationship;
  name                        : label;
  description                 : OPTIONAL text;
  relating_configuration_item : configuration_item;
  related_configuration_item  : configuration_item;
END_ENTITY;
(* USED FROM (product_structure_schema); *)
ENTITY product_definition_usage
  SUPERTYPE OF (ONEOF (
              MAKE_FROM_USAGE_OPTION,
              ASSEMBLY_COMPONENT_USAGE))
  SUBTYPE OF (product_definition_relationship);
UNIQUE
  UR1: SELF\product_definition_relationship.id,
       SELF\product_definition_relationship.relating_product_definition,
       SELF\product_definition_relationship.related_product_definition;
WHERE
  WR1:  acyclic_product_definition_relationship
         (SELF,
         [SELF\product_definition_relationship.related_product_definition],
         'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_USAGE');
END_ENTITY;
(* USED FROM (product_property_representation_schema); *)
  ENTITY context_dependent_shape_representation;
    representation_relation : shape_representation_relationship;
    represented_product_relation : product_definition_shape;
  DERIVE
    description : text := get_description_value(SELF);
    name : label := get_name_value(SELF);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF(SELF.represented_product_relation.definition);
    WR2: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
    WR3: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY functionally_defined_transformation;
    name        : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY representation_relationship_with_transformation
    SUBTYPE OF (representation_relationship);
      transformation_operator : transformation;
    WHERE
      WR1: SELF\representation_relationship.rep_1.context_of_items
           :<>: SELF\representation_relationship.rep_2.context_of_items;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY mapped_item
    SUBTYPE OF (representation_item);
      mapping_source : representation_map;
      mapping_target : representation_item;
    WHERE
      WR1: acyclic_mapped_representation(SELF);
  END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY relative_event_occurrence
  SUBTYPE OF (event_occurrence);
  base_event : event_occurrence;
  offset : time_measure_with_unit;
END_ENTITY;
(* USED FROM (geometry_schema); *)
(* Pruned SUPERTYPE *)
 ENTITY cartesian_point
   
  SUBTYPE OF (point);
    coordinates  : LIST [1:3] OF length_measure;
 END_ENTITY;
(* USED FROM (geometry_schema); *)
 ENTITY direction
   SUBTYPE OF (geometric_representation_item);
   direction_ratios : LIST [2:3] OF REAL;
 WHERE
   WR1: SIZEOF(QUERY(tmp <* direction_ratios | tmp <> 0.0)) > 0;
 END_ENTITY;
(* USED FROM (geometry_schema); *)
 ENTITY axis2_placement_2d
   SUBTYPE OF (placement);
   ref_direction : OPTIONAL direction;
 DERIVE
   p             : LIST [2:2] OF direction := build_2axes(ref_direction);
 WHERE
   WR1: SELF\geometric_representation_item.dim = 2;
 END_ENTITY;
(* USED FROM (geometry_schema); *)
 ENTITY axis2_placement_3d
   SUBTYPE OF (placement);
   axis          : OPTIONAL direction;
   ref_direction : OPTIONAL direction;
 DERIVE
   p             : LIST [3:3] OF direction := build_axes(axis,ref_direction);
 WHERE
   WR1: SELF\placement.location.dim = 3;
   WR2: (NOT (EXISTS (axis))) OR (axis.dim = 3);
   WR3: (NOT (EXISTS (ref_direction))) OR (ref_direction.dim = 3);
   WR4: (NOT (EXISTS (axis))) OR (NOT (EXISTS (ref_direction))) OR
          (cross_product(axis,ref_direction).magnitude > 0.0);
 END_ENTITY;
(* USED FROM (geometry_schema); *)
ENTITY geometric_representation_context
  SUBTYPE OF (representation_context);
  coordinate_space_dimension : dimension_count;
END_ENTITY;
(* USED FROM (geometry_schema); *)
(* Pruned SUPERTYPE *)
  ENTITY geometric_representation_item
  SUPERTYPE OF (ONEOF (
              POINT,
              DIRECTION,
              VECTOR,
              PLACEMENT,
              CARTESIAN_TRANSFORMATION_OPERATOR))
  SUBTYPE OF (representation_item);
  DERIVE
    dim : dimension_count := dimension_of(SELF);
  WHERE
  WR1: SIZEOF (QUERY (using_rep <* using_representations (SELF) |
      NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN
      TYPEOF (using_rep.context_of_items)))) = 0;
  END_ENTITY;
(* USED FROM (geometry_schema); *)
 ENTITY cartesian_transformation_operator_2d
   SUBTYPE OF (cartesian_transformation_operator);
 DERIVE
   u : LIST[2:2] OF direction := 
       base_axis(2,SELF\cartesian_transformation_operator.axis1,
                   SELF\cartesian_transformation_operator.axis2,?);
 WHERE
   WR1: SELF\geometric_representation_item.dim = 2;
 END_ENTITY;
(* USED FROM (geometry_schema); *)
 ENTITY cartesian_transformation_operator_3d
   SUBTYPE OF (cartesian_transformation_operator);
   axis3 : OPTIONAL direction;
 DERIVE
   u     : LIST[3:3] OF direction 
         := base_axis(3,SELF\cartesian_transformation_operator.axis1,
                        SELF\cartesian_transformation_operator.axis2,axis3);
 WHERE
   WR1: SELF\geometric_representation_item.dim = 3;
 END_ENTITY;
(* USED FROM (product_property_representation_schema); *)
  ENTITY shape_representation
    SUBTYPE OF (representation);
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY item_defined_transformation;
    name             : label;
    description      : OPTIONAL text;
    transform_item_1 : representation_item;
    transform_item_2 : representation_item;
  END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY value_representation_item
    SUBTYPE OF (representation_item);
      value_component : measure_value;
    WHERE
      WR1: SIZEOF (QUERY (rep <* using_representations (SELF) |
        NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.GLOBAL_UNIT_ASSIGNED_CONTEXT'
        IN TYPEOF (rep.context_of_items)
        ))) = 0;
  END_ENTITY;
(* USED FROM (product_property_representation_schema); *)
  ENTITY item_identified_representation_usage;
    name : label;
    description : OPTIONAL text;
    definition : represented_definition;
    used_representation : representation;
    identified_item : representation_item;
  WHERE
    WR1: SELF.used_representation IN using_representations(SELF.identified_item);
  END_ENTITY;
(* USED FROM (product_property_representation_schema); *)
  ENTITY shape_definition_representation
    SUBTYPE OF (property_definition_representation);
  WHERE
    WR1: ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRODUCT_DEFINITION_SHAPE' IN TYPEOF(SELF.definition)) OR ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SHAPE_DEFINITION' IN TYPEOF(SELF.definition.definition));
    WR2: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SHAPE_REPRESENTATION' IN TYPEOF(SELF.used_representation);
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_directive;
    name : label;
    description : OPTIONAL text;
    analysis : text;
    comment : text;
    requests : SET [1:?] OF versioned_action_request;
  END_ENTITY;
(* USED FROM (Activity_as_realized_mim); *)
ENTITY action_actual
  SUBTYPE OF (executed_action);
END_ENTITY;
(* USED FROM (Activity_as_realized_mim); *)
ENTITY action_happening
  SUBTYPE OF (action_relationship);
END_ENTITY;
(* USED FROM (Work_request_mim); *)
ENTITY applied_action_request_assignment
SUBTYPE OF (action_request_assignment);
  items : SET [1 : ?] OF action_request_item;
END_ENTITY;
(* USED FROM (measure_schema); *)
ENTITY absorbed_dose_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ABSORBED_DOSE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY;
(* USED FROM (measure_schema); *)
ENTITY absorbed_dose_unit
 SUBTYPE OF (derived_unit);
WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.gray);  
END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_absorbed_dose_unit
     SUBTYPE OF (absorbed_dose_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.gray;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY acceleration_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACCELERATION_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY acceleration_unit
    SUBTYPE OF (derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = 
       dimensional_exponents ( 1.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0 );
  END_ENTITY;
(* USED FROM (measure_schema); *)
ENTITY radioactivity_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RADIOACTIVITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY;
(* USED FROM (measure_schema); *)
ENTITY radioactivity_unit
 SUBTYPE OF (derived_unit);
WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.becquerel);  
END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_radioactivity_unit
     SUBTYPE OF (radioactivity_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.becquerel;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY amount_of_substance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY amount_of_substance_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY area_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AREA_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY area_unit
   SUBTYPE OF (derived_unit);
  WHERE
  WR1: derive_dimensional_exponents(SELF) = 
      dimensional_exponents ( 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 );
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY celsius_temperature_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY derived_unit_element;
    unit : named_unit;
    exponent : REAL;
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY dimensional_exponents;
    length_exponent : REAL;
    mass_exponent : REAL;
    time_exponent : REAL;
    electric_current_exponent : REAL;
    thermodynamic_temperature_exponent : REAL;
    amount_of_substance_exponent : REAL;
    luminous_intensity_exponent : REAL;
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY capacitance_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.farad);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY capacitance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CAPACITANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_capacitance_unit
     SUBTYPE OF (capacitance_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.farad;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
ENTITY dose_equivalent_measure_with_unit
 SUBTYPE OF (measure_with_unit);
WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DOSE_EQUIVALENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
END_ENTITY;
(* USED FROM (measure_schema); *)
ENTITY dose_equivalent_unit
 SUBTYPE OF (derived_unit);
WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.sievert);  
END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_dose_equivalent_unit
     SUBTYPE OF (dose_equivalent_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.sievert;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY electric_charge_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.coulomb);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY electric_charge_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_CHARGE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_electric_charge_unit
     SUBTYPE OF (electric_charge_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.coulomb;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY electric_current_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY electric_current_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 1.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
   ENTITY conductance_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.siemens);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY conductance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONDUCTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_conductance_unit
     SUBTYPE OF (conductance_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.siemens;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY electric_potential_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.volt);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY electric_potential_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_POTENTIAL_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_electric_potential_unit
     SUBTYPE OF (electric_potential_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.volt;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY energy_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.joule);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY energy_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ENERGY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_energy_unit
     SUBTYPE OF (energy_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.joule;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY magnetic_flux_density_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.tesla);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY magnetic_flux_density_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MAGNETIC_FLUX_DENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_magnetic_flux_density_unit
     SUBTYPE OF (magnetic_flux_density_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.tesla;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY force_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.newton);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY force_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.FORCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_force_unit
     SUBTYPE OF (force_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.newton;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY frequency_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.hertz);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY frequency_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.FREQUENCY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_frequency_unit
     SUBTYPE OF (frequency_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.hertz;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY illuminance_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.lux);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY illuminance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ILLUMINANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_illuminance_unit
     SUBTYPE OF (illuminance_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.lux;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY inductance_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.henry);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY inductance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INDUCTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_inductance_unit
     SUBTYPE OF (inductance_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.henry;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY length_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LENGTH_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY length_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 1.0) AND 
    (SELF\named_unit.dimensions.mass_exponent = 0.0) AND 
    (SELF\named_unit.dimensions.time_exponent = 0.0) AND 
    (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND 
    (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND 
    (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND 
    (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY luminous_flux_unit
    SUBTYPE OF(named_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.lumen);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY luminous_flux_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LUMINOUS_FLUX_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY luminous_intensity_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY luminous_intensity_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 1.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY magnetic_flux_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.weber);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY magnetic_flux_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MAGNETIC_FLUX_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_magnetic_flux_unit
     SUBTYPE OF (magnetic_flux_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.weber;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY mass_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MASS_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY mass_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 1.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY plane_angle_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PLANE_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY plane_angle_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY power_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.watt);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY power_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POWER_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_power_unit
     SUBTYPE OF (power_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.watt;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY pressure_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.pascal);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY pressure_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRESSURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_pressure_unit
     SUBTYPE OF (pressure_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.pascal;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY ratio_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RATIO_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY ratio_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY resistance_unit
    SUBTYPE OF(derived_unit);
  WHERE
    WR1: derive_dimensional_exponents(SELF) = dimensions_for_si_unit (si_unit_name.ohm);  
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY resistance_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESISTANCE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_resistance_unit
     SUBTYPE OF (resistance_unit,si_unit);
  WHERE
    WR1: SELF\si_unit.name = si_unit_name.ohm;
    WR2: NOT EXISTS(SELF\derived_unit.name);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY si_unit
    SUBTYPE OF (named_unit);
    prefix : OPTIONAL si_prefix;
    name : si_unit_name;
  DERIVE
    SELF\named_unit.dimensions : dimensional_exponents := dimensions_for_si_unit(name);
  WHERE
    WR1: NOT(('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MASS_UNIT' IN TYPEOF(SELF)) AND
             (SIZEOF(USEDIN(SELF,'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DERIVED_UNIT_ELEMENT.UNIT')) > 0)) OR
            (prefix = si_prefix.kilo); 
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY solid_angle_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SOLID_ANGLE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY solid_angle_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY thermodynamic_temperature_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY thermodynamic_temperature_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY time_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TIME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY time_unit
    SUBTYPE OF (named_unit);
  WHERE
    WR1: (SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 1.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY velocity_measure_with_unit
   SUBTYPE OF (measure_with_unit);
  WHERE
   WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VELOCITY_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY velocity_unit
  SUBTYPE OF (derived_unit);
  WHERE
  WR1: derive_dimensional_exponents(SELF) = 
       dimensional_exponents ( 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 );
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY volume_measure_with_unit
    SUBTYPE OF (measure_with_unit);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VOLUME_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component);
  END_ENTITY;
(* USED FROM (measure_schema); *)
  ENTITY volume_unit
    SUBTYPE OF (derived_unit);
   WHERE
     WR1: derive_dimensional_exponents(SELF) = 
          dimensional_exponents ( 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 );
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_resource_type;
    name : label;
  END_ENTITY;
(* USED FROM (process_property_representation_schema); *)
ENTITY resource_property_representation;
  name           : label;
  description    : text;
  property       : resource_property;
  representation : representation;
END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY organization_type;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY person_type;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY position_in_organization;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY position_in_organization_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_position_in_organization : position_in_organization;
    related_position_in_organization : position_in_organization;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY position_in_organization_type;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (Probability_mim); *)
ENTITY probability_generator
  SUBTYPE OF (representation);
END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY compound_representation_item
    SUBTYPE OF (representation_item);
      item_element : compound_item_definition;
  END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY concurrent_task_element
SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY decision_point
SUBTYPE OF (action_method_to_select_from, task_element);
DERIVE
  SELF\action_method_to_select_from.number_of_elements : count_measure := 1;
  SELF\action_method.purpose : text := 'decision';
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY end_task
SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY exit_loop
SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY looping_element
SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY start_task
SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY task_element
  SUPERTYPE OF (ONEOF (
               CONCURRENT_TASK_ELEMENT,
               END_TASK,
               EXIT_LOOP,
               LOOPING_ELEMENT,
               TASK_ELEMENT_SEQUENCE,
               TASK_STEP) ) 
    
SUBTYPE OF (action_method);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY task_element_relationship
SUBTYPE OF (action_method_relationship);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY task_element_sequence
SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (Task_element_mim); *)
ENTITY task_step
SUBTYPE OF (task_element);
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY action_method_with_associated_documents
  SUBTYPE OF (action_method);
  documents : SET [1:?] of document;
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY action_method_with_associated_documents_constrained
  SUBTYPE OF (action_method_with_associated_documents);
  usage_constraints : SET [1:?] OF document_usage_constraint;
WHERE
  WR1: SIZEOF (QUERY (item <* usage_constraints | 
       NOT (item.source 
       IN SELF\action_method_with_associated_documents.documents))) = 0;
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY action_method_to_select_from
  SUBTYPE OF (action_method);
  number_of_elements : count_measure;
WHERE
  WR1: number_of_elements >=1;
  WR2: SIZEOF (USEDIN (SELF, 
       'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACTION_METHOD_RELATIONSHIP.RELATING_METHOD')) >= 
       number_of_elements;
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY process_or_process_relationship_effectivity
  SUBTYPE OF (effectivity);
  effective_process_or_process_relationship : process_or_process_relationship;
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY serial_action_method
  SUBTYPE OF (action_method_relationship);
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY sequential_method
  SUBTYPE OF (serial_action_method);
  sequence_position : count_measure;
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY concurrent_action_method
  SUBTYPE OF (action_method_relationship);
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY context_dependent_action_method_relationship;
  name                  : label;
  relating_relationship : action_method_relationship;
  related_relationship  : action_method_relationship;
UNIQUE
  UR1: relating_relationship, related_relationship;
WHERE
  WR1: relating_relationship.relating_method :=:
       related_relationship.relating_method;
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY context_dependent_action_relationship;
  name                  : label;
  relating_relationship : action_relationship;
  related_relationship  : action_relationship;
UNIQUE
  UR1: relating_relationship, related_relationship;
WHERE
  WR1: relating_relationship.relating_action :=:
       related_relationship.relating_action;
END_ENTITY;
(* USED FROM (method_definition_schema); *)
ENTITY relationship_condition;
  name                     : label;
  applicable_relationships : SET [1:?] OF relationship_with_condition;
  condition_description    : text;
END_ENTITY;
(* USED FROM (Experience_mim); *)
ENTITY applied_experience_assignment
  SUBTYPE OF (experience_assignment);
  items : SET[1:?] OF experience_item;
END_ENTITY;
(* USED FROM (Experience_mim); *)
ENTITY applied_experience_type_assignment
  SUBTYPE OF (experience_type_assignment);
  items : SET[1:?] OF experience_type_item;
END_ENTITY;
(* USED FROM (Experience_mim); *)
ENTITY characterized_experience
  SUBTYPE OF (characterized_object, experience);
END_ENTITY;
(* USED FROM (experience_schema); *)
  ENTITY experience;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (experience_schema); *)
  ENTITY experience_type;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (experience_schema); *)
  ENTITY experience_type_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_experience_type : experience_type;
    related_experience_type : experience_type;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY person_type_definition;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    formation : person_type_definition_formation;
  END_ENTITY;
(* USED FROM (person_organization_schema); *)
  ENTITY person_type_definition_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_person_type_definition : person_type_definition;
    related_person_type_definition : person_type_definition;
  END_ENTITY;
(* USED FROM (Qualifications_mim); *)
ENTITY applied_qualification_type_assignment
  SUBTYPE OF (qualification_type_assignment);
  items : SET[1:?] OF person_organization_item;
END_ENTITY;
(* USED FROM (qualifications_schema); *)
  ENTITY qualification_type;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (qualifications_schema); *)
  ENTITY qualification_type_relationship;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    relating_qualification_type : qualification_type;
    related_qualification_type : qualification_type;
  END_ENTITY;
(* USED FROM (Time_interval_assignment_mim); *)
ENTITY applied_time_interval_assignment
  SUBTYPE OF (time_interval_assignment);
  items : SET[0:?] OF time_interval_item;
END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY directed_action
    SUBTYPE OF (executed_action);
    directive : action_directive;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_request_solution;
    method : action_method;
    request : versioned_action_request;
  DERIVE
    description : text := get_description_value(SELF);
    name : label := get_name_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
    WR2: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) <= 1;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY action_request_status;
    status : label;
    assigned_request : versioned_action_request;
  END_ENTITY;
(* USED FROM (action_schema); *)
  ENTITY versioned_action_request;
    id : identifier;
    version : label;
    purpose : text;
    description : OPTIONAL text;
  END_ENTITY;
(* USED FROM (set_theory_schema); *)
ENTITY complement;
  id : identifier;
  name : label;
  description : OPTIONAL text;
  set_1 : class;
  set_2 : class;
  universe : class;
WHERE
  complement_different: NOT identical_sets(set_1, set_2);
END_ENTITY;
(* USED FROM (set_theory_schema); *)
ENTITY intersection;
  id : identifier;
  name : label;
  description : OPTIONAL text;
  operand : SET[2:?] OF class;
  resultant : class;
END_ENTITY;
(* USED FROM (set_theory_schema); *)
ENTITY power_set;
  id : identifier;
  name : label;
  description : OPTIONAL text;
  base : class;
  derived : class;
WHERE
  derived_different: NOT identical_sets(base, derived);
END_ENTITY;
(* USED FROM (set_theory_schema); *)
ENTITY proper_subset
  SUBTYPE OF (subset);
WHERE
  subset_different: NOT identical_sets(superset, subset);
END_ENTITY;
(* USED FROM (set_theory_schema); *)
ENTITY same_membership;
  id : identifier;
  name : label;
  description : OPTIONAL text;
  set_1 : class;
  set_2 : class;
END_ENTITY;
(* USED FROM (set_theory_schema); *)
ENTITY subset;
  id : identifier;
  name : label;
  description : OPTIONAL text;
  subset : class;
  superset : class;
END_ENTITY;
(* USED FROM (set_theory_schema); *)
ENTITY union;
  id : identifier;
  name : label;
  description : OPTIONAL text;
  operand : SET[2:?] OF class;
  resultant : class;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY time_interval;
  id : identifier;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY time_interval_with_bounds
  SUBTYPE OF (time_interval);
  primary_bound : OPTIONAL date_time_or_event_occurrence;
  secondary_bound : OPTIONAL date_time_or_event_occurrence;
  duration : OPTIONAL time_measure_with_unit;
WHERE
  WR1: NOT (EXISTS(secondary_bound) AND EXISTS(duration));
  WR2: EXISTS(primary_bound) OR EXISTS(secondary_bound);
END_ENTITY;
(* USED FROM (representation_schema); *)
  ENTITY definitional_representation_relationship
    SUBTYPE OF (representation_relationship);
     WHERE
       WR1: acyclic_representation_relationship(SELF,
         [SELF\representation_relationship.rep_2],
         'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.'+'REPRESENTATION');
  END_ENTITY;  
(* USED FROM (product_property_representation_schema); *)
  ENTITY shape_representation_relationship
    SUBTYPE OF (representation_relationship);
  WHERE
    WR1: 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SHAPE_REPRESENTATION' IN (TYPEOF(SELF\representation_relationship.rep_1) + TYPEOF(SELF\representation_relationship.rep_2));
  END_ENTITY;
(* USED FROM (date_time_schema); *)
ENTITY time_interval_role;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY expanded_uncertainty
  SUBTYPE OF (standard_uncertainty);
  coverage_factor : REAL;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY measure_qualification;
  name 			: label;
  description 		: text;
  qualified_measure 	: measure_with_unit;
  qualifiers 		: SET [1:?] OF value_qualifier;
WHERE
  WR1: SIZEOF(QUERY(temp <* qualifiers |
             'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRECISION_QUALIFIER'
             IN TYPEOF(temp))) < 2;
  WR2: NOT ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_ITEM'
           IN TYPEOF(SELF\measure_qualification.qualified_measure));
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY qualified_representation_item
  SUBTYPE OF (representation_item);
  qualifiers 	: SET [1:?] OF value_qualifier;
WHERE
  WR1: SIZEOF(QUERY(temp <* qualifiers |
             'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRECISION_QUALIFIER'
             IN TYPEOF(temp))) < 2;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY qualitative_uncertainty
  SUBTYPE OF (uncertainty_qualifier);
  uncertainty_value : text;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY precision_qualifier;
  precision_value : INTEGER;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY standard_uncertainty
  SUPERTYPE OF (
              EXPANDED_UNCERTAINTY)
  SUBTYPE OF (uncertainty_qualifier);
  uncertainty_value : REAL;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY type_qualifier;
  name : label;
END_ENTITY;
(* USED FROM (qualified_measure_schema); *)
ENTITY uncertainty_qualifier
 SUPERTYPE OF (ONEOF (
              STANDARD_UNCERTAINTY,
              QUALITATIVE_UNCERTAINTY));
  measure_name : label;
  description  : text;
END_ENTITY;
(* REFERENCE FROM (document_schema); *)
  ENTITY document_usage_constraint;
    source : document;
    subject_element : label;
    subject_element_value : text;
  END_ENTITY;
(* REFERENCE FROM (date_time_schema); *)
ENTITY event_occurrence_role;
  name : label;
  description : OPTIONAL text;
END_ENTITY;
(* REFERENCE FROM (application_context_schema); *)
  ENTITY library_context
    SUBTYPE OF (application_context_element);
    library_reference : label;
  END_ENTITY;
(* REFERENCE FROM (person_organization_schema); *)
  ENTITY person_role;
    name : label;
  DERIVE
    description : text := get_description_value(SELF);
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
  END_ENTITY;
(* REFERENCE FROM (qualifications_schema); *)
  ENTITY qualification;
    id : identifier;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;
(* REFERENCE FROM (date_time_schema); *)
ENTITY time_role;
  name : label;
DERIVE
  description : text := get_description_value (SELF);
WHERE
  WR1: SIZEOF (USEDIN (SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) <= 1;
END_ENTITY;
(* REFERENCE FROM (product_definition_schema); *)
  ENTITY product_definition_effectivity
    SUBTYPE OF (effectivity);
    usage : product_definition_relationship;
  WHERE
    WR1: SIZEOF(USEDIN(SELF, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY')) = 0;
  END_ENTITY;

(* Implicit interfaced from: product_definition_schema *)
  ENTITY product_definition_context_role;
    name : label;
    description : OPTIONAL text;
  END_ENTITY;

(* Implicit interfaced from: representation_schema *)
  ENTITY representation_map;
      mapping_origin        : representation_item;
      mapped_representation : representation;
    INVERSE
      map_usage : SET[1:?] OF mapped_item FOR mapping_source;
    WHERE
      WR1: item_in_context(SELF.mapping_origin,
        SELF.mapped_representation.context_of_items);
  END_ENTITY;

(* Implicit interfaced from: geometry_schema *)
(* Pruned SUPERTYPE *)
ENTITY point
   
  SUBTYPE OF (geometric_representation_item);
 END_ENTITY;

(* Implicit interfaced from: geometry_schema *)
(* Pruned SUPERTYPE *)
 ENTITY placement
   SUPERTYPE OF (ONEOF (
              AXIS2_PLACEMENT_2D,
              AXIS2_PLACEMENT_3D))
  SUBTYPE OF (geometric_representation_item);
   location : cartesian_point;
 END_ENTITY;

(* Implicit interfaced from: geometry_schema *)
 ENTITY vector
   SUBTYPE OF (geometric_representation_item);
   orientation : direction;
   magnitude   : length_measure;
 WHERE
   WR1 : magnitude >= 0.0;
 END_ENTITY;

(* Implicit interfaced from: geometry_schema *)
 ENTITY cartesian_transformation_operator
   SUPERTYPE OF (ONEOF (
              CARTESIAN_TRANSFORMATION_OPERATOR_2D,
              CARTESIAN_TRANSFORMATION_OPERATOR_3D))
  SUBTYPE OF (geometric_representation_item,
                            functionally_defined_transformation);
   axis1        : OPTIONAL direction;
   axis2        : OPTIONAL direction;
   local_origin : cartesian_point;
   scale        : OPTIONAL REAL;
 DERIVE
   scl          : REAL := NVL(scale, 1.0);
 WHERE
   WR1: scl > 0.0;
 END_ENTITY;

(* Implicit interfaced from: person_organization_schema *)
  ENTITY person_type_definition_formation;
    id : identifier;
    name : label;
    description : OPTIONAL text;
    of_person_type : person_type;
  END_ENTITY;

(* Implicit interfaced from: representation_schema *)
  FUNCTION acyclic_mapped_representation
    (mi : mapped_item) : BOOLEAN;
    LOCAL
      rms : SET OF representation_map;
      mis : SET OF mapped_item;
      rs1, rs2 : SET OF representation;
    END_LOCAL;
 
    rs1 := using_representations(mi);
    rs2 := [];
    -- loop as long as there are elements in rs1
    REPEAT WHILE SIZEOF(rs1) > 0; 
      REPEAT i := 1 TO HIINDEX(rs1);
        -- Determine the set of representation_map that reference the parent_set
        rms := bag_to_set(USEDIN(rs1[i], 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_MAP.MAPPED_REPRESENTATION'));
        IF SIZEOF(rms) > 0 THEN
          REPEAT j := 1 TO HIINDEX(rms);
            mis := bag_to_set(USEDIN(rms[i], 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MAPPED_ITEM.MAPPING_SOURCE'));
            IF SIZEOF(mis) > 0 THEN
              REPEAT j := 1 TO HIINDEX(mis);
                -- check mis members for instance equal with mi. If so then there is a cycle
                IF mis[i] :=: mi THEN
                  RETURN (FALSE);
                END_IF;
                rs2 := rs2 + using_representations(mis[i]);
              END_REPEAT;
            END_IF;
          END_REPEAT;
        END_IF;
      END_REPEAT;
      rs1 := rs2;
      rs2 := [];
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;  
(* REFERENCE FROM (basic_attribute_schema); *)
  FUNCTION get_id_value (obj : id_attribute_select):identifier;
    LOCAL
      id_bag : BAG OF id_attribute := (USEDIN(obj, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ID_ATTRIBUTE.' + 'IDENTIFIED_ITEM'));
    END_LOCAL;

    IF SIZEOF(id_bag) = 1 THEN
      RETURN (id_bag[1].attribute_value);
    ELSE
      RETURN (?);
    END_IF;
  END_FUNCTION;
(* REFERENCE FROM (basic_attribute_schema); *)
  FUNCTION get_role (obj : role_select):object_role;
    LOCAL
      role_bag : BAG OF role_association := (USEDIN(obj, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'ROLE_ASSOCIATION.' + 'ITEM_WITH_ROLE'));
    END_LOCAL;

    IF SIZEOF(role_bag) = 1 THEN
      RETURN (role_bag[1].role);
    ELSE
      RETURN (?);
    END_IF;
  END_FUNCTION;
(* REFERENCE FROM (basic_attribute_schema); *)
  FUNCTION get_name_value (obj : name_attribute_select):label;
    LOCAL
      name_bag : BAG OF name_attribute := (USEDIN(obj, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'NAME_ATTRIBUTE.' + 'NAMED_ITEM'));
    END_LOCAL;

    IF SIZEOF(name_bag) = 1 THEN
      RETURN (name_bag[1].attribute_value);
    ELSE
      RETURN (?);
    END_IF;
  END_FUNCTION;

(* Implicit interfaced from: representation_schema *)
  FUNCTION using_representations (item : founded_item_select)
    : SET OF representation;
    LOCAL
      results            : SET OF representation;
      result_bag         : BAG OF representation;
      intermediate_items : SET OF founded_item_select;
    END_LOCAL;
    -- Find the representations in which the item is used and add to the
    -- results set.
    results := [];
    result_bag := USEDIN(item,'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION.ITEMS');
    IF SIZEOF(result_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(result_bag);
        results := results + result_bag[i];
      END_REPEAT;
    END_IF;
    -- Find all representation_items or founded_items
    -- by which item is referenced directly or indirectly.
    intermediate_items := using_items(item,[]);
    -- If the set of intermediate items is not empty;
    IF SIZEOF(intermediate_items) > 0 THEN
      -- For each element in the set, add the
      -- representations of that element.
      REPEAT i := 1 TO HIINDEX(intermediate_items);
        result_bag := USEDIN(intermediate_items[i],
                      'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION.ITEMS');
        IF SIZEOF(result_bag) > 0 THEN
          REPEAT j := 1 TO HIINDEX(result_bag);
            results := results + result_bag[j];
          END_REPEAT;
        END_IF;
      END_REPEAT;
    END_IF;
    -- Return the set of representation in which the input item is
    -- used directly and indirectly (through intervening
    -- representation_items or founded items).
    RETURN (results);
  END_FUNCTION;

(* Implicit interfaced from: representation_schema *)
  FUNCTION using_items (item : founded_item_select;
                        checked_items: SET OF founded_item_select)
                      : SET OF founded_item_select;
    LOCAL
      new_check_items    : SET OF founded_item_select;
      result_items       : SET OF founded_item_select;
      next_items         : SET OF founded_item_select;
    END_LOCAL;
    result_items := [];
    new_check_items := checked_items + item;
    -- Find the set of representation_items or founded_items
    -- in which item is used directly.
    next_items := QUERY(z <* bag_to_set( USEDIN(item , '')) |
      ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z)) OR
      ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.FOUNDED_ITEM'        IN TYPEOF(z)));
    -- If the set of next_items is not empty;
    IF SIZEOF(next_items) > 0 THEN
      -- For each element in the set, find the using_items recursively
      REPEAT i := 1 TO HIINDEX(next_items);
        -- Check for loop in data model, i.e. one of the next_items
        -- occurred earlier in the set of check_items;
        IF NOT(next_items[i] IN new_check_items) THEN
          result_items := result_items + next_items[i] +
                          using_items(next_items[i],new_check_items);
        END_IF;
      END_REPEAT;
    END_IF;
    -- return the set of representation_items or founded_items
    -- in which the input item is used directly and indirectly.
    RETURN (result_items);
  END_FUNCTION;
(* REFERENCE FROM (support_resource_schema); *)
  FUNCTION bag_to_set (the_bag : BAG OF GENERIC:intype):SET OF GENERIC:intype;
    LOCAL
      the_set : SET OF GENERIC:intype := [];
    END_LOCAL;

    IF SIZEOF(the_bag) > 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN (the_set);
  END_FUNCTION;

(* Implicit interfaced from: date_time_schema *)
FUNCTION valid_calendar_date
 (date : calendar_date) : LOGICAL; 
  CASE date.month_component OF
    1  : RETURN({ 1 <= date.day_component <= 31 });
    2  : BEGIN
           IF (leap_year(date.year_component)) THEN
             RETURN({ 1 <= date.day_component <= 29 });
           ELSE
             RETURN({ 1 <= date.day_component <= 28 });
           END_IF;
         END;
    3  : RETURN({ 1 <= date.day_component <= 31 });
    4  : RETURN({ 1 <= date.day_component <= 30 });
    5  : RETURN({ 1 <= date.day_component <= 31 });
    6  : RETURN({ 1 <= date.day_component <= 30 });
    7  : RETURN({ 1 <= date.day_component <= 31 });
    8  : RETURN({ 1 <= date.day_component <= 31 });
    9  : RETURN({ 1 <= date.day_component <= 30 });
    10 : RETURN({ 1 <= date.day_component <= 31 });
    11 : RETURN({ 1 <= date.day_component <= 30 });
    12 : RETURN({ 1 <= date.day_component <= 31 });
  END_CASE;
  RETURN (FALSE);
END_FUNCTION; 

(* Implicit interfaced from: date_time_schema *)
FUNCTION leap_year
 (year : year_number) : BOOLEAN; 
  IF ((((year MOD 4) = 0) AND ((year MOD 100) <> 0)) OR ((year MOD 400) = 0)) THEN
    RETURN (TRUE);
  ELSE
    RETURN (FALSE);
  END_IF;
END_FUNCTION; 

(* Implicit interfaced from: representation_schema *)
  FUNCTION valid_measure_value
    (m : measure_value) : BOOLEAN;
    IF ('REAL' IN TYPEOF (m)) THEN
    RETURN (m > 0.0);
    ELSE
     IF ('INTEGER' IN TYPEOF (m)) THEN
      RETURN (m > 0);
      ELSE
        RETURN (TRUE);
      END_IF;
    END_IF;
  END_FUNCTION;

(* Implicit interfaced from: date_time_schema *)
FUNCTION valid_time
 (time : local_time) : BOOLEAN; 
  IF EXISTS(time.second_component) THEN
    RETURN (EXISTS(time.minute_component));
  ELSE
    RETURN (TRUE);
  END_IF;
END_FUNCTION; 

(* Implicit interfaced from: Extended_measure_representation_mim *)
  FUNCTION value_range_wr1
     (agg : compound_item_definition) : BOOLEAN; 
    BEGIN
      IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY (i1 <* agg | (
        'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF
        (i1)))) = 2) OR
        (SIZEOF(QUERY (i2 <* agg | (
        'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VALUE_REPRESENTATION_ITEM' IN TYPEOF
        (i2)))) = 2)) 
      THEN
        RETURN(TRUE);
      ELSE
        RETURN(FALSE);
      END_IF;
    END;
  END_FUNCTION; 

(* Implicit interfaced from: Extended_measure_representation_mim *)
  FUNCTION value_range_wr2
      (agg : compound_item_definition) : BOOLEAN; 
    BEGIN
      IF ((SIZEOF(QUERY (i <* agg | (i\representation_item.name = 'upper limit'))) = 1)
        AND (SIZEOF(QUERY (i <* agg | (i\representation_item.name = 'lower limit'))) = 1))
      THEN
        RETURN(TRUE);
      ELSE
        RETURN(FALSE);
      END_IF;
    END;
  END_FUNCTION; 

(* Implicit interfaced from: Extended_measure_representation_mim *)
  FUNCTION value_range_wr3
      (agg : compound_item_definition) : BOOLEAN; 
    BEGIN
      IF (SIZEOF(QUERY(i1 <* agg |
        ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i1)) AND
        (SIZEOF (QUERY (i2 <* agg |
        ('AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i2)) AND
        (i1 :<>: i2) AND (i1\measure_with_unit.unit_component :=: i2\measure_with_unit.unit_component))) = 1))) = 2)
      THEN
        RETURN (TRUE);
      ELSE
        RETURN (FALSE);
      END_IF;
    END;
  END_FUNCTION; 

(* Implicit interfaced from: measure_schema *)
  FUNCTION derive_dimensional_exponents (x : unit):dimensional_exponents;
    LOCAL
      result : dimensional_exponents := dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
    END_LOCAL;

    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DERIVED_UNIT' IN TYPEOF(x) THEN
      REPEAT i := LOINDEX(x\derived_unit.elements) TO HIINDEX(x\derived_unit.elements);
        result.length_exponent := result.length_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.length_exponent);
        result.mass_exponent := result.mass_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.mass_exponent);
        result.time_exponent := result.time_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.time_exponent);
        result.electric_current_exponent := result.electric_current_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.electric_current_exponent);
        result.thermodynamic_temperature_exponent := result.thermodynamic_temperature_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.thermodynamic_temperature_exponent);
        result.amount_of_substance_exponent := result.amount_of_substance_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.amount_of_substance_exponent);
        result.luminous_intensity_exponent := result.luminous_intensity_exponent + 
        (x\derived_unit.elements[i]\derived_unit_element.exponent * 
         x\derived_unit.elements[i]\derived_unit_element.unit\named_unit.dimensions.luminous_intensity_exponent);
      END_REPEAT;
    ELSE
      result := x\named_unit.dimensions;
    END_IF;
    RETURN (result);
  END_FUNCTION;

(* Implicit interfaced from: measure_schema *)
  FUNCTION valid_units (m : measure_with_unit):BOOLEAN;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LENGTH_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MASS_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.TIME_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_CURRENT_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CELSIUS_TEMPERATURE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LUMINOUS_INTENSITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PLANE_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SOLID_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.AREA_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VOLUME_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RATIO_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITIVE_LENGTH_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
      dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ACCELERATION_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 1.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
     IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CAPACITANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( -2.0, -1.0, 4.0, 1.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_CHARGE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
        IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CONDUCTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
          IF derive_dimensional_exponents(m.unit_component) <> 
            dimensional_exponents( -2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0 ) THEN
            RETURN (FALSE);
          END_IF;
    END_IF;
        IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ELECTRIC_POTENTIAL_MEASURE' IN TYPEOF(m.value_component) THEN
          IF derive_dimensional_exponents(m.unit_component) <> 
            dimensional_exponents( 2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0 ) THEN
            RETURN (FALSE);
          END_IF;
    END_IF;    
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ENERGY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.FORCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.FREQUENCY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ILLUMINANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( -2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
     IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.INDUCTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.LUMINOUS_FLUX_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MAGNETIC_FLUX_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
     IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MAGNETIC_FLUX_DENSITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.POWER_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.PRESSURE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( -1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RESISTANCE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VELOCITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents( 1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0 ) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.RADIOACTIVITY_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ABSORBED_DOSE_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DOSE_EQUIVALENT_MEASURE' IN TYPEOF(m.value_component) THEN
      IF derive_dimensional_exponents(m.unit_component) <> 
        dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0) THEN
        RETURN (FALSE);
      END_IF;
    END_IF;
    RETURN (TRUE);
  END_FUNCTION;
(* REFERENCE FROM (product_definition_schema); *)
  FUNCTION acyclic_product_definition_relationship (relation : product_definition_relationship; relatives : SET [1:?] OF product_definition; specific_relation : STRING):BOOLEAN;
    LOCAL
      x : SET OF product_definition_relationship;
    END_LOCAL;

    IF relation.relating_product_definition IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(pd <* bag_to_set(USEDIN(relation.relating_product_definition, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'PRODUCT_DEFINITION_RELATIONSHIP.' + 'RELATED_PRODUCT_DEFINITION')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_product_definition_relationship(x[i], relatives + relation.relating_product_definition, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION;

(* Implicit interfaced from: representation_schema *)
  FUNCTION item_in_context
    (item  : representation_item;
     cntxt : representation_context) : BOOLEAN;
    LOCAL
      y : BAG OF representation_item;
    END_LOCAL;
    -- If there is one or more representation using both the item
    -- and cntxt return true.
    IF SIZEOF(USEDIN(item,'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION.ITEMS')
      * cntxt.representations_in_context) > 0 THEN
      RETURN (TRUE);
      -- Determine the bag of representation_items that reference
      -- item
      ELSE y := QUERY(z <* USEDIN (item , '') |
             'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z));
        -- Ensure that the bag is not empty
        IF SIZEOF(y) > 0 THEN
        -- For each element in the bag
        REPEAT i := 1 TO HIINDEX(y);
          -- Check to see it is an item in the input cntxt.
          IF item_in_context(y[i], cntxt) THEN
            RETURN (TRUE);
          END_IF;
        END_REPEAT;
      END_IF;
    END_IF;
    -- Return false when all possible branches have been checked
    -- with no success.
    RETURN (FALSE);
  END_FUNCTION;
(* REFERENCE FROM (basic_attribute_schema); *)
  FUNCTION get_description_value (obj : description_attribute_select):text;
    LOCAL
      description_bag : BAG OF description_attribute := (USEDIN(obj, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.' + 'DESCRIBED_ITEM'));
    END_LOCAL;

    IF SIZEOF(description_bag) = 1 THEN
      RETURN (description_bag[1].attribute_value);
    ELSE
      RETURN (?);
    END_IF;
  END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
 FUNCTION build_2axes(ref_direction : direction) : LIST [2:2] OF direction;
   LOCAL
     d : direction := NVL(normalise(ref_direction),
                          dummy_gri || direction([1.0,0.0]));
   END_LOCAL;

   RETURN([d, orthogonal_complement(d)]);
 END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
 FUNCTION normalise (arg : vector_or_direction) : vector_or_direction;
    LOCAL
      ndim   : INTEGER;
      v      : direction;
      result : vector_or_direction;
      vec    : vector;
      mag    : REAL;
    END_LOCAL;
    
    IF NOT EXISTS (arg) THEN
      result := ?;
  (* When function is called with invalid data a NULL result is returned *)
    ELSE
      ndim := arg.dim;
      IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg) THEN
        BEGIN
              v := dummy_gri || direction(arg\vector.orientation.direction_ratios);
          IF arg.magnitude = 0.0 THEN
            RETURN(?);
          ELSE
           vec := dummy_gri || vector (v, 1.0);
          END_IF;
        END;
      ELSE
        v := dummy_gri || direction (arg.direction_ratios);
      END_IF;
      mag := 0.0;
      REPEAT  i := 1 TO ndim;
        mag := mag + v.direction_ratios[i]*v.direction_ratios[i];
      END_REPEAT;
      IF mag > 0.0 THEN
        mag := SQRT(mag);
        REPEAT  i := 1 TO ndim;
          v.direction_ratios[i] := v.direction_ratios[i]/mag;
        END_REPEAT;
        IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg) THEN
          vec.orientation := v;
          result := vec;
        ELSE
          result := v;
        END_IF;
      ELSE
        RETURN(?);
      END_IF;
    END_IF;
    RETURN (result);
 END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
 FUNCTION orthogonal_complement(vec : direction) : direction;
   LOCAL
     result :  direction ;
   END_LOCAL;

   IF (vec.dim <> 2) OR NOT EXISTS (vec) THEN
     RETURN(?);
   ELSE
     result := dummy_gri || direction([-vec.direction_ratios[2],
                                          vec.direction_ratios[1]]);
     RETURN(result);
   END_IF;
 END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
FUNCTION build_axes(axis, ref_direction : direction) :
                                            LIST [3:3] OF direction;
     LOCAL
       d1, d2 : direction;
     END_LOCAL;
    d1 := NVL(normalise(axis), dummy_gri || direction([0.0,0.0,1.0]));
    d2 := first_proj_axis(d1, ref_direction);
    RETURN([d2, normalise(cross_product(d1,d2))\vector.orientation, d1]);
 END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
FUNCTION first_proj_axis(z_axis, arg : direction) : direction;
  LOCAL
    x_axis : direction;
    v      : direction;
    z      : direction;
    x_vec  : vector;
  END_LOCAL;
  
  IF (NOT EXISTS(z_axis)) THEN
    RETURN (?) ;
  ELSE
    z := normalise(z_axis);
    IF NOT EXISTS(arg) THEN
      IF ((z.direction_ratios <> [1.0,0.0,0.0]) AND
          (z.direction_ratios <> [-1.0,0.0,0.0]))  THEN
        v :=  dummy_gri || direction([1.0,0.0,0.0]);
      ELSE
        v := dummy_gri || direction([0.0,1.0,0.0]);
      END_IF;
    ELSE
      IF  (arg.dim <> 3) THEN
        RETURN (?) ;
      END_IF;
      IF ((cross_product(arg,z).magnitude) = 0.0) THEN
        RETURN (?);
      ELSE
        v := normalise(arg);
      END_IF;
    END_IF;
    x_vec := scalar_times_vector(dot_product(v, z), z);
    x_axis := vector_difference(v, x_vec).orientation;
    x_axis := normalise(x_axis);
  END_IF;
  RETURN(x_axis);
END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
FUNCTION cross_product (arg1, arg2 : direction) : vector;
  LOCAL
    mag    : REAL;
    res    : direction;
    v1,v2  : LIST[3:3] OF REAL;
    result : vector;
  END_LOCAL;
  
  IF ( NOT EXISTS (arg1) OR (arg1.dim = 2)) OR
     ( NOT EXISTS (arg2) OR (arg2.dim = 2)) THEN
    RETURN(?);
  ELSE
    BEGIN
      v1  := normalise(arg1).direction_ratios;
      v2  := normalise(arg2).direction_ratios;
      res := dummy_gri || direction([(v1[2]*v2[3] - v1[3]*v2[2]),
            (v1[3]*v2[1] - v1[1]*v2[3]), (v1[1]*v2[2] - v1[2]*v2[1])]);
      mag := 0.0;
      REPEAT i := 1 TO 3;
        mag := mag + res.direction_ratios[i]*res.direction_ratios[i];
      END_REPEAT;
      IF (mag > 0.0) THEN
        result := dummy_gri || vector(res, SQRT(mag));
      ELSE
        result := dummy_gri || vector(arg1, 0.0);
      END_IF;
      RETURN(result);
    END;
  END_IF;
END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
 FUNCTION scalar_times_vector (scalar : REAL; vec : vector_or_direction)
                                       : vector;
    LOCAL
      v      : direction;
      mag    : REAL;
      result : vector;
    END_LOCAL;
 
    IF NOT EXISTS (scalar) OR NOT EXISTS (vec) THEN
      RETURN (?) ;
     ELSE
      IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF (vec) THEN
        v   := dummy_gri || direction(vec\vector.orientation.direction_ratios);
        mag := scalar * vec.magnitude;
      ELSE
        v   := dummy_gri || direction(vec.direction_ratios);
        mag := scalar;
      END_IF;
      IF (mag < 0.0 ) THEN
        REPEAT i := 1 TO SIZEOF(v.direction_ratios);
          v.direction_ratios[i] := -v.direction_ratios[i];
        END_REPEAT;
        mag := -mag;
      END_IF;
      result := dummy_gri || vector(normalise(v), mag);
    END_IF;
    RETURN (result);
 END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
 FUNCTION dot_product(arg1, arg2 : direction) : REAL;
   LOCAL
     scalar : REAL;
     vec1, vec2: direction;
     ndim : INTEGER;
   END_LOCAL;
   
   IF NOT EXISTS (arg1) OR NOT EXISTS (arg2) THEN
     scalar := ?;
     (* When function is called with invalid data an indeterminate result
     is returned *)
   ELSE
     IF (arg1.dim <> arg2.dim) THEN
       scalar := ?;
     (* When function is called with invalid data an indeterminate result
     is returned *)
     ELSE
       BEGIN
         vec1   := normalise(arg1);
         vec2   := normalise(arg2);
         ndim   := arg1.dim;
         scalar := 0.0;
         REPEAT  i := 1 TO ndim;
           scalar := scalar +
                       vec1.direction_ratios[i]*vec2.direction_ratios[i];
         END_REPEAT;
       END;
     END_IF;
   END_IF;
   RETURN (scalar);
 END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
 FUNCTION vector_difference(arg1, arg2 : vector_or_direction) : vector;
    LOCAL
      result          : vector;
      res, vec1, vec2 : direction;
      mag, mag1, mag2 : REAL;
      ndim            : INTEGER;
    END_LOCAL;
 
    IF ((NOT EXISTS (arg1)) OR (NOT EXISTS (arg2))) OR (arg1.dim <> arg2.dim)
        THEN
      RETURN (?) ;
     ELSE
      BEGIN
        IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg1) THEN
          mag1 := arg1.magnitude;
          vec1 := arg1\vector.orientation;
        ELSE
          mag1 := 1.0;
          vec1 := arg1;
        END_IF;
        IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(arg2) THEN
          mag2 := arg2.magnitude;
          vec2 := arg2\vector.orientation;
        ELSE
          mag2 := 1.0;
          vec2 := arg2;
        END_IF;
        vec1 := normalise (vec1);
        vec2 := normalise (vec2);
        ndim := SIZEOF(vec1.direction_ratios);
        mag := 0.0;
        res := dummy_gri || direction(vec1.direction_ratios);
        REPEAT i := 1 TO ndim;
          res.direction_ratios[i] := mag1*vec1.direction_ratios[i] -
                                      mag2*vec2.direction_ratios[i];
          mag := mag + (res.direction_ratios[i]*res.direction_ratios[i]);
        END_REPEAT;
        IF (mag > 0.0 ) THEN
        result := dummy_gri || vector( res, SQRT(mag));
        ELSE
          result := dummy_gri || vector( vec1,  0.0);
        END_IF;
      END;
    END_IF;
    RETURN (result);
 END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
FUNCTION dimension_of(item : geometric_representation_item) :
  dimension_count;
  LOCAL
    x   : SET OF representation;
    y   : representation_context;
    dim : dimension_count;
  END_LOCAL;
  -- For cartesian_point, direction, or vector dimension is determined by
  -- counting components.
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.CARTESIAN_POINT' IN TYPEOF(item) THEN
       dim := SIZEOF(item\cartesian_point.coordinates);
       RETURN(dim);
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.DIRECTION' IN TYPEOF(item) THEN
       dim := SIZEOF(item\direction.direction_ratios);
       RETURN(dim);
    END_IF;
    IF 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VECTOR' IN TYPEOF(item) THEN
       dim := SIZEOF(item\vector.orientation\direction.direction_ratios);
       RETURN(dim);
    END_IF;
  -- For all other types of geometric_representation_item dim is obtained
  -- via context.
  -- Find the set of representation in which the item is used. 

  x := using_representations(item);

  -- Determines the dimension_count of the 
  -- geometric_representation_context. Note that the 
  -- RULE compatible_dimension ensures that the context_of_items
  -- is of type geometric_representation_context and has
  -- the same dimension_count for all values of x.
  -- The SET x is non-empty since this is required by WR1 of
  -- representation_item.
    y := x[1].context_of_items;
    dim := y\geometric_representation_context.coordinate_space_dimension;
    RETURN (dim);

END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
FUNCTION base_axis(dim : INTEGER; axis1, axis2, axis3 : direction) :
                                                 LIST [2:3] OF 
direction;
  LOCAL
    u      : LIST [2:3] OF direction;
    factor : REAL;
    d1, d2 : direction;
  END_LOCAL;
  
  IF (dim = 3) THEN
    d1 := NVL(normalise(axis3),  dummy_gri || direction([0.0,0.0,1.0]));
    d2 := first_proj_axis(d1,axis1);
    u := [d2, second_proj_axis(d1,d2,axis2), d1];
  ELSE
     IF EXISTS(axis1) THEN
      d1 := normalise(axis1);
      u := [d1, orthogonal_complement(d1)];
      IF EXISTS(axis2) THEN
        factor := dot_product(axis2,u[2]);
        IF (factor < 0.0) THEN
          u[2].direction_ratios[1] := -u[2].direction_ratios[1];
          u[2].direction_ratios[2] := -u[2].direction_ratios[2];
        END_IF;
      END_IF;
    ELSE
      IF EXISTS(axis2) THEN
        d1 := normalise(axis2);
        u := [orthogonal_complement(d1), d1]; 
        u[1].direction_ratios[1] := -u[1].direction_ratios[1];
        u[1].direction_ratios[2] := -u[1].direction_ratios[2];
      ELSE
        u := [dummy_gri || direction([1.0, 0.0]), dummy_gri ||
                                                direction([0.0, 1.0])];
      END_IF;
    END_IF;
  END_IF;
  RETURN(u);
END_FUNCTION;

(* Implicit interfaced from: geometry_schema *)
 FUNCTION second_proj_axis(z_axis, x_axis, arg: direction) : direction;
   LOCAL
     y_axis : vector;
     v      : direction;
     temp   : vector;
   END_LOCAL;
   
   IF NOT EXISTS(arg) THEN
     v := dummy_gri || direction([0.0,1.0,0.0]);
   ELSE
     v := arg;
   END_IF;
   
   temp   := scalar_times_vector(dot_product(v, z_axis), z_axis);
   y_axis := vector_difference(v, temp);
   temp   := scalar_times_vector(dot_product(v, x_axis), x_axis);
   y_axis := vector_difference(y_axis, temp);
   y_axis := normalise(y_axis);
   RETURN(y_axis.orientation);
 END_FUNCTION;

(* Implicit interfaced from: measure_schema *)
  FUNCTION dimensions_for_si_unit (n : si_unit_name):dimensional_exponents;
    CASE n OF 
      metre:
        RETURN (dimensional_exponents(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      gram:
        RETURN (dimensional_exponents(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      second:
        RETURN (dimensional_exponents(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0));
      ampere:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0));
      kelvin:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
      mole:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));
      candela:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
      radian:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      steradian:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
      hertz:
        RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
      newton:
        RETURN (dimensional_exponents(1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      pascal:
        RETURN (dimensional_exponents(-1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      joule:
        RETURN (dimensional_exponents(2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      watt:
        RETURN (dimensional_exponents(2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0));
      coulomb:
        RETURN (dimensional_exponents(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0));
      volt:
        RETURN (dimensional_exponents(2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0));
      farad:
        RETURN (dimensional_exponents(-2.0, -1.0, 4.0, 1.0, 0.0, 0.0, 0.0));
      ohm:
        RETURN (dimensional_exponents(2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0));
      siemens:
        RETURN (dimensional_exponents(-2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0));
      weber:
        RETURN (dimensional_exponents(2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
      tesla:
        RETURN (dimensional_exponents(0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
      henry:
        RETURN (dimensional_exponents(2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0));
      degree_Celsius:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
      lumen:
        RETURN (dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
      lux:
        RETURN (dimensional_exponents(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
      becquerel:
        RETURN (dimensional_exponents(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
      gray:
        RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      sievert:
        RETURN (dimensional_exponents(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
      OTHERWISE:
        RETURN (?);
    END_CASE;
  END_FUNCTION;

(* Implicit interfaced from: set_theory_schema *)
FUNCTION identical_sets
 (set_a : class; set_b : class) : BOOLEAN; 
  LOCAL
    set_of_sets : SET OF class := [];
  END_LOCAL;
  
  IF (set_a = set_b) THEN
    RETURN (TRUE);
  END_IF;
  
  set_of_sets := set_of_sets + set_b;
  RETURN (identical_to_one_of_set_of_sets(set_a, set_of_sets));
      END_FUNCTION; 

(* Implicit interfaced from: set_theory_schema *)
FUNCTION identical_to_one_of_set_of_sets
 (set_a : class; set_of_sets : SET OF class) : BOOLEAN; 
  LOCAL
    i                            : INTEGER;
    initial_size                 : INTEGER;
    augmented_size               : INTEGER;
    set_of_forward_equivalences  : SET OF same_membership := [];
    set_of_backward_equivalences : SET OF same_membership := [];
    augmented_set_of_sets        : SET OF class := [];
  END_LOCAL;
  
  --  test membership of the specified set of sets
  
  IF (set_a IN set_of_sets) THEN
    RETURN (TRUE);
  END_IF;
  
  --  extend the specified set to include all sets that have the same membership
  --  as an existing member
  
  initial_size := SIZEOF(set_of_sets);
  IF (initial_size = 0) THEN
    RETURN (FALSE);
  END_IF;
  REPEAT i := 1 TO initial_size;
    set_of_forward_equivalences := set_of_forward_equivalences +
      USEDIN(set_of_sets[i], 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SAME_MEMBERSHIP.SET_1');
    set_of_backward_equivalences := set_of_forward_equivalences +
      USEDIN(set_of_sets[i], 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.SAME_MEMBERSHIP.SET_2');
  END_REPEAT;
  
  augmented_set_of_sets := set_of_sets;
  IF (SIZEOF(set_of_forward_equivalences) > 0) THEN
    REPEAT i := 1 to HIINDEX(set_of_forward_equivalences);
      augmented_set_of_sets := augmented_set_of_sets +
        set_of_forward_equivalences[i].set_2;
    END_REPEAT;
  END_IF;
  IF (SIZEOF(set_of_backward_equivalences) > 0) THEN
    REPEAT i := 1 to HIINDEX(set_of_backward_equivalences);
      augmented_set_of_sets := augmented_set_of_sets +
        set_of_backward_equivalences[i].set_1;
    END_REPEAT;
  END_IF;
  
  -- if the specified set of sets has been augmented, then test membership
  
  augmented_size := SIZEOF(augmented_set_of_sets);
  IF augmented_size = initial_size THEN
    RETURN (FALSE);
  END_IF;
  
  RETURN (identical_to_one_of_set_of_sets(set_a, augmented_set_of_sets));
      END_FUNCTION; 

(* Implicit interfaced from: representation_schema *)
  FUNCTION acyclic_representation_relationship
    (relation : representation_relationship; relatives : SET[1:?] OF representation; specific_relation : STRING) : BOOLEAN; 
    LOCAL
      x : SET OF representation_relationship;
    END_LOCAL;

    IF relation.rep_1 IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(r <* bag_to_set(USEDIN(relation.rep_1, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_FUNCTION; 
(* REFERENCE FROM (support_resource_schema); *)
  FUNCTION type_check_function (the_type : GENERIC; sub_names : SET OF STRING; criterion : INTEGER):LOGICAL;
    IF ((NOT EXISTS(the_type)) OR (NOT ({0 <= criterion <= 3})) OR (SIZEOF(sub_names) = 0)) THEN
      RETURN (UNKNOWN);
    ELSE
      CASE criterion OF 
        0:
          RETURN (SIZEOF(sub_names * TYPEOF(the_type)) > 0);
        1:
          RETURN (SIZEOF(sub_names * TYPEOF(the_type)) = 0);
        2:
          RETURN (SIZEOF(sub_names * TYPEOF(the_type)) = 1);
        3:
          RETURN (SIZEOF(sub_names * TYPEOF(the_type)) <= 1);
      END_CASE;
    END_IF;
  END_FUNCTION;

(* Implicit interfaced from: Multi_linguism_mim *)
RULE restrict_language_assignment_per_attribute FOR (attribute_language_assignment);
WHERE
WR1: SIZEOF ( QUERY ( ala1 <* attribute_language_assignment |
	SIZEOF(QUERY( it <* ala1.items |
	   SIZEOF ( QUERY ( ala2 <* USEDIN ( it ,'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS' ) | 
		( ala1\attribute_classification_assignment.attribute_name = ala2\attribute_classification_assignment.attribute_name ) AND 
		( ala1\attribute_classification_assignment.assigned_class :=: ala2\attribute_classification_assignment.assigned_class )
		 )) >1 
	   )) >0 
	)) =0;
END_RULE;

(* Implicit interfaced from: Ap239_product_definition_information_mim *)
RULE ap239_prdi_restrict_product_category_for_product FOR 
(product);
WHERE
  WR1: SIZEOF(QUERY(p <* product | SIZEOF(QUERY(prpc <* USEDIN(p,'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.' +'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name IN ['assembly', 'attachment slot', 'breakdown', 'breakdown element', 'conceptual product', 'detail', 'document', 'envelope', 'functional breakdown', 'functionality', 'hybrid breakdown', 'hybrid element', 'interface connector', 'interface specification', 'justification', 'message', 'part', 'physical breakdown', 'physically realized product', 'prototype part', 'raw material', 'requirement', 'spare part', 'standard', 'system breakdown', 'system element', 'tool', 'zone breakdown', 'zone element'])) <> 1)) = 0;
END_RULE; 

(* Implicit interfaced from: geometry_schema *)
RULE compatible_dimension FOR 
  (cartesian_point,
  direction,
  representation_context,
  geometric_representation_context);
WHERE

  -- ensure that the count of coordinates of each cartesian_point
  -- matches the coordinate_space_dimension of each geometric_context in
  -- which it is geometrically founded
  WR1: SIZEOF(QUERY(x <* cartesian_point| SIZEOF(QUERY
       (y <* geometric_representation_context | item_in_context(x,y) AND
       (HIINDEX(x.coordinates) <> y.coordinate_space_dimension))) > 0 )) =0;

  -- ensure that the count of direction_ratios of each direction
  -- matches the coordinate_space_dimension of each geometric_context in
  -- which it is geometrically founded
  WR2: SIZEOF(QUERY(x <* direction | SIZEOF( QUERY
       (y <* geometric_representation_context | item_in_context(x,y) AND
       (HIINDEX(x.direction_ratios) <> y.coordinate_space_dimension)))
       > 0 )) = 0;
END_RULE;

(* Implicit interfaced from: Extended_measure_representation_mim *)
  RULE subtype_exclusiveness_representation_item FOR 
      (representation_item);
    WHERE
      WR1: SIZEOF(QUERY (cri <* representation_item | 
      NOT (type_check_function(cri,['AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.MEASURE_REPRESENTATION_ITEM',
                                    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.VALUE_REPRESENTATION_ITEM',
                                    'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.COMPOUND_REPRESENTATION_ITEM'] , 3)))) = 0;
  END_RULE; 

RULE application_protocol_definition_required FOR 
(application_context);
WHERE
  WR1: SIZEOF(QUERY(ac <* application_context | (SIZEOF(QUERY(apd <* USEDIN(ac, 'AP239_PRODUCT_LIFE_CYCLE_SUPPORT_MIM_LF.APPLICATION_PROTOCOL_DEFINITION.APPLICATION') | apd.application_interpreted_model_schema_name = 'product_life_cycle_support')) > 0))) > 0;
END_RULE; 

(* Implicit interfaced from: Ap239_product_definition_information_mim *)
(* E2: SUBTYPE_CONSTRAINT ap239_prdi_restrict_breakdown_context_subtypes FOR BREAKDOWN_CONTEXT; *)

(* Implicit interfaced from: Ap239_product_definition_information_mim *)
(* E2: SUBTYPE_CONSTRAINT ap239_prdi_restrict_breakdown_element_usage_subtypes FOR BREAKDOWN_ELEMENT_USAGE; *)

(* Implicit interfaced from: Task_element_mim *)
(* E2: SUBTYPE_CONSTRAINT restrict_task_method_subtypes FOR TASK_ELEMENT; *)

(* Implicit interfaced from: Task_specification_mim *)
(* E2: SUBTYPE_CONSTRAINT restrict_task_action_method_subtypes FOR ACTION_METHOD; *)

(* Implicit interfaced from: Task_specification_mim *)
(* E2: SUBTYPE_CONSTRAINT restrict_action_method_relationship_subtypes FOR ACTION_METHOD_RELATIONSHIP; *)

(* Implicit interfaced from: Ap239_product_definition_information_mim *)
(* E2: SUBTYPE_CONSTRAINT ap239_prdi_restrict_product_definition_relationship_subtypes FOR PRODUCT_DEFINITION_RELATIONSHIP; *)

(*** 2003=>1994 conversion: insert a rule to control if instances are legal according to USE/REF clauses ***)

RULE validate_dependently_instantiable_entity_data_types FOR
      (cartesian_transformation_operator,document_usage_constraint,event_occurrence_role,library_context,person_role,person_type_definition_formation,placement,point,product_definition_context_role,product_definition_effectivity,qualification,representation_map,time_role,vector --<list this first and all subsequent relevant referencedentity data types here>
      );
LOCAL
  number_of_input_instances : INTEGER;
  previous_in_chain : LIST OF GENERIC := [];
  set_of_input_types : SET OF STRING := [];
  all_instances : SET OF GENERIC := [];
END_LOCAL;

  all_instances := cartesian_transformation_operator + document_usage_constraint + event_occurrence_role + library_context + person_role + person_type_definition_formation + placement + point + product_definition_context_role + product_definition_effectivity + qualification + representation_map + time_role + vector;--<make a union of all implicit populations of the FOR-clause>
number_of_input_instances := SIZEOF(all_instances);
(* Collect all type strings of all FOR instances into one set. *)
REPEAT i:=1 TO number_of_input_instances;
  set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
END_REPEAT;

WHERE
  WR1: dependently_instantiated(all_instances, set_of_input_types,
                                previous_in_chain);
END_RULE;

FUNCTION dependently_instantiated(
            set_of_input_instances : SET OF GENERIC:igen;
            set_of_input_types     : SET OF STRING;
            previous_in_chain      : LIST OF GENERIC:cgen): BOOLEAN;
(*'dependently_instantiated' To test whether all instances in the
  input set_of_input_instances are referenced by independently
  instantiable instances. If so, this function returns true.
  Set_of_input_types includes the type strings for all input instances.
  The instances in previous_in_chain are used to detect cyclic
  references during recursive calls to this function. The parameter
  lists already tested instances in a chain of references.
*)
LOCAL
  number_of_input_instances     : INTEGER;
  number_of_referring_instances : INTEGER;
  bag_of_referring_instances    : BAG OF GENERIC:igen := [];
  dependently_instantiated_flag : BOOLEAN;
  previous_in_chain_plus        : LIST OF GENERIC:cgen := [];
  result                        : BOOLEAN := true;
  set_of_types                  : SET OF STRING := [];
END_LOCAL;

IF EXISTS(set_of_input_instances) THEN
  number_of_input_instances := SIZEOF(set_of_input_instances);
  (* Add the declared type of bag_of_referring_instances to the set of
     types of the REFERENCEd instances for the subset comparison later.
   *)
  set_of_input_types := set_of_input_types + 'GENERIC';
  REPEAT i:=1 TO number_of_input_instances;
    (* Determine all references to the current input instance. *)
    bag_of_referring_instances := USEDIN (set_of_input_instances[i] , '');
    IF EXISTS(bag_of_referring_instances) THEN
      number_of_referring_instances := SIZEOF(bag_of_referring_instances);
      dependently_instantiated_flag := false;
      REPEAT j:=1 TO number_of_referring_instances;
        (* Determine the type strings of the current referencing instance.
         *)
        set_of_types := TYPEOF(bag_of_referring_instances[j]);
        (* If the referencing instance is of one of the types of the
           only dependently instantiable select items, the current input
           instance may still be invalidly instantiated.
           Otherwise it is OK, and the next input instance is tested.
         *)
        IF set_of_types <= set_of_input_types THEN -- subset operator
          (* The referring instance is of one of the restricted types.
             However, it may itself be referred to by a valid instance;
             then also the current instance would be valid.
             Thus, call this function recursively with the referring
             instance as input.
             To avoid an infinite loop in case a set of instances
             reference each other in a closed loop, test first whether
             the current referencing instance is in the list of
             previously processed chain members.
           *)
          IF NOT (bag_of_referring_instances[j] IN previous_in_chain) THEN
            previous_in_chain_plus := previous_in_chain +
            set_of_input_instances[i];
            IF dependently_instantiated([bag_of_referring_instances[j]],
              set_of_input_types,
              previous_in_chain_plus) THEN
              dependently_instantiated_flag := true;
              ESCAPE; -- dependently instantiated; next input instance
            ELSE
              (* Not dependently instantiated: go to next referring
              instance. *)
              SKIP;
            END_IF;
          END_IF;
        ELSE
          dependently_instantiated_flag := true;
          ESCAPE; -- dependently instantiated; take next input instance
        END_IF;
      END_REPEAT;
      IF NOT dependently_instantiated_flag THEN
        RETURN(false);
      END_IF;
    ELSE
      RETURN(false); -- not referenced at all => invalidly instantiated
    END_IF;
  END_REPEAT;
ELSE
  RETURN(false); -- no input
END_IF;

RETURN(true);
END_FUNCTION; -- end dependently_instantiated



END_SCHEMA;

