<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.7 2004/12/05 18:00:58 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="assembly_component_placement_requirements" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2004/12/05 18:00:58 $" rcs.revision="$Revision: 1.7 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
		This part of ISO 10303 defines an application module for the representation of information needed to describe the constraints restricting where components are to be placed in an assembly. These restrictions may be component category to board feature category or component category to component category related. Module attribute data population is restricted to that related to the discrete assembly view.  
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>xxxxx</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>xxxx</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Component_group_assignment" extensible="NO">
            <aimelt xml:space="preserve">(product_definition_relationship) (shape_aspect_relationship)</aimelt>
            <source xml:space="preserve">ISO 10303-41 41</source>
            <refpath xml:space="preserve">({product_definition_relationship
product_definition_relationship.name = 'group member'})
({shape_aspect_relationship
shape_aspect_relationship.name = 'group member'})
</refpath>
            <aa attribute="assigned_component" assertion_to="Assembly_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
component_definition)
(shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_shape_aspect)
</refpath>
            </aa>
            <aa attribute="associated_group" assertion_to="Placement_group">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
group_product_definition)
(shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
group_shape_aspect)
</refpath>
            </aa>
        </ae>
    <ae entity="Component_placement_restriction_assignment" extensible="NO">
            <aimelt xml:space="preserve">representation</aimelt>
            <source xml:space="preserve">ISO 10303-43</source>
            <refpath xml:space="preserve">representation
{representation.name = 'component placement restriction assignment'}
</refpath>
            <aa attribute="components_permitted">
                <aimelt xml:space="preserve">descriptive_representation_item</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">representation
representation.items[i] -&gt;
{representation_item
representation_item.name = 'components permitted'}
representation_item =&gt;
descriptive_representation_item
{descriptive_representation_item
(descriptive_representation_item.description = 'true')
(descriptive_representation_item.description = 'false')}
</refpath>
            </aa>
            <aa attribute="maximum_mounting_clearance" assertion_to="Datum_based_length_measure">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
representation
{representation.name = 'maximum mounting clearance'}
</refpath>
            </aa>
            <aa attribute="maximum_negative_component_height" assertion_to="Datum_based_length_measure">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
representation
{representation.name = 'maximum negative component height'}
</refpath>
            </aa>
            <aa attribute="maximum_positive_component_height" assertion_to="Datum_based_length_measure">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
{representation.name = 'maximum positive component height'}
</refpath>
            </aa>
            <aa attribute="minimum_mounting_clearance" assertion_to="Datum_based_length_measure">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
{representation.name = 'minimum mounting clearance'}
</refpath>
            </aa>
            <aa attribute="requirement" assertion_to="Item_restricted_requirement_occurrence">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition =&gt;
requirements_property =&gt;
grouped_requirements_property
{[grouped_requirements_property &lt;=
group
group.name = 'item restricted requirements property']}
</refpath>
            </aa>
            <aa attribute="area" assertion_to="Mounting_restriction_area">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
{representation_relationship
representation_relationship.name = 'component placement restriction assignment area'}
representation_relationship.rep_2 -&gt;
representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect =&gt;
mounting_restriction_area
</refpath>
            </aa>
            <aa attribute="volume" assertion_to="Mounting_restriction_volume">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
{representation_relationship
representation_relationship.name = 'component placement restriction assignment volume'}
representation_relationship.rep_2 -&gt;
representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect =&gt;
mounting_restriction_volume
</refpath>
            </aa>
        </ae>
    <ae entity="Item_restricted_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">grouped_requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">grouped_requirements_property &lt;=
[group
{group
group.name = 'item restricted requirements property'}]
[requirements_property &lt;=
property_definition]
</refpath>
            <aa attribute="basis" assertion_to="restriction_basis_item">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;- 
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
groupable_item
</refpath>
            </aa>
        </ae>
    <ae entity="Mounting_restriction_area" extensible="NO">
            <aimelt xml:space="preserve">mounting_restriction_area</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">mounting_restriction_area &lt;=
shape_aspect
</refpath>
            <aa attribute="mounting_surface" assertion_to="Interconnect_module_component_surface_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_area &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'mounting surface'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect.description = 'interconnect module component surface feature'}
shape_aspect =&gt;
interconnect_module_component_surface_feature
</refpath>
            </aa>
            <aa attribute="scope" assertion_to="Assembly_module">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_area &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
[product_definition.name = 'assembly module']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design']}
product_definition =&gt;
physical_unit
</refpath>
            </aa>
        </ae>
    <ae entity="Mounting_restriction_volume" extensible="NO">
            <aimelt xml:space="preserve">mounting_restriction_volume</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">mounting_restriction_volume &lt;=
shape_aspect
</refpath>
            <aa attribute="mounting_surface" assertion_to="Interconnect_module_component_surface_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_volume &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'mounting surface'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect.description = 'interconnect module component surface feature'}
shape_aspect =&gt;
interconnect_module_component_surface_feature
</refpath>
            </aa>
            <aa attribute="scope" assertion_to="Assembly_module">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_volume &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
[product_definition.name = 'assembly module']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design']}
product_definition =&gt;
physical_unit
</refpath>
            </aa>
        </ae>
    <ae entity="Placement_group" extensible="NO">
            <aimelt xml:space="preserve">(group_product_definition) (group_shape_aspect)</aimelt>
            <source xml:space="preserve">ISO 10303-210 210</source>
            <refpath xml:space="preserve">(group_product_definition &lt;=
component_definition &lt;=
product_definition
{product_definition
[product_definition.description = 'placement group']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'design requirement']})
(group_shape_aspect &lt;=
shape_aspect
{shape_aspect
[shape_aspect.description = 'placement group']
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition =&gt;
group_product_definition]})
</refpath>
            <aa attribute="design_specific_usage">
                <aimelt xml:space="preserve">product_definition.id</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">(group_product_definition &lt;=
component_definition &lt;=)
(group_shape_aspect &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition)
product_definition.id
</refpath>
            </aa>
        </ae>
    <ae entity="Placement_group_area_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'area impacted group'}
</refpath>
            <aa attribute="area" assertion_to="Mounting_restriction_area">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
mounting_restriction_area
</refpath>
            </aa>
            <aa attribute="placed_group" assertion_to="Placement_group">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'design requirement'}
product_definition =&gt;
component_definition =&gt;
group_product_definition)
(shape_aspect =&gt;
group_shape_aspect)
</refpath>
            </aa>
        </ae>
    <ae entity="Placement_group_volume_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'volume impacted group'}
</refpath>
            <aa attribute="volume" assertion_to="Mounting_restriction_area">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
mounting_restriction_volume
</refpath>
            </aa>
            <aa attribute="placed_group" assertion_to="Placement_group">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'design requirement'}
product_definition =&gt;
component_definition =&gt;
group_product_definition)
(shape_aspect =&gt;
group_shape_aspect)
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
