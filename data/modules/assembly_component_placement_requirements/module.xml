<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<module name="assembly_component_placement_requirements" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: $" rcs.revision="$Revision: $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">
    <keywords>
    module
 </keywords>
    <abstract>
        <li>xxxxx</li>
    </abstract>
    <contacts>
        <projlead ref="AP210.projlead"/>
        <editor ref="pdmmodules.editor"/>
    </contacts>
    <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of 
   </p>
 </purpose>
    <inscope>
        <li>xxxxx</li>
    </inscope>
    <outscope>
        <li>xxxx</li>
    </outscope>
    <arm>
        <express-g>
            <imgfile file="armexpg1.xml"/>
        </express-g>
    </arm>
    <mapping_table>
        <ae original_module="Assembly_component_placement_requirements" entity="Component_group_assignment" extensible="NO">
            <aimelt xml:space="preserve">(product_definition_relationship) (shape_aspect_relationship)</aimelt>
            <source xml:space="preserve">ISO 10303-41 41</source>
            <refpath xml:space="preserve">({product_definition_relationship
product_definition_relationship.name = `group member'})
({shape_aspect_relationship
shape_aspect_relationship.name = `group member'})
</refpath>
            <aa assertion_to="Assembly_component" attribute="assigned_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
component_definition)
(shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_shape_aspect)
</refpath>
            </aa>
            <aa assertion_to="Placement_group" attribute="associated_group">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition =&gt;
component_definition =&gt;
group_product_definition)
(shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
group_shape_aspect)
</refpath>
            </aa>
        </ae>
        <ae original_module="Assembly_component_placement_requirements" entity="Component_placement_restriction_assignment" extensible="NO">
            <aimelt xml:space="preserve">representation</aimelt>
            <source xml:space="preserve">ISO 10303-43</source>
            <refpath xml:space="preserve">representation
{representation.name = `component placement restriction assignment'}
</refpath>
            <aa attribute="components_permitted">
                <aimelt xml:space="preserve">descriptive_representation_item</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">representation
representation.items[i] -&gt;
{representation_item
representation_item.name = `components permitted'}
representation_item =&gt;
descriptive_representation_item
{descriptive_representation_item
(descriptive_representation_item.description = `true')
(descriptive_representation_item.description = `false')}
</refpath>
            </aa>
            <aa assertion_to="Datum_based_length_measure" attribute="maximum_mounting_clearance">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
representation
{representation.name = `maximum mounting clearance'}
</refpath>
            </aa>
            <aa assertion_to="Datum_based_length_measure" attribute="maximum_negative_component_height">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
representation
{representation.name = `maximum negative component height'}
</refpath>
            </aa>
            <aa assertion_to="Datum_based_length_measure" attribute="maximum_positive_component_height">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
{representation.name = `maximum positive component height'}
</refpath>
            </aa>
            <aa assertion_to="Datum_based_length_measure" attribute="minimum_mounting_clearance">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
representation_relationship
representation_relationship.rep_2 -&gt;
representation
{representation.name = `minimum mounting clearance'}
</refpath>
            </aa>
            <aa assertion_to="Item_restricted_requirement_occurrence" attribute="requirement">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition =&gt;
requirements_property =&gt;
grouped_requirements_property
{[grouped_requirements_property &lt;=
group
group.name = `item restricted requirements property']}
</refpath>
            </aa>
            <aa assertion_to="Mounting_restriction_area" attribute="area">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
{representation_relationship
representation_relationship.name = `component placement restriction assignment area'}
representation_relationship.rep_2 -&gt;
representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect =&gt;
mounting_restriction_area
</refpath>
            </aa>
            <aa assertion_to="Mounting_restriction_volume" attribute="volume">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">representation &lt;-
representation_relationship.rep_1
{representation_relationship
representation_relationship.name = `component placement restriction assignment volume'}
representation_relationship.rep_2 -&gt;
representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect =&gt;
mounting_restriction_volume
</refpath>
            </aa>
        </ae>
        <ae original_module="Assembly_component_placement_requirements" entity="Item_restricted_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">grouped_requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">grouped_requirements_property &lt;=
[group
{group
group.name = `item restricted requirements property'}]
[requirements_property &lt;=
property_definition]
</refpath>
            <aa assertion_to="Component_external_reference" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = representation
{representation
representation.name = `component external reference'}
representation
</refpath>
            </aa>
            <aa assertion_to="Component_feature_external_reference" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = representation_item
{representation_item
representation_item.name = `component feature external reference'}
representation_item =&gt;
descriptive_representation_item
</refpath>
            </aa>
            <aa assertion_to="Ee_requirement_occurrence" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = requirements_property
requirements_property
</refpath>
            </aa>
            <aa assertion_to="Assembly_component" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
(group_assigned_item = component_definition)
(group_assigned_item = component_shape_aspect)
</refpath>
            </aa>
            <aa assertion_to="Component_feature" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
(group_assigned_item = component_terminal)
(group_assigned_item = component_interface_terminal)
(group_assigned_item = laminate_component_interface_terminal) 
(group_assigned_item = component_feature)
</refpath>
            </aa>
            <aa assertion_to="Inter_stratum_feature" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = inter_stratum_feature
inter_stratum_feature
{inter_stratum_feature &lt;=
component_shape_aspect &lt;=
shape_aspect
[(shape_aspect.description = `bonded conductive base blind via')
(shape_aspect.description = `non conductive base blind via')
(shape_aspect.description = `plated conductive base blind via')
(shape_aspect.description = `interfacial connection')
(shape_aspect.description = `buried via')
(shape_aspect.description = `component termination passage')
(shape_aspect.description = `plated cutout')
(shape_aspect.description = `plated cutout edge segment')
(shape_aspect.description = `plated interconnect module edge segment')
(shape_aspect.description = `unsupported passage')
(shape_aspect.description = `cutout')
(shape_aspect.description = `physical connectivity interrupting cutout')
(shape_aspect.description = `dielectric material passage')
(shape_aspect.description = `cutout edge segment')
(shape_aspect.description = `interconnect module edge segment')
(shape_aspect.description = `interconnect module edge')]
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
[product_definition
product_definition.description = `laminate component']
[product_definition =&gt;
component_definition]]}
</refpath>
            </aa>
            <aa assertion_to="Laminate_component" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
(group_assigned_item = component_definition
{component_definition &lt;=
product_definition
product_definition.description = `laminate component'})
(group_assigned_item = component_shape_aspect
(component_shape_aspect =&gt;
(inter_stratum_feature)
(land)
(fiducial)
(probe_access_area)
(material_removal_component_shape_aspect))
(component_shape_aspect &lt;=
shape_aspect
{shape_aspect.description = `laminate text string component'} =&gt;
component_shape_aspect =&gt;
assembly_group_component_shape_aspect =&gt;
array_placement_group_component_shape_aspect)
(component_shape_aspect &lt;=
shape_aspect
{(shape_aspect.description = `laminate component')
(shape_aspect.description = `part template occurrence')
(shape_aspect.description = `conductive interconnect element with pre defined transitions')
(shape_aspect.description = `join 2 physical connectivity definition supporting')
(shape_aspect.description = `conductive interconnect element with user defined single transition')
(shape_aspect.description = `unrouted conductive interconnect element')
(shape_aspect.description = `laminate text component')
(shape_aspect.description = `primary stratum indicator symbol')
(shape_aspect.description = `routed interconnect component')
(shape_aspect.description = `special symbol laminate component')
(shape_aspect.description = `stratum feature template component')}))
</refpath>
            </aa>
            <aa assertion_to="Part_feature" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = shape_aspect
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = `part group feature'])
(shape_aspect.description = `part generic feature')
(shape_aspect.description = `polarity indication feature')
(shape_aspect.description = `interconnect module cavity surface')
(shape_aspect.description = `interconnect module cutout surface')
(shape_aspect.description = `interconnect module edge segment surface')
(shape_aspect.description = `interconnect module edge surface')
(shape_aspect.description = `interconnect module primary surface')
(shape_aspect.description = `interconnect module secondary surface')
(shape_aspect.description = `interconnect module surface feature')
(shape_aspect =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
secondary_orientation_feature)
(shape_aspect =&gt; 
package_body)
(shape_aspect =&gt; 
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt; 
thermal_feature)
(shape_aspect =&gt; 
part_mounting_feature)
(shape_aspect =&gt; 
package_terminal)
(shape_aspect =&gt; 
assembly_module_terminal)
(shape_aspect =&gt; 
interconnect_module_terminal)
(shape_aspect =&gt; 
minimally_defined_bare_die_terminal)
(shape_aspect =&gt; 
packaged_part_terminal)
(shape_aspect =&gt; 
package_body_surface)}
</refpath>
            </aa>
            <aa assertion_to="Stratum" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = stratum
stratum
{stratum &lt;=
product_definition}
</refpath>
            </aa>
            <aa assertion_to="Stratum_feature" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = stratum_feature
stratum_feature
{stratum_feature &lt;=
shape_aspect}
</refpath>
            </aa>
            <aa assertion_to="Stratum_surface" attribute="basis">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">grouped_requirements_property &lt;=
group &lt;-
group_assignment.assigned_group
group_assignment =&gt;
applied_group_assignment
applied_group_assignment.items[i] -&gt;
group_assigned_item
group_assigned_item = stratum_surface
stratum_surface
</refpath>
            </aa>
        </ae>
        <ae original_module="Assembly_component_placement_requirements" entity="Mounting_restriction_area" extensible="NO">
            <aimelt xml:space="preserve">mounting_restriction_area</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">mounting_restriction_area &lt;=
shape_aspect
</refpath>
            <aa assertion_to="Interconnect_module_component_surface_feature" attribute="mounting_surface">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_area &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `mounting surface'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect.description = `interconnect module component surface feature'}
shape_aspect =&gt;
interconnect_module_component_surface_feature
</refpath>
            </aa>
            <aa assertion_to="Assembly_module" attribute="scope">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_area &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
[product_definition.name = `assembly module']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = `physical design']}
product_definition =&gt;
physical_unit
</refpath>
            </aa>
        </ae>
        <ae original_module="Assembly_component_placement_requirements" entity="Mounting_restriction_volume" extensible="NO">
            <aimelt xml:space="preserve">mounting_restriction_volume</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">mounting_restriction_volume &lt;=
shape_aspect
</refpath>
            <aa assertion_to="Interconnect_module_component_surface_feature" attribute="mounting_surface">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_volume &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `mounting surface'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect.description = `interconnect module component surface feature'}
shape_aspect =&gt;
interconnect_module_component_surface_feature
</refpath>
            </aa>
            <aa assertion_to="Assembly_module" attribute="scope">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">mounting_restriction_volume &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
[product_definition.name = `assembly module']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = `physical design']}
product_definition =&gt;
physical_unit
</refpath>
            </aa>
        </ae>
        <ae original_module="Assembly_component_placement_requirements" entity="Placement_group" extensible="NO">
            <aimelt xml:space="preserve">(group_product_definition) (group_shape_aspect)</aimelt>
            <source xml:space="preserve">ISO 10303-210 210</source>
            <refpath xml:space="preserve">(group_product_definition &lt;=
component_definition &lt;=
product_definition
{product_definition
[product_definition.description = `placement group']
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = `design requirement']})
(group_shape_aspect &lt;=
shape_aspect
{shape_aspect
[shape_aspect.description = `placement group']
[shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition =&gt;
group_product_definition]})
</refpath>
            <aa attribute="design_specific_usage">
                <aimelt xml:space="preserve">product_definition.id</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">(group_product_definition &lt;=
component_definition &lt;=)
(group_shape_aspect &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition)
product_definition.id
</refpath>
            </aa>
            <aa assertion_to="Ee_requirement_occurrence" attribute="requirement">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(group_product_definition &lt;=
component_definition &lt;=
product_definition
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition)
(group_shape_aspect &lt;=
shape_aspect
shape_definition = shape_aspect
shape_definition
characterized_definition = shape_definition)
characterized_definition &lt;-
property_definition.definition
{property_definition
property_definition.name = `requirement'}
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = `requirement'}
property_definition_relationship.relating_property_definition -&gt;
property_definition =&gt;
requirements_property
</refpath>
            </aa>
        </ae>
        <ae original_module="Assembly_component_placement_requirements" entity="Placement_group_area_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = `area impacted group'}
</refpath>
            <aa assertion_to="Mounting_restriction_area" attribute="area">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
mounting_restriction_area
</refpath>
            </aa>
            <aa assertion_to="Placement_group" attribute="placed_group">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = `design requirement'}
product_definition =&gt;
component_definition =&gt;
group_product_definition)
(shape_aspect =&gt;
group_shape_aspect)
</refpath>
            </aa>
        </ae>
        <ae original_module="Assembly_component_placement_requirements" entity="Placement_group_volume_assignment">
            <aimelt>shape_aspect_relationship</aimelt>
            <source>ISO 10303-41</source>
            <refpath>{shape_aspect_relationship
shape_aspect_relationship.name = `volume impacted group'}
</refpath>
            <aa assertion_to="Mounting_restriction_area" attribute="volume">
                <aimelt>PATH</aimelt>
                <refpath>shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
mounting_restriction_volume
</refpath>
            </aa>
            <aa assertion_to="Placement_group" attribute="placed_group">
                <aimelt>PATH</aimelt>
                <refpath>shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = `design requirement'}
product_definition =&gt;
component_definition =&gt;
group_product_definition)
(shape_aspect =&gt;
group_shape_aspect)
</refpath>
            </aa>
        </ae>
    </mapping_table>
    <mim>
        <express-g>
            <imgfile file="mimexpg1.xml"/>
        </express-g>
    </mim>
</module>
