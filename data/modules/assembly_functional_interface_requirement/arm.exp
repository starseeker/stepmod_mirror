(*
   $Id: arm.exp,v 1.27 2005/02/02 14:42:20 budreckytej Exp $
   ISO TC184/SC4/WG12 N3294 - ISO/CD-TS 10303-1635 Assembly functional interface requirement - EXPRESS ARM
*)

SCHEMA Assembly_functional_interface_requirement_arm;

USE FROM Packaged_part_black_box_model_arm;

USE FROM Product_view_definition_arm;

USE FROM Requirement_assignment_arm;

USE FROM Requirement_decomposition_arm;

REFERENCE FROM Specification_document_arm(get_document_definition);

	TYPE afir_documented_element_select = EXTENSIBLE GENERIC_ENTITY SELECT BASED_ON documented_element_select WITH 
	   (Protocol_physical_layer_definition);
	END_TYPE; 

  ENTITY Minimally_defined_connector
    SUBTYPE OF (Packaged_part);
    	SELF\Packaged_part.used_package	: SET[1:?] OF Package_external_reference;
    INVERSE
      terminal 												: SET[1:?] OF Shape_element FOR containing_shape;
    WHERE
      WR1 : SIZEOF(QUERY(t <* SELF\Packaged_part.access_mechanisms | ('ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_ARM.PACKAGED_PART_INTERFACE_TERMINAL' IN TYPEOF(t)))) >= 1;
      WR2 : NOT EXISTS(SELF\Packaged_part.implemented_function);
      WR3 : NOT ('ASSEMBLY_FUNCTIONAL_INTERFACE_REQUIREMENT_ARM.ALTERED_PACKAGED_PART' IN TYPEOF(SELF));
  END_ENTITY;

  ENTITY Protocol_physical_layer_definition
    SUBTYPE OF (Product_view_definition);
      host_connector                       : OPTIONAL Minimally_defined_connector;
      host_functional_definition           : Functional_unit_usage_view;
      media_connector                      : OPTIONAL Minimally_defined_connector;
      media_functional_definition          : OPTIONAL Functional_unit_usage_view;
	DERIVE
		reference_document: SET[0:?] OF Document_definition :=
  			get_document_definition(SELF, 'reference document', 
  			'DOCUMENT_DEFINITION_ARM.DOCUMENT_DEFINITION');
	
		host_rcv_functional_characterization: SET[0:?] OF Functional_specification_definition :=
  			get_document_definition(SELF, 'host rcv functional characterization', 
  			'FUNCTIONAL_SPECIFICATION_ARM.FUNCTIONAL_SPECIFICATION_DEFINITION');

		host_xmt_functional_characterization: SET[0:?] OF Functional_specification_definition :=
  			get_document_definition(SELF, 'host xmt functional characterization', 
  			'FUNCTIONAL_SPECIFICATION_ARM.FUNCTIONAL_SPECIFICATION_DEFINITION');

		media_functional_characterization: SET[0:?] OF Functional_specification_definition :=
  			get_document_definition(SELF, 'media functional characterization', 
  			'FUNCTIONAL_SPECIFICATION_ARM.FUNCTIONAL_SPECIFICATION_DEFINITION');
	WHERE
   		WR1 : EXISTS (reference_document) AND SIZEOF(reference_document) = 1;
   		WR2 : NOT EXISTS (host_rcv_functional_characterization) OR SIZEOF(host_rcv_functional_characterization) = 1;
		WR3 : NOT EXISTS (host_xmt_functional_characterization) OR SIZEOF(host_xmt_functional_characterization) = 1;
   		WR4 : NOT EXISTS (media_functional_characterization) OR SIZEOF(media_functional_characterization) = 1;
      	WR5 : EXISTS(host_functional_definition) OR EXISTS(media_functional_definition);
  END_ENTITY;


END_SCHEMA;

