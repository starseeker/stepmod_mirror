<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="assembly_functional_interface_requirement" schema_file="arm.xml" describe.selects="YES" describe.subtype_constraints="YES" rcs.date="$Date: 2004/12/06 09:19:47 $" rcs.revision="$Revision: 1.5 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Assembly_functional_interface_requirement_arm
   <express_ref linkend="assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Assembly_functional_interface_requirement_arm">
</ext_description>
<!-- +++++++++++ Interface_requirement_occurrence +++++++++++ -->
<ext_description linkend="Assembly_functional_interface_requirement_arm.Interface_requirement_occurrence">
An <b>Interface_requirement_occurrence</b> is a type of <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Design_requirement_occurrence"/>.
An <b>Interface_requirement_occurrence</b> may specify either the assembly interface to the next higher assembly or a physical layer of a protocol.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Interface_requirement_occurrence.reference_protocol">
the <b>reference_protocol</b> specifies the role of the <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition"/> for the 
<b>Interface_requirement_occurrence</b>.  This specifies the physical layer of a protocol that is to be supported by the interface.  
The value of this attribute is optional and need not be specified.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Interface_requirement_occurrence.interface_to_next_higher_assembly">
the <b>interface_to_next_higher_assembly</b> specifies the role of the <express_ref linkend="Assembly_physical_interface_requirement:arm:Assembly_physical_interface_requirement_arm.Next_higher_assembly_interface_requirement"/> 
for the <b>Interface_requirement_occurrence</b>.  This specifies the component in the next assembly that is the interface. The value of this
attribute is optional and need not be specified.
</ext_description>
<!-- +++++++++++ Protocol_physical_layer_definition +++++++++++ -->
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition"><p>
A <b>Protocol_physical_layer_definition</b> is a type of <express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/>.
A <b>Protocol_physical_layer_definition</b> is a description of the information needed to specify requirements for the lowest level interface for a communication or other engineering operational protocol.  
The protocol specification is referenced by the documentation attribute inherited from the  <express_ref linkend="Product_view_definition:arm:Product_view_definition_arm.Product_view_definition"/> Application Object.
A <b>Protocol_physical_layer_definition</b> includes references to minimum information for connectors, host transmit and receive functional definitions, and host transmit and receive functional characteristics.  The functional definitions should be used to identify signal names if needed, as it is common for protocols to not define connectors.
If the protocol defines a connector and signal names for that connector, then the functional definition terminals are mapped to the host connector terminals using one or more <express_ref linkend="Part_terminal:arm:Part_terminal_arm.Functional_usage_view_to_part_terminal_assignment"/>. A <b>media_connector</b> may be a connector on an antenna. The <b>host_connector</b> and <b>media_connector</b> form a mated pair when assembled via their respective <express_ref linkend="Packaged_connector_model:arm:Packaged_connector_model_arm.Packaged_part_interface_terminal"/>.
If the protocol does not define a connector or if non-standard connector implementation is chosen, members of <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal"/> may be populated to specify the product specific mapping for the protocol.
</p><note>
The <b>Protocol_physical_layer_definition</b> is provided to enable verification of product models against physical and functional requirements imposed by protocol definitions.  The <b>Protocol_physical_layer_definition</b> is referenced by <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Interface_requirement_occurrence"/> to establish a requirement.  The functional requirements are most often functional in nature but are not required to be by this part of ISO 10303.
</note>

<example number="1">
A physical layer consisting of RS 232 compliant elements would be represented by a host functional unit, a media functional unit, a host connector, a media connector, and members of  <express_ref linkend="Part_terminal:arm:Part_terminal_arm.Functional_usage_view_to_part_terminal_assignment"/> to accomplish the functional to physical mapping.  If detailed functional characteristics of the media were desired, the media functional unit would reference members of <express_ref linkend="Analytical_model:arm:Analytical_model_arm.Analytical_model_application"/>.
</example>
<example number="2">
A design group implementing an ARINC 429 interface for an electronics unit would populate one member of <b>Protocol_physical_layer_definition</b> and as many members of  <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal"/> as needed to specify the pin mapping from the unit connector terminals (<express_ref linkend="Assembly_module_usage_view:arm:Assembly_module_usage_view_arm.Assembly_module_terminal"/>) to the signal names (<express_ref linkend="Network_functional_usage_view:arm:Network_functional_usage_view_arm.Functional_unit_usage_view_terminal_definition.signal_name"/> attribute of  <express_ref linkend="Network_functional_usage_view:arm:Network_functional_usage_view_arm.Functional_unit_usage_view_terminal_definition"/>) for each application of the protocol in the unit.
</example>

</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.reference_document">
<p>
</p></ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.media_functional_definition">
<p>
the <b>media_functional_definition</b> specifies a role of the <express_ref linkend="Network_functional_usage_view:arm:Network_functional_usage_view_arm.Functional_unit_usage_view"/>  for the <b>Protocol_physical_layer_definition</b>. The <b>media_functional_definition</b> is optional and need not be supplied.
</p>
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.media_functional_characterization">
<p>
the <b>media_functional_characterization</b> specifies a role of the <express_ref linkend="Functional_specification:arm:Functional_specification_arm.Functional_specification_definition"/>  for the <b>Protocol_physical_layer_definition</b>. The <b>media_functional_characterization</b> is optional and need not be supplied.
</p></ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.media_connector">
the <b>media_connector</b> specifies one role of the <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Minimally_defined_connector"/> for the <b>Protocol_physical_layer_definition</b>. The <b>media_connector</b> is optional and need not be supplied.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.host_xmt_functional_characterization">
<p>
the <b>host_xmt_functional_characterization</b> specifies a role of the <express_ref linkend="Functional_specification:arm:Functional_specification_arm.Functional_specification_definition"/>  for the <b>Protocol_physical_layer_definition</b>. The <b>host_xmt_functional_characterization</b> is optional and need not be supplied.
</p></ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.host_rcv_functional_characterization">
<p>
the <b>host_rcv_functional_characterization</b> specifies a role of the <express_ref linkend="Functional_specification:arm:Functional_specification_arm.Functional_specification_definition"/>  for the <b>Protocol_physical_layer_definition</b>. The <b>host_rcv_functional_characterization</b> is optional and need not be supplied.
</p></ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.host_functional_definition">
<p>
the <b>host_functional_definition</b> specifies a role of the <express_ref linkend="Network_functional_usage_view:arm:Network_functional_usage_view_arm.Functional_unit_usage_view"/>  for the <b>Protocol_physical_layer_definition</b>.
</p></ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition.host_connector">
the <b>host_connector</b> specifies one role of the <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Minimally_defined_connector"/> for the 
<b>Protocol_physical_layer_definition</b>. The <b>host_connector</b> is optional and need not be supplied.
</ext_description>
<!-- +++++++++++ Protocol_requirement_allocation_to_part_terminal +++++++++++ -->
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal">
A <b>Protocol_requirement_allocation_to_part_terminal</b> is a type of <express_ref linkend="Requirement_assignment:arm:Requirement_assignment_arm.Requirement_assignment"/> for which the <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Interface_requirement_occurrence"/> is the allocated requirement. A <b>Protocol_requirement_allocation_to_part_terminal</b> is the relationship between a <express_ref linkend="Part_terminal:arm:Part_terminal_arm.Part_terminal"/> and a <express_ref linkend="Network_functional_usage_view:arm:Network_functional_usage_view_arm.Functional_unit_usage_view_terminal_definition"/> that is included by a design or support activity.  The  <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Interface_requirement_occurrence"/> specifies a <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Protocol_physical_layer_definition"/> in order to make the relationship unambiguous.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal.protocol_signal">
<p>
the <b>protocol_signal</b> specifies a role of the <express_ref linkend="Network_functional_usage_view:arm:Network_functional_usage_view_arm.Functional_unit_usage_view_terminal_definition"/> 
for the <b>Protocol_requirement_allocation_to_part_terminal</b>.
</p>
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal.assigned_requirement">
the <b>assigned_requirement</b> specifies the role of the <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Interface_requirement_occurrence"/> for the <b>Protocol_requirement_allocation_to_part_terminal</b>.  The <b>assigned_requirement</b> indirectly specifies the <express_ref linkend="Network_functional_usage_view:arm:Network_functional_usage_view_arm.Functional_unit_usage_view"/> that contains the <b>protocol_signal</b>.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Protocol_requirement_allocation_to_part_terminal.assigned_to">
<p>the item which has the requirement assigned to it.</p>
</ext_description>
<!-- +++++++++++ Mating_connector_termination +++++++++++ -->
<ext_description linkend="Assembly_functional_interface_requirement_arm.Mating_connector_termination">

 
A <b>Mating_connector_termination</b> is a single terminal of a  <express_ref linkend="Assembly_physical_interface_requirement:arm:Assembly_physical_interface_requirement_arm.Mating_connector_component"/>.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Mating_connector_termination.name">
the <b>name</b> specifies the string for the <b>Mating_connector_termination</b>. 
The <b>name</b> specifies the identifier for the <b>Mating_connector_termination</b>.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Mating_connector_termination.accessed_connector">
the <b>accessed_connector</b> specifies the role of the <express_ref linkend="Assembly_physical_interface_requirement:arm:Assembly_physical_interface_requirement_arm.Mating_connector_component"/> for the 
<b>Mating_connector_termination</b>.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Mating_connector_termination.definition">
the <b>definition</b> specifies the <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.mating_connector_definition_select"/> for the <b>Mating_connector_termination</b>.
The <b>definition</b> specifies either a <express_ref linkend="Packaged_part_black_box_model:arm:Packaged_part_black_box_model_arm.Packaged_part_terminal"/> or 
a <express_ref linkend="Printed_physical_layout_template:arm:Printed_physical_layout_template_arm.Printed_part_template_terminal"/> for the <b>Mating_connector_termination</b>.

</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Mating_connector_termination.ur:UR1">
The combination of the <b>accessed_connector</b> and the <b>definition</b> shall be unique within a population of 
<b>Mating_connector_termination</b>.
</ext_description>
<!-- +++++++++++ Minimally_defined_connector +++++++++++ -->
<ext_description linkend="Assembly_functional_interface_requirement_arm.Minimally_defined_connector"><p>
A <b>Minimally_defined_connector</b> is a type of <express_ref linkend="Packaged_part_black_box_model:arm:Packaged_part_black_box_model_arm.Packaged_part"/> whose functionality is defined by a communications protocol.  The protocol specifies signal names for each connector <b>terminal</b>,
and may specify impedance and other electrical characteristics. A <b>Minimally_defined_connector</b> does not specify sufficient information to use the connector in a design, as only the interface <b>terminal</b>s are identified.  There shall be at least one  <express_ref linkend="Packaged_connector_model:arm:Packaged_connector_model_arm.Packaged_part_interface_terminal"/> in the members of  <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/> that reference the <b>Minimally_defined_connector</b>. 
</p><note>
One use for a <b>Minimally_defined_connector</b> is as a reference for a communications protocol. 
</note>
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Minimally_defined_connector.terminal">
the <b>terminal</b> is an inverse relationship that specifies that the <b>Minimally_defined_connector</b> is existence dependent on the <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature"/> that references it in the role of <express_ref linkend="Physical_unit_usage_view:arm:Physical_unit_usage_view_arm.Part_feature.associated_definition"/>.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Minimally_defined_connector.used_package">
<p>
the <b>used_package</b> specifies the <express_ref linkend="Packaged_part_black_box_model:arm:Packaged_part_black_box_model_arm.package_or_package_external_reference"/> of the <express_ref linkend="Packaged_part_black_box_model:arm:Packaged_part_black_box_model_arm.Packaged_part"/>.
There shall be one or more <b>used_package</b> for a <express_ref linkend="Packaged_part_black_box_model:arm:Packaged_part_black_box_model_arm.Packaged_part"/>.
</p>
</ext_description>
<!-- +++++++++++ Termination_constraint +++++++++++ -->
<ext_description linkend="Assembly_functional_interface_requirement_arm.Termination_constraint">
A <b>Termination_constraint</b> is a constraint that requires a set of two 
or more <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Mating_connector_termination"/> to 
satisfy an <express_ref linkend="Requirement_decomposition:arm:Requirement_decomposition_arm.Requirement_definition_property"/>.
</ext_description>
<ext_description linkend="Assembly_functional_interface_requirement_arm.Termination_constraint.constrained_termination">
the <b>constrained_termination</b> specifies the role of the <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Mating_connector_termination"/> for the <b>Termination_constraint</b>. There shall be two or more 
 <express_ref linkend="Assembly_functional_interface_requirement:arm:Assembly_functional_interface_requirement_arm.Mating_connector_termination"/> for the <b>Termination_constraint</b>.
</ext_description>
</ext_descriptions>

