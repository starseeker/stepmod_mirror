<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.13 2005/01/17 23:23:04 thomasrthurman Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="assembly_functional_interface_requirement" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/01/17 23:23:04 $" rcs.revision="$Revision: 1.13 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, terminal, assembly, electrical, protocol, connector
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
		This part of ISO 10303 specifies an application module representation of definition of the information needed to describe the manner by which an electronic assembly shall electrically or functionally interface to the next higher assembly. Constraints on the signals associated with terminals of the mating connector may be specified. Identification of the mating terminals is supported. This module defines the information needed to describe the physical layer of an engineering operational protocol and the mapping of the signals in the protocol definition to a terminal in the usage view of the product.
   </p>
 </purpose>

    <inscope>
        <li>signal names for assembly terminals</li>
        <li>physical layer protocol definition</li>
        <li>external functional view of connector</li>
		<li>items within the scope of Packaged_part_black_box_model_arm;</li>
		<li>items within the scope of Product_view_definition_arm;</li>
		<li>items within the scope of Requirement_assignment_arm;</li>
		<li>items within the scope of Requirement_decomposition_arm;</li>
     </inscope>
    <outscope>
        <li>geometric information for assembly terminals</li>
        <li>assembly design view</li>
    </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Interface_requirement_occurrence" extensible="NO">
            <aimelt xml:space="preserve">requirements_property</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">requirements_property &lt;=
property_definition
{property_definition
property_definition.description = 'interface requirement'}
</refpath>
            <aa attribute="reference_protocol" assertion_to="Protocol_physical_layer_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirements_property &lt;=
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'reference protocol'}
property_definition_relationship.relating_property_definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
protocol_physical_layer_definition
</refpath>
            </aa>
            <aa attribute="interface_to_next_higher_assembly" assertion_to="Next_higher_assembly_interface_requirement">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirements_property &lt;=
property_definition &lt;-
property_definition_relationship.related_property_definition
{property_definition_relationship
property_definition_relationship.name = 'interface to next higher assembly'}
property_definition_relationship.relating_property_definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'design requirement'}
product_definition &lt;-
product_definition_relationship.relating_product_definition
product_definition_relationship
{product_definition_relationship
product_definition_relationship.name = 'higher assembly interface'}
product_definition_relationship.related_product_definition -&gt;
product_definition &lt;-
product_definition_relationship.related_product_definition
product_definition_relationship =&gt;
product_definition_usage =&gt;
assembly_component_usage =&gt;
specified_higher_usage_occurrence
</refpath>
            </aa>
        </ae>
    <ae entity="Protocol_physical_layer_definition" extensible="NO">
            <aimelt xml:space="preserve">protocol_physical_layer_definition</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">protocol_physical_layer_definition&lt;=
product_definition
</refpath>
            <aa attribute="host_rcv_functional_characterization" assertion_to="Functional_specification_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_physical_layer_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'host rcv functional characterization'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
functional_unit =&gt;
functional_specification_definition
</refpath>
            </aa>
            <aa attribute="host_xmt_functional_characterization" assertion_to="Functional_specification_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_physical_layer_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'host xmt functional characterization'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
functional_unit =&gt;
functional_specification_definition
</refpath>
            </aa>
            <aa attribute="media_functional_characterization" assertion_to="Functional_specification_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_physical_layer_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'media functional characterization'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
functional_unit =&gt;
functional_specification_definition
</refpath>
            </aa>
            <aa attribute="host_functional_definition" assertion_to="Functional_unit_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_physical_layer_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'host functional definition'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'functional design usage'}
functional_unit
</refpath>
            </aa>
            <aa attribute="media_functional_definition" assertion_to="Functional_unit_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_physical_layer_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'media functional definition'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'functional design usage'}
functional_unit
</refpath>
            </aa>
            <aa attribute="host_connector" assertion_to="Minimally_defined_connector">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_physical_layer_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'host connector'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
physical_unit =&gt;
packaged_part =&gt;
minimally_defined_connector
</refpath>
            </aa>
            <aa attribute="media_connector" assertion_to="Minimally_defined_connector">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_physical_layer_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'media connector'}
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
physical_unit =&gt;
packaged_part =&gt;
minimally_defined_connector
</refpath>
            </aa>
        </ae>
    <ae entity="Protocol_requirement_allocation_to_part_terminal" extensible="NO">
            <aimelt xml:space="preserve">protocol_requirement_allocation_to_part_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">{[protocol_requirement_allocation_to_part_terminal &lt;=
requirement_assignment]
[protocol_requirement_allocation_to_part_terminal &lt;=
requirement_allocation_group]}
</refpath>
            <aa attribute="protocol_signal" assertion_to="Functional_unit_usage_view_terminal_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_requirement_allocation_to_part_terminal &lt;=
requirement_assignment &lt;=
group &lt;-
applied_group_assignment.assigned_group
applied_group_assignment
{applied_group_assignment.role -&gt; object_role
object_role.name = 'protocol signal'}
applied_group_assignment.items -&gt;
groupable_item = shape_aspect
shape_aspect =&gt;
functional_unit_terminal_definition
</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Part_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">protocol_requirement_allocation_to_part_terminal &lt;=
requirement_assignment &lt;-
requirement_assigned_object.assigned_group
requirement_assigned_object
requirement_assigned_object.items -&gt;
requirement_assigned_item					
requirement_assigned_item = shape_aspect
shape_aspect =&gt;
{(assembly_module_terminal)
(minimally_defined_bare_die_terminal)
(cable_terminal)
(interconnect_module_terminal)
(minimally_defined_bare_die_terminal)
(packaged_part_terminal)}
</refpath>
            </aa>
        </ae>
    <ae entity="Mating_connector_termination" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect
shape_aspect.description = 'mating connector termination'}
</refpath>
            <aa attribute="name">
                <aimelt xml:space="preserve">shape_aspect.name</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve"/>
            </aa>
            <aa attribute="accessed_connector" assertion_to="Mating_connector_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition
product_definition.description = 'mating connector'}
product_definition =&gt;
component_definition
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="mating_connector_definition_select">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated terminal'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
</refpath>
            </aa>
        </ae>
    <ae entity="Minimally_defined_connector" extensible="NO">
            <aimelt xml:space="preserve">minimally_defined_connector</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">minimally_defined_connector &lt;=
packaged_part &lt;=
physical_unit &lt;=
product_definition
</refpath>
            <aa attribute="used_package" assertion_to="Package">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">minimally_defined_connector &lt;=
packaged_part &lt;=
physical_unit &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'used package'}
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage'}
product_definition
</refpath>
            </aa>

        </ae>
    <ae entity="Termination_constraint" extensible="NO">
            <aimelt xml:space="preserve">group_shape_aspect</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">group_shape_aspect &lt;=
shape_aspect
{shape_aspect.description = 'termination constraint'}
{shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition =&gt;
group_product_definition}
</refpath>
            <aa attribute="constrained_termination" assertion_to="Mating_connector_termination">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">group_shape_aspect &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = 'constrained termination member'}
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
{shape_aspect
shape_aspect.description = 'mating connector termination'}
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>     
   </express-g>
 </mim>

</module>
