<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-04-04T09:52:49" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="assembly_module_design_mim schema_instance"/>
   <schema name="Assembly_module_design_mim">
      <interface kind="use" schema="Altered_package_mim"/>
      <interface kind="use" schema="Assembly_module_usage_view_mim"/>
      <interface kind="use" schema="Bare_die_mim"/>
      <interface kind="use" schema="Physical_component_feature_mim"/>
      <entity name="component_mounting_feature" supertypes="physical_component_feature">
         <where label="WR1" expression=" 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'COMPONENT_DEFINITION' IN TYPEOF ( SELF . of_shape . definition ) "/>
         <where label="WR2" expression=" ( SIZEOF ( [ 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'INTER_STRATUM_FEATURE' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROBE_ACCESS_AREA' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'LAND' ] * TYPEOF ( SELF ) ) = 0 ) "/>
         <where label="WR3" expression=" SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | NOT ( SIZEOF ( QUERY ( sr_pdr &lt;* QUERY ( pdr &lt;* USEDIN ( pd , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION' ) | 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'SHAPE_REPRESENTATION' IN TYPEOF ( pdr . used_representation ) ) | sr_pdr . used_representation \ representation . name = 'planar projected shape' ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="WR4" expression=" SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | NOT ( SIZEOF ( QUERY ( sr_pdr &lt;* QUERY ( pdr &lt;* USEDIN ( pd , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION' ) | 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'SHAPE_REPRESENTATION' IN TYPEOF ( pdr . used_representation ) ) | sr_pdr . used_representation \ representation . name = '3d bound volume shape' ) ) &lt;= 1 ) ) ) = 0 "/>
         <where label="WR5" expression=" ( NOT ( SELF \ shape_aspect . description IN [ 'component feature' ] ) ) OR ( SIZEOF ( QUERY ( sar &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'design usage' ) ) &lt;= 1 ) "/>
         <where label="WR6" expression=" SIZEOF ( QUERY ( sar &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'SHAPE_ASPECT_RELATIONSHIP.RELATED_SHAPE_ASPECT' ) | sar \ shape_aspect_relationship . name = 'instantiated feature' ) ) &lt;= 1 "/>
      </entity>
      <entity name="packaged_component" supertypes="assembly_component">
         <where label="WR1" expression=" SIZEOF ( QUERY ( ip &lt;* QUERY ( pdr &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) | pdr \ product_definition_relationship . name = 'instantiated part' ) | ( SIZEOF ( [ 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PACKAGED_PART' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'EXTERNALLY_DEFINED_PACKAGED_PART' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'LIBRARY_DEFINED_PACKAGED_PART' ] * TYPEOF ( ip . relating_product_definition ) ) = 1 ) AND ( ip . relating_product_definition . frame_of_reference . name = 'physical design usage' ) ) ) = 1 "/>
         <where label="WR2" expression=" SIZEOF ( QUERY ( pa &lt;* QUERY ( pdr &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) | pdr \ product_definition_relationship . name = 'package alternate' ) | ( SIZEOF ( [ 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PACKAGE' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'EXTERNALLY_DEFINED_PACKAGE' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'LIBRARY_DEFINED_PACKAGE' ] * TYPEOF ( pa . relating_product_definition ) ) = 1 ) AND ( pa . relating_product_definition \ product_definition . description = 'altered package' ) ) ) &lt;= 1 "/>
         <where label="WR3" expression=" SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | NOT ( SIZEOF ( QUERY ( sa &lt;* USEDIN ( pd , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'SHAPE_ASPECT.OF_SHAPE' ) | ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'COMPONENT_TERMINAL' IN TYPEOF ( sa ) ) AND ( sa \ shape_aspect . description = 'packaged component join terminal' ) ) ) &gt;= 1 ) ) ) = 0 "/>
         <where label="WR4" expression=" ( NOT ( SELF \ product_definition . description = 'packaged connector component' ) ) OR ( SIZEOF ( QUERY ( ip &lt;* QUERY ( pdr &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) | pdr \ product_definition_relationship . name = 'instantiated part' ) | ( SIZEOF ( [ 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PACKAGED_PART' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'EXTERNALLY_DEFINED_PACKAGED_PART' , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'LIBRARY_DEFINED_PACKAGED_PART' ] * TYPEOF ( ip . relating_product_definition ) ) = 1 ) AND ( TRUE ) ) ) = 1 ) "/>
         <where label="WR5" expression=" ( NOT ( SELF \ product_definition . description = 'packaged connector component' ) ) OR ( SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | NOT ( SIZEOF ( QUERY ( sa &lt;* USEDIN ( pd , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'SHAPE_ASPECT.OF_SHAPE' ) | ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'COMPONENT_TERMINAL' IN TYPEOF ( sa ) ) AND ( sa \ shape_aspect . description = 'packaged component join terminal' ) ) ) &gt;= 1 ) ) ) = 0 ) "/>
         <where label="WR6" expression=" ( NOT ( SELF \ product_definition . description = 'routed packaged component' ) ) OR ( SIZEOF ( QUERY ( pd &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | NOT ( SIZEOF ( QUERY ( sa &lt;* USEDIN ( pd , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'SHAPE_ASPECT.OF_SHAPE' ) | SIZEOF ( QUERY ( pd &lt;* USEDIN ( sa , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION.DEFINITION' ) | SIZEOF ( USEDIN ( pd , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION' ) ) = 1 ) ) = 1 ) ) = 1 ) ) ) = 0 ) "/>
      </entity>
      <entity name="routed_physical_component" supertypes="assembly_component">
         <where label="WR1" expression=" SIZEOF ( QUERY ( ip &lt;* QUERY ( pdr &lt;* USEDIN ( SELF , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION' ) | pdr \ product_definition_relationship . name = 'instantiated part' ) | ( SIZEOF ( [ 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'PHYSICAL_UNIT' ] * TYPEOF ( ip . relating_product_definition ) ) = 1 ) AND ( ip . relating_product_definition . frame_of_reference . name = 'physical design usage' ) ) ) = 1 "/>
         <where label="WR2" expression=" SELF \ product_definition . description :&lt;&gt;: 'laminate component' "/>
      </entity>
      <rule name="component_external_reference_constraint" appliesto="representation">
         <where label="WR1" expression=" SIZEOF ( QUERY ( rep &lt;* representation | ( rep \ representation . name = 'component external reference' ) AND ( SIZEOF ( QUERY ( dri &lt;* rep . items | NOT ( ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF ( dri ) ) AND ( dri \ representation_item . name = 'design owner' ) ) ) ) = 1 ) ) ) = 0 "/>
         <where label="WR2" expression=" SIZEOF ( QUERY ( rep &lt;* representation | ( rep \ representation . name = 'component external reference' ) AND ( SIZEOF ( QUERY ( dri &lt;* rep . items | NOT ( ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF ( dri ) ) AND ( dri \ representation_item . name = 'part number' ) ) ) ) = 1 ) ) ) = 0 "/>
         <where label="WR3" expression=" SIZEOF ( QUERY ( rep &lt;* representation | ( rep \ representation . name = 'component external reference' ) AND ( SIZEOF ( QUERY ( dri &lt;* rep . items | NOT ( ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF ( dri ) ) AND ( dri \ representation_item . name = 'revision code' ) ) ) ) = 1 ) ) ) = 0 "/>
         <where label="WR4" expression=" SIZEOF ( QUERY ( rep &lt;* representation | ( rep \ representation . name = 'component external reference' ) AND ( SIZEOF ( QUERY ( dri &lt;* rep . items | NOT ( ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF ( dri ) ) AND ( dri \ representation_item . name = 'product definition id' ) ) ) ) = 1 ) ) ) = 0 "/>
         <where label="WR5" expression=" SIZEOF ( QUERY ( rep &lt;* representation | ( rep \ representation . name = 'component external reference' ) AND ( SIZEOF ( QUERY ( dri &lt;* rep . items | NOT ( ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF ( dri ) ) AND ( dri \ representation_item . name = 'reference designation' ) ) ) ) = 1 ) ) ) = 0 "/>
      </rule>
      <rule name="component_feature_external_reference_unique_constraint" appliesto="descriptive_representation_item">
         <algorithm> LOCAL cfer : BAG OF descriptive_representation_item := QUERY ( dri &lt;* descriptive_representation_item | ( dri \ representation_item . name = 'component feature external reference' ) ) ; desc_bag : BAG OF STRING := [ ] ; dri_bag : BAG OF descriptive_representation_item ; rep_bag : BAG OF representation ; pass : BOOLEAN := TRUE ; r_bag : BAG OF representation ; END_LOCAL ; REPEAT i := 1 to SIZEOF ( cfer ) by 1 ; IF EXISTS ( cfer [ i ] \ descriptive_representation_item . description ) THEN IF ( NOT ( cfer [ i ] \ descriptive_representation_item . description IN desc_bag ) ) THEN desc_bag := desc_bag + cfer [ i ] \ descriptive_representation_item . description ; END_IF ; END_IF ; END_REPEAT ; REPEAT i := 1 to SIZEOF ( desc_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; r_bag := [ ] ; dri_bag := QUERY ( dri &lt;* cfer | ( dri \ descriptive_representation_item . description = desc_bag [ i ] ) ) ; REPEAT j := 1 to SIZEOF ( dri_bag ) by 1 ; IF ( NOT pass ) THEN ESCAPE ; END_IF ; rep_bag := QUERY ( r &lt;* USEDIN ( dri_bag [ j ] , 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'REPRESENTATION.ITEMS' ) | ( r \ representation . name = 'component external reference' ) ) ; REPEAT k := 1 to SIZEOF ( rep_bag ) by 1 ; IF EXISTS ( rep_bag [ k ] ) THEN IF ( rep_bag [ k ] IN r_bag ) THEN pass := FALSE ; ESCAPE ; ELSE r_bag := r_bag + rep_bag [ k ] ; END_IF ; END_IF ; END_REPEAT ; END_REPEAT ; END_REPEAT ; </algorithm>
         <where label="WR1" expression=" pass "/>
      </rule>
      <rule name="component_mounting_clearance_relationship_constraint" appliesto="representation">
         <where label="WR1" expression=" SIZEOF ( QUERY ( rep &lt;* representation | ( rep \ representation . name = 'mounting clearance' ) AND ( SIZEOF ( QUERY ( lmwu &lt;* rep . items | ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF ( lmwu ) ) AND ( lmwu \ representation_item . name = 'minimum height' ) ) ) = 0 ) ) ) = 0 "/>
      </rule>
      <rule name="component_overlap_relationship_constraint" appliesto="representation">
         <where label="WR1" expression=" SIZEOF ( QUERY ( rep &lt;* representation | ( rep \ representation . name = 'overlap clearance' ) AND ( SIZEOF ( QUERY ( lmwu &lt;* rep . items | ( 'ASSEMBLY_MODULE_DESIGN_MIM.' + 'LENGTH_MEASURE_WITH_UNIT' IN TYPEOF ( lmwu ) ) AND ( lmwu \ representation_item . name = 'minimum clearance' ) ) ) = 0 ) ) ) = 0 "/>
      </rule>
   </schema>
</express>
