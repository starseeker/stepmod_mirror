<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.7 2005/01/04 16:22:15 thomasrthurman Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="assembly_module_macro_definition" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/01/04 16:22:15 $" rcs.revision="$Revision: 1.7 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, assembly macro definition, interconnect macro definition, electrical, electronic, macro, terminal
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of predefined subsets of a design for reuse functionality.  The assembly macro definition is supported by an equivalent capability in the context of interconnect substrate design reuse.  The expected usage of this capability is only in the context of library stored design data and in design system to design system data sharing and exchange. A macro is not intended to be a completed design.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>assembly design;</li>
   <li>interconnect design;</li>
		<li>items within the scope of Assembly_module_design_arm;</li>
		<li>items within the scope of Interconnect_module_with_macros_arm.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>assembly usage view</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Component_terminal_to_assembly_module_join_terminal_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
[shape_aspect_relationship.name = 'component feature to physical usage assignment']
[shape_aspect_relationship.description = 'component terminal to assembly module join terminal assignment']}
</refpath>
            <aa attribute="assigned_terminal" assertion_to="Assembly_module_macro_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'assembly module component terminal'}
shape_aspect =&gt;
component_terminal =&gt;
assembly_module_macro_component_join_terminal
</refpath>
            </aa>
            <aa attribute="usage_view_terminal" assertion_to="Assembly_module_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition
product_definition.name = 'assembly module'}
shape_aspect =&gt;
assembly_module_terminal =&gt;
assembly_module_join_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Interconnect_module_macro_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'interconnect module component terminal'}
shape_aspect =&gt;
component_terminal =&gt;
interconnect_module_macro_component_join_terminal
</refpath>
            </aa>
        </ae>
    <ae entity="Assembly_module_join_terminal" extensible="NO">
            <aimelt xml:space="preserve">assembly_module_join_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">assembly_module_join_terminal &lt;=
assembly_module_terminal &lt;=
shape_aspect
</refpath>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
