<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.11 2015/09/29 18:15:51 kevletu Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="assembly_module_with_packaged_component"
   name.french="Module d'assemblage avec composant emball&#233;"
   part="1829"
   version="1"
   sc4.working_group="12"
   wg.number="9471"
   wg.number.arm="9522"
   wg.number.mim="9523"
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="TS"
   language="E"
   publication.year="2017-05"
   publication.date="2017-05-15"
   published="y"
   rcs.date="$Date: 2015/09/29 18:15:51 $"
   rcs.revision="$Revision: 1.11 $"
   development.folder="dvlp">

 <keywords>
    module, package, part, component, assembly
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope 
 <abstract>
    <li>xxxxx</li>
 </abstract> -->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap242ed2.projlead"/>
   <editor ref="ap242.editor"/>
 </contacts>

 <!-- Change history -->
 <!-- If the module is not a first edition, then document the change history -->
 <!-- If the module is a first edition, then comment out this section -->
 
 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
		This part of ISO 10303 specifies an application module for the

		representation of the information needed to describe the physical view of the components in an assembly 
		and the physical relationship between the components and the assembly. 
		This module defines the information needed to describe the different features of components and the relationship between component features in an assembly. 
		The module defines the information needed to describe the materials used in an assembly that physically support components. 
		Analysis data extraction is supported to allow verification of physical connectivity implementation.

		This module includes information to support exchange of assembly definitions that include instantiation of packed parts in the assembly.
  </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>electrical components and electrical component terminals;</li>
   <li>library based functional and physical representation of electrical components;</li>
   <li>items within the scope of application module <module_ref linkend="altered_package:1_scope">Altered package</module_ref>, ISO/TS 10303-1601;</li>
   <li>items within the scope of application module <module_ref linkend="assembly_module_design:1_scope">Assembly module design</module_ref>, ISO/TS 10303-1636;</li>
   <li>items within the scope of application module <module_ref linkend="packaged_part_black_box_model:1_scope">Packaged part black box model</module_ref>, ISO/TS 10303-1710.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope> -->

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>

    <ae entity="Packaged_component" extensible="NO">
            <aimelt xml:space="preserve">packaged_component</aimelt>
            <source xml:space="preserve">ISO 10303-1636</source>
            <refpath xml:space="preserve">packaged_component &lt;=
physical_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition
</refpath>
            <aa attribute="derived_from" assertion_to="Packaged_part">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_component &lt;=
physical_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
physical_unit =&gt;
packaged_part
</refpath>
            </aa>
            <aa attribute="selected_package_alternate" assertion_to="Altered_package">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">packaged_component &lt;=
physical_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'package alternate'}
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
{product_definition
product_definition.description = 'altered package'}
product_definition =&gt;
physical_unit =&gt;
package
</refpath>
            </aa>
        </ae>

    <ae entity="Packaged_component_join_terminal" extensible="NO">
            <aimelt xml:space="preserve">physical_component_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-1721</source>
            <refpath xml:space="preserve">physical_component_terminal &lt;=
component_terminal &lt;=
component_feature &lt;=
shape_aspect
{shape_aspect
[(shape_aspect.description = 'packaged component join terminal')
(shape_aspect.description = 'movable packaged component join terminal')]
[shape_aspect.product_definitional = .TRUE.]}
</refpath>
            <aa attribute="associated_definition" assertion_to="Packaged_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">physical_component_terminal &lt;=
component_terminal &lt;=
component_feature &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
assembly_component =&gt;
physical_component =&gt;
packaged_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Packaged_part_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">physical_component_terminal &lt;=
component_terminal &lt;=
component_feature &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'join terminal'}
shape_aspect =&gt;
packaged_part_terminal
</refpath>
            </aa>
        </ae>

 </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>


 <!-- Clause 6 Module reference data -->
<!--
 <refdata>
   <refdata_subclause title='Classifications of x'>
   </refdata_subclause>
 </refdata>
-->

</module>
