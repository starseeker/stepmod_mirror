<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.35 2007/11/15 12:41:14 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="assembly_module_with_subassembly" 
	name.french="Module d'assemblage avec sous assemblage"
	part="1641" version="1" sc4.working_group="12" 
	wg.number="5589" 
	wg.number.arm="5590" 
	wg.number.mim="5591" 
	wg.number.supersedes="3869" 
	wg.number.arm.supersedes="3870" 
	wg.number.mim.supersedes="3871" 
	checklist.internal_review="5550" 
	checklist.project_leader="5551" 
	checklist.convener="5552" 
	status="TS" language="E" 
	publication.year="2006" 
	publication.date="2006-12-14" 
	published="y" rcs.date="$Date: 2007/11/15 12:41:14 $" rcs.revision="$Revision: 1.35 $" development.folder="dvlp">

 <keywords>
    module, electrical, electromechanical, assembly design, layered interconnect product, layered electrical product, electronic, physical design, design reuse, requirements traceability, shape, configuration management, design change management, subassembly
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of definition of the information needed to describe the components in an assembly and the physical relationship between the components and the assembly. This module defines the information needed to describe the different features of components and the relationship between component features in an assembly. The module defines the information needed to describe the materials used in an assembly that physically support components. Analysis data extraction is supported to allow verification of physical connectivity implementation.  This module includes information to support exchange of assembly definitions that include explicit representation of subassemblies in the assembly.
   </p>
 </purpose>

 <!-- Items in scope -->
     <inscope>
      <li>assembly physical design;</li>
      <li>detailed specification of joined features of components in the design;</li>
      <li>detailed traceability of design requirements;</li>
      <li>as designed implementation of connection requirement;</li>
      <li>shape of assembly design;</li>
      <li>configuration management of assembly design;</li>
      <li>in-process change management of assembly design;</li>
      <li>assemblies used as components in the assembly;</li>
      <li>items within the scope of application module <module_ref linkend="assembly_module_design:1_scope">Assembly module design</module_ref>, ISO/TS 10303-1636.</li>
   </inscope>
    <outscope>
        <li>functional representation of assembly design;</li>
        <li>interconnect design.</li>
    </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Assembly_module_component" extensible="NO">
            <aimelt xml:space="preserve">assembly_module_component</aimelt>
            <source xml:space="preserve">ISO 10303-1641</source>
            <refpath xml:space="preserve">assembly_module_component &lt;=
physical_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition
</refpath>
            <aa attribute="derived_from" assertion_to="Assembly_module_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_module_component &lt;=
physical_component &lt;=
assembly_component &lt;=
component_definition &lt;=
product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'definition usage'}
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
product_definition =&gt;
physical_unit
</refpath>
            </aa>
        </ae>
    <ae entity="Assembly_module_component_terminal" extensible="NO">
            <aimelt xml:space="preserve">physical_component_terminal</aimelt>
            <source xml:space="preserve">ISO 10303-1721</source>
            <refpath xml:space="preserve"> physical_component_terminal &lt;=
component_terminal &lt;=
component_feature &lt;=
shape_aspect
{shape_aspect
[shape_aspect.description = 'assembly module component terminal']
[shape_aspect.product_definitional = .TRUE.]}
</refpath>
            <aa attribute="associated_component" assertion_to="Assembly_module_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">physical_component_terminal &lt;=
component_terminal &lt;=
component_feature &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape =&gt;
assembly_component =&gt;
physical_component =&gt;
assembly_module_component
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="Assembly_module_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">physical_component_terminal &lt;=
component_terminal &lt;=
component_feature &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
{property_definition.name = 'assembly module'}}
shape_aspect =&gt;
assembly_module_terminal
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
  <shortnames>
		<shortname name="ASMDCM" entity="assembly_module_component"/>	
   </shortnames>         
 </mim>
</module>
