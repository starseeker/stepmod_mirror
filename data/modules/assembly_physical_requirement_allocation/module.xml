<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.31 2005/04/12 09:27:42 liutkus Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="assembly_physical_requirement_allocation" part="1648" version="1" sc4.working_group="12" wg.number="3308" wg.number.arm="3309" wg.number.mim="3310" checklist.internal_review="3675" checklist.project_leader="3676" checklist.convener="3677" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/04/12 09:27:42 $" rcs.revision="$Revision: 1.31 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module, detailed physical requirement, assembly design, requirement allocation, electrical, connector placement, configuration management, change management, electromagnetic, thermal, separation, shield
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the assignment of customer, regulatory agency, and enterprise requirements to an assembly under design. These requirements may be assigned to physical items or geometric features that are used in various phases of the design process.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>thermal requirement allocation;</li>
   <li>electromagnetic requirement allocation;</li>
   <li>requirement allocation to components in a design;</li>
   <li>mating requirement to a connector in a design;</li>
		<li>items within the scope of application module <module_ref linkend="assembly_physical_interface_requirement:1_scope">Assembly physical interface requirement</module_ref>, ISO/CD-TS 10303-1647;</li>
		<li>items within the scope of application module <module_ref linkend="assembly_technology:1_scope">Assembly technology</module_ref>, ISO/CD-TS 10303-1649;</li>
		<li>items within the scope of application module <module_ref linkend="shield:1_scope">Shield</module_ref>, ISO/CD-TS 10303-1744.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>assembly design.</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
 <ae entity="Assembly_requirement_allocation" extensible="NO">
            <aimelt xml:space="preserve">requirement_assignment</aimelt>
            <source xml:space="preserve">ISO 10303-41 41</source>
            <refpath xml:space="preserve">requirement_assignment &lt;=
characterized_object				
{characterized_object.name = 'assembly requirement allocation'}
</refpath>
            <aa attribute="assigned_to" assertion_to="component_or_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">
requirement_assignment &lt;-
requirement_assigned_object.assigned_group
requirement_assigned_object
requirement_assigned_object.items -&gt;
requirement_assigned_item					
(requirement_assigned_item = product_definition =&gt;
component_definition)
(requirement_assigned_item = shape_aspect)
</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Assembly_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">
requirement_assignment &lt;-
requirement_assigned_object.assigned_group
requirement_assigned_object
requirement_assigned_object.items -&gt;
requirement_assigned_item = product_definition =&gt;
component_definition =&gt; assembly_component
</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Assembly_joint">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">
requirement_assignment &lt;-
requirement_assigned_object.assigned_group
requirement_assigned_object
requirement_assigned_object.items -&gt;
requirement_assigned_item = shape_aspect 
shape_aspect =&gt; assembly_joint
</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">
requirement_assignment &lt;-
requirement_assigned_object.assigned_group
requirement_assigned_object
requirement_assigned_object.items -&gt;
requirement_assigned_item					
(requirement_assigned_item = product_definition =&gt;
component_definition)
(requirement_assigned_item = shape_aspect =&gt; component_feature)
</refpath>
            </aa>						
        </ae>
    <ae entity="Assembly_separation_requirement_allocation" extensible="NO">
            <aimelt xml:space="preserve">requirement_assignment</aimelt>
            <source xml:space="preserve">ISO 10303-41 41</source>
            <refpath xml:space="preserve">requirement_assignment &lt;=
characterized_object				
{[characterized_object.name = 'assembly requirement allocation']
[characterized_object.description = 'assembly separation requirement']}
</refpath>
            <aa attribute="disjoint_assignment" assertion_to="component_or_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirement_assignment &lt;=
group &lt;-
applied_group_assignment.assigned_group
applied_group_assignment
{applied_group_assignment.role -&gt; object_role
object_role.name = 'disjoint assignment'}
applied_group_assignment.items -&gt;
groupable_item
(groupable_item = product_definition
product_definition =&gt;
component_definition)
(groupable_item = shape_aspect
shape_aspect)
</refpath>
            </aa>
            <aa attribute="disjoint_assignment" assertion_to="Assembly_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirement_assignment &lt;=
group &lt;-
applied_group_assignment.assigned_group
applied_group_assignment
{applied_group_assignment.role -&gt; object_role
object_role.name = 'disjoint assignment'}
applied_group_assignment.items -&gt;
groupable_item
groupable_item = product_definition
product_definition =&gt;
component_definition=&gt; assembly_component
</refpath>
            </aa>
            <aa attribute="disjoint_assignment" assertion_to="Assembly_joint">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirement_assignment &lt;=
group &lt;-
applied_group_assignment.assigned_group
applied_group_assignment
{applied_group_assignment.role -&gt; object_role
object_role.name = 'disjoint assignment'}
applied_group_assignment.items -&gt;
groupable_item
(groupable_item = product_definition
product_definition =&gt;
component_definition)
(groupable_item = shape_aspect
shape_aspect =&gt; assembly_joint)
</refpath>
            </aa>
            <aa attribute="disjoint_assignment" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">requirement_assignment &lt;=
group &lt;-
applied_group_assignment.assigned_group
applied_group_assignment
{applied_group_assignment.role -&gt; object_role
object_role.name = 'disjoint assignment'}
applied_group_assignment.items -&gt;
groupable_item
(groupable_item = product_definition
product_definition =&gt;
component_definition)
(groupable_item = shape_aspect
shape_aspect =&gt; component_feature)
</refpath>
            </aa>
			
        </ae>
    <ae entity="Electromagnetic_compatibility_requirement_allocation" extensible="NO">
            <aimelt xml:space="preserve">electromagnetic_compatibility_requirement_allocation</aimelt>
            <source xml:space="preserve">ISO 10303-1648</source>
            <refpath xml:space="preserve">{electromagnetic_compatibility_requirement_allocation &lt;=
requirement_assignment &lt;=
characterized_object
{characterized_object.name = 'assembly requirement allocation'}}
</refpath>
        </ae>
    <ae entity="Interface_component_allocation" extensible="NO">
            <aimelt xml:space="preserve">product_definition_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{product_definition_relationship
product_definition_relationship.name = 'interface component allocation'}
</refpath>
            <aa attribute="mating_solution" assertion_to="Interface_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.related_product_definition -&gt;
product_definition
{product_definition
[product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
interface_component_definition]
[product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical occurrence']}
{product_definition &lt;-
product_definition_relationship.related_product_definition
{product_definition_relationship
product_definition_relationship.name = 'instantiated part'}
product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
[product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = 'physical design usage']
[product_definition =&gt;
physical_unit]}
</refpath>
            </aa>
            <aa attribute="mating_requirement" assertion_to="Mating_connector_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">product_definition_relationship
product_definition_relationship.relating_product_definition -&gt;
{product_definition
product_definition.description = 'mating connector'}
product_definition =&gt;
component_definition
</refpath>
            </aa>
        </ae>
    <ae entity="Shield_allocation" extensible="NO">
            <aimelt xml:space="preserve">shield_allocation</aimelt>
            <source xml:space="preserve">ISO 10303-1648</source>
            <refpath xml:space="preserve">shield_allocation &lt;=
electromagnetic_compatibility_requirement_allocation
</refpath>
            <aa attribute="assigned_to" assertion_to="shield">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shield_allocation &lt;=
electromagnetic_compatibility_requirement_allocation &lt;=
requirement_assignment &lt;-
requirement_assigned_object.assigned_group
requirement_assigned_object
requirement_assigned_object.items -&gt;
requirement_assigned_item
(requirement_assigned_item = product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
discrete_shield)
(requirement_assigned_item = product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
integral_shield)
</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Routed_shield">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shield_allocation &lt;=
				electromagnetic_compatibility_requirement_allocation &lt;=
				requirement_assignment &lt;-
				requirement_assigned_object.assigned_group
				requirement_assigned_object
				requirement_assigned_object.items -&gt;
				requirement_assigned_item
				requirement_assigned_item = product_definition =&gt;
				component_definition =&gt;
				assembly_component =&gt;
				printed_component =&gt;
				routed_printed_component =&gt;
				routed_shield
				</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Integral_shield">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shield_allocation &lt;=
				electromagnetic_compatibility_requirement_allocation &lt;=
				requirement_assignment &lt;-
				requirement_assigned_object.assigned_group
				requirement_assigned_object
				requirement_assigned_object.items -&gt;
				requirement_assigned_item
				requirement_assigned_item = product_definition =&gt;
				component_definition =&gt;
				assembly_component =&gt;
				integral_shield
				</refpath>
            </aa>
            <aa attribute="assigned_to" assertion_to="Physical_shield">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shield_allocation &lt;=
				electromagnetic_compatibility_requirement_allocation &lt;=
				requirement_assignment &lt;-
				requirement_assigned_object.assigned_group
				requirement_assigned_object
				requirement_assigned_object.items -&gt;
				requirement_assigned_item
				requirement_assigned_item = product_definition =&gt;
				component_definition =&gt;
				assembly_component =&gt;
				discrete_shield
				</refpath>
            </aa>
        </ae>
    <ae entity="Thermal_requirement_allocation" extensible="NO">
            <aimelt xml:space="preserve">thermal_requirement_allocation</aimelt>
            <source xml:space="preserve">ISO 10303-1648</source>
            <refpath xml:space="preserve">thermal_requirement_allocation &lt;=
requirement_assignment &lt;=
characterized_object
{characterized_object
characterized_object.name = 'assembly requirement allocation'}
</refpath>
            <aa attribute="assigned_to" assertion_to="Thermal_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">thermal_requirement_allocation &lt;=
requirement_assignment &lt;-
requirement_assigned_object.assigned_group
requirement_assigned_object
requirement_assigned_object.items -&gt;
requirement_assigned_item
requirement_assigned_item = product_definition
{product_definition
product_definition.description = 'thermal component'}
product_definition =&gt;
component_definition =&gt;
assembly_component =&gt;
thermal_component
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>          
   </express-g>
   <shortnames>
   	<shortname name="ECRA" entity="electromagnetic_compatibility_requirement_allocation"/>
   	<shortname name="SHLALL" entity="shield_allocation"/>   	
   	<shortname name="THRQAL" entity="thermal_requirement_allocation"/>   	   	
   </shortnames>                           
 </mim>

</module>

