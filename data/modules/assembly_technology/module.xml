<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.2 2004/11/26 18:25:15 budreckytej Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="assembly_technology" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2004/11/26 18:25:15 $" rcs.revision="$Revision: 1.2 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 <abstract>
    <li>xxxxx</li>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the information needed to describe the different aspects of  how components are joined together to make an assembly.  This module defines the information needed to describe the material used in making the physical connections and their typical shape.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>xxxxx</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>xxxx</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae original_module="Assembly_technology" entity="Connection_zone_based_assembly_joint" extensible="NO">
            <aimelt xml:space="preserve">connection_zone_based_assembly_joint</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">connection_zone_based_assembly_joint&lt;=
assembly_joint &lt;=
shape_aspect
</refpath>
            <aa attribute="zone_1" assertion_to="Connection_zone">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">connection_zone_based_assembly_joint &lt;=
assembly_joint &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `zone 1'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect.description = `connection zone'}
</refpath>
            </aa>
            <aa attribute="zone_2" assertion_to="Connection_zone">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">connection_zone_based_assembly_joint &lt;=
assembly_joint &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `zone 2'}
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{shape_aspect.description = `connection zone'}
</refpath>
            </aa>
        </ae>
    <ae original_module="Assembly_technology" entity="Component_mating_constraint_condition" extensible="NO">
            <aimelt xml:space="preserve">component_mating_constraint_condition</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">component_mating_constraint_condition &lt;=
shape_aspect
</refpath>
            <aa attribute="constrained_degree_of_freedom">
                <aimelt xml:space="preserve">representation_item.name</aimelt>
                <source xml:space="preserve">ISO 10303-43</source>
                <refpath xml:space="preserve">component_mating_constraint_condition &lt;=
shape_aspect
shape_definition = shape_aspect
shape_definition
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
{property_definition_representation
property_definition_representation.description = `constrained degrees of freedom'}
property_definition_representation.used_representation -&gt;
representation 
{representation
representation.name = `degrees of freedom'}
representation.items[i] -&gt;
{(representation_item.name = `x')
(representation_item.name = `y')
(representation_item.name = `z')
(representation_item.name = `u')
(representation_item.name = `v')
(representation_item.name = `w')}
</refpath>
            </aa>
            <aa attribute="name">
                <aimelt xml:space="preserve">shape_aspect.name</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">component_mating_constraint_condition &lt;=
shape_aspect
shape_aspect.name
</refpath>
            </aa>
            <aa attribute="constraining_joint" assertion_to="Assembly_joint">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_mating_constraint_condition &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name = `constraining_joint'}
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
assembly_joint
</refpath>
            </aa>
            <aa attribute="of_context" assertion_to="Part_design_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_mating_constraint_condition &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
{product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = `physical design'}
physical_unit
</refpath>
            </aa>
        </ae>
    <ae original_module="Assembly_technology" entity="Assembly_bond_definition" extensible="NO">
            <aimelt xml:space="preserve">assembly_bond_definition</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">assembly_bond_definition &lt;=
shape_aspect
{shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition = characterized_product_definition
characterized_product_definition = product_definition
product_definition.name = `assembly bond model'}
</refpath>
            <aa attribute="name">
                <aimelt xml:space="preserve">shape_aspect.name</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">assembly_bond_definition &lt;=
shape_aspect
shape_aspect.name
</refpath>
            </aa>
            <aa attribute="analytical_assembly_bond_representation" assertion_to="Analytical_model_application">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_bond_definition &lt;=
shape_aspect
shape_definition = shape_aspect
shape_definition
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation =&gt;
analytical_representation
</refpath>
            </aa>
            <aa attribute="associated_definition" assertion_to="Externally_defined_ee_product_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_bond_definition &lt;=
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition.definition -&gt;
characterized_definition = characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
externally_defined_product_definition
</refpath>
            </aa>
            <aa attribute="bond_material" assertion_to="Material_identification">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_bond_definition &lt;=
shape_aspect
shape_definition = shape_aspect
shape_definition
characterized_definition = shape_definition
characterized_definition &lt;-
material_designation.definitions[i]
material_designation
</refpath>
            </aa>
            <aa attribute="bond_category" assertion_to="External_item_identification">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_bond_definition
group_assigned_item = assembly_bond_definition
group_assigned_item &lt;-
applied_group_assignment.items[i]
applied_group_assignment &lt;=
group_assignment
group_assignment.assigned_group -&gt;
group =&gt;
bond_category
</refpath>
            </aa>
            <aa attribute="bonded_feature_1" assertion_to="Part_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_bond_definition &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `bonded feature 1'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = `part group feature'])
(shape_aspect.description = `part generic feature')
(shape_aspect.description = `polarity indication feature')
(shape_aspect.description = `interconnect module cavity surface')
(shape_aspect.description = `interconnect module cutout surface')
(shape_aspect.description = `interconnect module edge segment surface')
(shape_aspect.description = `interconnect module edge surface')
(shape_aspect.description = `interconnect module primary surface')
(shape_aspect.description = `interconnect module secondary surface')
(shape_aspect.description = `interconnect module surface feature')
(shape_aspect =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
secondary_orientation_feature)
(shape_aspect =&gt; 
package_body)
(shape_aspect =&gt; 
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt; 
thermal_feature)
(shape_aspect =&gt; 
part_mounting_feature)
(shape_aspect =&gt; 
package_terminal)
(shape_aspect =&gt; 
assembly_module_terminal)
(shape_aspect =&gt; 
interconnect_module_terminal)
(shape_aspect =&gt; 
minimally_defined_bare_die_terminal)
(shape_aspect =&gt; 
packaged_part_terminal)
(shape_aspect =&gt; 
package_body_surface)}
</refpath>
            </aa>
            <aa attribute="bonded_feature_2" assertion_to="Part_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_bond_definition &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `bonded feature 2'}
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = `part group feature'])
(shape_aspect.description = `part generic feature')
(shape_aspect.description = `polarity indication feature')
(shape_aspect.description = `interconnect module cavity surface')
(shape_aspect.description = `interconnect module cutout surface')
(shape_aspect.description = `interconnect module edge segment surface')
(shape_aspect.description = `interconnect module edge surface')
(shape_aspect.description = `interconnect module primary surface')
(shape_aspect.description = `interconnect module secondary surface')
(shape_aspect.description = `interconnect module surface feature')
(shape_aspect =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
secondary_orientation_feature)
(shape_aspect =&gt; 
package_body)
(shape_aspect =&gt; 
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt; 
thermal_feature)
(shape_aspect =&gt; 
part_mounting_feature)
(shape_aspect =&gt; 
package_terminal)
(shape_aspect =&gt; 
assembly_module_terminal)
(shape_aspect =&gt; 
interconnect_module_terminal)
(shape_aspect =&gt; 
minimally_defined_bare_die_terminal)
(shape_aspect =&gt; 
packaged_part_terminal)
(shape_aspect =&gt; 
package_body_surface)}
</refpath>
            </aa>
        </ae>
    <ae original_module="Assembly_technology" entity="Assembled_with_bonding" extensible="NO">
            <aimelt xml:space="preserve">assembly_joint</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">[assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.name = `assembled with bonding']
[shape_aspect]
</refpath>
            <aa attribute="default_bond_definition" assertion_to="Assembly_bond_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `default definition usage'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
assembly_bond_definition
</refpath>
            </aa>
        </ae>
    <ae original_module="Assembly_technology" entity="Assembled_with_fasteners" extensible="NO">
            <aimelt xml:space="preserve">assembly_joint</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">assembly_joint &lt;=
[shape_aspect_relationship
shape_aspect_relationship.name = `assembled with fasteners']
[shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
assembly_group_component_definition]
</refpath>
            <aa attribute="associated_assembly" assertion_to="Assembly_group_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
assembly_group_component_definition
</refpath>
            </aa>
        </ae>
    <ae original_module="Assembly_technology" entity="Assembly_joint" extensible="NO">
            <aimelt xml:space="preserve">assembly_joint</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">assembly_joint &lt;= 
[shape_aspect_relationship] 
[shape_aspect]
; 
description
shape_aspect_relationship.description
41
assembly_joint &lt;= 
shape_aspect_relationship
shape_aspect_relationship.description
</refpath>
            <aa attribute="name">
                <aimelt xml:space="preserve">shape_aspect.name</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect
shape_aspect.name
</refpath>
            </aa>
            <aa attribute="associated_assembly" assertion_to="Assembly_group_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
assembly_group_component_definition
</refpath>
            </aa>
            <aa attribute="associated_assembly" assertion_to="Assembly_module">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition.definition -&gt;
characterized_definition = characterized_product_definition
characterized_product_definition = product_definition
product_definition
{product_definition.name = `assembly module'}
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Assembly_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `assembly module component terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Assembly_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `assembly module component terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Bare_die_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `bare die component terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Bare_die_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `bare die component terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Component_mounting_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_mounting_feature
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Component_mounting_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
component_mounting_feature
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Interconnect_component_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `interconnect component interface terminal'}
shape_aspect =&gt;
component_interface_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Interconnect_component_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `interconnect component interface terminal'}
shape_aspect =&gt;
component_interface_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Interconnect_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `interconnect component join terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Interconnect_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `interconnect component join terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Interconnect_module_component_surface_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
interconnect_module_component_surface_feature
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Interconnect_module_component_surface_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
interconnect_module_component_surface_feature
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Interconnect_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `interconnect module component terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Interconnect_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `interconnect module component terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Package_terminal_occurrence">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `package terminal occurrence'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Package_terminal_occurrence">

                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `package terminal occurrence'}
shape_aspect =&gt;
component_terminal




</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Packaged_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `packaged component join terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Packaged_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `packaged component join terminal'}
shape_aspect =&gt;
component_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_1" assertion_to="Packaged_connector_component_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `packaged connector component interface terminal'}
shape_aspect =&gt;
component_interface_terminal
</refpath>
            </aa>
            <aa attribute="assembly_features_2" assertion_to="Packaged_connector_component_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">assembly_joint &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = `packaged connector component interface terminal'}
shape_aspect =&gt;
component_interface_terminal
</refpath>
            </aa>
        </ae>
    <ae original_module="Assembly_technology" entity="Assembly_technology_specification" extensible="NO">
            <aimelt xml:space="preserve">ee_specification</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">ee_specification &lt;=
document
{document
document.kind -&gt;
document_type
document_type.product_data_type = `assembly technology specification'}
</refpath>
        </ae>
    <ae original_module="Assembly_technology" entity="Default_assembly_bond_shape" extensible="NO">
            <aimelt xml:space="preserve">shape_representation</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">shape_representation &lt;=
representation
{representation.description = `default assembly bond shape'}
</refpath>
            <aa attribute="characterized_bond_definition" assertion_to="Assembly_bond_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_representation &lt;=
representation &lt;-
property_definition_representation.used_representation
property_definition_representation
property_definition_representation.definition -&gt;
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = shape_definition
shape_definition
shape_definition = shape_aspect
shape_aspect =&gt;
assembly_bond_definition
</refpath>
            </aa>
        </ae>
    <ae original_module="Assembly_technology" entity="Reference_packaged_part_assembly_implementation" extensible="NO">
            <aimelt xml:space="preserve">reference_packaged_part_assembly_implementation</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">reference_packaged_part_assembly_implementation &lt;=
physical_unit &lt;=
product_definition
{[product_definition
product_definition.formation -&gt;
product_definition_formation
product_definition_formation.of_product -&gt;
product &lt;-
product_related_product_category.products[i]
product_related_product_category &lt;=
product_category
product_category.name = `template model']
[product_definition
product_definition.name = `assembly module']
[product_definition
product_definition.frame_of_reference -&gt;
product_definition_context &lt;=
application_context_element
application_context_element.name = `layout design usage']}
</refpath>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
