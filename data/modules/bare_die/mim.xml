<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:55:28" rcs.revision="1.0" description.file="mim_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="bare_die_mim schema_instance"/>
   <schema name="BARE_DIE_MIM">
      <interface kind="use" schema="CONDUCTIVITY_MATERIAL_ASPECTS_MIM"/>
      <interface kind="use" schema="ELEMENTAL_GEOMETRIC_SHAPE_MIM"/>
      <interface kind="use" schema="EXTENDED_GEOMETRIC_TOLERANCE_MIM"/>
      <interface kind="use" schema="FUNCTIONAL_ASSIGNMENT_TO_PART_MIM"/>
      <interface kind="use" schema="NETWORK_FUNCTIONAL_USAGE_VIEW_MIM"/>
      <interface kind="use" schema="NON_FEATURE_SHAPE_ELEMENT_MIM"/>
      <interface kind="use" schema="PART_FEATURE_FUNCTION_MIM"/>
      <interface kind="use" schema="PART_OCCURRENCE_MIM"/>
      <interface kind="use" schema="PHYSICAL_UNIT_USAGE_VIEW_MIM"/>
      <interface kind="use" schema="SHAPE_COMPOSITION_MIM"/>
      <interface kind="use" schema="VALUE_WITH_UNIT_EXTENSION_MIM"/>
      <entity name="bare_die" supertypes="physical_unit">
         <where label="wr1" expression=" sizeof ( query ( ifdu &lt;* query ( pdr &lt;* usedin ( self , 'bare_die_mim.' + 'product_definition_relationship.' + 'related_product_definition' ) | pdr \ property_definition_relationship . name = 'implemented function' ) | ( 'bare_die_mim.' + 'functional_unit' in typeof ( ifdu . relating_product_definition ) ) and ( ifdu . relating_product_definition . frame_of_reference . name = 'functional design usage' ) ) ) = 1 "/>
         <where label="wr2" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'bare_die_mim.' + 'property_definition.definition' ) | sizeof ( query ( dut &lt;* query ( pdr &lt;* usedin ( pd , 'bare_die_mim.' + 'property_definition_relationship.related_property_definition' ) | pdr \ property_definition_relationship . name = 'device unit technology' ) | dut . relating_property_definition \ property_definition . name = 'unit technology' ) ) = 1 ) ) = 1 "/>
         <where label="wr3" expression=" sizeof ( query ( pd &lt;* usedin ( self , 'bare_die_mim.' + 'property_definition.definition' ) | not ( sizeof ( query ( sa &lt;* usedin ( pd , 'bare_die_mim.' + 'shape_aspect.of_shape' ) | 'bare_die_mim.' + 'bare_die_terminal' in typeof ( sa ) ) ) &gt;= 2 ) ) ) = 0 "/>
      </entity>
      <entity name="bare_die_bottom_surface" supertypes="bare_die_surface">
         <where label="wr1" expression=" sizeof ( typeof ( self . of_shape . definition ) * [ 'bare_die_mim.' + 'bare_die' , 'bare_die_mim.' + 'externally_defined_bare_die' , 'bare_die_mim.' + 'library_defined_bare_die' ] ) = 1 "/>
         <where label="wr2" expression=" self \ shape_aspect . product_definitional "/>
         <where label="wr3" expression=" sizeof ( typeof ( self ) - typeof ( self \ shape_aspect || self \ bare_die_bottom_surface || self \ part_mounting_feature || self \ bare_die_surface ) ) = 0 "/>
      </entity>
      <entity name="bare_die_edge_segment_surface" supertypes="shape_aspect shape_aspect_relationship">
         <where label="wr1" expression=" 'bare_die_mim.' + 'edge_segment_vertex' in typeof ( self \ shape_aspect_relationship . related_shape_aspect ) "/>
         <where label="wr2" expression=" 'bare_die_mim.' + 'edge_segment_vertex' in typeof ( self \ shape_aspect_relationship . relating_shape_aspect ) "/>
         <where label="wr3" expression=" self \ shape_aspect_relationship . relating_shape_aspect :&lt;&gt;: self \ shape_aspect_relationship . related_shape_aspect "/>
         <where label="wr4" expression=" sizeof ( query ( ce &lt;* query ( sar &lt;* usedin ( self , 'bare_die_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) | sar \ shape_aspect_relationship . name = 'composed surface' ) | ( 'bare_die_mim.' + 'bare_die_edge_surface' in typeof ( ce . relating_shape_aspect ) ) ) ) = 1 "/>
         <where label="wr5" expression=" sizeof ( typeof ( self ) - typeof ( self \ shape_aspect || self \ shape_aspect_relationship || self \ bare_die_edge_segment_surface ) ) = 0 "/>
      </entity>
      <entity name="bare_die_edge_surface" supertypes="bare_die_surface">
         <where label="wr1" expression=" sizeof ( typeof ( self . of_shape . definition ) * [ 'bare_die_mim.' + 'bare_die' , 'bare_die_mim.' + 'externally_defined_bare_die' , 'bare_die_mim.' + 'library_defined_bare_die' ] ) = 1 "/>
         <where label="wr2" expression=" self \ shape_aspect . product_definitional "/>
         <where label="wr3" expression=" sizeof ( typeof ( self ) - typeof ( self \ shape_aspect || self \ part_mounting_feature || self \ bare_die_edge_surface || self \ bare_die_surface ) ) = 0 "/>
      </entity>
      <entity name="bare_die_surface" abstract.supertype="YES" supertypes="part_mounting_feature" super.expression="ONEOF (bare_die_bottom_surface, bare_die_top_surface, bare_die_edge_surface)">
         <where label="wr1" expression=" sizeof ( typeof ( self . of_shape . definition ) * [ 'bare_die_mim.' + 'bare_die' , 'bare_die_mim.' + 'externally_defined_bare_die' , 'bare_die_mim.' + 'library_defined_bare_die' ] ) = 1 "/>
         <where label="wr2" expression=" self \ shape_aspect . product_definitional "/>
      </entity>
      <entity name="bare_die_terminal" supertypes="minimally_defined_bare_die_terminal">
         <where label="wr1" expression=" 'bare_die_mim.' + 'bare_die' in typeof ( self . of_shape . definition ) "/>
         <where label="wr2" expression=" sizeof ( query ( eca &lt;* query ( sar &lt;* usedin ( self , 'bare_die_mim.' + 'shape_aspect_relationship.relating_shape_aspect' ) | sar \ shape_aspect_relationship . name = 'external connection area' ) | eca . related_shape_aspect \ shape_aspect . description = 'connection zone' ) ) = 1 "/>
         <where label="wr3" expression=" sizeof ( usedin ( self , 'bare_die_mim.' + 'material_designation.definitions' ) ) = 1 "/>
         <where label="wr4" expression=" sizeof ( query ( eca &lt;* query ( sar &lt;* usedin ( self , 'bare_die_mim.' + 'shape_aspect_relationship.relating_shape_aspect' ) | sar \ shape_aspect_relationship . name = 'seating plane zone' ) | 'bare_die_mim.' + 'connection_zone_interface_plane_relationship' in typeof ( eca . related_shape_aspect ) ) ) &lt;= 1 "/>
      </entity>
      <entity name="bare_die_top_surface" supertypes="bare_die_surface">
         <where label="wr1" expression=" sizeof ( typeof ( self . of_shape . definition ) * [ 'bare_die_mim.' + 'bare_die' , 'bare_die_mim.' + 'externally_defined_bare_die' , 'bare_die_mim.' + 'library_defined_bare_die' ] ) = 1 "/>
         <where label="wr2" expression=" self \ shape_aspect . product_definitional "/>
         <where label="wr3" expression=" sizeof ( typeof ( self ) - typeof ( self \ shape_aspect || self \ part_mounting_feature || self \ bare_die_top_surface || self \ bare_die_surface ) ) = 0 "/>
      </entity>
      <entity name="minimally_defined_bare_die_terminal" supertypes="shape_aspect" super.expression="bare_die_terminal">
         <where label="wr1" expression=" 'bare_die_mim.' + 'bare_die' in typeof ( self . of_shape . definition ) "/>
         <where label="wr2" expression=" sizeof ( query ( eca &lt;* query ( sar &lt;* usedin ( self , 'bare_die_mim.' + 'shape_aspect_relationship.relating_shape_aspect' ) | sar \ shape_aspect_relationship . name = 'external connection area' ) | eca . related_shape_aspect \ shape_aspect . description = 'connection zone' ) ) &lt;= 1 "/>
         <where label="wr3" expression=" sizeof ( usedin ( self , 'bare_die_mim.' + 'material_designation.definitions' ) ) &lt;= 1 "/>
         <where label="wr4" expression=" sizeof ( query ( mct &lt;* query ( sar &lt;* usedin ( self , 'bare_die_mim.' + 'shape_aspect_relationship.related_shape_aspect' ) | sar \ shape_aspect_relationship . name = 'member connected terminal' ) | 'bare_die_mim.' + 'part_connected_terminals_definition' in typeof ( mct . relating_shape_aspect ) ) ) &lt;= 1 "/>
      </entity>
      <rule name="bare_die_unique_constraint" appliesto="bare_die">
         <algorithm> local bd : bag of physical_unit := query ( r &lt;* bare_die | ( r . frame_of_reference . name = 'physical design usage' ) ) ; pu : bag of physical_unit ; pdr_bag : bag of product_definition_relationship ; fu_bag : bag of functional_unit := [ ] ; pu_bag : bag of physical_unit ; ut_bag : bag of property_definition ; pass : boolean := true ; pd_bag : bag of property_definition ; end_local ; pu := bd ; repeat i := 1 to sizeof ( pu ) by 1 ; pdr_bag := query ( pdr &lt;* usedin ( pu [ i ] , 'bare_die_mim.' + 'product_definition_relationship.related_product_definition' ) | ( ( pdr \ product_definition_relationship . name = 'implemented function' ) and ( pdr . relating_product_definition . frame_of_reference . name = 'functional design usage' ) and ( 'bare_die_mim.' + 'functional_unit' in typeof ( pdr . relating_product_definition ) ) ) ) ; repeat j := 1 to sizeof ( pdr_bag ) by 1 ; if exists ( pdr_bag [ j ] . relating_product_definition ) then if ( not ( pdr_bag [ j ] . relating_product_definition in fu_bag ) ) then fu_bag := fu_bag + pdr_bag [ j ] . relating_product_definition ; end_if ; end_if ; end_repeat ; end_repeat ; repeat i := 1 to sizeof ( fu_bag ) by 1 ; if ( not pass ) then escape ; end_if ; pu_bag := query ( r &lt;* pu | ( sizeof ( query ( pdr &lt;* usedin ( fu_bag [ i ] , 'bare_die_mim.' + 'product_definition_relationship.relating_product_definition' ) | ( ( pdr \ product_definition_relationship . name = 'implemented function' ) and ( pdr . related_product_definition :=: r ) ) ) ) &gt; 0 ) ) ; pd_bag := [ ] ; repeat j := 1 to sizeof ( pu_bag ) by 1 ; if ( not pass ) then escape ; end_if ; ut_bag := query ( pd &lt;* usedin ( pu_bag [ j ] , 'bare_die_mim.' + 'property_definition.definition' ) | ( pd \ property_definition . name = 'unit technology' ) ) ; repeat k := 1 to sizeof ( ut_bag ) by 1 ; if exists ( ut_bag [ k ] ) then if ( ut_bag [ k ] in pd_bag ) then pass := false ; escape ; else pd_bag := pd_bag + ut_bag [ k ] ; end_if ; end_if ; end_repeat ; end_repeat ; end_repeat ; </algorithm>
         <where label="wr1" expression=" pass "/>
      </rule>
   </schema>
</express>
