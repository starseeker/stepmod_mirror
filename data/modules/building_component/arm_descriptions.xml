<?xml version="1.0"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="building_component" schema_file="arm.xml" describe.selects="YES" rcs.date="$Date: 2003/07/14 12:50:49 $" rcs.revision="$Revision: 1.11 $">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Schema: Building_component_arm
   <express_ref linkend="building_component:arm:Building_component_arm"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<ext_description linkend="Building_component_arm">
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Type: main 
   <express_ref linkend="building_component:arm:Building_component_arm.main"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.main">A <b>main</b> type is a STRING which indicates, whether a <express_ref
      linkend="building_component:arm:Building_component_arm.Building_element_component"/> is the main component of a  <express_ref
      linkend="building_item:arm:Building_item_arm.Building_element"/>.
	 		 <note>This shape is modified through the additional <express_ref
      linkend="building_component:arm:Building_component_arm.Building_element_component"/> to give the final shape of the
<express_ref
      linkend="building_item:arm:Building_item_arm.Building_element"/>.</note>
The predefined value of the <b>main</b> is one of the following:
<ul>
<li><b>main</b>;</li>
<li><b>not_main</b>.</li>
</ul>
</ext_description>
<ext_description linkend="Building_component_arm.main.main">the <express_ref
      linkend="building_component:arm:Building_component_arm.Positive_component"/> is the main component of the
<express_ref linkend="building_item:arm:Building_item_arm.Building_element"/>.
</ext_description>
<ext_description linkend="Building_component_arm.main.not_main">the <express_ref
      linkend="building_component:arm:Building_component_arm.Positive_component"/> is not the main component of the
<express_ref linkend="building_item:arm:Building_item_arm.Building_element"/>, but an addition.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Type: opening_name 
   <express_ref linkend="building_component:arm:Building_component_arm.opening_name"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.opening_name">A <b>opening_name</b> specifies a descriptive title, which may be assigned to a <express_ref
      linkend="building_component:arm:Building_component_arm.Building_element_component"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Type: opening_functional_type 
   <express_ref linkend="building_component:arm:Building_component_arm.opening_functional_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.opening_functional_type">An <b>opening_functional_type</b> specifies a descriptive label that indicates the form or function of the <express_ref
      linkend="building_component:arm:Building_component_arm.Opening"/> by a predifned value.
The predefined value of the <b>opening_functional_type</b> is one of the following:
<ul>
<li><b>door_opening</b>;</li>
<li><b>service_opening</b>;</li>
<li><b>window_opening</b>.</li>
</ul>
</ext_description>
<ext_description linkend="Building_component_arm.opening_functional_type.door_opening">the <express_ref
      linkend="building_component:arm:Building_component_arm.Opening"/> is in a wall. It is intended to provide access from one side of the
wall to the other and may be filled with a door.
</ext_description>
<ext_description linkend="Building_component_arm.opening_functional_type.service_opening">the <express_ref
      linkend="building_component:arm:Building_component_arm.Opening"/> is in a wall, floor, or roof. It is intended to allow service
elements to pass through the wall, floor, or roof.
</ext_description>
<ext_description linkend="Building_component_arm.opening_functional_type.window_opening">the <express_ref
      linkend="building_component:arm:Building_component_arm.Opening"/> is in a wall or roof to admit light and usually to
provide visual access through the wall or roof.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Type: opening_type 
   <express_ref linkend="building_component:arm:Building_component_arm.opening_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.opening_type">An <b>opening_type</b> specifies a descriptive label that indicates the form or function of the <express_ref
      linkend="building_component:arm:Building_component_arm.Opening"/>. The
value is either user defined or predefined.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Entity: Building_element_component  
   <express_ref linkend="building_component:arm:Building_component_arm.Building_element_component"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.Building_element_component">
A <b>Building_element_component</b> is a type of <express_ref
      linkend="shape_property_assignment:arm:Shape_property_assignment_arm.Shape_element"/> which represents a part of the shape of a <express_ref
      linkend="building_item:arm:Building_item_arm.Building_element"/>
object that can play a functional role. A <b>Building_element_component</b> is either a <express_ref
      linkend="building_component:arm:Building_component_arm.Positive_component"/> or a <express_ref
      linkend="building_component:arm:Building_component_arm.Negative_component"/>. 
<example>A column consists of the components shaft, brackets, and openings.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Entity: Negative_component  
   <express_ref linkend="building_component:arm:Building_component_arm.Negative_component"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.Negative_component">A <b>Negative_component</b> is a type of <express_ref
      linkend="building_component:arm:Building_component_arm.Building_element_component"/> that is a portion of a
<express_ref
      linkend="building_item:arm:Building_item_arm.Building_element"/> and represents a volume of space; it is a volume that is empty space
rather than solid material. A <b>Negative_component</b> may be one of the following: 
<ul>
<li>Recess;</li>
<li>Opening.</li>
</ul>
<note>The shape of a <b>Negative_component</b> is of concern only where it intersects a <express_ref
      linkend="building_component:arm:Building_component_arm.Positive_component"/>.</note>
<example>A <b>Negative_component</b> in a wall could be a door opening. The relationship between
the <b>Negative_component</b> (the door opening) and the <express_ref
      linkend="building_component:arm:Building_component_arm.Positive_component"/> (the wall) is the same as if the
shape of the <b>Negative_component</b> were subtracted using a solid boolean operation from the shape of the <express_ref
      linkend="building_component:arm:Building_component_arm.Positive_component"/>.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Entity: Opening  
   <express_ref linkend="building_component:arm:Building_component_arm.Opening"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.Opening">An <b>Opening</b> is a type of <express_ref
      linkend="building_component:arm:Building_component_arm.Negative_component"/> that passes through a <express_ref
      linkend="building_item:arm:Building_item_arm.Building_element"/> and serves a functional purpose.
<example>An <b>Opening</b> would be left in a wall or slab for plumbing or air conditioning ducts.</example>
The data associated with an <b>Opening</b> are the following:
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Entity: Opening  Attribute: opening_type 
   <express_ref linkend="building_component:arm:Building_component_arm.Opening.opening_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.Opening.opening_type">a descriptive label that indicates the form or function of the <b>Opening</b>. The
value is either user defined or predefined.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Entity: Positive_component  
   <express_ref linkend="building_component:arm:Building_component_arm.Positive_component"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.Positive_component">A <b>Positive_component</b> is a type of <express_ref
      linkend="building_component:arm:Building_component_arm.Building_element_component"/> that represents a solid
volume.
<example>A <b>Positive_component</b> in a wall could be a window sill. The relationship between the
<b>Positive_component</b> representing the sill and the <b>Positive_component</b> representing the wall is the same as
if the shape of the <b>Positive_component</b> representing the sill were added to the <b>Positive_component</b>
representing the wall using a boolean operation.</example>
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Entity: Positive_component  Attribute: component_functiona_type 
   <express_ref linkend="building_component:arm:Building_component_arm.Positive_component.component_functional_type"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.Positive_component.component_functional_type">a descriptive label that indicates, whether the <b>Positive_component</b> is the main component of the <express_ref
      linkend="building_item:arm:Building_item_arm.Building_element"/>.
</ext_description>
<!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Building_component_arm  Entity: Recess  
   <express_ref linkend="building_component:arm:Building_component_arm.Recess"/>
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Building_component_arm.Recess">A <b>Recess</b> is a type of <express_ref
      linkend="building_component:arm:Building_component_arm.Negative_component"/> that does not pass through a <express_ref
      linkend="building_item:arm:Building_item_arm.Building_element"/>.
<example>An alcove or niche in a wall are recesses.</example>
</ext_description>
</ext_descriptions>
