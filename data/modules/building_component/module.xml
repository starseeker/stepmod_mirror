<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.12 2003/02/27 17:57:26 whaas Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="building_component"
   part="1143"
   version="1"
   wg.number="1777"
   wg.number.arm="1778"
   wg.number.mim="1779"
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="CD-TS"
   language="E"
   publication.year=""
   published="n"
   rcs.date="$Date: 2003/02/27 17:57:26 $"
   rcs.revision="$Revision: 1.12 $">

 <keywords>
    module, building element component, bracket, lintel, opening, recess 
 </keywords>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap236.projlead"/>
   <editor ref="ap236.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of a building component data as constituent of a buiding element such as a wall, a beams or a column. 
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>characterization of a component of a building element.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
 	 <li>shape of a component of a building element;</li>
	 <li>location of a component of a building element.</li>
 </outscope>

<!-- normrefs -->
 <normrefs>
   <normref.inc normref="ref10303-41.2000">
  </normref.inc> 
 </normrefs>

-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->
   <!-- Units of functionality -->
   <uof name="Building_component">
     <description>The building_component UoF represents the component shapes that may be combined to define the
shape of a building element. 
<note>A building component may correspond to the main shape of a building
element or to any of several positive or negative additions to the main shape. 
</note>
<example>Many building components
correspond to common terms such as shaft, bracket, door opening, window, and recess.
</example>     
</description>
     <uof.ae entity="Building_element_component"/>
		 <uof.ae entity="Negative_component"/>
		 <uof.ae entity="Opening"/>
		 <uof.ae entity="Positive_component"/>
		 <uof.ae entity="Recess"/>
   </uof>

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
		 <imgfile file="armexpg2.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>

 <ae entity="Building_element_component">
	  <aimelt>(negative_component)
		(positive_component)
		</aimelt>
		<source>ISO 10303-1143</source>
		<refpath>(negative_component &lt;=) 
		(positive_component &lt;=) 
		shape_aspect</refpath>
 </ae>

<ae entity="Negative_component">
	  <aimelt>negative_component
		</aimelt>
		<source>ISO 10303-1143</source>
		<refpath>negative_component &lt;= 
		shape_aspect
		</refpath>
</ae>

<ae entity="Opening">
	  <aimelt>opening
		</aimelt>
		<source>ISO 10303-1143</source>
		<refpath>opening &lt;=
		negative_component &lt;= 
		shape_aspect
		</refpath>
		<aa attribute="opening_type" assertion_to="opening_name" >
		<aimelt>group.name</aimelt>
		<source>ISO 10303-41</source> 
		<refpath>opening
		element_component_classification_item = opening
		element_component_classification_item &lt;* classification_item
		classification_item &lt;- applied_classification_assignment.items[i]
		applied_classification_assignment &lt;=
		classification_assignment.assigned_class -&gt;
		group		
		{group =&gt; element_component_classification_group}
		group.name
		</refpath>
    </aa>
		<aa attribute="opening_type" assertion_to="opening_functional_type" >
		<aimelt>group.name</aimelt>
		<source>ISO 10303-41</source> 
		<refpath>
		opening
		element_component_classification_item = opening
		element_component_classification_item &lt;* classification_item
		classification_item &lt;- applied_classification_assignment.items[i]
		applied_classification_assignment &lt;=
		classification_assignment.assigned_class -&gt;
		group		
		{group =&gt; element_component_classification_group}
		{(group.name  = 'door opening' )
		(group.name  = 'service opening')
		(group.name  = 'window opening')}
		</refpath>
    </aa>
</ae>

<ae entity="Positive_component">
	  <aimelt>positive_component
		</aimelt>
		<source>ISO 10303-1143</source>
		<refpath>positive_component &lt;= 
		shape_aspect
		</refpath>		
		<aa attribute="component_functional_type">
		<aimelt>shape_aspect.name</aimelt>
		<source>10303-41</source>
		<refpath>positive_component &lt;= 
		shape_aspect
		(shape_aspect.name = 'main')
		(shape_aspect.name = 'not_main')
		</refpath>
    </aa>
</ae>

<ae entity="Recess">
	  <aimelt>recess
		</aimelt>
		<source>ISO 10303-1143</source>
		<refpath>recess &lt;= 
		negative_component &lt;= 
		shape_aspect
		</refpath>
</ae>


</mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
		 <imgfile file="mimexpg2.xml"/>
   </express-g>
	 <shortnames>
			<shortname name="ECCG" entity="element_component_classification_group"/>
			<shortname name="NGTCMP" entity="negative_component"/>
			<shortname name="OPNNG" entity="opening"/>
			<shortname name="PSTCM" entity="positive_component"/>
			<shortname name="RECESS" entity="recess"/> 
 	  </shortnames>
 </mim>

</module>
