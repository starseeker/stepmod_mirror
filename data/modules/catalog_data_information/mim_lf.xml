<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: express2xml.js,v 1.38 2004/08/24 16:58:55 thendrix Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name="express2xml2.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.38"
    source="../data/modules/catalog_data_information/mim_lf.exp"/>

  <schema name="Catalog_data_information_mim_LF">

    <constant name="dummy_gri"
      expression="representation_item('')|| geometric_representation_item()">
      <typename
        name="geometric_representation_item"/>
    </constant>

    <type name="action_items">
      <select
        selectitems="configuration_effectivity product_definition product_definition_formation product_definition_relationship">
      </select>
    </type>

    <type name="action_request_item">
      <select
        selectitems="product_definition product_definition_formation product_definition_relationship property_definition">
      </select>
    </type>

    <type name="ahead_or_behind">
      <enumeration
        items="ahead exact behind">
      </enumeration>
    </type>

    <type name="amount_of_substance_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="angle_relator">
      <enumeration
        items="equal large small">
      </enumeration>
    </type>

    <type name="approval_item">
      <select
        selectitems="action alternate_product_relationship applied_action_assignment applied_classification_assignment assembly_component_usage_substitute certification class class_system configuration_design configuration_effectivity configured_effectivity_assignment contract document_file general_property material_designation organizational_project product product_concept product_concept_feature product_concept_feature_association product_concept_feature_category product_concept_feature_category_usage product_definition product_definition_formation product_definition_relationship product_definition_substitute property_definition shape_representation versioned_action_request">
      </select>
    </type>

    <type name="area_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="attribute_language_item">
      <select
        selectitems="alternate_product_relationship application_context applied_document_reference applied_document_usage_constraint_assignment applied_external_identification_assignment applied_organizational_project_assignment approval approval_relationship approval_status assembly_component_usage_substitute attribute_value_assignment certification certification_type configuration_design configuration_item contract date_role date_time_role descriptive_representation_item document_relationship document_usage_role effectivity effectivity_relationship event_occurrence external_source general_property general_property_relationship geometric_representation_item group group_relationship identification_role mapped_item multi_language_attribute_assignment object_role organization_relationship organization_role organizational_project organizational_project_relationship organizational_project_role person_and_organization person_and_organization_role product product_category product_concept product_concept_feature product_concept_feature_association product_concept_relationship product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute product_related_product_category property_definition representation representation_relationship shape_aspect shape_aspect_relationship time_interval_role uncertainty_measure_with_unit uncertainty_qualifier">
      </select>
    </type>

    <type name="attribute_type">
      <select
        selectitems="label text">
      </select>
    </type>

    <type name="axis2_placement">
      <select
        selectitems="axis2_placement_2d axis2_placement_3d">
      </select>
    </type>

    <type name="b_spline_curve_form">
      <enumeration
        items="polyline_form circular_arc elliptic_arc parabolic_arc hyperbolic_arc unspecified">
      </enumeration>
    </type>

    <type name="b_spline_surface_form">
      <enumeration
        items="plane_surf cylindrical_surf conical_surf spherical_surf toroidal_surf surf_of_revolution ruled_surf generalised_cone quadric_surf surf_of_linear_extrusion unspecified">
      </enumeration>
    </type>

    <type name="category_usage_item">
      <select
        selectitems="product_class">
      </select>
    </type>

    <type name="celsius_temperature_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="certification_item">
      <select
        selectitems="product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship">
      </select>
    </type>

    <type name="characterized_action_definition">
      <select
        selectitems="action action_method action_relationship">
      </select>
    </type>

    <type name="characterized_definition">
      <select
        selectitems="characterized_object characterized_product_definition shape_definition">
      </select>
    </type>

    <type name="characterized_material_property">
      <select
        selectitems="material_property_representation">
      </select>
    </type>

    <type name="characterized_product_definition">
      <select
        selectitems="product_definition product_definition_relationship">
      </select>
    </type>

    <type name="class_usage_effectivity_context_item">
      <select
        selectitems="product_definition">
      </select>
    </type>

    <type name="classification_item">
      <select
        selectitems="action action_directive action_method action_property action_relationship action_request_solution action_request_status address alternate_product_relationship applied_action_assignment applied_action_request_assignment applied_approval_assignment applied_certification_assignment applied_contract_assignment applied_date_and_time_assignment applied_date_assignment applied_document_reference applied_document_usage_constraint_assignment applied_effectivity_assignment applied_event_occurrence_assignment applied_external_identification_assignment applied_identification_assignment applied_organization_assignment applied_organizational_project_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval approval_person_organization approval_relationship approval_status assembly_component_usage_substitute calendar_date certification characterized_class class configuration_item context_dependent_unit contract conversion_based_unit date_and_time date_and_time_assignment date_assignment derived_unit descriptive_representation_item directed_action document_file document_relationship document_type effectivity event_occurrence executed_action general_property general_property_relationship group identification_assignment language material_designation measure_representation_item measure_with_unit multi_language_attribute_assignment named_unit organization organization_relationship organizational_address organizational_project organizational_project_relationship person person_and_organization_address planar_extent product product_category product_concept product_concept_feature_category product_definition product_definition_context product_definition_formation product_definition_formation_relationship product_definition_relationship property_definition property_definition_representation representation representation_context representation_item security_classification shape_aspect uncertainty_measure_with_unit versioned_action_request">
      </select>
    </type>

    <type name="compound_item_definition">
      <select
        selectitems="list_representation_item set_representation_item">
      </select>
    </type>

    <type name="configuration_design_item">
      <select
        selectitems="product_definition product_definition_formation">
      </select>
    </type>

    <type name="configured_effectivity_context_item">
      <select
        selectitems="product_concept_feature_association">
      </select>
    </type>

    <type name="configured_effectivity_item">
      <select
        selectitems="product_definition">
      </select>
    </type>

    <type name="context_dependent_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="contract_item">
      <select
        selectitems="product_definition_formation">
      </select>
    </type>

    <type name="count_measure">
      <builtintype
        type="NUMBER">
      </builtintype>
    </type>

    <type name="curve_on_surface">
      <select
        selectitems="pcurve surface_curve composite_curve_on_surface">
      </select>
    </type>

    <type name="date_and_time_item">
      <select
        selectitems="action alternate_product_relationship applied_action_assignment applied_classification_assignment applied_organization_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval_person_organization approval_status assembly_component_usage_substitute certification class class_system configuration_design configuration_item configured_effectivity_assignment contract document_file effectivity event_occurrence executed_action general_property material_designation organization_relationship organizational_project person_and_organization product product_concept product_concept_feature product_concept_feature_association product_concept_feature_category product_concept_feature_category_usage product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute property_definition security_classification shape_representation versioned_action_request">
      </select>
    </type>

    <type name="date_item">
      <select
        selectitems="action alternate_product_relationship applied_action_assignment applied_classification_assignment applied_organization_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval_person_organization approval_status assembly_component_usage_substitute certification class class_system configuration_design configuration_item configured_effectivity_assignment contract document_file effectivity event_occurrence general_property material_designation organization_relationship organizational_project person_and_organization product product_concept product_concept_feature product_concept_feature_association product_concept_feature_category product_concept_feature_category_usage product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute property_definition security_classification shape_representation versioned_action_request">
      </select>
    </type>

    <type name="date_time_or_event_occurrence">
      <select
        selectitems="date_time_select event_occurrence">
      </select>
    </type>

    <type name="date_time_select">
      <select
        selectitems="date date_and_time local_time">
      </select>
    </type>

    <type name="day_in_month_number">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="WR1"
        expression="{1 &lt;= SELF &lt;= 31}">
      </where>
    </type>

    <type name="derived_property_select">
      <select
        selectitems="action_property property_definition">
      </select>
    </type>

    <type name="description_attribute_select">
      <select
        selectitems="action_request_solution application_context approval_role configuration_design context_dependent_shape_representation date_role date_time_role effectivity external_source organization_role person_and_organization person_and_organization_role property_definition_representation representation">
      </select>
    </type>

    <type name="descriptive_measure">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="dimension_count">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="WR1"
        expression="SELF &gt; 0">
      </where>
    </type>

    <type name="dimensional_characteristic">
      <select
        selectitems="dimensional_location dimensional_size">
      </select>
    </type>

    <type name="document_reference_item">
      <select
        selectitems="action_method approval certification class class_system configuration_design configuration_item contract descriptive_representation_item dimensional_size executed_action externally_defined_dimension_definition general_property material_designation organization organizational_project person product product_concept product_concept_feature product_concept_feature_category product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute product_related_product_category property_definition representation shape_aspect shape_aspect_relationship versioned_action_request">
      </select>
    </type>

    <type name="effectivity_item">
      <select
        selectitems="assembly_component_usage_substitute class_system configuration_design configuration_item configured_effectivity_assignment document_file general_property material_designation product product_concept product_concept_feature product_concept_feature_association product_concept_feature_category product_concept_feature_category_usage product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute property_definition shape_aspect shape_representation">
      </select>
    </type>

    <type name="electric_current_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="event_occurrence_item">
      <select
        selectitems="alternate_product_relationship applied_classification_assignment applied_person_and_organization_assignment approval_status assembly_component_usage_substitute certification class class_system configuration_design configuration_effectivity configuration_item configured_effectivity_assignment contract document_file general_property material_designation organization_relationship organizational_project person_and_organization product product_concept product_concept_feature product_concept_feature_association product_concept_feature_category product_concept_feature_category_usage product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute property_definition shape_representation">
      </select>
    </type>

    <type name="external_identification_item">
      <select
        selectitems="document_file externally_defined_class externally_defined_general_property product_definition trimmed_curve">
      </select>
    </type>

    <type name="founded_item_select">
      <select
        selectitems="founded_item representation_item">
      </select>
    </type>

    <type name="hour_in_day">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="WR1"
        expression="{ 0 &lt;= SELF &lt; 24 }">
      </where>
    </type>

    <type name="id_attribute_select">
      <select
        selectitems="action address application_context group organizational_project product_category property_definition representation shape_aspect shape_aspect_relationship">
      </select>
    </type>

    <type name="identification_item">
      <select
        selectitems="applied_identification_assignment approval_status characterized_class class class_system configuration_item contract dimensional_size document_file document_type effectivity general_property measure_representation_item organization person_and_organization product product_as_individual product_as_individual_version product_as_individual_view product_concept product_concept_feature product_concept_feature_category product_definition product_definition_formation product_definition_relationship product_identification property_definition security_classification_level shape_aspect_relationship shape_representation">
      </select>
    </type>

    <type name="identifier">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="instance_usage_context_select">
      <select
        selectitems="product_definition_relationship product_definition_usage">
      </select>
    </type>

    <type name="knot_type">
      <enumeration
        items="uniform_knots quasi_uniform_knots piecewise_bezier_knots unspecified">
      </enumeration>
    </type>

    <type name="label">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="length_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="list_representation_item">
      <aggregate
        type="LIST"
        lower="1"
        upper="?"/>
      <typename
        name="representation_item"/>
    </type>

    <type name="luminous_intensity_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="mass_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="measure_value">
      <select
        selectitems="amount_of_substance_measure area_measure celsius_temperature_measure context_dependent_measure count_measure descriptive_measure electric_current_measure length_measure luminous_intensity_measure mass_measure numeric_measure parameter_value plane_angle_measure positive_length_measure positive_plane_angle_measure positive_ratio_measure ratio_measure solid_angle_measure thermodynamic_temperature_measure time_measure volume_measure">
      </select>
    </type>

    <type name="minute_in_hour">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="WR1"
        expression="{ 0 &lt;= SELF &lt;= 59 }">
      </where>
    </type>

    <type name="month_in_year_number">
      <builtintype
        type="INTEGER">
      </builtintype>
      <where
        label="WR1"
        expression="{ 1 &lt;= SELF &lt;= 12 }">
      </where>
    </type>

    <type name="multi_language_attribute_item">
      <select
        selectitems="alternate_product_relationship application_context applied_document_reference applied_document_usage_constraint_assignment applied_external_identification_assignment applied_organizational_project_assignment approval approval_relationship approval_status assembly_component_usage_substitute certification certification_type configuration_design configuration_item contract date_role date_time_role descriptive_representation_item document_relationship document_usage_role effectivity effectivity_relationship event_occurrence external_source general_property general_property_relationship geometric_representation_item group group_relationship identification_role mapped_item object_role organization_relationship organization_role organizational_project organizational_project_relationship organizational_project_role person_and_organization person_and_organization_role product product_category product_concept product_concept_feature product_concept_feature_association product_concept_relationship product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute product_related_product_category property_definition representation representation_relationship shape_aspect shape_aspect_relationship time_interval_role uncertainty_measure_with_unit uncertainty_qualifier">
      </select>
    </type>

    <type name="name_attribute_select">
      <select
        selectitems="action_request_solution address configuration_design context_dependent_shape_representation derived_unit effectivity person_and_organization product_definition product_definition_substitute property_definition_representation">
      </select>
    </type>

    <type name="name_item">
      <select
        selectitems="assembly_component_usage external_class_library">
      </select>
    </type>

    <type name="numeric_measure">
      <builtintype
        type="NUMBER">
      </builtintype>
    </type>

    <type name="organization_item">
      <select
        selectitems="action alternate_product_relationship applied_action_assignment applied_classification_assignment applied_identification_assignment applied_organization_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval approval_status assembly_component_usage_substitute certification class class_system configuration_design configuration_effectivity configuration_item configured_effectivity_assignment contract document_file effectivity event_occurrence executed_action general_property material_designation organization_relationship organizational_project person_and_organization product product_concept product_concept_feature product_concept_feature_association product_concept_feature_category product_concept_feature_category_usage product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute property_definition security_classification shape_representation versioned_action_request">
      </select>
    </type>

    <type name="parameter_value">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="pcurve_or_surface">
      <select
        selectitems="pcurve surface">
      </select>
    </type>

    <type name="person_and_organization_item">
      <select
        selectitems="action alternate_product_relationship applied_action_assignment applied_classification_assignment applied_identification_assignment applied_organization_assignment applied_person_and_organization_assignment applied_security_classification_assignment approval approval_status assembly_component_usage_substitute certification class class_system configuration_design configuration_effectivity configuration_item configured_effectivity_assignment contract document_file event_occurrence executed_action general_property material_designation organization_relationship organizational_project person_and_organization product product_concept product_concept_feature product_concept_feature_association product_concept_feature_category product_concept_feature_category_usage product_definition product_definition_formation product_definition_formation_relationship product_definition_relationship product_definition_substitute property_definition security_classification shape_representation versioned_action_request">
      </select>
    </type>

    <type name="person_organization_select">
      <select
        selectitems="organization person person_and_organization">
      </select>
    </type>

    <type name="plane_angle_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="positive_length_measure">
      <typename
        name="length_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.0">
      </where>
    </type>

    <type name="positive_plane_angle_measure">
      <typename
        name="plane_angle_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.0">
      </where>
    </type>

    <type name="positive_ratio_measure">
      <typename
        name="ratio_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.0">
      </where>
    </type>

    <type name="preferred_surface_curve_representation">
      <enumeration
        items="curve_3d pcurve_s1 pcurve_s2">
      </enumeration>
    </type>

    <type name="product_definition_or_assembly_relationship">
      <select
        selectitems="assembly_component_usage product_definition">
      </select>
    </type>

    <type name="product_definition_or_breakdown_element_usage">
      <select
        selectitems="breakdown_element_usage product_definition">
      </select>
    </type>

    <type name="product_definition_or_product_definition_relationship">
      <select
        selectitems="product_definition product_definition_usage">
      </select>
    </type>

    <type name="product_or_formation_or_definition">
      <select
        selectitems="product product_definition_formation product_definition">
      </select>
    </type>

    <type name="project_item">
      <select
        selectitems="executed_action product_concept">
      </select>
    </type>

    <type name="ratio_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="represented_definition">
      <select
        selectitems="general_property property_definition property_definition_relationship shape_aspect shape_aspect_relationship">
      </select>
    </type>

    <type name="role_select">
      <select
        selectitems="action_assignment action_request_assignment approval_assignment approval_date_time certification_assignment contract_assignment document_reference effectivity_assignment group_assignment name_assignment security_classification_assignment">
      </select>
    </type>

    <type name="second_in_minute">
      <builtintype
        type="REAL">
      </builtintype>
      <where
        label="WR1"
        expression="{ 0 &lt;= SELF &lt;= 60.0 }">
      </where>
    </type>

    <type name="security_classification_item">
      <select
        selectitems="assembly_component_usage document_file product product_definition product_definition_formation">
      </select>
    </type>

    <type name="set_representation_item">
      <aggregate
        type="SET"
        lower="1"
        upper="?"/>
      <typename
        name="representation_item"/>
    </type>

    <type name="shape_definition">
      <select
        selectitems="product_definition_shape shape_aspect shape_aspect_relationship">
      </select>
    </type>

    <type name="si_prefix">
      <enumeration
        items="exa peta tera giga mega kilo hecto deca deci centi milli micro nano pico femto atto">
      </enumeration>
    </type>

    <type name="si_unit_name">
      <enumeration
        items="metre gram second ampere kelvin mole candela radian steradian hertz newton pascal joule watt coulomb volt farad ohm siemens weber tesla henry degree_Celsius lumen lux becquerel gray sievert">
      </enumeration>
    </type>

    <type name="solid_angle_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="source">
      <enumeration
        items="made bought not_known">
      </enumeration>
    </type>

    <type name="source_item">
      <select
        selectitems="identifier">
      </select>
    </type>

    <type name="text">
      <builtintype
        type="STRING">
      </builtintype>
    </type>

    <type name="thermodynamic_temperature_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="time_interval_item">
      <select
        selectitems="action">
      </select>
    </type>

    <type name="time_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="tolerance_method_definition">
      <select
        selectitems="tolerance_value limits_and_fits">
      </select>
    </type>

    <type name="transformation">
      <select
        selectitems="item_defined_transformation functionally_defined_transformation">
      </select>
    </type>

    <type name="transition_code">
      <enumeration
        items="discontinuous continuous cont_same_gradient cont_same_gradient_same_curvature">
      </enumeration>
    </type>

    <type name="trimming_preference">
      <enumeration
        items="cartesian parameter unspecified">
      </enumeration>
    </type>

    <type name="trimming_select">
      <select
        selectitems="cartesian_point parameter_value">
      </select>
    </type>

    <type name="unit">
      <select
        selectitems="derived_unit named_unit">
      </select>
    </type>

    <type name="value_qualifier">
      <select
        selectitems="precision_qualifier type_qualifier uncertainty_qualifier">
      </select>
    </type>

    <type name="vector_or_direction">
      <select
        selectitems="vector direction">
      </select>
    </type>

    <type name="volume_measure">
      <builtintype
        type="REAL">
      </builtintype>
    </type>

    <type name="year_number">
      <builtintype
        type="INTEGER">
      </builtintype>
    </type>

    <entity
      name="action">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="chosen_method">
        <typename
          name="action_method"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value (SELF)">
        <typename
          name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="action_assignment"
      abstract.supertype="YES">
      <explicit
        name="assigned_action">
        <typename
          name="action"/>
      </explicit>
      <derived
        name="role"
        expression="get_role (SELF)">
        <typename
          name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="action_directive">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="analysis">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="comment">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="requests">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="versioned_action_request"/>
      </explicit>
    </entity>

    <entity
      name="action_method">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="consequence">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="purpose">
        <typename
          name="text"/>
      </explicit>
    </entity>

    <entity
      name="action_property">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="definition">
        <typename
          name="characterized_action_definition"/>
      </explicit>
    </entity>

    <entity
      name="action_property_representation">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="property">
        <typename
          name="action_property"/>
      </explicit>
      <explicit
        name="representation">
        <typename
          name="representation"/>
      </explicit>
    </entity>

    <entity
      name="action_relationship">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="relating_action">
        <typename
          name="action"/>
      </explicit>
      <explicit
        name="related_action">
        <typename
          name="action"/>
      </explicit>
    </entity>

    <entity
      name="action_request_assignment"
      abstract.supertype="YES">
      <explicit
        name="assigned_action_request">
        <typename
          name="versioned_action_request"/>
      </explicit>
      <derived
        name="role"
        expression="get_role (SELF)">
        <typename
          name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="action_request_solution">
      <explicit
        name="method">
        <typename
          name="action_method"/>
      </explicit>
      <explicit
        name="request">
        <typename
          name="versioned_action_request"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value (SELF)">
        <typename
          name="text"/>
      </derived>
      <derived
        name="name"
        expression="get_name_value (SELF)">
        <typename
          name="label"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="action_request_status">
      <explicit
        name="status">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="assigned_request">
        <typename
          name="versioned_action_request"/>
      </explicit>
    </entity>

    <entity
      name="action_status">
      <explicit
        name="status">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="assigned_action">
        <typename
          name="executed_action"/>
      </explicit>
    </entity>

    <entity
      name="address">
      <explicit
        name="internal_location"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="street_number"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="street"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="postal_box"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="town"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="region"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="postal_code"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="country"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="facsimile_number"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="telephone_number"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="electronic_mail_address"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="telex_number"
        optional="YES">
        <typename
          name="label"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename
          name="label"/>
      </derived>
      <derived
        name="url"
        expression="get_id_value(SELF)">
        <typename
          name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(street) OR EXISTS(postal_box) OR EXISTS(town) OR EXISTS(region) OR EXISTS(postal_code) OR EXISTS(country) OR EXISTS(facsimile_number) OR EXISTS(telephone_number) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number)">
      </where>
    </entity>

    <entity
      name="advanced_face"
      supertypes="face_surface">
      <where
        label="WR1"
        expression="SIZEOF ([ 'CATALOG_DATA_INFORMATION_MIM_LF.ELEMENTARY_SURFACE', 'CATALOG_DATA_INFORMATION_MIM_LF.B_SPLINE_SURFACE', 'CATALOG_DATA_INFORMATION_MIM_LF.SWEPT_SURFACE' ] * TYPEOF (face_geometry)) = 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* bounds| ('CATALOG_DATA_INFORMATION_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)))| NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds.bound\path.edge_list| NOT ('CATALOG_DATA_INFORMATION_MIM_LF.EDGE_CURVE' IN TYPEOF (oe\oriented_edge.edge_element)))) = 0))) = 0">
      </where>
      <where
        label="WR3"
        expression="SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* bounds| ('CATALOG_DATA_INFORMATION_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)))| NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds.bound\path.edge_list| NOT (SIZEOF ([ 'CATALOG_DATA_INFORMATION_MIM_LF.LINE', 'CATALOG_DATA_INFORMATION_MIM_LF.CONIC', 'CATALOG_DATA_INFORMATION_MIM_LF.POLYLINE', 'CATALOG_DATA_INFORMATION_MIM_LF.SURFACE_CURVE', 'CATALOG_DATA_INFORMATION_MIM_LF.B_SPLINE_CURVE' ] * TYPEOF (oe.edge_element\edge_curve.edge_geometry)) = 1))) = 0))) = 0">
      </where>
      <where
        label="WR4"
        expression="SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* bounds| ('CATALOG_DATA_INFORMATION_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)))| NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds.bound\path.edge_list| NOT ((('CATALOG_DATA_INFORMATION_MIM_LF.VERTEX_POINT' IN TYPEOF (oe\edge.edge_start)) AND ('CATALOG_DATA_INFORMATION_MIM_LF.CARTESIAN_POINT' IN TYPEOF (oe\edge.edge_start\vertex_point.vertex_geometry))) AND (('CATALOG_DATA_INFORMATION_MIM_LF.VERTEX_POINT' IN TYPEOF (oe\edge.edge_end)) AND ('CATALOG_DATA_INFORMATION_MIM_LF.CARTESIAN_POINT' IN TYPEOF (oe\edge.edge_end\vertex_point.vertex_geometry)))))) = 0))) = 0">
      </where>
      <where
        label="WR5"
        expression="SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* bounds| ('CATALOG_DATA_INFORMATION_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)))| ('CATALOG_DATA_INFORMATION_MIM_LF.ORIENTED_PATH' IN TYPEOF (elp_fbnds.bound)))) = 0">
      </where>
      <where
        label="WR6"
        expression="NOT ('CATALOG_DATA_INFORMATION_MIM_LF.SWEPT_SURFACE' IN TYPEOF (face_geometry)) OR (SIZEOF ([ 'CATALOG_DATA_INFORMATION_MIM_LF.LINE', 'CATALOG_DATA_INFORMATION_MIM_LF.CONIC', 'CATALOG_DATA_INFORMATION_MIM_LF.POLYLINE', 'CATALOG_DATA_INFORMATION_MIM_LF.B_SPLINE_CURVE' ] * TYPEOF (face_geometry\swept_surface.swept_curve)) = 1)">
      </where>
      <where
        label="WR7"
        expression="SIZEOF (QUERY (vlp_fbnds &lt;* QUERY (bnds &lt;* bounds| ('CATALOG_DATA_INFORMATION_MIM_LF.VERTEX_LOOP' IN TYPEOF (bnds.bound)))| NOT (('CATALOG_DATA_INFORMATION_MIM_LF.VERTEX_POINT' IN TYPEOF (vlp_fbnds\face_bound.bound\vertex_loop.loop_vertex)) AND ('CATALOG_DATA_INFORMATION_MIM_LF.CARTESIAN_POINT' IN TYPEOF (vlp_fbnds\face_bound.bound\vertex_loop.loop_vertex\vertex_point.vertex_geometry))))) = 0">
      </where>
      <where
        label="WR8"
        expression="SIZEOF (QUERY (bnd &lt;* bounds| NOT (SIZEOF ([ 'CATALOG_DATA_INFORMATION_MIM_LF.EDGE_LOOP', 'CATALOG_DATA_INFORMATION_MIM_LF.VERTEX_LOOP' ] * TYPEOF (bnd.bound)) = 1))) = 0">
      </where>
      <where
        label="WR9"
        expression="SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* bounds| ('CATALOG_DATA_INFORMATION_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)))| NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds.bound\path.edge_list| ('CATALOG_DATA_INFORMATION_MIM_LF.SURFACE_CURVE' IN TYPEOF (oe\oriented_edge.edge_element\edge_curve.edge_geometry)) AND NOT (SIZEOF (QUERY (sc_ag &lt;* oe.edge_element\edge_curve.edge_geometry\surface_curve.associated_geometry| NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PCURVE' IN TYPEOF (sc_ag)))) = 0))) = 0))) = 0">
      </where>
      <where
        label="WR10"
        expression="(NOT ('CATALOG_DATA_INFORMATION_MIM_LF.SWEPT_SURFACE' IN TYPEOF (face_geometry)) OR (NOT ('CATALOG_DATA_INFORMATION_MIM_LF.POLYLINE' IN TYPEOF (face_geometry\swept_surface.swept_curve)) OR (SIZEOF (face_geometry\swept_surface.swept_curve\polyline.points) &gt;= 3))) AND (SIZEOF (QUERY (elp_fbnds &lt;* QUERY (bnds &lt;* bounds| ('CATALOG_DATA_INFORMATION_MIM_LF.EDGE_LOOP' IN TYPEOF (bnds.bound)))| NOT (SIZEOF (QUERY (oe &lt;* elp_fbnds.bound\path.edge_list| ('CATALOG_DATA_INFORMATION_MIM_LF.POLYLINE' IN TYPEOF (oe\oriented_edge.edge_element\edge_curve.edge_geometry)) AND NOT (SIZEOF (oe\oriented_edge.edge_element\edge_curve.edge_geometry\polyline.points) &gt;= 3))) = 0))) = 0)">
      </where>
    </entity>

    <entity
      name="alternate_product_relationship">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="definition"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="alternate">
        <typename
          name="product"/>
      </explicit>
      <explicit
        name="base">
        <typename
          name="product"/>
      </explicit>
      <explicit
        name="basis">
        <typename
          name="text"/>
      </explicit>
      <unique
        label="UR1">
        <unique.attribute
          attribute="alternate"/>
        <unique.attribute
          attribute="base"/>
      </unique>
      <where
        label="WR1"
        expression="alternate :&lt;&gt;: base">
      </where>
    </entity>

    <entity
      name="amount_of_substance_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'CATALOG_DATA_INFORMATION_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="amount_of_substance_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="angular_location"
      supertypes="dimensional_location">
      <explicit
        name="angle_selection">
        <typename
          name="angle_relator"/>
      </explicit>
    </entity>

    <entity
      name="angular_size"
      supertypes="dimensional_size">
      <explicit
        name="angle_selection">
        <typename
          name="angle_relator"/>
      </explicit>
    </entity>

    <entity
      name="apex"
      supertypes="derived_shape_aspect">
    </entity>

    <entity
      name="application_context">
      <explicit
        name="application">
        <typename
          name="label"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value (SELF)">
        <typename
          name="text"/>
      </derived>
      <derived
        name="id"
        expression="get_id_value (SELF)">
        <typename
          name="identifier"/>
      </derived>
      <inverse
        name="context_elements"
        entity="application_context_element"
        attribute="frame_of_reference">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"/>
      </inverse>
      <where
        label="WR1"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="application_context_element"
      super.expression="ONEOF ( PRODUCT_CONCEPT_CONTEXT, PRODUCT_CONTEXT, PRODUCT_DEFINITION_CONTEXT)">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <typename
          name="application_context"/>
      </explicit>
    </entity>

    <entity
      name="application_context_relationship">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="relating_context">
        <typename
          name="application_context"/>
      </explicit>
      <explicit
        name="related_context">
        <typename
          name="application_context"/>
      </explicit>
    </entity>

    <entity
      name="application_protocol_definition">
      <explicit
        name="status">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="application_interpreted_model_schema_name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="application_protocol_year">
        <typename
          name="year_number"/>
      </explicit>
      <explicit
        name="application">
        <typename
          name="application_context"/>
      </explicit>
    </entity>

    <entity
      name="applied_action_assignment"
      supertypes="action_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="action_items"/>
      </explicit>
    </entity>

    <entity
      name="applied_action_request_assignment"
      supertypes="action_request_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="action_request_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_approval_assignment"
      supertypes="approval_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="approval_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_certification_assignment"
      supertypes="certification_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="certification_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_classification_assignment"
      supertypes="classification_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="classification_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_contract_assignment"
      supertypes="contract_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="contract_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_date_and_time_assignment"
      supertypes="date_and_time_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="date_and_time_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_date_assignment"
      supertypes="date_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="date_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_document_reference"
      supertypes="document_reference">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="document_reference_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_document_usage_constraint_assignment"
      supertypes="document_usage_constraint_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="document_reference_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_effectivity_assignment"
      supertypes="effectivity_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="effectivity_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_event_occurrence_assignment"
      supertypes="event_occurrence_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="event_occurrence_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_external_identification_assignment"
      supertypes="external_identification_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="external_identification_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_group_assignment"
      supertypes="group_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="groupable_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_identification_assignment"
      supertypes="identification_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="identification_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_name_assignment"
      supertypes="name_assignment">
      <explicit
        name="item">
        <typename
          name="name_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_organization_assignment"
      supertypes="organization_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="organization_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_organizational_project_assignment"
      supertypes="organizational_project_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="project_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_person_and_organization_assignment"
      supertypes="person_and_organization_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="person_and_organization_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_security_classification_assignment"
      supertypes="security_classification_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="security_classification_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_time_interval_assignment"
      supertypes="time_interval_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="0"
          upper="?"/>
        <typename
          name="time_interval_item"/>
      </explicit>
    </entity>

    <entity
      name="approval">
      <explicit
        name="status">
        <typename
          name="approval_status"/>
      </explicit>
      <explicit
        name="level">
        <typename
          name="label"/>
      </explicit>
    </entity>

    <entity
      name="approval_assignment"
      abstract.supertype="YES">
      <explicit
        name="assigned_approval">
        <typename
          name="approval"/>
      </explicit>
      <derived
        name="role"
        expression="get_role (SELF)">
        <typename
          name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="approval_date_time">
      <explicit
        name="date_time">
        <typename
          name="date_time_select"/>
      </explicit>
      <explicit
        name="dated_approval">
        <typename
          name="approval"/>
      </explicit>
      <derived
        name="role"
        expression="get_role (SELF)">
        <typename
          name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="approval_person_organization">
      <explicit
        name="person_organization">
        <typename
          name="person_organization_select"/>
      </explicit>
      <explicit
        name="authorized_approval">
        <typename
          name="approval"/>
      </explicit>
      <explicit
        name="role">
        <typename
          name="approval_role"/>
      </explicit>
    </entity>

    <entity
      name="approval_relationship">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="relating_approval">
        <typename
          name="approval"/>
      </explicit>
      <explicit
        name="related_approval">
        <typename
          name="approval"/>
      </explicit>
    </entity>

    <entity
      name="approval_role">
      <explicit
        name="role">
        <typename
          name="label"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value (SELF)">
        <typename
          name="text"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
      </where>
    </entity>

    <entity
      name="approval_status">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
    </entity>

    <entity
      name="area_measure_with_unit"
      supertypes="measure_with_unit">
      <where
        label="WR1"
        expression="'CATALOG_DATA_INFORMATION_MIM_LF.AREA_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity
      name="area_unit"
      supertypes="named_unit">
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 2.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
      </where>
    </entity>

    <entity
      name="assembly_component_usage"
      super.expression="ONEOF ( NEXT_ASSEMBLY_USAGE_OCCURRENCE, SPECIFIED_HIGHER_USAGE_OCCURRENCE, PROMISSORY_USAGE_OCCURRENCE)"
      supertypes="product_definition_usage">
      <explicit
        name="reference_designator"
        optional="YES">
        <typename
          name="identifier"/>
      </explicit>
    </entity>

    <entity
      name="assembly_component_usage_substitute">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="definition"
        optional="YES">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="base">
        <typename
          name="assembly_component_usage"/>
      </explicit>
      <explicit
        name="substitute">
        <typename
          name="assembly_component_usage"/>
      </explicit>
      <unique
        label="UR1">
        <unique.attribute
          attribute="base"/>
        <unique.attribute
          attribute="substitute"/>
      </unique>
      <where
        label="WR1"
        expression="base.relating_product_definition :=: substitute.relating_product_definition">
      </where>
      <where
        label="WR2"
        expression="base :&lt;&gt;: substitute">
      </where>
    </entity>

    <entity
      name="attribute_classification_assignment"
      abstract.supertype="YES">
      <explicit
        name="assigned_class">
        <typename
          name="group"/>
      </explicit>
      <explicit
        name="attribute_name">
        <typename
          name="label"/>
      </explicit>
      <explicit
        name="role">
        <typename
          name="classification_role"/>
      </explicit>
    </entity>

    <entity
      name="attribute_language_assignment"
      supertypes="attribute_classification_assignment">
      <explicit
        name="assigned_class">
        <typename
          name="language"/>
        <redeclaration
          entity-ref="attribute_classification_assignment"/>
        </explicit>
        <explicit
          name="items">
          <aggregate
            type="SET"
            lower="1"
            upper="?"/>
          <typename
            name="attribute_language_item"/>
        </explicit>
        <where
          label="WR1"
          expression="SELF\attribute_classification_assignment.role.name IN ['primary', 'translated']">
        </where>
        <where
          label="WR2"
          expression="SELF\attribute_classification_assignment.attribute_name&lt;&gt; ''">
        </where>
      </entity>

      <entity
        name="attribute_value_assignment"
        abstract.supertype="YES">
        <explicit
          name="attribute_name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="attribute_value">
          <typename
            name="attribute_type"/>
        </explicit>
        <explicit
          name="role">
          <typename
            name="attribute_value_role"/>
        </explicit>
      </entity>

      <entity
        name="attribute_value_role">
        <explicit
          name="name">
          <typename
            name="label"/>
        </explicit>
        <explicit
          name="description"
          optional="YES">
          <typename
            name="text"/>
        </explicit>
      </entity>

      <entity
        name="axis1_placement"
        supertypes="placement">
        <explicit
          name="axis"
          optional="YES">
          <typename
            name="direction"/>
        </explicit>
        <derived
          name="z"
          expression="NVL(normalise(axis), dummy_gri || direction([0.0,0.0,1.0]))">
          <typename
            name="direction"/>
        </derived>
        <where
          label="WR1"
          expression="SELF\geometric_representation_item.dim = 3">
        </where>
      </entity>

      <entity
        name="axis2_placement_2d"
        supertypes="placement">
        <explicit
          name="ref_direction"
          optional="YES">
          <typename
            name="direction"/>
        </explicit>
        <derived
          name="p"
          expression="build_2axes(ref_direction)">
          <aggregate
            type="LIST"
            lower="2"
            upper="2"/>
          <typename
            name="direction"/>
        </derived>
        <where
          label="WR1"
          expression="SELF\geometric_representation_item.dim = 2">
        </where>
      </entity>

      <entity
        name="axis2_placement_3d"
        supertypes="placement">
        <explicit
          name="axis"
          optional="YES">
          <typename
            name="direction"/>
        </explicit>
        <explicit
          name="ref_direction"
          optional="YES">
          <typename
            name="direction"/>
        </explicit>
        <derived
          name="p"
          expression="build_axes(axis,ref_direction)">
          <aggregate
            type="LIST"
            lower="3"
            upper="3"/>
          <typename
            name="direction"/>
        </derived>
        <where
          label="WR1"
          expression="SELF\placement.location.dim = 3">
        </where>
        <where
          label="WR2"
          expression="(NOT (EXISTS (axis))) OR (axis.dim = 3)">
        </where>
        <where
          label="WR3"
          expression="(NOT (EXISTS (ref_direction))) OR (ref_direction.dim = 3)">
        </where>
        <where
          label="WR4"
          expression="(NOT (EXISTS (axis))) OR (NOT (EXISTS (ref_direction))) OR(cross_product(axis,ref_direction).magnitude &gt; 0.0)">
        </where>
      </entity>

      <entity
        name="b_spline_curve"
        super.expression="ONEOF ( UNIFORM_CURVE, B_SPLINE_CURVE_WITH_KNOTS, QUASI_UNIFORM_CURVE, BEZIER_CURVE) ANDOR RATIONAL_B_SPLINE_CURVE"
        supertypes="bounded_curve">
        <explicit
          name="degree">
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="control_points_list">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <typename
            name="cartesian_point"/>
        </explicit>
        <explicit
          name="curve_form">
          <typename
            name="b_spline_curve_form"/>
        </explicit>
        <explicit
          name="closed_curve">
          <builtintype
            type="LOGICAL"/>
        </explicit>
        <explicit
          name="self_intersect">
          <builtintype
            type="LOGICAL"/>
        </explicit>
        <derived
          name="upper_index_on_control_points"
          expression="(SIZEOF(control_points_list) - 1)">
          <builtintype
            type="INTEGER"/>
        </derived>
        <derived
          name="control_points"
          expression="list_to_array(control_points_list,0, upper_index_on_control_points)">
          <aggregate
            type="ARRAY"
            lower="0"
            upper="upper_index_on_control_points"/>
          <typename
            name="cartesian_point"/>
        </derived>
        <where
          label="WR1"
          expression="('CATALOG_DATA_INFORMATION_MIM_LF.UNIFORM_CURVE' IN TYPEOF(self)) OR('CATALOG_DATA_INFORMATION_MIM_LF.QUASI_UNIFORM_CURVE' IN TYPEOF(self)) OR('CATALOG_DATA_INFORMATION_MIM_LF.BEZIER_CURVE' IN TYPEOF(self)) OR('CATALOG_DATA_INFORMATION_MIM_LF.B_SPLINE_CURVE_WITH_KNOTS' IN TYPEOF(self))">
        </where>
      </entity>

      <entity
        name="b_spline_curve_with_knots"
        supertypes="b_spline_curve">
        <explicit
          name="knot_multiplicities">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="knots">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <typename
            name="parameter_value"/>
        </explicit>
        <explicit
          name="knot_spec">
          <typename
            name="knot_type"/>
        </explicit>
        <derived
          name="upper_index_on_knots"
          expression="SIZEOF(knots)">
          <builtintype
            type="INTEGER"/>
        </derived>
        <where
          label="WR1"
          expression="constraints_param_b_spline(degree, upper_index_on_knots, upper_index_on_control_points, knot_multiplicities, knots)">
        </where>
        <where
          label="WR2"
          expression="SIZEOF(knot_multiplicities) = upper_index_on_knots">
        </where>
      </entity>

      <entity
        name="b_spline_surface"
        super.expression="ONEOF ( B_SPLINE_SURFACE_WITH_KNOTS, UNIFORM_SURFACE, QUASI_UNIFORM_SURFACE, BEZIER_SURFACE) ANDOR RATIONAL_B_SPLINE_SURFACE"
        supertypes="bounded_surface">
        <explicit
          name="u_degree">
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="v_degree">
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="control_points_list">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <typename
            name="LIST"/>
        </explicit>
        <explicit
          name="surface_form">
          <typename
            name="b_spline_surface_form"/>
        </explicit>
        <explicit
          name="u_closed">
          <builtintype
            type="LOGICAL"/>
        </explicit>
        <explicit
          name="v_closed">
          <builtintype
            type="LOGICAL"/>
        </explicit>
        <explicit
          name="self_intersect">
          <builtintype
            type="LOGICAL"/>
        </explicit>
        <derived
          name="u_upper"
          expression="SIZEOF(control_points_list) - 1">
          <builtintype
            type="INTEGER"/>
        </derived>
        <derived
          name="v_upper"
          expression="SIZEOF(control_points_list[1]) - 1">
          <builtintype
            type="INTEGER"/>
        </derived>
        <derived
          name="control_points"
          expression="make_array_of_array(control_points_list,0,u_upper,0,v_upper)">
          <aggregate
            type="ARRAY"
            lower="0"
            upper="u_upper"/>
          <typename
            name="ARRAY"/>
        </derived>
        <where
          label="WR1"
          expression="('CATALOG_DATA_INFORMATION_MIM_LF.UNIFORM_SURFACE' IN TYPEOF(SELF)) OR('CATALOG_DATA_INFORMATION_MIM_LF.QUASI_UNIFORM_SURFACE' IN TYPEOF(SELF)) OR('CATALOG_DATA_INFORMATION_MIM_LF.BEZIER_SURFACE' IN TYPEOF(SELF)) OR('CATALOG_DATA_INFORMATION_MIM_LF.B_SPLINE_SURFACE_WITH_KNOTS' IN TYPEOF(SELF))">
        </where>
      </entity>

      <entity
        name="b_spline_surface_with_knots"
        supertypes="b_spline_surface">
        <explicit
          name="u_multiplicities">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="v_multiplicities">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <builtintype
            type="INTEGER"/>
        </explicit>
        <explicit
          name="u_knots">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <typename
            name="parameter_value"/>
        </explicit>
        <explicit
          name="v_knots">
          <aggregate
            type="LIST"
            lower="2"
            upper="?"/>
          <typename
            name="parameter_value"/>
        </explicit>
        <explicit
          name="knot_spec">
          <typename
            name="knot_type"/>
        </explicit>
        <derived
          name="knot_u_upper"
          expression="SIZEOF(u_knots)">
          <builtintype
            type="INTEGER"/>
        </derived>
        <derived
          name="knot_v_upper"
          expression="SIZEOF(v_knots)">
          <builtintype
            type="INTEGER"/>
        </derived>
        <where
          label="WR1"
          expression="constraints_param_b_spline(SELF\b_spline_surface.u_degree, knot_u_upper, SELF\b_spline_surface.u_upper, u_multiplicities, u_knots)">
        </where>
        <where
          label="WR2"
          expression="constraints_param_b_spline(SELF\b_spline_surface.v_degree, knot_v_upper, SELF\b_spline_surface.v_upper, v_multiplicities, v_knots)">
        </where>
        <where
          label="WR3"
          expression="SIZEOF(u_multiplicities) = knot_u_upper">
        </where>
        <where
          label="WR4"
          expression="SIZEOF(v_multiplicities) = knot_v_upper">
        </where>
      </entity>

      <entity
        name="bezier_curve"
        supertypes="b_spline_curve">
      </entity>

      <entity
        name="bezier_surface"
        supertypes="b_spline_surface">
      </entity>

      <entity
        name="boundary_curve"
        supertypes="composite_curve_on_surface">
        <where
          label="WR1"
          expression="SELF\composite_curve.closed_curve">
        </where>
      </entity>

      <entity
        name="bounded_curve"
        super.expression="ONEOF ( POLYLINE, B_SPLINE_CURVE, TRIMMED_CURVE, COMPOSITE_CURVE)"
        supertypes="curve">
      </entity>

      <entity
        name="bounded_surface"
        super.expression="ONEOF ( B_SPLINE_SURFACE, RECTANGULAR_TRIMMED_SURFACE, CURVE_BOUNDED_SURFACE, RECTANGULAR_COMPOSITE_SURFACE)"
        supertypes="surface">
      </entity>

      <entity
        name="breakdown_context"
        supertypes="product_definition_relationship">
      </entity>

      <entity
        name="breakdown_element_group_assignment"
        supertypes="group_assignment">
        <explicit
          name="assigned_group">
          <typename
            name="product_definition_element_relationship"/>
          <redeclaration
            entity-ref="group_assignment"/>
          </explicit>
          <explicit
            name="items">
            <aggregate
              type="SET"
              lower="1"
              upper="1"/>
            <typename
              name="product_definition_or_breakdown_element_usage"/>
          </explicit>
        </entity>

        <entity
          name="breakdown_element_realization"
          supertypes="characterized_object product_definition_element_relationship">
        </entity>

        <entity
          name="breakdown_element_usage"
          supertypes="product_definition_relationship">
        </entity>

        <entity
          name="breakdown_of"
          supertypes="product_definition_relationship">
        </entity>

        <entity
          name="calendar_date"
          supertypes="date">
          <explicit
            name="day_component">
            <typename
              name="day_in_month_number"/>
          </explicit>
          <explicit
            name="month_component">
            <typename
              name="month_in_year_number"/>
          </explicit>
          <where
            label="WR1"
            expression="valid_calendar_date (SELF)">
          </where>
        </entity>

        <entity
          name="cartesian_point"
          supertypes="point">
          <explicit
            name="coordinates">
            <aggregate
              type="LIST"
              lower="1"
              upper="3"/>
            <typename
              name="length_measure"/>
          </explicit>
        </entity>

        <entity
          name="cartesian_transformation_operator"
          super.expression="ONEOF ( CARTESIAN_TRANSFORMATION_OPERATOR_2D, CARTESIAN_TRANSFORMATION_OPERATOR_3D)"
          supertypes="geometric_representation_item functionally_defined_transformation">
          <explicit
            name="axis1"
            optional="YES">
            <typename
              name="direction"/>
          </explicit>
          <explicit
            name="axis2"
            optional="YES">
            <typename
              name="direction"/>
          </explicit>
          <explicit
            name="local_origin">
            <typename
              name="cartesian_point"/>
          </explicit>
          <explicit
            name="scale"
            optional="YES">
            <builtintype
              type="REAL"/>
          </explicit>
          <derived
            name="scl"
            expression="NVL(scale, 1.0)">
            <builtintype
              type="REAL"/>
          </derived>
          <where
            label="WR1"
            expression="scl &gt; 0.0">
          </where>
        </entity>

        <entity
          name="cartesian_transformation_operator_2d"
          supertypes="cartesian_transformation_operator">
          <derived
            name="u"
            expression="base_axis(2,SELF\cartesian_transformation_operator.axis1, SELF\cartesian_transformation_operator.axis2,?)">
            <aggregate
              type="LIST"
              lower="2"
              upper="2"/>
            <typename
              name="direction"/>
          </derived>
          <where
            label="WR1"
            expression="SELF\geometric_representation_item.dim = 2">
          </where>
        </entity>

        <entity
          name="cartesian_transformation_operator_3d"
          supertypes="cartesian_transformation_operator">
          <explicit
            name="axis3"
            optional="YES">
            <typename
              name="direction"/>
          </explicit>
          <derived
            name="u"
            expression="base_axis(3,SELF\cartesian_transformation_operator.axis1, SELF\cartesian_transformation_operator.axis2,axis3)">
            <aggregate
              type="LIST"
              lower="3"
              upper="3"/>
            <typename
              name="direction"/>
          </derived>
          <where
            label="WR1"
            expression="SELF\geometric_representation_item.dim = 3">
          </where>
        </entity>

        <entity
          name="celsius_temperature_measure_with_unit"
          supertypes="measure_with_unit">
          <where
            label="WR1"
            expression="'CATALOG_DATA_INFORMATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
          </where>
        </entity>

        <entity
          name="centre_of_symmetry"
          supertypes="derived_shape_aspect">
          <where
            label="WR1"
            expression="SIZEOF(QUERY(sadr&lt;*SELF\derived_shape_aspect.deriving_relationships| NOT('CATALOG_DATA_INFORMATION_MIM_LF.SYMMETRIC_SHAPE_ASPECT' IN TYPEOF(sadr\shape_aspect_relationship.related_shape_aspect))))=0">
          </where>
        </entity>

        <entity
          name="certification">
          <explicit
            name="name">
            <typename
              name="label"/>
          </explicit>
          <explicit
            name="purpose">
            <typename
              name="text"/>
          </explicit>
          <explicit
            name="kind">
            <typename
              name="certification_type"/>
          </explicit>
        </entity>

        <entity
          name="certification_assignment"
          abstract.supertype="YES">
          <explicit
            name="assigned_certification">
            <typename
              name="certification"/>
          </explicit>
          <derived
            name="role"
            expression="get_role (SELF)">
            <typename
              name="object_role"/>
          </derived>
          <where
            label="WR1"
            expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
          </where>
        </entity>

        <entity
          name="certification_type">
          <explicit
            name="description">
            <typename
              name="label"/>
          </explicit>
        </entity>

        <entity
          name="characterized_class"
          supertypes="characterized_object class">
        </entity>

        <entity
          name="characterized_object">
          <explicit
            name="name">
            <typename
              name="label"/>
          </explicit>
          <explicit
            name="description"
            optional="YES">
            <typename
              name="text"/>
          </explicit>
        </entity>

        <entity
          name="characterized_object_relationship">
          <explicit
            name="name">
            <typename
              name="label"/>
          </explicit>
          <explicit
            name="description"
            optional="YES">
            <typename
              name="text"/>
          </explicit>
          <explicit
            name="relating_object">
            <typename
              name="characterized_object"/>
          </explicit>
          <explicit
            name="related_object">
            <typename
              name="characterized_object"/>
          </explicit>
        </entity>

        <entity
          name="circle"
          supertypes="conic">
          <explicit
            name="radius">
            <typename
              name="positive_length_measure"/>
          </explicit>
        </entity>

        <entity
          name="class"
          supertypes="group">
        </entity>

        <entity
          name="class_by_extension"
          supertypes="class">
        </entity>

        <entity
          name="class_by_intension"
          supertypes="class">
        </entity>

        <entity
          name="class_system"
          supertypes="group">
        </entity>

        <entity
          name="class_usage_effectivity_context_assignment"
          supertypes="effectivity_context_assignment">
          <explicit
            name="items">
            <aggregate
              type="SET"
              lower="1"
              upper="?"/>
            <typename
              name="class_usage_effectivity_context_item"/>
          </explicit>
          <where
            label="WR1"
            expression="SELF.role.name = 'class usage influence'">
          </where>
          <where
            label="WR2"
            expression="SIZEOF(QUERY(i &lt;* SELF.items | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(i)))) = 0">
          </where>
          <where
            label="WR3"
            expression="('CATALOG_DATA_INFORMATION_MIM_LF.APPLIED_EFFECTIVITY_ASSIGNMENT' IN TYPEOF(SELF.assigned_effectivity_assignment)) AND(SIZEOF(TYPEOF(SELF.assigned_effectivity_assignment.assigned_effectivity)) = 1) AND(SELF.assigned_effectivity_assignment.assigned_effectivity.id = 'class usage') AND(SIZEOF(QUERY(i &lt;* SELF.assigned_effectivity_assignment\applied_effectivity_assignment.items | NOT('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE' IN TYPEOF(i)))) = 0)">
          </where>
        </entity>

        <entity
          name="classification_assignment"
          abstract.supertype="YES">
          <explicit
            name="assigned_class">
            <typename
              name="group"/>
          </explicit>
          <explicit
            name="role">
            <typename
              name="classification_role"/>
          </explicit>
        </entity>

        <entity
          name="classification_role">
          <explicit
            name="name">
            <typename
              name="label"/>
          </explicit>
          <explicit
            name="description"
            optional="YES">
            <typename
              name="text"/>
          </explicit>
        </entity>

        <entity
          name="composite_curve"
          supertypes="bounded_curve">
          <explicit
            name="segments">
            <aggregate
              type="LIST"
              lower="1"
              upper="?"/>
            <typename
              name="composite_curve_segment"/>
          </explicit>
          <explicit
            name="self_intersect">
            <builtintype
              type="LOGICAL"/>
          </explicit>
          <derived
            name="n_segments"
            expression="SIZEOF(segments)">
            <builtintype
              type="INTEGER"/>
          </derived>
          <derived
            name="closed_curve"
            expression="segments[n_segments].transition &lt;&gt; discontinuous">
            <builtintype
              type="LOGICAL"/>
          </derived>
          <where
            label="WR1"
            expression="((NOT closed_curve) AND (SIZEOF(QUERY(temp &lt;* segments | temp.transition = discontinuous)) = 1)) OR((closed_curve) AND (SIZEOF(QUERY(temp &lt;* segments | temp.transition = discontinuous)) = 0))">
          </where>
        </entity>

        <entity
          name="composite_curve_on_surface"
          super.expression="BOUNDARY_CURVE"
          supertypes="composite_curve">
          <derived
            name="basis_surface"
            expression="get_basis_surface(SELF)">
            <aggregate
              type="SET"
              lower="0"
              upper="2"/>
            <typename
              name="surface"/>
          </derived>
          <where
            label="WR1"
            expression="SIZEOF(basis_surface) &gt; 0">
          </where>
          <where
            label="WR2"
            expression="constraints_composite_curve_on_surface(SELF)">
          </where>
        </entity>

        <entity
          name="composite_curve_segment"
          supertypes="founded_item">
          <explicit
            name="transition">
            <typename
              name="transition_code"/>
          </explicit>
          <explicit
            name="same_sense">
            <builtintype
              type="BOOLEAN"/>
          </explicit>
          <explicit
            name="parent_curve">
            <typename
              name="curve"/>
          </explicit>
          <inverse
            name="using_curves"
            entity="composite_curve"
            attribute="segments">
            <inverse.aggregate
              type="BAG"
              lower="1"
              upper="?"/>
          </inverse>
          <where
            label="WR1"
            expression="('CATALOG_DATA_INFORMATION_MIM_LF.BOUNDED_CURVE' IN TYPEOF(parent_curve))">
          </where>
        </entity>

        <entity
          name="compound_representation_item"
          supertypes="representation_item">
          <explicit
            name="item_element">
            <typename
              name="compound_item_definition"/>
          </explicit>
        </entity>

        <entity
          name="concept_feature_operator">
          <explicit
            name="name">
            <typename
              name="label"/>
          </explicit>
          <explicit
            name="description"
            optional="YES">
            <typename
              name="text"/>
          </explicit>
        </entity>

        <entity
          name="concept_feature_relationship">
          <explicit
            name="name">
            <typename
              name="label"/>
          </explicit>
          <explicit
            name="description"
            optional="YES">
            <typename
              name="text"/>
          </explicit>
          <explicit
            name="relating_product_concept_feature">
            <typename
              name="product_concept_feature"/>
          </explicit>
          <explicit
            name="related_product_concept_feature">
            <typename
              name="product_concept_feature"/>
          </explicit>
        </entity>

        <entity
          name="concept_feature_relationship_with_condition"
          supertypes="concept_feature_relationship">
          <explicit
            name="conditional_operator">
            <typename
              name="concept_feature_operator"/>
          </explicit>
        </entity>

        <entity
          name="conditional_concept_feature"
          supertypes="product_concept_feature">
          <explicit
            name="condition">
            <typename
              name="concept_feature_relationship_with_condition"/>
          </explicit>
        </entity>

        <entity
          name="configurable_item"
          supertypes="configuration_item">
          <explicit
            name="item_concept_feature">
            <aggregate
              type="SET"
              lower="1"
              upper="?"/>
            <typename
              name="product_concept_feature_association"/>
          </explicit>
        </entity>

        <entity
          name="configuration_design">
          <explicit
            name="configuration">
            <typename
              name="configuration_item"/>
          </explicit>
          <explicit
            name="design">
            <typename
              name="configuration_design_item"/>
          </explicit>
          <derived
            name="name"
            expression="get_name_value (SELF)">
            <typename
              name="label"/>
          </derived>
          <derived
            name="description"
            expression="get_description_value (SELF)">
            <typename
              name="text"/>
          </derived>
          <unique
            label="UR1">
            <unique.attribute
              attribute="configuration"/>
            <unique.attribute
              attribute="design"/>
          </unique>
          <where
            label="WR1"
            expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' +'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
          </where>
          <where
            label="WR2"
            expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' +'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
          </where>
        </entity>

        <entity
          name="configuration_effectivity"
          supertypes="product_definition_effectivity">
          <explicit
            name="configuration">
            <typename
              name="configuration_design"/>
          </explicit>
          <unique
            label="UR1">
            <unique.attribute
              attribute="configuration"/>
            <unique.attribute
              attribute="usage"/>
            <unique.attribute
              attribute="id"/>
          </unique>
          <where
            label="WR1"
            expression="'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION_USAGE' IN TYPEOF (SELF\product_definition_effectivity.usage)">
          </where>
        </entity>

        <entity
          name="configuration_item">
          <explicit
            name="id">
            <typename
              name="identifier"/>
          </explicit>
          <explicit
            name="name">
            <typename
              name="label"/>
          </explicit>
          <explicit
            name="description"
            optional="YES">
            <typename
              name="text"/>
          </explicit>
          <explicit
            name="item_concept">
            <typename
              name="product_concept"/>
          </explicit>
          <explicit
            name="purpose"
            optional="YES">
            <typename
              name="label"/>
          </explicit>
        </entity>

        <entity
          name="configured_effectivity_assignment"
          supertypes="effectivity_assignment">
          <explicit
            name="items">
            <aggregate
              type="SET"
              lower="1"
              upper="?"/>
            <typename
              name="configured_effectivity_item"/>
          </explicit>
          <where
            label="WR1"
            expression="(SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.EFFECTIVITY'] * TYPEOF(SELF.assigned_effectivity)) = 1) AND (SELF.assigned_effectivity.id = 'configuration validity')">
          </where>
          <where
            label="WR2"
            expression="SIZEOF(SELF.items) = 1">
          </where>
          <where
            label="WR3"
            expression="SIZEOF(QUERY(i &lt;* SELF.items | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(i)) OR NOT (i\product_definition.frame_of_reference.name IN ['conceptual definition','part occurrence', 'functional definition','alternative definition']))) = 0">
          </where>
          <where
            label="WR4"
            expression="SELF.role.name IN ['design', 'usage']">
          </where>
          <where
            label="WR5"
            expression="(SELF.role.name &lt;&gt; 'design') OR (SIZEOF(QUERY(i &lt;* SELF.items | ('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(i)) AND (i\product_definition.frame_of_reference.name = 'part occurrence'))) = 0)">
          </where>
          <where
            label="WR6"
            expression="(SELF.role.name &lt;&gt; 'usage') OR (SIZEOF(QUERY(i &lt;* SELF.items | ('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(i)) AND (i\product_definition.frame_of_reference.name = 'conceptual definition'))) = 0)">
          </where>
          <where
            label="WR7"
            expression="SELF.role.description IN ['exception', 'inherited', 'local']">
          </where>
          <where
            label="WR8"
            expression="SIZEOF(QUERY(x &lt;* USEDIN(SELF,'CATALOG_DATA_INFORMATION_MIM_LF.' + 'EFFECTIVITY_CONTEXT_ASSIGNMENT.ASSIGNED_EFFECTIVITY_ASSIGNMENT') | 'CATALOG_DATA_INFORMATION_MIM_LF.CONFIGURED_EFFECTIVITY_CONTEXT_ASSIGNMENT' IN TYPEOF(x))) = 1">
          </where>
        </entity>

        <entity
          name="configured_effectivity_context_assignment"
          supertypes="effectivity_context_assignment">
          <explicit
            name="assigned_effectivity_assignment">
            <typename
              name="configured_effectivity_assignment"/>
            <redeclaration
              entity-ref="effectivity_context_assignment"/>
            </explicit>
            <explicit
              name="items">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="configured_effectivity_context_item"/>
            </explicit>
            <where
              label="WR1"
              expression="SIZEOF(SELF.items) = 1">
            </where>
          </entity>

          <entity
            name="conic"
            super.expression="ONEOF ( CIRCLE, ELLIPSE, HYPERBOLA, PARABOLA)"
            supertypes="curve">
            <explicit
              name="position">
              <typename
                name="axis2_placement"/>
            </explicit>
          </entity>

          <entity
            name="conical_surface"
            supertypes="elementary_surface">
            <explicit
              name="radius">
              <typename
                name="length_measure"/>
            </explicit>
            <explicit
              name="semi_angle">
              <typename
                name="plane_angle_measure"/>
            </explicit>
            <where
              label="WR1"
              expression="radius &gt;= 0.0">
            </where>
          </entity>

          <entity
            name="constructive_geometry_representation"
            supertypes="representation">
            <where
              label="WR1"
              expression="('CATALOG_DATA_INFORMATION_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF.context_of_items)) AND ({2 &lt;= SELF.context_of_items\geometric_representation_context. coordinate_space_dimension &lt;= 3})">
            </where>
            <where
              label="WR2"
              expression="SIZEOF(QUERY(cgr_i &lt;* SELF.items | SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.PLACEMENT', 'CATALOG_DATA_INFORMATION_MIM_LF.CURVE', 'CATALOG_DATA_INFORMATION_MIM_LF.EDGE', 'CATALOG_DATA_INFORMATION_MIM_LF.FACE', 'CATALOG_DATA_INFORMATION_MIM_LF.POINT', 'CATALOG_DATA_INFORMATION_MIM_LF.SURFACE', 'CATALOG_DATA_INFORMATION_MIM_LF.FACE_SURFACE', 'CATALOG_DATA_INFORMATION_MIM_LF.VERTEX_POINT'] * TYPEOF(cgr_i)) &lt;&gt; 1)) = 0">
            </where>
            <where
              label="WR3"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP.REP_2')) &gt; 0">
            </where>
            <where
              label="WR4"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'REPRESENTATION_MAP.MAPPED_REPRESENTATION')) = 0">
            </where>
          </entity>

          <entity
            name="constructive_geometry_representation_relationship"
            supertypes="representation_relationship">
            <where
              label="WR1"
              expression="(SELF.rep_1.context_of_items :=: SELF.rep_2.context_of_items) AND ('CATALOG_DATA_INFORMATION_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF(SELF.rep_1.context_of_items))">
            </where>
            <where
              label="WR2"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.CONSTRUCTIVE_GEOMETRY_REPRESENTATION' IN TYPEOF(SELF.rep_2)">
            </where>
            <where
              label="WR3"
              expression="SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.SHAPE_REPRESENTATION', 'CATALOG_DATA_INFORMATION_MIM_LF.CONSTRUCTIVE_GEOMETRY_REPRESENTATION'] * TYPEOF(SELF.rep_1)) = 1">
            </where>
            <where
              label="WR4"
              expression="NOT('CATALOG_DATA_INFORMATION_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION' IN TYPEOF(SELF))">
            </where>
          </entity>

          <entity
            name="context_dependent_shape_representation">
            <explicit
              name="representation_relation">
              <typename
                name="shape_representation_relationship"/>
            </explicit>
            <explicit
              name="represented_product_relation">
              <typename
                name="product_definition_shape"/>
            </explicit>
            <derived
              name="description"
              expression="get_description_value (SELF)">
              <typename
                name="text"/>
            </derived>
            <derived
              name="name"
              expression="get_name_value (SELF)">
              <typename
                name="label"/>
            </derived>
            <where
              label="WR1"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF (SELF.represented_product_relation.definition)">
            </where>
            <where
              label="WR2"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
            </where>
            <where
              label="WR3"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="context_dependent_unit"
            supertypes="named_unit">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
          </entity>

          <entity
            name="contract">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="purpose">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="kind">
              <typename
                name="contract_type"/>
            </explicit>
          </entity>

          <entity
            name="contract_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_contract">
              <typename
                name="contract"/>
            </explicit>
            <derived
              name="role"
              expression="get_role (SELF)">
              <typename
                name="object_role"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="contract_type">
            <explicit
              name="description">
              <typename
                name="label"/>
            </explicit>
          </entity>

          <entity
            name="conversion_based_unit"
            supertypes="named_unit">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="conversion_factor">
              <typename
                name="measure_with_unit"/>
            </explicit>
          </entity>

          <entity
            name="coordinated_universal_time_offset">
            <explicit
              name="hour_offset">
              <builtintype
                type="INTEGER"/>
            </explicit>
            <explicit
              name="minute_offset"
              optional="YES">
              <builtintype
                type="INTEGER"/>
            </explicit>
            <explicit
              name="sense">
              <typename
                name="ahead_or_behind"/>
            </explicit>
            <derived
              name="actual_minute_offset"
              expression="NVL(minute_offset,0)">
              <builtintype
                type="INTEGER"/>
            </derived>
            <where
              label="WR1"
              expression="{ 0 &lt;= hour_offset &lt; 24 }">
            </where>
            <where
              label="WR2"
              expression="{ 0 &lt;= actual_minute_offset &lt;= 59 }">
            </where>
            <where
              label="WR3"
              expression="NOT (((hour_offset &lt;&gt; 0) OR (actual_minute_offset &lt;&gt;0)) AND (sense = exact))">
            </where>
          </entity>

          <entity
            name="curve"
            super.expression="ONEOF ( LINE, CONIC, PCURVE, SURFACE_CURVE, OFFSET_CURVE_2D, OFFSET_CURVE_3D, CURVE_REPLICA)"
            supertypes="geometric_representation_item">
          </entity>

          <entity
            name="curve_bounded_surface"
            supertypes="bounded_surface">
            <explicit
              name="basis_surface">
              <typename
                name="surface"/>
            </explicit>
            <explicit
              name="boundaries">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="boundary_curve"/>
            </explicit>
            <explicit
              name="implicit_outer">
              <builtintype
                type="BOOLEAN"/>
            </explicit>
            <where
              label="WR1"
              expression="(NOT implicit_outer) OR(SIZEOF (QUERY (temp &lt;* boundaries |'CATALOG_DATA_INFORMATION_MIM_LF.OUTER_BOUNDARY_CURVE' IN TYPEOF(temp))) = 0)">
            </where>
            <where
              label="WR2"
              expression="(NOT(implicit_outer)) OR('CATALOG_DATA_INFORMATION_MIM_LF.BOUNDED_SURFACE' IN TYPEOF(basis_surface))">
            </where>
            <where
              label="WR3"
              expression="SIZEOF(QUERY(temp &lt;* boundaries |'CATALOG_DATA_INFORMATION_MIM_LF.OUTER_BOUNDARY_CURVE' IN TYPEOF(temp))) &lt;= 1">
            </where>
            <where
              label="WR4"
              expression="SIZEOF(QUERY(temp &lt;* boundaries |(temp\composite_curve_on_surface.basis_surface [1] &lt;&gt; SELF.basis_surface))) = 0">
            </where>
          </entity>

          <entity
            name="curve_replica"
            supertypes="curve">
            <explicit
              name="parent_curve">
              <typename
                name="curve"/>
            </explicit>
            <explicit
              name="transformation">
              <typename
                name="cartesian_transformation_operator"/>
            </explicit>
            <where
              label="WR1"
              expression="transformation.dim = parent_curve.dim">
            </where>
            <where
              label="WR2"
              expression="acyclic_curve_replica (SELF, parent_curve)">
            </where>
          </entity>

          <entity
            name="cylindrical_surface"
            supertypes="elementary_surface">
            <explicit
              name="radius">
              <typename
                name="positive_length_measure"/>
            </explicit>
          </entity>

          <entity
            name="data_environment">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="elements">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="property_definition_representation"/>
            </explicit>
          </entity>

          <entity
            name="date">
            <explicit
              name="year_component">
              <typename
                name="year_number"/>
            </explicit>
          </entity>

          <entity
            name="date_and_time">
            <explicit
              name="date_component">
              <typename
                name="date"/>
            </explicit>
            <explicit
              name="time_component">
              <typename
                name="local_time"/>
            </explicit>
          </entity>

          <entity
            name="date_and_time_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_date_and_time">
              <typename
                name="date_and_time"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="date_time_role"/>
            </explicit>
          </entity>

          <entity
            name="date_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_date">
              <typename
                name="date"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="date_role"/>
            </explicit>
          </entity>

          <entity
            name="date_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <derived
              name="description"
              expression="get_description_value (SELF)">
              <typename
                name="text"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="date_time_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <derived
              name="description"
              expression="get_description_value (SELF)">
              <typename
                name="text"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="dated_effectivity"
            supertypes="effectivity">
            <explicit
              name="effectivity_end_date"
              optional="YES">
              <typename
                name="date_time_or_event_occurrence"/>
            </explicit>
            <explicit
              name="effectivity_start_date">
              <typename
                name="date_time_or_event_occurrence"/>
            </explicit>
          </entity>

          <entity
            name="definitional_representation"
            supertypes="representation">
            <where
              label="WR1"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.PARAMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF (SELF\representation.context_of_items)">
            </where>
          </entity>

          <entity
            name="definitional_representation_relationship"
            supertypes="representation_relationship">
            <where
              label="WR1"
              expression="acyclic_representation_relationship(SELF,[SELF\representation_relationship.rep_2],'CATALOG_DATA_INFORMATION_MIM_LF.'+'REPRESENTATION')">
            </where>
          </entity>

          <entity
            name="degenerate_pcurve"
            supertypes="point">
            <explicit
              name="basis_surface">
              <typename
                name="surface"/>
            </explicit>
            <explicit
              name="reference_to_curve">
              <typename
                name="definitional_representation"/>
            </explicit>
            <where
              label="WR1"
              expression="SIZEOF(reference_to_curve\representation.items) = 1">
            </where>
            <where
              label="WR2"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.CURVE' IN TYPEOF(reference_to_curve\representation.items[1])">
            </where>
            <where
              label="WR3"
              expression="reference_to_curve\representation. items[1]\geometric_representation_item.dim =2">
            </where>
          </entity>

          <entity
            name="degenerate_toroidal_surface"
            supertypes="toroidal_surface">
            <explicit
              name="select_outer">
              <builtintype
                type="BOOLEAN"/>
            </explicit>
            <where
              label="WR1"
              expression="major_radius &lt; minor_radius">
            </where>
          </entity>

          <entity
            name="derived_shape_aspect"
            super.expression="ONEOF ( APEX, CENTRE_OF_SYMMETRY, GEOMETRIC_ALIGNMENT, GEOMETRIC_INTERSECTION, PARALLEL_OFFSET, PERPENDICULAR_TO, EXTENSION, TANGENT)"
            supertypes="shape_aspect">
            <inverse
              name="deriving_relationships"
              entity="shape_aspect_relationship"
              attribute="relating_shape_aspect">
              <inverse.aggregate
                type="SET"
                lower="1"
                upper="?"/>
            </inverse>
            <where
              label="WR1"
              expression="SIZEOF (QUERY (dr &lt;* SELF\derived_shape_aspect.deriving_relationships | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.' +'SHAPE_ASPECT_DERIVING_RELATIONSHIP' IN TYPEOF (dr)))) = 0">
            </where>
          </entity>

          <entity
            name="derived_unit">
            <explicit
              name="elements">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="derived_unit_element"/>
            </explicit>
            <derived
              name="name"
              expression="get_name_value (SELF)">
              <typename
                name="label"/>
            </derived>
            <where
              label="WR1"
              expression="(SIZEOF (elements) &gt; 1) OR ((SIZEOF (elements) = 1) AND (elements[1].exponent &lt;&gt; 1.0))">
            </where>
            <where
              label="WR2"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="derived_unit_element">
            <explicit
              name="unit">
              <typename
                name="named_unit"/>
            </explicit>
            <explicit
              name="exponent">
              <builtintype
                type="REAL"/>
            </explicit>
          </entity>

          <entity
            name="description_attribute">
            <explicit
              name="attribute_value">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="described_item">
              <typename
                name="description_attribute_select"/>
            </explicit>
          </entity>

          <entity
            name="descriptive_representation_item"
            supertypes="representation_item">
            <explicit
              name="description">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="dimensional_characteristic_representation">
            <explicit
              name="dimension">
              <typename
                name="dimensional_characteristic"/>
            </explicit>
            <explicit
              name="representation">
              <typename
                name="shape_dimension_representation"/>
            </explicit>
          </entity>

          <entity
            name="dimensional_exponents">
            <explicit
              name="length_exponent">
              <builtintype
                type="REAL"/>
            </explicit>
            <explicit
              name="mass_exponent">
              <builtintype
                type="REAL"/>
            </explicit>
            <explicit
              name="time_exponent">
              <builtintype
                type="REAL"/>
            </explicit>
            <explicit
              name="electric_current_exponent">
              <builtintype
                type="REAL"/>
            </explicit>
            <explicit
              name="thermodynamic_temperature_exponent">
              <builtintype
                type="REAL"/>
            </explicit>
            <explicit
              name="amount_of_substance_exponent">
              <builtintype
                type="REAL"/>
            </explicit>
            <explicit
              name="luminous_intensity_exponent">
              <builtintype
                type="REAL"/>
            </explicit>
          </entity>

          <entity
            name="dimensional_location"
            super.expression="ONEOF ( ANGULAR_LOCATION, DIMENSIONAL_LOCATION_WITH_PATH)"
            supertypes="shape_aspect_relationship">
          </entity>

          <entity
            name="dimensional_location_with_path"
            supertypes="dimensional_location">
            <explicit
              name="path">
              <typename
                name="shape_aspect"/>
            </explicit>
          </entity>

          <entity
            name="dimensional_size"
            super.expression="ONEOF ( ANGULAR_SIZE, DIMENSIONAL_SIZE_WITH_PATH)">
            <explicit
              name="applies_to">
              <typename
                name="shape_aspect"/>
            </explicit>
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <where
              label="WR1"
              expression="applies_to.product_definitional = TRUE">
            </where>
          </entity>

          <entity
            name="dimensional_size_with_path"
            supertypes="dimensional_size">
            <explicit
              name="path">
              <typename
                name="shape_aspect"/>
            </explicit>
          </entity>

          <entity
            name="directed_action"
            supertypes="executed_action">
            <explicit
              name="directive">
              <typename
                name="action_directive"/>
            </explicit>
          </entity>

          <entity
            name="directed_dimensional_location"
            supertypes="dimensional_location">
          </entity>

          <entity
            name="direction"
            supertypes="geometric_representation_item">
            <explicit
              name="direction_ratios">
              <aggregate
                type="LIST"
                lower="2"
                upper="3"/>
              <builtintype
                type="REAL"/>
            </explicit>
            <where
              label="WR1"
              expression="SIZEOF(QUERY(tmp &lt;* direction_ratios | tmp &lt;&gt; 0.0)) &gt; 0">
            </where>
          </entity>

          <entity
            name="document">
            <explicit
              name="id">
              <typename
                name="identifier"/>
            </explicit>
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="kind">
              <typename
                name="document_type"/>
            </explicit>
            <inverse
              name="representation_types"
              entity="document_representation_type"
              attribute="represented_document">
              <inverse.aggregate
                type="SET"
                lower="0"
                upper="?"/>
            </inverse>
          </entity>

          <entity
            name="document_file"
            supertypes="document characterized_object">
            <where
              label="WR1"
              expression="SELF\characterized_object.name = ''">
            </where>
            <where
              label="WR2"
              expression="NOT EXISTS(SELF\characterized_object.description)">
            </where>
            <where
              label="WR3"
              expression="SIZEOF(QUERY(drt &lt;* SELF\document.representation_types | drt.name IN ['digital','physical'])) = 1">
            </where>
          </entity>

          <entity
            name="document_product_association">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_document">
              <typename
                name="document"/>
            </explicit>
            <explicit
              name="related_product">
              <typename
                name="product_or_formation_or_definition"/>
            </explicit>
          </entity>

          <entity
            name="document_product_equivalence"
            supertypes="document_product_association">
            <where
              label="WR1"
              expression="SELF\document_product_association.name = 'equivalence'">
            </where>
            <where
              label="WR2"
              expression="NOT('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT' IN TYPEOF(SELF\document_product_association.related_product)) OR ((SELF\document_product_association.relating_document.kind. product_data_type = 'configuration controlled document') AND (SIZEOF(QUERY(prpc &lt;* USEDIN(SELF\document_product_association.related_product,'CATALOG_DATA_INFORMATION_MIM_LF.' + 'PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document')) = 1))">
            </where>
            <where
              label="WR3"
              expression="NOT('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION_FORMATION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document version') AND (SIZEOF(QUERY(prpc &lt;* USEDIN(SELF.related_product\product_definition_formation.of_product, 'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document')) = 1))">
            </where>
            <where
              label="WR4"
              expression="NOT('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF(SELF.related_product)) OR ((SELF\document_product_association.relating_document.kind.product_data_type = 'configuration controlled document definition') AND (SIZEOF(QUERY(prpc &lt;* USEDIN(SELF\document_product_association.related_product\product_definition.formation.of_product, 'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'document')) = 1))">
            </where>
          </entity>

          <entity
            name="document_reference"
            abstract.supertype="YES">
            <explicit
              name="assigned_document">
              <typename
                name="document"/>
            </explicit>
            <explicit
              name="source">
              <typename
                name="label"/>
            </explicit>
            <derived
              name="role"
              expression="get_role (SELF)">
              <typename
                name="object_role"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="document_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_document">
              <typename
                name="document"/>
            </explicit>
            <explicit
              name="related_document">
              <typename
                name="document"/>
            </explicit>
          </entity>

          <entity
            name="document_representation_type">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="represented_document">
              <typename
                name="document"/>
            </explicit>
          </entity>

          <entity
            name="document_type">
            <explicit
              name="product_data_type">
              <typename
                name="label"/>
            </explicit>
          </entity>

          <entity
            name="document_usage_constraint">
            <explicit
              name="source">
              <typename
                name="document"/>
            </explicit>
            <explicit
              name="subject_element">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="subject_element_value">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="document_usage_constraint_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_document_usage">
              <typename
                name="document_usage_constraint"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="document_usage_role"/>
            </explicit>
          </entity>

          <entity
            name="document_usage_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="edge"
            super.expression="ONEOF ( EDGE_CURVE, ORIENTED_EDGE)"
            supertypes="topological_representation_item">
            <explicit
              name="edge_start">
              <typename
                name="vertex"/>
            </explicit>
            <explicit
              name="edge_end">
              <typename
                name="vertex"/>
            </explicit>
          </entity>

          <entity
            name="edge_curve"
            supertypes="edge geometric_representation_item">
            <explicit
              name="edge_geometry">
              <typename
                name="curve"/>
            </explicit>
            <explicit
              name="same_sense">
              <builtintype
                type="BOOLEAN"/>
            </explicit>
          </entity>

          <entity
            name="edge_loop"
            supertypes="loop path">
            <derived
              name="ne"
              expression="SIZEOF(SELF\path.edge_list)">
              <builtintype
                type="INTEGER"/>
            </derived>
            <where
              label="WR1"
              expression="(SELF\path.edge_list[1].edge_start) :=:(SELF\path.edge_list[ne].edge_end)">
            </where>
          </entity>

          <entity
            name="effectivity"
            super.expression="ONEOF ( SERIAL_NUMBERED_EFFECTIVITY, DATED_EFFECTIVITY, LOT_EFFECTIVITY, TIME_INTERVAL_BASED_EFFECTIVITY)">
            <explicit
              name="id">
              <typename
                name="identifier"/>
            </explicit>
            <derived
              name="name"
              expression="get_name_value(SELF)">
              <typename
                name="label"/>
            </derived>
            <derived
              name="description"
              expression="get_description_value(SELF)">
              <typename
                name="text"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
            </where>
            <where
              label="WR2"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="effectivity_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_effectivity">
              <typename
                name="effectivity"/>
            </explicit>
            <derived
              name="role"
              expression="get_role(SELF)">
              <typename
                name="object_role"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="effectivity_context_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_effectivity_assignment">
              <typename
                name="effectivity_assignment"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="effectivity_context_role"/>
            </explicit>
          </entity>

          <entity
            name="effectivity_context_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="effectivity_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="related_effectivity">
              <typename
                name="effectivity"/>
            </explicit>
            <explicit
              name="relating_effectivity">
              <typename
                name="effectivity"/>
            </explicit>
          </entity>

          <entity
            name="electric_current_measure_with_unit"
            supertypes="measure_with_unit">
            <where
              label="WR1"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.ELECTRIC_CURRENT_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
            </where>
          </entity>

          <entity
            name="electric_current_unit"
            supertypes="named_unit">
            <where
              label="WR1"
              expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 1.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
            </where>
          </entity>

          <entity
            name="elementary_surface"
            super.expression="ONEOF ( PLANE, CYLINDRICAL_SURFACE, CONICAL_SURFACE, SPHERICAL_SURFACE, TOROIDAL_SURFACE)"
            supertypes="surface">
            <explicit
              name="position">
              <typename
                name="axis2_placement_3d"/>
            </explicit>
          </entity>

          <entity
            name="ellipse"
            supertypes="conic">
            <explicit
              name="semi_axis_1">
              <typename
                name="positive_length_measure"/>
            </explicit>
            <explicit
              name="semi_axis_2">
              <typename
                name="positive_length_measure"/>
            </explicit>
          </entity>

          <entity
            name="event_occurrence">
            <explicit
              name="id">
              <typename
                name="identifier"/>
            </explicit>
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="event_occurrence_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_event_occurrence">
              <typename
                name="event_occurrence"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="event_occurrence_role"/>
            </explicit>
          </entity>

          <entity
            name="event_occurrence_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_event">
              <typename
                name="event_occurrence"/>
            </explicit>
            <explicit
              name="related_event">
              <typename
                name="event_occurrence"/>
            </explicit>
          </entity>

          <entity
            name="event_occurrence_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="exclusive_product_concept_feature_category"
            supertypes="product_concept_feature_category">
          </entity>

          <entity
            name="executed_action"
            supertypes="action">
          </entity>

          <entity
            name="extension"
            supertypes="derived_shape_aspect">
            <where
              label="WR1"
              expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1">
            </where>
          </entity>

          <entity
            name="external_class_library"
            supertypes="external_source">
          </entity>

          <entity
            name="external_identification_assignment"
            abstract.supertype="YES"
            supertypes="identification_assignment">
            <explicit
              name="source">
              <typename
                name="external_source"/>
            </explicit>
          </entity>

          <entity
            name="external_source">
            <explicit
              name="source_id">
              <typename
                name="source_item"/>
            </explicit>
            <derived
              name="description"
              expression="get_description_value (SELF)">
              <typename
                name="text"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="externally_defined_class"
            supertypes="class externally_defined_item">
          </entity>

          <entity
            name="externally_defined_dimension_definition"
            supertypes="dimensional_size externally_defined_item">
            <where
              label="WR1"
              expression="(SELF\externally_defined_item.item_id = 'external size dimension') AND (SELF\externally_defined_item.source.source_id = 'external size dimension specification')">
            </where>
            <where
              label="WR2"
              expression="1 &gt;= SIZEOF(QUERY (adr &lt;* USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.APPLIED_DOCUMENT_REFERENCE.ITEMS')| (adr.assigned_document.description = 'external size dimension specification')))">
            </where>
          </entity>

          <entity
            name="externally_defined_general_property"
            supertypes="general_property externally_defined_item">
          </entity>

          <entity
            name="externally_defined_item">
            <explicit
              name="item_id">
              <typename
                name="source_item"/>
            </explicit>
            <explicit
              name="source">
              <typename
                name="external_source"/>
            </explicit>
          </entity>

          <entity
            name="externally_defined_item_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_item">
              <typename
                name="externally_defined_item"/>
            </explicit>
            <explicit
              name="related_item">
              <typename
                name="externally_defined_item"/>
            </explicit>
          </entity>

          <entity
            name="face"
            supertypes="topological_representation_item">
            <explicit
              name="bounds">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="face_bound"/>
            </explicit>
            <where
              label="WR1"
              expression="NOT (mixed_loop_type_set(list_to_set(list_face_loops(SELF))))">
            </where>
            <where
              label="WR2"
              expression="SIZEOF(QUERY(temp &lt;* bounds | 'CATALOG_DATA_INFORMATION_MIM_LF.FACE_OUTER_BOUND' IN TYPEOF(temp))) &lt;= 1">
            </where>
          </entity>

          <entity
            name="face_bound"
            supertypes="topological_representation_item">
            <explicit
              name="bound">
              <typename
                name="loop"/>
            </explicit>
            <explicit
              name="orientation">
              <builtintype
                type="BOOLEAN"/>
            </explicit>
          </entity>

          <entity
            name="face_outer_bound"
            supertypes="face_bound">
          </entity>

          <entity
            name="face_surface"
            supertypes="face geometric_representation_item">
            <explicit
              name="face_geometry">
              <typename
                name="surface"/>
            </explicit>
            <explicit
              name="same_sense">
              <builtintype
                type="BOOLEAN"/>
            </explicit>
            <where
              label="WR1"
              expression="NOT ('CATALOG_DATA_INFORMATION_MIM_LF.ORIENTED_SURFACE' IN TYPEOF(face_geometry))">
            </where>
          </entity>

          <entity
            name="founded_item">
          </entity>

          <entity
            name="functional_breakdown_context"
            supertypes="breakdown_context">
          </entity>

          <entity
            name="functional_element_usage"
            supertypes="breakdown_element_usage">
          </entity>

          <entity
            name="functionally_defined_transformation">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="general_material_property"
            supertypes="general_property">
            <where
              label="WR1"
              expression="SIZEOF(QUERY(gpa &lt;* USEDIN(SELF,'CATALOG_DATA_INFORMATION_MIM_LF.GENERAL_PROPERTY_ASSOCIATION.BASE_DEFINITION') | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.MATERIAL_PROPERTY' IN TYPEOF(gpa.derived_definition)))) = 0">
            </where>
          </entity>

          <entity
            name="general_property">
            <explicit
              name="id">
              <typename
                name="identifier"/>
            </explicit>
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="general_property_association">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="base_definition">
              <typename
                name="general_property"/>
            </explicit>
            <explicit
              name="derived_definition">
              <typename
                name="derived_property_select"/>
            </explicit>
            <where
              label="WR1"
              expression="SIZEOF(USEDIN(derived_definition, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'GENERAL_PROPERTY_ASSOCIATION.' + 'DERIVED_DEFINITION')) = 1">
            </where>
            <where
              label="WR2"
              expression="derived_definition.name = base_definition.name">
            </where>
          </entity>

          <entity
            name="general_property_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_property">
              <typename
                name="general_property"/>
            </explicit>
            <explicit
              name="related_property">
              <typename
                name="general_property"/>
            </explicit>
          </entity>

          <entity
            name="geometric_alignment"
            supertypes="derived_shape_aspect">
            <where
              label="WR1"
              expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)&gt; 1">
            </where>
          </entity>

          <entity
            name="geometric_intersection"
            supertypes="derived_shape_aspect">
            <where
              label="WR1"
              expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)&gt; 1">
            </where>
          </entity>

          <entity
            name="geometric_model_element_relationship"
            supertypes="geometric_representation_item representation_item_relationship">
            <unique
              label="UR1">
              <unique.attribute
                entity-ref="representation_item_relationship"
                attribute="relating_representation_item"/>
              <unique.attribute
                entity-ref="representation_item_relationship"
                attribute="related_representation_item"/>
            </unique>
            <where
              label="WR1"
              expression="SELF\representation_item_relationship.relating_representation_item :&lt;&gt;: SELF\representation_item_relationship.related_representation_item">
            </where>
          </entity>

          <entity
            name="geometric_representation_context"
            supertypes="representation_context">
            <explicit
              name="coordinate_space_dimension">
              <typename
                name="dimension_count"/>
            </explicit>
          </entity>

          <entity
            name="geometric_representation_item"
            super.expression="ONEOF ( POINT, DIRECTION, VECTOR, PLACEMENT, CARTESIAN_TRANSFORMATION_OPERATOR, CURVE, SURFACE, EDGE_CURVE, FACE_SURFACE, VERTEX_POINT)"
            supertypes="representation_item">
            <derived
              name="dim"
              expression="dimension_of(SELF)">
              <typename
                name="dimension_count"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (QUERY (using_rep &lt;* using_representations (SELF) | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.GEOMETRIC_REPRESENTATION_CONTEXT' IN TYPEOF (using_rep.context_of_items)))) = 0">
            </where>
          </entity>

          <entity
            name="global_uncertainty_assigned_context"
            supertypes="representation_context">
            <explicit
              name="uncertainty">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="uncertainty_measure_with_unit"/>
            </explicit>
          </entity>

          <entity
            name="global_unit_assigned_context"
            supertypes="representation_context">
            <explicit
              name="units">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="unit"/>
            </explicit>
          </entity>

          <entity
            name="group">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <derived
              name="id"
              expression="get_id_value (SELF)">
              <typename
                name="identifier"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="group_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_group">
              <typename
                name="group"/>
            </explicit>
            <derived
              name="role"
              expression="get_role (SELF)">
              <typename
                name="object_role"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="group_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_group">
              <typename
                name="group"/>
            </explicit>
            <explicit
              name="related_group">
              <typename
                name="group"/>
            </explicit>
          </entity>

          <entity
            name="hyperbola"
            supertypes="conic">
            <explicit
              name="semi_axis">
              <typename
                name="positive_length_measure"/>
            </explicit>
            <explicit
              name="semi_imag_axis">
              <typename
                name="positive_length_measure"/>
            </explicit>
          </entity>

          <entity
            name="id_attribute">
            <explicit
              name="attribute_value">
              <typename
                name="identifier"/>
            </explicit>
            <explicit
              name="identified_item">
              <typename
                name="id_attribute_select"/>
            </explicit>
          </entity>

          <entity
            name="identification_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_id">
              <typename
                name="identifier"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="identification_role"/>
            </explicit>
          </entity>

          <entity
            name="identification_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="inclusion_product_concept_feature"
            supertypes="conditional_concept_feature">
            <where
              label="WR1"
              expression="NOT ('CATALOG_DATA_INFORMATION_MIM_LF.' + 'PACKAGE_PRODUCT_CONCEPT_FEATURE' IN TYPEOF (SELF))">
            </where>
            <where
              label="WR2"
              expression="SIZEOF (QUERY(cfr &lt;* USEDIN(SELF ,'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONCEPT_FEATURE_RELATIONSHIP.RELATING_PRODUCT_CONCEPT_FEATURE')|'CATALOG_DATA_INFORMATION_MIM_LF.'+ 'CONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION' IN TYPEOF(cfr))) + SIZEOF(QUERY(cfr &lt;* USEDIN(SELF , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONCEPT_FEATURE_RELATIONSHIP.RELATED_PRODUCT_CONCEPT_FEATURE')|'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION' IN TYPEOF(cfr)))= 0">
            </where>
            <where
              label="WR3"
              expression="SELF.condition.conditional_operator.name = 'implication'">
            </where>
          </entity>

          <entity
            name="instance_usage_context_assignment"
            supertypes="product_definition_context">
            <explicit
              name="items">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="instance_usage_context_select"/>
            </explicit>
          </entity>

          <entity
            name="item_defined_transformation">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="transform_item_1">
              <typename
                name="representation_item"/>
            </explicit>
            <explicit
              name="transform_item_2">
              <typename
                name="representation_item"/>
            </explicit>
          </entity>

          <entity
            name="known_source"
            supertypes="external_source pre_defined_item">
          </entity>

          <entity
            name="language"
            supertypes="group">
            <where
              label="WR1"
              expression="SELF\group.name &lt;&gt; ''">
            </where>
          </entity>

          <entity
            name="length_measure_with_unit"
            supertypes="measure_with_unit">
            <where
              label="WR1"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.LENGTH_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
            </where>
          </entity>

          <entity
            name="length_unit"
            supertypes="named_unit">
            <where
              label="WR1"
              expression="(SELF\named_unit.dimensions.length_exponent = 1.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
            </where>
          </entity>

          <entity
            name="limits_and_fits">
            <explicit
              name="form_variance">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="zone_variance">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="grade">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="source">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="line"
            supertypes="curve">
            <explicit
              name="pnt">
              <typename
                name="cartesian_point"/>
            </explicit>
            <explicit
              name="dir">
              <typename
                name="vector"/>
            </explicit>
            <where
              label="WR1"
              expression="dir.dim = pnt.dim">
            </where>
          </entity>

          <entity
            name="local_time">
            <explicit
              name="hour_component">
              <typename
                name="hour_in_day"/>
            </explicit>
            <explicit
              name="minute_component"
              optional="YES">
              <typename
                name="minute_in_hour"/>
            </explicit>
            <explicit
              name="second_component"
              optional="YES">
              <typename
                name="second_in_minute"/>
            </explicit>
            <explicit
              name="zone">
              <typename
                name="coordinated_universal_time_offset"/>
            </explicit>
            <where
              label="WR1"
              expression="valid_time (SELF)">
            </where>
          </entity>

          <entity
            name="loop"
            super.expression="ONEOF ( VERTEX_LOOP, EDGE_LOOP)"
            supertypes="topological_representation_item">
          </entity>

          <entity
            name="lot_effectivity"
            supertypes="effectivity">
            <explicit
              name="effectivity_lot_id">
              <typename
                name="identifier"/>
            </explicit>
            <explicit
              name="effectivity_lot_size">
              <typename
                name="measure_with_unit"/>
            </explicit>
          </entity>

          <entity
            name="luminous_intensity_measure_with_unit"
            supertypes="measure_with_unit">
            <where
              label="WR1"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.LUMINOUS_INTENSITY_UNIT' IN TYPEOF(SELF\measure_with_unit.unit_component)">
            </where>
          </entity>

          <entity
            name="luminous_intensity_unit"
            supertypes="named_unit">
            <where
              label="WR1"
              expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 1.0)">
            </where>
          </entity>

          <entity
            name="make_from_usage_option"
            supertypes="product_definition_usage">
            <explicit
              name="ranking">
              <builtintype
                type="INTEGER"/>
            </explicit>
            <explicit
              name="ranking_rationale">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="quantity">
              <typename
                name="measure_with_unit"/>
            </explicit>
            <where
              label="WR1"
              expression="(NOT ('NUMBER' IN TYPEOF(quantity.value_component))) OR (quantity.value_component &gt; 0)">
            </where>
          </entity>

          <entity
            name="mapped_item"
            supertypes="representation_item">
            <explicit
              name="mapping_source">
              <typename
                name="representation_map"/>
            </explicit>
            <explicit
              name="mapping_target">
              <typename
                name="representation_item"/>
            </explicit>
            <where
              label="WR1"
              expression="acyclic_mapped_representation(using_representations(SELF), [SELF])">
            </where>
          </entity>

          <entity
            name="mass_measure_with_unit"
            supertypes="measure_with_unit">
            <where
              label="WR1"
              expression="'CATALOG_DATA_INFORMATION_MIM_LF.MASS_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
            </where>
          </entity>

          <entity
            name="mass_unit"
            supertypes="named_unit">
            <where
              label="WR1"
              expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 1.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
            </where>
          </entity>

          <entity
            name="material_designation">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="definitions">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="characterized_definition"/>
            </explicit>
          </entity>

          <entity
            name="material_designation_characterization">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="designation">
              <typename
                name="material_designation"/>
            </explicit>
            <explicit
              name="property">
              <typename
                name="characterized_material_property"/>
            </explicit>
          </entity>

          <entity
            name="material_property"
            supertypes="property_definition">
            <unique
              label="UR1">
              <unique.attribute
                entity-ref="property_definition"
                attribute="name"/>
              <unique.attribute
                entity-ref="property_definition"
                attribute="definition"/>
            </unique>
            <where
              label="WR1"
              expression="('CATALOG_DATA_INFORMATION_MIM_LF.CHARACTERIZED_OBJECT' IN TYPEOF(SELF\property_definition.definition)) OR(SIZEOF(bag_to_set(USEDIN(SELF ,'CATALOG_DATA_INFORMATION_MIM_LF.' +'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) - QUERY(temp &lt;* bag_to_set(USEDIN(SELF ,'CATALOG_DATA_INFORMATION_MIM_LF.' +'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION')) |('CATALOG_DATA_INFORMATION_MIM_LF.' +'MATERIAL_PROPERTY_REPRESENTATION' IN TYPEOF(temp)))) = 0)">
            </where>
          </entity>

          <entity
            name="material_property_representation"
            supertypes="property_definition_representation">
            <explicit
              name="dependent_environment">
              <typename
                name="data_environment"/>
            </explicit>
          </entity>

          <entity
            name="measure_qualification">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="qualified_measure">
              <typename
                name="measure_with_unit"/>
            </explicit>
            <explicit
              name="qualifiers">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="value_qualifier"/>
            </explicit>
            <where
              label="WR1"
              expression="SIZEOF(QUERY(temp &lt;* qualifiers |'CATALOG_DATA_INFORMATION_MIM_LF.PRECISION_QUALIFIER' IN TYPEOF(temp))) &lt; 2">
            </where>
          </entity>

          <entity
            name="measure_representation_item"
            supertypes="representation_item measure_with_unit">
          </entity>

          <entity
            name="measure_with_unit"
            super.expression="ONEOF ( LENGTH_MEASURE_WITH_UNIT, MASS_MEASURE_WITH_UNIT, TIME_MEASURE_WITH_UNIT, ELECTRIC_CURRENT_MEASURE_WITH_UNIT, THERMODYNAMIC_TEMPERATURE_MEASURE_WITH_UNIT, CELSIUS_TEMPERATURE_MEASURE_WITH_UNIT, AMOUNT_OF_SUBSTANCE_MEASURE_WITH_UNIT, LUMINOUS_INTENSITY_MEASURE_WITH_UNIT, PLANE_ANGLE_MEASURE_WITH_UNIT, SOLID_ANGLE_MEASURE_WITH_UNIT, AREA_MEASURE_WITH_UNIT, VOLUME_MEASURE_WITH_UNIT, RATIO_MEASURE_WITH_UNIT)">
            <explicit
              name="value_component">
              <typename
                name="measure_value"/>
            </explicit>
            <explicit
              name="unit_component">
              <typename
                name="unit"/>
            </explicit>
            <where
              label="WR1"
              expression="valid_units (SELF)">
            </where>
          </entity>

          <entity
            name="moments_of_inertia_representation"
            supertypes="representation">
            <where
              label="WR1"
              expression="(SIZEOF(SELF.items) = 1) AND(SIZEOF(QUERY(i &lt;* SELF.items | ('CATALOG_DATA_INFORMATION_MIM_LF' + '.COMPOUND_REPRESENTATION_ITEM' IN TYPEOF(i)) AND(i.name = 'moments of inertia matrix'))) = 1)">
            </where>
            <where
              label="WR2"
              expression="SIZEOF(QUERY(i &lt;* SELF.items | ('CATALOG_DATA_INFORMATION_MIM_LF' + '.COMPOUND_REPRESENTATION_ITEM' IN TYPEOF(i)) AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.LIST_REPRESENTATION_ITEM' IN TYPEOF(i\compound_representation_item.item_element)) AND value_range_aggregate_rep_item (i\compound_representation_item.item_element))) = 1">
            </where>
          </entity>

          <entity
            name="multi_language_attribute_assignment"
            supertypes="attribute_value_assignment">
            <explicit
              name="items">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="multi_language_attribute_item"/>
            </explicit>
            <derived
              name="translation_language"
              expression="language_indication[1]\attribute_classification_assignment.assigned_class">
              <typename
                name="language"/>
            </derived>
            <inverse
              name="language_indication"
              entity="attribute_language_assignment"
              attribute="items">
              <inverse.aggregate
                type="SET"
                lower="1"
                upper="1"/>
            </inverse>
            <where
              label="WR1"
              expression="(SELF\attribute_value_assignment.role.name = 'alternate language')">
            </where>
            <where
              label="WR2"
              expression="SIZEOF(QUERY(ala &lt;* language_indication |(ala\attribute_classification_assignment.attribute_name = 'attribute_value') AND(ala\attribute_classification_assignment.role.name='translated'))) = 1">
            </where>
            <where
              label="WR3"
              expression="SELF\attribute_value_assignment.attribute_name &lt;&gt; ''">
            </where>
            <where
              label="WR4"
              expression="SIZEOF(QUERY(ci &lt;* items | SIZEOF(QUERY(ata &lt;* USEDIN(ci, 'CATALOG_DATA_INFORMATION_MIM_LF.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS') |(ata\attribute_value_assignment.attribute_name = SELF\attribute_value_assignment.attribute_name) AND(ata.translation_language :=: translation_language)))&gt;1)) =0">
            </where>
            <where
              label="WR5"
              expression="SIZEOF(QUERY(ci &lt;* items | SIZEOF(QUERY(ata &lt;* USEDIN(ci, 'CATALOG_DATA_INFORMATION_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS') |(ata\attribute_classification_assignment.role.name='primary') AND(ata\attribute_classification_assignment.attribute_name= SELF\attribute_value_assignment.attribute_name) AND(ata\attribute_classification_assignment.assigned_class :=: translation_language)))&gt;0)) =0">
            </where>
          </entity>

          <entity
            name="name_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_name">
              <typename
                name="label"/>
            </explicit>
            <derived
              name="role"
              expression="get_role (SELF)">
              <typename
                name="object_role"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="name_attribute">
            <explicit
              name="attribute_value">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="named_item">
              <typename
                name="name_attribute_select"/>
            </explicit>
          </entity>

          <entity
            name="named_unit"
            super.expression="ONEOF ( SI_UNIT, CONVERSION_BASED_UNIT, CONTEXT_DEPENDENT_UNIT) ANDOR ONEOF ( LENGTH_UNIT, MASS_UNIT, TIME_UNIT, ELECTRIC_CURRENT_UNIT, THERMODYNAMIC_TEMPERATURE_UNIT, AMOUNT_OF_SUBSTANCE_UNIT, LUMINOUS_INTENSITY_UNIT, PLANE_ANGLE_UNIT, SOLID_ANGLE_UNIT, AREA_UNIT, VOLUME_UNIT, RATIO_UNIT)">
            <explicit
              name="dimensions">
              <typename
                name="dimensional_exponents"/>
            </explicit>
          </entity>

          <entity
            name="next_assembly_usage_occurrence"
            supertypes="assembly_component_usage">
          </entity>

          <entity
            name="object_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="offset_curve_2d"
            supertypes="curve">
            <explicit
              name="basis_curve">
              <typename
                name="curve"/>
            </explicit>
            <explicit
              name="distance">
              <typename
                name="length_measure"/>
            </explicit>
            <explicit
              name="self_intersect">
              <builtintype
                type="LOGICAL"/>
            </explicit>
            <where
              label="WR1"
              expression="basis_curve.dim = 2">
            </where>
          </entity>

          <entity
            name="offset_curve_3d"
            supertypes="curve">
            <explicit
              name="basis_curve">
              <typename
                name="curve"/>
            </explicit>
            <explicit
              name="distance">
              <typename
                name="length_measure"/>
            </explicit>
            <explicit
              name="self_intersect">
              <builtintype
                type="LOGICAL"/>
            </explicit>
            <explicit
              name="ref_direction">
              <typename
                name="direction"/>
            </explicit>
            <where
              label="WR1"
              expression="(basis_curve.dim = 3) AND (ref_direction.dim = 3)">
            </where>
          </entity>

          <entity
            name="offset_surface"
            supertypes="surface">
            <explicit
              name="basis_surface">
              <typename
                name="surface"/>
            </explicit>
            <explicit
              name="distance">
              <typename
                name="length_measure"/>
            </explicit>
            <explicit
              name="self_intersect">
              <builtintype
                type="LOGICAL"/>
            </explicit>
          </entity>

          <entity
            name="organization">
            <explicit
              name="id"
              optional="YES">
              <typename
                name="identifier"/>
            </explicit>
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="organization_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_organization">
              <typename
                name="organization"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="organization_role"/>
            </explicit>
          </entity>

          <entity
            name="organization_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_organization">
              <typename
                name="organization"/>
            </explicit>
            <explicit
              name="related_organization">
              <typename
                name="organization"/>
            </explicit>
          </entity>

          <entity
            name="organization_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <derived
              name="description"
              expression="get_description_value(SELF)">
              <typename
                name="text"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="organizational_address"
            supertypes="address">
            <explicit
              name="organizations">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="organization"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="organizational_project">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="responsible_organizations">
              <aggregate
                type="SET"
                lower="1"
                upper="?"/>
              <typename
                name="organization"/>
            </explicit>
            <derived
              name="id"
              expression="get_id_value (SELF)">
              <typename
                name="identifier"/>
            </derived>
            <where
              label="WR1"
              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
            </where>
          </entity>

          <entity
            name="organizational_project_assignment"
            abstract.supertype="YES">
            <explicit
              name="assigned_organizational_project">
              <typename
                name="organizational_project"/>
            </explicit>
            <explicit
              name="role">
              <typename
                name="organizational_project_role"/>
            </explicit>
          </entity>

          <entity
            name="organizational_project_relationship">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
            <explicit
              name="relating_organizational_project">
              <typename
                name="organizational_project"/>
            </explicit>
            <explicit
              name="related_organizational_project">
              <typename
                name="organizational_project"/>
            </explicit>
          </entity>

          <entity
            name="organizational_project_role">
            <explicit
              name="name">
              <typename
                name="label"/>
            </explicit>
            <explicit
              name="description"
              optional="YES">
              <typename
                name="text"/>
            </explicit>
          </entity>

          <entity
            name="oriented_edge"
            supertypes="edge">
            <explicit
              name="edge_element">
              <typename
                name="edge"/>
            </explicit>
            <explicit
              name="orientation">
              <builtintype
                type="BOOLEAN"/>
            </explicit>
            <derived
              name="edge_start"
              expression="boolean_choose (SELF.orientation, SELF.edge_element.edge_start, SELF.edge_element.edge_end)">
              <typename
                name="vertex"/>
              <redeclaration
                entity-ref="edge"/>
              </derived>
              <derived
                name="edge_end"
                expression="boolean_choose (SELF.orientation, SELF.edge_element.edge_end, SELF.edge_element.edge_start)">
                <typename
                  name="vertex"/>
                <redeclaration
                  entity-ref="edge"/>
                </derived>
                <where
                  label="WR1"
                  expression="NOT ('CATALOG_DATA_INFORMATION_MIM_LF.ORIENTED_EDGE' IN TYPEOF (SELF.edge_element))">
                </where>
              </entity>

              <entity
                name="oriented_surface"
                supertypes="surface">
                <explicit
                  name="orientation">
                  <builtintype
                    type="BOOLEAN"/>
                </explicit>
              </entity>

              <entity
                name="package_product_concept_feature"
                supertypes="product_concept_feature">
                <where
                  label="WR1"
                  expression="NOT ('CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONDITIONAL_CONCEPT_FEATURE' IN TYPEOF (SELF))">
                </where>
                <where
                  label="WR2"
                  expression="SIZEOF (QUERY(cfr &lt;* USEDIN (SELF , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONCEPT_FEATURE_RELATIONSHIP.' +'RELATING_PRODUCT_CONCEPT_FEATURE')|('CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION' IN TYPEOF (cfr)) AND(SIZEOF (QUERY(ipcf &lt;* USEDIN (cfr , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONDITIONAL_CONCEPT_FEATURE.' +	'CONDITION')|'CATALOG_DATA_INFORMATION_MIM_LF.' + 'INCLUSION_PRODUCT_CONCEPT_FEATURE' IN TYPEOF (ipcf)))= 1)))&gt;0">
                </where>
              </entity>

              <entity
                name="parabola"
                supertypes="conic">
                <explicit
                  name="focal_dist">
                  <typename
                    name="length_measure"/>
                </explicit>
                <where
                  label="WR1"
                  expression="focal_dist &lt;&gt; 0.0">
                </where>
              </entity>

              <entity
                name="parallel_offset"
                supertypes="derived_shape_aspect">
                <explicit
                  name="offset">
                  <typename
                    name="measure_with_unit"/>
                </explicit>
                <where
                  label="WR1"
                  expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1">
                </where>
              </entity>

              <entity
                name="parametric_representation_context"
                supertypes="representation_context">
              </entity>

              <entity
                name="path"
                supertypes="topological_representation_item">
                <explicit
                  name="edge_list">
                  <aggregate
                    type="LIST"
                    lower="1"
                    upper="?"
                    unique="YES"/>
                  <typename
                    name="oriented_edge"/>
                </explicit>
                <where
                  label="WR1"
                  expression="path_head_to_tail(SELF)">
                </where>
              </entity>

              <entity
                name="pcurve"
                supertypes="curve">
                <explicit
                  name="basis_surface">
                  <typename
                    name="surface"/>
                </explicit>
                <explicit
                  name="reference_to_curve">
                  <typename
                    name="definitional_representation"/>
                </explicit>
                <where
                  label="WR1"
                  expression="SIZEOF(reference_to_curve\representation.items) = 1">
                </where>
                <where
                  label="WR2"
                  expression="'CATALOG_DATA_INFORMATION_MIM_LF.CURVE' IN TYPEOF(reference_to_curve\representation.items[1])">
                </where>
                <where
                  label="WR3"
                  expression="reference_to_curve\representation.items[1]\ geometric_representation_item.dim =2">
                </where>
              </entity>

              <entity
                name="perpendicular_to"
                supertypes="derived_shape_aspect">
                <where
                  label="WR1"
                  expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1">
                </where>
              </entity>

              <entity
                name="person">
                <explicit
                  name="id">
                  <typename
                    name="identifier"/>
                </explicit>
                <explicit
                  name="last_name"
                  optional="YES">
                  <typename
                    name="label"/>
                </explicit>
                <explicit
                  name="first_name"
                  optional="YES">
                  <typename
                    name="label"/>
                </explicit>
                <explicit
                  name="middle_names"
                  optional="YES">
                  <aggregate
                    type="LIST"
                    lower="1"
                    upper="?"/>
                  <typename
                    name="label"/>
                </explicit>
                <explicit
                  name="prefix_titles"
                  optional="YES">
                  <aggregate
                    type="LIST"
                    lower="1"
                    upper="?"/>
                  <typename
                    name="label"/>
                </explicit>
                <explicit
                  name="suffix_titles"
                  optional="YES">
                  <aggregate
                    type="LIST"
                    lower="1"
                    upper="?"/>
                  <typename
                    name="label"/>
                </explicit>
                <where
                  label="WR1"
                  expression="EXISTS(last_name) OR EXISTS(first_name)">
                </where>
              </entity>

              <entity
                name="person_and_organization">
                <explicit
                  name="the_person">
                  <typename
                    name="person"/>
                </explicit>
                <explicit
                  name="the_organization">
                  <typename
                    name="organization"/>
                </explicit>
                <derived
                  name="name"
                  expression="get_name_value (SELF)">
                  <typename
                    name="label"/>
                </derived>
                <derived
                  name="description"
                  expression="get_description_value(SELF)">
                  <typename
                    name="text"/>
                </derived>
                <where
                  label="WR1"
                  expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                </where>
                <where
                  label="WR2"
                  expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                </where>
              </entity>

              <entity
                name="person_and_organization_address"
                supertypes="organizational_address personal_address">
                <explicit
                  name="organizations">
                  <aggregate
                    type="SET"
                    lower="1"
                    upper="1"/>
                  <typename
                    name="organization"/>
                  <redeclaration
                    entity-ref="organizational_address"/>
                  </explicit>
                  <explicit
                    name="people">
                    <aggregate
                      type="SET"
                      lower="1"
                      upper="1"/>
                    <typename
                      name="person"/>
                    <redeclaration
                      entity-ref="personal_address"/>
                    </explicit>
                    <where
                      label="WR1"
                      expression="SIZEOF(QUERY(pao &lt;* USEDIN (SELF\personal_address.people[1], 'CATALOG_DATA_INFORMATION_MIM_LF.PERSON_AND_ORGANIZATION.THE_PERSON') | pao.the_organization :=: SELF\organizational_address.organizations[1])) = 1">
                    </where>
                  </entity>

                  <entity
                    name="person_and_organization_assignment"
                    abstract.supertype="YES">
                    <explicit
                      name="assigned_person_and_organization">
                      <typename
                        name="person_and_organization"/>
                    </explicit>
                    <explicit
                      name="role">
                      <typename
                        name="person_and_organization_role"/>
                    </explicit>
                  </entity>

                  <entity
                    name="person_and_organization_role">
                    <explicit
                      name="name">
                      <typename
                        name="label"/>
                    </explicit>
                    <derived
                      name="description"
                      expression="get_description_value (SELF)">
                      <typename
                        name="text"/>
                    </derived>
                    <where
                      label="WR1"
                      expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                    </where>
                  </entity>

                  <entity
                    name="personal_address"
                    supertypes="address">
                    <explicit
                      name="people">
                      <aggregate
                        type="SET"
                        lower="1"
                        upper="?"/>
                      <typename
                        name="person"/>
                    </explicit>
                    <explicit
                      name="description"
                      optional="YES">
                      <typename
                        name="text"/>
                    </explicit>
                  </entity>

                  <entity
                    name="physical_breakdown_context"
                    supertypes="breakdown_context">
                  </entity>

                  <entity
                    name="physical_element_usage"
                    supertypes="breakdown_element_usage">
                  </entity>

                  <entity
                    name="placement"
                    super.expression="ONEOF ( AXIS1_PLACEMENT, AXIS2_PLACEMENT_2D, AXIS2_PLACEMENT_3D)"
                    supertypes="geometric_representation_item">
                    <explicit
                      name="location">
                      <typename
                        name="cartesian_point"/>
                    </explicit>
                  </entity>

                  <entity
                    name="planar_extent"
                    supertypes="geometric_representation_item">
                    <explicit
                      name="size_in_x">
                      <typename
                        name="length_measure"/>
                    </explicit>
                    <explicit
                      name="size_in_y">
                      <typename
                        name="length_measure"/>
                    </explicit>
                  </entity>

                  <entity
                    name="plane"
                    supertypes="elementary_surface">
                  </entity>

                  <entity
                    name="plane_angle_measure_with_unit"
                    supertypes="measure_with_unit">
                    <where
                      label="WR1"
                      expression="'CATALOG_DATA_INFORMATION_MIM_LF.PLANE_ANGLE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
                    </where>
                  </entity>

                  <entity
                    name="plane_angle_unit"
                    supertypes="named_unit">
                    <where
                      label="WR1"
                      expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
                    </where>
                  </entity>

                  <entity
                    name="plus_minus_tolerance">
                    <explicit
                      name="range">
                      <typename
                        name="tolerance_method_definition"/>
                    </explicit>
                    <explicit
                      name="toleranced_dimension">
                      <typename
                        name="dimensional_characteristic"/>
                    </explicit>
                    <unique
                      label="UR1">
                      <unique.attribute
                        attribute="toleranced_dimension"/>
                    </unique>
                  </entity>

                  <entity
                    name="point"
                    super.expression="ONEOF ( CARTESIAN_POINT, POINT_ON_CURVE, POINT_ON_SURFACE, POINT_REPLICA, DEGENERATE_PCURVE)"
                    supertypes="geometric_representation_item">
                  </entity>

                  <entity
                    name="point_on_curve"
                    supertypes="point">
                    <explicit
                      name="basis_curve">
                      <typename
                        name="curve"/>
                    </explicit>
                    <explicit
                      name="point_parameter">
                      <typename
                        name="parameter_value"/>
                    </explicit>
                  </entity>

                  <entity
                    name="point_on_surface"
                    supertypes="point">
                    <explicit
                      name="basis_surface">
                      <typename
                        name="surface"/>
                    </explicit>
                    <explicit
                      name="point_parameter_u">
                      <typename
                        name="parameter_value"/>
                    </explicit>
                    <explicit
                      name="point_parameter_v">
                      <typename
                        name="parameter_value"/>
                    </explicit>
                  </entity>

                  <entity
                    name="point_replica"
                    supertypes="point">
                    <explicit
                      name="parent_pt">
                      <typename
                        name="point"/>
                    </explicit>
                    <explicit
                      name="transformation">
                      <typename
                        name="cartesian_transformation_operator"/>
                    </explicit>
                    <where
                      label="WR1"
                      expression="transformation.dim = parent_pt.dim">
                    </where>
                    <where
                      label="WR2"
                      expression="acyclic_point_replica (SELF,parent_pt)">
                    </where>
                  </entity>

                  <entity
                    name="polyline"
                    supertypes="bounded_curve">
                    <explicit
                      name="points">
                      <aggregate
                        type="LIST"
                        lower="2"
                        upper="?"/>
                      <typename
                        name="cartesian_point"/>
                    </explicit>
                  </entity>

                  <entity
                    name="pre_defined_item">
                    <explicit
                      name="name">
                      <typename
                        name="label"/>
                    </explicit>
                  </entity>

                  <entity
                    name="precision_qualifier">
                    <explicit
                      name="precision_value">
                      <builtintype
                        type="INTEGER"/>
                    </explicit>
                  </entity>

                  <entity
                    name="product">
                    <explicit
                      name="id">
                      <typename
                        name="identifier"/>
                    </explicit>
                    <explicit
                      name="name">
                      <typename
                        name="label"/>
                    </explicit>
                    <explicit
                      name="description"
                      optional="YES">
                      <typename
                        name="text"/>
                    </explicit>
                    <explicit
                      name="frame_of_reference">
                      <aggregate
                        type="SET"
                        lower="1"
                        upper="?"/>
                      <typename
                        name="product_context"/>
                    </explicit>
                  </entity>

                  <entity
                    name="product_as_individual"
                    supertypes="product">
                  </entity>

                  <entity
                    name="product_as_individual_version"
                    abstract.supertype="YES"
                    super.expression="ONEOF ( PRODUCT_AS_PLANNED, PRODUCT_AS_REALIZED)"
                    supertypes="product_definition_formation">
                    <explicit
                      name="of_product">
                      <typename
                        name="product_as_individual"/>
                      <redeclaration
                        entity-ref="product_definition_formation"/>
                      </explicit>
                    </entity>

                    <entity
                      name="product_as_individual_view"
                      supertypes="product_definition">
                      <explicit
                        name="formation">
                        <typename
                          name="product_as_individual_version"/>
                        <redeclaration
                          entity-ref="product_definition"/>
                        </explicit>
                        <derived
                          name="defined_version"
                          expression="SELF\product_definition.formation">
                          <typename
                            name="PRODUCT_AS_INDIVIDUAL_VERSION"/>
                        </derived>
                      </entity>

                      <entity
                        name="product_as_planned"
                        supertypes="product_as_individual_version">
                      </entity>

                      <entity
                        name="product_as_realized"
                        supertypes="product_as_individual_version">
                      </entity>

                      <entity
                        name="product_category">
                        <explicit
                          name="name">
                          <typename
                            name="label"/>
                        </explicit>
                        <explicit
                          name="description"
                          optional="YES">
                          <typename
                            name="text"/>
                        </explicit>
                        <derived
                          name="id"
                          expression="get_id_value (SELF)">
                          <typename
                            name="identifier"/>
                        </derived>
                        <where
                          label="WR1"
                          expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                        </where>
                      </entity>

                      <entity
                        name="product_category_relationship">
                        <explicit
                          name="name">
                          <typename
                            name="label"/>
                        </explicit>
                        <explicit
                          name="description"
                          optional="YES">
                          <typename
                            name="text"/>
                        </explicit>
                        <explicit
                          name="category">
                          <typename
                            name="product_category"/>
                        </explicit>
                        <explicit
                          name="sub_category">
                          <typename
                            name="product_category"/>
                        </explicit>
                        <where
                          label="WR1"
                          expression="acyclic_product_category_relationship (SELF, [SELF.sub_category])">
                        </where>
                      </entity>

                      <entity
                        name="product_class"
                        supertypes="product_concept characterized_object">
                      </entity>

                      <entity
                        name="product_concept">
                        <explicit
                          name="id">
                          <typename
                            name="identifier"/>
                        </explicit>
                        <explicit
                          name="name">
                          <typename
                            name="label"/>
                        </explicit>
                        <explicit
                          name="description"
                          optional="YES">
                          <typename
                            name="text"/>
                        </explicit>
                        <explicit
                          name="market_context">
                          <typename
                            name="product_concept_context"/>
                        </explicit>
                        <unique
                          label="UR1">
                          <unique.attribute
                            attribute="id"/>
                        </unique>
                      </entity>

                      <entity
                        name="product_concept_context"
                        supertypes="application_context_element">
                        <explicit
                          name="market_segment_type">
                          <typename
                            name="label"/>
                        </explicit>
                      </entity>

                      <entity
                        name="product_concept_feature">
                        <explicit
                          name="id">
                          <typename
                            name="identifier"/>
                        </explicit>
                        <explicit
                          name="name">
                          <typename
                            name="label"/>
                        </explicit>
                        <explicit
                          name="description"
                          optional="YES">
                          <typename
                            name="text"/>
                        </explicit>
                      </entity>

                      <entity
                        name="product_concept_feature_association">
                        <explicit
                          name="name">
                          <typename
                            name="label"/>
                        </explicit>
                        <explicit
                          name="description"
                          optional="YES">
                          <typename
                            name="text"/>
                        </explicit>
                        <explicit
                          name="concept">
                          <typename
                            name="product_concept"/>
                        </explicit>
                        <explicit
                          name="feature">
                          <typename
                            name="product_concept_feature"/>
                        </explicit>
                      </entity>

                      <entity
                        name="product_concept_feature_category"
                        supertypes="group">
                        <where
                          label="WR1"
                          expression="SIZEOF(QUERY(aga &lt;* USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'GROUP_ASSIGNMENT.ASSIGNED_GROUP')|((aga.role.name &lt;&gt; 'specification category member') OR(SIZEOF(QUERY(i &lt;* aga.items|('CATALOG_DATA_INFORMATION_MIM_LF.'+ 'PRODUCT_CONCEPT_FEATURE' IN TYPEOF (i)) AND NOT ('CATALOG_DATA_INFORMATION_MIM_LF.'+ 'CONDITIONAL_CONCEPT_FEATURE' IN TYPEOF (i)))) &lt;&gt; SIZEOF (aga.items))))) =0">
                        </where>
                      </entity>

                      <entity
                        name="product_concept_feature_category_usage"
                        supertypes="group_assignment">
                        <explicit
                          name="assigned_group">
                          <typename
                            name="product_concept_feature_category"/>
                          <redeclaration
                            entity-ref="group_assignment"/>
                          </explicit>
                          <explicit
                            name="items">
                            <aggregate
                              type="SET"
                              lower="1"
                              upper="?"/>
                            <typename
                              name="category_usage_item"/>
                          </explicit>
                          <where
                            label="WR1"
                            expression="SELF.role.name IN [ 'mandatory category usage', 'optional category usage' ]">
                          </where>
                        </entity>

                        <entity
                          name="product_concept_relationship">
                          <explicit
                            name="name">
                            <typename
                              name="label"/>
                          </explicit>
                          <explicit
                            name="description"
                            optional="YES">
                            <typename
                              name="text"/>
                          </explicit>
                          <explicit
                            name="relating_product_concept">
                            <typename
                              name="product_concept"/>
                          </explicit>
                          <explicit
                            name="related_product_concept">
                            <typename
                              name="product_concept"/>
                          </explicit>
                        </entity>

                        <entity
                          name="product_context"
                          supertypes="application_context_element">
                          <explicit
                            name="discipline_type">
                            <typename
                              name="label"/>
                          </explicit>
                        </entity>

                        <entity
                          name="product_definition">
                          <explicit
                            name="id">
                            <typename
                              name="identifier"/>
                          </explicit>
                          <explicit
                            name="description"
                            optional="YES">
                            <typename
                              name="text"/>
                          </explicit>
                          <explicit
                            name="formation">
                            <typename
                              name="product_definition_formation"/>
                          </explicit>
                          <explicit
                            name="frame_of_reference">
                            <typename
                              name="product_definition_context"/>
                          </explicit>
                          <derived
                            name="name"
                            expression="get_name_value (SELF)">
                            <typename
                              name="label"/>
                          </derived>
                          <where
                            label="WR1"
                            expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                          </where>
                        </entity>

                        <entity
                          name="product_definition_context"
                          supertypes="application_context_element">
                          <explicit
                            name="life_cycle_stage">
                            <typename
                              name="label"/>
                          </explicit>
                        </entity>

                        <entity
                          name="product_definition_context_association">
                          <explicit
                            name="definition">
                            <typename
                              name="product_definition"/>
                          </explicit>
                          <explicit
                            name="frame_of_reference">
                            <typename
                              name="product_definition_context"/>
                          </explicit>
                          <explicit
                            name="role">
                            <typename
                              name="product_definition_context_role"/>
                          </explicit>
                        </entity>

                        <entity
                          name="product_definition_context_role">
                          <explicit
                            name="name">
                            <typename
                              name="label"/>
                          </explicit>
                          <explicit
                            name="description"
                            optional="YES">
                            <typename
                              name="text"/>
                          </explicit>
                        </entity>

                        <entity
                          name="product_definition_effectivity"
                          supertypes="effectivity">
                          <explicit
                            name="usage">
                            <typename
                              name="product_definition_relationship"/>
                          </explicit>
                          <where
                            label="WR1"
                            expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY')) = 0">
                          </where>
                        </entity>

                        <entity
                          name="product_definition_element_relationship"
                          supertypes="group">
                        </entity>

                        <entity
                          name="product_definition_formation">
                          <explicit
                            name="id">
                            <typename
                              name="identifier"/>
                          </explicit>
                          <explicit
                            name="description"
                            optional="YES">
                            <typename
                              name="text"/>
                          </explicit>
                          <explicit
                            name="of_product">
                            <typename
                              name="product"/>
                          </explicit>
                          <unique
                            label="UR1">
                            <unique.attribute
                              attribute="id"/>
                            <unique.attribute
                              attribute="of_product"/>
                          </unique>
                        </entity>

                        <entity
                          name="product_definition_formation_relationship">
                          <explicit
                            name="id">
                            <typename
                              name="identifier"/>
                          </explicit>
                          <explicit
                            name="name">
                            <typename
                              name="label"/>
                          </explicit>
                          <explicit
                            name="description"
                            optional="YES">
                            <typename
                              name="text"/>
                          </explicit>
                          <explicit
                            name="relating_product_definition_formation">
                            <typename
                              name="product_definition_formation"/>
                          </explicit>
                          <explicit
                            name="related_product_definition_formation">
                            <typename
                              name="product_definition_formation"/>
                          </explicit>
                        </entity>

                        <entity
                          name="product_definition_formation_with_specified_source"
                          supertypes="product_definition_formation">
                          <explicit
                            name="make_or_buy">
                            <typename
                              name="source"/>
                          </explicit>
                        </entity>

                        <entity
                          name="product_definition_group_assignment"
                          supertypes="group_assignment">
                          <explicit
                            name="assigned_group">
                            <typename
                              name="product_definition_element_relationship"/>
                            <redeclaration
                              entity-ref="group_assignment"/>
                            </explicit>
                            <explicit
                              name="items">
                              <aggregate
                                type="SET"
                                lower="1"
                                upper="1"/>
                              <typename
                                name="product_definition_or_product_definition_relationship"/>
                            </explicit>
                          </entity>

                          <entity
                            name="product_definition_occurrence_relationship">
                            <explicit
                              name="name">
                              <typename
                                name="label"/>
                            </explicit>
                            <explicit
                              name="description"
                              optional="YES">
                              <typename
                                name="text"/>
                            </explicit>
                            <explicit
                              name="occurrence">
                              <typename
                                name="product_definition"/>
                            </explicit>
                            <explicit
                              name="occurrence_usage">
                              <typename
                                name="assembly_component_usage"/>
                            </explicit>
                            <where
                              label="WR1"
                              expression="occurrence_usage.relating_product_definition :&lt;&gt;: occurrence">
                            </where>
                            <where
                              label="WR2"
                              expression="occurrence_usage.related_product_definition :&lt;&gt;: occurrence">
                            </where>
                            <where
                              label="WR3"
                              expression="occurrence.formation :=: occurrence_usage.related_product_definition.formation">
                            </where>
                          </entity>

                          <entity
                            name="product_definition_relationship">
                            <explicit
                              name="id">
                              <typename
                                name="identifier"/>
                            </explicit>
                            <explicit
                              name="name">
                              <typename
                                name="label"/>
                            </explicit>
                            <explicit
                              name="description"
                              optional="YES">
                              <typename
                                name="text"/>
                            </explicit>
                            <explicit
                              name="relating_product_definition">
                              <typename
                                name="product_definition"/>
                            </explicit>
                            <explicit
                              name="related_product_definition">
                              <typename
                                name="product_definition"/>
                            </explicit>
                          </entity>

                          <entity
                            name="product_definition_shape"
                            supertypes="property_definition">
                            <unique
                              label="UR1">
                              <unique.attribute
                                entity-ref="property_definition"
                                attribute="definition"/>
                            </unique>
                            <where
                              label="WR1"
                              expression="SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.CHARACTERIZED_PRODUCT_DEFINITION', 'CATALOG_DATA_INFORMATION_MIM_LF.CHARACTERIZED_OBJECT'] * TYPEOF(SELF\property_definition.definition)) &gt; 0">
                            </where>
                          </entity>

                          <entity
                            name="product_definition_substitute">
                            <explicit
                              name="description"
                              optional="YES">
                              <typename
                                name="text"/>
                            </explicit>
                            <explicit
                              name="context_relationship">
                              <typename
                                name="product_definition_relationship"/>
                            </explicit>
                            <explicit
                              name="substitute_definition">
                              <typename
                                name="product_definition"/>
                            </explicit>
                            <derived
                              name="name"
                              expression="get_name_value (SELF)">
                              <typename
                                name="label"/>
                            </derived>
                            <where
                              label="WR1"
                              expression="context_relationship.related_product_definition :&lt;&gt;: substitute_definition">
                            </where>
                            <where
                              label="WR2"
                              expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                            </where>
                          </entity>

                          <entity
                            name="product_definition_usage"
                            super.expression="ONEOF ( MAKE_FROM_USAGE_OPTION, ASSEMBLY_COMPONENT_USAGE)"
                            supertypes="product_definition_relationship">
                            <unique
                              label="UR1">
                              <unique.attribute
                                entity-ref="product_definition_relationship"
                                attribute="id"/>
                              <unique.attribute
                                entity-ref="product_definition_relationship"
                                attribute="relating_product_definition"/>
                              <unique.attribute
                                entity-ref="product_definition_relationship"
                                attribute="related_product_definition"/>
                            </unique>
                            <where
                              label="WR1"
                              expression="acyclic_product_definition_relationship(SELF,[SELF\product_definition_relationship.related_product_definition],'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION_USAGE')">
                            </where>
                          </entity>

                          <entity
                            name="product_definition_with_associated_documents"
                            supertypes="product_definition">
                            <explicit
                              name="documentation_ids">
                              <aggregate
                                type="SET"
                                lower="1"
                                upper="?"/>
                              <typename
                                name="document"/>
                            </explicit>
                          </entity>

                          <entity
                            name="product_design_to_individual"
                            supertypes="product_relationship">
                            <explicit
                              name="related_product">
                              <typename
                                name="product_as_individual"/>
                              <redeclaration
                                entity-ref="product_relationship"/>
                              </explicit>
                              <derived
                                name="individual_product"
                                expression="SELF\product_relationship.related_product">
                                <typename
                                  name="PRODUCT_AS_INDIVIDUAL"/>
                              </derived>
                              <derived
                                name="product_design"
                                expression="SELF\product_relationship.relating_product">
                                <typename
                                  name="PRODUCT"/>
                              </derived>
                            </entity>

                            <entity
                              name="product_design_version_to_individual"
                              supertypes="product_definition_formation_relationship">
                              <explicit
                                name="related_product_definition_formation">
                                <typename
                                  name="product_as_individual_version"/>
                                <redeclaration
                                  entity-ref="product_definition_formation_relationship"/>
                                </explicit>
                                <derived
                                  name="individual_product"
                                  expression="SELF\product_definition_formation_relationship.related_product_definition_formation">
                                  <typename
                                    name="PRODUCT_AS_INDIVIDUAL_VERSION"/>
                                </derived>
                                <derived
                                  name="product_design_version"
                                  expression="SELF\product_definition_formation_relationship.relating_product_definition_formation">
                                  <typename
                                    name="PRODUCT_DEFINITION_FORMATION"/>
                                </derived>
                              </entity>

                              <entity
                                name="product_identification"
                                supertypes="configuration_item characterized_object">
                                <explicit
                                  name="item_concept">
                                  <typename
                                    name="product_class"/>
                                  <redeclaration
                                    entity-ref="configuration_item"/>
                                  </explicit>
                                  <where
                                    label="WR1"
                                    expression="SIZEOF(QUERY(cd &lt;* USEDIN (SELF ,'CATALOG_DATA_INFORMATION_MIM_LF.CONFIGURATION_DESIGN.CONFIGURATION')|('CATALOG_DATA_INFORMATION_MIM_LF.'+ 'PRODUCT_DEFINITION_FORMATION' IN TYPEOF (cd. design)) AND(SIZEOF (QUERY(prpc &lt;* USEDIN (cd. design\product_definition_formation.of_product , 'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS')| prpc. name IN ['part' , 'raw material' , 'tool'])) &gt;0))) &lt;=1">
                                  </where>
                                  <where
                                    label="WR2"
                                    expression="NOT ('CATALOG_DATA_INFORMATION_MIM_LF.'+ 'CONFIGURABLE_ITEM' IN TYPEOF(SELF)) XOR ('CATALOG_DATA_INFORMATION_MIM_LF.'+ 'PRODUCT_SPECIFICATION' IN TYPEOF (SELF))">
                                  </where>
                                </entity>

                                <entity
                                  name="product_planned_to_realized"
                                  supertypes="product_definition_formation_relationship">
                                  <explicit
                                    name="relating_product_definition_formation">
                                    <typename
                                      name="product_as_planned"/>
                                    <redeclaration
                                      entity-ref="product_definition_formation_relationship"/>
                                    </explicit>
                                    <explicit
                                      name="related_product_definition_formation">
                                      <typename
                                        name="product_as_realized"/>
                                      <redeclaration
                                        entity-ref="product_definition_formation_relationship"/>
                                      </explicit>
                                      <derived
                                        name="planned_product"
                                        expression="SELF\product_definition_formation_relationship.relating_product_definition_formation">
                                        <typename
                                          name="PRODUCT_AS_PLANNED"/>
                                      </derived>
                                      <derived
                                        name="realized_product"
                                        expression="SELF\product_definition_formation_relationship.related_product_definition_formation">
                                        <typename
                                          name="PRODUCT_AS_REALIZED"/>
                                      </derived>
                                    </entity>

                                    <entity
                                      name="product_related_product_category"
                                      supertypes="product_category">
                                      <explicit
                                        name="products">
                                        <aggregate
                                          type="SET"
                                          lower="1"
                                          upper="?"/>
                                        <typename
                                          name="product"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="product_relationship">
                                      <explicit
                                        name="id">
                                        <typename
                                          name="identifier"/>
                                      </explicit>
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="description"
                                        optional="YES">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="relating_product">
                                        <typename
                                          name="product"/>
                                      </explicit>
                                      <explicit
                                        name="related_product">
                                        <typename
                                          name="product"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="product_specification"
                                      supertypes="product_identification configurable_item">
                                    </entity>

                                    <entity
                                      name="promissory_usage_occurrence"
                                      supertypes="assembly_component_usage">
                                    </entity>

                                    <entity
                                      name="property_definition">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="description"
                                        optional="YES">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="definition">
                                        <typename
                                          name="characterized_definition"/>
                                      </explicit>
                                      <derived
                                        name="id"
                                        expression="get_id_value (SELF)">
                                        <typename
                                          name="identifier"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                                      </where>
                                    </entity>

                                    <entity
                                      name="property_definition_relationship">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="description">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="relating_property_definition">
                                        <typename
                                          name="property_definition"/>
                                      </explicit>
                                      <explicit
                                        name="related_property_definition">
                                        <typename
                                          name="property_definition"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="property_definition_representation">
                                      <explicit
                                        name="definition">
                                        <typename
                                          name="represented_definition"/>
                                      </explicit>
                                      <explicit
                                        name="used_representation">
                                        <typename
                                          name="representation"/>
                                      </explicit>
                                      <derived
                                        name="description"
                                        expression="get_description_value (SELF)">
                                        <typename
                                          name="text"/>
                                      </derived>
                                      <derived
                                        name="name"
                                        expression="get_name_value (SELF)">
                                        <typename
                                          name="label"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.NAMED_ITEM')) &lt;= 1">
                                      </where>
                                    </entity>

                                    <entity
                                      name="qualified_representation_item"
                                      supertypes="representation_item">
                                      <explicit
                                        name="qualifiers">
                                        <aggregate
                                          type="SET"
                                          lower="1"
                                          upper="?"/>
                                        <typename
                                          name="value_qualifier"/>
                                      </explicit>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF(QUERY(temp &lt;* qualifiers |'CATALOG_DATA_INFORMATION_MIM_LF.PRECISION_QUALIFIER' IN TYPEOF(temp))) &lt; 2">
                                      </where>
                                    </entity>

                                    <entity
                                      name="qualitative_uncertainty"
                                      supertypes="uncertainty_qualifier">
                                      <explicit
                                        name="uncertainty_value">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="quantified_assembly_component_usage"
                                      supertypes="assembly_component_usage">
                                      <explicit
                                        name="quantity">
                                        <typename
                                          name="measure_with_unit"/>
                                      </explicit>
                                      <where
                                        label="WR1"
                                        expression="(NOT ('NUMBER' IN TYPEOF(quantity.value_component))) OR (quantity.value_component &gt; 0)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="quasi_uniform_curve"
                                      supertypes="b_spline_curve">
                                    </entity>

                                    <entity
                                      name="quasi_uniform_surface"
                                      supertypes="b_spline_surface">
                                    </entity>

                                    <entity
                                      name="ratio_measure_with_unit"
                                      supertypes="measure_with_unit">
                                      <where
                                        label="WR1"
                                        expression="'CATALOG_DATA_INFORMATION_MIM_LF.RATIO_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="ratio_unit"
                                      supertypes="named_unit">
                                      <where
                                        label="WR1"
                                        expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="rational_b_spline_curve"
                                      supertypes="b_spline_curve">
                                      <explicit
                                        name="weights_data">
                                        <aggregate
                                          type="LIST"
                                          lower="2"
                                          upper="?"/>
                                        <builtintype
                                          type="REAL"/>
                                      </explicit>
                                      <derived
                                        name="weights"
                                        expression="list_to_array(weights_data,0, upper_index_on_control_points)">
                                        <aggregate
                                          type="ARRAY"
                                          lower="0"
                                          upper="upper_index_on_control_points"/>
                                        <builtintype
                                          type="REAL"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF(weights_data) = SIZEOF(SELF\b_spline_curve. control_points_list)">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="curve_weights_positive(SELF)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="rational_b_spline_surface"
                                      supertypes="b_spline_surface">
                                      <explicit
                                        name="weights_data">
                                        <aggregate
                                          type="LIST"
                                          lower="2"
                                          upper="?"/>
                                        <builtintype
                                          type="REAL"
                                          typelabel="? ] OF REAL"/>
                                      </explicit>
                                      <derived
                                        name="weights"
                                        expression="make_array_of_array(weights_data,0,u_upper,0,v_upper)">
                                        <aggregate
                                          type="ARRAY"
                                          lower="0"
                                          upper="u_upper"/>
                                        <builtintype
                                          type="REAL"
                                          typelabel="v_upper ] OF REAL"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="(SIZEOF(weights_data) = SIZEOF(SELF\b_spline_surface.control_points_list)) AND (SIZEOF(weights_data[1]) = SIZEOF(SELF\b_spline_surface.control_points_list[1]))">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="surface_weights_positive(SELF)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="rectangular_composite_surface"
                                      supertypes="bounded_surface">
                                      <explicit
                                        name="segments">
                                        <aggregate
                                          type="LIST"
                                          lower="1"
                                          upper="?"/>
                                        <typename
                                          name="LIST"/>
                                      </explicit>
                                      <derived
                                        name="n_u"
                                        expression="SIZEOF(segments)">
                                        <builtintype
                                          type="INTEGER"/>
                                      </derived>
                                      <derived
                                        name="n_v"
                                        expression="SIZEOF(segments[1])">
                                        <builtintype
                                          type="INTEGER"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF(QUERY (s &lt;* segments | n_v &lt;&gt; SIZEOF (s))) = 0">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="constraints_rectangular_composite_surface(SELF)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="rectangular_trimmed_surface"
                                      supertypes="bounded_surface">
                                      <explicit
                                        name="basis_surface">
                                        <typename
                                          name="surface"/>
                                      </explicit>
                                      <explicit
                                        name="u1">
                                        <typename
                                          name="parameter_value"/>
                                      </explicit>
                                      <explicit
                                        name="u2">
                                        <typename
                                          name="parameter_value"/>
                                      </explicit>
                                      <explicit
                                        name="v1">
                                        <typename
                                          name="parameter_value"/>
                                      </explicit>
                                      <explicit
                                        name="v2">
                                        <typename
                                          name="parameter_value"/>
                                      </explicit>
                                      <explicit
                                        name="usense">
                                        <builtintype
                                          type="BOOLEAN"/>
                                      </explicit>
                                      <explicit
                                        name="vsense">
                                        <builtintype
                                          type="BOOLEAN"/>
                                      </explicit>
                                      <where
                                        label="WR1"
                                        expression="u1 &lt;&gt; u2">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="v1 &lt;&gt; v2">
                                      </where>
                                      <where
                                        label="WR3"
                                        expression="(('CATALOG_DATA_INFORMATION_MIM_LF.ELEMENTARY_SURFACE' IN TYPEOF(basis_surface)) AND (NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PLANE' IN TYPEOF(basis_surface)))) OR('CATALOG_DATA_INFORMATION_MIM_LF.SURFACE_OF_REVOLUTION' IN TYPEOF(basis_surface)) OR (usense = (u2 &gt; u1))">
                                      </where>
                                      <where
                                        label="WR4"
                                        expression="(('CATALOG_DATA_INFORMATION_MIM_LF.SPHERICAL_SURFACE' IN TYPEOF(basis_surface)) OR('CATALOG_DATA_INFORMATION_MIM_LF.TOROIDAL_SURFACE' IN TYPEOF(basis_surface))) OR (vsense = (v2 &gt; v1))">
                                      </where>
                                    </entity>

                                    <entity
                                      name="relative_event_occurrence"
                                      supertypes="event_occurrence">
                                      <explicit
                                        name="base_event">
                                        <typename
                                          name="event_occurrence"/>
                                      </explicit>
                                      <explicit
                                        name="offset">
                                        <typename
                                          name="time_measure_with_unit"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="representation">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="items">
                                        <aggregate
                                          type="SET"
                                          lower="1"
                                          upper="?"/>
                                        <typename
                                          name="representation_item"/>
                                      </explicit>
                                      <explicit
                                        name="context_of_items">
                                        <typename
                                          name="representation_context"/>
                                      </explicit>
                                      <derived
                                        name="id"
                                        expression="get_id_value (SELF)">
                                        <typename
                                          name="identifier"/>
                                      </derived>
                                      <derived
                                        name="description"
                                        expression="get_description_value (SELF)">
                                        <typename
                                          name="text"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' +'ID_ATTRIBUTE.IDENTIFIED_ITEM'))&lt;= 1">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' +'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM'))&lt;= 1">
                                      </where>
                                    </entity>

                                    <entity
                                      name="representation_context">
                                      <explicit
                                        name="context_identifier">
                                        <typename
                                          name="identifier"/>
                                      </explicit>
                                      <explicit
                                        name="context_type">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <inverse
                                        name="representations_in_context"
                                        entity="representation"
                                        attribute="context_of_items">
                                        <inverse.aggregate
                                          type="SET"
                                          lower="1"
                                          upper="?"/>
                                      </inverse>
                                    </entity>

                                    <entity
                                      name="representation_item">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF(using_representations(SELF)) &gt; 0">
                                      </where>
                                    </entity>

                                    <entity
                                      name="representation_item_relationship">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="description"
                                        optional="YES">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="relating_representation_item">
                                        <typename
                                          name="representation_item"/>
                                      </explicit>
                                      <explicit
                                        name="related_representation_item">
                                        <typename
                                          name="representation_item"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="representation_map">
                                      <explicit
                                        name="mapping_origin">
                                        <typename
                                          name="representation_item"/>
                                      </explicit>
                                      <explicit
                                        name="mapped_representation">
                                        <typename
                                          name="representation"/>
                                      </explicit>
                                      <inverse
                                        name="map_usage"
                                        entity="mapped_item"
                                        attribute="mapping_source">
                                        <inverse.aggregate
                                          type="SET"
                                          lower="1"
                                          upper="?"/>
                                      </inverse>
                                      <where
                                        label="WR1"
                                        expression="item_in_context(SELF.mapping_origin, SELF.mapped_representation.context_of_items)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="representation_relationship">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="description"
                                        optional="YES">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="rep_1">
                                        <typename
                                          name="representation"/>
                                      </explicit>
                                      <explicit
                                        name="rep_2">
                                        <typename
                                          name="representation"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="representation_relationship_with_transformation"
                                      supertypes="representation_relationship">
                                      <explicit
                                        name="transformation_operator">
                                        <typename
                                          name="transformation"/>
                                      </explicit>
                                      <where
                                        label="WR1"
                                        expression="SELF\representation_relationship.rep_1.context_of_items:&lt;&gt;: SELF\representation_relationship.rep_2.context_of_items">
                                      </where>
                                    </entity>

                                    <entity
                                      name="role_association">
                                      <explicit
                                        name="role">
                                        <typename
                                          name="object_role"/>
                                      </explicit>
                                      <explicit
                                        name="item_with_role">
                                        <typename
                                          name="role_select"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="security_classification">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="purpose">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="security_level">
                                        <typename
                                          name="security_classification_level"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="security_classification_assignment"
                                      abstract.supertype="YES">
                                      <explicit
                                        name="assigned_security_classification">
                                        <typename
                                          name="security_classification"/>
                                      </explicit>
                                      <derived
                                        name="role"
                                        expression="get_role (SELF)">
                                        <typename
                                          name="object_role"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF(USEDIN(SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.ITEM_WITH_ROLE')) &lt;= 1">
                                      </where>
                                    </entity>

                                    <entity
                                      name="security_classification_level">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="serial_numbered_effectivity"
                                      supertypes="effectivity">
                                      <explicit
                                        name="effectivity_start_id">
                                        <typename
                                          name="identifier"/>
                                      </explicit>
                                      <explicit
                                        name="effectivity_end_id"
                                        optional="YES">
                                        <typename
                                          name="identifier"/>
                                      </explicit>
                                    </entity>

                                    <entity
                                      name="shape_aspect">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="description"
                                        optional="YES">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="of_shape">
                                        <typename
                                          name="product_definition_shape"/>
                                      </explicit>
                                      <explicit
                                        name="product_definitional">
                                        <builtintype
                                          type="LOGICAL"/>
                                      </explicit>
                                      <derived
                                        name="id"
                                        expression="get_id_value (SELF)">
                                        <typename
                                          name="identifier"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                                      </where>
                                    </entity>

                                    <entity
                                      name="shape_aspect_deriving_relationship"
                                      supertypes="shape_aspect_relationship">
                                      <where
                                        label="WR1"
                                        expression="'CATALOG_DATA_INFORMATION_MIM_LF.DERIVED_SHAPE_ASPECT' IN TYPEOF(SELF\SHAPE_ASPECT_RELATIONSHIP.RELATING_SHAPE_ASPECT)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="shape_aspect_relationship">
                                      <explicit
                                        name="name">
                                        <typename
                                          name="label"/>
                                      </explicit>
                                      <explicit
                                        name="description"
                                        optional="YES">
                                        <typename
                                          name="text"/>
                                      </explicit>
                                      <explicit
                                        name="relating_shape_aspect">
                                        <typename
                                          name="shape_aspect"/>
                                      </explicit>
                                      <explicit
                                        name="related_shape_aspect">
                                        <typename
                                          name="shape_aspect"/>
                                      </explicit>
                                      <derived
                                        name="id"
                                        expression="get_id_value (SELF)">
                                        <typename
                                          name="identifier"/>
                                      </derived>
                                      <where
                                        label="WR1"
                                        expression="SIZEOF (USEDIN (SELF, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.IDENTIFIED_ITEM')) &lt;= 1">
                                      </where>
                                    </entity>

                                    <entity
                                      name="shape_definition_representation"
                                      supertypes="property_definition_representation">
                                      <where
                                        label="WR1"
                                        expression="('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION_SHAPE' IN TYPEOF (SELF.definition)) OR ('CATALOG_DATA_INFORMATION_MIM_LF.SHAPE_DEFINITION' IN TYPEOF (SELF.definition.definition))">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="'CATALOG_DATA_INFORMATION_MIM_LF.SHAPE_REPRESENTATION' IN TYPEOF(SELF.used_representation)">
                                      </where>
                                    </entity>

                                    <entity
                                      name="shape_dimension_representation"
                                      supertypes="shape_representation">
                                      <where
                                        label="WR1"
                                        expression="SIZEOF (QUERY (temp &lt;* SELF\representation.items | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (temp)))) = 0">
                                      </where>
                                      <where
                                        label="WR2"
                                        expression="SIZEOF (SELF\representation.items) &lt;= 3">
                                      </where>
                                      <where
                                        label="WR3"
                                        expression="SIZEOF (QUERY (pos_mri &lt;* QUERY (real_mri &lt;* SELF\representation.items | 'REAL' IN TYPEOF(real_mri\measure_with_unit.value_component)) | NOT (pos_mri\measure_with_unit.value_component &gt; 0.0))) = 0">
                                      </where>
                                    </entity>

                                    <entity
                                      name="shape_representation"
                                      supertypes="representation">
                                    </entity>

                                    <entity
                                      name="shape_representation_relationship"
                                      supertypes="representation_relationship">
                                      <where
                                        label="WR1"
                                        expression="'CATALOG_DATA_INFORMATION_MIM_LF.SHAPE_REPRESENTATION' IN (TYPEOF(SELF\representation_relationship.rep_1) + TYPEOF(SELF\representation_relationship.rep_2))">
                                      </where>
                                    </entity>

                                    <entity
                                      name="si_unit"
                                      supertypes="named_unit">
                                      <explicit
                                        name="prefix"
                                        optional="YES">
                                        <typename
                                          name="si_prefix"/>
                                      </explicit>
                                      <explicit
                                        name="name">
                                        <typename
                                          name="si_unit_name"/>
                                      </explicit>
                                      <derived
                                        name="dimensions"
                                        expression="dimensions_for_si_unit (name)">
                                        <typename
                                          name="dimensional_exponents"/>
                                        <redeclaration
                                          entity-ref="named_unit"/>
                                        </derived>
                                      </entity>

                                      <entity
                                        name="solid_angle_measure_with_unit"
                                        supertypes="measure_with_unit">
                                        <where
                                          label="WR1"
                                          expression="'CATALOG_DATA_INFORMATION_MIM_LF.SOLID_ANGLE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="solid_angle_unit"
                                        supertypes="named_unit">
                                        <where
                                          label="WR1"
                                          expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="specified_higher_usage_occurrence"
                                        supertypes="assembly_component_usage">
                                        <explicit
                                          name="upper_usage">
                                          <typename
                                            name="assembly_component_usage"/>
                                        </explicit>
                                        <explicit
                                          name="next_usage">
                                          <typename
                                            name="next_assembly_usage_occurrence"/>
                                        </explicit>
                                        <unique
                                          label="UR1">
                                          <unique.attribute
                                            attribute="upper_usage"/>
                                          <unique.attribute
                                            attribute="next_usage"/>
                                        </unique>
                                        <where
                                          label="WR1"
                                          expression="SELF :&lt;&gt;: upper_usage">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SELF\product_definition_relationship.relating_product_definition:=: upper_usage.relating_product_definition">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SELF\product_definition_relationship.related_product_definition:=: next_usage.related_product_definition">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="(upper_usage.related_product_definition :=: next_usage.relating_product_definition) OR(SIZEOF (QUERY (pdr &lt;* USEDIN (upper_usage.related_product_definition,'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.' +'RELATED_PRODUCT_DEFINITION') | pdr.relating_product_definition :=: next_usage.relating_product_definition)) = 1)">
                                        </where>
                                        <where
                                          label="WR5"
                                          expression="SIZEOF (['CATALOG_DATA_INFORMATION_MIM_LF.NEXT_ASSEMBLY_USAGE_OCCURRENCE','CATALOG_DATA_INFORMATION_MIM_LF.SPECIFIED_HIGHER_USAGE_OCCURRENCE']* TYPEOF(upper_usage)) = 1">
                                        </where>
                                      </entity>

                                      <entity
                                        name="spherical_surface"
                                        supertypes="elementary_surface">
                                        <explicit
                                          name="radius">
                                          <typename
                                            name="positive_length_measure"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="standard_uncertainty"
                                        supertypes="uncertainty_qualifier">
                                        <explicit
                                          name="uncertainty_value">
                                          <builtintype
                                            type="REAL"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="surface"
                                        super.expression="ONEOF ( ELEMENTARY_SURFACE, SWEPT_SURFACE, BOUNDED_SURFACE, OFFSET_SURFACE, SURFACE_REPLICA)"
                                        supertypes="geometric_representation_item">
                                      </entity>

                                      <entity
                                        name="surface_curve"
                                        supertypes="curve">
                                        <explicit
                                          name="curve_3d">
                                          <typename
                                            name="curve"/>
                                        </explicit>
                                        <explicit
                                          name="associated_geometry">
                                          <aggregate
                                            type="LIST"
                                            lower="1"
                                            upper="2"/>
                                          <typename
                                            name="pcurve_or_surface"/>
                                        </explicit>
                                        <explicit
                                          name="master_representation">
                                          <typename
                                            name="preferred_surface_curve_representation"/>
                                        </explicit>
                                        <derived
                                          name="basis_surface"
                                          expression="get_basis_surface(SELF)">
                                          <aggregate
                                            type="SET"
                                            lower="1"
                                            upper="2"/>
                                          <typename
                                            name="surface"/>
                                        </derived>
                                        <where
                                          label="WR1"
                                          expression="curve_3d.dim = 3">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="('CATALOG_DATA_INFORMATION_MIM_LF.PCURVE' IN TYPEOF(associated_geometry[1])) OR(master_representation &lt;&gt; pcurve_s1)">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="('CATALOG_DATA_INFORMATION_MIM_LF.PCURVE' IN TYPEOF(associated_geometry[2])) OR(master_representation &lt;&gt; pcurve_s2)">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PCURVE' IN TYPEOF(curve_3d))">
                                        </where>
                                      </entity>

                                      <entity
                                        name="surface_of_linear_extrusion"
                                        supertypes="swept_surface">
                                        <explicit
                                          name="extrusion_axis">
                                          <typename
                                            name="vector"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="surface_of_revolution"
                                        supertypes="swept_surface">
                                        <explicit
                                          name="axis_position">
                                          <typename
                                            name="axis1_placement"/>
                                        </explicit>
                                        <derived
                                          name="axis_line"
                                          expression="representation_item('')|| geometric_representation_item()|| curve()|| line(axis_position.location, representation_item('')|| geometric_representation_item()|| vector(axis_position.z, 1.0))">
                                          <typename
                                            name="line"/>
                                        </derived>
                                      </entity>

                                      <entity
                                        name="surface_patch"
                                        supertypes="founded_item">
                                        <explicit
                                          name="parent_surface">
                                          <typename
                                            name="bounded_surface"/>
                                        </explicit>
                                        <explicit
                                          name="u_transition">
                                          <typename
                                            name="transition_code"/>
                                        </explicit>
                                        <explicit
                                          name="v_transition">
                                          <typename
                                            name="transition_code"/>
                                        </explicit>
                                        <explicit
                                          name="u_sense">
                                          <builtintype
                                            type="BOOLEAN"/>
                                        </explicit>
                                        <explicit
                                          name="v_sense">
                                          <builtintype
                                            type="BOOLEAN"/>
                                        </explicit>
                                        <inverse
                                          name="using_surfaces"
                                          entity="rectangular_composite_surface"
                                          attribute="segments">
                                          <inverse.aggregate
                                            type="BAG"
                                            lower="1"
                                            upper="?"/>
                                        </inverse>
                                        <where
                                          label="WR1"
                                          expression="(NOT ('CATALOG_DATA_INFORMATION_MIM_LF.CURVE_BOUNDED_SURFACE' IN TYPEOF(parent_surface)))">
                                        </where>
                                      </entity>

                                      <entity
                                        name="surface_replica"
                                        supertypes="surface">
                                        <explicit
                                          name="parent_surface">
                                          <typename
                                            name="surface"/>
                                        </explicit>
                                        <explicit
                                          name="transformation">
                                          <typename
                                            name="cartesian_transformation_operator_3d"/>
                                        </explicit>
                                        <where
                                          label="WR1"
                                          expression="acyclic_surface_replica(SELF, parent_surface)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="swept_surface"
                                        super.expression="ONEOF ( SURFACE_OF_LINEAR_EXTRUSION, SURFACE_OF_REVOLUTION)"
                                        supertypes="surface">
                                        <explicit
                                          name="swept_curve">
                                          <typename
                                            name="curve"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="tangent"
                                        supertypes="derived_shape_aspect">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (SELF\derived_shape_aspect.deriving_relationships)= 1">
                                        </where>
                                      </entity>

                                      <entity
                                        name="thermodynamic_temperature_measure_with_unit"
                                        supertypes="measure_with_unit">
                                        <where
                                          label="WR1"
                                          expression="'CATALOG_DATA_INFORMATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="thermodynamic_temperature_unit"
                                        supertypes="named_unit">
                                        <where
                                          label="WR1"
                                          expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 0.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="time_interval">
                                        <explicit
                                          name="id">
                                          <typename
                                            name="identifier"/>
                                        </explicit>
                                        <explicit
                                          name="name">
                                          <typename
                                            name="label"/>
                                        </explicit>
                                        <explicit
                                          name="description"
                                          optional="YES">
                                          <typename
                                            name="text"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="time_interval_assignment"
                                        abstract.supertype="YES">
                                        <explicit
                                          name="assigned_time_interval">
                                          <typename
                                            name="time_interval"/>
                                        </explicit>
                                        <explicit
                                          name="role">
                                          <typename
                                            name="time_interval_role"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="time_interval_based_effectivity"
                                        supertypes="effectivity">
                                        <explicit
                                          name="effectivity_period">
                                          <typename
                                            name="time_interval"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="time_interval_relationship">
                                        <explicit
                                          name="name">
                                          <typename
                                            name="label"/>
                                        </explicit>
                                        <explicit
                                          name="description"
                                          optional="YES">
                                          <typename
                                            name="text"/>
                                        </explicit>
                                        <explicit
                                          name="relating_time_interval">
                                          <typename
                                            name="time_interval"/>
                                        </explicit>
                                        <explicit
                                          name="related_time_interval">
                                          <typename
                                            name="time_interval"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="time_interval_role">
                                        <explicit
                                          name="name">
                                          <typename
                                            name="label"/>
                                        </explicit>
                                        <explicit
                                          name="description"
                                          optional="YES">
                                          <typename
                                            name="text"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="time_interval_with_bounds"
                                        supertypes="time_interval">
                                        <explicit
                                          name="primary_bound"
                                          optional="YES">
                                          <typename
                                            name="date_time_or_event_occurrence"/>
                                        </explicit>
                                        <explicit
                                          name="secondary_bound"
                                          optional="YES">
                                          <typename
                                            name="date_time_or_event_occurrence"/>
                                        </explicit>
                                        <explicit
                                          name="duration"
                                          optional="YES">
                                          <typename
                                            name="time_measure_with_unit"/>
                                        </explicit>
                                        <where
                                          label="WR1"
                                          expression="NOT (EXISTS(secondary_bound) AND EXISTS(duration))">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="EXISTS(primary_bound) OR EXISTS(secondary_bound)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="time_measure_with_unit"
                                        supertypes="measure_with_unit">
                                        <where
                                          label="WR1"
                                          expression="'CATALOG_DATA_INFORMATION_MIM_LF.TIME_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="time_unit"
                                        supertypes="named_unit">
                                        <where
                                          label="WR1"
                                          expression="(SELF\named_unit.dimensions.length_exponent = 0.0) AND (SELF\named_unit.dimensions.mass_exponent = 0.0) AND (SELF\named_unit.dimensions.time_exponent = 1.0) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.0) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.0) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.0) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.0)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="tolerance_value">
                                        <explicit
                                          name="lower_bound">
                                          <typename
                                            name="measure_with_unit"/>
                                        </explicit>
                                        <explicit
                                          name="upper_bound">
                                          <typename
                                            name="measure_with_unit"/>
                                        </explicit>
                                        <where
                                          label="WR1"
                                          expression="upper_bound\measure_with_unit.value_component &gt; lower_bound\measure_with_unit.value_component">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="upper_bound\measure_with_unit.unit_component = lower_bound\measure_with_unit.unit_component">
                                        </where>
                                      </entity>

                                      <entity
                                        name="topological_representation_item"
                                        super.expression="ONEOF ( VERTEX, EDGE, FACE_BOUND, FACE,( LOOP ANDOR PATH))"
                                        supertypes="representation_item">
                                      </entity>

                                      <entity
                                        name="toroidal_surface"
                                        supertypes="elementary_surface">
                                        <explicit
                                          name="major_radius">
                                          <typename
                                            name="positive_length_measure"/>
                                        </explicit>
                                        <explicit
                                          name="minor_radius">
                                          <typename
                                            name="positive_length_measure"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="trimmed_curve"
                                        supertypes="bounded_curve">
                                        <explicit
                                          name="basis_curve">
                                          <typename
                                            name="curve"/>
                                        </explicit>
                                        <explicit
                                          name="trim_1">
                                          <aggregate
                                            type="SET"
                                            lower="1"
                                            upper="2"/>
                                          <typename
                                            name="trimming_select"/>
                                        </explicit>
                                        <explicit
                                          name="trim_2">
                                          <aggregate
                                            type="SET"
                                            lower="1"
                                            upper="2"/>
                                          <typename
                                            name="trimming_select"/>
                                        </explicit>
                                        <explicit
                                          name="sense_agreement">
                                          <builtintype
                                            type="BOOLEAN"/>
                                        </explicit>
                                        <explicit
                                          name="master_representation">
                                          <typename
                                            name="trimming_preference"/>
                                        </explicit>
                                        <where
                                          label="WR1"
                                          expression="(HIINDEX(trim_1) = 1) OR (TYPEOF(trim_1[1]) &lt;&gt; TYPEOF(trim_1[2]))">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="(HIINDEX(trim_2) = 1) OR (TYPEOF(trim_2[1]) &lt;&gt; TYPEOF(trim_2[2]))">
                                        </where>
                                      </entity>

                                      <entity
                                        name="type_qualifier">
                                        <explicit
                                          name="name">
                                          <typename
                                            name="label"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="uncertainty_measure_with_unit"
                                        supertypes="measure_with_unit">
                                        <explicit
                                          name="name">
                                          <typename
                                            name="label"/>
                                        </explicit>
                                        <explicit
                                          name="description"
                                          optional="YES">
                                          <typename
                                            name="text"/>
                                        </explicit>
                                        <where
                                          label="WR1"
                                          expression="valid_measure_value (SELF\measure_with_unit.value_component)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="uncertainty_qualifier"
                                        super.expression="ONEOF ( STANDARD_UNCERTAINTY, QUALITATIVE_UNCERTAINTY)">
                                        <explicit
                                          name="measure_name">
                                          <typename
                                            name="label"/>
                                        </explicit>
                                        <explicit
                                          name="description">
                                          <typename
                                            name="text"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="uniform_curve"
                                        supertypes="b_spline_curve">
                                      </entity>

                                      <entity
                                        name="uniform_surface"
                                        supertypes="b_spline_surface">
                                      </entity>

                                      <entity
                                        name="value_range"
                                        supertypes="compound_representation_item">
                                        <where
                                          label="WR1"
                                          expression="('CATALOG_DATA_INFORMATION_MIM_LF.'+ 'SET_REPRESENTATION_ITEM' IN TYPEOF (item_element)) AND value_range_wr1 (item_element)">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="value_range_wr2 (item_element)">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="value_range_wr3 (item_element)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="value_representation_item"
                                        supertypes="representation_item">
                                        <explicit
                                          name="value_component">
                                          <typename
                                            name="measure_value"/>
                                        </explicit>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (rep &lt;* using_representations (SELF) | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.GLOBAL_UNIT_ASSIGNED_CONTEXT' IN TYPEOF (rep.context_of_items)))) = 0">
                                        </where>
                                      </entity>

                                      <entity
                                        name="vector"
                                        supertypes="geometric_representation_item">
                                        <explicit
                                          name="orientation">
                                          <typename
                                            name="direction"/>
                                        </explicit>
                                        <explicit
                                          name="magnitude">
                                          <typename
                                            name="length_measure"/>
                                        </explicit>
                                        <where
                                          label="WR1"
                                          expression="magnitude &gt;= 0.0">
                                        </where>
                                      </entity>

                                      <entity
                                        name="versioned_action_request">
                                        <explicit
                                          name="id">
                                          <typename
                                            name="identifier"/>
                                        </explicit>
                                        <explicit
                                          name="version">
                                          <typename
                                            name="label"/>
                                        </explicit>
                                        <explicit
                                          name="purpose">
                                          <typename
                                            name="text"/>
                                        </explicit>
                                        <explicit
                                          name="description"
                                          optional="YES">
                                          <typename
                                            name="text"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="vertex"
                                        supertypes="topological_representation_item">
                                      </entity>

                                      <entity
                                        name="vertex_loop"
                                        supertypes="loop">
                                        <explicit
                                          name="loop_vertex">
                                          <typename
                                            name="vertex"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="vertex_point"
                                        supertypes="vertex geometric_representation_item">
                                        <explicit
                                          name="vertex_geometry">
                                          <typename
                                            name="point"/>
                                        </explicit>
                                      </entity>

                                      <entity
                                        name="volume_measure_with_unit"
                                        supertypes="measure_with_unit">
                                        <where
                                          label="WR1"
                                          expression="'CATALOG_DATA_INFORMATION_MIM_LF.VOLUME_UNIT' IN TYPEOF (SELF\measure_with_unit.unit_component)">
                                        </where>
                                      </entity>

                                      <entity
                                        name="volume_unit"
                                        supertypes="named_unit">
                                        <where
                                          label="WR1"
                                          expression="(SELF\named_unit.dimensions.length_exponent = 3.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
                                        </where>
                                      </entity>

                                      <function
                                        name="acyclic_curve_replica">
                                        <parameter
                                          name="rep">
                                          <typename
                                            name="curve_replica"/>
                                        </parameter>
                                        <parameter
                                          name="parent">
                                          <typename
                                            name="curve"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
IF NOT (('CATALOG_DATA_INFORMATION_MIM_LF.CURVE_REPLICA') IN TYPEOF(parent)) THEN
RETURN (TRUE);
END_IF;
IF (parent :=: rep) THEN
RETURN (FALSE);
ELSE
RETURN(acyclic_curve_replica(rep,
parent\curve_replica.parent_curve));
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="acyclic_mapped_representation">
                                        <parameter
                                          name="parent_set">
                                          <aggregate
                                            type="SET"/>
                                          <typename
                                            name="representation"/>
                                        </parameter>
                                        <parameter
                                          name="children_set">
                                          <aggregate
                                            type="SET"/>
                                          <typename
                                            name="representation_item"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
x,y : SET OF representation_item;
END_LOCAL;
x := QUERY(z &lt;* children_set | 'CATALOG_DATA_INFORMATION_MIM_LF.MAPPED_ITEM'
IN TYPEOF(z));
IF SIZEOF(x) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(x);
IF x[i]\mapped_item.mapping_source.mapped_representation
IN parent_set THEN
RETURN (FALSE);
END_IF;
IF NOT acyclic_mapped_representation
(parent_set +
x[i]\mapped_item.mapping_source.mapped_representation,
x[i]\mapped_item.mapping_source.mapped_representation.items) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
x := children_set - x;
IF SIZEOF(x) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(x);
y := QUERY(z &lt;* bag_to_set(USEDIN(x[i], '')) |
'CATALOG_DATA_INFORMATION_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z));
IF NOT acyclic_mapped_representation(parent_set, y) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
RETURN (TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="acyclic_point_replica">
                                        <parameter
                                          name="rep">
                                          <typename
                                            name="point_replica"/>
                                        </parameter>
                                        <parameter
                                          name="parent">
                                          <typename
                                            name="point"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
IF NOT (('CATALOG_DATA_INFORMATION_MIM_LF.POINT_REPLICA') IN TYPEOF(parent)) THEN
RETURN (TRUE);
END_IF;
IF (parent :=: rep) THEN
RETURN (FALSE);
ELSE RETURN(acyclic_point_replica(rep, parent\point_replica.parent_pt));
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="acyclic_product_category_relationship">
                                        <parameter
                                          name="relation">
                                          <typename
                                            name="product_category_relationship"/>
                                        </parameter>
                                        <parameter
                                          name="children">
                                          <aggregate
                                            type="SET"/>
                                          <typename
                                            name="product_category"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
x : SET OF product_category_relationship;
local_children : SET OF product_category;
END_LOCAL;
REPEAT i := 1 TO HIINDEX(children);
IF relation.category :=: children[i] THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
x := bag_to_set(USEDIN(relation.category, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY'));
local_children := children + relation.category;
IF SIZEOF(x) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(x);
IF NOT acyclic_product_category_relationship(x[i], local_children) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
END_IF;
RETURN (TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="acyclic_product_definition_relationship">
                                        <parameter
                                          name="relation">
                                          <typename
                                            name="product_definition_relationship"/>
                                        </parameter>
                                        <parameter
                                          name="relatives">
                                          <aggregate
                                            type="SET"
                                            lower="1"
                                            upper="?"/>
                                          <typename
                                            name="product_definition"/>
                                        </parameter>
                                        <parameter
                                          name="specific_relation">
                                          <builtintype
                                            type="STRING"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
x : SET OF product_definition_relationship;
END_LOCAL;
IF relation.relating_product_definition IN relatives THEN
RETURN (FALSE);
END_IF;
x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.relating_product_definition, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'PRODUCT_DEFINITION_RELATIONSHIP.' + 'RELATED_PRODUCT_DEFINITION')) | specific_relation IN TYPEOF(pd));
REPEAT i := 1 TO HIINDEX(x);
IF NOT acyclic_product_definition_relationship(x[i], relatives + relation.relating_product_definition, specific_relation) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="acyclic_representation_relationship">
                                        <parameter
                                          name="relation">
                                          <typename
                                            name="representation_relationship"/>
                                        </parameter>
                                        <parameter
                                          name="relatives">
                                          <aggregate
                                            type="SET"
                                            lower="1"
                                            upper="?"/>
                                          <typename
                                            name="representation"/>
                                        </parameter>
                                        <parameter
                                          name="specific_relation">
                                          <builtintype
                                            type="STRING"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
x : SET OF representation_relationship;
END_LOCAL;
IF relation.rep_1 IN relatives THEN
RETURN (FALSE);
END_IF;
x := QUERY(r &lt;* bag_to_set(USEDIN(relation.rep_1, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
REPEAT i := 1 TO HIINDEX(x);
IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN (TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="acyclic_surface_replica">
                                        <parameter
                                          name="rep">
                                          <typename
                                            name="surface_replica"/>
                                        </parameter>
                                        <parameter
                                          name="parent">
                                          <typename
                                            name="surface"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
IF NOT (('CATALOG_DATA_INFORMATION_MIM_LF.SURFACE_REPLICA') IN TYPEOF(parent)) THEN
RETURN (TRUE);
END_IF;
IF (parent :=: rep) THEN
RETURN (FALSE);
ELSE RETURN(acyclic_surface_replica(rep,
parent\surface_replica.parent_surface));
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="allowed_translations">
                                        <parameter
                                          name="ent">
                                          <builtintype
                                            type="GENERIC"/>
                                        </parameter>
                                        <parameter
                                          name="translatable_attributes">
                                          <aggregate
                                            type="SET"/>
                                          <builtintype
                                            type="STRING"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
LOCAL
mlaa: BAG OF multi_language_attribute_assignment;
ala: BAG OF attribute_language_assignment;
END_LOCAL;
IF (SIZEOF(translatable_attributes)=0) THEN
RETURN(UNKNOWN);
END_IF;
mlaa:= USEDIN (ent , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.ITEMS');
REPEAT i:=1 TO HIINDEX(mlaa);
IF NOT (mlaa[i].attribute_name IN translatable_attributes) THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
ala:= USEDIN (ent , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS');
REPEAT i:=1 TO HIINDEX(ala);
IF NOT (ala[i].attribute_name IN translatable_attributes) THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
RETURN(TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="associated_surface">
                                        <parameter
                                          name="arg">
                                          <typename
                                            name="pcurve_or_surface"/>
                                        </parameter>
                                        <typename
                                          name="surface"/>
                                        <algorithm>
LOCAL
surf : surface;
END_LOCAL;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.PCURVE' IN TYPEOF(arg) THEN
surf := arg.basis_surface;
ELSE
surf := arg;
END_IF;
RETURN(surf);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="at_most_one_class_system">
                                        <parameter
                                          name="ent">
                                          <builtintype
                                            type="GENERIC"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
RETURN(
SIZEOF (QUERY (ia &lt;* USEDIN (ent , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_CLASSIFICATION_ASSIGNMENT.ITEMS') |
ia.role.name = 'class system membership'))&lt;=1);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="at_most_one_version_id">
                                        <parameter
                                          name="ent">
                                          <builtintype
                                            type="GENERIC"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
RETURN(
SIZEOF (QUERY (ia &lt;* USEDIN (ent , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_IDENTIFICATION_ASSIGNMENT.ITEMS') |
ia.role.name ='version')) &lt;=1);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="bag_to_set">
                                        <parameter
                                          name="the_bag">
                                          <aggregate
                                            type="BAG"/>
                                          <builtintype
                                            type="GENERIC"
                                            typelabel="intype"/>
                                        </parameter>
                                        <aggregate
                                          type="SET"/>
                                        <builtintype
                                          type="GENERIC"
                                          typelabel="intype"/>
                                        <algorithm>
LOCAL
the_set : SET OF GENERIC:intype := [];
END_LOCAL;
IF SIZEOF(the_bag) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(the_bag);
the_set := the_set + the_bag[i];
END_REPEAT;
END_IF;
RETURN (the_set);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="base_axis">
                                        <parameter
                                          name="dim">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="axis1">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="axis2">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="axis3">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <aggregate
                                          type="LIST"
                                          lower="2"
                                          upper="3"/>
                                        <typename
                                          name="direction"/>
                                        <algorithm>
LOCAL
u : LIST [2:3] OF direction;
factor : REAL;
d1, d2 : direction;
END_LOCAL;
IF (dim = 3) THEN
d1 := NVL(normalise(axis3), dummy_gri || direction([0.0,0.0,1.0]));
d2 := first_proj_axis(d1,axis1);
u := [d2, second_proj_axis(d1,d2,axis2), d1];
ELSE
IF EXISTS(axis1) THEN
d1 := normalise(axis1);
u := [d1, orthogonal_complement(d1)];
IF EXISTS(axis2) THEN
factor := dot_product(axis2,u[2]);
IF (factor &lt; 0.0) THEN
u[2].direction_ratios[1] := -u[2].direction_ratios[1];
u[2].direction_ratios[2] := -u[2].direction_ratios[2];
END_IF;
END_IF;
ELSE
IF EXISTS(axis2) THEN
d1 := normalise(axis2);
u := [orthogonal_complement(d1), d1];
u[1].direction_ratios[1] := -u[1].direction_ratios[1];
u[1].direction_ratios[2] := -u[1].direction_ratios[2];
ELSE
u := [dummy_gri || direction([1.0, 0.0]), dummy_gri ||
direction([0.0, 1.0])];
END_IF;
END_IF;
END_IF;
RETURN(u);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="boolean_choose">
                                        <parameter
                                          name="b">
                                          <builtintype
                                            type="BOOLEAN"/>
                                        </parameter>
                                        <parameter
                                          name="choice1">
                                          <builtintype
                                            type="GENERIC"/>
                                        </parameter>
                                        <parameter
                                          name="choice2">
                                          <builtintype
                                            type="GENERIC"/>
                                        </parameter>
                                        <builtintype
                                          type="GENERIC"/>
                                        <algorithm>
IF b THEN
RETURN (choice1);
ELSE
RETURN (choice2);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="build_2axes">
                                        <parameter
                                          name="ref_direction">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <aggregate
                                          type="LIST"
                                          lower="2"
                                          upper="2"/>
                                        <typename
                                          name="direction"/>
                                        <algorithm>
LOCAL
d : direction := NVL(normalise(ref_direction),
dummy_gri || direction([1.0,0.0]));
END_LOCAL;
RETURN([d, orthogonal_complement(d)]);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="build_axes">
                                        <parameter
                                          name="axis">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="ref_direction">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <aggregate
                                          type="LIST"
                                          lower="3"
                                          upper="3"/>
                                        <typename
                                          name="direction"/>
                                        <algorithm>
LOCAL
d1, d2 : direction;
END_LOCAL;
d1 := NVL(normalise(axis), dummy_gri || direction([0.0,0.0,1.0]));
d2 := first_proj_axis(d1, ref_direction);
RETURN([d2, normalise(cross_product(d1,d2)).orientation, d1]);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="categories_of_product">
                                        <parameter
                                          name="obj">
                                          <typename
                                            name="product"/>
                                        </parameter>
                                        <aggregate
                                          type="SET"/>
                                        <builtintype
                                          type="STRING"/>
                                        <algorithm>
LOCAL
category_assignments: BAG OF product_category;
categories: SET OF STRING:=[];
i: INTEGER;
END_LOCAL;
category_assignments := USEDIN(obj, 'PRODUCT_DEFINITION_SCHEMA' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS');
REPEAT i := LOINDEX(category_assignments) TO HIINDEX(category_assignments) BY 1;
categories := categories + category_assignments[i].name;
END_REPEAT;
RETURN(categories);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="class_assignment_is_valid">
                                        <parameter
                                          name="aia">
                                          <typename
                                            name="applied_classification_assignment"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
item: classification_item;
role: classification_role;
END_LOCAL;
role:= aia.role;
IF ('CATALOG_DATA_INFORMATION_MIM_LF.' +'CLASS_SYSTEM' IN TYPEOF(aia.assigned_class)) THEN
IF(role.name &lt;&gt; 'class system membership') THEN
RETURN(FALSE);
END_IF;
REPEAT i:=LOINDEX(aia.items) TO HIINDEX(aia.items);
item:= aia.items[i];
IF (SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.' + 'CLASS_SYSTEM_ITEM']*TYPEOF(item))=0) THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
END_IF;
IF ('CATALOG_DATA_INFORMATION_MIM_LF.' +'CHARACTERIZED_CLASS' IN TYPEOF(aia.assigned_class)) THEN
IF	NOT(role.name IN ['definitional','non-definitional','']) THEN
RETURN(FALSE);
END_IF;
REPEAT i:=LOINDEX(aia.items) TO HIINDEX(aia.items);
item:= aia.items[i];
IF (SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.' + 'CLASSIFIED_ITEM']*TYPEOF(item))=0) THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
END_IF;
RETURN(TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="constraints_composite_curve_on_surface">
                                        <parameter
                                          name="c">
                                          <typename
                                            name="composite_curve_on_surface"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
n_segments : INTEGER := SIZEOF(c.segments);
END_LOCAL;
REPEAT k := 1 TO n_segments;
IF (NOT('CATALOG_DATA_INFORMATION_MIM_LF.PCURVE' IN
TYPEOF(c\composite_curve.segments[k].parent_curve))) AND
(NOT('CATALOG_DATA_INFORMATION_MIM_LF.SURFACE_CURVE' IN
TYPEOF(c\composite_curve.segments[k].parent_curve))) AND
(NOT('CATALOG_DATA_INFORMATION_MIM_LF.COMPOSITE_CURVE_ON_SURFACE' IN
TYPEOF(c\composite_curve.segments[k].parent_curve))) THEN
RETURN (FALSE);
END_IF;
END_REPEAT;
RETURN(TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="constraints_param_b_spline">
                                        <parameter
                                          name="degree">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="up_knots">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="up_cp">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="knot_mult">
                                          <aggregate
                                            type="LIST"/>
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="knots">
                                          <aggregate
                                            type="LIST"/>
                                          <typename
                                            name="parameter_value"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
result : BOOLEAN := TRUE;
k, sum : INTEGER;
END_LOCAL;
sum := knot_mult[1];
REPEAT i := 2 TO up_knots;
sum := sum + knot_mult[i];
END_REPEAT;
IF (degree &lt; 1) OR (up_knots &lt; 2) OR (up_cp &lt; degree) OR
(sum &lt;&gt; (degree + up_cp + 2)) THEN
result := FALSE;
RETURN(result);
END_IF;
k := knot_mult[1];
IF (k &lt; 1) OR (k &gt; degree + 1) THEN
result := FALSE;
RETURN(result);
END_IF;
REPEAT i := 2 TO up_knots;
IF (knot_mult[i] &lt; 1) OR (knots[i] &lt;= knots[i-1]) THEN
result := FALSE;
RETURN(result);
END_IF;
k := knot_mult[i];
IF (i &lt; up_knots) AND (k &gt; degree) THEN
result := FALSE;
RETURN(result);
END_IF;
IF (i = up_knots) AND (k &gt; degree + 1) THEN
result := FALSE;
RETURN(result);
END_IF;
END_REPEAT;
RETURN(result);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="constraints_rectangular_composite_surface">
                                        <parameter
                                          name="s">
                                          <typename
                                            name="rectangular_composite_surface"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
REPEAT i := 1 TO s.n_u;
REPEAT j := 1 TO s.n_v;
IF NOT (('CATALOG_DATA_INFORMATION_MIM_LF.B_SPLINE_SURFACE' IN TYPEOF
(s.segments[i][j].parent_surface)) OR
('CATALOG_DATA_INFORMATION_MIM_LF.RECTANGULAR_TRIMMED_SURFACE' IN TYPEOF
(s.segments[i][j].parent_surface))) THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
END_REPEAT;
REPEAT i := 1 TO s.n_u-1;
REPEAT j := 1 TO s.n_v;
IF s.segments[i][j].u_transition = discontinuous THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
END_REPEAT;
REPEAT i := 1 TO s.n_u;
REPEAT j := 1 TO s.n_v-1;
IF s.segments[i][j].v_transition = discontinuous THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
END_REPEAT;
RETURN(TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="cross_product">
                                        <parameter
                                          name="arg1">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="arg2">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <typename
                                          name="vector"/>
                                        <algorithm>
LOCAL
mag : REAL;
res : direction;
v1,v2 : LIST[3:3] OF REAL;
result : vector;
END_LOCAL;
IF (NOT EXISTS (arg1) OR (arg1.dim = 2)) OR
(NOT EXISTS (arg2) OR (arg2.dim = 2)) THEN
RETURN(?);
ELSE
BEGIN
v1 := normalise(arg1).direction_ratios;
v2 := normalise(arg2).direction_ratios;
res := dummy_gri || direction([(v1[2]*v2[3] - v1[3]*v2[2]),
(v1[3]*v2[1] - v1[1]*v2[3]), (v1[1]*v2[2] - v1[2]*v2[1])]);
mag := 0.0;
REPEAT i := 1 TO 3;
mag := mag + res.direction_ratios[i]*res.direction_ratios[i];
END_REPEAT;
IF (mag &gt; 0.0) THEN
result := dummy_gri || vector(res, SQRT(mag));
ELSE
result := dummy_gri || vector(arg1, 0.0);
END_IF;
RETURN(result);
END;
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="curve_weights_positive">
                                        <parameter
                                          name="b">
                                          <typename
                                            name="rational_b_spline_curve"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
result : BOOLEAN := TRUE;
END_LOCAL;
REPEAT i := 0 TO b.upper_index_on_control_points;
IF b.weights[i] &lt;= 0.0 THEN
result := FALSE;
RETURN(result);
END_IF;
END_REPEAT;
RETURN(result);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="derive_dimensional_exponents">
                                        <parameter
                                          name="x">
                                          <typename
                                            name="unit"/>
                                        </parameter>
                                        <typename
                                          name="dimensional_exponents"/>
                                        <algorithm>
LOCAL
result : dimensional_exponents := dimensional_exponents(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
END_LOCAL;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.DERIVED_UNIT' IN TYPEOF(x) THEN
REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
result.length_exponent := result.length_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.length_exponent);
result.mass_exponent := result.mass_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.mass_exponent);
result.time_exponent := result.time_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.time_exponent);
result.electric_current_exponent := result.electric_current_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.electric_current_exponent);
result.thermodynamic_temperature_exponent := result.thermodynamic_temperature_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.thermodynamic_temperature_exponent);
result.amount_of_substance_exponent := result.amount_of_substance_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.amount_of_substance_exponent);
result.luminous_intensity_exponent := result.luminous_intensity_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.luminous_intensity_exponent);
END_REPEAT;
ELSE
result := x.dimensions;
END_IF;
RETURN (result);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="dimension_of">
                                        <parameter
                                          name="item">
                                          <typename
                                            name="geometric_representation_item"/>
                                        </parameter>
                                        <typename
                                          name="dimension_count"/>
                                        <algorithm>
LOCAL
x : SET OF representation;
y : representation_context;
dim : dimension_count;
END_LOCAL;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.CARTESIAN_POINT' IN TYPEOF(item) THEN
dim := SIZEOF(item\cartesian_point.coordinates);
RETURN(dim);
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.DIRECTION' IN TYPEOF(item) THEN
dim := SIZEOF(item\direction.direction_ratios);
RETURN(dim);
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.VECTOR' IN TYPEOF(item) THEN
dim := SIZEOF(item\vector.orientation\direction.direction_ratios);
RETURN(dim);
END_IF;
x := using_representations(item);
y := x[1].context_of_items;
dim := y\geometric_representation_context.coordinate_space_dimension;
RETURN (dim);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="dimensions_for_si_unit">
                                        <parameter
                                          name="n">
                                          <typename
                                            name="si_unit_name"/>
                                        </parameter>
                                        <typename
                                          name="dimensional_exponents"/>
                                        <algorithm>
CASE n OF
metre : RETURN (dimensional_exponents
(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
gram : RETURN (dimensional_exponents
(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0));
second : RETURN (dimensional_exponents
(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0));
ampere : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0));
kelvin : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
mole : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0));
candela : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
radian : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
steradian : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0));
hertz : RETURN (dimensional_exponents
(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
newton : RETURN (dimensional_exponents
(1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
pascal : RETURN (dimensional_exponents
(-1.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
joule : RETURN (dimensional_exponents
(2.0, 1.0, -2.0, 0.0, 0.0, 0.0, 0.0));
watt : RETURN (dimensional_exponents
(2.0, 1.0, -3.0, 0.0, 0.0, 0.0, 0.0));
coulomb : RETURN (dimensional_exponents
(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0));
volt : RETURN (dimensional_exponents
(2.0, 1.0, -3.0, -1.0, 0.0, 0.0, 0.0));
farad : RETURN (dimensional_exponents
(-2.0, -1.0, 4.0, 1.0, 0.0, 0.0, 0.0));
ohm : RETURN (dimensional_exponents
(2.0, 1.0, -3.0, -2.0, 0.0, 0.0, 0.0));
siemens : RETURN (dimensional_exponents
(-2.0, -1.0, 3.0, 2.0, 0.0, 0.0, 0.0));
weber : RETURN (dimensional_exponents
(2.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
tesla : RETURN (dimensional_exponents
(0.0, 1.0, -2.0, -1.0, 0.0, 0.0, 0.0));
henry : RETURN (dimensional_exponents
(2.0, 1.0, -2.0, -2.0, 0.0, 0.0, 0.0));
degree_Celsius : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0));
lumen : RETURN (dimensional_exponents
(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
lux : RETURN (dimensional_exponents
(-2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0));
becquerel : RETURN (dimensional_exponents
(0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0));
gray : RETURN (dimensional_exponents
(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
sievert : RETURN (dimensional_exponents
(2.0, 0.0, -2.0, 0.0, 0.0, 0.0, 0.0));
OTHERWISE : RETURN (?);
END_CASE;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="dot_product">
                                        <parameter
                                          name="arg1">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="arg2">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <builtintype
                                          type="REAL"/>
                                        <algorithm>
LOCAL
scalar : REAL;
vec1, vec2: direction;
ndim : INTEGER;
END_LOCAL;
IF NOT EXISTS (arg1) OR NOT EXISTS (arg2) THEN
scalar := ?;
ELSE
IF (arg1.dim &lt;&gt; arg2.dim) THEN
scalar := ?;
ELSE
BEGIN
vec1 := normalise(arg1);
vec2 := normalise(arg2);
ndim := arg1.dim;
scalar := 0.0;
REPEAT i := 1 TO ndim;
scalar := scalar +
vec1.direction_ratios[i]*vec2.direction_ratios[i];
END_REPEAT;
END;
END_IF;
END_IF;
RETURN (scalar);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="external_version_assignment_is_valid">
                                        <parameter
                                          name="aia">
                                          <typename
                                            name="applied_external_identification_assignment"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
item: identification_item;
role: identification_role;
END_LOCAL;
role:= aia.role;
IF role.name='version' THEN
REPEAT i:=LOINDEX(aia.items) TO HIINDEX(aia.items);
item:= aia.items[i];
IF (SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.' + 'EXTERNALLY_VERSIONED_ITEM']*TYPEOF(item))=0) THEN
RETURN(FALSE);
END_IF;
END_REPEAT;
RETURN(TRUE);
ELSE
RETURN(TRUE);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="first_proj_axis">
                                        <parameter
                                          name="z_axis">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="arg">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <typename
                                          name="direction"/>
                                        <algorithm>
LOCAL
x_axis : direction;
v : direction;
z : direction;
x_vec : vector;
END_LOCAL;
IF (NOT EXISTS(z_axis)) THEN
RETURN (?) ;
ELSE
z := normalise(z_axis);
IF NOT EXISTS(arg) THEN
IF ((z.direction_ratios &lt;&gt; [1.0,0.0,0.0]) AND
(z.direction_ratios &lt;&gt; [-1.0,0.0,0.0])) THEN
v := dummy_gri || direction([1.0,0.0,0.0]);
ELSE
v := dummy_gri || direction([0.0,1.0,0.0]);
END_IF;
ELSE
IF (arg.dim &lt;&gt; 3) THEN
RETURN (?) ;
END_IF;
IF ((cross_product(arg,z).magnitude) = 0.0) THEN
RETURN (?);
ELSE
v := normalise(arg);
END_IF;
END_IF;
x_vec := scalar_times_vector(dot_product(v, z), z);
x_axis := vector_difference(v, x_vec).orientation;
x_axis := normalise(x_axis);
END_IF;
RETURN(x_axis);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="get_basis_surface">
                                        <parameter
                                          name="c">
                                          <typename
                                            name="curve_on_surface"/>
                                        </parameter>
                                        <aggregate
                                          type="SET"
                                          lower="0"
                                          upper="2"/>
                                        <typename
                                          name="surface"/>
                                        <algorithm>
LOCAL
surfs : SET[0:2] OF surface;
n : INTEGER;
END_LOCAL;
surfs := [];
IF 'CATALOG_DATA_INFORMATION_MIM_LF.PCURVE' IN TYPEOF (c) THEN
surfs := [c\pcurve.basis_surface];
ELSE
IF 'CATALOG_DATA_INFORMATION_MIM_LF.SURFACE_CURVE' IN TYPEOF (c) THEN
n := SIZEOF(c\surface_curve.associated_geometry);
REPEAT i := 1 TO n;
surfs := surfs +
associated_surface(c\surface_curve.associated_geometry[i]);
END_REPEAT;
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.COMPOSITE_CURVE_ON_SURFACE' IN TYPEOF (c) THEN
n := SIZEOF(c\composite_curve.segments);
surfs := get_basis_surface(
c\composite_curve.segments[1].parent_curve);
IF n &gt; 1 THEN
REPEAT i := 2 TO n;
surfs := surfs * get_basis_surface(
c\composite_curve.segments[i].parent_curve);
END_REPEAT;
END_IF;
END_IF;
RETURN(surfs);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="get_description_value">
                                        <parameter
                                          name="obj">
                                          <typename
                                            name="description_attribute_select"/>
                                        </parameter>
                                        <typename
                                          name="text"/>
                                        <algorithm>
LOCAL
description_bag : BAG OF description_attribute := (USEDIN(obj, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'DESCRIPTION_ATTRIBUTE.' + 'DESCRIBED_ITEM'));
END_LOCAL;
IF SIZEOF(description_bag) = 1 THEN
RETURN (description_bag[1].attribute_value);
ELSE
RETURN (?);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="get_id_value">
                                        <parameter
                                          name="obj">
                                          <typename
                                            name="id_attribute_select"/>
                                        </parameter>
                                        <typename
                                          name="identifier"/>
                                        <algorithm>
LOCAL
id_bag : BAG OF id_attribute := (USEDIN(obj, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ID_ATTRIBUTE.' + 'IDENTIFIED_ITEM'));
END_LOCAL;
IF SIZEOF(id_bag) = 1 THEN
RETURN (id_bag[1].attribute_value);
ELSE
RETURN (?);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="get_name_value">
                                        <parameter
                                          name="obj">
                                          <typename
                                            name="name_attribute_select"/>
                                        </parameter>
                                        <typename
                                          name="label"/>
                                        <algorithm>
LOCAL
name_bag : BAG OF name_attribute := (USEDIN(obj, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'NAME_ATTRIBUTE.' + 'NAMED_ITEM'));
END_LOCAL;
IF SIZEOF(name_bag) = 1 THEN
RETURN (name_bag[1].attribute_value);
ELSE
RETURN (?);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="get_role">
                                        <parameter
                                          name="obj">
                                          <typename
                                            name="role_select"/>
                                        </parameter>
                                        <typename
                                          name="object_role"/>
                                        <algorithm>
LOCAL
role_bag : BAG OF role_association := (USEDIN(obj, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'ROLE_ASSOCIATION.' + 'ITEM_WITH_ROLE'));
END_LOCAL;
IF SIZEOF(role_bag) = 1 THEN
RETURN (role_bag[1].role);
ELSE
RETURN (?);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="item_correlation">
                                        <parameter
                                          name="items">
                                          <aggregate
                                            type="SET"/>
                                          <builtintype
                                            type="GENERIC"/>
                                        </parameter>
                                        <parameter
                                          name="c_items">
                                          <aggregate
                                            type="SET"/>
                                          <builtintype
                                            type="STRING"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
LOCAL
c_types : SET OF STRING := [];
c_hit : INTEGER := 0;
END_LOCAL;
REPEAT i:=1 TO HIINDEX(c_items);
c_types := c_types + ['CATALOG_DATA_INFORMATION_MIM_LF' + '.' + c_items[i]];
END_REPEAT;
REPEAT i:=1 TO HIINDEX(items);
IF (SIZEOF(c_types * TYPEOF(items[i])) = 1) THEN
c_hit := c_hit + 1;
END_IF;
END_REPEAT;
RETURN (SIZEOF(items) = c_hit);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="item_in_context">
                                        <parameter
                                          name="item">
                                          <typename
                                            name="representation_item"/>
                                        </parameter>
                                        <parameter
                                          name="cntxt">
                                          <typename
                                            name="representation_context"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
y : BAG OF representation_item;
END_LOCAL;
IF SIZEOF(USEDIN(item,'CATALOG_DATA_INFORMATION_MIM_LF.REPRESENTATION.ITEMS')
* cntxt.representations_in_context) &gt; 0 THEN
RETURN (TRUE);
ELSE y := QUERY(z &lt;* USEDIN (item , '') |
'CATALOG_DATA_INFORMATION_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z));
IF SIZEOF(y) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(y);
IF item_in_context(y[i], cntxt) THEN
RETURN (TRUE);
END_IF;
END_REPEAT;
END_IF;
END_IF;
RETURN (FALSE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="leap_year">
                                        <parameter
                                          name="year">
                                          <typename
                                            name="year_number"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
IF ((((year MOD 4) = 0) AND ((year MOD 100) &lt;&gt; 0)) OR ((year MOD 400) = 0)) THEN
RETURN (TRUE);
ELSE
RETURN (FALSE);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="list_face_loops">
                                        <parameter
                                          name="f">
                                          <typename
                                            name="face"/>
                                        </parameter>
                                        <aggregate
                                          type="LIST"
                                          lower="0"
                                          upper="?"/>
                                        <typename
                                          name="loop"/>
                                        <algorithm>
LOCAL
loops : LIST[0:?] OF loop := [];
END_LOCAL;
REPEAT i := 1 TO SIZEOF(f.bounds);
loops := loops +(f.bounds[i].bound);
END_REPEAT;
RETURN(loops);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="list_to_array">
                                        <parameter
                                          name="lis">
                                          <aggregate
                                            type="LIST"
                                            lower="0"
                                            upper="?"/>
                                          <builtintype
                                            type="GENERIC"
                                            typelabel="T"/>
                                        </parameter>
                                        <parameter
                                          name="low">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="u">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <aggregate
                                          type="ARRAY"
                                          lower="low"
                                          upper="u"/>
                                        <builtintype
                                          type="GENERIC"
                                          typelabel="T"/>
                                        <algorithm>
LOCAL
n : INTEGER;
res : ARRAY [low:u] OF GENERIC : T;
END_LOCAL;
n := SIZEOF(lis);
IF (n &lt;&gt; (u-low +1)) THEN
RETURN(?);
ELSE
res := [lis[1] : n];
REPEAT i := 2 TO n;
res[low+i-1] := lis[i];
END_REPEAT;
RETURN(res);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="list_to_set">
                                        <parameter
                                          name="l">
                                          <aggregate
                                            type="LIST"
                                            lower="0"
                                            upper="?"/>
                                          <builtintype
                                            type="GENERIC"
                                            typelabel="T"/>
                                        </parameter>
                                        <aggregate
                                          type="SET"/>
                                        <builtintype
                                          type="GENERIC"
                                          typelabel="T"/>
                                        <algorithm>
LOCAL
s : SET OF GENERIC:T := [];
END_LOCAL;
REPEAT i := 1 TO SIZEOF(l);
s := s + l[i];
END_REPEAT;
RETURN(s);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="make_array_of_array">
                                        <parameter
                                          name="lis">
                                          <aggregate
                                            type="LIST"
                                            lower="1"
                                            upper="?"/>
                                          <builtintype
                                            type="GENERIC"
                                            typelabel="? ] OF GENERIC : T"/>
                                        </parameter>
                                        <parameter
                                          name="low1">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="u1">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="low2">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <parameter
                                          name="u2">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <aggregate
                                          type="ARRAY"
                                          lower="low1"
                                          upper="u1"/>
                                        <builtintype
                                          type="GENERIC"
                                          typelabel="u2 ] OF GENERIC : T"/>
                                        <algorithm>
LOCAL
res : ARRAY[low1:u1] OF ARRAY [low2:u2] OF GENERIC : T;
END_LOCAL;
IF (u1-low1+1) &lt;&gt; SIZEOF(lis) THEN
RETURN (?);
END_IF;
IF (u2 - low2 + 1) &lt;&gt; SIZEOF(lis[1]) THEN
RETURN (?) ;
END_IF;
res := [list_to_array(lis[1], low2, u2) : (u1-low1 + 1)];
REPEAT i := 2 TO HIINDEX(lis);
IF (u2-low2+1) &lt;&gt; SIZEOF(lis[i]) THEN
RETURN (?);
END_IF;
res[low1+i-1] := list_to_array(lis[i], low2, u2);
END_REPEAT;
RETURN (res);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="mixed_loop_type_set">
                                        <parameter
                                          name="l">
                                          <aggregate
                                            type="SET"
                                            lower="0"
                                            upper="?"/>
                                          <typename
                                            name="loop"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
LOCAL
poly_loop_type: LOGICAL;
END_LOCAL;
IF(SIZEOF(l) &lt;= 1) THEN
RETURN(FALSE);
END_IF;
poly_loop_type := ('CATALOG_DATA_INFORMATION_MIM_LF.POLY_LOOP' IN TYPEOF(l[1]));
REPEAT i := 2 TO SIZEOF(l);
IF(('CATALOG_DATA_INFORMATION_MIM_LF.POLY_LOOP' IN TYPEOF(l[i])) &lt;&gt; poly_loop_type)
THEN
RETURN(TRUE);
END_IF;
END_REPEAT;
RETURN(FALSE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="normalise">
                                        <parameter
                                          name="arg">
                                          <typename
                                            name="vector_or_direction"/>
                                        </parameter>
                                        <typename
                                          name="vector_or_direction"/>
                                        <algorithm>
LOCAL
ndim : INTEGER;
v : direction;
result : vector_or_direction;
vec : vector;
mag : REAL;
END_LOCAL;
IF NOT EXISTS (arg) THEN
result := ?;
ELSE
ndim := arg.dim;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.VECTOR' IN TYPEOF(arg) THEN
BEGIN
v := dummy_gri || direction(arg.orientation.direction_ratios);
IF arg.magnitude = 0.0 THEN
RETURN(?);
ELSE
vec := dummy_gri || vector (v, 1.0);
END_IF;
END;
ELSE
v := dummy_gri || direction (arg.direction_ratios);
END_IF;
mag := 0.0;
REPEAT i := 1 TO ndim;
mag := mag + v.direction_ratios[i]*v.direction_ratios[i];
END_REPEAT;
IF mag &gt; 0.0 THEN
mag := SQRT(mag);
REPEAT i := 1 TO ndim;
v.direction_ratios[i] := v.direction_ratios[i]/mag;
END_REPEAT;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.VECTOR' IN TYPEOF(arg) THEN
vec.orientation := v;
result := vec;
ELSE
result := v;
END_IF;
ELSE
RETURN(?);
END_IF;
END_IF;
RETURN (result);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="orthogonal_complement">
                                        <parameter
                                          name="vec">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <typename
                                          name="direction"/>
                                        <algorithm>
LOCAL
result : direction ;
END_LOCAL;
IF (vec.dim &lt;&gt; 2) OR NOT EXISTS (vec) THEN
RETURN(?);
ELSE
result := dummy_gri || direction([-vec.direction_ratios[2],
vec.direction_ratios[1]]);
RETURN(result);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="path_head_to_tail">
                                        <parameter
                                          name="a_path">
                                          <typename
                                            name="path"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
LOCAL
n : INTEGER;
p : LOGICAL := TRUE;
END_LOCAL;
n := SIZEOF (a_path.edge_list);
REPEAT i := 2 TO n;
p := p AND (a_path.edge_list[i-1].edge_end :=:
a_path.edge_list[i].edge_start);
END_REPEAT;
RETURN (p);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="scalar_times_vector">
                                        <parameter
                                          name="scalar">
                                          <builtintype
                                            type="REAL"/>
                                        </parameter>
                                        <parameter
                                          name="vec">
                                          <typename
                                            name="vector_or_direction"/>
                                        </parameter>
                                        <typename
                                          name="vector"/>
                                        <algorithm>
LOCAL
v : direction;
mag : REAL;
result : vector;
END_LOCAL;
IF NOT EXISTS (scalar) OR NOT EXISTS (vec) THEN
RETURN (?) ;
ELSE
IF 'CATALOG_DATA_INFORMATION_MIM_LF.VECTOR' IN TYPEOF (vec) THEN
v := dummy_gri || direction(vec.orientation.direction_ratios);
mag := scalar * vec.magnitude;
ELSE
v := dummy_gri || direction(vec.direction_ratios);
mag := scalar;
END_IF;
IF (mag &lt; 0.0) THEN
REPEAT i := 1 TO SIZEOF(v.direction_ratios);
v.direction_ratios[i] := -v.direction_ratios[i];
END_REPEAT;
mag := -mag;
END_IF;
result := dummy_gri || vector(normalise(v), mag);
END_IF;
RETURN (result);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="second_proj_axis">
                                        <parameter
                                          name="z_axis">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="x_axis">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <parameter
                                          name="arg">
                                          <typename
                                            name="direction"/>
                                        </parameter>
                                        <typename
                                          name="direction"/>
                                        <algorithm>
LOCAL
y_axis : vector;
v : direction;
temp : vector;
END_LOCAL;
IF NOT EXISTS(arg) THEN
v := dummy_gri || direction([0.0,1.0,0.0]);
ELSE
v := arg;
END_IF;
temp := scalar_times_vector(dot_product(v, z_axis), z_axis);
y_axis := vector_difference(v, temp);
temp := scalar_times_vector(dot_product(v, x_axis), x_axis);
y_axis := vector_difference(y_axis, temp);
y_axis := normalise(y_axis);
RETURN(y_axis.orientation);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="surface_weights_positive">
                                        <parameter
                                          name="b">
                                          <typename
                                            name="rational_b_spline_surface"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
result : BOOLEAN := TRUE;
END_LOCAL;
REPEAT i := 0 TO b.u_upper;
REPEAT j := 0 TO b.v_upper;
IF (b.weights[i][j] &lt;= 0.0) THEN
result := FALSE;
RETURN(result);
END_IF;
END_REPEAT;
END_REPEAT;
RETURN(result);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="type_check_function">
                                        <parameter
                                          name="the_type">
                                          <builtintype
                                            type="GENERIC"/>
                                        </parameter>
                                        <parameter
                                          name="sub_names">
                                          <aggregate
                                            type="SET"/>
                                          <builtintype
                                            type="STRING"/>
                                        </parameter>
                                        <parameter
                                          name="criterion">
                                          <builtintype
                                            type="INTEGER"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
IF ((NOT EXISTS (the_type)) OR (NOT ({0&lt;= criterion &lt;=3})) OR
(SIZEOF (sub_names) = 0)) THEN RETURN (UNKNOWN);
ELSE
CASE criterion OF
0: RETURN (SIZEOF (sub_names * TYPEOF (the_type)) &gt; 0);
1: RETURN (SIZEOF (sub_names * TYPEOF (the_type)) = 0);
2: RETURN (SIZEOF (sub_names * TYPEOF (the_type)) = 1);
3: RETURN (SIZEOF (sub_names * TYPEOF (the_type)) &lt;= 1);
END_CASE;
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="using_items">
                                        <parameter
                                          name="item">
                                          <typename
                                            name="founded_item_select"/>
                                        </parameter>
                                        <parameter
                                          name="checked_items">
                                          <aggregate
                                            type="SET"/>
                                          <typename
                                            name="founded_item_select"/>
                                        </parameter>
                                        <aggregate
                                          type="SET"/>
                                        <typename
                                          name="founded_item_select"/>
                                        <algorithm>
LOCAL
new_check_items : SET OF founded_item_select;
result_items : SET OF founded_item_select;
next_items : SET OF founded_item_select;
END_LOCAL;
result_items := [];
new_check_items := checked_items + item;
next_items := QUERY(z &lt;* bag_to_set(USEDIN(item , '')) |
('CATALOG_DATA_INFORMATION_MIM_LF.REPRESENTATION_ITEM' IN TYPEOF(z)) OR
('CATALOG_DATA_INFORMATION_MIM_LF.FOUNDED_ITEM' IN TYPEOF(z)));
IF SIZEOF(next_items) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(next_items);
IF NOT(next_items[i] IN new_check_items) THEN
result_items := result_items + next_items[i] +
using_items(next_items[i],new_check_items);
END_IF;
END_REPEAT;
END_IF;
RETURN (result_items);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="using_representations">
                                        <parameter
                                          name="item">
                                          <typename
                                            name="founded_item_select"/>
                                        </parameter>
                                        <aggregate
                                          type="SET"/>
                                        <typename
                                          name="representation"/>
                                        <algorithm>
LOCAL
results : SET OF representation;
result_bag : BAG OF representation;
intermediate_items : SET OF founded_item_select;
END_LOCAL;
results := [];
result_bag :=
USEDIN(item,'CATALOG_DATA_INFORMATION_MIM_LF.REPRESENTATION.ITEMS');
IF SIZEOF(result_bag) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(result_bag);
results := results + result_bag[i];
END_REPEAT;
END_IF;
intermediate_items := using_items(item,[]);
IF SIZEOF(intermediate_items) &gt; 0 THEN
REPEAT i := 1 TO HIINDEX(intermediate_items);
result_bag := USEDIN(intermediate_items[i],
'CATALOG_DATA_INFORMATION_MIM_LF.REPRESENTATION.ITEMS');
IF SIZEOF(result_bag) &gt; 0 THEN
REPEAT j := 1 TO HIINDEX(result_bag);
results := results + result_bag[j];
END_REPEAT;
END_IF;
END_REPEAT;
END_IF;
RETURN (results);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="valid_calendar_date">
                                        <parameter
                                          name="date">
                                          <typename
                                            name="calendar_date"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
CASE date.month_component OF
1 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
2 : BEGIN
IF (leap_year(date.year_component)) THEN
RETURN({ 1 &lt;= date.day_component &lt;= 29 });
ELSE
RETURN({ 1 &lt;= date.day_component &lt;= 28 });
END_IF;
END;
3 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
4 : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
5 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
6 : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
7 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
8 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
9 : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
10 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
11 : RETURN({ 1 &lt;= date.day_component &lt;= 30 });
12 : RETURN({ 1 &lt;= date.day_component &lt;= 31 });
END_CASE;
RETURN (FALSE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="valid_measure_value">
                                        <parameter
                                          name="m">
                                          <typename
                                            name="measure_value"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
IF ('REAL' IN TYPEOF (m)) THEN
RETURN (m &gt; 0.0);
ELSE
IF ('INTEGER' IN TYPEOF (m)) THEN
RETURN (m &gt; 0);
ELSE
RETURN (TRUE);
END_IF;
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="valid_selected_instance_representation">
                                        <parameter
                                          name="pd">
                                          <typename
                                            name="product_definition_or_assembly_relationship"/>
                                        </parameter>
                                        <builtintype
                                          type="LOGICAL"/>
                                        <algorithm>
LOCAL
properties: SET OF property_definition := bag_to_set(QUERY(prd&lt;* USEDIN (pd ,'CATALOG_DATA_INFORMATION_MIM_LF.PROPERTY_DEFINITION.DEFINITION') |
(prd.name = 'occurrence selection')));
property_definition_representations: SET OF property_definition_representation := bag_to_set(QUERY (pdr &lt;* USEDIN (properties[1] , 'CATALOG_DATA_INFORMATION_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') |
(pdr.used_representation.name = 'selection criteria')));
selected_representation: representation;
END_LOCAL;
IF (SIZEOF(properties)&lt;&gt;1) THEN
RETURN(FALSE);
END_IF;
IF (SIZEOF(property_definition_representations)&lt;&gt;1) THEN
RETURN(FALSE);
END_IF;
selected_representation := property_definition_representations[1]\property_definition_representation.used_representation;
IF (SIZEOF(selected_representation\representation.items) &lt;1) OR (SIZEOF(selected_representation\representation.items) &gt;2) THEN
RETURN(FALSE);
END_IF;
IF (SIZEOF (QUERY (i &lt;* selected_representation\representation.items |
(SIZEOF (['CATALOG_DATA_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' ,
'CATALOG_DATA_INFORMATION_MIM_LF.VALUE_RANGE']* TYPEOF (i)) = 1) AND
(i.name = 'selection quantity'))) &lt;&gt; 1) THEN
RETURN(FALSE);
END_IF;
IF (SIZEOF (QUERY (i &lt;* selected_representation\representation.items |
('CATALOG_DATA_INFORMATION_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (i)) AND
(i.name = 'selection control')))&gt; 1) THEN
RETURN(FALSE);
END_IF;
IF (SIZEOF (QUERY (i &lt;* selected_representation\representation.items |
('CATALOG_DATA_INFORMATION_MIM_LF.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF(i)) AND
(i.name = 'selection control')))= 0) AND
(SIZEOF (QUERY (i &lt;* selected_representation\representation.items |
(i.name = 'selection quantity') AND
(SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.QUALIFIED_REPRESENTATION_ITEM' ,
'CATALOG_DATA_INFORMATION_MIM_LF.VALUE_RANGE']* TYPEOF (i)) =0))) &gt; 0) THEN
RETURN(FALSE);
END_IF;
RETURN(TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="valid_time">
                                        <parameter
                                          name="time">
                                          <typename
                                            name="local_time"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
IF EXISTS(time.second_component) THEN
RETURN (EXISTS(time.minute_component));
ELSE
RETURN (TRUE);
END_IF;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="valid_units">
                                        <parameter
                                          name="m">
                                          <typename
                                            name="measure_with_unit"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
IF 'CATALOG_DATA_INFORMATION_MIM_LF.LENGTH_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.MASS_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.TIME_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.ELECTRIC_CURRENT_MEASURE'
IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE'
IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.CELSIUS_TEMPERATURE_MEASURE'
IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE'
IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.LUMINOUS_INTENSITY_MEASURE'
IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.PLANE_ANGLE_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.SOLID_ANGLE_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.AREA_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.VOLUME_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.RATIO_MEASURE' IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.POSITIVE_LENGTH_MEASURE'
IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE'
IN TYPEOF (m.value_component) THEN
IF derive_dimensional_exponents (m.unit_component) &lt;&gt;
dimensional_exponents (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) THEN
RETURN (FALSE);
END_IF;
END_IF;
RETURN (TRUE);
                                        </algorithm>
                                      </function>

                                      <function
                                        name="value_range_aggregate_rep_item">
                                        <parameter
                                          name="agg">
                                          <aggregate
                                            type="AGGREGATE"/>
                                          <typename
                                            name="representation_item"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
BEGIN
IF (SIZEOF(QUERY(i1 &lt;* agg | ('CATALOG_DATA_INFORMATION_MIM_LF' + '.MEASURE_REPRESENTATION_ITEM' IN TYPEOF(i1)))) = 6) THEN
RETURN (TRUE);
ELSE
RETURN (FALSE);
END_IF;
END;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="value_range_wr1">
                                        <parameter
                                          name="agg">
                                          <typename
                                            name="compound_item_definition"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
BEGIN
IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY (i1 &lt;* agg | (
'CATALOG_DATA_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF
(i1)))) = 2) OR
(SIZEOF(QUERY (i2 &lt;* agg | (
'CATALOG_DATA_INFORMATION_MIM_LF.VALUE_REPRESENTATION_ITEM' IN TYPEOF
(i2)))) = 2)) THEN
RETURN(TRUE);
ELSE
RETURN(FALSE);
END_IF;
END;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="value_range_wr2">
                                        <parameter
                                          name="agg">
                                          <typename
                                            name="compound_item_definition"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
BEGIN
IF (SIZEOF(QUERY (i &lt;* agg | (i.name = 'upper limit'))) = 1)
AND (SIZEOF(QUERY (i &lt;* agg | (i.name = 'lower limit'))) = 1)
THEN
RETURN(TRUE);
ELSE
RETURN(FALSE);
END_IF;
END;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="value_range_wr3">
                                        <parameter
                                          name="agg">
                                          <typename
                                            name="compound_item_definition"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
BEGIN
IF (SIZEOF(QUERY(i1 &lt;* agg |
('CATALOG_DATA_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i1)) AND
(SIZEOF (QUERY (i2 &lt;* agg |
('CATALOG_DATA_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i2)) AND
(i1 :&lt;&gt;: i2) AND (i1\measure_with_unit.unit_component :=: i2\measure_with_unit.unit_component))) = 1))) = 2)
THEN
RETURN (TRUE);
ELSE
RETURN (FALSE);
END_IF;
END;
                                        </algorithm>
                                      </function>

                                      <function
                                        name="vector_difference">
                                        <parameter
                                          name="arg1">
                                          <typename
                                            name="vector_or_direction"/>
                                        </parameter>
                                        <parameter
                                          name="arg2">
                                          <typename
                                            name="vector_or_direction"/>
                                        </parameter>
                                        <typename
                                          name="vector"/>
                                        <algorithm>
LOCAL
result : vector;
res, vec1, vec2 : direction;
mag, mag1, mag2 : REAL;
ndim : INTEGER;
END_LOCAL;
IF ((NOT EXISTS (arg1)) OR (NOT EXISTS (arg2))) OR (arg1.dim &lt;&gt; arg2.dim)
THEN
RETURN (?) ;
ELSE
BEGIN
IF 'CATALOG_DATA_INFORMATION_MIM_LF.VECTOR' IN TYPEOF(arg1) THEN
mag1 := arg1.magnitude;
vec1 := arg1.orientation;
ELSE
mag1 := 1.0;
vec1 := arg1;
END_IF;
IF 'CATALOG_DATA_INFORMATION_MIM_LF.VECTOR' IN TYPEOF(arg2) THEN
mag2 := arg2.magnitude;
vec2 := arg2.orientation;
ELSE
mag2 := 1.0;
vec2 := arg2;
END_IF;
vec1 := normalise (vec1);
vec2 := normalise (vec2);
ndim := SIZEOF(vec1.direction_ratios);
mag := 0.0;
res := dummy_gri || direction(vec1.direction_ratios);
REPEAT i := 1 TO ndim;
res.direction_ratios[i] := mag1*vec1.direction_ratios[i] +
mag2*vec2.direction_ratios[i];
mag := mag + (res.direction_ratios[i]*res.direction_ratios[i]);
END_REPEAT;
IF (mag &gt; 0.0) THEN
result := dummy_gri || vector(res, SQRT(mag));
ELSE
result := dummy_gri || vector(vec1, 0.0);
END_IF;
END;
END_IF;
RETURN (result);
                                        </algorithm>
                                      </function>

                                      <rule
                                        name="alternative_solution_requires_solution_definition"
                                        appliesto="product_definition_formation">
                                        <algorithm>
LOCAL
solution_versions: SET OF product_definition_formation := [];
END_LOCAL;
solution_versions := QUERY(pdf &lt;* product_definition_formation |
SIZEOF(QUERY(prpc &lt;* USEDIN(pdf.of_product, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') |
prpc.name = 'alternative solution')) = 1);
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(pdf &lt;* solution_versions | SIZEOF(QUERY(pd &lt;* USEDIN(pdf, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION.FORMATION') | pd.frame_of_reference.name = 'alternative definition')) &lt;&gt; 1))= 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="approval_person_organization_requires_date_time"
                                        appliesto="approval_person_organization">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (apo &lt;* approval_person_organization | (SIZEOF (QUERY (u &lt;* USEDIN (apo , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_DATE_ASSIGNMENT.ITEMS') |(u.role.name = 'sign off'))) + SIZEOF (QUERY (u &lt;* USEDIN (apo , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_DATE_AND_TIME_ASSIGNMENT.ITEMS') |(u.role.name = 'sign off')))) &lt;&gt;1)) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="approval_requires_approval_assignment"
                                        appliesto="approval">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (a &lt;* approval | SIZEOF(USEDIN(a, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPROVAL_ASSIGNMENT.ASSIGNED_APPROVAL')) = 0)) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="breakdown_element_requires_product_definition"
                                        appliesto="product_definition_formation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdf &lt;* product_definition_formation |(SIZEOF (QUERY (prpc &lt;* USEDIN (pdf.of_product ,'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'functionality')) = 1) AND(SIZEOF (QUERY (pd &lt;* USEDIN (pdf ,'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION.FORMATION') | pd.frame_of_reference.name = 'functional definition')) &lt;1))) = 0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (pdf &lt;* product_definition_formation |(SIZEOF (QUERY (prpc &lt;* USEDIN (pdf.of_product ,'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'conceptual design')) = 1) AND(SIZEOF (QUERY (pd &lt;* USEDIN (pdf , 'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION.FORMATION') | pd.frame_of_reference.name = 'conceptual definition')) &lt;1))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="Catalog_data_information_mim_dot_subtype_exclusiveness_representation_item"
                                        appliesto="representation_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY (cri &lt;* representation_item | NOT (type_check_function(cri,['CATALOG_DATA_INFORMATION_MIM_LF.MEASURE_REPRESENTATION_ITEM','CATALOG_DATA_INFORMATION_MIM_LF.VALUE_REPRESENTATION_ITEM','CATALOG_DATA_INFORMATION_MIM_LF.COMPOUND_REPRESENTATION_ITEM'] , 3)))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="compatible_dimension"
                                        appliesto="cartesian_point direction representation_context geometric_representation_context">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(x &lt;* cartesian_point| SIZEOF(QUERY(y &lt;* geometric_representation_context | item_in_context(x,y) AND(HIINDEX(x.coordinates) &lt;&gt; y.coordinate_space_dimension))) &gt; 0)) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF(QUERY(x &lt;* direction | SIZEOF(QUERY(y &lt;* geometric_representation_context | item_in_context(x,y) AND(HIINDEX(x.direction_ratios) &lt;&gt; y.coordinate_space_dimension)))&gt; 0)) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="constraint_definition_requires_constraint_category"
                                        appliesto="product_definition">
                                        <algorithm>
LOCAL
constraint_definitions: SET OF product_definition := [];
END_LOCAL;
constraint_definitions := QUERY(pd &lt;* product_definition |
(pd.frame_of_reference.name = 'design constraint definition'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pd &lt;* constraint_definitions |(SIZEOF (QUERY (prpc &lt;* USEDIN (pd.formation.of_product ,'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc. name ='requirement')) =0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_derived_unit"
                                        appliesto="derived_unit">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (d &lt;* derived_unit | NOT (SIZEOF (USEDIN(d , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_document_usage_role"
                                        appliesto="document_usage_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (d &lt;* document_usage_role | NOT (SIZEOF (USEDIN (d , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_measure_with_unit"
                                        appliesto="measure_with_unit">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (m &lt;* measure_with_unit | NOT (SIZEOF (USEDIN (m , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_named_unit"
                                        appliesto="named_unit">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (n &lt;* named_unit | NOT (SIZEOF (USEDIN (n , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_precision_qualifier"
                                        appliesto="precision_qualifier">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (p &lt;* precision_qualifier | NOT (SIZEOF (USEDIN (p , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_product_definition_context_role"
                                        appliesto="product_definition_context_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (p &lt;* product_definition_context_role | NOT (SIZEOF (USEDIN (p , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_standard_uncertainty"
                                        appliesto="standard_uncertainty">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (s &lt;* standard_uncertainty | NOT (SIZEOF(USEDIN (s , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_time_interval_role"
                                        appliesto="time_interval_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (t &lt;* time_interval_role | NOT (SIZEOF (USEDIN (t , '')) &gt;0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_type_qualifier"
                                        appliesto="type_qualifier">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (t &lt;* type_qualifier | NOT (SIZEOF (USEDIN (t , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dependent_instantiable_uncertainty_qualifier"
                                        appliesto="uncertainty_qualifier">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (u &lt;* uncertainty_qualifier | NOT (SIZEOF(USEDIN (u , '')) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="design_constraint_requires_product_definition"
                                        appliesto="product_definition_formation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdf &lt;* product_definition_formation | (SIZEOF (QUERY (prpc &lt;* USEDIN (pdf.of_product ,'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'requirement')) &gt;0) AND(SIZEOF (QUERY (pd &lt;* USEDIN (pdf , 'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION.FORMATION') | pd.frame_of_reference.name = 'design constraint definition')) &lt;1))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="dimensionality_is_two_or_three"
                                        appliesto="geometric_representation_context">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (g &lt;* geometric_representation_context | NOT ((g.coordinate_space_dimension =2) OR (g.coordinate_space_dimension =3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="event_occurrence_requires_event_occurrence_assignment"
                                        appliesto="event_occurrence">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (eo &lt;* event_occurrence |(SIZEOF (USEDIN (eo, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.RELATIVE_EVENT_OCCURRENCE.BASE_EVENT')) =0) AND(SIZEOF (USEDIN (eo ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EVENT_OCCURRENCE_ASSIGNMENT.ASSIGNED_EVENT_OCCURRENCE')) =0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="external_version_assignments_are_valid"
                                        appliesto="applied_external_identification_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(aia &lt;* applied_external_identification_assignment | NOT external_version_assignment_is_valid(aia)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="externally_defined_class_with_known_source_requirement"
                                        appliesto="externally_defined_class">
                                        <algorithm>
LOCAL
known_sourced_classes : SET OF externally_defined_class;
END_LOCAL;
known_sourced_classes := QUERY(edc &lt;* externally_defined_class |
'CATALOG_DATA_INFORMATION_MIM_LF' + '.KNOWN_SOURCE' IN TYPEOF(edc.source));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (edc &lt;* known_sourced_classes |(SIZEOF (QUERY (aoa &lt;* USEDIN (edc ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS')| aoa.role.name = 'class supplier')) = 0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="global_length_and_angle_units_2d_or_3d"
                                        appliesto="global_unit_assigned_context">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (guac &lt;* global_unit_assigned_context | SIZEOF (guac. units) &lt;2)) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (guac &lt;* global_unit_assigned_context | (SIZEOF (QUERY (x &lt;* guac. units |'CATALOG_DATA_INFORMATION_MIM_LF' + '.LENGTH_UNIT' IN TYPEOF (x))) &lt;&gt;1) OR(SIZEOF(QUERY(x &lt;* guac. units | 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PLANE_ANGLE_UNIT' IN TYPEOF(x))) &lt;&gt;1))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="person_requires_person_and_organization"
                                        appliesto="person">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (p &lt;* person | SIZEOF (USEDIN (p ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PERSON_AND_ORGANIZATION.THE_PERSON')) = 0)) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="plib_class_reference_requires_version"
                                        appliesto="externally_defined_class">
                                        <algorithm>
LOCAL
known_sourced_classes : SET OF externally_defined_class;
END_LOCAL;
known_sourced_classes := QUERY(edc &lt;* externally_defined_class |
'CATALOG_DATA_INFORMATION_MIM_LF' + '.KNOWN_SOURCE' IN TYPEOF(edc.source));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(edc &lt;* known_sourced_classes |(SIZEOF(QUERY(aei &lt;* USEDIN(edc,'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.ITEMS') | aei.role.name = 'version')) &lt;&gt; 1))) = 0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF(QUERY(edc &lt;* known_sourced_classes |(SIZEOF(QUERY(aei &lt;* USEDIN(edc,'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_IDENTIFICATION_ASSIGNMENT.ITEMS') | aei.role.name = 'version')) &gt; 0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="plib_property_reference_requires_name_scope"
                                        appliesto="externally_defined_general_property">
                                        <algorithm>
LOCAL
known_sourced_properties : SET OF externally_defined_general_property;
END_LOCAL;
known_sourced_properties := QUERY(edc &lt;* externally_defined_general_property |
'CATALOG_DATA_INFORMATION_MIM_LF' + '.KNOWN_SOURCE' IN TYPEOF(edc.source));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (edgp &lt;* known_sourced_properties |(SIZEOF (QUERY (edir &lt;* USEDIN (edgp, 'EXTERNAL_REFERENCE_SCHEMA' + '.EXTERNALLY_DEFINED_ITEM_RELATIONSHIP.RELATING_ITEM')|(edir.name = 'name scope') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CLASS' IN TYPEOF (edir.related_item)) AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.KNOWN_SOURCE' IN TYPEOF (edir.related_item.source)))) &lt;&gt;1))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="plib_property_reference_requires_version"
                                        appliesto="externally_defined_general_property">
                                        <algorithm>
LOCAL
plib_properties : SET OF externally_defined_general_property := [];
END_LOCAL;
plib_properties := QUERY (edgp &lt;* externally_defined_general_property |
('EXTERNAL_PROPERTIES_MIM' + '.KNOWN_SOURCE' IN TYPEOF (edgp.source)) AND
('EXTERNAL_PROPERTIES_MIM' + '.KNOWN_SOURCE' + '\PRE_DEFINED_ITEM.NAME' = 'ISO 13584 library'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(edgp &lt;* plib_properties |(SIZEOF(QUERY(edir &lt;* USEDIN(edgp, 'EXTERNAL_PROPERTIES_MIM' + '.APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.ITEMS') |(edir.role.name = 'version'))) &lt;&gt; 1))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="product_concept_feature_requires_category"
                                        appliesto="product_concept_feature">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pcf &lt;* product_concept_feature |(SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF.' + 'INCLUSION_PRODUCT_CONCEPT_FEATURE','CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONDITIONAL_CONCEPT_FEATURE'] * TYPEOF(pcf)) = 0) AND(SIZEOF (QUERY (aga &lt;* USEDIN (pcf , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'APPLIED_GROUP_ASSIGNMENT.' + 'ITEMS') |(aga.role.name = 'specification category member') AND('CATALOG_DATA_INFORMATION_MIM_LF.' + 'PRODUCT_CONCEPT_FEATURE_CATEGORY' IN TYPEOF (aga.assigned_group)))) &lt;&gt;1))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="product_definition_replacement_requires_effectivity_assignment"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(pdr &lt;* product_definition_relationship |(pdr.name = 'definition replacement') AND(SIZEOF(USEDIN(pdr,'CATALOG_DATA_INFORMATION_MIM_LF.APPLIED_EFFECTIVITY_ASSIGNMENT.ITEMS')) = 0)))= 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_alternative_definition"
                                        appliesto="product_definition">
                                        <algorithm>
LOCAL
solution_definitions: SET OF product_definition := [];
END_LOCAL;
solution_definitions := QUERY(pd &lt;* product_definition |
(pd.frame_of_reference.name = 'alternative definition'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pd &lt;* solution_definitions |(SIZEOF (QUERY (pdr &lt;* USEDIN (pd ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | pdr.name = 'solution alternative definition')) &lt;&gt;1))) = 0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (pd &lt;* solution_definitions | NOT (pd.name IN ['technical' , 'supplier' , 'technical supplier' , '']))) = 0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (pd &lt;* solution_definitions |(pd.name IN ['supplier' , 'technical supplier']) AND (SIZEOF (QUERY (aoa &lt;* USEDIN (pd.formation ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_ORGANIZATION_ASSIGNMENT.ITEMS') | aoa.role.name = 'supplier')) &lt;&gt;1))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_applied_event_occurrence_assignment"
                                        appliesto="applied_event_occurrence_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (eo &lt;* applied_event_occurrence_assignment|(eo\event_occurrence_assignment.role.name ='event context') AND(SIZEOF (eo.items) &gt;1))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_applied_organizational_project_assignment"
                                        appliesto="applied_organizational_project_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (aopa &lt;* applied_organizational_project_assignment |(aopa.role.name = 'affecting project') AND NOT item_correlation(aopa. items ,['PRODUCT_CONCEPT', 'PRODUCT', 'PRODUCT_DEFINITION', 'PRODUCT_DEFINITION_FORMATION']))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (aopa &lt;* applied_organizational_project_assignment |(aopa.role.name = 'work program') AND NOT item_correlation (aopa.items , ['EXECUTED_ACTION']))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_approval"
                                        appliesto="approval approval_date_time">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (a &lt;* approval | SIZEOF (USEDIN (a , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPROVAL_DATE_TIME.DATED_APPROVAL')) &gt;2)) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (adt &lt;* approval_date_time |(NOT EXISTS(adt.role)) OR(NOT (adt.role.name IN ['actual' , 'planned'])))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (a &lt;* approval | SIZEOF (QUERY (adt &lt;* USEDIN (a , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPROVAL_DATE_TIME.DATED_APPROVAL') | adt.role.name ='actual')) &gt;1)) =0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF (QUERY (a &lt;* approval | SIZEOF (QUERY (adt &lt;* USEDIN (a , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPROVAL_DATE_TIME.DATED_APPROVAL') | adt.role.name ='planned')) &gt;1)) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_assembly_category"
                                        appliesto="product_definition">
                                        <algorithm>
LOCAL
assembly_definitions: SET OF product_definition := [];
END_LOCAL;
assembly_definitions := QUERY(pd &lt;* product_definition |
SIZEOF(QUERY(pdca &lt;* USEDIN(pd, 'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.DEFINITION') |
pdca.frame_of_reference.name= 'assembly definition')) &gt; 0);
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(pd &lt;* assembly_definitions | NOT ('assembly' IN categories_of_product(pd.formation.of_product))))= 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_centre_of_mass_representation"
                                        appliesto="representation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (r &lt;* representation |(r.name ='centre of mass') AND((SIZEOF (r.items) &lt;&gt;1) OR(SIZEOF (QUERY (i &lt;* r.items |('CATALOG_DATA_INFORMATION_MIM_LF' + '.POINT' IN TYPEOF (i)) AND(i.name = 'centre point'))) &lt;&gt;1))))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_class_system_assignment_for_approval_status"
                                        appliesto="approval_status">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* approval_status | NOT at_most_one_class_system(ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_class_system_assignment_for_class"
                                        appliesto="class">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (c &lt;* class | SIZEOF (QUERY (aca &lt;* USEDIN (c , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.CLASSIFICATION_ASSIGNMENT.ASSIGNED_CLASS') |((aca.role.name ='class system membership') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_CLASSIFICATION_ASSIGNMENT' IN TYPEOF (aca))))) &gt;1)) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_class_system_assignment_for_descriptive_representation_item"
                                        appliesto="descriptive_representation_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* descriptive_representation_item | NOT at_most_one_class_system(ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_class_system_assignment_for_document_type"
                                        appliesto="document_type">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* document_type | NOT at_most_one_class_system(ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_class_system_assignment_for_planar_extent"
                                        appliesto="planar_extent">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pe &lt;* planar_extent |(pe\representation_item.name = 'size format') AND NOT at_most_one_class_system(pe)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_class_system_assignment_for_security_classification_level"
                                        appliesto="security_classification_level">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* security_classification_level | NOT at_most_one_class_system(ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_classification_assignments"
                                        appliesto="applied_classification_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(aia &lt;* applied_classification_assignment | NOT class_assignment_is_valid(aia)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_collection_category"
                                        appliesto="product_definition">
                                        <algorithm>
LOCAL
collection_definitions: SET OF product_definition := [];
END_LOCAL;
collection_definitions := QUERY(pd &lt;* product_definition |
SIZEOF(QUERY(pdca &lt;* USEDIN(pd, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.DEFINITION') |
pdca.frame_of_reference.name= 'collection definition')) &gt; 0);
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(pd &lt;* collection_definitions | NOT ('collection' IN categories_of_product(pd.formation.of_product))))= 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_concept_feature_operator"
                                        appliesto="concept_feature_operator">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (cfo &lt;* concept_feature_operator | NOT(cfo.name IN ['and' , 'or' , 'oneof' , 'not' , 'implication']))) = 0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (cfo &lt;* concept_feature_operator | (cfo.name = 'implication') AND(SIZEOF (QUERY (cfrwc &lt;* USEDIN (cfo , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION.' +'CONDITIONAL_OPERATOR') | SIZEOF (QUERY (ccf &lt;* USEDIN(cfrwc , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONDITIONAL_CONCEPT_FEATURE.CONDITION') | NOT ('CATALOG_DATA_INFORMATION_MIM_LF.' + 'INCLUSION_PRODUCT_CONCEPT_FEATURE' IN TYPEOF (ccf)))) &gt;0)) &gt;0))) = 0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF(QUERY (cfo &lt;* concept_feature_operator | (cfo.name = 'not') AND (SIZEOF(QUERY(cfrwc &lt;* USEDIN(cfo, 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION.CONDITIONAL_OPERATOR') | cfrwc.related_product_concept_feature :&lt;&gt;: cfrwc.relating_product_concept_feature)) &gt;0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_configuration_design_for_class_breakdown_association"
                                        appliesto="configuration_design">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (cd &lt;* configuration_design |(cd.name ='functionality') AND(NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF (cd. design)) OR(cd.design\product_definition.frame_of_reference.name&lt;&gt; 'functional definition')))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (cd &lt;* configuration_design |(cd.name='realization') AND(NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF (cd.design)) OR(cd.design\product_definition.frame_of_reference.name&lt;&gt; 'conceptual definition')))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (cd &lt;* configuration_design |(cd.name IN ['functionality' , 'realization']) AND(NOT ('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_CLASS' IN TYPEOF (cd.configuration.item_concept))))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_configuration_design_for_design_constraint"
                                        appliesto="configuration_design">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (cd &lt;* configuration_design |(cd.name = 'design constraint usage') AND(NOT('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF (cd.design)) OR(cd.design\product_definition.frame_of_reference.name &lt;&gt; 'design constraint definition')))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_configuration_design_for_specified_individual"
                                        appliesto="configuration_design">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (cd &lt;* configuration_design |(cd. name ='physical instance basis') AND(NOT ('CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION' IN TYPEOF (cd.design)) OR(cd. design\product_definition.frame_of_reference.name&lt;&gt; 'physical occurrence')))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (cd &lt;* configuration_design |(cd. name ='physical instance basis') AND(NOT ('CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_IDENTIFICATION' IN TYPEOF (cd.configuration))))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_date_assignment"
                                        appliesto="applied_date_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(adr &lt;* applied_date_assignment |(adr.role.name = 'actual end') AND(NOT item_correlation (adr.items, ['ORGANIZATIONAL_PROJECT', 'EFFECTIVITY']))))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_document_reference"
                                        appliesto="applied_document_reference">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(adr &lt;* applied_document_reference |(adr.role.name = 'general tolerance definition') AND(NOT item_correlation (adr.items, ['REPRESENTATION']))))=0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF(QUERY(adr &lt;* applied_document_reference | NOT ((adr.role.name = 'general tolerance definition') OR item_correlation (adr.items,['APPROVAL','CERTIFICATION','CLASS','CLASS_SYSTEM','CONFIGURATION_DESIGN','CONFIGURATION_ITEM','CONTRACT','GENERAL_PROPERTY','MATERIAL_DESIGNATION','ORGANIZATION','ORGANIZATIONAL_PROJECT','PERSON','PRODUCT_CONCEPT','PRODUCT_CONCEPT_FEATURE', 'PRODUCT_CONCEPT_FEATURE_CATEGORY','PRODUCT_DEFINITION','PRODUCT_DEFINITION_FORMATION','PRODUCT_DEFINITION_FORMATION_RELATIONSHIP','PRODUCT_DEFINITION_RELATIONSHIP','PRODUCT_DEFINITION_SUBSTITUTE','PRODUCT_RELATED_PRODUCT_CATEGORY','PROPERTY_DEFINITION', 'REPRESENTATION','SECURITY_CLASSIFICATION','SHAPE_ASPECT', 'SHAPE_ASPECT_RELATIONSHIP']))))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_effectivity_assignment_for_class_category_usage"
                                        appliesto="applied_effectivity_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(aea &lt;* applied_effectivity_assignment |((SIZEOF(QUERY(i &lt;* aea.items |('CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE' IN TYPEOF(i)))) &gt; 0) AND((SIZEOF(QUERY(i &lt;* aea.items |('CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE' IN TYPEOF(i)))) &lt;&gt; SIZEOF(aea.items)) OR(SIZEOF(TYPEOF(aea.assigned_effectivity) *['CATALOG_DATA_INFORMATION_MIM_LF' + '.TIME_INTERVAL_BASED_EFFECTIVITY','CATALOG_DATA_INFORMATION_MIM_LF' + '.DATED_EFFECTIVITY','CATALOG_DATA_INFORMATION_MIM_LF' + '.SERIAL_NUMBERED_EFFECTIVITY','CATALOG_DATA_INFORMATION_MIM_LF' + '.LOT_EFFECTIVITY','CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_EFFECTIVITY']) &gt; 0) OR(aea.assigned_effectivity.id &lt;&gt; 'class usage') OR(SIZEOF(QUERY (cueca &lt;* USEDIN(aea,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EFFECTIVITY_CONTEXT_ASSIGNMENT.ASSIGNED_EFFECTIVITY_ASSIGNMENT') |'CATALOG_DATA_INFORMATION_MIM_LF' + '.CLASS_USAGE_EFFECTIVITY_CONTEXT_ASSIGNMENT' IN TYPEOF (cueca))) = 0))))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_effectivity_for_effectivity_relationship"
                                        appliesto="effectivity_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (er &lt;* effectivity_relationship |(SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF' + '.LOT_EFFECTIVITY' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.SERIAL_NUMBERED_EFFECTIVITY' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_EFFECTIVITY']*TYPEOF(er.relating_effectivity)) &gt;0) OR(SIZEOF (['CATALOG_DATA_INFORMATION_MIM_LF' + '.LOT_EFFECTIVITY' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.SERIAL_NUMBERED_EFFECTIVITY' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_EFFECTIVITY']*TYPEOF(er.related_effectivity)) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_effectivity_usage"
                                        appliesto="effectivity">
                                        <algorithm>
LOCAL
other_effectivities : SET OF effectivity ;
END_LOCAL;
other_effectivities := QUERY(e &lt;* effectivity |
(SIZEOF(['CATALOG_DATA_INFORMATION_MIM_LF' + '.DATED_EFFECTIVITY', 'CATALOG_DATA_INFORMATION_MIM_LF' + '.TIME_INTERVAL_BASED_EFFECTIVITY'] * TYPEOF(e)) = 0));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(e &lt;* other_effectivities |((SIZEOF(QUERY(er &lt;* USEDIN(e,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EFFECTIVITY_RELATIONSHIP.' + 'RELATED_EFFECTIVITY') | er.name = 'inheritance')) = 0) OR((e.id = 'configuration validity') AND(SIZEOF(QUERY (cea &lt;* USEDIN(e,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY') |'CATALOG_DATA_INFORMATION_MIM_LF' + '.CONFIGURED_EFFECTIVITY_ASSIGNMENT' IN TYPEOF (cea))) = 0)) OR((e.id = 'class usage') AND(SIZEOF(QUERY(aea &lt;* USEDIN(e,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EFFECTIVITY_ASSIGNMENT.ASSIGNED_EFFECTIVITY') |('CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_EFFECTIVITY_ASSIGNMENT' IN TYPEOF (aea)) AND(SIZEOF(QUERY(i &lt;* aea.items | 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE' IN TYPEOF(i))) &gt; 0))) = 0))))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_external_identification_assignment"
                                        appliesto="applied_external_identification_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(aeia &lt;* applied_external_identification_assignment |(aeia.role.name = 'alternative document id and location') AND(NOT item_correlation (aeia.items, ['DOCUMENT_FILE']))))=0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF(QUERY(aeia &lt;* applied_external_identification_assignment |(aeia.role.name = 'version') AND(NOT item_correlation (aeia.items, ['EXTERNALLY_DEFINED_CLASS', 'EXTERNALLY_DEFINED_GENERAL_PROPERTY']))))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_externally_defined_item_relationship"
                                        appliesto="externally_defined_item_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (edir &lt;* externally_defined_item_relationship |(edir. name = 'name scope') AND(NOT ('CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_GENERAL_PROPERTY' IN TYPEOF (edir.relating_item)) OR NOT ('CATALOG_DATA_INFORMATION_MIM_LF' + '.KNOWN_SOURCE' IN TYPEOF (edir. relating_item.source)) OR NOT ('CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CLASS' IN TYPEOF (edir. related_item)) OR NOT ('CATALOG_DATA_INFORMATION_MIM_LF' + '.KNOWN_SOURCE' IN TYPEOF (edir.related_item.source))))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_group_assignment"
                                        appliesto="applied_group_assignment">
                                        <where
                                          label="WR2"
                                          expression="SIZEOF(QUERY(aeia &lt;* applied_group_assignment |(aeia.role.name = 'group membership') AND(NOT item_correlation (aeia.items, ['GEOMETRIC_REPRESENTATION_ITEM', 'SHAPE_ASPECT']))))=0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF(QUERY(aeia &lt;* applied_group_assignment |(aeia.role.name = 'group membership') AND(NOT ((SIZEOF(aeia.items) = SIZEOF(QUERY(i &lt;* aeia.items | 'CATALOG_DATA_INFORMATION_MIM_LF' + '.GEOMETRIC_REPRESENTATION_ITEM' IN TYPEOF(i)))) OR(SIZEOF(aeia.items) = SIZEOF(QUERY(i &lt;* aeia.items | 'CATALOG_DATA_INFORMATION_MIM_LF' + '.SHAPE_ASPECT' IN TYPEOF(i))))))))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_group_relationship_for_classification_hierarchy"
                                        appliesto="group_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(gr &lt;* group_relationship |(gr.name = 'class hierarchy') AND(NOT('CATALOG_DATA_INFORMATION_MIM_LF.CLASS' IN TYPEOF(gr.related_group)) OR NOT('CATALOG_DATA_INFORMATION_MIM_LF.CLASS' IN TYPEOF(gr.relating_group))))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_group_relationship_for_specification_category"
                                        appliesto="group_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(gr &lt;* group_relationship |(gr.name = 'specification category hierarchy') AND(NOT('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_CONCEPT_FEATURE_CATEGORY' IN TYPEOF(gr.related_group)) OR NOT('CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_CONCEPT_FEATURE_CATEGORY' IN TYPEOF(gr.relating_group))))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_language_assignment_per_attribute"
                                        appliesto="attribute_language_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ala1 &lt;* attribute_language_assignment | SIZEOF(QUERY(it &lt;* ala1.items | SIZEOF (QUERY (ala2 &lt;* USEDIN (it ,'CATALOG_DATA_INFORMATION_MIM_LF.ATTRIBUTE_LANGUAGE_ASSIGNMENT.ITEMS') |(ala1\attribute_classification_assignment.attribute_name = ala2\attribute_classification_assignment.attribute_name) AND(ala1\attribute_classification_assignment.assigned_class :=: ala2\attribute_classification_assignment.assigned_class))) &gt;1)) &gt;0)) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_alternate_product_relationship"
                                        appliesto="alternate_product_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* alternate_product_relationship | NOT allowed_translations (ent, ['basis'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_application_context"
                                        appliesto="application_context">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* application_context | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_approval_relationship"
                                        appliesto="approval_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* approval_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_assembly_component_usage_substitute"
                                        appliesto="assembly_component_usage_substitute">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* assembly_component_usage_substitute | NOT allowed_translations (ent, ['definition'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_certification"
                                        appliesto="certification">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* certification | NOT allowed_translations (ent, ['purpose', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_configuration_design"
                                        appliesto="configuration_design">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* configuration_design | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_configuration_item"
                                        appliesto="configuration_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* configuration_item | NOT allowed_translations (ent, ['name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_contract"
                                        appliesto="contract">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* contract | NOT allowed_translations (ent, ['purpose'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_data_environment"
                                        appliesto="data_environment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* data_environment | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_date_role"
                                        appliesto="date_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* date_role | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_date_time_role"
                                        appliesto="date_time_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* date_time_role | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_descriptive_representation_item"
                                        appliesto="descriptive_representation_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* descriptive_representation_item | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_document_relationship"
                                        appliesto="document_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* document_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_effectivity"
                                        appliesto="effectivity">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* effectivity | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_effectivity_relationship"
                                        appliesto="effectivity_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* effectivity_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_event_occurrence"
                                        appliesto="event_occurrence">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* event_occurrence | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_external_source"
                                        appliesto="external_source">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* external_source | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_general_property"
                                        appliesto="general_property">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* general_property | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_general_property_relationship"
                                        appliesto="general_property_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* general_property_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_geometric_representation_item"
                                        appliesto="geometric_representation_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* geometric_representation_item | NOT allowed_translations (ent, ['name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_group"
                                        appliesto="group">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* group | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_group_relationship"
                                        appliesto="group_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* group_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_identification_role"
                                        appliesto="identification_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* identification_role | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_mapped_item"
                                        appliesto="mapped_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* mapped_item | NOT allowed_translations (ent, ['name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_organization_relationship"
                                        appliesto="organization_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* organization_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_organization_role"
                                        appliesto="organization_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* organization_role | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_organizational_project"
                                        appliesto="organizational_project">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* organizational_project | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_organizational_project_relationship"
                                        appliesto="organizational_project_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* organizational_project_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_person_and_organization_role"
                                        appliesto="person_and_organization_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* person_and_organization_role | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product"
                                        appliesto="product">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_concept"
                                        appliesto="product_concept">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_concept | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_concept_feature"
                                        appliesto="product_concept_feature">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_concept_feature | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_concept_feature_association"
                                        appliesto="product_concept_feature_association">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_concept_feature_association | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_concept_relationship"
                                        appliesto="product_concept_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_concept_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_definition"
                                        appliesto="product_definition">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_definition | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_definition_formation"
                                        appliesto="product_definition_formation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_definition_formation | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_definition_formation_relationship"
                                        appliesto="product_definition_formation_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_definition_formation_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_definition_relationship"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_definition_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_definition_substitute"
                                        appliesto="product_definition_substitute">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_definition_substitute | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_product_related_product_category"
                                        appliesto="product_related_product_category">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_related_product_category | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_property_definition"
                                        appliesto="property_definition">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* property_definition | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_representation"
                                        appliesto="representation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* representation | NOT allowed_translations (ent, ['description', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_representation_relationship"
                                        appliesto="representation_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* representation_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_security_classification"
                                        appliesto="security_classification">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* security_classification | NOT allowed_translations (ent, ['purpose', 'name'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_shape_aspect"
                                        appliesto="shape_aspect">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* shape_aspect | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_shape_aspect_relationship"
                                        appliesto="shape_aspect_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* shape_aspect_relationship | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_time_interval_role"
                                        appliesto="time_interval_role">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* time_interval_role | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_uncertainty_measure_with_unit"
                                        appliesto="uncertainty_measure_with_unit">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* uncertainty_measure_with_unit | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_multi_language_for_uncertainty_qualifier"
                                        appliesto="uncertainty_qualifier">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* uncertainty_qualifier | NOT allowed_translations (ent, ['description'])))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_name_for_known_source"
                                        appliesto="known_source">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(ks &lt;* known_source | (ks.name &lt;&gt; 'ISO 13584 library'))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_organization_assignment"
                                        appliesto="applied_organization_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(aoa &lt;* applied_organization_assignment |(aoa.role.name = 'organization in contract') AND(NOT item_correlation (aoa.items, ['CONTRACT']))))= 0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF(QUERY(aoa &lt;* applied_organization_assignment |(aoa.role.name = 'signing for contract') AND(NOT item_correlation (aoa.items, ['APPLIED_ORGANIZATION_ASSIGNMENT']))))= 0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF(QUERY(aoa &lt;* applied_organization_assignment |(aoa.role.name = 'validity context') AND(NOT item_correlation (aoa.items, ['PROPERTY_DEFINITION']))))= 0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF(QUERY(aoa &lt;* applied_organization_assignment |(aoa.role.name = 'alias scope') AND(NOT item_correlation (aoa.items, ['APPLIED_IDENTIFICATION_ASSIGNMENT']))))= 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_part_occurrence"
                                        appliesto="product_definition">
                                        <algorithm>
LOCAL
part_occurrences: SET OF product_definition := QUERY(pd &lt;* product_definition |
(pd.frame_of_reference.name = 'part occurrence'));
END_LOCAL;
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pd &lt;* part_occurrences |(NOT(pd.name IN['single instance' , 'selected instance' ,'quantified instance' , 'specified instance' ])))) = 0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (pd &lt;* part_occurrences |(SIZEOF (QUERY (pdr &lt;* USEDIN (pd ,'CATALOG_DATA_INFORMATION_MIM_LF.' + 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') | pdr.name = 'definition usage')) &lt;&gt;1) AND(SIZEOF (QUERY (cd &lt;* USEDIN (pd , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'CONFIGURATION_DESIGN.DESIGN') |(cd.name = 'occurrence usage definition') AND(NOT ('CATALOG_DATA_INFORMATION_MIM_LF.' + 'PRODUCT_IDENTIFICATION' IN TYPEOF(cd.configuration))))) &lt;&gt;1))) = 0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (pd &lt;* part_occurrences |(SIZEOF (QUERY (cd &lt;* USEDIN (pd , 'CATALOG_DATA_INFORMATION_MIM_LF.'+ 'PRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION') |('CATALOG_DATA_INFORMATION_MIM_LF.' +'PRODUCT_DEFINITION_USAGE' IN TYPEOF (cd)))) = 0)AND(SIZEOF (USEDIN (pd , 'CATALOG_DATA_INFORMATION_MIM_LF.' + 'PRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE')) = 0))) = 0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF (QUERY (pd &lt;* part_occurrences |(pd.name = 'selected instance') AND NOT valid_selected_instance_representation(pd)))=0">
                                        </where>
                                        <where
                                          label="WR5"
                                          expression="SIZEOF (QUERY (pd &lt;* part_occurrences |(pd.name = 'quantified instance') AND(SIZEOF (QUERY (ppd &lt;* USEDIN (pd , 'CATALOG_DATA_INFORMATION_MIM_LF.' +'PROPERTY_DEFINITION.DEFINITION') |(ppd.name ='occurrence quantity') AND(SIZEOF (QUERY (pdr &lt;*USEDIN (ppd , 'CATALOG_DATA_INFORMATION_MIM_LF.' +'PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | (pdr.used_representation.name = 'quantity') AND(SIZEOF (pdr.used_representation.items) = 1) AND(SIZEOF (QUERY (i &lt;* pdr.used_representation.items |('CATALOG_DATA_INFORMATION_MIM_LF.' + 'MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i)) AND(i.name = 'quantity measure'))) = 1)))= 1)))= 0)))= 0">
                                        </where>
                                        <where
                                          label="WR6"
                                          expression="SIZEOF (QUERY (pd &lt;* part_occurrences |(pd.name = 'specified instance') AND(SIZEOF (QUERY (pdor &lt;* USEDIN (pd , 'CATALOG_DATA_INFORMATION_MIM_LF.' +'PRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE') |'CATALOG_DATA_INFORMATION_MIM_LF.' +'SPECIFIED_HIGHER_USAGE_OCCURRENCE' IN TYPEOF (pdor.occurrence_usage))) = 0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_part_occurrence_category"
                                        appliesto="product_definition">
                                        <algorithm>
LOCAL
part_occurrences: SET OF product_definition := QUERY(pd &lt;* product_definition |(
pd.frame_of_reference.name = 'part occurrence'));
END_LOCAL;
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(pd &lt;* part_occurrences |(SIZEOF(QUERY(prpc &lt;* USEDIN(pd.formation.of_product, 'CATALOG_DATA_INFORMATION_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name IN ['part','raw material','tool'])) = 0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_person_and_organization_assignment"
                                        appliesto="applied_person_and_organization_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(aoa &lt;* applied_person_and_organization_assignment |(aoa.role.name = 'signing for contract') AND(NOT item_correlation (aoa.items, ['APPLIED_ORGANIZATION_ASSIGNMENT']))))= 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_categories_for_tool_part_relationship"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdr &lt;* product_definition_relationship |(pdr.name = 'tool part relationship') AND((SIZEOF (QUERY (prpc &lt;* USEDIN (pdr.relating_product_definition.formation.of_product ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name ='tool')) &lt;1) OR(SIZEOF (QUERY (prpc &lt;* USEDIN (pdr. related_product_definition.formation.of_product ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name ='part')) &lt;1)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_category_for_product"
                                        appliesto="product">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(p &lt;* product | SIZEOF(QUERY(prpc &lt;* USEDIN(p, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name IN ['part','document','functionality', 'conceptual product','alternative solution','requirement', 'physically realized product','tool','raw material']))&lt;&gt; 1)) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definition_context_for_external_properties"
                                        appliesto="product_definition">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pd &lt;* product_definition |(SIZEOF (QUERY (propd &lt;* USEDIN (pd, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PROPERTY_DEFINITION.DEFINITION') | SIZEOF (QUERY (gpa &lt;* USEDIN (propd , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.GENERAL_PROPERTY_ASSOCIATION.DERIVED_DEFINITION')|'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_GENERAL_PROPERTY' IN TYPEOF (gpa.base_definition))) &gt; 0)) &gt; 0) AND(SIZEOF (QUERY (pdca &lt;* USEDIN (pd, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.DEFINITION')|(pdca.frame_of_reference.name = 'external') AND(pdca.role.name = 'external'))) = 0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definition_context_for_product"
                                        appliesto="product_definition">
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (pd &lt;* product_definition |(pd.frame_of_reference.name = 'functional definition') AND(SIZEOF (QUERY (prpc &lt;* USEDIN (pd. formation.of_product,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name ='functionality')) =0))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (pd &lt;* product_definition |(pd.frame_of_reference.name = 'conceptual definition') AND(SIZEOF (QUERY (prpc &lt;* USEDIN (pd. formation.of_product,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'conceptual product')) =0))) =0">
                                        </where>
                                        <where
                                          label="WR7"
                                          expression="SIZEOF (QUERY (pd &lt;* product_definition |(pd.frame_of_reference.name IN ['physical document definition','digital document definition','physical model_occurrence']) AND(SIZEOF (QUERY (prpc &lt;* USEDIN (pd.formation.of_product ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name ='document')) =0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definition_substitute"
                                        appliesto="product_definition_substitute">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pds &lt;* product_definition_substitute |(SIZEOF (USEDIN (pds ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_EFFECTIVITY_ASSIGNMENT.ITEMS')) =0))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (pds &lt;* product_definition_substitute | pds.substitute_definition.frame_of_reference.name &lt;&gt; 'part occurrence')) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (pds &lt;* product_definition_substitute | (('CATALOG_DATA_INFORMATION_MIM_LF' + '.ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (pds.context_relationship)) AND(SIZEOF (USEDIN (pds.context_relationship , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE_USAGE')) =0)) AND(('CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_RELATIONSHIP' IN TYPEOF (pds.context_relationship)) AND(pds.context_relationship.related_product_definition.frame_of_reference.name &lt;&gt; 'part occurrence')))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definitions_for_base_element"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdr &lt;* product_definition_relationship |(pdr. name = 'solution alternative definition') AND(NOT(pdr. relating_product_definition.frame_of_reference.name IN [ 'alternative definition' , 'functional definition' , 'conceptual definition' ]) OR(pdr.related_product_definition.frame_of_reference.name&lt;&gt;'alternative definition')))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definitions_for_collection"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdr &lt;* product_definition_relationship |(pdr. name = 'collection membership') AND((pdr.relating_product_definition.frame_of_reference.name&lt;&gt;'part definition') OR(pdr.related_product_definition.frame_of_reference.name&lt;&gt;'part occurrence') OR(SIZEOF (QUERY (pdca &lt;* USEDIN (pdr.relating_product_definition ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.DEFINITION') |(pdca.role.name = 'part definition type') AND(pdca.frame_of_reference.name = 'collection definition'))) =0)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definitions_for_definition_usage"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdr &lt;* product_definition_relationship |(pdr.name = 'definition usage') AND((pdr.relating_product_definition.frame_of_reference.name&lt;&gt; 'part definition') OR(pdr.related_product_definition.frame_of_reference.name&lt;&gt;'part occurrence')))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definitions_for_design_constraint_association"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdr &lt;* product_definition_relationship |(pdr. name = 'design constraint association') AND((pdr. relating_product_definition.frame_of_reference.name&lt;&gt;'design constraint definition') OR NOT (pdr.related_product_definition.frame_of_reference.name IN['alternative definition' , 'functional definition' ,'conceptual definition' ])))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definitions_for_part_definition_relationship"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdr &lt;* product_definition_relationship |(pdr.name IN [ 'geometrical relationship' , 'definition replacement' ]) AND((pdr.relating_product_definition.frame_of_reference.name &lt;&gt;'part definition') OR(pdr.related_product_definition.frame_of_reference.name &lt;&gt;'part definition')))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_product_definitions_for_product_definition_relationship"
                                        appliesto="product_definition_relationship">
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (pdr &lt;* product_definition_relationship |('CATALOG_DATA_INFORMATION_MIM_LF' + '.ASSEMBLY_COMPONENT_USAGE' IN TYPEOF (pdr)) AND((pdr.relating_product_definition.frame_of_reference.name &lt;&gt; 'part definition') OR(pdr.related_product_definition.frame_of_reference.name &lt;&gt; 'part definition')) AND((pdr.relating_product_definition.frame_of_reference.name &lt;&gt;'physical occurrence') OR(pdr.related_product_definition.frame_of_reference.name &lt;&gt;'physical occurrence')))) =0">
                                        </where>
                                        <where
                                          label="WR5"
                                          expression="SIZEOF(QUERY(pdr &lt;* product_definition_relationship |(pdr.name = 'physical realization') AND((pdr.relating_product_definition.frame_of_reference.name &lt;&gt; 'part definition') OR(pdr.related_product_definition.frame_of_reference.name &lt;&gt; 'physical occurrence')))) = 0">
                                        </where>
                                        <where
                                          label="WR6"
                                          expression="SIZEOF(QUERY(pdr &lt;* product_definition_relationship |(pdr.name = 'physical occurrence usage') AND(NOT('CATALOG_DATA_INFORMATION_MIM_LF' + '.ASSEMBLY_COMPONENT_USAGE' IN TYPEOF(pdr)) OR(pdr.relating_product_definition.frame_of_reference.name &lt;&gt; 'physical occurrence') OR(pdr.related_product_definition.frame_of_reference.name &lt;&gt; 'physical occurrence')))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_properties_of_document_file"
                                        appliesto="document_file">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (df &lt;* document_file | SIZEOF (QUERY (pd &lt;* USEDIN (df ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PROPERTY_DEFINITION.DEFINITION')| pd.name = 'document property')) &gt;1)) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (df &lt;* document_file | SIZEOF (QUERY (rt&lt;* df.representation_types |('CATALOG_DATA_INFORMATION_MIM_LF' + '.DOCUMENT_REPRESENTATION_TYPE' IN TYPEOF (rt)) AND(rt.name IN ['digital' , 'physical']))) =0)) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_properties_of_document_representation"
                                        appliesto="product_definition">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pd &lt;* product_definition |(pd.frame_of_reference.name IN['physical document definition', 'digital document definition' ,'physical model occurrence' ]) AND(SIZEOF (QUERY (pd1 &lt;* USEDIN (pd , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PROPERTY_DEFINITION.DEFINITION')| pd1.name = 'document property')) &gt;1))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_representation_for_document_content_property"
                                        appliesto="representation representation_item">
                                        <algorithm>
LOCAL
document_content_representations: SET OF representation := [];
END_LOCAL;
document_content_representations := QUERY(r &lt;* representation |
(r.name ='document content'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (r &lt;* document_content_representations |((SIZEOF (r.items) &lt;1) OR (SIZEOF (r.items) &gt;3)))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (ri &lt;* representation_item |(SIZEOF (QUERY (r &lt;* USEDIN (ri , 'CATALOG_DATA_INFORMATION_MIM_LF' + '.REPRESENTATION.ITEMS') | r.name ='document content')) &gt;0) AND NOT (ri. name IN ['detail level' , 'geometry type' , 'real world scale' ]))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (r &lt;* document_content_representations |(SIZEOF (QUERY (it &lt;* r.items |(it.name = 'detail level') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (it)))) &gt;1))) =0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF (QUERY (r &lt;* document_content_representations |(SIZEOF (QUERY (it &lt;* r.items |(it.name = 'geometry type') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (it)))) &gt;1))) =0">
                                        </where>
                                        <where
                                          label="WR5"
                                          expression="SIZEOF (QUERY (r &lt;* document_content_representations |(SIZEOF (QUERY (it &lt;* r.items |(it.name = 'real world scale') AND(SIZEOF (['CATALOG_DATA_INFORMATION_MIM_LF' + '.MEASURE_REPRESENTATION_ITEM' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.VALUE_REPRESENTATION_ITEM']* TYPEOF(it)) =1))) &gt;1))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_representation_for_document_creation_property"
                                        appliesto="representation representation_item">
                                        <algorithm>
LOCAL
document_creation_representations: SET OF representation := [];
END_LOCAL;
document_creation_representations := QUERY(r &lt;* representation |
(r.name ='document creation'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (r &lt;* document_creation_representations |((SIZEOF (r.items) &lt;1) OR (SIZEOF (r.items) &gt;3)))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (ri &lt;* representation_item |(SIZEOF (QUERY (r &lt;* USEDIN (ri ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.REPRESENTATION.ITEMS') | r.name ='document creation')) &gt;0) AND NOT (ri. name IN [ 'creating interface' , 'creating system' ,'operating system' ]))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (r &lt;* document_creation_representations |(SIZEOF (QUERY (i &lt;* r.items |(i.name = 'creating interface') AND ('CATALOG_DATA_INFORMATION_MIM_LF' + '.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (i)))) &gt;1))) =0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF (QUERY (r &lt;* document_creation_representations |(SIZEOF (QUERY (i &lt;* r.items |(i.name = 'creating system') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (i)))) &lt;&gt;1))) =0">
                                        </where>
                                        <where
                                          label="WR5"
                                          expression="SIZEOF (QUERY (r &lt;* document_creation_representations |(SIZEOF (QUERY (i &lt;* r.items |(i.name = 'operating system') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (i)))) &gt;1))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_representation_for_document_format_property"
                                        appliesto="representation representation_item">
                                        <algorithm>
LOCAL
document_format_representations: SET OF representation := [];
END_LOCAL;
document_format_representations := QUERY(r &lt;* representation |
(r.name ='document format'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (r &lt;* document_format_representations |((SIZEOF (r.items) &lt;1) OR (SIZEOF (r.items) &gt;3)))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (ri &lt;* representation_item |(SIZEOF (QUERY (r &lt;* USEDIN (ri ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.REPRESENTATION.ITEMS') | r.name ='document format')) &gt;0) AND NOT (ri. name IN ['character code' , 'data format' ]))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (r &lt;* document_format_representations |(SIZEOF (QUERY (i &lt;* r.items | (i.name = 'character code') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (i)))) &gt;1))) =0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF (QUERY (r &lt;* document_format_representations |(SIZEOF (QUERY (i &lt;* r.items | (i.name = 'data format') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.DESCRIPTIVE_REPRESENTATION_ITEM' IN TYPEOF (i)))) &gt;1))) =0">
                                        </where>
                                        <where
                                          label="WR5"
                                          expression="SIZEOF (QUERY (r &lt;* document_format_representations |(SIZEOF (QUERY (i &lt;* r.items| (i.name = 'size format') AND('CATALOG_DATA_INFORMATION_MIM_LF' + '.PLANAR_EXTENT' IN TYPEOF (i)))) &gt;1))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_representation_for_document_properties"
                                        appliesto="property_definition representation representation_context">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pd &lt;* property_definition |(pd. name ='document property') AND(SIZEOF (QUERY (pdr &lt;* USEDIN(pd ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PROPERTY_DEFINITION_REPRESENTATION.DEFINITION') | NOT (pdr.used_representation.name IN ['document content' , 'document creation' ,'document format' , 'document size' ]))) &gt;0))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (r &lt;* representation |(r.name IN [ 'document content' , 'document creation' , 'document format' , 'document size' ]) AND(SIZEOF (QUERY (pdr &lt;* USEDIN (r ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PROPERTY_DEFINITION_REPRESENTATION.USED_REPRESENTATION') |('CATALOG_DATA_INFORMATION_MIM_LF' + '.PROPERTY_DEFINITION' IN TYPEOF(pdr. definition)) AND(pdr. definition.name = 'document property'))) =0))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (r &lt;* representation |(r.name IN ['document content' , 'document creation' , 'document format' , 'document size' ]) AND(r.context_of_items.context_type&lt;&gt; 'document parameters'))) =0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF (QUERY (rc &lt;* representation_context |(rc.context_type = 'document parameters') AND(SIZEOF (QUERY(r &lt;* USEDIN (rc ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.REPRESENTATION.CONTEXT_OF_ITEMS') | NOT(r.name IN [ 'document content' , 'document creation' ,'document format' , 'document size' ]))) &gt;0))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_representation_for_document_size_property"
                                        appliesto="representation representation_item">
                                        <algorithm>
LOCAL
document_size_representations: SET OF representation := [];
END_LOCAL;
document_size_representations := QUERY(r &lt;* representation |
(r.name ='document size'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (r &lt;* document_size_representations |((SIZEOF (r.items) &lt;1) OR (SIZEOF (r.items) &gt;2)))) =0">
                                        </where>
                                        <where
                                          label="WR2"
                                          expression="SIZEOF (QUERY (ri &lt;* representation_item | (SIZEOF (QUERY (r &lt;* USEDIN (ri ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.REPRESENTATION.ITEMS') | r.name ='document size')) &gt;0) AND NOT (ri. name IN ['file size' , 'page count' ]))) =0">
                                        </where>
                                        <where
                                          label="WR3"
                                          expression="SIZEOF (QUERY (r &lt;* document_size_representations|(SIZEOF (QUERY (i &lt;* r.items | (i.name = 'file size') AND(SIZEOF (['CATALOG_DATA_INFORMATION_MIM_LF' + '.MEASURE_REPRESENTATION_ITEM' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.VALUE_RANGE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.VALUE_REPRESENTATION_ITEM']* TYPEOF (i)) =1))) &gt;1))) =0">
                                        </where>
                                        <where
                                          label="WR4"
                                          expression="SIZEOF (QUERY (r &lt;* document_size_representations |(SIZEOF (QUERY (i &lt;* r.items | (i.name = 'page count') AND(SIZEOF (['CATALOG_DATA_INFORMATION_MIM_LF' + '.MEASURE_REPRESENTATION_ITEM' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.VALUE_RANGE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.VALUE_REPRESENTATION_ITEM']* TYPEOF (i)) =1))) &gt;1))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_applied_identification_assignment"
                                        appliesto="applied_identification_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* applied_identification_assignment| NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_class"
                                        appliesto="class">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* class | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_configuration_item"
                                        appliesto="configuration_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* configuration_item | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_document_file"
                                        appliesto="document_file">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* document_file | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_effectivity"
                                        appliesto="effectivity">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* effectivity | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_general_property"
                                        appliesto="general_property">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* general_property | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_product_concept"
                                        appliesto="product_concept">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_concept | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_product_concept_feature"
                                        appliesto="product_concept_feature">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* product_concept_feature | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="restrict_version_assignment_for_shape_representation"
                                        appliesto="shape_representation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ent &lt;* shape_representation | NOT at_most_one_version_id (ent)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="security_classification_requires_security_classification_assignment"
                                        appliesto="security_classification">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (sc &lt;* security_classification | SIZEOF (USEDIN (sc ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.SECURITY_CLASSIFICATION_ASSIGNMENT.ASSIGNED_SECURITY_CLASSIFICATION')) =0)) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="selected_instance_usage_requires_representation"
                                        appliesto="assembly_component_usage">
                                        <algorithm>
LOCAL
selected_instance_usages: SET OF assembly_component_usage := QUERY(acr &lt;* assembly_component_usage|
(acr.name = 'selected instance usage'));
END_LOCAL;
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (acr &lt;* selected_instance_usages | NOT valid_selected_instance_representation(acr)))=0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="solution_definition_requires_solution_category"
                                        appliesto="product_definition">
                                        <algorithm>
LOCAL
solution_definitions: SET OF product_definition := [];
END_LOCAL;
solution_definitions := QUERY(pd &lt;* product_definition |
(pd.frame_of_reference.name = 'alternative definition'));
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY(pd &lt;* solution_definitions |(SIZEOF(QUERY(prpc &lt;* USEDIN(pd.formation.of_product, 'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS') | prpc.name = 'alternative solution')) = 0))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_characterized_object"
                                        appliesto="characterized_object">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (co &lt;* characterized_object | NOT (type_check_function (co ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.CHARACTERIZED_CLASS' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.DOCUMENT_FILE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.FEATURE_COMPONENT_DEFINITION' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.FEATURE_DEFINITION' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_CLASS' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_IDENTIFICATION'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_classification_assignment"
                                        appliesto="classification_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ca &lt;* classification_assignment | NOT (type_check_function (ca ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_CLASSIFICATION_ASSIGNMENT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.LANGUAGE_ASSIGNMENT'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_compound_representation_item"
                                        appliesto="compound_representation_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (cri &lt;* compound_representation_item | NOT(type_check_function (cri ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.DEFAULT_TOLERANCE_TABLE_CELL' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.VALUE_RANGE'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_document_reference"
                                        appliesto="document_reference">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (dr &lt;* document_reference | NOT (type_check_function (dr ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_DOCUMENT_REFERENCE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.DRAUGHTING_SPECIFICATION_REFERENCE'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_effectivity"
                                        appliesto="effectivity">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (e &lt;* effectivity | NOT (type_check_function (e ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_EFFECTIVITY' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.TIME_INTERVAL_BASED_EFFECTIVITY'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_effectivity_assignment"
                                        appliesto="effectivity_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ea &lt;* effectivity_assignment | NOT (type_check_function (ea ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_EFFECTIVITY_ASSIGNMENT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_INEFFECTIVITY_ASSIGNMENT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.CONFIGURED_EFFECTIVITY_ASSIGNMENT'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_effectivity_context_assignment"
                                        appliesto="effectivity_context_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (eca &lt;* effectivity_context_assignment | NOT (type_check_function (eca ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.CLASS_USAGE_EFFECTIVITY_CONTEXT_ASSIGNMENT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.CONFIGURED_EFFECTIVITY_CONTEXT_ASSIGNMENT'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_externally_defined_item"
                                        appliesto="externally_defined_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (edi &lt;* externally_defined_item | NOT (type_check_function (edi ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CHARACTER_GLYPH' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CLASS' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CURVE_FONT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_FEATURE_DEFINITION' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_GENERAL_PROPERTY','CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_HATCH_STYLE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_STYLE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_SYMBOL' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_TEXT_FONT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_TILE_STYLE'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_group"
                                        appliesto="group">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (g &lt;* group | NOT (type_check_function (g ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.CLASS' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.CLASS_SYSTEM' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.LANGUAGE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_CONCEPT_FEATURE_CATEGORY' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.REP_ITEM_GROUP'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_group_assignment"
                                        appliesto="group_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ga &lt;* group_assignment | NOT (type_check_function (ga ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_GROUP_ASSIGNMENT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_identification_assignment"
                                        appliesto="identification_assignment">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ia &lt;* identification_assignment | NOT (type_check_function (ia ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.APPLIED_IDENTIFICATION_ASSIGNMENT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNAL_IDENTIFICATION_ASSIGNMENT'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_property_definition"
                                        appliesto="property_definition">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pd &lt;* property_definition | NOT (type_check_function (pd ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.MATERIAL_PROPERTY' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_DEFINITION_SHAPE'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_property_definition_representation"
                                        appliesto="property_definition_representation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (pdr &lt;* property_definition_representation| NOT (type_check_function (pdr ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.MATERIAL_PROPERTY_REPRESENTATION' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.SHAPE_DEFINITION_REPRESENTATION'] ,3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_representation"
                                        appliesto="representation">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF(QUERY (r &lt;* representation | NOT (type_check_function(r,['CATALOG_DATA_INFORMATION_MIM_LF' + '.CONSTRUCTIVE_GEOMETRY_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.CONTACT_RATIO_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.DEFAULT_TOLERANCE_TABLE','CATALOG_DATA_INFORMATION_MIM_LF' + '.DEFINITIONAL_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.DIRECTION_SHAPE_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.HARDNESS_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.MOMENTS_OF_INERTIA_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.SHAPE_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.SURFACE_TEXTURE_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.TACTILE_APPEARANCE_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.TEXT_STRING_REPRESENTATION','CATALOG_DATA_INFORMATION_MIM_LF' + '.VISUAL_APPEARANCE_REPRESENTATION'] , 3)))) = 0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_exclusiveness_representation_item"
                                        appliesto="representation_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ri &lt;* representation_item | NOT (type_check_function (ri ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.COMPOUND_REPRESENTATION_ITEM' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.MEASURE_REPRESENTATION_ITEM' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.REP_ITEM_GROUP' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.VALUE_REPRESENTATION_ITEM'] , 3)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_mandatory_address"
                                        appliesto="address">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (a &lt;* address | NOT (type_check_function(a ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.ORGANIZATIONAL_ADDRESS' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.PERSONAL_ADDRESS'] , 0)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_mandatory_configurable_item"
                                        appliesto="configurable_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (ci &lt;* configurable_item | NOT (type_check_function (ci ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.PRODUCT_SPECIFICATION'] , 0)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_mandatory_document_product_association"
                                        appliesto="document_product_association">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (dpa &lt;* document_product_association | NOT(type_check_function (dpa ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.DOCUMENT_PRODUCT_EQUIVALENCE'] , 0)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="subtype_mandatory_externally_defined_item"
                                        appliesto="externally_defined_item">
                                        <where
                                          label="WR1"
                                          expression="SIZEOF (QUERY (edi &lt;* externally_defined_item | NOT (type_check_function (edi ,['CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CHARACTER_GLYPH' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CLASS' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_CURVE_FONT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_FEATURE_DEFINITION' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_GENERAL_PROPERTY','CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_HATCH_STYLE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_STYLE' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_SYMBOL' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_TEXT_FONT' ,'CATALOG_DATA_INFORMATION_MIM_LF' + '.EXTERNALLY_DEFINED_TILE_STYLE'] , 0)))) =0">
                                        </where>
                                      </rule>

                                      <rule
                                        name="validate_dependently_instantiable_entity_data_types"
                                        appliesto="application_context_element attribute_value_role axis1_placement boundary_curve bounded_curve bounded_surface cartesian_transformation_operator concept_feature_relationship concept_feature_relationship_with_condition conic contract_type document_usage_constraint effectivity_context_role elementary_surface event_occurrence_role face local_time loop point product_context product_definition_effectivity surface_patch topological_representation_item vertex">
                                        <algorithm>
LOCAL
number_of_input_instances : INTEGER;
previous_in_chain : LIST OF GENERIC := [];
set_of_input_types : SET OF STRING := [];
all_instances : SET OF GENERIC := [];
END_LOCAL;
all_instances := application_context_element + attribute_value_role + axis1_placement + boundary_curve + bounded_curve + bounded_surface + cartesian_transformation_operator + concept_feature_relationship + concept_feature_relationship_with_condition + conic + contract_type + document_usage_constraint + effectivity_context_role + elementary_surface + event_occurrence_role + face + local_time + loop + point + product_context + product_definition_effectivity + surface_patch + topological_representation_item + vertex;
number_of_input_instances := SIZEOF(all_instances);
REPEAT i:=1 TO number_of_input_instances;
set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
END_REPEAT;
                                        </algorithm>
                                        <where
                                          label="WR1"
                                          expression="dependently_instantiated(all_instances, set_of_input_types, previous_in_chain)">
                                        </where>
                                      </rule>

                                      <function
                                        name="dependently_instantiated">
                                        <parameter
                                          name="set_of_input_instances">
                                          <aggregate
                                            type="SET"/>
                                          <builtintype
                                            type="GENERIC"
                                            typelabel="igen"/>
                                        </parameter>
                                        <parameter
                                          name="set_of_input_types">
                                          <aggregate
                                            type="SET"/>
                                          <builtintype
                                            type="STRING"/>
                                        </parameter>
                                        <parameter
                                          name="previous_in_chain">
                                          <aggregate
                                            type="LIST"/>
                                          <builtintype
                                            type="GENERIC"
                                            typelabel="cgen"/>
                                        </parameter>
                                        <builtintype
                                          type="BOOLEAN"/>
                                        <algorithm>
LOCAL
number_of_input_instances : INTEGER;
number_of_referring_instances : INTEGER;
bag_of_referring_instances : BAG OF GENERIC:igen := [];
dependently_instantiated_flag : BOOLEAN;
previous_in_chain_plus : LIST OF GENERIC:cgen := [];
result : BOOLEAN := true;
set_of_types : SET OF STRING := [];
END_LOCAL;
IF EXISTS(set_of_input_instances) THEN
number_of_input_instances := SIZEOF(set_of_input_instances);
set_of_input_types := set_of_input_types + 'GENERIC';
REPEAT i:=1 TO number_of_input_instances;
bag_of_referring_instances := USEDIN (set_of_input_instances[i] , '');
IF EXISTS(bag_of_referring_instances) THEN
number_of_referring_instances := SIZEOF(bag_of_referring_instances);
dependently_instantiated_flag := false;
REPEAT j:=1 TO number_of_referring_instances;
set_of_types := TYPEOF(bag_of_referring_instances[j]);
IF set_of_types &lt;= set_of_input_types THEN
IF NOT (bag_of_referring_instances[j] IN previous_in_chain) THEN
previous_in_chain_plus := previous_in_chain +
set_of_input_instances[i];
IF dependently_instantiated([bag_of_referring_instances[j]],
set_of_input_types,
previous_in_chain_plus) THEN
dependently_instantiated_flag := true;
ESCAPE;
ELSE
SKIP;
END_IF;
END_IF;
ELSE
dependently_instantiated_flag := true;
ESCAPE;
END_IF;
END_REPEAT;
IF NOT dependently_instantiated_flag THEN
RETURN(false);
END_IF;
ELSE
RETURN(false);
END_IF;
END_REPEAT;
ELSE
RETURN(false);
END_IF;
RETURN(true);
                                        </algorithm>
                                      </function>

                                    </schema>
                                  </express>
