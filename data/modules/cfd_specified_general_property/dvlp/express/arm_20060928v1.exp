

(*
   ------------------------------------------------------------
../data/modules/cfd_specified_general_property/arm.exp
   ------------------------------------------------------------
*)

(* Genenerated from: ..\ballots\ballots\analysis\check_analysis_20060505\express\arm_20060505v1.exp *)

SCHEMA Cfd_specified_general_property_arm;

USE FROM Analysis_arm;

USE FROM Activity_arm;

USE FROM Activity_method_arm;
 
USE FROM Cfd_conditions_arm; 

USE FROM Cfd_equations_arm;

USE FROM Cfd_model_arm;

USE FROM Cfd_results_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM External_model_arm;

USE FROM External_item_identification_assignment_arm;

USE FROM Foundation_representation_arm;

USE FROM Independent_property_arm;

USE FROM Process_property_assignment_arm;

USE FROM Product_view_definition_arm;

USE FROM Property_assignment_arm;

USE FROM Resource_property_assignment_arm;

USE FROM Shape_property_assignment_arm;

TYPE choose_general_property_identifier = EXTENSIBLE SELECT
     (External_item_identification,
      Defined_data_name);
END_TYPE;

TYPE choose_geometry_location = EXTENSIBLE SELECT
    (External_geometric_model,
     Geometric_model);
END_TYPE;

TYPE choose_representation_context_identifier = EXTENSIBLE SELECT
     (External_item_identification,
      defined_data_class);
END_TYPE;

TYPE defined_data_class = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined,
      dimensional,
      normalised_by_dimensional,
      normalise_by_unknown_dimensional,
      dimensionless_parameter,
      dimensionless_constant);
END_TYPE;

TYPE defined_data_name = EXTENSIBLE SELECT
     (coordinate_data_name,
      fd_defined_data_name);
END_TYPE;

TYPE fd_defined_data_name = EXTENSIBLE SELECT
     (fd_nondimensional_parameter_name,
      Riemann_1D_data_name,
      force_moment_data_name,
      gas_model_data_name,
      viscosity_model_data_name,
      thermal_conductivity_model_data_name,
      turbulence_closure_data_name,
      turbulence_model_data_name,
      flow_solution_data_name);
END_TYPE;

TYPE fd_nondimensional_parameter_name = EXTENSIBLE ENUMERATION OF  
     (Mach,
      Mach_velocity,
      Mach_velocity_sound,
      Reynolds,
      Reynolds_velocity,
      Reynolds_length,
      Reynolds_viscosity_kinematic,
      Prandtl,
      Prandtl_thermal_conductivity,
      Prandtl_viscosity_molecular,
      Prandtl_specific_heat_pressure,
      specific_heat_ratio,
      specific_heat_ratio_pressure,
      specific_heat_ratio_volume,
      coef_pressure,
      coef_skin_friction_x,
      coef_skin_friction_y,
      coef_skin_friction_z,
      coef_pressure_dynamic,
      coef_pressure_reference,
      length_reference);
END_TYPE;

TYPE mbna_property_distribution_select = EXTENSIBLE SELECT
     BASED_ON property_distribution_select WITH
     (model_property_distribution);
END_TYPE;

TYPE mbna_value_context_select = EXTENSIBLE SELECT
     BASED_ON value_context_select WITH
     (choose_representation_context_identifier);
END_TYPE;

TYPE property_distribution_select = EXTENSIBLE SELECT
  (Activity_property,
   Independent_property_relationship,
   Assigned_property,
   Resource_property);
END_TYPE;

TYPE value_context_select = EXTENSIBLE SELECT
  (Activity,
   Activity_method,
   Independent_property,
   Product_view_definition,
   Representation_item,
   Shape_element);
END_TYPE;

ENTITY Geometry_reference;
  description : STRING;
  data        : choose_geometry_location;
END_ENTITY;

ENTITY Specified_general_property
  SUBTYPE OF (Independent_property);
  name_specifier : choose_general_property_identifier;
END_ENTITY;

ENTITY Specified_representation_context
  SUBTYPE OF (Representation_context);
  class_specifier : choose_representation_context_identifier;
END_ENTITY;

END_SCHEMA; -- end of Cfd_specified_general_property_arm


(*
   ------------------------------------------------------------
../data/modules/analysis/arm.exp
   ------------------------------------------------------------
*)

(* Genenerated from: ..\ballots\ballots\analysis\check_analysis_20060505\express\arm_20060505v1.exp *)

SCHEMA Analysis_arm;

USE FROM Mesh_topology_arm;

USE FROM Analysis_product_relationships_arm;

USE FROM Independent_property_arm;

ENTITY Behavioural_decomposition_of_numerical_model;
  parts : SET [2:?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;

ENTITY Model_action_domain
  SUBTYPE OF (Numerical_model);
  initial   : Model_state_domain;
  final     : Model_state_domain;
END_ENTITY;

ENTITY Model_product_domain
  SUBTYPE OF (Numerical_model);
  temporal_parts : SET OF model_action_domain;
END_ENTITY;

ENTITY Model_product_domain_with_mesh
  SUBTYPE OF (Model_product_domain);
  model_mesh : Mesh;
END_ENTITY;

ENTITY model_property_distribution;
  creating_software : STRING;
  domain            : Numerical_model;
  range             : Independent_property;
END_ENTITY;

ENTITY Model_state_domain
  SUBTYPE OF (Numerical_model);
END_ENTITY;

ENTITY Numerical_model;
  description            : STRING;
  id                     : STRING;
  name                   : STRING;
  creating_software      : STRING;
  intended_analysis_code : SET [1:?] OF STRING;
  analysis_type          : STRING;
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_numerical_model FOR
                   Numerical_model;
  ABSTRACT SUPERTYPE;
END_SUBTYPE_CONSTRAINT;

ENTITY Simulation_run;
  description : STRING;
  id          : STRING;
  name        : STRING;
  simulated   : Numerical_model;
  results     : SET OF Model_property_distribution;
END_ENTITY;

ENTITY Spatial_decomposition_of_numerical_model;
  parts : SET [2:?] OF Numerical_model;
  whole : Numerical_model;
END_ENTITY;

ENTITY Temporal_decomposition_of_model_action;
  parts : LIST [2:?] OF Model_action_domain;
  whole : Model_action_domain;
END_ENTITY;

END_SCHEMA; 


(*
   ------------------------------------------------------------
../data/modules/activity/arm.exp
   ------------------------------------------------------------
*)

(*
  $Id: arm.exp,v 1.17 2004/10/28 18:01:06 darla Exp $
 ISO TC184/SC4/WG12 N2941 - ISO/TS 10303-1047 Activity - EXPRESS ARM
*)

SCHEMA Activity_arm; 

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049


TYPE activity_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Activity;
  id : STRING;
  name : STRING;
  description : OPTIONAL STRING;
  chosen_method : Activity_method;
END_ENTITY;

ENTITY Activity_relationship;
  name : STRING;
  description : OPTIONAL STRING;
  relating_activity : Activity;
  related_activity : Activity;
END_ENTITY;

ENTITY Activity_status;
  assigned_activity : Activity;
  status : STRING;
END_ENTITY;

ENTITY Applied_activity_assignment;
  assigned_activity : Activity;
  items : SET[1:?] OF activity_item;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_arm



(*
   ------------------------------------------------------------
../data/modules/activity_method/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.11 2004/10/28 18:02:36 darla Exp $
 ISO TC184/SC4/WG12 N2943 - ISO/TS 10303-1049 Activity method - EXPRESS ARM
*)


SCHEMA Activity_method_arm; 


ENTITY Activity_method;
  name : STRING;
  description : OPTIONAL STRING;
  consequence : OPTIONAL STRING;
  purpose : STRING;
END_ENTITY;

END_SCHEMA;  -- Activity_method_arm



(*
   ------------------------------------------------------------
../data/modules/cfd_conditions/arm.exp
   ------------------------------------------------------------
*)

(* Genenerated from: ..\ballots\ballots\analysis\check_analysis_20060505\express\arm_20060505v1.exp *)

SCHEMA Cfd_conditions_arm;

USE FROM Cfd_specified_general_property_arm;

TYPE fd_bc_type_compound = EXTENSIBLE ENUMERATION 
     BASED_ON mbna_bc_type_compound WITH
     (bc_inflow,
      bc_outflow,
      bc_farfield);
END_TYPE;

TYPE fd_bc_type_simple = EXTENSIBLE ENUMERATION 
     BASED_ON mbna_bc_type_simple WITH
     (bc_wall_inviscid,
      bc_wall_viscous_heat_flux,
      bc_wall_viscous_isothermal,
      bc_wall_viscous,
      bc_wall,
      bc_inflow_subsonic,
      bc_inflow_supersonic,
      bc_outflow_subsonic,
      bc_outflow_supersonic,
      bc_tunnel_inflow,
      bc_tunnel_outflow,
      bc_degenerate_line,
      bc_degenerate_point,
      bc_symmetry_polar,
      bc_axissymmetric_wedge);
END_TYPE;

TYPE ijk_minmax = ENUMERATION OF 
     (i_min,
      j_min,
      k_min,
      i_max,
      j_max,
      k_max);
END_TYPE;

TYPE mbna_bc_type = EXTENSIBLE SELECT 
     (mbna_bc_type_simple, 
      mbna_bc_type_compound);
END_TYPE;

TYPE mbna_bc_type_compound = EXTENSIBLE ENUMERATION OF 
     (unspecified,
      application_defined);
END_TYPE;

TYPE mbna_bc_type_simple = EXTENSIBLE ENUMERATION OF 
     (unspecified,
      application_defined,
      bc_general,
      bc_Dirichlet,
      bc_Neumann,
      bc_extrapolate,
      bc_symmetry_plane);
END_TYPE;

TYPE riemann_1d_data_name = EXTENSIBLE ENUMERATION OF  
     (Riemann_invariant_plus,
      Riemann_invariant_minus,
      characteristic_entropy,
      characteristic_vorticity1,
      characteristic_vorticity2,
      characteristic_acoustic_plus,
      characteristic_acoustic_minus);
END_TYPE;

ENTITY Elements_bc
  SUBTYPE OF (mbna_bc);
  elements : LIST OF vertex_defined_cell;
END_ENTITY;

ENTITY Fd_bc
  SUBTYPE OF (Mbna_bc);
  SELF\mbna_bc.datasets : SET OF fd_bc_dataset;
END_ENTITY;

ENTITY Fd_bc_dataset
  SUBTYPE OF (Mbna_bc_dataset);
  SELF\mbna_bc_dataset.the_type : fd_bc_type_simple;
END_ENTITY;

ENTITY Fd_zone_bc
  SUBTYPE OF (Mbna_zone_bc);
  SELF\mbna_zone_bc.conditions : SET OF fd_bc;
END_ENTITY;

ENTITY Indexed_elements_bc
  SUBTYPE OF (Mbna_bc);
  element_indices : indices_group;
END_ENTITY;

ENTITY Indexed_points_bc
  SUBTYPE OF (Mbna_bc);
  point_indices : indices_group;
END_ENTITY;

ENTITY Mbna_bc
  SUBTYPE OF (mbna_condition);
  datasets            : SET OF Mbna_bc_dataset;
  family              : SET OF Mbna_family;
  gridloc             : Mesh_location;
  inward_normal_index : OPTIONAL ijk_minmax;
  inward_normal_list  : OPTIONAL indices_list;
  rstate              : SET OF Mbna_reference_state;
  the_type            : mbna_bc_type;
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_bc FOR mBna_bc;
  ONEOF(elements_bc,
        indexed_elements_bc,
        indexed_points_bc);
END_SUBTYPE_CONSTRAINT;

ENTITY Mbna_bc_data
  SUBTYPE OF (Mbna_condition);
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_bc_data FOR Mbna_bc_data;
  ABSTRACT SUPERTYPE;
END_SUBTYPE_CONSTRAINT;

ENTITY Mbna_bc_data_global
  SUBTYPE OF (Mbna_bc_data);
INVERSE
  data_global : SET OF model_property_distribution FOR Domain;
END_ENTITY;

ENTITY Mbna_bc_data_local
  SUBTYPE OF (Mbna_bc_data);
INVERSE
  data_local : SET OF model_property_distribution FOR Domain;
END_ENTITY;

ENTITY Mbna_bc_dataset
  SUBTYPE OF (Mbna_condition);
  gridloc  : mesh_location;
  rstate   : SET OF mbna_reference_state;
  the_type : mbna_bc_type_simple;
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_bc_dataset FOR mbna_bc_dataset;
  ONEOF(mbna_Dirichlet_bc_dataset,
        mbna_Neumann_bc_dataset);
END_SUBTYPE_CONSTRAINT;

ENTITY Mbna_condition
  SUBTYPE OF (Model_state_domain);
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_condition FOR Mbna_condition;
  ABSTRACT SUPERTYPE;
  ONEOF(Mbna_zone_bc,
        Mbna_bc,
        Mbna_bc_dataset,
        Mbna_bc_data,
        Mbna_reference_state,
        Mbna_integral_data);
END_SUBTYPE_CONSTRAINT;

ENTITY mbna_Dirichlet_bc_dataset
  SUBTYPE OF (Mbna_bc_dataset);
  data : mbna_bc_data;
END_ENTITY;

ENTITY mbna_family;
  description  : STRING;
  id           : STRING;
  conditions   : SET OF mbna_bc_type;
  geometry     : SET OF Geometry_reference;
END_ENTITY;

ENTITY Mbna_integral_data
  SUBTYPE OF (Mbna_condition);
INVERSE
  data : SET OF model_property_distribution FOR Domain;
END_ENTITY;

ENTITY Mbna_neumann_bc_dataset
  SUBTYPE OF (Mbna_bc_dataset);
  data : mbna_bc_data;
END_ENTITY;

ENTITY Mbna_reference_state
  SUBTYPE OF (Mbna_condition);
INVERSE
  data : SET OF model_property_distribution FOR Domain;
END_ENTITY;

ENTITY Mbna_zone_bc
  SUBTYPE OF (Mbna_condition);
  conditions : SET OF Mbna_bc;
  rstate     : SET OF Mbna_reference_state;
END_ENTITY;

END_SCHEMA;  -- end of conditions_schema


(*
   ------------------------------------------------------------
../data/modules/cfd_equations/arm.exp
   ------------------------------------------------------------
*)

(* Genenerated from: ..\ballots\ballots\analysis\check_analysis_20060505\express\arm_20060505v1.exp *)

SCHEMA Cfd_equations_arm;

USE FROM Analysis_arm;

TYPE fd_behaviour_models = EXTENSIBLE SELECT
  (gas_model,
   turbulence_closure,
   turbulence_model,
   viscosity_model);
END_TYPE;

TYPE fd_governing_equation_type = EXTENSIBLE ENUMERATION 
     BASED_ON mbna_governing_equation_type WITH
     (full_potential,
      Euler,
      NS_laminar,
      NS_turbulent,
      NS_laminar_incompressible,
      NS_turbulent_incompressible);
END_TYPE;

TYPE force_moment_data_name = EXTENSIBLE ENUMERATION OF
     (force_x,
      force_y,
      force_z,
      force_r,
      force_theta,
      force_phi,
      moment_x,
      moment_y,
      moment_z,
      moment_r,
      moment_theta,
      moment_phi,
      moment_xi,
      moment_eta,
      moment_zeta,
      moment_center_x,
      moment_center_y,
      moment_center_z,
      lift,
      drag,
      coef_lift,
      coef_drag,
      coef_moment_x,
      coef_moment_y,
      coef_moment_z,
      coef_moment_r,
      coef_moment_theta,
      coef_moment_phi,
      coef_moment_xi,
      coef_moment_eta,
      coef_moment_zeta,
      coef_moment_pressure_dynamic,
      coef_moment_area,
      coef_length);
END_TYPE;

TYPE gas_model_data_name = EXTENSIBLE ENUMERATION OF
     (ideal_gas_constant,
      specific_heat_ratio,
      specific_heat_pressure,
      specific_heat_volume);
END_TYPE;

TYPE gas_model_type = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined,
      ideal,
      Van_der_Waals);
END_TYPE;

TYPE mbna_behaviour_models = EXTENSIBLE SELECT
  (thermal_conductivity_model);
END_TYPE;

TYPE mbna_governing_equation_type = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined);
END_TYPE;

TYPE thermal_conductivity_model_data_name = EXTENSIBLE ENUMERATION OF
     (power_law_exponent,
      temperature_reference,
      thermal_conductivity_reference,
      Sutherland_constant_conductivity,
      constant_Prandtl);
END_TYPE;

TYPE thermal_conductivity_model_type = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined,
      independent,
      power_law,
      Sutherland_law,
      constant_Prandtl);
END_TYPE;

TYPE turbulence_closure_data_name = EXTENSIBLE ENUMERATION OF
     (eddy_viscosity,
      Prandtl_turbulent);
END_TYPE;

TYPE turbulence_closure_type = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined,
      eddy_viscosity,
      Reynolds_stress,
      Reynolds_stress_algebraic);
END_TYPE;

TYPE turbulence_model_data_name = EXTENSIBLE ENUMERATION OF
     (turbulent_distance,
      turbulent_energy_kinetic,
      turbulent_dissipation,
      turbulent_dissipation_rate,
      turbulent_BB_Reynolds,
      turbulent_SA_nu_tilde,
      turbulent_SA_chi,
      turbulent_SA_cb1,
      turbulent_SA_cb2,
      turbulent_SA_sigma,
      turbulent_SA_kappa,
      turbulent_SA_cw1,
      turbulent_SA_cw2,
      turbulent_SA_cw3,
      turbulent_SA_cv1,
      turbulent_SA_ct1,
      turbulent_SA_ct2,
      turbulent_SA_ct3,
      turbulent_SA_ct4);
END_TYPE;

TYPE turbulence_model_type = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined,
      algebraic_Baldwin_Lomax,
      algebraic_Cebeci_Smith,
      half_equation_Johnson_King,
      one_equation_Baldwin_Barth,
      one_equation_Spalart_Allmaras,
      two_equation_Jones_Launder,
      two_equation_Menter_SST,
      two_equation_Wilcox);
END_TYPE;

TYPE viscosity_model_data_name = EXTENSIBLE ENUMERATION OF
     (viscosity_molecular_reference,
      Sutherland_constant_viscosity);
END_TYPE;

TYPE viscosity_model_type = EXTENSIBLE ENUMERATION OF
     (unspecified,
      application_defined,
      constant_viscosity,
      power_law,
      Sutherland_law);
END_TYPE;

ENTITY Fd_diffusion_equation
  SUBTYPE OF (fd_governing_equation);
  diffusion_model : fd_diffusion_model;
END_ENTITY;

ENTITY Fd_diffusion_model;
  terms : ARRAY [1:diff] OF BOOLEAN;
  diff  : INTEGER;
END_ENTITY;

ENTITY Fd_governing_equation
  SUBTYPE OF (mbna_governing_equation);
  SELF\mbna_governing_equation.equation_type
                  : fd_governing_equation_type;
END_ENTITY;

ENTITY Flow_equation_set
  SUBTYPE OF (mbna_equation_set);
  SELF\mbna_equation_set.equations : fd_governing_equation;
  fd_models                        : SET OF fd_behaviour_models;
END_ENTITY;

ENTITY Gas_model
  SUBTYPE OF (mbna_behaviour_model);
  model_type : gas_model_type;
END_ENTITY;

ENTITY Mbna_behaviour_model
  SUBTYPE OF (Mbna_equation);
INVERSE
  data : SET OF Model_property_distribution FOR Domain;
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_behaviour_model FOR mbna_behaviour_model;
  ABSTRACT SUPERTYPE;
  ONEOF(thermal_conductivity_model,
        gas_model,
        turbulence_closure,
        turbulence_model,
        viscosity_model);
END_SUBTYPE_CONSTRAINT;

ENTITY Mbna_equation
  SUBTYPE OF (Model_product_domain);
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_equation FOR mbna_equation;
  ONEOF(Mbna_equation_set,
        Mbna_governing_equation,
        Mbna_behaviour_model);
END_SUBTYPE_CONSTRAINT;

ENTITY Mbna_equation_set
  SUBTYPE OF (mbna_equation);
  dimension   : INTEGER;
  equations   : mbna_governing_equation;
  mbna_models : SET OF mbna_behaviour_models;
END_ENTITY;

ENTITY Mbna_governing_equation
  SUBTYPE OF (mbna_equation);
  equation_type : mbna_governing_equation_type;
END_ENTITY;

ENTITY Thermal_conductivity_model
  SUBTYPE OF (mbna_behaviour_model);
  model_type : thermal_conductivity_model_type;
END_ENTITY;

ENTITY turbulence_closure
  SUBTYPE OF (mbna_behaviour_model);
  closure_type : turbulence_closure_type;
END_ENTITY;

ENTITY Turbulence_model
  SUBTYPE OF (mbna_behaviour_model);
  model_type      : turbulence_model_type;
  diffusion_model : OPTIONAL fd_diffusion_model;
END_ENTITY;

ENTITY Viscosity_model
  SUBTYPE OF (mbna_behaviour_model);
  model_type : viscosity_model_type;
END_ENTITY;

END_SCHEMA; -- end of equations_schema


(*
   ------------------------------------------------------------
../data/modules/cfd_model/arm.exp
   ------------------------------------------------------------
*)

(* Genenerated from: ..\ballots\ballots\analysis\check_analysis_20060505\express\arm_20060505v1.exp *)

SCHEMA Cfd_model_arm;

USE FROM Analysis_arm;

USE FROM Cfd_conditions_arm;

USE FROM Cfd_equations_arm;

USE FROM Cfd_model_arm;

USE FROM Cfd_results_arm;
 
USE FROM Mesh_connectivity_arm;

USE FROM Mesh_topology_arm;


TYPE coordinate_data_name = EXTENSIBLE ENUMERATION OF
     (coordinate_x,
      coordinate_y,
      coordinate_z,
      coordinate_r,
      coordinate_theta,
      coordinate_phi,
      coordinate_normal,
      coordinate_tangential,
      coordinate_xi,
      coordinate_eta,
      coordinate_zeta,
      coordinate_transform);
END_TYPE;

ENTITY grid_coordinates
  SUBTYPE OF (model_property_distribution);
  SELF\model_property_distribution.domain : model_product_domain_with_mesh;
  SELF\model_property_distribution.range  : specified_general_property;
INVERSE
  data : SET OF property_distribution_description FOR physical_function;
WHERE
  wr1 : is_coordinate_property(range);
END_ENTITY;

ENTITY grid_coordinates_with_rind
  SUBTYPE OF (grid_coordinates);
  rind_planes : rind;
END_ENTITY;

ENTITY fd_step
  SUBTYPE OF (mbna_step);
  SELF\mbna_step.equations : SET OF flow_equation_set;  
  SELF\mbna_step.zones     : LIST OF fd_zone;
END_ENTITY;

ENTITY fd_zone
  SUBTYPE OF (mbna_zone);
  SELF\mbna_zone.conditions : SET OF fd_zone_bc;
  SELF\mbna_zone.equations  : SET OF flow_equation_set;
END_ENTITY;

ENTITY mbna_model
  SUBTYPE OF (numerical_model);
  data               : SET OF mbna_integral_data;
  equations          : SET OF mbna_equation_set;  
  steps              : LIST OF mbna_step;
INVERSE
  history : SET OF mbna_history for domain;  
END_ENTITY;

ENTITY mbna_step
  SUBTYPE OF (model_action_domain);
  data               : SET OF mbna_integral_data;
  equations          : SET OF mbna_equation_set;  
  families           : SET OF mbna_family;
  refstate           : SET OF mbna_reference_state;
  zones              : LIST OF mbna_zone;
INVERSE
  history : SET OF mbna_history for domain;  
END_ENTITY;

ENTITY mbna_structured_zone
  SUBTYPE OF (mbna_zone);
  SELF\model_product_domain_with_mesh.model_mesh : structured_mesh;
END_ENTITY;

ENTITY mbna_unstructured_zone
  SUBTYPE OF (mbna_zone);
  SELF\model_product_domain_with_mesh.model_mesh : unstructured_mesh;
END_ENTITY;

ENTITY mbna_zone
  SUBTYPE OF (model_product_domain_with_mesh);
  cell_dimension     : INTEGER;
  conditions         : SET OF mbna_zone_bc;
  equations          : SET OF mbna_equation_set;
  families           : SET OF mbna_family;
  global_data        : SET OF mbna_integral_data;
  grid_connectivity  : OPTIONAL multiple_mesh_block;
  nindices           : INTEGER;
  physical_dimension : INTEGER;
  rstate             : SET OF mbna_reference_state;
INVERSE
  coordinates : SET OF grid_coordinates FOR domain;
  field_data  : SET OF mbna_discrete_data FOR domain;
  history     : SET OF mbna_history FOR domain;
  solution    : SET OF mbna_solution FOR domain;
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_zone FOR mbna_zone;
  ABSTRACT SUPERTYPE;
  ONEOF(mbna_structured_zone,
        mbna_unstructured_zone);
END_SUBTYPE_CONSTRAINT;

FUNCTION is_coordinate_property(arg : specified_general_property) : BOOLEAN;
  IF ('EXTERNAL_REFERENCE_SCHEMA.EXTERNALLY_DEFINED_ITEM' IN
      TYPEOF(arg) ) THEN
    RETURN(TRUE);
  END_IF;
  RETURN ('DOMAIN_SCHEMA.COORDINATE_DATA_NAME' IN TYPEOF(arg));
END_FUNCTION;

END_SCHEMA;  -- end of hierarchy_schema


(*
   ------------------------------------------------------------
../data/modules/cfd_results/arm.exp
   ------------------------------------------------------------
*)

(* Genenerated from: ..\ballots\ballots\analysis\check_analysis_20060505\express\arm_20060505v1.exp *)

SCHEMA Cfd_results_arm;

USE FROM Analysis_arm;

USE FROM Mesh_connectivity_arm;

USE FROM Mesh_topology_arm;

TYPE flow_solution_data_name = EXTENSIBLE ENUMERATION OF
     (potential,
      stream_function,
      density,
      pressure,
      temperature,
      energy_internal,
      enthalpy,
      entropy,
      entropy_approx,
      density_stagnation,
      pressure_stagnation,
      temperature_stagnation,
      energy_stagnation,
      enthalpy_stagnation,
      energy_stagnation_density,
      velocity_x,
      velocity_y,
      velocity_z,
      velocity_r,
      velocity_theta,
      velocity_phi,
      velocity_magnitude,
      velocity_normal,
      velocity_tangential,
      velocity_sound,
      velocity_sound_stagnation,
      momentum_x,
      momentum_y,
      momentum_z,
      momentum_magnitude,
      energy_kinetic,
      pressure_dynamic,
      vorticity_x,
      vorticity_y,
      vorticity_z,
      vorticity_magnitude,
      skin_friction_x,
      skin_friction_y,
      skin_friction_z,
      skin_friction_magnitude,
      velocity_angle_x,
      velocity_angle_y,
      velocity_angle_z,
      velocity_unit_vector_x,
      velocity_unit_vector_y,
      velocity_unit_vector_z,
      mass_flow,
      viscosity_kinematic,
      viscosity_molecular,
      viscosity_eddy,
      thermal_conductivity,
      ideal_gas_constant,
      specific_heat_pressure,
      specific_heat_volume,
      Reynolds_stress_xx,
      Reynolds_stress_xy,
      Reynolds_stress_xz,
      Reynolds_stress_yy,
      Reynolds_stress_yz,
      Reynolds_stress_zz);
END_TYPE;

ENTITY mbna_discrete_data
  SUBTYPE OF (mbna_result);
  gridloc : mesh_location;
INVERSE
  data : SET OF property_distribution_description FOR physical_function;
END_ENTITY;

ENTITY mbna_discrete_data_with_rind
  SUBTYPE OF (mbna_discrete_data);
  rind_planes : rind;
END_ENTITY;

ENTITY mbna_history
  SUBTYPE OF (mbna_result);
  notes : LIST OF string;
INVERSE
  data : SET OF property_distribution_description FOR physical_function;
END_ENTITY;

ENTITY mbna_result
  SUBTYPE OF (model_property_distribution);  
END_ENTITY;

SUBTYPE_CONSTRAINT sc1_mbna_result FOR mbna_result;
  ONEOF(mbna_solution,
        mbna_history,
        mbna_discrete_data);
END_SUBTYPE_CONSTRAINT;

ENTITY mbna_solution
  SUBTYPE OF (mbna_result);
  gridloc  : mesh_location;
INVERSE
  solution : SET OF property_distribution_description FOR physical_function;
END_ENTITY;

ENTITY mbna_solution_with_rind
  SUBTYPE OF (mbna_solution);
  rind_planes : rind;
END_ENTITY;
END_SCHEMA;


(*
   ------------------------------------------------------------
../data/modules/elemental_geometric_shape/arm.exp
   ------------------------------------------------------------
*)

(* 
$Id: arm.exp,v 1.13 2006/03/24 18:43:16 thendrix Exp $
ISO TC184/SC4/WG12 N4248 - ISO/TS 10303-1004 Elemental geometric shape - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2102
*)
   
SCHEMA Elemental_geometric_shape_arm;
 
USE FROM Foundation_representation_arm;

USE FROM Value_with_unit_arm;	

TYPE cartesian_transformation = SELECT (Cartesian_transformation_2d, Cartesian_transformation_3d);
END_TYPE;

TYPE geometric_mapping_target = SELECT (Axis_placement, cartesian_transformation);
END_TYPE;

ENTITY Geometric_coordinate_space
SUBTYPE OF (Numerical_representation_context);
  dimension_count: INTEGER;
WHERE
WR1: dimension_count >0;
END_ENTITY;

ENTITY Geometric_model
SUBTYPE OF (Representation);
  version_id    : OPTIONAL STRING;
  model_extent  : OPTIONAL length_measure;
  SELF\Representation.context_of_items : Geometric_coordinate_space;
  SELF\Representation.items: SET[1:?] OF Detailed_geometric_model_element;
END_ENTITY;
   
ENTITY Detailed_geometric_model_element
ABSTRACT SUPERTYPE OF (ONEOF(Cartesian_point, Direction, Axis_placement, Cartesian_transformation_2d,
	Cartesian_transformation_3d))
SUBTYPE OF (Representation_item);
END_ENTITY;

ENTITY Cartesian_point
SUBTYPE OF (Detailed_geometric_model_element);
  coordinates: LIST[1:3] OF length_measure;
END_ENTITY;

ENTITY Direction
SUBTYPE OF (Detailed_geometric_model_element);
  coordinates: LIST[2:3] OF length_measure;  
END_ENTITY;

ENTITY Axis_placement
SUBTYPE OF (Detailed_geometric_model_element);
  origin: Cartesian_point;
  x_axis: Direction;
  y_axis: Direction;
DERIVE
  dim: INTEGER := SIZEOF(origin.coordinates);
WHERE
WR1: dim >1;
WR2: dim = SIZEOF(x_axis.coordinates);
WR3: dim = SIZEOF(y_axis.coordinates);
END_ENTITY;
   
ENTITY Cartesian_transformation_2d
SUBTYPE OF (Detailed_geometric_model_element);
   multiplication_matrix: ARRAY[1:2] OF Direction;
   translation: Cartesian_point;
WHERE
WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=2;
WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=2;
WR3: SIZEOF(translation.coordinates)=2;
END_ENTITY;

ENTITY Cartesian_transformation_3d
SUBTYPE OF (Detailed_geometric_model_element);
   multiplication_matrix: ARRAY[1:3] OF Direction;
   translation: Cartesian_point;
WHERE
WR1: SIZEOF(multiplication_matrix[1]\Direction.coordinates)=3;
WR2: SIZEOF(multiplication_matrix[2]\Direction.coordinates)=3;
WR3: SIZEOF(multiplication_matrix[3]\Direction.coordinates)=3;
WR4: SIZEOF(translation.coordinates)=3;
END_ENTITY;

ENTITY Axis_placement_mapping;
  source: Axis_placement;
  target: Axis_placement;
WHERE
WR1: source\Axis_placement.dim = target\Axis_placement.dim;
END_ENTITY;

END_SCHEMA;














(*
   ------------------------------------------------------------
../data/modules/external_model/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.3 2004/10/21 18:01:38 darla Exp $
 ISO TC184/SC4/WG12 N1228 - ISO/TS 10303-1033 External model - EXPRESS ARM
*)

SCHEMA External_model_arm;

USE FROM Elemental_geometric_shape_arm;

USE FROM File_identification_arm;

ENTITY External_geometric_model
SUBTYPE OF (Geometric_model);
   SELF\Representation.items: SET[1:1] OF Axis_placement;
   external_file: Digital_file;
WHERE
WR1: SELF\Representation.context_of_items.dimension_count = 3;
WR2: SELF\Representation.context_of_items.kind = 'external';
END_ENTITY;

END_SCHEMA;



(*
   ------------------------------------------------------------
../data/modules/external_item_identification_assignment/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.12 2004/10/21 17:59:15 darla Exp $
 ISO TC184/SC4/WG12 N1207 - ISO/TS 10303-1128 External item identification assignment - EXPRESS ARM
*)

 
SCHEMA External_item_identification_assignment_arm;

TYPE external_identification_item = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE;

ENTITY External_item_identification
SUBTYPE OF (External_source_identification);
  external_id : STRING;
END_ENTITY;

ENTITY External_source_identification;
  source_id	  : STRING;
  source_type : STRING;
  item 	  : external_identification_item;
  description : OPTIONAL STRING;
END_ENTITY;

END_SCHEMA;


(*
   ------------------------------------------------------------
../data/modules/foundation_representation/arm.exp
   ------------------------------------------------------------
*)

(*
$Id: arm.exp,v 1.17 2006/03/24 18:31:03 thendrix Exp $
ISO TC184/SC4/WG12 N4348 - ISO/TS 10303-1006 Foundation representation - EXPRESS ARM
Supersedes ISO TC184/SC4/WG12 N2905
*) 


SCHEMA Foundation_representation_arm; 

USE FROM Value_with_unit_arm;    -- ISO/TS 10303-1054


ENTITY Numerical_representation_context
  SUBTYPE OF (Representation_context);
  units : OPTIONAL SET[1:?] OF Unit;
  accuracies : OPTIONAL SET[1:?] OF Uncertainty_with_unit;
END_ENTITY;

ENTITY Representation;
  id : OPTIONAL STRING;
  name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  context_of_items : Representation_context;
  items : SET[1:?] OF Representation_item;
WHERE
  WR1 : EXISTS(name) OR (TYPEOF(SELF\Representation) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Representation_context;
  id : STRING;
  kind : STRING;
INVERSE
  representations_in_context : SET[1:?] OF Representation FOR context_of_items;
END_ENTITY;

ENTITY Representation_item
  ABSTRACT SUPERTYPE ;
  name : OPTIONAL STRING;
END_ENTITY;

ENTITY Representation_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  rep_1 : Representation;
  rep_2 : Representation;
WHERE
  WR1 : EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
  WR2 : EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) <> TYPEOF(SELF));
END_ENTITY;

ENTITY String_representation_item
  SUBTYPE OF (Representation_item);
  string_value : STRING;
END_ENTITY;

END_SCHEMA;  -- Foundation_representation_arm


(*
   ------------------------------------------------------------
../data/modules/independent_property/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.11 2004/10/28 19:05:37 darla Exp $
 ISO TC184/SC4/WG12 N2964 - ISO/TS 10303-1036 Independent property - EXPRESS ARM
*) 


SCHEMA Independent_property_arm; 


ENTITY Independent_property;
  id : STRING;
  property_type : STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Independent_property_relationship;
  relation_type : STRING;
  description : OPTIONAL STRING;
  relating : Independent_property;
  related : Independent_property;
END_ENTITY;

END_SCHEMA;  -- Independent_property_arm


(*
   ------------------------------------------------------------
../data/modules/process_property_assignment/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.15 2004/10/28 19:10:55 darla Exp $
 ISO TC184/SC4/WG12 N2970 - ISO/TS 10303-1040 Process property assignment - EXPRESS ARM
*)


SCHEMA Process_property_assignment_arm; 

USE FROM Activity_arm;    -- ISO/TS 10303-1047

USE FROM Activity_method_arm;    -- ISO/TS 10303-1049

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE characterized_activity_definition = EXTENSIBLE SELECT
   (Activity, 
    Activity_method);
END_TYPE; 

ENTITY Activity_property;
  name : STRING;
  description : STRING;
  described_element : characterized_activity_definition;
END_ENTITY;

ENTITY Activity_property_representation;
  description : OPTIONAL STRING;
  property : Activity_property;
  rep : Representation;
  role : STRING;
END_ENTITY;

ENTITY Applied_independent_activity_property
  SUBTYPE OF (Activity_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Activity_property.name : STRING := base_element_property.property_type;
END_ENTITY;

END_SCHEMA;  -- Process_property_assignment_arm




(*
   ------------------------------------------------------------
../data/modules/product_view_definition/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.8 2006/03/24 19:03:52 thendrix Exp $
 ISO TC184/SC4/WG12 N4351 - ISO/TS 10303-1019 Product view definition - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N1532
*)
   
SCHEMA Product_view_definition_arm;

USE FROM Product_version_arm;
         
ENTITY Product_view_definition;
  id              	: OPTIONAL STRING;
  name  	      	: OPTIONAL STRING;
  additional_characterization	      : OPTIONAL STRING;
  initial_context 	: View_definition_context;
  additional_contexts   : SET [0:?] OF View_definition_context;
  defined_version  	: Product_version;
WHERE
  WR1: NOT (initial_context IN additional_contexts);
  WR2: EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) <> TYPEOF(SELF));
END_ENTITY;
   
ENTITY View_definition_context;
  application_domain	: STRING;
  life_cycle_stage 	: STRING;
  description	 	: OPTIONAL STRING;
WHERE
  WR1: (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT')) > 0) OR
    (SIZEOF (USEDIN(SELF, 'PRODUCT_VIEW_DEFINITION_ARM.' +
    'PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS')) > 0);
END_ENTITY;
   
END_SCHEMA;



(*
   ------------------------------------------------------------
../data/modules/property_assignment/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.14 2006/03/24 19:06:27 thendrix Exp $
 ISO TC184/SC4/WG12 N4374 - ISO/TS 10303-1030 Property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2972
*)


SCHEMA Property_assignment_arm; 

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE property_assignment_select = EXTENSIBLE SELECT;
END_TYPE; 

TYPE represented_definition = EXTENSIBLE SELECT (
    Independent_property,
    Assigned_property);
END_TYPE;

ENTITY Applied_independent_property
  SUBTYPE OF (Assigned_property);
  base_independent_property : Independent_property;
DERIVE
  SELF\Assigned_property.name : STRING := base_independent_property.property_type;
END_ENTITY;

ENTITY Assigned_property;
  id : OPTIONAL STRING;
  name : STRING;
  description : OPTIONAL STRING;
  described_element : property_assignment_select;
END_ENTITY;

ENTITY Property_definition_representation
  ABSTRACT SUPERTYPE;
    description : OPTIONAL STRING;
    definition : represented_definition;
    rep : Representation;
    role : OPTIONAL STRING;
END_ENTITY;

ENTITY Property_representation
  SUBTYPE OF (Property_definition_representation);
    SELF\Property_definition_representation.definition RENAMED property : Assigned_property;
END_ENTITY;

END_SCHEMA;  -- Property_assignment_arm


(*
   ------------------------------------------------------------
../data/modules/resource_property_assignment/arm.exp
   ------------------------------------------------------------
*)

(*
 $Id: arm.exp,v 1.6 2004/11/19 21:37:41 robbod Exp $
 ISO TC184/SC4/WG12 N3157 - ISO/TS 10303-1273 Resource property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2438
*) 


SCHEMA Resource_property_assignment_arm;

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Independent_property_arm;    -- ISO/TS 10303-1036


TYPE characterized_resource_select = EXTENSIBLE GENERIC_ENTITY SELECT;
END_TYPE; 

ENTITY Applied_independent_resource_property
  SUBTYPE OF (Resource_property);
  base_element_property : Independent_property;
DERIVE
  SELF\Resource_property.name : STRING := base_element_property.property_type;
END_ENTITY;

ENTITY Resource_property;
  name : STRING;
  description : STRING;
  described_element : characterized_resource_select;
END_ENTITY;

ENTITY Resource_property_representation;
  description : OPTIONAL STRING;
  property : Resource_property;
  rep : Representation;
  role : STRING;
END_ENTITY;

END_SCHEMA;  -- Resource_property_assignment_arm


(*
   ------------------------------------------------------------
../data/modules/shape_property_assignment/arm.exp
   ------------------------------------------------------------
*)

 (*
 $Id: arm.exp,v 1.22 2006/03/24 19:08:57 thendrix Exp $
 ISO TC184/SC4/WG12 N4357 - ISO/TS 10303-1032 Shape property assignment - EXPRESS ARM
 Supersedes ISO TC184/SC4/WG12 N2974
*)


SCHEMA Shape_property_assignment_arm; 

USE FROM Elemental_geometric_shape_arm;    -- ISO/TS 10303-1004

USE FROM External_model_arm;    -- ISO/TS 10303-1033

USE FROM Foundation_representation_arm;    -- ISO/TS 10303-1006

USE FROM Product_view_definition_arm;    -- ISO/TS 10303-1019

USE FROM Product_view_definition_relationship_arm;    -- ISO/TS 10303-1041

USE FROM Characterizable_object_arm;     -- ISO/TS 10303-xxxx


TYPE shape_dependent_select = SELECT
   (Item_shape, 
    Shape_element);
END_TYPE; 

TYPE shape_model = SELECT
   (External_geometric_model, 
    Geometric_model);
END_TYPE; 

TYPE shape_select = SELECT
   (Item_shape, 
    Shape_element, 
    Shape_element_relationship);
END_TYPE; 

TYPE shapeable_item = SELECT
   (Characterizable_object, 
    Product_view_definition, 
    View_definition_usage);
END_TYPE; 

ENTITY Contextual_item_shape
  SUBTYPE OF (Item_shape);
  SELF\Item_shape.described_element : View_definition_usage;
DERIVE
  shaped_product : Product_view_definition := described_element\View_definition_relationship.related_view;
END_ENTITY;

ENTITY Item_shape;
  id : OPTIONAL STRING;
  description : OPTIONAL STRING;
  described_element : shapeable_item;
END_ENTITY;

ENTITY Shape_dependent_property_representation;
  characteristic_type : STRING;
  description : OPTIONAL STRING;
  described_element : shape_dependent_select;
  property_representation : Representation;
END_ENTITY;

ENTITY Shape_description_association;
  represented_characteristic : shape_select;
  representation : shape_model;
  role : OPTIONAL STRING;
  description : OPTIONAL STRING;
END_ENTITY;

ENTITY Shape_element;
  id : OPTIONAL STRING;
  element_name : OPTIONAL STRING;
  description : OPTIONAL STRING;
  containing_shape : Item_shape;
WHERE
  WR1: EXISTS(element_name) OR (TYPEOF(SELF\Shape_element) <> TYPEOF(SELF));
END_ENTITY;

ENTITY Shape_element_relationship;
  relation_type : OPTIONAL STRING;
  description : OPTIONAL STRING;
  relating : Shape_element;
  related : Shape_element;
WHERE
  WR1: EXISTS(relation_type) OR (TYPEOF(SELF\Shape_element_relationship) <> TYPEOF(SELF));
END_ENTITY;

END_SCHEMA;  -- Shape_property_assignment_arm
