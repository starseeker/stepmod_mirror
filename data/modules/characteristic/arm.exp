(*
   $Id: arm.exp,v 1.21 2005/06/22 08:56:39 liutkus Exp $
   ISO TC184/SC4/WG12 N3321 - ISO/CD-TS 10303-1654 Characteristic - EXPRESS ARM
*)

SCHEMA Characteristic_arm;

	USE FROM Document_assignment_arm;	-- ISO/TS 10303-1122
	USE FROM Extended_measure_representation_arm;	-- ISO/TS 10303-1106
	USE FROM Value_with_unit_extension_arm;	-- ISO/TS 10303-1753
  
  TYPE characteristic = SELECT
    (String_representation_item,
    Numerical_item_with_unit,
    Value_list,
    Value_set);
  END_TYPE;

	TYPE c_documented_element_select = EXTENSIBLE SELECT BASED_ON documented_element_select WITH 
	   (coordinated_characteristic);
	END_TYPE; 
  
  TYPE coordinated_characteristic = SELECT
    (Property_value_representation,
    Characteristic_representation);
  END_TYPE;

	TYPE list_characteristic = LIST[1:?] OF characteristic;
	END_TYPE; 

  TYPE range_class = ENUMERATION OF
    (closed,
     lower_open,
     upper_open,
     open);
  END_TYPE;

  TYPE scalar_or_coordinated_characteristics = SELECT
    (coordinated_characteristic,
     characteristic);
  END_TYPE;

  TYPE value_qualifier = SELECT
    (Precision_qualifier,
     Type_qualifier,
     Uncertainty_qualifier);
  END_TYPE;

	ENTITY Characteristic_data_table
  	  SUBTYPE OF (Measure_item); 
        property_value : LIST[1:?] OF list_characteristic;
	END_ENTITY;

	ENTITY Characteristic_representation
		SUBTYPE OF (Representation);
	END_ENTITY;

  ENTITY Expanded_uncertainty
    SUBTYPE OF (Standard_uncertainty);
      coverage_factor : REAL;
  END_ENTITY;

  ENTITY Maximum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Measure_qualification;
      name              : STRING; --text;
      description       : STRING; --text;
      qualified_measure : Value_with_unit;
      qualifiers        : SET[1:?] OF value_qualifier;
  END_ENTITY;

  ENTITY Minimum_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Nominal_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[1:1] OF Numerical_item_with_unit;
  END_ENTITY;

  ENTITY Plus_minus_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[3:3] OF Numerical_item_with_unit;
	DERIVE
      minimum_value : Numerical_item_with_unit := get_value('minimum',SELF\representation.items);
      nominal_value : Numerical_item_with_unit := get_value('nominal',SELF\representation.items);
      maximum_value : Numerical_item_with_unit := get_value('maximum',SELF\representation.items);      
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items | ri.name = 'minimum')) = 1;
      WR2: SIZEOF(QUERY( ri <* 
         SELF\representation.items | ri.name = 'nominal')) = 1;
      WR3: SIZEOF(QUERY( ri <* 
         SELF\representation.items | ri.name = 'maximum')) = 1;
      WR4: valid_relationship(minimum_value,nominal_value);
      WR5: valid_relationship(nominal_value,maximum_value);                                                               
      WR6: TYPEOF(minimum_value) = TYPEOF(nominal_value);
      WR7: TYPEOF(nominal_value) = TYPEOF(maximum_value); 
  END_ENTITY;

  ENTITY Precision_qualifier;
      precision_value : INTEGER;
  END_ENTITY;

  ENTITY Qualitative_uncertainty
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : STRING; --text;
  END_ENTITY;

  ENTITY Range_characteristic
    SUBTYPE OF (Characteristic_representation);
      SELF\Representation.items 	: SET[2:2] OF Numerical_item_with_unit;
      range_type				: range_class;
  WHERE
    WR1 : TYPEOF(SELF\Representation.items[1]) =
          TYPEOF(SELF\Representation.items[2]);
    WR2 : TYPEOF(SELF\Representation.items[1]\Value_with_unit.unit) =
          TYPEOF(SELF\Representation.items[2]\Value_with_unit.unit);
    WR3 : valid_range(SELF\Representation.items[1],
                      SELF\Representation.items[2]);          
  END_ENTITY;

  ENTITY Standard_uncertainty
    SUPERTYPE OF (Expanded_uncertainty)
    SUBTYPE OF (Uncertainty_qualifier);
      uncertainty_value : REAL;
  END_ENTITY;

  ENTITY Statistical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
  END_ENTITY;

  ENTITY Symmetrical_tolerance_characteristic
    SUBTYPE OF (Tolerance_characteristic);
      SELF\Representation.items : SET[2:2] OF Numerical_item_with_unit;
    WHERE
      WR1: SIZEOF(QUERY( ri <* 
         SELF\representation.items |
        'VALUE_WITH_UNIT_EXTENSION.RATIO_DATA_ELEMENT' IN TYPEOF(ri))) = 1;
  END_ENTITY;

  ENTITY Text_representation_item
  	SUBTYPE OF (String_representation_item);
  	DERIVE
  		SELF\Representation_item.name : STRING := 'text';
  END_ENTITY;

  ENTITY Tolerance_characteristic
    SUPERTYPE OF (ONEOF (Minimum_tolerance_characteristic,
 Statistical_tolerance_characteristic,
 Symmetrical_tolerance_characteristic,
 Maximum_tolerance_characteristic,
 Plus_minus_tolerance_characteristic,
 Nominal_tolerance_characteristic))
    SUBTYPE OF (Characteristic_representation);
      SELF\Representation.items : SET[1:?] OF Numerical_item_with_unit;
    WHERE
      WR1: SELF\Representation.context_of_items\Representation_context.id = 'tolerance values';
  END_ENTITY;

  ENTITY Type_qualifier;
      name : STRING; --label;
  END_ENTITY;

  ENTITY Uncertainty_qualifier
    SUPERTYPE OF (ONEOF (Standard_uncertainty,
 Qualitative_uncertainty));
      measure_name : STRING; --text;
      description  : STRING; --text;
  END_ENTITY;

FUNCTION get_value (
         input1 : string;
         np : SET OF Representation_item) : Numerical_item_with_unit;
REPEAT i := 1 to SIZEOF(np) by 1;
  IF input1 = np[i]\Representation_item.name THEN
       RETURN(np[i]);
  END_IF;
END_REPEAT;
  RETURN(?);
END_FUNCTION; -- get_value

  FUNCTION valid_range(input1 : Numerical_item_with_unit;
                       input2 : Numerical_item_with_unit) : BOOLEAN;
--This function returns true if input1 is less than input2 e.g,. on the real number line                       
--comment only for now.
   RETURN(TRUE);
  END_FUNCTION; 
  
FUNCTION valid_relationship (
         input1 : Numerical_item_with_unit;
         input2 : Numerical_item_with_unit) : BOOLEAN;
--This is a dummy function to support the rule that input1 shall
--be less than input2, including effects of prefixes.
  RETURN(TRUE);
END_FUNCTION; -- valid_relationship
  
END_SCHEMA;
