<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="$Date$" rcs.revision="$Revision$" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="chemical_substance_arm schema_instance"/>
   <schema name="Chemical_substance_arm">
      <interface kind="use" schema="Assembly_structure_arm"/>
      <interface kind="use" schema="Part_view_definition_arm"/>
      <interface kind="use" schema="Person_organization_assignment_arm"/>
      <interface kind="reference" schema="Product_identification_arm">
         <interfaced.item name="types_of_product"/>
      </interface>
      <constant name="chemical_elements" expression="[&#10;      'HYDROGEN',&#10;      'HELIUM',&#10;      'LITHIUM',&#10;      'BERYLLIUM',&#10;      'BORON',&#10;      'CARBON',&#10;      'NITROGEN',&#10;      'OXYGEN',&#10;      'FLUORINE',&#10;      'NEON',&#10;      'SODIUM',&#10;      'MAGNESIUM',&#10;      'ALUMINIUM',&#10;      'SILICON',&#10;      'PHOSPHORUS',&#10;      'SULPHUR',&#10;      'CHLORINE',&#10;      'ARGON',&#10;      'POTASSIUM',&#10;      'CALCIUM',&#10;      'SCANDIUM',&#10;      'TITANIUM',&#10;      'VANADIUM',&#10;      'CHROMIUM',&#10;      'MANGANESE',&#10;      'IRON',&#10;      'COBALT',&#10;      'NICKEL',&#10;      'COPPER',&#10;      'ZINC',&#10;      'GALLIUM',&#10;      'GERMANIUM',&#10;      'ARSENIC',&#10;      'SELENIUM',&#10;      'BROMINE',&#10;      'KRYPTON',&#10;      'RUBIDIUM',&#10;      'STRONTIUM',&#10;      'YTTRIUM',&#10;      'ZIRCONIUM',&#10;      'NIOBIUM',&#10;      'MOLYBDENUM',&#10;      'TECHNETIUM',&#10;      'RUTHENIUM',&#10;      'RHODIUM',&#10;      'PALLADIUM',&#10;      'SILVER',&#10;      'CADMIUM',&#10;      'INDIUM',&#10;      'TIN',&#10;      'ANTIMONY',&#10;      'TELLURIUM',&#10;      'IODINE',&#10;      'XENON',&#10;      'CAESIUM',&#10;      'BARIUM',&#10;      'LANTHANUM',&#10;      'CERIUM',&#10;      'PRASEODYMIUM',&#10;      'NEODYMIUM',&#10;      'PROMETHIUM',&#10;      'SAMARIUM',&#10;      'EUROPIUM',&#10;      'GADOLINIUM',&#10;      'TERBIUM',&#10;      'DYSPROSIUM',&#10;      'HOLMIUM',&#10;      'ERBIUM',&#10;      'THULIUM',&#10;      'YTTERBIUM',&#10;      'LUTETIUM',&#10;      'HAFNIUM',&#10;      'TANTALUM',&#10;      'TUNGSTEN',&#10;      'RHENIUM',&#10;      'OSMIUM',&#10;      'IRIDIUM',&#10;      'PLATINUM',&#10;      'GOLD',&#10;      'MERCURY',&#10;      'THALLIUM',&#10;      'LEAD',&#10;      'BISMUTH',&#10;      'POLONIUM',&#10;      'ASTATINE',&#10;      'RADON',&#10;      'FRANCIUM',&#10;      'RADIUM',&#10;      'ACTINIUM',&#10;      'THORIUM',&#10;      'PROTACTINIUM',&#10;      'URANIUM',&#10;      'NEPTUNIUM',&#10;      'PLUTONIUM',&#10;      'AMERICIUM',&#10;      'CURIUM',&#10;      'BERKELIUM',&#10;      'CALIFORNIUM',&#10;      'EINSTEINIUM',&#10;      'FERMIUM',&#10;      'MENDELEVIUM',&#10;      'NOBELIUM',&#10;      'LAWRENCIUM',&#10;      'RUTHERFORDIUM',&#10;      'DUBNIUM',&#10;      'SEABORGIUM',&#10;      'BOHRIUM',&#10;      'HASSIUM',&#10;      'MEITNERIUM',&#10;      'DARMSTADTIUM',&#10;      'ROENTGENIUM']">
         <aggregate type="LIST" lower="0" upper="?"/>
         <builtintype type="STRING"/>
      </constant>
      <type name="substance_composition_basis">
         <enumeration extensible="YES" items="VOLUME MASS MOLES ATOMS"/>
      </type>
      <entity name="Chemical_compound" supertypes="Substance">
         <derived name="id_owner" expression="QUERY(temp &lt;* bag_to_set(USEDIN(SELF,'PERSON_ORGANIZATION_ASSIGNMENT_ARM.'+&#10;         'ORGANIZATION_OR_PERSON_IN_ORGANIZATION_ASSIGNMENT.ITEMS')) |&#10;                         (temp.role = 'id owner') )">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="Organization_or_person_in_organization_assignment"/>
         </derived>
         <where label="WR1" expression="SIZEOF([ 'chemical compound' ] * types_of_product(SELF))= 1"/>
         <where label="WR2" expression="EXISTS (id_owner) AND (SIZEOF(id_owner) = 1)"/>
      </entity>
      <entity name="Chemical_element" supertypes="Substance">
         <where label="WR1" expression="SIZEOF([ 'chemical element' ] * types_of_product(SELF))= 1"/>
      </entity>
      <entity name="Physical_particle" supertypes="Substance">
         <where label="WR1" expression="SIZEOF([ 'physical particle' ] * types_of_product(SELF))= 1"/>
      </entity>
      <entity name="Raw_material_definition_relationship" supertypes="View_definition_usage">
         <explicit name="application">
            <typename name="Part_view_definition"/>
            <redeclaration entity-ref="View_definition_relationship" old_name="related_view"/>
         </explicit>
         <explicit name="definition">
            <typename name="Substance_view_definition"/>
            <redeclaration entity-ref="View_definition_relationship" old_name="relating_view"/>
         </explicit>
         <where label="WR1" expression="NOT EXISTS(SELF\View_definition_relationship.relation_type)"/>
      </entity>
      <entity name="Substance" supertypes="Product" super.expression="ONEOF (Chemical_element, Chemical_compound, Physical_particle)">
         <where label="WR1" expression="SIZEOF([ 'substance' ] * types_of_product(SELF))= 1"/>
      </entity>
      <entity name="Substance_composition_relationship" supertypes="View_definition_relationship">
         <explicit name="constituent">
            <typename name="Substance_view_definition"/>
            <redeclaration entity-ref="View_definition_relationship" old_name="related_view"/>
         </explicit>
         <explicit name="whole">
            <typename name="Substance_view_definition"/>
            <redeclaration entity-ref="View_definition_relationship" old_name="relating_view"/>
         </explicit>
         <explicit name="composition_basis">
            <typename name="substance_composition_basis"/>
         </explicit>
         <explicit name="determination_method">
            <builtintype type="STRING"/>
         </explicit>
         <explicit name="amount">
            <typename name="Value_with_unit"/>
         </explicit>
         <where label="WR1" expression="'VALUE_WITH_UNIT_ARM.RATIO_UNIT' IN TYPEOF(amount.unit)"/>
         <where label="WR2" expression="NOT EXISTS(SELF\View_definition_relationship.relation_type)"/>
      </entity>
      <entity name="Substance_version" supertypes="Product_version">
         <explicit name="of_product">
            <typename name="Substance"/>
            <redeclaration entity-ref="Product_version"/>
         </explicit>
      </entity>
      <entity name="Substance_view_definition" supertypes="Product_view_definition">
         <explicit name="defined_version">
            <typename name="Substance_version"/>
            <redeclaration entity-ref="Product_view_definition"/>
         </explicit>
      </entity>
      <rule name="chemical_element_constraint" appliesto="">
         <where label="WR1" expression="SIZEOF ( QUERY ( p &lt;* Product | &#10;               (('CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF (p) ) AND ((p\Product.name) IN chemical_elements) ) &#10;                OR&#10;               (NOT('CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF (p) ) AND NOT((p\Product.name) IN chemical_elements) )&#10;       )) =&#10;       SIZEOF ( Product)"/>
      </rule>
      <rule name="substance_version_constraint" appliesto="">
         <where label="WR1" expression="SIZEOF ( QUERY ( pv &lt;* Product_version | ( NOT ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pv) ) ) AND ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE' IN TYPEOF ( pv.of_product) ) ) ) =0"/>
      </rule>
      <rule name="substance_view_definition_constraint" appliesto="">
         <where label="WR1" expression="SIZEOF ( QUERY ( pvd &lt;* Product_view_definition | ( NOT ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VIEW_DEFINITION' IN TYPEOF (pvd) ) ) AND ( 'CHEMICAL_SUBSTANCE_ARM.' + 'SUBSTANCE_VERSION' IN TYPEOF ( pvd.defined_version) ) ) ) =0"/>
      </rule>
      <function name="bag_to_set">
         <parameter name="the_bag">
            <aggregate type="BAG" lower="0" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <builtintype type="GENERIC"/>
         <algorithm>LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);</algorithm>
      </function>
   </schema>
</express>
