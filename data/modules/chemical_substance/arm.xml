<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:27:08" rcs.revision="1.0" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="chemical_substance_arm schema_instance"/>
   <schema name="CHEMICAL_SUBSTANCE_ARM">
      <interface kind="use" schema="ASSEMBLY_STRUCTURE_ARM"/>
      <interface kind="use" schema="PART_VIEW_DEFINITION_ARM"/>
      <interface kind="use" schema="PERSON_ORGANIZATION_ASSIGNMENT_ARM"/>
      <interface kind="use" schema="VALUE_WITH_UNIT_ARM"/>
      <interface kind="reference" schema="PRODUCT_IDENTIFICATION_ARM">
         <interfaced.item name="types_of_product"/>
      </interface>
      <constant name="chemical_elements" expression=" [ 'hydrogen' , 'helium' , 'lithium' , 'beryllium' , 'boron' , 'carbon' , 'nitrogen' , 'oxygen' , 'fluorine' , 'neon' , 'sodium' , 'magnesium' , 'aluminium' , 'silicon' , 'phosphorus' , 'sulphur' , 'chlorine' , 'argon' , 'potassium' , 'calcium' , 'scandium' , 'titanium' , 'vanadium' , 'chromium' , 'manganese' , 'iron' , 'cobalt' , 'nickel' , 'copper' , 'zinc' , 'gallium' , 'germanium' , 'arsenic' , 'selenium' , 'bromine' , 'krypton' , 'rubidium' , 'strontium' , 'yttrium' , 'zirconium' , 'niobium' , 'molybdenum' , 'technetium' , 'ruthenium' , 'rhodium' , 'palladium' , 'silver' , 'cadmium' , 'indium' , 'tin' , 'antimony' , 'tellurium' , 'iodine' , 'xenon' , 'caesium' , 'barium' , 'lanthanum' , 'cerium' , 'praseodymium' , 'neodymium' , 'promethium' , 'samarium' , 'europium' , 'gadolinium' , 'terbium' , 'dysprosium' , 'holmium' , 'erbium' , 'thulium' , 'ytterbium' , 'lutetium' , 'hafnium' , 'tantalum' , 'tungsten' , 'rhenium' , 'osmium' , 'iridium' , 'platinum' , 'gold' , 'mercury' , 'thallium' , 'lead' , 'bismuth' , 'polonium' , 'astatine' , 'radon' , 'francium' , 'radium' , 'actinium' , 'thorium' , 'protactinium' , 'uranium' , 'neptunium' , 'plutonium' , 'americium' , 'curium' , 'berkelium' , 'californium' , 'einsteinium' , 'fermium' , 'mendelevium' , 'nobelium' , 'lawrencium' , 'rutherfordium' , 'dubnium' , 'seaborgium' , 'bohrium' , 'hassium' , 'meitnerium' , 'darmstadtium' , 'roentgenium' ] ">
         <aggregate type="LIST" lower="0" upper="?"/>
         <builtintype type="STRING"/>
      </constant>
      <type name="substance_composition_basis">
         <enumeration extensible="YES" items="volume mass moles atoms"/>
      </type>
      <entity name="chemical_compound" supertypes="substance">
         <derived name="id_owner" expression=" query ( temp &lt;* usedin ( self , 'person_organization_assignment_arm.' + 'organization_or_person_in_organization_assignment.items' ) | ( temp . role = 'id owner' ) ) ">
            <aggregate type="SET" lower="0" upper="?"/>
            <typename name="organization_or_person_in_organization_assignment"/>
         </derived>
         <where label="wr1" expression=" sizeof ( [ 'chemical compound' ] * types_of_product ( self ) ) = 1 "/>
         <where label="wr2" expression=" exists ( id_owner ) and sizeof ( id_owner ) = 1 "/>
      </entity>
      <entity name="chemical_element" supertypes="substance">
         <where label="wr1" expression=" sizeof ( [ 'chemical element' ] * types_of_product ( self ) ) = 1 "/>
         <where label="wr2" expression=" self / product . name in chemical_elements "/>
      </entity>
      <entity name="physical_particle" supertypes="substance">
         <where label="wr1" expression=" sizeof ( [ 'physical particle' ] * types_of_product ( self ) ) = 1 "/>
      </entity>
      <entity name="raw_material_definition_relationship" supertypes="view_definition_usage">
         <explicit name="application">
            <typename name="part_view_definition"/>
            <redeclaration entity-ref="view_definition_relationship" old_name="related_view"/>
         </explicit>
         <explicit name="definition">
            <typename name="substance_view_definition"/>
            <redeclaration entity-ref="view_definition_relationship" old_name="relating_view"/>
         </explicit>
      </entity>
      <entity name="substance" supertypes="product" super.expression="ONEOF (chemical_element, chemical_compound, physical_particle)">
         <where label="wr1" expression=" sizeof ( [ 'substance' ] * types_of_product ( self ) ) = 1 "/>
      </entity>
      <entity name="substance_composition_relationship" supertypes="view_definition_relationship">
         <explicit name="constituent">
            <typename name="substance_view_definition"/>
            <redeclaration entity-ref="view_definition_relationship" old_name="related_view"/>
         </explicit>
         <explicit name="whole">
            <typename name="substance_view_definition"/>
            <redeclaration entity-ref="view_definition_relationship" old_name="relating_view"/>
         </explicit>
         <explicit name="composition_basis">
            <typename name="substance_composition_basis"/>
         </explicit>
         <explicit name="determination_method">
            <builtintype type="STRING"/>
         </explicit>
         <explicit name="amount">
            <typename name="value_with_unit"/>
         </explicit>
         <where label="wr1" expression=" 'value_with_unit_arm.ratio_unit' in typeof ( amount . unit ) "/>
      </entity>
      <entity name="substance_version" supertypes="product_version">
         <explicit name="of_product">
            <typename name="substance"/>
            <redeclaration entity-ref="product_version"/>
         </explicit>
      </entity>
      <entity name="substance_view_definition" supertypes="product_view_definition">
         <explicit name="defined_version">
            <typename name="substance_version"/>
            <redeclaration entity-ref="product_view_definition"/>
         </explicit>
      </entity>
      <rule name="substance_version_constraint" appliesto="product_version">
         <where label="wr1" expression=" sizeof ( query ( pv &lt;* product_version | ( not ( 'chemical_substance_arm.' + 'substance_version' in typeof ( pv ) ) ) and ( 'chemical_substance_arm.' + 'substance' in typeof ( pv . of_product ) ) ) ) = 0 "/>
      </rule>
      <rule name="substance_view_definition_constraint" appliesto="product_view_definition">
         <where label="wr1" expression=" sizeof ( query ( pvd &lt;* product_view_definition | ( not ( 'chemical_substance_arm.' + 'substance_view_definition' in typeof ( pvd ) ) ) and ( 'chemical_substance_arm.' + 'substance_version' in typeof ( pvd . defined_version ) ) ) ) = 0 "/>
      </rule>
   </schema>
</express>
