<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.13 2005/02/02 09:42:26 budreckytej Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="component_feature" part="1657" version="1" sc4.working_group="12" wg.number="3323" wg.number.arm="3324" wg.number.mim="3325" checklist.internal_review="3675" checklist.project_leader="3676" checklist.convener="3677" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2005/02/02 09:42:26 $" rcs.revision="$Revision: 1.13 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">
	<keywords> module, component feature, part feature, component terminal, swap </keywords>
	<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
	<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
	<contacts>
		<projlead ref="AP210.projlead"/>
		<editor ref="pdmmodules.editor"/>
	</contacts>
	<!-- Introduction -->
	<!-- The introduction should start as shown: -->
	<purpose>
		<p> This part of ISO 10303 specifies an application module for the 
			representation of component features and component terminals in a 
			physical design view, the relationship between them and their 
			assignment to part features in the physical usage view. </p>
	</purpose>
	<!-- Items in scope -->
	<inscope>
		<li>the definition of features of components in the assembly of a design view;</li>
		<li>the relationship between component features of various kinds such 
			as make from;</li>
		<li>the assignment of component features to part features in a usage 
			view;</li>
		<li>the definition of component terminals and information if they can 
			be exchanged with other terminals termincals, called swapping;</li>
		<li>items within the scope of Physical_unit_design_view_arm;</li>
		<li>items within the scope of Shape_property_assignment_arm.</li>
	</inscope>
	<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->
	<!-- Clause 4 ARM  -->
	<arm>
		<!-- Note ARM short form EXPRESS is in arm.xml -->
		<!-- Short form EXPRESS-G -->
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
		</express-g>
	</arm>
	<!-- Clause 5.1 Mapping specification -->
	<mapping_table>
		<ae entity="Component_feature_to_physical_usage_view_assignment" extensible="NO">
			<aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
			<source xml:space="preserve">ISO 10303-41</source>
			<refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'component feature to physical usage assignment'}
</refpath>
			<aa attribute="assigned_design_object" assertion_to="Component_feature">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_feature
</refpath>
			</aa>
			<aa attribute="defined_part_feature" assertion_to="Part_feature">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
secondary_orientation_feature)
(shape_aspect =&gt; 
package_body)
(shape_aspect =&gt; 
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt; 
thermal_feature)
(shape_aspect =&gt; 
part_mounting_feature)
(shape_aspect =&gt; 
package_terminal)
(shape_aspect =&gt; 
assembly_module_terminal)
(shape_aspect =&gt; 
interconnect_module_terminal)
(shape_aspect =&gt; 
minimally_defined_bare_die_terminal)
(shape_aspect =&gt; 
packaged_part_terminal)
(shape_aspect =&gt; 
package_body_surface)
(shape_aspect =&gt;
component_feature =&gt;				
physical_component_feature =&gt;
interconnect_module_component_surface_feature )}
</refpath>
			</aa>
		</ae>
		<ae entity="Component_feature" extensible="NO">
			<aimelt xml:space="preserve">component_feature</aimelt>
			<source xml:space="preserve">ISO 10303-210</source>
			<refpath xml:space="preserve">component_feature &lt;=
shape_aspect
</refpath>
            <aa attribute="associated_component" assertion_to="Assembly_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(component_feature &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition)
(component_feature 
{(&lt;= component_terminal)
(&lt;= laminate_component_feature)}
&lt;= shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition
{[product_definition
product_definition.description = 'laminate component']
[product_definition =&gt;
component_definition]}
characterized_product_definition = product_definition
characterized_product_definition
characterized_definition = characterized_product_definition
characterized_definition &lt;-
property_definition.definition
property_definition =&gt;
product_definition_shape &lt;-
shape_aspect.of_shape
shape_aspect =&gt;
component_shape_aspect)
</refpath>
            </aa>
            <aa attribute="definition" assertion_to="part_feature_or_template_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_feature &lt;=
shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = 'instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
</refpath>            
			</aa>
		</ae>
		<ae entity="Component_feature_relationship" extensible="NO">
			<aimelt xml:space="preserve">component_feature_relationship</aimelt>
			<source xml:space="preserve">ISO 10303-210</source>
			<refpath xml:space="preserve">{[component_feature_relationship &lt;=
shape_aspect]
[component_feature_relationship &lt;=
shape_aspect_relationship]}
</refpath>
			<aa attribute="related" assertion_to="Component_feature">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">component_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
component_feature
</refpath>
			</aa>
			<aa attribute="relating" assertion_to="Component_feature">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">component_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_feature
</refpath>
			</aa>
		</ae>
		<ae entity="Component_terminal" extensible="NO">
			<aimelt xml:space="preserve">component_terminal</aimelt>
			<source xml:space="preserve">ISO 10303-210 210 210</source>
			<refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=
shape_aspect
!{shape_aspect.description = 'package terminal occurrence'}
</refpath>
			<aa attribute="global_swappable">
				<aimelt xml:space="preserve">descriptive_representation_item</aimelt>
				<source xml:space="preserve">ISO 10303-45</source>
				<refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect
shape_definition = shape_aspect
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = 'global swappable'}
representation_item =&gt;
{descriptive_representation_item
(descriptive_representation_item.description = 'false')
(descriptive_representation_item.description = 'true')}
descriptive_representation_item
</refpath>
			</aa>
			<aa attribute="local_swappable">
				<aimelt xml:space="preserve">descriptive_representation_item</aimelt>
				<source xml:space="preserve">ISO 10303-45</source>
				<refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect
shape_definition = shape_aspect
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = 'local swappable'}
representation_item =&gt;
{descriptive_representation_item
(descriptive_representation_item.description = 'false')
(descriptive_representation_item.description = 'true')}
descriptive_representation_item
</refpath>
			</aa>
			<aa attribute="swap_code">
				<aimelt xml:space="preserve">descriptive_representation_item.description</aimelt>
				<source xml:space="preserve">ISO 10303-45</source>
				<refpath xml:space="preserve">component_terminal &lt;=
component_feature &lt;=					
shape_aspect
shape_definition = shape_aspect
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = 'swap code'}
representation_item =&gt;
descriptive_representation_item
descriptive_representation_item.description
</refpath>
			</aa>
		</ae>
		<ae entity="Component_feature_make_from_relationship" extensible="NO">
			<aimelt xml:space="preserve">make_from_feature_relationship</aimelt>
			<source xml:space="preserve">ISO 10303-210</source>
			<refpath xml:space="preserve">make_from_feature_relationship &lt;=
shape_aspect_relationship
</refpath>
			<aa attribute="resultant_feature" assertion_to="Component_feature">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">make_from_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
component_feature
</refpath>
			</aa>
			<aa attribute="reusable_feature" assertion_to="Component_feature">
				<aimelt xml:space="preserve">PATH</aimelt>
				<refpath xml:space="preserve">make_from_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
component_feature
</refpath>
			</aa>
		</ae>
	</mapping_table>
	<!-- Clause 5.2 MIM -->
	<mim>
		<!--  Note MIM short form express is in mim.xml -->
		<express-g>
			<imgfile file="mimexpg1.xml"/>
		</express-g>
	</mim>
</module>
