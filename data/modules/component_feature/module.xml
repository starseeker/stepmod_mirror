<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.5 2004/11/30 16:45:25 budreckytej Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="component_feature" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2004/11/30 16:45:25 $" rcs.revision="$Revision: 1.5 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of 
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>xxxxx</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>xxxx</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Component_feature_to_physical_usage_view_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = `component feature to physical usage assignment'}
</refpath>
            <aa attribute="assigned_design_object" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect =&gt;
(component_terminal)
(component_interface_terminal)
(laminate_component_interface_terminal)
(interconnect_module_component_surface_feature)
(component_feature)
</refpath>
            </aa>
            <aa attribute="defined_part_feature" assertion_to="Part_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = `part group feature'])
(shape_aspect.description = `part generic feature')
(shape_aspect.description = `polarity indication feature')
(shape_aspect.description = `interconnect module cavity surface')
(shape_aspect.description = `interconnect module cutout surface')
(shape_aspect.description = `interconnect module edge segment surface')
(shape_aspect.description = `interconnect module edge surface')
(shape_aspect.description = `interconnect module primary surface')
(shape_aspect.description = `interconnect module secondary surface')
(shape_aspect.description = `interconnect module surface feature')
(shape_aspect =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
secondary_orientation_feature)
(shape_aspect =&gt; 
package_body)
(shape_aspect =&gt; 
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt; 
thermal_feature)
(shape_aspect =&gt; 
part_mounting_feature)
(shape_aspect =&gt; 
package_terminal)
(shape_aspect =&gt; 
assembly_module_terminal)
(shape_aspect =&gt; 
interconnect_module_terminal)
(shape_aspect =&gt; 
minimally_defined_bare_die_terminal)
(shape_aspect =&gt; 
packaged_part_terminal)
(shape_aspect =&gt; 
package_body_surface)
(shape_aspect =&gt;
interconnect_module_component_surface_feature)}
</refpath>
            </aa>
        </ae>
    <ae entity="Component_feature" extensible="NO">
            <aimelt xml:space="preserve">(component_terminal) (component_interface_terminal) (component_feature) (laminate_component_interface_terminal) (interconnect_module_component_surface_feature)</aimelt>
            <source xml:space="preserve">ISO 10303-210 210 210 210 210</source>
            <refpath xml:space="preserve">(component_terminal &lt;=
shape_aspect
{shape_aspect
[shape_aspect.product_definitional = .TRUE.]
[(shape_aspect.description = `assembly module component terminal')
(shape_aspect.description = `bare die component terminal')
(shape_aspect.description = `component termination passage join terminal')
(shape_aspect.description = `conductive interconnect element terminal')
(shape_aspect.description = `interconnect component join terminal')
(shape_aspect.description = `interconnect module component terminal')
(shape_aspect.description = `interconnect module component stratum based terminal')
(shape_aspect.description = `land join terminal')
(shape_aspect.description = `minimally defined component terminal')
(shape_aspect.description = `non functional land join terminal')
(shape_aspect.description = `packaged component join terminal')
(shape_aspect.description = `printed component join terminal')
(shape_aspect.description = `via terminal')]})
(component_interface_terminal &lt;=
shape_aspect)
(component_feature &lt;=
shape_aspect)
(laminate_component_interface_terminal &lt;=
shape_aspect)
(interconnect_module_component_surface_feature &lt;=
shape_aspect)
</refpath>
            <aa attribute="associated_component" assertion_to="Assembly_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">(component_terminal &lt;=)
(component_interface_terminal &lt;=)
(component_feature &lt;=)
(interconnect_module_component_surface_feature &lt;=)
(laminate_component_interface_terminal &lt;=)
shape_aspect
(shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
component_definition)
(shape_aspect &lt;-
shape_aspect_relationship.related_shape_aspect
{shape_aspect_relationship
shape_aspect_relationship.name = `instantiated feature'}
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect)
</refpath>
            </aa>
        </ae>
    <ae entity="Component_feature_relationship" extensible="NO">
            <aimelt xml:space="preserve">component_feature_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">{[component_feature_relationship &lt;=
shape_aspect]
[component_feature_relationship &lt;=
shape_aspect_relationship]}
</refpath>
            <aa attribute="related" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
(shape_aspect =&gt;
(component_terminal)
(component_interface_terminal)
(laminate_component_interface_terminal)
(component_feature))
</refpath>
            </aa>
            <aa attribute="relating" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">component_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect =&gt;
(component_terminal)
(component_interface_terminal)
(laminate_component_interface_terminal)
(component_feature))
</refpath>
            </aa>
        </ae>
    <ae entity="Component_terminal" extensible="NO">
            <aimelt xml:space="preserve">(component_terminal) (component_interface_terminal) (laminate_component_interface_terminal)</aimelt>
            <source xml:space="preserve">ISO 10303-210 210 210</source>
            <refpath xml:space="preserve">(component_terminal &lt;=
shape_aspect
{shape_aspect
[shape_aspect.product_definitional = .TRUE.]
[(shape_aspect.description = `assembly module component terminal')
(shape_aspect.description = `bare die component terminal')
(shape_aspect.description = `component termination passage join terminal')
(shape_aspect.description = `interconnect component join terminal')
(shape_aspect.description = `interconnect module component stratum based terminal')
(shape_aspect.description = `interconnect module component terminal')
(shape_aspect.description = `land join terminal')
(shape_aspect.description = `non functional land join terminal')
(shape_aspect.description = `packaged component join terminal')
(shape_aspect.description = `printed component join terminal')]})
(component_interface_terminal &lt;=
shape_aspect)
(laminate_component_interface_terminal &lt;=
shape_aspect)
</refpath>
            <aa attribute="global_swappable">
                <aimelt xml:space="preserve">descriptive_representation_item</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">component_terminal &lt;=
shape_aspect
shape_definition = shape_aspect
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = `global swappable'}
representation_item =&gt;
{descriptive_representation_item
(descriptive_representation_item.description = `false')
(descriptive_representation_item.description = `true')}
descriptive_representation_item
</refpath>
            </aa>
            <aa attribute="local_swappable">
                <aimelt xml:space="preserve">descriptive_representation_item</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">component_terminal &lt;=
shape_aspect
shape_definition = shape_aspect
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = `local swappable'}
representation_item =&gt;
{descriptive_representation_item
(descriptive_representation_item.description = `false')
(descriptive_representation_item.description = `true')}
descriptive_representation_item
</refpath>
            </aa>
            <aa attribute="swap_code">
                <aimelt xml:space="preserve">descriptive_representation_item.description</aimelt>
                <source xml:space="preserve">ISO 10303-45</source>
                <refpath xml:space="preserve">component_terminal &lt;=
shape_aspect
shape_definition = shape_aspect
characterized_definition = shape_definition
characterized_definition &lt;-
property_definition.definition
property_definition &lt;-
property_definition_representation.definition
property_definition_representation
property_definition_representation.used_representation -&gt;
representation
representation.items[i] -&gt;
{representation_item
representation_item.name = `swap code'}
representation_item =&gt;
descriptive_representation_item
descriptive_representation_item.description
</refpath>
            </aa>
        </ae>
    <ae entity="Component_feature_make_from_relationship" extensible="NO">
            <aimelt xml:space="preserve">make_from_feature_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">make_from_feature_relationship &lt;=
shape_aspect_relationship
</refpath>
            <aa attribute="resultant_feature" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">make_from_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
(shape_aspect =&gt;
(component_terminal)
(component_interface_terminal)
(laminate_component_interface_terminal)
(component_feature))
</refpath>
            </aa>
            <aa attribute="reusable_feature" assertion_to="Component_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">make_from_feature_relationship &lt;=
shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
(shape_aspect =&gt;
(component_terminal)
(component_interface_terminal)
(laminate_component_interface_terminal)
(component_feature))
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
