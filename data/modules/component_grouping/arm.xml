<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express description.file="arm_descriptions.xml" language_version="2" rcs.date="$Date$" rcs.revision="$Revision$">
   <application name="JSDAI" owner="LKSoft" source="component_grouping_arm schema_instance" url="www.lksoft.com" version="4.0 beta"/>
   <schema name="Component_grouping_arm">
      <interface kind="use" schema="Interface_component_arm"/>
      <interface kind="reference" schema="Characterizable_object_arm">
         <interfaced.item name="bag_to_set"/>
      </interface>
      <entity abstract.supertype="YES" name="Array_placement_group" super.expression="ONEOF (Linear_array_placement_group_component, Rectangular_array_placement_group_component)" supertypes="Assembly_group_component"/>
      <entity name="Assembly_component_placement_link">
         <explicit name="precedent_element">
            <typename name="Assembly_component"/>
         </explicit>
         <explicit name="subsequent_element">
            <typename name="Assembly_component"/>
         </explicit>
         <inverse attribute="element" entity="Linear_array_placement_group_component" name="referenced_by"/>
         <where expression="acyclic_assembly_component_placement_link(SELF,&#10;         [subsequent_element],&#10;         'COMPONENT_GROUPING_ARM.ASSEMBLY_COMPONENT_PLACEMENT_LINK')" label="WR1"/>
      </entity>
      <entity name="Assembly_group_component" supertypes="Assembly_component Single_instance">
         <inverse attribute="relating_view" entity="Next_assembly_usage" name="components">
            <inverse.aggregate lower="1" type="SET" upper="?"/>
         </inverse>
         <where expression="SIZEOF(QUERY(co &lt;* components | NOT(('PHYSICAL_UNIT_DESIGN_VIEW_ARM.ASSEMBLY_COMPONENT') IN TYPEOF(co\Product_occurrence_definition_relationship.related_view)))) = 0" label="WR1"/>
      </entity>
      <entity name="Interfaced_group_component" supertypes="Assembly_group_component">
         <explicit name="group_interface_component">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Interface_component"/>
         </explicit>
      </entity>
      <entity name="Linear_array_placement_group_component" supertypes="Array_placement_group">
         <explicit name="element">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Assembly_component_placement_link"/>
         </explicit>
         <explicit name="initial_node_positive_x_displacement">
            <typename name="Length_data_element"/>
         </explicit>
         <explicit name="terminus_node_positive_x_displacement">
            <typename name="Length_data_element"/>
         </explicit>
         <explicit name="location_uncertainty">
            <typename name="Length_data_element"/>
         </explicit>
         <where expression="(1 + SIZEOF(element)) = cg_get_sz_ac(element)" label="WR1"/>
      </entity>
      <entity name="Linear_array_placement_group_component_link">
         <explicit name="precedent_element">
            <typename name="Linear_array_placement_group_component"/>
         </explicit>
         <explicit name="subsequent_element">
            <typename name="Linear_array_placement_group_component"/>
         </explicit>
         <inverse attribute="element" entity="Rectangular_array_placement_group_component" name="referenced_by"/>
         <where expression="acyclic_linear_array_placement_group_component_link(SELF,&#10;         [subsequent_element],&#10;         'COMPONENT_GROUPING_ARM.LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK')" label="WR1"/>
      </entity>
      <entity name="Rectangular_array_placement_group_component" supertypes="Array_placement_group">
         <explicit name="element">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Linear_array_placement_group_component_link"/>
         </explicit>
         <explicit name="initial_row_positive_y_displacement">
            <typename name="Length_data_element"/>
         </explicit>
         <explicit name="terminus_row_positive_y_displacement">
            <typename name="Length_data_element"/>
         </explicit>
         <explicit name="location_uncertainty">
            <typename name="Length_data_element"/>
         </explicit>
         <where expression="(1 + SIZEOF(element)) = cg_get_sz_lapgc(element)" label="WR1"/>
      </entity>
      <function name="acyclic_assembly_component_placement_link">
         <parameter name="relation">
            <typename name="Assembly_component_placement_link"/>
         </parameter>
         <parameter name="relatives">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Assembly_component"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
    x : SET OF Assembly_component_placement_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
      x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.precedent_element,
        'COMPONENT_GROUPING_ARM.' + 'ASSEMBLY_COMPONENT_PLACEMENT_LINK.' +
        'SUBSEQUENT_ELEMENT')) | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_assembly_component_placement_link(x[i], relatives +
        relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);</algorithm>
      </function>
      <function name="acyclic_linear_array_placement_group_component_link">
         <parameter name="relation">
            <typename name="Linear_array_placement_group_component_link"/>
         </parameter>
         <parameter name="relatives">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Linear_array_placement_group_component"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
      x : SET OF Linear_array_placement_group_component_link;
END_LOCAL;

    IF relation.precedent_element IN relatives THEN
      RETURN (FALSE);
    END_IF;
     x := QUERY(pd &lt;* bag_to_set(USEDIN(relation.precedent_element,
       'COMPONENT_GROUPING_ARM.' +
       'LINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT_LINK.' + 'SUBSEQUENT_ELEMENT'))
       | specific_relation IN TYPEOF(pd));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_linear_array_placement_group_component_link(x[i], relatives
        + relation.precedent_element, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  RETURN (TRUE);</algorithm>
      </function>
      <function name="cg_get_sz_ac">
         <parameter name="input">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Assembly_component_placement_link"/>
         </parameter>
         <builtintype type="INTEGER"/>
         <algorithm>LOCAL
    ac : SET OF Assembly_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac + input[i]\Assembly_component_placement_link.precedent_element +
      input[i]\Assembly_component_placement_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));</algorithm>
      </function>
      <function name="cg_get_sz_lapgc">
         <parameter name="input">
            <aggregate lower="1" type="SET" upper="?"/>
            <typename name="Linear_array_placement_group_component_link"/>
         </parameter>
         <builtintype type="INTEGER"/>
         <algorithm>LOCAL
  ac : SET OF Linear_array_placement_group_component := [];
END_LOCAL;
    REPEAT i := 1 TO HIINDEX(input);
      ac := ac +
        input[i]\Linear_array_placement_group_component_link.precedent_element +
        input[i]\Linear_array_placement_group_component_link.subsequent_element;
    END_REPEAT;
  RETURN (SIZEOF(ac));</algorithm>
      </function>
   </schema>
</express>
