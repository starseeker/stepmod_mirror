<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.32 2003/02/14 20:32:39 shiangyulee Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<module
   name="condition"
   part="1253"
   version="1"
   wg.number="1426"
   wg.number.arm="1427"
   wg.number.mim="1428" 
   checklist.internal_review="1711"
   checklist.project_leader="1712"
   checklist.convener="1713"
   status="CD-TS"
   language="E"
   publication.year="2003"
   published="n"
   rcs.date="$Date: 2003/02/14 20:32:39 $"
   rcs.revision="$Revision: 1.32 $"
   development.folder="dvlp">

 <keywords>
    module, condition
 </keywords>

<contacts>
   <projlead ref="plcs.projlead"/>
   <editor ref="shiangyulee"/>
 </contacts>

 <purpose>
<p>
     This part of ISO 10303 specifies an application module for the
     representation of conditions in the form of structured data that encapsulate parametric values used as criteria for decision making.
   </p>

 </purpose>

 <inscope>
   
    <li>
     condition that can be identified, dated, and approved;
   </li>
  <li>
     condition specified by a textual description;
   </li>
 <li>
     condition relationships that can be identified, dated, and approved.
   </li>

   

 </inscope>
 <outscope>
	<li>
    the specification of conditions by actual parametric values;
   </li>

   <li>
    the detection of conditions;
   </li>

   <li>
    the verification of conditions.
   </li>
    </outscope>


 <normrefs>
<normref.inc normref="ref10303-41.2000"/>
 </normrefs>
<!--
 <definition/>

 <abbreviations/>
-->

 <arm>

<uof name="Condition">
     <description>
       The Condition UoF specifies the data structure for the representation of condition data.
     </description>
     <uof.ae entity="Condition"/>
     <uof.ae entity="Condition_relationship"/>
  </uof>   

   <express-g>
     <imgfile file="armexpg1.xml"/>
<imgfile file="armexpg2.xml"/>

    </express-g>
 </arm>

 <mapping_table>

<ae entity="Condition">
      <aimelt>condition</aimelt>
      <source>ISO10303-1253</source>
      
      <aa attribute="title">
         <aimelt>characterized_object.name</aimelt>
         <source>ISO 10303-41</source>

         <refpath>condition &lt;= characterized_object 
characterized_object.name			</refpath>               
                        </aa>
<aa attribute="descriptive_definition">
         <aimelt>characterized_object.description</aimelt>
           <source>ISO 10303-41</source>
   
 <refpath>condition &lt;= characterized_object 
characterized_object.description</refpath>               
</aa>
   </ae>


 <ae entity="Condition_relationship">
      <aimelt>condition_relationship</aimelt>
      <source>ISO10303-1253</source>
      
      <aa attribute="label">
         <aimelt>characterized_object_relationship.name</aimelt>
        <source>ISO 10303-41</source>
         <refpath>condition &lt;= characterized_object 
characterized_object.name </refpath>
                        </aa>


	
      <aa attribute="description">
         <aimelt>characterized_object.description</aimelt>
         <source>ISO 10303-41</source>

         <refpath>condition_relationship &lt;= characterized_object_relationship 
characterized_object_relationship.description</refpath>               
</aa>

	<aa attribute="relating" assertion_to="Condition">
         <aimelt>PATH</aimelt>
                  <refpath>condition_relationship &lt;= characterized_object_relationship  
characterized_object_relationship.relating_object -&gt; characterized_object							
characterized_object =&gt; condition
				 </refpath>
      </aa>

	<aa attribute="related" assertion_to="Condition">
         <aimelt>PATH</aimelt>
                  <refpath>condition_relationship &lt;= characterized_object_relationship  
characterized_object_relationship.related_object -&gt; characterized_object								
characterized_object =&gt; condition
				 </refpath>

				      </aa>

   </ae>
<ae entity="Organization_or_person_in_organization_assignment"
     original_module="person_organization_assignment">
     <aa attribute="items" assertion_to="Condition">
       <!-- referencing the alternative mapping (id="1") description provided in
            the person_organization_assignment module -->
       <alt_map alt_map.inc="1">
         <!-- extending the mapping from person_organization_assignment module -->
         <refpath_extend extended_select="Organization_or_person_in_organization_select">
           organization_item *&gt; associated_person_or_organization
           associated_person_or_organization -> condition
         </refpath_extend>
       </alt_map>
 	<alt_map alt_map.inc="2">
         <!-- extending the mapping from person_organization_assignment module -->
         <refpath_extend extended_select="Organization_or_person_in_organization_select">
           organization_item *&gt; associated_person_or_organization
          associated_person_or_organization -> condition
         </refpath_extend>
       </alt_map>
 	</aa>


   </ae>
<ae entity="Organization_or_person_in_organization_assignment"
     original_module="person_organization_assignment">


	<aa attribute="items" assertion_to="Condition_relationship">
       <!-- referencing the alternative mapping (id="1") description provided in
            the person_organization_assignment module -->
       <alt_map alt_map.inc="1">
         <!-- extending the mapping from person_organization_assignment module -->
         <refpath_extend extended_select="Organization_or_person_in_organization_select">
           organization_item *&gt; associated_person_or_organization
           associated_person_or_organization -> condition_relationship
         </refpath_extend>
       </alt_map>

       <!-- referencing the alternative mapping (id="2") description provided in
            the person_organization_assignment module -->
       <alt_map alt_map.inc="2">
         <!-- extending the mapping from person_organization_assignment module -->
         <refpath_extend extended_select="Organization_or_person_in_organization_select">
           organization_item *&gt; associated_person_or_organization
           associated_person_or_organization -> condition_relationship
         </refpath_extend>
       </alt_map>


 	</aa>

</ae>
<!--
</ae>
 <aa attribute="items" assertion_to="Contract">
       <alt_map alt_map.inc="1">
         <refpath_extend extended_select="date_or_date_time_item">
           date_item *> mri_date_item
           mri_date_item = contract
         </refpath_extend>
       </alt_map>
       <alt_map alt_map.inc="2">
         <refpath_extend extended_select="date_or_date_time_item">
         date_and_time_item *> mri_date_and_time_item
           mri_date_and_time_item = contract 
         </refpath_extend>
       </alt_map>
     </aa>
-->
<ae entity="Date_or_date_time_assignment" original_module="date_time_assignment" > 
<aa attribute="items" assertion_to="Condition"> 

       <alt_map alt_map.inc="1">
         <refpath_extend extended_select="date_or_date_time_item">
           date_item *&gt; associated_date_time
           associated_date_time = condition
         </refpath_extend>
       </alt_map>
       <alt_map alt_map.inc="2">
         <refpath_extend extended_select="date_or_date_time_item">
         date_and_time_item *&gt; associated_date_time
            associated_date_time = condition
         </refpath_extend>
       </alt_map>
     </aa>
<aa attribute="items" assertion_to="Condition_relationship"> 
       <alt_map alt_map.inc="1">
         <refpath_extend extended_select="date_or_date_time_item">
           date_item *&gt; associated_date_time
            associated_date_time = condition_relationship
         </refpath_extend>
       </alt_map>
       <alt_map alt_map.inc="2">
         <refpath_extend extended_select="date_or_date_time_item">
         date_and_time_item *&gt; associated_date_time
           associated_date_time = condition_relationship
         </refpath_extend>
       </alt_map>
     </aa>




   </ae>


 <!-- mappings due to the extension of the identification_item select-->
   <ae entity="Identification_assignment" original_module="identification_assignment" >
     <aa attribute="items" assertion_to="Condition">
       <refpath_extend extended_select="identification_item">
         identification_item *&gt; identification
         identification = condition
       </refpath_extend>
     </aa>
     
   </ae>


</mapping_table>

 <mim>
   <express-g>
     	<imgfile file="mimexpg1.xml"/>
	<imgfile file="mimexpg2.xml"/>

    </express-g>
		<shortnames>
			<shortname name="CNDTN" entity="condition"/>
			<shortname name="CNDRLT" entity="condition_relationship"/>
		</shortnames>

 </mim>



 <usage_guide>

   <p>
       Consider the example statement:
     </p>

     <screen>
	Brake Inspection, (Task 9), is required, for F 55 airplanes, if the number of 
	landings is greater than 1000 and the configuration identification is ECP-1.6.  
     </screen>

     <p>
       The simple way to state this condition by textual description is simply:
     </p>

     <screen>
	#0001 = CONDITION ('Brake inspection required condition', 
	'Number of landings greater than 1000 and the configuration identification is F55-ECP 1.6.')
     </screen>

     <p>
       To fully demonstrate the example, but using a very simple schema, assume a simple schema:
     </p>
     <screen>
	SCHEMA aircraft_maintenance;

	ENTITY: aircraft
	id : STRING
	configuration_id: STRING
	landings: INTEGER
	END_ENTITY

	ENTITY: maintenance_task
	id : STRING
	title: STRING
	task_condition: condition
	descritpion: text
	END_ENTITY

	END_SCHEMA
     </screen>

     <p>
       And let the instances of the entities be:
     </p>
     <screen>
	#0011 = AIRCRAFT ('F15345', 'F55-ECP1.6', 11)
	#0012 = maintenance_task ('Task 9', 'Inspect brake', #0001, 'Remove wheel to inspect 
	brake wear')
     </screen>

     <p>
       Here the Task 9 refers to condition #0001. For aircraft F15345, by human examination, 
       the condition is met and the task is applicable.
     </p>
     <p>
       To formally specify the elements of the condition, the number of landings and the 
       configuration version identification are really two separate "Criterion's". One needs to 
       specify what type of a parameter is specified, where it came from, what the value is and 
       what type of comparison it is.
     </p>
     <p>
       The first criterion is a numerical comparison of number of landings, and by using the modules 
       <module_ref linkend="condition_criteria:introduction">
         Condition_criteria (ISO 10303-1296)
       </module_ref>, 
       <module_ref linkend="expression_applications:introduction">
         Expression_applications (ISO 10303-1273)
       </module_ref>
       and 
       <module_ref linkend="expressions_for_logic:introduction">
         Expressions_for_logic (ISO 10303-1271)
       </module_ref>,  
     </p>
     <screen>
	#0031 = (LOGICAL_EXPRESSION( ) CRITERION( ) LOGICAL_GREATER( #0032, #0035))
	#0032 = NAMED_INTEGER_VARIABLE ( 'landings')
	#0033 = PARAMETER_SOURCE_REFERENCE (#0031, #0034)
	#0034 = ENTITY_EXPRESSION ('aircraft')
	#0035 = INTEGER_LITERAL (1000)
     </screen>
     <p>
       The configuration CONSTRAINT is a string comparison specification:
     </p>
     <screen>
	#0041 = (LOGICAL_EXPRESSION( ) CRITERION( ) LOGICAL_COMPARISON_EQUAL( #0042, #0044))
	#0042 = NAMED_STRING_VARIABLE ( 'configuration_id')
	#0043 = PARAMETER_SOURCE_REFERENCE (#0041, #0034)
	#0044 = STRING_LITERAL ('F55-ECP1.6')
     </screen>
     <p>
       Once the separate criteria are defined, they can be combined by a logical 'AND' operator to
       form another compound criterion:
     </p>
     <screen>
	#0051 = (LOGICAL_EXPRESSION ( ) CRITERION ( ) LOGICAL_AND (#0031, #0041))
     </screen>
     <p>
       Now we can associate the Criterion, #0051, to the Condition, #0001,
       using 
       <express_ref linkend="condition_criteria:arm:Condition_criteria_arm.Host_condition"/>,
       from the Condition_criteria module (ISO 10303-1296),
     </p>
     <screen>
	#0061 = HOST_CONDITON (#0051, #0001)
     </screen>
     <p>
       And the Condition becomes fully specified using the logical expression constructs.
     </p>
     <p>
       One can add the scope of the Condition for its applicability to instances of the 
       "aircraft" by using module Condition_assignment (ISO 10303-1257) and assuming the 
       "item_in_scope" select type is extended to include the "aircraft" enity type: 
     </p>
     <screen>
	#0071 = CONDITION_SCOPE (#0001, #0034)
     </screen>
     <p>
       The complete listing of the file fragment is: 
     </p>
     <screen>
	#0011 = AIRCRAFT ('F15345', 'F55-ECP1.6', 11)
	#0012 = maintnence_task('Task 9', 'Inspect brake', #0001, 'Remove wheel to inspect 
	brake wear')
	#0001 = CONDITION('Brake inspection required condition', 
	'Number of landings greater than 1000 and the configuration identification is F55-ECP1.6')
	#0031 = (LOGICAL_EXPRESSION( ) CRITERION( ) LOGICAL_GREATER(#0032, #0036))
	#0032 = NAMED_INTEGER_VARIABLE('landings')
	#0033 = PARAMETER_SOURCE_REFERENCE (#0031, #0034)
	#0034 = ENTITY_EXPRESSION('aircraft')
	#0035 = INTEGER_LITERAL (1000)
	#0041 = (LOGICAL_EXPRESSION( ) CRITERION( ) LOGICAL_COMPARISON_EQUAL(#0042, #0046))
	#0042 = NAMED_STRING_VARIABLE('configuration_id')
	#0043 = PARAMETER_SOURCE_REFERENCE (#0041, #0034)
	#0044 = STRING_LITERAL('F55-ECP1.6')
	#0051 = (LOGICAL_EXPRESSION( ) CRITERION( ) LOGICAL_AND(#0031, #0041))
	#0061 = HOST_CONDITON(#0051, #0001)
	#0071 = CONDITION_SCOPE(#0001, #0034)
     </screen>
     
</usage_guide>

</module>
