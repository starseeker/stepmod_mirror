<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-03-30T15:27:08" rcs.revision="1.0" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="conductivity_material_aspects_arm schema_instance"/>
   <schema name="CONDUCTIVITY_MATERIAL_ASPECTS_ARM">
      <interface kind="use" schema="CLASSIFICATION_ASSIGNMENT_ARM"/>
      <interface kind="use" schema="GENERIC_MATERIAL_ASPECTS_ARM"/>
      <interface kind="use" schema="PART_VIEW_DEFINITION_ARM"/>
      <interface kind="use" schema="PROPERTY_ASSIGNMENT_ARM"/>
      <type name="cma_classification_item">
         <select extensible="YES" genericentity="YES" basedon="classification_item" selectitems="material_identification_with_conductivity_classification"/>
      </type>
      <type name="cma_material_item_select">
         <select extensible="YES" genericentity="YES" basedon="material_item_select" selectitems="part_view_definition"/>
      </type>
      <entity name="conductivity_material_property_class" abstract.supertype="YES" supertypes="class" super.expression="ONEOF (material_electrical_conductivity_class, material_thermal_conductivity_class, material_optical_conductivity_class, material_magnetic_conductivity_class)">
         <where label="wr1" expression=" self \ class . name in [ 'conductive' , 'non conductive' , 'resistive' , 'semi conductive' , 'super conductive' ] "/>
      </entity>
      <entity name="material_electrical_conductivity_class" supertypes="conductivity_material_property_class"/>
      <entity name="material_identification_with_conductivity_classification" supertypes="material_identification">
         <derived name="electrical_conductivity_classification" expression=" get_cond_class ( self , 'material_electrical_conductivity_class' ) ">
            <builtintype type="STRING"/>
         </derived>
         <derived name="magnetic_conductivity_classification" expression=" get_cond_class ( self , 'material_magnetic_conductivity_class' ) ">
            <builtintype type="STRING"/>
         </derived>
         <derived name="optical_conductivity_classification" expression=" get_cond_class ( self , 'material_optical_conductivity_class' ) ">
            <builtintype type="STRING"/>
         </derived>
         <derived name="thermal_conductivity_classification" expression=" get_cond_class ( self , 'material_thermal_conductivity_class' ) ">
            <builtintype type="STRING"/>
         </derived>
         <where label="wr1" expression=" ( sizeof ( query ( ca &lt;* usedin ( self , 'classification_assignment_arm.' + 'classification_assignment.' + 'items' ) | ( 'conductivity_material_aspects_arm.' + 'material_electrical_conductivity_class' in typeof ( ca . assigned_class ) ) ) ) = 1 ) "/>
         <where label="wr2" expression=" ( sizeof ( query ( ca &lt;* usedin ( self , 'classification_assignment_arm.' + 'classification_assignment.' + 'items' ) | ( 'conductivity_material_aspects_arm.' + 'material_thermal_conductivity_class' in typeof ( ca . assigned_class ) ) ) ) &lt;= 1 ) "/>
         <where label="wr3" expression=" ( sizeof ( query ( ca &lt;* usedin ( self , 'classification_assignment_arm.' + 'classification_assignment.' + 'items' ) | ( 'conductivity_material_aspects_arm.' + 'material_magnetic_conductivity_class' in typeof ( ca . assigned_class ) ) ) ) &lt;= 1 ) "/>
         <where label="wr4" expression=" ( sizeof ( query ( ca &lt;* usedin ( self , 'classification_assignment_arm.' + 'classification_assignment.' + 'items' ) | ( 'conductivity_material_aspects_arm.' + 'material_optical_conductivity_class' in typeof ( ca . assigned_class ) ) ) ) &lt;= 1 ) "/>
      </entity>
      <entity name="material_magnetic_conductivity_class" supertypes="conductivity_material_property_class"/>
      <entity name="material_optical_conductivity_class" supertypes="conductivity_material_property_class"/>
      <entity name="material_thermal_conductivity_class" supertypes="conductivity_material_property_class"/>
      <function name="get_cond_class">
         <parameter name="input1">
            <typename name="material_identification_with_conductivity_classification"/>
         </parameter>
         <parameter name="input2">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="STRING"/>
         <algorithm> local car : set of classification_assignment := [ ] ; end_local ; car := query ( ca &lt;* usedin ( input1 , 'classification_assignment_arm.' + 'classification_assignment.' + 'items' ) | ( 'conductivity_material_aspects_arm.' + input2 in typeof ( ca . assigned_class ) ) ) ; if sizeof ( car ) = 1 then return ( car [ 1 ] . assigned_class \ class . name ) ; else return ( '?' ) ; end_if ; </algorithm>
      </function>
   </schema>
</express>
