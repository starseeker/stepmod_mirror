<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="constructive_solid_geometry_2d" schema_file="arm.xml" 
rcs.date="$Date: 2009/03/12 22:12:35 $" rcs.revision="$Revision: 1.10 $"
  describe.selects="YES"
>


  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Constructive_solid_geometry_2d_arm 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
   <ext_description linkend="Constructive_solid_geometry_2d_arm"/>


<!-- +++++++++++ TYPE extend_or_chord_2_extend_or_truncate_or_round +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_chord_2_extend_or_truncate_or_round">
	An <b>extend_or_chord_2_extend_or_truncate_or_round</b> lists the possible 
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Curve_style_parameters.corner_style">corner_style</express_ref> values.
</ext_description>

<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_chord_2_extend_or_truncate_or_round.truncate">
	specifies that the value is truncate;
</ext_description>
<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_chord_2_extend_or_truncate_or_round.chord_2_extend">
	specifies that the value is chord to extend;
</ext_description>
<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_chord_2_extend_or_truncate_or_round.round">
	specifies that the value is round;
</ext_description>
<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_chord_2_extend_or_truncate_or_round.extend">
	specifies that the value is extend.
</ext_description>

<!-- +++++++++++ TYPE extend_or_truncate +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_truncate">
An <b>extend_or_truncate</b> lists the possible 
<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Curve_style_parameters_with_ends.end_extension">end_extension</express_ref> values.
</ext_description>
<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_truncate.truncate">
specifies that the value is truncate;
</ext_description>
<ext_description linkend="Constructive_solid_geometry_2d_arm.extend_or_truncate.extend">
specifies that the value is extend.
</ext_description>

<!-- +++++++++++ TYPE square_or_round +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.square_or_round">
A <b>square_or_round</b> lists the possible 
<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Curve_style_parameters_with_ends.end_style">end_style</express_ref> values.
</ext_description>
<ext_description linkend="Constructive_solid_geometry_2d_arm.square_or_round.square">
specifies that the value is square;
</ext_description>
<ext_description linkend="Constructive_solid_geometry_2d_arm.square_or_round.round">
specifies that the value is round.
</ext_description>
   
<!-- +++++++++++ Area_with_outer_boundary +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Area_with_outer_boundary">
	An <b>Area_with_outer_boundary</b> is a type of
	<express_ref linkend="Area_2d:arm:Area_2d_arm.Primitive_2d"/>.
</ext_description>

<!-- +++++++++++ Boolean_result_2d +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Boolean_result_2d">
	A <b>Boolean_result_2d</b> is a type of
	<express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Detailed_geometric_model_element"/>.
</ext_description>

<!-- +++++++++++ Closed_curve_style_parameters +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Closed_curve_style_parameters">
A <b>Closed_curve_style_parameters</b> is a type of 
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Curve_style_parameters"/> that is intended
	to only be applied to a closed path.
</ext_description>
   
<!-- +++++++++++ Csg_2d_model +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Csg_2d_model">
<p>
	A <b>Csg_2d_model</b> is a type of 
	<express_ref linkend="elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Geometric_model"/>
	that consists of a collection of solids. Each solid contained in the <b>Csg_2d_model</b> may be defined by
applying regularised boolean operations to primitive solids, or may itself just
be a primitive solid. The allowed operations are intersection, union, and
difference.
</p> 
	<note number="1">This entity is incompletely modelled in the ARM. Complete specification 
		can be obtained in the definition of the corresponding MIM entity.
	</note>
	<note number="2">
		As a special case, a <b>Csg_2d_model</b> can also include a single CSG primitive.
	</note>
	<note number="3">
		A regularised subset of space is the closure of its interior, in the usual sense of point set topology. 
		For boolean results, regularisation has the effect of removing dangling edges and other anomalies produced by the original operations.
	</note>      
</ext_description>

<!-- items -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Csg_2d_model.items">
	an attribute inherited from the
	<express_ref linkend="Foundation_representation:arm:Foundation_representation_arm.Representation"/>
	shall be redeclared as the
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.primitive_or_boolean_result_2d"/>
	for the <b>Csg_2d_model</b>.
	There shall exist one or more
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.primitive_or_boolean_result_2d"/>
	for the <b>Csg_2d_model</b>.
</ext_description>

<!-- +++++++++++ Curve_style_parameters +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters">
	A <b>Curve_style_parameters</b> is the definition of a set of properties that are of a geometric nature.
	<b>Curve_style_parameters</b> provides parametric data used by a processor to create physical material along a path, where the path is 
	described outside of the style.  The <b>Curve_style_parameters</b> algorithm is rule based and is formally described in the domain rules. 
	The <b>width_uncertainty</b> represents the uncertainty in the originating CAD system, not a material processing tolerance.
	A <b>Curve_style_parameters</b> is either a
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Closed_curve_style_parameters"/>
	or a 
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Curve_style_parameters_with_ends"/>.
</ext_description>

<!-- name -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters.name">
	the words by which the <b>Curve_style_parameters</b> is known.
</ext_description>

<!-- corner_style -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters.corner_style">
	specifies the
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.extend_or_chord_2_extend_or_truncate_or_round"/>
	style for the <b>Curve_style_parameters_with_ends</b>.
	Figures <module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs2">1</module_ref> 
	and 
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs3">2</module_ref> 
	illustrate the construction options associated with "extend", "chord 2 extend" and "truncate" corners.
	These illustrations shall be interpreted as describing construction of the outer boundary near the intersection only.
	At some distance away from the intersection, the basic width attribute governs the shape.
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs4">Figure 3</module_ref> 
	illustrates the construction associated with round corners.  
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs5">Figure 4</module_ref> 
	illustrates the construction of the end treatment of the curve.  The end treatment is applied individually to each end.  
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs6">Figure 5</module_ref> 
	illustrates the completed result for a 
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	that has been styled using this <b>Curve_style_parameters_with_ends</b>.  
	Even though the  
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	does not show material inside, that is required if the  
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	is applied to material.
	<figure number="1" id="cs2">
		<title>Square corners with extend</title>
		<img src="cs2.gif" />
	</figure>
	<figure number="2" id="cs3">
		<title>Square corners with truncate</title>
		<img src="cs3.gif" />
	</figure>
	<figure number="3" id="cs4">
		<title>Round corners</title>
		<img src="cs4.gif" />
	</figure>
</ext_description>

<!-- curve_width -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters.curve_width">
	specifies the role of the 
	<express_ref linkend="Value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/>
	for the <b>Curve_style_parameters_with_ends</b>.
</ext_description>

<!-- width_uncertainty -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters.width_uncertainty">
	specifies the role of the 
	<express_ref linkend="Value_with_unit_extension:arm:Value_with_unit_extension_arm.Length_data_element"/> 
	for the identifier for the <b>Curve_style_parameters_with_ends</b>.
	The value of this attribute need not be specified.
</ext_description>

<!-- UR1 -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters.ur:UR1">
	The <b>name</b> shall be unique within a population of <b>Curve_style_parameters</b>.
</ext_description>

<!-- +++++++++++ Curve_style_parameters_with_ends +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters_with_ends">
	A <b>Curve_style_parameters_with_ends</b> is a type of 
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Curve_style_parameters"/>
	that includes end effects.
	
</ext_description>


<!-- end_style -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters_with_ends.end_style">
	specifies either the "round" or "square" style ends for the <b>Curve_style_parameters_with_ends</b>.
	Figures 
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs2">1</module_ref> 
	and 
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs3">2</module_ref> 
	illustrate the construction options associated with square corners.  These illustrations shall be interpreted as describing construction of the
	outer boundary near the end only.  At some distance away from the end, the basic width
	attribute governs the shape.  
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs5">Figure 4</module_ref> 
	illustrates the construction of the end treatment of the curve.  The end treatment is applied individually to each end.  
	<module_ref linkend="Constructive_solid_geometry_2d:4_entities:figure:cs6">Figure 5</module_ref> 
	illustrates the completed result for a 
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	that has been styled using this <b>Curve_style_parameters_with_ends</b>.  
	Even though the  
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	does not show material inside, that is required if the  
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	is applied to material. 
	<figure number="4" id="cs5">
		<title>Curve end treatment</title>
		<img src="cs5.gif" />
	</figure>
	<figure number="5" id="cs6">
		<title>Completed curve</title>
		<img src="cs6.gif" />
	</figure>
</ext_description>

<!-- end_extension -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Curve_style_parameters_with_ends.end_extension">
<p>
	specifies how the physical material will terminate on the 
	<express_ref linkend="Layered_interconnect_module_design:arm:Layered_interconnect_module_design_arm.Layer_connection_point"/> 
	that is the start or end of the centreline curve.  The <b>end_extension</b> is applied by a continuation (termination) of the 
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	that is being styled along the tangent to the  
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/> 
	at the terminus of the  
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/>.  
	If the <b>end_extension</b> is "extend", there will be material added after the  
	<express_ref linkend="Layered_interconnect_module_design:arm:Layered_interconnect_module_design_arm.Layer_connection_point"/>.  
	If the <b>end_extension</b> is "truncate", there will be no material added after the  
	<express_ref linkend="Layered_interconnect_module_design:arm:Layered_interconnect_module_design_arm.Layer_connection_point"/>.
</p>
	<note>
		This Application Object does not describe tolerances associated with fabrication processes.  Reference  
		<express_ref linkend="Fabrication_technology:arm:Fabrication_technology_arm.Stratum_technology"/> 
		as an example of tolerance information related to fabrication processes.
	</note>
</ext_description>

<!-- +++++++++++  Path_area_with_parameters+++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Path_area_with_parameters">
	A <b>Path_area_with_parameters</b> is a type of
	<express_ref linkend="Elemental_geometric_shape:arm:Elemental_geometric_shape_arm.Detailed_geometric_model_element"/>.
</ext_description>

<!-- centreline -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Path_area_with_parameters.centreline">
	specifies the role of the
	<express_ref linkend="Basic_geometry:arm:Basic_geometry_arm.Curve"/>
	for the <b>Path_area_with_parameters</b>.
</ext_description>

<!-- parameters -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Path_area_with_parameters.parameters">
	specifies the role of the
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Curve_style_parameters"/>
	for the <b>Path_area_with_parameters</b>.
</ext_description>


<!-- +++++++++++ Primitive_2d_with_inner_boundary +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Primitive_2d_with_inner_boundary">
	A <b>Primitive_2d_with_inner_boundary</b> is a type of
	<express_ref linkend="Area_2d:arm:Area_2d_arm.Primitive_2d"/>.
</ext_description>

<!-- +++++++++++ Single_area_csg_2d_model +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Single_area_csg_2d_model">
	A <b>Single_area_csg_2d_model</b> is a type of
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Csg_2d_model"/>.
</ext_description>

<!-- items -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Single_area_csg_2d_model.items">
	an attribute inherited from the
	<express_ref linkend="Foundation_representation:arm:Foundation_representation_arm.Representation"/>
	shall be redeclared as the
	<express_ref linkend="Area_2d:arm:Area_2d_arm.Primitive_2d"/>
	for the <b>Single_area_csg_2d_model</b>.
	There shall exist exactly one
	<express_ref linkend="Area_2d:arm:Area_2d_arm.Primitive_2d"/>
	for the <b>Single_area_csg_2d_model</b>
</ext_description>

<!-- +++++++++++ Single_boundary_csg_2d_model +++++++++++ -->
<ext_description linkend="Constructive_solid_geometry_2d_arm.Single_boundary_csg_2d_model">
	A <b>Single_boundary_csg_2d_model</b> is a type of
	<express_ref linkend="Constructive_solid_geometry_2d:arm:Constructive_solid_geometry_2d_arm.Single_area_csg_2d_model"/>.
</ext_description>

</ext_descriptions>