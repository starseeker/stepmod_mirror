<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="solid_model" schema_file="arm.xml" 
rcs.date="$Date: 2002/07/23 17:15:09 $" rcs.revision="$Revision: 1.9 $"
  describe.selects="YES"
>


  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
   <ext_description linkend="Solid_model_arm"/>

<ext_description linkend="Solid_model_arm.boolean_operator_3d">
The boolean_operator_3d type enumerates the three boolean operators used in the definition of CSG solids. 
</ext_description>

<ext_description linkend="Solid_model_arm.csg_primitive_3d">
The csg_primitive_3d type enumerates the solid primitives that can be represented by an instance of <b>Csg_item_3d</b>. 
<note number="1">
This enumeration may be extended in application modules that use the present module.</note>
<note number="2">
The definition of the various primitives can be obtained in ISO 10303-42:2000.
</note>
</ext_description>

<ext_description linkend="Solid_model_arm.swept_area_solid_type">
The swept_area_solid_type type enumerates the kinds of swept_area_solid. 
<note number="1">
This enumeration may be extended in application modules that use the present module.</note>
<note number="2">
The definition of the various kinds of swept_area_solid can be obtained in ISO 10303-42:2000.
</note>
</ext_description>

<ext_description linkend="Solid_model_arm.swept_face_solid_type">
The swept_face_solid_type type enumerates the kinds of swept_face_solid. 
<note number="1">
This enumeration may be extended in application modules that use the present module.</note>
<note number="2">
The definition of the various kinds of swept_face_solid can be obtained in ISO 10303-42:2000.
</note>
</ext_description>

<ext_description linkend="Solid_model_arm.volume_type">
The volume_type type enumerates the kinds of volume that can be represented by an instance of <b>Volume</b>. 
<note number="1">
This enumeration may be extended in application modules that use the present module.</note>
<note number="2">
The definition of the various kinds of volume can be obtained in ISO 10303-42:2000.
</note>
</ext_description>

  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm  Entity: Solid_model 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
   <ext_description linkend="Solid_model_arm.Solid_model">
A <b>Solid_model</b> is a type of 3D <b>Detailed_geometric_model_element</b> that defines the representation of a solid volume.
   </ext_description>

  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm  Entity: Solid_replica 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
   <ext_description linkend="Solid_model_arm.Solid_replica">
A <b>Solid_replica</b> is a replica of a <b>Solid_model</b> obtained with a particular geometric transformation. 
<note>The transformation may not be an isometry.</note>

<example>
A <b>Solid_replica</b> may be used to represent a copy of a <b>Solid_model</b> in a different location.
</example>
      </ext_description>

  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm  Entity: Solid_replica  Attribute: parent_solid 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
   <ext_description linkend="Solid_model_arm.Solid_replica.parent_solid">
The <b>Solid_model</b> that is replicated.  
        </ext_description>

  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm  Entity: Solid_replica  Attribute: transformation 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
   <ext_description linkend="Solid_model_arm.Solid_replica.transformation">
The <b>Cartesian_transformation_3d</b> used to create the replica.
        </ext_description>

  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm  Entity: Trimmed_volume 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
   <ext_description linkend="Solid_model_arm.Trimmed_volume">
A <b>Trimmed_volume</b> is a type of <b>Solid_model</b> for which the boundaries are the constant parameter surfaces of a base <b>Volume</b>.
<note>
Specification of this entity is incomplete in the ARM. Further information can be obtained in the specification of the entity onto which it is mapped.
</note>
</ext_description>

   <ext_description linkend="Solid_model_arm.Trimmed_volume.base_volume">
the <b>Volume</b> that is trimmed.
      </ext_description>

  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm  Entity: Swept_area_solid 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
   <ext_description linkend="Solid_model_arm.Swept_area_solid">
The <b>Swept_area_solid</b> is a type of <b>Solid_model</b> that is defined by a sweeping action of a planar bounded surface along a path. 
<note>
Specification of this entity is incomplete in the ARM. Further information can be obtained in the specification of the entity onto which it is mapped.
</note>
</ext_description>
<ext_description linkend="Solid_model_arm.Swept_area_solid.kind">
the identification of the kind of Swept_area_solid that is specified.
</ext_description>

  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Solid_model_arm  Entity: Swept_face_solid 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
   <ext_description linkend="Solid_model_arm.Swept_face_solid">
The <b>Swept_face_solid</b> is a type of <b>Solid_model</b> that defines a solid by a sweeping action of a planar face along a path. 
<note>
Specification of this entity is incomplete in the ARM. Further information can be obtained in the specification of the entity onto which it is mapped.
</note>
     </ext_description>
<ext_description linkend="Solid_model_arm.Swept_face_solid.kind">
the identification of the kind of Swept_face_solid that is specified.
</ext_description>


   	 
   <ext_description linkend="Solid_model_arm.Half_space_3d">
A <b>Half_space_3d</b> is a type of <b>Detailed_geometric_model_element</b> that is the domain of space which lies on one side of an unbounded surface. 

<note>The domain may further trimmed by an orthogonal box.</note>
<p>The side of the surface which is in the half space is determined by the surface normals and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normals point away from. If the agreement flag is FALSE, then the subset is the one the normals point into.
The surface shall divide the domain into exactly two subsets.</p>   
<note>
Specification of this entity is incomplete in the ARM. Further information can be obtained in the specification of the entity onto which it is mapped.
</note>
   </ext_description>
	 
  <ext_description linkend="Solid_model_arm.Csg_model">
        
      <p>
A <b>Csg_model</b> is a type of <b>Solid_model</b> defined by a collection of so-called primitive solids, 
combined using regularised boolean operations. The allowed operations are intersection, union and difference. 
      </p>
<note number="1">
As a special case, a <b>Csg_model</b> can also include of a single CSG primitive.
</note>

      <note number="2">
A regularised subset of space is the closure of its interior, in the usual sense of point set topology. 
For boolean results, regularization has the effect of removing dangling edges and other anomalies produced by the original operations.
      </note>      
   </ext_description>

   <ext_description linkend="Solid_model_arm.Csg_model.tree_root_expression">
the <b>Boolean_result_3d</b>  or the <b>Csg_item_3d</b> that defines the <b>Csg_model</b>.
    </ext_description>

  <ext_description linkend="Solid_model_arm.Boolean_result_3d">
A <b>Boolean_result_3d</b> is a type of <b>Detailed_geometric_model_element</b> that specifies a result of a boolean operation between instances of the types listed in boolean_operand_3d type.
        </ext_description>

  <ext_description linkend="Solid_model_arm.Boolean_result_3d.operator">
the boolean operator used in the operation to create the result.
        </ext_description>

   <ext_description linkend="Solid_model_arm.Boolean_result_3d.first_operand">
the first operand to be operated upon by the boolean operation.
        </ext_description>

   <ext_description linkend="Solid_model_arm.Boolean_result_3d.second_operand">
the second operand specified for the operation.
        </ext_description>
				
  <ext_description linkend="Solid_model_arm.Manifold_solid_brep">
A <b>Manifold_solid_brep</b> is a type of <b>Solid_model</b> that defines a solid by its external envelope and, when relevant, by one or more inner envelopes.
<p>These envelopes shall either be defined with connected planar and polygonal facets or with scupltured surfaces.</p>
        </ext_description>

  <ext_description linkend="Solid_model_arm.Manifold_solid_brep.faceted">
the boolean value that specifies whether the envelopes of the <b>Manifold_solid_brep</b> are faceted.
        </ext_description>

 <ext_description linkend="Solid_model_arm.Csg_item_3d">
A <b>Csg_item_3d</b> is a type of <b>Detailed_geometric_model_element</b> that defines a 3D solid primitive.
<note>
Specification of this entity is incomplete in the ARM. Further information can be obtained in the specification of the entity onto which it is mapped.
</note>
        </ext_description>

<ext_description linkend="Solid_model_arm.Csg_item_3d.kind">
the identification of the kind of solid shape that is specified.
        </ext_description>

 <ext_description linkend="Solid_model_arm.Volume">
A <b>Volume</b> is a type of <b>Detailed_geometric_model_element</b> that defines a 3D tri-parametric volume primitive.
<note>
Specification of this entity is incomplete in the ARM. Further information can be obtained in the specification of the entity onto which it is mapped.
</note>
        </ext_description>

<ext_description linkend="Solid_model_arm.Volume.kind">
the identification of the kind of volume that is specified.
</ext_description>

</ext_descriptions>