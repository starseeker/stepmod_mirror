<?xml version="1.0"?>
<!-- $Id: express2xml.js,v 1.2 2001/11/21 15:38:19 robbod Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name="express2xml.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.2"
    source="../data/modules/date_time_assignment/mim_lf.exp"/>

  <schema name="date_time_assignment_mim">
    <type name="ahead_or_behind">
      <enumeration
        items="ahead exact behind">
      </enumeration>


    </type>
    <type name="attribute_type">
      <select
        selectitems="label text">
      </select>

    </type>
    <type name="date_and_time_item">
      <select
        extensible="YES"
        selectitems="">
      </select>

    </type>
    <type name="date_item">
      <select
        extensible="YES"
        selectitems="">
      </select>

    </type>
    <type name="date_time_select">
      <select
        selectitems="date local_time date_and_time">
      </select>

    </type>
    <type name="day_in_month_number">
      <builtintype
        type="INTEGER">
      </builtintype>


      <where
        label="WHERE"
        expression="((1 &lt;= SELF) AND (SELF &lt;= 31))">
      </where>
    </type>
    <type name="description_attribute_select">
      <select
        selectitems="date_role date_time_role">
      </select>

    </type>
    <type name="hour_in_day">
      <builtintype
        type="INTEGER">
      </builtintype>


      <where
        label="WHERE"
        expression="((0 &lt;= SELF) AND (SELF &lt; 24))">
      </where>
    </type>
    <type name="label">
      <builtintype
        type="STRING">
      </builtintype>


    </type>
    <type name="minute_in_hour">
      <builtintype
        type="INTEGER">
      </builtintype>


      <where
        label="WHERE"
        expression="((0 &lt;= SELF) AND (SELF &lt;= 59))">
      </where>
    </type>
    <type name="month_in_year_number">
      <builtintype
        type="INTEGER">
      </builtintype>


      <where
        label="WHERE"
        expression="((1 &lt;= SELF) AND (SELF &lt;= 12))">
      </where>
    </type>
    <type name="second_in_minute">
      <builtintype
        type="REAL">
      </builtintype>


      <where
        label="WHERE"
        expression="((0 &lt;= SELF) AND (SELF &lt;= 60))">
      </where>
    </type>
    <type name="text">
      <builtintype
        type="STRING">
      </builtintype>


    </type>
    <type name="year_number">
      <builtintype
        type="INTEGER">
      </builtintype>


    </type>
    <entity
      name="applied_date_and_time_assignment"
      supertypes="date_and_time_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="date_and_time_item"/>
      </explicit>
    </entity>

    <entity
      name="applied_date_assignment"
      supertypes="date_assignment">
      <explicit
        name="items">
        <aggregate
          type="SET"
          lower="1"
          upper="?"/>
        <typename
          name="date_item"/>
      </explicit>
    </entity>

    <entity
      name="calendar_date"
      supertypes="date">
      <explicit
        name="day_component">
        <typename
          name="day_in_month_number"/>
      </explicit>
      <explicit
        name="month_component">
        <typename
          name="month_in_year_number"/>
      </explicit>
      <where
        label="wr1"
        expression="valid_calendar_date(SELF)">
      </where>
    </entity>

    <entity
      name="coordinated_universal_time_offset">
      <explicit
        name="hour_offset">
        <builtintype
          type="INTEGER"/>
      </explicit>
      <explicit
        name="minute_offset"
        optional="YES">
        <builtintype
          type="INTEGER"/>
      </explicit>
      <explicit
        name="sense">
        <typename
          name="ahead_or_behind"/>
      </explicit>
      <where
        label="wr1"
        expression="((0 &lt;= hour_offset) AND (hour_offset &lt;= 12))">
      </where>
      <where
        label="wr2"
        expression="((0 &lt;= minute_offset) AND (minute_offset &lt;= 59))">
      </where>
      <where
        label="wr3"
        expression="(NOT ((hour_offset &lt;&gt; 0) AND (sense = exact)))">
      </where>
    </entity>

    <entity
      name="date"
      super.expression="(calendar_date)">
      <explicit
        name="year_component">
        <typename
          name="year_number"/>
      </explicit>
    </entity>

    <entity
      name="date_and_time">
      <explicit
        name="date_component">
        <typename
          name="date"/>
      </explicit>
      <explicit
        name="time_component">
        <typename
          name="local_time"/>
      </explicit>
    </entity>

    <entity
      name="date_and_time_assignment"
      abstract.supertype="YES">
      <explicit
        name="assigned_date_and_time">
        <typename
          name="date_and_time"/>
      </explicit>
      <explicit
        name="role">
        <typename
          name="date_time_role"/>
      </explicit>
    </entity>

    <entity
      name="date_assignment"
      abstract.supertype="YES">
      <explicit
        name="assigned_date">
        <typename
          name="date"/>
      </explicit>
      <explicit
        name="role">
        <typename
          name="date_role"/>
      </explicit>
    </entity>

    <entity
      name="date_role">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename
          name="text "/>
      </derived>
      <where
        label="wr1"
        expression="(SIZEOF(USEDIN(SELF,'DATE_TIME_ASSIGNMENT_MIM.' +                'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1)">
      </where>
    </entity>

    <entity
      name="date_time_role">
      <explicit
        name="name">
        <typename
          name="label"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename
          name="text "/>
      </derived>
      <where
        label="wr1"
        expression="(SIZEOF(USEDIN(SELF,'DATE_TIME_ASSIGNMENT_MIM.' +                'DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM')) &lt;= 1)">
      </where>
    </entity>

    <entity
      name="description_attribute">
      <explicit
        name="attribute_value">
        <typename
          name="text"/>
      </explicit>
      <explicit
        name="described_item">
        <typename
          name="description_attribute_select"/>
      </explicit>
    </entity>

    <entity
      name="local_time">
      <explicit
        name="hour_component">
        <typename
          name="hour_in_day"/>
      </explicit>
      <explicit
        name="minute_component"
        optional="YES">
        <typename
          name="minute_in_hour"/>
      </explicit>
      <explicit
        name="second_component"
        optional="YES">
        <typename
          name="second_in_minute"/>
      </explicit>
      <explicit
        name="zone">
        <typename
          name="coordinated_universal_time_offset"/>
      </explicit>
      <where
        label="wr1"
        expression="valid_time(SELF)">
      </where>
    </entity>

    <function
      name="get_description_value">
      <typename
        name="text"/>
      <parameter
        name="obj">
        <typename
          name="description_attribute_select"/>
      </parameter>
      <algorithm>

    LOCAL
      description_bag : BAG OF description_attribute := USEDIN(obj,
                         'DATE_TIME_ASSIGNMENT_MIM.' + 
                         'DESCRIPTION_ATTRIBUTE.' + 'DESCRIBED_ITEM');
    END_LOCAL;
    IF SIZEOF(description_bag) = 1 THEN
      RETURN(description_bag[1].attribute_value);
    ELSE
      RETURN(?);
    END_IF;

      </algorithm>

    </function>

    <function
      name="leap_year">
      <builtintype
        type="BOOLEAN"/>
      <parameter
        name="year">
        <typename
          name="year_number"/>
      </parameter>
      <algorithm>
    IF (((year MOD 4) = 0) AND ((year MOD 100) &lt;&gt; 0)) OR ((year MOD 400) =
         0) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;

      </algorithm>

    </function>

    <function
      name="valid_calendar_date">
      <builtintype
        type="LOGICAL"/>
      <parameter
        name="date">
        <typename
          name="calendar_date"/>
      </parameter>
      <algorithm>
    CASE date.month_component OF
      1 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 31));
      2 :         BEGIN
          IF leap_year(date.year_component) THEN
            RETURN((1 &lt;= date.day_component) AND (date.day_component &lt;= 29));
          ELSE
            RETURN((1 &lt;= date.day_component) AND (date.day_component &lt;= 28));
          END_IF;
        END;
      3 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 31));
      4 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 30));
      5 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 31));
      6 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 30));
      7 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 31));
      8 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 31));
      9 :         RETURN((1 &lt;= date.day_component) AND (date.day_component 
            &lt;= 30));
      10  :         RETURN((1 &lt;= date.day_component) AND (date.
            day_component &lt;= 31));
      11  :         RETURN((1 &lt;= date.day_component) AND (date.
            day_component &lt;= 30));
      12  :         RETURN((1 &lt;= date.day_component) AND (date.
            day_component &lt;= 31));
      END_CASE;
    RETURN(FALSE);

      </algorithm>

    </function>

    <function
      name="valid_time">
      <builtintype
        type="BOOLEAN"/>
      <parameter
        name="time">
        <typename
          name="local_time"/>
      </parameter>
      <algorithm>
    IF EXISTS(time.second_component) THEN
      RETURN(EXISTS(time.minute_component));
    ELSE
      RETURN(TRUE);
    END_IF;

      </algorithm>

    </function>

  </schema>

</express>
