<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.32 2008/07/20 22:45:17 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="decision_support"
   part="1486"
   version="1"
   sc4.working_group="3"
   wg.number="2278"
   wg.number.arm="2279"
   wg.number.mim="2280"
   wg.number.arm_lf="2281"
   wg.number.mim_lf="2282"
   checklist.internal_review="2356"
   checklist.project_leader="2357"
   checklist.convener="2355"
   status="CD-TS"
   language="E"
   publication.year=""
   publication.date=""
   published="n"
   rcs.date="$Date: 2008/07/20 22:45:17 $"
   rcs.revision="$Revision: 1.32 $"
   development.folder="dvlp">

 <keywords>
    module, requirements, systems engineering, trade studies, analysis, verification, validation, justification
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap233.projlead2"/>  
   <editor ref="ap233.editor2"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of decision support activities and information.
   </p>
   
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>items within the scope of application module <module_ref linkend="Requirement_management:1_scope"/>;</li>
   <li>items within the scope of application module <module_ref linkend="Justification:1_scope"/>;</li>
   <li>analysis and analysis representation;</li>
   <li>trade studies with measures of effectiveness;</li>
   <li>verification and validation;</li>
   <li>facility to assign activity information to decision support data;</li>
   <li>facility to assign analysis and condition information to decision support data;</li>
   <li>facility to assign authorization information to decision support data;</li>
   <li>facility to assign classification and identification information to decision support data;</li>
   <li>facility to assign date and time information to decision support data;</li>
   <li>facility to assign documentation information to decision support data;</li>
   <li>facility to assign person and organization information to decision support data;</li>
   <li>facility to assign project information to decision support data;</li>
   <li>facility to assign property information to decision support data;</li>
   <li>facility to assign verification evidence information to decision support data.</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>program management.</li>
 </outscope>

 <normrefs>
 
 </normrefs>

<definition>
   <term id="ap233_system requirement">system requirement</term>
   <def>a statement of properties that a system shall exhibit or shall not exhibit when completed
    <note>Requirements are derived from requirements in a many-to-many relationship.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_performance requirement">performance requirement</term>
   <def>states a time duration or a time probability for the completion of a functional 
   requirement or a function as a modeling element
   </def>
</definition>

<definition>
   <term id="ap233_physical property requirement">physical property requirement</term>
   <def>states a physical property that shall be exhibited by the system or system assembly 
   to which it is assigned
   </def>
</definition>

<definition>
   <term id="ap233_interface requirement">interface requirement</term>
   <def>states the characteristics of the interface to which it is assigned
   <note>It includes the geometric description, input/output description, protocols that 
   must be met, assemblies of parts required to join two ports, allowable defect characteristics, etc.</note>
   </def>
</definition>

<definition>
   <term id="ap233_imposed design requirement">imposed design requirement</term>
   <def>states particular elements that shall be used in the design of the system or part
   </def>
</definition>

<definition>
   <term id="ap233_reference requirement">reference requirement</term>
   <def>states a reference to a source of additional requirements that shall be met by the 
   system or part
   <note>The referenced source may be a requirements document, government requirements for 
   safety, security, environmental quality, etc., or a state or federal law</note>
   </def>
</definition>

<definition>
   <term id="ap233_effectiveness measure">effectiveness measure</term>
   <def>states an optimization condition that a system shall meet
   <note>Requirements define the domain of the solution; that is, the solution space. The effectiveness 
   measures drive the solution to a particular region in that space. The effectiveness measures 
   are tightly related to stakeholder needs. 
   </note>
   <example>The requirements differences between a PC and a laptop are largely in the laptop 
   optimization conditions for minimum weight, minimum thickness, and maximum battery life. 
   These criteria are some of those that customers (one of the kinds of stakeholder) consider 
   in deciding what to purchase. 
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_property">property</term>
   <def>any named measurable or observable attribute, quality or characteristic of an element
 <note>Property is usefully decomposed into several categories – the measurable characteristics 
 in normal use, the measurable characteristics that require additional instrumentation for 
 measurement, and the observable characteristics. It is a systems engineering best practice 
 to separate behavior from structure (function from form) and to allocate behavior to structure 
 based on trade studies among alternatives.
   </note>
   <example>The acceleration of a car is in the first category. behavior.  This characteristic 
   can be observed in the normal operation of the car. The weight of the car is not directly 
   observable in the use of the car.  It requires that the car be placed on a scale to record 
   the measurable characteristic. The fact that a car has four wheels, a steering wheel on 
   either the left or the right side, and a sun roof are observable characteristics.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_physical property">physical property</term>
   <def>what an element exhibits or does not exhibit in response to excitation and 
   stimulation from auxiliary measurement entities that are not part of its context 
   <note>This is the subclass of property that encompasses measurable characteristics that 
   require additional instrumentation to measure them. They cannot be established from responses 
   to the environment alone. All of the "properties" used in analysis with differential 
   equations fall into this category.
   </note>
   <example>Responses of an element like mass, power consumption, mean time between failure, 
   etc. are critically important and appear in requirements. They are not measured by responses 
   to excitation from their environment.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_structure">structure</term>
   <def>the decomposition, interconnection and other static relationship among the parts of the system
   <note>Physical properties are budgeted to structure using analysis methods, and the emergent 
   performance is calculated using the same methods. Behavior is allocated to the structure. Form 
   and function are separated conceptually so that the design can be optimized by considering 
   several different structures that can provide the desired emergent behavior and properties.
   </note>
   <example>In a real example of optimization the engineer examines not just the maximum or minimum, 
   but looks at the trend in data in that region to be sure the solution is robust. That is, the 
   design solution must not degrade rapidly with small variances in the variables of design.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_part">part</term>
   <def>static parts of the system including their interconnection and interconnection descriptions
  <note>Parts have physical properties assigned to them. Many engineering domains think of these as 
  components, but manufacturing thinks of them as assemblies because they build assemblies.  <i>Assembly 
  is a standard ISO naming convention. It may be desirable to alias this name.</i> </note>
   <note>Physical properties are budgeted to structure using analysis methods, and the emergent 
   performance is calculated using the same methods. Behavior is allocated to the structure. Form 
   and function are separated conceptually so that the design can be optimized by considering several 
   different structures that can provide the desired emergent behavior and properties.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_port">port</term>
   <def>a connection point on a part in the part decomposition hierarchy
   <note>Systems interconnect with one another port-to-port. Ports couple to desired things 
   in the environment and also to the ports of things that cause failure, threaten security 
   or safety. The alias for port is interface connection, this is the term that is used in AP239. </note>
   <note>When a system interacts with its environment, the boundary between the system and 
   the environment is the collection of all interacting ports.
   </note>
   <example>Consider a ultrasonic transmitting transducer coupled to a water tank and a receiver 
   transducer coupled to the tank. The transmitter port connects to a water port and couples 
   sound energy into the water. The intensity at any point is a result of the impedance match 
   between the two ports, the radiation pattern of the transducer, and the attenuation and 
   dispersion in the water. The receiving transducer is attached to another port of the water. 
   The received signal is dependant on the relative impedance of the two ports, the sound 
   distribution in the water, and the radiation pattern of the receiving transducer. This example 
   is often oversimplified as "broadcast" neglecting the port to port conditions and the properties 
   of the medium and neglecting the ports. 
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_interconnection">interconnection</term>
   <def>a listing of the ports that interconnect with one another
   <note>The interconnection may exist for structural reasons without any flow from port to port. 
   The interconnection may exist because functions are assigned to particular assemblies, and the 
   output from one function is an input to the other function. In this case the ports and their 
   interconnection must exist to support flow. The alias for interconnection is interface 
   connection, the term used in AP239.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_interface specification">interface specification</term>
   <def> a description of a port of a part that includes the geometric description, input/output 
   description, protocols that must be met, assemblies of parts required to join two ports, 
   allowable defect characteristics, etc. including the emergent properties of the interface 
   that are the result of the two ports interacting, and are not associated with either
  <note>Parts interact physically through direct physical contact, exchange of elements, and 
  through forces they exert such as gravity, compression or torque. Thus input/output is bound 
  to ports and described by interfaces. The interface may consist of more than the two ports 
  and may involve an assembly of parts as in the case of two flanges that are assembled with 
  six bolts and an O-ring. The interface may also require detailed description to define what 
  occurs there or how it is maintained. 
   </note>
   <example>For two ports to connect, their interfaces must be compatible. The current carrying 
   capacity of a plug and a socket is a result of the surface area of contact, the contact 
   force, the wiping action on plugging them together, and the surface conductivity of both. 
   This is an emergent property that is not assignable to either port individually.
   </example>
   </def>
</definition>

<definition>
   <term id="ap233_property value">property value</term>
   <def>a numeric value assigned to a physical property
   <note>Numeric values, real numbers, can be given as a mean and variance, a probability 
   distribution of values or as a histogram. Many probability distributions are used in 
   systems engineering. These may include: Normal, Log-normal, Bernoulli, Beta, Binomial, 
   Negative binomial, Chi squared, Discrete 
   Uniformed, Erlang, Exponential, F, Gamma, Geometric, Laplace, Poisson, T, Triangular, 
   Uniform, Weibull.</note>
 <example>Property values are useful in making comparisons and decisions, in verification, and 
 in validation. Comparisons and decisions can only be made if there are both mean values and 
 variances available. Mean values alone are insufficient.</example>
    </def>
</definition>

<definition>
   <term id="ap233_unit">unit</term>
   <def>establishes the standard of measure against which the values of physical properties 
   shall be stated
   <note>Several different standards of units are in use around the world. It is essential 
   to state the standard in use.</note>
   <example>Failure is assured when different groups use different units without making the 
   necessary transformations.</example>
    </def>
</definition>

<definition>
   <term id="ap233_property value">property value</term>
   <def>a numeric value assigned to a physical property
   <note>Numeric values, real numbers, can be given as a mean and variance, a probability 
   distribution of values or as a histogram. Many probability distributions are used in 
   systems engineering. These may include: Normal, Log-normal, Bernoulli, Beta, Binomial, 
   Negative binomial, Chi squared, Discrete 
   Uniformed, Erlang, Exponential, F, Gamma, Geometric, Laplace, Poisson, T, Triangular, 
   Uniform, Weibull.</note>
 <example>Property values are useful in making comparisons and decisions, in verification, and 
 in validation. Comparisons and decisions can only be made if there are both mean values and 
 variances available. Mean values alone are insufficient.</example>
    </def>
</definition>

<definition>
   <term id="ap233_required budgeted property value">required budgeted property value</term>
   <def>a property value allocated to a part by a requirement, or budgeted to that part by analysis
   <note>Values that shall be met are stated in requirements. The laws of science and 
   engineering interrelate the values of properties and are used to calculate the values 
   appropriate for the parts based on the required value for the whole.</note>
   <example>A requirement may state that a space probe shall weigh no more than 150 pounds. 
   In that case the masses of the subsystems must add up to no more than 150 pounds. It is best 
   practice to budget values to the subsystems for guidance of the engineers working on the subsystems.</example>
    </def>
</definition>

   
<definition>
   <term id="ap233_calculated property value">calculated property value</term>
   <def>a property value of a whole calculated or estimated from the values of the parts 
   that assemble to make the whole
   <note>The laws of science and engineering interrelate the values of properties and are 
   used to calculate the values for the whole based on the designed values for the parts.</note>
   <example>As the designers do their work they arrive at design values for the parts. 
   These values will generally differ from the budgeted values because the designers have 
   detailed information unavailable before. It is necessary to calculate the properties of 
   the whole based on these design values to ensure that requirements are satisfied by the 
   proposed design. The mass of the space probe should be 150 pounds or less, based on the 
   design data.</example>
    </def>
</definition>

<definition>
   <term id="ap233_target budget property value">target budget property value</term>
   <def>a temporary property value used by a designer as the design work proceeds and 
   different design alternatives are considered
   <note>As a designer considers several alternatives to meet system requirements, it 
   is necessary to carry along temporary property values to accomplish the design work.</note>
   <example>A designer may have been budgeted 40 pounds for his subsystem. He may find 
   a design solution that weighs 38 pounds. In the design process he may consider 
   alternatives that turn out to weigh 36 , 38,  41, and 43 pounds. These are temporary 
   targets. When he examines other budgets he must meet for the subsystem, the designer 
   may conclude that the 38 pound alternative is the best found.</example>
   </def>
</definition>

<definition>
   <term id="ap233_measured property value">measured property value</term>
   <def>a property value established by measurement of an actual part
   <note>These measurements are often made when actual parts first become available. They 
   verify that the parts meet their requirements.  They also verify the quality of analysis 
   models used during design.</note>
   <example>A part like a turbine blade has a number of important properties critical to 
   the performance of a jet engine, These include aerodynamic efficiency, weight, moment 
   of inertia, vibration spectra, mean time between failure, and corrosion resistance. 
   Important properties are predicted during design with analysis. Measurement is made as 
   soon as possible.</example>
    </def>
</definition>

<definition>
   <term id="ap233_model parameter">model parameter</term>
   <def>a formally declared variable of the analytical model provided for an external 
   application to populate at execution time in a computing environment
   <note>Physical properties are represented in equations by parameters.</note>
   <example>In Spice, temperature is a model parameter that may be set at the execution time. </example>
    </def>
</definition>

<definition>
   <term id="ap233_parameter assignment">parameter assignment</term>
   <def>provides actual values for characteristics declared formally by the model parameter
   <note>Some parameters are left in parametric form and are calculated. 
   Others are supplied values to fully specify the equations.</note>
    </def>
</definition>

<definition>
   <term id="ap233_analytical representation">analytical representation</term>
   <def>the association of specific properties of specific system assemblies with an 
   analytical model in order to unambiguously characterize the performance of a specific part
   <note>To perform a calculation it is necessary to associate parameters with other 
   elements of equations.</note>
    </def>
</definition>

<definition>
   <term id="ap233_analytical model">analytical model</term>
   <def>provides a mathematical description of the properties of a system
   <note>An analytical model may be a library model. </note>
    </def>
</definition>

<definition>
   <term id="ap233_verification requirement">verification requirement</term>
   <def>statement of how a system design or instance shall be shown by the development 
   organization using test, analysis, inspection ,  demonstration, simulation, similarity, 
   sampling, or other method to meet a requirement allocated to the system
    <note>This is a requirement on the development organization and not on the system. </note>
    <note>This is performed to confirm that the deployed system will meet the requirements</note>
    </def>
</definition>

<definition>
   <term id="ap233_verification event">verification event</term>
   <def>occurrence (with date, performer and result) of a comparison of a requirement against 
   the test, analysis, or inspection results of a design or instance of a system
    </def>
</definition>

<definition>
   <term id="ap233_verification procedure">verification procedure</term>
   <def>describes the process used to compare a requirement against the test, analysis, 
   or inspection results of a design or instance of a system
    <example>For a complex digital 
   system the procedure may require the application of a suite of test vectors to the digital 
   system along with environmental tests involving temperature stress and vibration. </example>
   <example> 
   For a complex metal system the procedure may require the application of several nondestructive 
   tests to ensure that there are no flaws preset that will cause failure</example>
    </def>
</definition>

<definition>
   <term id="ap233_verification configuration">verification configuration</term>
   <def>arrangement of system and infrastructure necessary to perform the test, analysis, or 
   inspection of a design or instance of a system
    </def>
</definition>

<definition>
   <term id="ap233_verification plan">verification plan</term>
   <def>the schedule of tasks, task durations, start times, end times, task inputs, task 
   outputs, goals, and resources (both personnel and infrastructure) to perform the test, 
   analysis, or inspection of a design or instance of a system
    </def>
</definition>

<definition>
   <term id="ap233_organization">organization</term>
   <def> description of the roles of persons in a group or team 
    ordered definition list
    </def>
</definition>

<definition>
   <term id="ap233_issue">issue</term>
   <def>any question raised concerning the system or the system development
    </def>
</definition>

<definition>
   <term id="ap233_verification result">verification result</term>
   <def>describes the result of a verification  event
    <example>For a complex digital system the procedure may require the application of a suite of 
    test vectors to the digital system along with environmental tests involving temperature stress 
    and vibration.  The result describes the test coverage and the tests passed and failed</example>
    </def>
</definition>

<definition>
   <term id="ap233_stakeholder">stakeholder</term>
   <def>people, organizations and institutions that are a part of the system environment 
   because the system provides some benefit to them and they have an interest in the system
  <note>Stakeholders include; for example, the producers, owners, operators, users, 
  and maintainers of the system.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_stakeholder_need">stakeholder need</term>
   <def>the benefits that the stakeholders wish to be satisfied by or delivered by 
   the system when it is implemented and functioning  
   <note>At the top-level of development these needs drive the requirements for the 
   system and the optimization criteria for its development.
   </note>
   </def>
</definition>

<definition>
   <term id="ap233_validation requirement">validation requirement</term>
   <def>statement of how a system requirement, design or instance shall be shown by the development 
   organization to meet stakeholder needs 
    <note>This is to confirm that the requirements are suitable for the marketplace. </note>
   <example>Proctor and Gamble recently acquired an electric toothbrush product, SpinBrush, from four 
   Cleveland area entrepreneurs. Out of a panel of twenty four consumers, twenty three raved about 
   the product. Sales have been sufficient to boost Proctor and Gamble to number 1 position in US oral care.</example>
    </def>
</definition>

<definition>
   <term id="ap233_validation event">validation event</term>
   <def>occurrence (with date, performer and result) of a comparison of a requirement against the 
   stakeholder needs
    </def>
</definition>

<definition>
   <term id="ap233_validation procedure">validation procedure</term>
   <def>describes the process used to compare a requirement against stakeholder needs
    <note>This is a requirement on the development organization and not on the system.</note>
    <note>The procedures may include stakeholder and market surveys, and test marketing</note>
    </def>
</definition>

<definition>
   <term id="ap233_validation infrastructure">validation infrastructure</term>
   <def>arrangement of requirement information and related infrastructure necessary to check the 
   correspondence with stakeholder needs and market realities
    </def>
</definition>

<definition>
   <term id="ap233_validation plan">validation plan</term>
   <def>the schedule of tasks, inputs, outputs, goals, and resources, both personnel and infrastructure 
   to perform the comparison of requirements against stakeholder needs
    </def>
</definition>

<definition>
   <term id="ap233_validation result">validation result</term>
   <def>describes the result of the validation event
    <note>Entire new product lines 
   have been abandoned after completed development because of unsatisfactory consumer panel 
   responses and unsatisfactory test marketing</note>
    </def>
</definition>

 <abbreviations>
   <abbreviation>
     <acronym>MOE</acronym>
     <term>Measure Of Effectiveness</term>
   </abbreviation>
 </abbreviations>



 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
<!-- <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
     <imgfile file="armexpg5.xml"/>
     <imgfile file="armexpg6.xml"/>
     <imgfile file="armexpg7.xml"/>
     <imgfile file="armexpg8.xml"/>
     <imgfile file="armexpg9.xml"/>
     <imgfile file="armexpg10.xml"/>
     <imgfile file="armexpg11.xml"/> -->
   </express-g>
 </arm>

 <!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <arm_lf>
   <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>

 <!-- Clause 5.1 Mapping specification 
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table> -->

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
    <shortnames>   
    <shortname name="DCEA" entity="ds_characterizable_executed_action"/>
    <shortname name="DCAR" entity="ds_characterizable_action_relationship"/>
    <shortname name="DSCHAD" entity="ds_characterizable_address"/>
    <shortname name="DCAA" entity="ds_characterizable_analysis_assignment"/>
    <shortname name="DCAAA" entity="ds_characterizable_applied_action_assignment"/>
    <shortname name="DCADR" entity="ds_characterizable_applied_document_reference"/>
    <shortname name="DCADUC" entity="ds_characterizable_applied_document_usage_constraint_assignment"/>
    <shortname name="DCAOA" entity="ds_characterizable_applied_organization_assignment"/>
    <shortname name="DCAPAO" entity="ds_characterizable_applied_person_and_organization_assignment"/>
    <shortname name="DCGP" entity="ds_characterizable_general_property"/>
    <shortname name="DCIUR" entity="ds_characterizable_information_usage_right"/>
    <shortname name="DCOP" entity="ds_characterizable_organizational_project"/>
    <shortname name="DSCHPR" entity="ds_characterizable_person"/>
    <shortname name="DCPAO" entity="ds_characterizable_person_and_organization"/>
    <shortname name="DSCO" entity="ds_characterizable_product"/>
    <shortname name="DCPC" entity="ds_characterizable_product_category"/>
    <shortname name="DCPD" entity="ds_characterizable_product_definition"/>
    <shortname name="DCPDF" entity="ds_characterizable_product_definition_formation"/>
    <shortname name="DCPDFR" entity="ds_characterizable_product_definition_formation_relationship"/>
    <shortname name="DCPDR" entity="ds_characterizable_property_definition_representation"/>
    <shortname name="DSDHRP" entity="ds_characterizable_representation"/>
    <shortname name="DCRC" entity="ds_characterizable_representation_context"/>
    <shortname name="DCRI" entity="ds_characterizable_representation_item"/>
    <shortname name="DCRS" entity="ds_characterizable_requirement_source"/>
    <shortname name="DCSC" entity="ds_characterizable_security_classification"/>
    <shortname name="DSCHVR" entity="ds_characterizable_verification"/>
    <shortname name="DCVE" entity="ds_characterizable_verification_evidence"/>
    </shortnames>   
 </mim>

 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <mim_lf>
   <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>


<!--   Begin Clause 6 TEST area  -->

<refdata>
<refdata_subclause title="Classifications of Requirement">
<p>There is no way to classify requirements in a way that would serve all applications equally well; 
however, there exists many useful classifications that serve generic applications within specific 
application domains.  For example, the requirements allocation problem is generic to systems 
engineering. </p>

<p>Relative to this systems engineering example, figure 6.1 shows 
<express_ref linkend="requirement_identification_and_version:arm:Requirement_identification_and_version_arm.Requirement"/> 
classifications for the purpose of allocation.. </p>

<figure id="f61" number="6.1" >
<title>Classification of requirements for the purpose of allocation</title>
<img src="ug_figure7.png"></img>
</figure>

<p>The following reference data classifications provide a useful way of classifying requirements 
for the purpose of creating a logically consistent model or description of a system. </p>

<refdata_subclause title="Effectiveness measure">
<p>An <b>Effectiveness measure</b> states an optimization condition that a system shall meet.</p>
</refdata_subclause>

<refdata_subclause title="Functional requirement">
<p>An <b>Functional requirement</b> states what the system shall be done by the system to which it is allocated.</p>
</refdata_subclause>

<refdata_subclause title="Imposed design requirement">
<p>An <b>Imposed design requirement</b> states particular elements that shall be used in the design of the system or part.</p>
</refdata_subclause>

<refdata_subclause title="Interface requirement">
<p>An <b>Interface requirement</b> states the characteristics of the interface to which it is assigned.</p>
</refdata_subclause>

<refdata_subclause title="Performance requirement">
<p>An <b>Performance requirement</b> states a time duration or a time probability for the completion of a functional
requirement or a function as a modeling element.</p>
</refdata_subclause>

<refdata_subclause title="Physical property requirement">
<p>An <b>Physical property requirement</b> states a physical property that shall be exhibited by the system or system assembly to which it is assigned.</p>
</refdata_subclause>

<refdata_subclause title="Reference requirement">
<p>An <b>Reference requirement</b> states a reference to a source of additional requirements that shall be met by the system or part.</p>
</refdata_subclause>

<refdata_subclause title="System requirement">
<p>A <b>System requirement</b> is a statement of properties that a system shall exhibit or shall not exhibit when completed.</p>
</refdata_subclause>

<refdata_subclause title="Validation requirement">
<p>An <b>Verification requirement</b> states how a system requirement, design or instance shall be shown by the development 
   organization to meet stakeholder needs.</p>
</refdata_subclause>

<refdata_subclause title="Verification requirement">
<p>An <b>Verification requirement</b> states how a system design or instance shall be shown by the development 
organization using test, analysis, inspection ,  demonstration, simulation, similarity, sampling, or other 
method to meet a requirement allocated to the system.</p>
</refdata_subclause>

<refdata_subclause title="Examples">
<example>
<p>The following shows how the requirement categorization elements would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement','ISO 10303-1140 Requirement identification and version module');
#2=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement','System_requirement',$,#1);
#3=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Effectiveness_measure','Effectiveness_measure',$,#1);
#4=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Functional_requirement','Functional_requirement',$,#1);
#5=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Imposed_design_requirement','Imposed_design_requirement',$,#1);
#6=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Interface_requirement','Interface_requirement',$,#1);
#7=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Performance_requirement','Performance_requirement',$,#1);
#8=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Physical_property_requirement','Physical_property_requirement',$,#1);
#9=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Reference_requirement','Reference_requirement',$,#1);
#10=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Validation_requirement','Validation_requirement',$,#1);
#11=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Verification_requirement','Verification_requirement',$,#1);
#12=CLASSIFICATION_ASSIGNMENT(#2,#13,$);
#13=REQUIREMENT( .... );
</screen>
</example>

<example>
<p>The following shows how the <b>Requirement</b> can be represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xml:base="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt; 
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Effectiveness_measure','Effectiveness_measure"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Functional_requirement','Functional_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Imposed_design_requirement','Imposed_design_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Interface_requirement','Interface_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Performance_requirement','Performance_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Physical_property_requirement','Physical_property_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Reference_requirement','Reference_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Validation_requirement','Validation_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Verification_requirement','Verification_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>

</refdata_subclause>
</refdata_subclause>

<refdata_subclause title="Classifications of Value with unit">
<p>Decision support for many applications relies on access to a variety of absolute and relative measures of 
property value. Within many application domains there exists useful classifications for focused purpose. 
For example within the domain of systems engineering a system evolves through a series of life cycle 
stages from concept to disposal. The following reference data classifications provide a useful way of 
classifying property values as the system evolves from stakeholder need to realization and delivery.</p>


<p>Relative to this systems engineering example, figure 6.2 shows <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.Value_with_unit"/>
classifications of property value useful for decision support. </p>

<figure id="f62" number="6.2" >
<title>Structure and physical property</title>
<img src="ug_figure5.png"></img>
</figure>

<p>In support of the systems engineering need to clearly distinguish between these decision support 
property value views,  <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.Value_with_unit"/> 
may be classified in order to specify its intended interpretation and usage. </p>


<refdata_subclause title="Calculated property value">
<p>A <b>Calculated property value</b> is a property value of a whole calculated or estimated from the values of the parts 
   that assemble to make the whole.</p>
</refdata_subclause>

<refdata_subclause title="Measured property value">
<p>A <b>Measured property value</b> is a property value established by measurement of an actual part.</p>
</refdata_subclause>

<refdata_subclause title="Required budgeted property  value">
<p>A <b>Required budgeted property  value</b> is a property value allocated to a part by a requirement, or budgeted to that part by analysis.</p>
</refdata_subclause>

<refdata_subclause title="Target budget property value">
<p>A <b>Target budget property value</b> is a temporary property value used by a designer as the design work proceeds and 
   different design alternatives are considered.</p>
</refdata_subclause>


<refdata_subclause title="Examples">
<example>
<p>The following shows how the budgeted property values would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit','ISO 10303-1054 Value with unit module');
#2=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Calculated_property_value','Calculated_property_value',$,#1);
#3=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Measured_property_value','Measured_property_value',$,#1);
#4=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Required_budgeted_property_value','Required_budgeted_property_value',$,#1);
#5=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Target_budget_property_value','Target_budget_property_value',$,#1);
#6=CLASSIFICATION_ASSIGNMENT(#2,#7,$);
#7=VALUE_WITH_UNIT( .... );
</screen>
</example>

<example>
<p>The following shows how the <b>Property_value</b> can be represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xml:base="urn:iso:std:iso:ts:10303:--1054:ed-2:en:tech:taxonomy:Value_with_unit"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Calculated_property_value"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Measured_property_value"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Required_budgeted_property_value"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Target_budget_property_value"/&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>

</refdata_subclause>
</refdata_subclause>

<refdata_subclause title="Classifications of Activity">
<p>There is no single standardized way of classifying activities across all possible applications; 
however, within many application domains there are useful classifications for focused purpose.
For example, within the systems engineering process there is a need to validate and verify.</p>

<p>Relative to this systems engineering example, figure 6.3 illustrates the verification process.</p>

<figure id="f63" number="6.3" >
<title>Verification</title>
<img src="ug_figure10.png"></img>
</figure>

<p>Relative to this systems engineering example, figure 6.4 illustrates the validation process.</p>

<figure id="f64" number="6.4" >
<title>Validation</title>
<img src="ug_figure11.png"></img>
</figure>

<p>In support of the systems engineering need to clearly distinguish between decision support activities,  
<express_ref linkend="activity:arm:Activity_arm.Activity"/> may be classified
in order to specify its intended interpretation and usage. </p>

<refdata_subclause title="Validation procedure">
<p>A <b>Validation procedure</b> describes the process used to compare a 
requirement against stakeholder needs.</p>
</refdata_subclause>

<refdata_subclause title="Verification procedure">
<p>A <b>Verification procedure</b> describes the process used to compare a 
requirement against the test, analysis, or inspection results of a design or 
instance of a system,</p>
</refdata_subclause>


<refdata_subclause title="Examples">
<example>
<p>The following shows how the decision support activities would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity','ISO 10303-1047 Activity module');
#2=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Validation_procedure','Verification_procedure',$,#1);
#3=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Verification_procedure','Validation_procedure',$,#1);
#4=CLASSIFICATION_ASSIGNMENT(#2,#5,$);
#5=ACTIVITY( .... );
</screen>
</example>

<example>
<p>The following shows how the <b>Decision_support_activity</b> can be represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xml:base="urn:iso:std:iso:ts:10303:--1047:ed-2:en:tech:taxonomy:Activity"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Verification_procedure"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Validation_procedure"/&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>


</refdata_subclause>
</refdata_subclause>

</refdata>
<!--       Begin Clause 6 TEST area -->  

<usage_guide>

	<p>Figure <module_ref linkend="decision_support:f_usage_guide:figure:AP233_arm_Concept_Map">F-1</module_ref> 
	shows the hierarchy of modules used to enable the decision support capability.</p> 
	
	<p>The following color code is used in all concept maps shown in this Annex:</p>
	<ul>
	<li>Orange implies a top level Wg3 implementation module;</li>
	<li>Yellow implies all USE FROM's are shown for the module identified;</li> 
	<li>Green implies more USE FROM's exist in the module identified;</li>
	<li>Blue identifies the extensible select type defined by the module shown;</li>
	<li>Pink implies a collection of modules.</li></ul> 
	
	<figure id="AP233_arm_Concept_Map" number="F-1">
	<title> AP233_arm_Concept_Map </title>
	<img src="cm_ap233.png"/>	
	</figure>
	
	<p>The capabilities associated with the decision support modules provide for:</p>

   <ol>
   <li>the interface to analysis;</li>
   <li>the documentation used to justify decisions;</li>
   <li>the data concerning verification and validation;</li>
   <li>the requirements along with information rights, documents, requirement sources, 
   classifications, effectivity, and requirement assignment;</li>
   <li>versioning and version relationships;</li>
   <li>the traceability and collection of requirements;</li>
   <li>trades studies with a measures of effectiveness decision support capability.</li>
   </ol>

   <p>Three arms are used to relate an interface to analysis. They are: 
   External_analysis_representation_arm, Analysis_assignment_arm, and 
   Analysis_characterized_arm. These arms store the data a tool user 
   needs to specify the equation to solve, where in the total system model  
   to pick up the needed 
   parameter values, and where to return the computed values. 
   This capability underlies all of performance 
   calculation, trade studies, and verification and validation. It is the 
   quantitative heart of systems engineering and AP233.</p>
   
   <p>Versioning and version relationships are needed not only by 
   requirements, but also by many other elements of the total system model. 
   Consequently they are defined once for an entity called “Product” and 
   then inherited from that entity through the software mechanism of 
   subclasses. The best way to think about product is as thing or anything. 
   Inconsequence, the versioning and version relationships are in an arm 
   called Requirement_identification_and_version that inherits from arms 
   Product_version_arm and then from Product_view_definition_arm.</p> 

   <p>The concepts of tracing among entities and collecting them into groups 
   is also pervasive. Consequently the traceability and collection of 
   requirements is supported by the Requirement_view_relationship_arm that 
   inherits from the Product_view_definition_relationship_arm. </p>

   <p>Trade studies are supported by the MOE (measure_of_effectiveness) arm. 
   It directly contains MOE’s, the direction of optimization (maximize or minimize) and the 
   regularization function. Because the application of numeric weights 
   to a collection of things is a general need in many places in AP233, 
   weights are connected via the EXPRESS interconnection mechanism of 
   type extensions. A similar mechanism is used to relate MOE’s to the 
   activity that is performed to generate the trade study. For similar 
   reasons the traceability among MOE’s and their collection into groups is 
   obtained by making them a subclass of requirement. This has the advantage 
   of using the EXPRESS language in a compact way to get the traceability 
   and collection features for MOE’s, but also to allow derived requirements 
   for a particular design solution to trace to the MOE’s and the trade 
   study that caused its selection.</p>
  

   	<p>The following modules provide top level decision support modelling support.</p>

	<ul>
        <li><module_ref linkend="activity_as_realized:introduction">
          Activity_as_realized_arm</module_ref>
        (ISO 10303-1459);</li>
	
	<li>
        <module_ref linkend="analysis_assignment:introduction">
          Analysis_assignment_arm</module_ref>
        (ISO 10303-1474);
	</li>
	
	<li>
        <module_ref linkend="analysis_characterized:introduction">
          Analysis_characterized_arm</module_ref>
        (ISO 10303-1475);
	</li>
	
	<li>
        <module_ref linkend="external_analysis_representation:introduction">
          External_analysis_representation_arm</module_ref>
        (ISO 10303-1784);
	</li>
	
	<li>
        <module_ref linkend="justification:introduction">
          Justification_arm</module_ref>
        (ISO 10303-1263);
	</li>
	
	<li>
        <module_ref linkend="measure_of_effectiveness:introduction">
          Measure_of_effectiveness_arm</module_ref>
        (ISO 10303-1478);
	</li>
	
	<li>
        <module_ref linkend="requirement_management:introduction">
          Requirement_management_arm</module_ref>
        (ISO 10303-1348);
	</li>
	
	<li>
        <module_ref linkend="verification_and_validation:introduction">
          Verification_and_validation_arm</module_ref>
        (ISO 10303-1488).
	</li>
	</ul>

	<p>The series of Concept maps to follow provide the next lower level of 
	USE FROM abstraction detail for these primary modules.  These provide a view 
	into the complexity of module USE FROM and extensible select networking.
	</p>
	
	<p>Figure <module_ref linkend="decision_support:f_usage_guide:figure:Project_concepts">F-2</module_ref>
	entitled <b>Project Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for requirements management and trade study via of measures 
	of effectiveness.  The primary modules that enable Ap233's 
	decision support capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="requirement_assignment:introduction">
          Requirement_assignment_arm</module_ref>
        (ISO 10303-1233);
	</li>

	<li>
        <module_ref linkend="requirement_view_definition_relationship:introduction">
          Requirement_view_definition_relationship_arm</module_ref>
        (ISO 10303-1142);
	</li>

	<li>
        <module_ref linkend="requirement_identification_and_version:introduction">
          Requirement_identification_and_version_arm</module_ref>
        (ISO 10303-1140).
	</li>
	</ul>
	
   	<figure id="Project_concepts" number="F-2">
	<title> Project Concepts  </title>
	<img src="cm_prj.png"/>	
	</figure>
	
	<p>Figure <module_ref linkend="decision_support:f_usage_guide:figure:How_concepts">F-3</module_ref>
	below entitled <b>How Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for analysis and verification and validation.  The primary modules that enable Ap233's 
	decision support capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="analysis_assignment:introduction">
          Analysis_assignment_arm</module_ref>
        (ISO 10303-1474);
	</li>

	<li>
        <module_ref linkend="analysis_identification:introduction">
          Analysis_identification_arm</module_ref>
        (ISO 10303-1476);
	</li>

	<li>
        <module_ref linkend="analysis_characterized:introduction">
          Analysis_characterized_arm</module_ref>
        (ISO 10303-1475);
	</li>
	
	<li>
        <module_ref linkend="verification_and_validation:introduction">
          Verification_and_validation_arm</module_ref>
        (ISO 10303-1488).
	</li>
	</ul>
	
   	<figure id="How_concepts" number="F-3">
	<title> How Concepts  </title>
	<img src="cm_how.png"/>	
	</figure>
	
	<p>Figure <module_ref linkend="decision_support:f_usage_guide:figure:Representation_concepts">F-4</module_ref>
	below entitled <b>Representation Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for analysis representation.  The primary modules that enable Ap233's 
	decision support capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="external_analysis_representation:introduction">
          External_analysis_representation_arm</module_ref>
        (ISO 10303-1784);
	</li>

	<li>
        <module_ref linkend="analysis_representation:introduction">
          Analysis_representation_arm</module_ref>
        (ISO 10303-1785);
	</li>

	<li>
        <module_ref linkend="foundation_representation:introduction">
          Foundation_representation_arm</module_ref>
        (ISO 10303-1006);
	</li>
	<li>
        <module_ref linkend="independent_property:introduction">
          Independent_property_arm</module_ref>
        (ISO 10303-1036).
	</li>
	</ul>
	
   	<figure id="Representation_concepts" number="F-4">
	<title> Representation Concepts  </title>
	<img src="cm_rep.png"/>	
	</figure>
	
	<p>Figure <module_ref linkend="decision_support:f_usage_guide:figure:Authorization_concepts">F-5</module_ref>
	below entitled <b>Authorization Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for justification representation.  The primary modules that enable Ap233's 
	decision support capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="justification:introduction">
          Justification_arm</module_ref>
        (ISO 10303-1784).
	</li>
	</ul>
	
   	<figure id="Authorization_concepts" number="F-5">
	<title> Authorization Concepts  </title>
	<img src="cm_aut.png"/>	
	</figure>
	
	<p>Figure <module_ref linkend="decision_support:f_usage_guide:figure:Activity_concepts">F-6</module_ref>
	below entitled <b>Activity Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for activity as realized representation.  The primary modules that enable Ap233's 
	decision support capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="activity_as_realized:introduction">
          Activity_as_realized_arm</module_ref>
        (ISO 10303-1259);
	</li>

	<li>
        <module_ref linkend="activity:introduction">
          Activity_arm</module_ref>
        (ISO 10303-1047);
	</li>

	<li>
        <module_ref linkend="activity_method:introduction">
          Activity_method_arm</module_ref>
        (ISO 10303-1049).
	</li>
	</ul>
	
   	<figure id="Activity_concepts" number="F-6">
	<title> Activity Concepts  </title>
	<img src="cm_act.png"/>	
	</figure>

</usage_guide>

</module>
