<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.25 2008/04/19 11:02:53 abhpf Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="decision_support"
   part="1486"
   version="1"
   sc4.working_group="3"
   wg.number="2278"
   wg.number.arm="2279"
   wg.number.mim="2280"
   wg.number.arm_lf="2281"
   wg.number.mim_lf="2282"
   checklist.internal_review="2356"
   checklist.project_leader="2357"
   checklist.convener="2355"
   status="CD-TS"
   language="E"
   publication.year=""
   publication.date=""
   published="n"
   rcs.date="$Date: 2008/04/19 11:02:53 $"
   rcs.revision="$Revision: 1.25 $"
   development.folder="dvlp">

 <keywords>
    module, requirements, systems engineering, trade studies, analysis, verification, validation, justification
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap233.projlead2"/>  
   <editor ref="ap233.editor2"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of decision support activities and information.
   </p>
   
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>items within the scope of application module <module_ref linkend="Requirement_management:1_scope"/>;</li>
   <li>items within the scope of application module <module_ref linkend="Justification:1_scope"/>;</li>
   <li>trade studies with measures of effectiveness;</li>
   <li>analysis and analysis representation;</li>
   <li>verification and validation;</li>
   <li>facility to assign activity information to decision support data;</li>
   <li>facility to assign authorization information to decision support data;</li>
   <li>facility to assign analysis and condition information to decision support data;</li>
   <li>facility to assign verification evidence information to decision support data;</li>
   <li>facility to assign activity information to decision support data;</li>
   <li>facility to assign project information to decision support data;</li>
   <li>facility to assign property information to decision support data;</li>
   <li>facility to assign date and time information to decision support data;</li>
   <li>facility to assign classification and identification information to decision support data;</li>
   <li>facility to assign person and organization information to decision support data;</li>
   <li>facility to assign documentation information to decision support data.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->
<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
<!--     <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
     <imgfile file="armexpg5.xml"/>
     <imgfile file="armexpg6.xml"/>
     <imgfile file="armexpg7.xml"/>
     <imgfile file="armexpg8.xml"/>
     <imgfile file="armexpg9.xml"/>
     <imgfile file="armexpg10.xml"/>
     <imgfile file="armexpg11.xml"/> -->
   </express-g>
 </arm>

 <!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <arm_lf>
   <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>

 <!-- Clause 5.1 Mapping specification 
 <mapping_table>
   <ae entity="xx"/>
 </mapping_table> -->

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
    <shortnames>   
    <shortname name="DCEA" entity="ds_characterizable_executed_action"/>
    <shortname name="DCAR" entity="ds_characterizable_action_relationship"/>
    <shortname name="DSCHAD" entity="ds_characterizable_address"/>
    <shortname name="DCAA" entity="ds_characterizable_analysis_assignment"/>
    <shortname name="DCAAA" entity="ds_characterizable_applied_action_assignment"/>
    <shortname name="DCADR" entity="ds_characterizable_applied_document_reference"/>
    <shortname name="DCADUC" entity="ds_characterizable_applied_document_usage_constraint_assignment"/>
    <shortname name="DCAOA" entity="ds_characterizable_applied_organization_assignment"/>
    <shortname name="DCAPAO" entity="ds_characterizable_applied_person_and_organization_assignment"/>
    <shortname name="DCGP" entity="ds_characterizable_general_property"/>
    <shortname name="DCIUR" entity="ds_characterizable_information_usage_right"/>
    <shortname name="DCOP" entity="ds_characterizable_organizational_project"/>
    <shortname name="DSCHPR" entity="ds_characterizable_person"/>
    <shortname name="DCPAO" entity="ds_characterizable_person_and_organization"/>
    <shortname name="DSCO" entity="ds_characterizable_product"/>
    <shortname name="DCPC" entity="ds_characterizable_product_category"/>
    <shortname name="DCPD" entity="ds_characterizable_product_definition"/>
    <shortname name="DCPDF" entity="ds_characterizable_product_definition_formation"/>
    <shortname name="DCPDFR" entity="ds_characterizable_product_definition_formation_relationship"/>
    <shortname name="DCPDR" entity="ds_characterizable_property_definition_representation"/>
    <shortname name="DSDHRP" entity="ds_characterizable_representation"/>
    <shortname name="DCRC" entity="ds_characterizable_representation_context"/>
    <shortname name="DCRI" entity="ds_characterizable_representation_item"/>
    <shortname name="DCRS" entity="ds_characterizable_requirement_source"/>
    <shortname name="DCSC" entity="ds_characterizable_security_classification"/>
    <shortname name="DSCHVR" entity="ds_characterizable_verification"/>
    <shortname name="DCVE" entity="ds_characterizable_verification_evidence"/>
    </shortnames>   
 </mim>

 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <mim_lf>
   <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>

 
   <usage_guide>
   
      		<figure> <title>Top level hierarchy of AP233 modules</title>
		<img src="Slide11.gif"/>	
		</figure>

   <p>Figure 1 above shows the hierarchy for the Decision_support_arm.  It provides 
   for.</p>
   
   <ol>
   <li>An Interface to analysis</li>

   <li>It contains three arms related to an interface to analysis. They are: 
   External_analysis_representation_arm, Analysis_assignment_arm, and 
   Analysis_characterized_arm. These arms store the data a tool user 
   needs to specify the equation he wishes to have solved, where in the 
   systems models to pick up the needed parameter values, and where to 
   return the computed values. This capability underlies all of performance 
   calculation, trade studies, and verification and validation. It is the 
   quantitative heart of systems engineering and AP233.</li>

   <li>It contains the arm that supports documentation for the justification 
   of decisions.</li>

   <li>It contains the arm for the data concerning verification and validation.</li>

   <li>It contains the Requirement_management_arm that supports information 
   rights, documents, requirement sources, classifications, effectivity, and 
   requirement assignment.</li>

   <li>Versioning and version relationships are needed not only by 
   requirements, but also by many other elements of the total system model. 
   Consequently they are defined once for an entity called “Product” and 
   then inherited from that entity through the software mechanism of 
   subclasses. The best way to think about Product is as Thing or Anything. 
   Inconsequence, The versioning and version relationships are in an arm 
   called Requirement_ID_and _version that inherits from arms 
   Product_version_arm and then from Product_view_definition_arm.</li> 

   <li>The concepts of tracing among entities and collecting them into groups 
   is also pervasive. Consequently the traceability and collection of 
   requirements is supported by the Requirement_view_relationship_arm that 
   inherits from the Product_view_definition_relationship_arm. </li>

   <li>Trade studies are supported by the MOE arm. It directly contains 
   MOE’s, the direction of optimization (maximize or minimize) and the 
   regularization function. Because the application of numeric weights 
   to a collection of things is a general need in many places in AP233, 
   weights are connected via the EXPRESS interconnection mechanism of 
   type extensions. A similar mechanism is used to relate MOE’s to the 
   activity that is performed to generate the trade study. For similar 
   reasons the traceability among MOE’s and their collection into groups is 
   obtained by making them a subclass of Requirement. This has the advantage 
   of using the EXPRESS language in a compact way to get the traceability 
   and collection features for MOE’s, but also to allow derived requirements 
   for a particular design solution to trace to the MOE’s and the trade 
   study that caused its selection.</li>
   </ol>
   
   <p><b>The concept maps provided below provide a more detail view of the modules used to enable 
   this decision support capability and their associated USE FROM connectivity.</b></p>

      	<p>The modules used and all of their associated USE FROM relationships for AP233 are shown 
	via a concept map in Figure 2 - AP233_arm_Concept_Map.  Code 
	yellow implies all USE FROM's are shown for the module identified, Code green implies more 
	USE FROM's exist in the 
	module identified, Code blue identifies the extensible select type defined by the
	module shown.  The next lower level of USE FROM concept map abstraction follow.  
	</p>

   
   	<figure><title> AP233_arm_Concept_Map  </title>
	<img src="AP233_arm_Concept_Map.gif"/>	
	</figure>

   	<p>The following modules have been developed to support AP233's decision support modeling needs. 
	All others shown support other AP233 capabilites.  These are discussed in Annex F if the AP233 
	implementation module which makes primary use of it. The primary
	modules used for AP233's Decision support capability are:
	</p>

	<ul>
        <li><module_ref linkend="activity_as_realized:introduction">
          Activity_as_realized_arm</module_ref>
        (ISO 10303-1459);</li>
	
	<li>
        <module_ref linkend="analysis_assignment:introduction">
          Analysis_assignment_arm</module_ref>
        (ISO 10303-1474);
	</li>
	
	<li>
        <module_ref linkend="analysis_characterized:introduction">
          Analysis_characterized_arm</module_ref>
        (ISO 10303-1475);
	</li>
	
	<li>
        <module_ref linkend="external_analysis_representation:introduction">
          External_analysis_representation_arm</module_ref>
        (ISO 10303-1784);
	</li>
	
	<li>
        <module_ref linkend="justification:introduction">
          Justification_arm</module_ref>
        (ISO 10303-1263);
	</li>
	
	<li>
        <module_ref linkend="measure_of_effectiveness:introduction">
          Measure_of_effectiveness_arm</module_ref>
        (ISO 10303-1478);
	</li>
	
	<li>
        <module_ref linkend="requirement_management:introduction">
          Requirement_management_arm</module_ref>
        (ISO 10303-1348);
	</li>
	
	<li>
        <module_ref linkend="verification_and_validation:introduction">
          Verification_and_validation_arm</module_ref>
        (ISO 10303-1488).
	</li>
	</ul>

	<p>The series of concepts that follow provide the next lower level of 
	USE FROM abstraction detail for these primary modules with some brief remarks 
	as to what are the modules most important to Decision support.</p>
	
	<p>Figure 3 below entitled <b>Project Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for requirements management and trade study via of measures 
	of effectiveness.  The primary modules shown here that have significant AP233 decision support 
	enabling capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="requirement_assignment:introduction">
          Requirement_assignment_arm</module_ref>
        (ISO 10303-1233);
	</li>

	<li>
        <module_ref linkend="requirement_view_definition_relationship:introduction">
          Requirement_view_definition_relationship_arm</module_ref>
        (ISO 10303-1142);
	</li>

	<li>
        <module_ref linkend="requirement_identification_and_version:introduction">
          Requirement_identification_and_version_arm</module_ref>
        (ISO 10303-1140).
	</li>
	</ul>
	
   	<figure><title> Project Concepts  </title>
	<img src="Project_concepts.gif"/>	
	</figure>
	
	<p>Figure 4 below entitled <b>How Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for analysis and verification and validation.  The primary 
	modules shown here that have signifcant AP233 decision support 
	enabling capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="analysis_assignment:introduction">
          Analysis_assignment_arm</module_ref>
        (ISO 10303-1474);
	</li>

	<li>
        <module_ref linkend="analysis_identification:introduction">
          Analysis_identification_arm</module_ref>
        (ISO 10303-1476);
	</li>

	<li>
        <module_ref linkend="analysis_characterized:introduction">
          Analysis_characterized_arm</module_ref>
        (ISO 10303-1475);
	</li>
	
	<li>
        <module_ref linkend="verification_and_validation:introduction">
          Verification_and_validation_arm</module_ref>
        (ISO 10303-1488).
	</li>
	</ul>
	
   	<figure><title> How Concepts  </title>
	<img src="How_concepts.gif"/>	
	</figure>
	
	<p>Figure 5 below entitled <b>Representation Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for analysis representation.  The primary 
	modules shown here that have significant AP233 decision support 
	enabling capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="external_analysis_representation:introduction">
          External_analysis_representation_arm</module_ref>
        (ISO 10303-1784);
	</li>

	<li>
        <module_ref linkend="analysis_representation:introduction">
          Analysis_representation_arm</module_ref>
        (ISO 10303-1785);
	</li>

	<li>
        <module_ref linkend="foundation_representation:introduction">
          Foundation_representation_arm</module_ref>
        (ISO 10303-1006);
	</li>
	<li>
        <module_ref linkend="independent_property:introduction">
          Independent_property_arm</module_ref>
        (ISO 10303-1036).
	</li>
	</ul>
	
   	<figure><title> Representation Concepts  </title>
	<img src="Representation_concepts.gif"/>	
	</figure>
	
	<p>Figure 6 below entitled <b>Authorization Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for justification representation.  The primary 
	modules shown here that have significant AP233 decision support 
	enabling capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="justification:introduction">
          Justification_arm</module_ref>
        (ISO 10303-1784).
	</li>
	</ul>
	
   	<figure><title> Authorization Concepts  </title>
	<img src="Authorization_concepts.gif"/>	
	</figure>
	
	<p>Figure 7 below entitled <b>Activity Concepts</b> includes the USE FROM relationships that
	enable AP233's capabilities for activity as realized representation.  The primary 
	modules shown here that have significant AP233 decision support 
	enabling capability are:</p>  
	
	<ul>
	<li>
        <module_ref linkend="activity_as_realized:introduction">
          Activity_as_realized_arm</module_ref>
        (ISO 10303-1259);
	</li>

	<li>
        <module_ref linkend="activity:introduction">
          Activity_arm</module_ref>
        (ISO 10303-1047);
	</li>

	<li>
        <module_ref linkend="activity_method:introduction">
          Activity_method_arm</module_ref>
        (ISO 10303-1049).
	</li>
	</ul>
	
   	<figure><title> Activity Concepts  </title>
	<img src="Activity_concepts.gif"/>	
	</figure>
	
	<p><b>Extensible type select lists</b></p>
	
	<p>The problem of creating extensible type lists has proven to be an extreme challenge.
	To explain what has been done a publish and subscribe analogy is used.</p>  
	<p>Schemas enable foundational capability which may be at the atomic or macro-molecular level.
	Schemas enable capabilities via entities that other capabilities can access by "subscription".
	The extensible type is the subscription list name. The list itself
	identifies all subscribers (entities).</p>  
	<p>The problem in STEP is that these lists are defined within schemas that have a domain  
	bounded by the capabilities of all schemas in its USE FROM list
	and those lists that it inherits.  On the bottom line, this creates a list creation problem 
	that is 3 dimensional. The dimensions are: bounded domain, entities and extensible types.  To 
	size this, AP233 has about 10 major bounded domains, 1000 entities and 100 extensible types.  
	If one does not apply any organizational logic to the problem this implies a need for 
	1,000,000 yes/no cognitive decisions to fully resolve the AP233 type extend problem.</p>
	
	<p>In order to penetrate this problem some logical approach that was both scalable and 
	checkable is required.  In AP233 WD1 all schemas where grouped into high level concept
	groups: program management resource information (pmri), organization structure (os),
	project breakdown (pb). schedule (ss) and work structure (ws).  As AP233 WD2 
	evolved major module restructuring occurred within AP233.  This lead to groupings 
	that are now in-line with the Annex F concept maps shown.  These groupings enable 
	the type extend problem to be broken
	down into scalable and checkable pieces that could be aggregate by a simple set union 
	to create the desired whole.  Significant redundancy is created and minimal attempt is 
	made to remove this.  All EXPRESS long form compilers will auto-remove these without
	the possibility of human error.</p>
   	
</usage_guide>

<!--   Begin Clause 6 TEST area  -->

<refdata>
<refdata_subclause title="Classifications of Requirement">
<p>There is no way to classify requirements in a way that would serve all applications equally well; 
however, there exists many useful classifications that serve generic applications within specific 
application domains.  For example, the requirements allocation problem is generic to systems 
engineering. </p>

<p>Relative to this systems engineering example, figure 6.1 shows 
<express_ref linkend="requirement_identification_and_version:arm:Requirement_identification_and_version_arm.Requirement"/> 
classifications for the purpose of allocation.. </p>

<figure id="f61" number="6.1" >
<title>Classification of requirements for the purpose of allocation</title>
<img src="ug_figure7.png"></img>
</figure>

<p>The following reference data classifications provide a useful way of classifying requirements 
for the purpose of creating a logically consistent model or description of a system. </p>

<refdata_subclause title="Effectiveness measure">
<p>An <b>Effectiveness measure</b> states an optimization condition that a system shall meet.</p>
</refdata_subclause>

<refdata_subclause title="Functional requirement">
<p>An <b>Functional requirement</b> states what the system shall be done by the system to which it is allocated.</p>
</refdata_subclause>

<refdata_subclause title="Imposed design requirement">
<p>An <b>Imposed design requirement</b> states particular elements that shall be used in the desiign of the system or part.</p>
</refdata_subclause>

<refdata_subclause title="Interface requirement">
<p>An <b>Interface requirement</b> states the characteristics of the interface to which it is assigned.</p>
</refdata_subclause>

<refdata_subclause title="Performance requirement">
<p>An <b>Performance requirement</b> states a time duration or a time probability for the completion of a functional
requirement or a function as a modeling element.</p>
</refdata_subclause>

<refdata_subclause title="Physical property requirement">
<p>An <b>Physical property requirement</b> states a physical property that shall be exhibited by the system or system assembly to which it is assigned.</p>
</refdata_subclause>

<refdata_subclause title="Reference requirement">
<p>An <b>Reference requirement</b> states a reference to a source of additional requirements that shall be met by the system or part.</p>
</refdata_subclause>

<refdata_subclause title="System requirement">
<p>A <b>System requirement</b> is a statement of properties that a system shall exhibit or shall not exhibit when completed.</p>
</refdata_subclause>

<refdata_subclause title="Validation requirement">
<p>An <b>Verification requirement</b> states how a system requirement, design or instance shall be shown by the development 
   organization to meet stakeholder needs.</p>
</refdata_subclause>

<refdata_subclause title="Verification requirement">
<p>An <b>Verification requirement</b> states how a system design or instance shall be shown by the development 
organization using test, analysis, inspection ,  demonstration, simulation, similarity, sampling, or other 
method to meet a requirement allocated to the system.</p>
</refdata_subclause>

<refdata_subclause title="Examples">
<example>
<p>The following shows how the requirement categorization elements would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement','ISO 10303-1140 Requirement identification and version module');
#2=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement','System_requirement',$,#1);
#3=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Effectiveness_measure','Effectiveness_measure',$,#1);
#4=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Functional_requirement','Functional_requirement',$,#1);
#5=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Imposed_design_requirement','Imposed_design_requirement',$,#1);
#6=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Interface_requirement','Interface_requirement',$,#1);
#7=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Performance_requirement','Performance_requirement',$,#1);
#8=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Physical_property_requirement','Physical_property_requirement',$,#1);
#9=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Reference_requirement','Reference_requirement',$,#1);
#10=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Validation_requirement','Validation_requirement',$,#1);
#11=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Verification_requirement','Verification_requirement',$,#1);
#12=CLASSIFICATION_ASSIGNMENT(#2,#13,$);
#13=REQUIREMENT( .... );
</screen>
</example>

<example>
<p>The following shows how the <b>Requirement</b> can be represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xml:base="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt; 
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Effectiveness_measure','Effectiveness_measure"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Functional_requirement','Functional_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Imposed_design_requirement','Imposed_design_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Interface_requirement','Interface_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Performance_requirement','Performance_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Physical_property_requirement','Physical_property_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Reference_requirement','Reference_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Validation_requirement','Validation_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
    &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#Verification_requirement','Verification_requirement"&gt;
    &lt;rdfs:subClassOf rdf:resource="urn:iso:std:iso:ts:10303:-1140:ed-2:en:tech:taxonomy:Requirement#System_requirement"/&gt;
  &lt;/owl:Class&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>

</refdata_subclause>
</refdata_subclause>

<refdata_subclause title="Classifications of Value with unit">
<p>Decision support for many applications relies on access to a variety of absolute and relative measures of 
property value. Within many application domains there exists useful classifications for focused purpose. 
For example within the domain of systems engineering a system evolves through a series of life cycle 
stages from concept to disposal. The following reference data classifications provide a useful way of 
classifying property values as the system evolves from stakeholder need to realization and delivery.</p>


<p>Relative to this systems engineering example, figure 6.2 shows <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.Value_with_unit"/>
classifications of property value useful for decision support. </p>

<figure id="f62" number="6.2" >
<title>Structure and physical property</title>
<img src="ug_figure5.png"></img>
</figure>

<p>In support of the systems engineering need to clearly distinguish between these decision support 
property value views,  <express_ref linkend="value_with_unit:arm:Value_with_unit_arm.Value_with_unit"/> 
may be classified in order to specify its intended interpretation and usage. </p>


<refdata_subclause title="Calculated property value">
<p>A <b>Calculated property value</b> is a property value of a whole calculated or estimated from the values of the parts 
   that assemble to make the whole.</p>
</refdata_subclause>

<refdata_subclause title="Measured property value">
<p>A <b>Measured property value</b> is a property value established by measurement of an actual part.</p>
</refdata_subclause>

<refdata_subclause title="Required budgeted property  value">
<p>A <b>Required budgeted property  value</b> is a property value allocated to a part by a requirement, or budgeted to that part by analysis.</p>
</refdata_subclause>

<refdata_subclause title="Target budget property value">
<p>A <b>Target budget property value</b> is a temporary property value used by a designer as the design work proceeds and 
   different design alternatives are considered.</p>
</refdata_subclause>


<refdata_subclause title="Examples">
<example>
<p>The following shows how the budgeted property values would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit','ISO 10303-1054 Value with unit module');
#2=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Calculated_property_value','Calculated_property_value',$,#1);
#3=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Measured_property_value','Measured_property_value',$,#1);
#4=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Required_budgeted_property_value','Required_budgeted_property_value',$,#1);
#5=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Target_budget_property_value','Target_budget_property_value',$,#1);
#6=CLASSIFICATION_ASSIGNMENT(#2,#7,$);
#7=VALUE_WITH_UNIT( .... );
</screen>
</example>

<example>
<p>The following shows how the <b>Property_value</b> can be represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xml:base="urn:iso:std:iso:ts:10303:--1054:ed-2:en:tech:taxonomy:Value_with_unit"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Calculated_property_value"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Measured_property_value"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Required_budgeted_property_value"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1054:ed-2:en:tech:taxonomy:Value_with_unit#Target_budget_property_value"/&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>

</refdata_subclause>
</refdata_subclause>

<refdata_subclause title="Classifications of Activity">
<p>There is no single standardized way of classifying activities across all possible applications; 
however, within many application domains there are useful classifications for focused purpose.
For example, within the systems engineering process there is a need to validate and verify.</p>

<p>Relative to this systems engineering example, figure 6.3 illustrates the verification process.</p>

<figure id="f63" number="6.3" >
<title>Verification</title>
<img src="ug_figure10.png"></img>
</figure>

<p>Relative to this systems engineering example, figure 6.4 illustrates the validation process.</p>

<figure id="f64" number="6.4" >
<title>Validation</title>
<img src="ug_figure11.png"></img>
</figure>

<p>In support of the systems engineering need to clearly distinguish between decision support activities,  
<express_ref linkend="activity:arm:Activity_arm.Activity"/> may be classified
in order to specify its intended interpretation and usage. </p>

<refdata_subclause title="Validation procedure">
<p>A <b>Validation procedure</b> describes the process used to compare a 
requirement against stakeholder needs.</p>
</refdata_subclause>

<refdata_subclause title="Verification procedure">
<p>A <b>Verification procedure</b> describes the process used to compare a 
requirement against the test, analysis, or inspection results of a design or 
instance of a system,</p>
</refdata_subclause>


<refdata_subclause title="Examples">
<example>
<p>The following shows how the decision support activities would appear in an ISO 10303-21 instance data file.</p>
<screen>
#1=EXTERNAL_CLASS_LIBRARY('urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity','ISO 10303-1047 Activity module');
#2=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Validation_procedure','Verification_procedure',$,#1);
#3=EXTERNAL_CLASS('urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Verification_procedure','Validation_procedure',$,#1);
#4=CLASSIFICATION_ASSIGNMENT(#2,#5,$);
#5=ACTIVITY( .... );
</screen>
</example>

<example>
<p>The following shows how the <b>Decision_support_activity</b> can be represented using an OWL ontology and the related RDF/XML Abbreviated syntax.</p>
<screen>
&lt;?xml version="1.0"?&gt;
&lt;rdf:RDF
    xmlns="urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xml:base="urn:iso:std:iso:ts:10303:--1047:ed-2:en:tech:taxonomy:Activity"&gt;
  &lt;owl:Ontology rdf:about=""/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Verification_procedure"/&gt;
  &lt;owl:Class rdf:about="urn:iso:std:iso:ts:10303:-1047:ed-2:en:tech:taxonomy:Activity#Validation_procedure"/&gt;
&lt;/rdf:RDF&gt;
</screen>
</example>


</refdata_subclause>
</refdata_subclause>

</refdata>

<!--       Begin Clause 6 TEST area -->  

</module>

