<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.56 2017/04/26 15:59:15 kevletu Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module xmlns:xlink="http://www.w3.org/1999/xlink" 
	name="design_specific_assignment_to_assembly_usage_view" 
	name.french="Attribution sp&#233;cifique de conception &#224; la vue d'utilisation de l'assemblage"
	part="1662" version="4" sc4.working_group="12" 
	wg.number="9551" 
	wg.number.arm="9552" 
	wg.number.mim="8126" 
	wg.number.supersedes="8124" 
	wg.number.arm.supersedes="8125" 
	wg.number.mim.supersedes="7530" 
	checklist.internal_review="6566" 
	checklist.project_leader="6567" 
	checklist.convener="6568" 
	status="TS" 
	language="E" 
   publication.year="2017-07"
   publication.date="2017-07-30"
	published="y"  
	previous.revision.year="2014-02" previous.revision.cancelled="NO" revision.complete="YES" 
	rcs.date="$Date: 2017/04/26 15:59:15 $" rcs.revision="$Revision: 1.56 $" development.folder="dvlp">

 <keywords>
    module, component feature, part feature, component terminal, swap, assembly usage view, assembly, interface control document, catalog
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 <abstract>
	 <p>
		 the
     representation of the assignment of component terminals in a 
assembly design view to part terminals in the assembly usage view.
	     This provides the ability for
	   a design organization to explicitly manage the relationships between the externally published information 
	   typically found in legacy systems in an interface control document or catalog and the detailed design items that are the internal
	   implementation of those externally visible features.  This module provides the ability for the design organization 
		 to manage the information using standard models in a database application.
	 </p>
      <li>assignment of component terminals in an assembly design to part features in the usage view of the assembly.</li>
 </abstract>

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>
 
 <changes>
 	<change version="2">
 		<arm.changes>
 			<arm.modifications>
 				<modified.object type="SUBTYPE_CONSTRAINT" name="dsatauv_component_feature_to_physical_usage_view_assignment_subtypes" />
 				<modified.object type="TYPE" name="pca_interface_select" >
 					<description>
 						renamed to layered_assembly_module_interface_select
 					</description>
 				</modified.object>
 				<modified.object type="ENTITY" name="Component_terminal_to_assembly_module_interface_terminal_assignment" />
 				<modified.object type="ENTITY" name="Component_terminal_to_pca_terminal_assignment">
 					<description>
 						renamed to Component_terminal_to_layered_assembly_module_terminal_assignment
 					</description>
 				</modified.object>
 			</arm.modifications>
 		</arm.changes>
 	</change>
 	
 	<change version="3">
 		<description>
 			The definitions of the following ARM EXPRESS declarations and interface specifications were modified:
 			<ul>
 				<li>ENTITY Component_terminal_to_assembly_module_interface_terminal_assignment;</li>
 				<li>ENTITY Component_terminal_to_layered_assembly_module_terminal_assignment.</li>
 			</ul>
 		</description> 	
 		<arm.changes>
 			<arm.modifications>
 				<modified.object type="TYPE" name="layered_assembly_module_interface_select" />
 			</arm.modifications>
 		</arm.changes>	
 	</change>
 	<change version="4">
 		<description>Updated HTML link for moved ARM entity to another module</description>
 	</change>
 </changes>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of the assignment of component terminals in a 
assembly design view to part terminals in the assembly usage view.
	     This provides the ability for
	   a design organization to explicitly manage the relationships between the externally published information 
	   typically found in legacy systems in an interface control document or catalog and the detailed design items that are the internal
	   implementation of those externally visible features.
   </p>
 
 </purpose>

 <!-- Items in scope -->
 <inscope>
      <li>assignment of component terminals in an assembly design to part features in the usage view of the assembly;</li>
      <li>items within the scope of application module <module_ref linkend="assembly_module_with_interconnect_component:1_scope">Assembly module with interconnect component</module_ref>, ISO/TS 10303-1643;</li>
      <li>items within the scope of application module <module_ref linkend="assembly_module_with_subassembly:1_scope">Assembly module with subassembly</module_ref>, ISO/TS 10303-1641.</li>
   </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>assignment of features that are not terminals.</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Component_terminal_to_assembly_module_interface_terminal_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
[shape_aspect_relationship.name = 'component feature to physical usage assignment']
[shape_aspect_relationship.description = 'component terminal to assembly module interface terminal assignment']}
</refpath>
            <aa attribute="assigned_terminal" assertion_to="Assembly_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'assembly module component terminal'}
shape_aspect =&gt;
component_feature =&gt;
component_terminal =&gt;
physical_component_terminal
</refpath>
            </aa>
            <aa attribute="usage_view_terminal" assertion_to="Assembly_module_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape
product_definition_shape &lt;=
property_definition
{property_definition.name = 'assembly module'}}
shape_aspect =&gt;
assembly_module_terminal =&gt;
assembly_module_interface_terminal
</refpath>
            </aa>

            <aa attribute="assigned_terminal" assertion_to="Packaged_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
(shape_aspect.description = 'packaged component join terminal')
(shape_aspect.description = 'movable packaged component join terminal')}
shape_aspect =&gt;
component_feature =&gt;
component_terminal =&gt;
physical_component_terminal
</refpath>
            </aa>

            <aa attribute="assigned_terminal" assertion_to="Physical_component_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
(shape_aspect.description = 'interconnect component interface terminal')
(shape_aspect.description = 'packaged connector component interface terminal')}
shape_aspect =&gt;
component_feature =&gt;
physical_component_feature =&gt;
physical_component_interface_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Interconnect_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'interconnect module component terminal'}
shape_aspect =&gt;
component_feature =&gt;
component_terminal =&gt;
physical_component_terminal
</refpath>
            </aa>
        </ae>
    <ae entity="Component_terminal_to_layered_assembly_module_terminal_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
[shape_aspect_relationship.name = 'component feature to physical usage assignment']
[shape_aspect_relationship.description = 'component terminal to layered assembly module terminal assignment']}
</refpath>
            <aa attribute="assigned_terminal" assertion_to="Assembly_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'assembly module component terminal'}
shape_aspect =&gt;
component_feature =&gt;
component_terminal =&gt;
physical_component_terminal
</refpath>
            </aa>
            
 <aa attribute="assigned_terminal" assertion_to="Packaged_component_join_terminal">
   <aimelt xml:space="preserve">PATH</aimelt>
   <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
(shape_aspect.description = 'packaged component join terminal')
(shape_aspect.description = 'movable packaged component join terminal')}
shape_aspect =&gt;
component_feature =&gt;
component_terminal =&gt;
physical_component_terminal
</refpath>
            </aa>
                        
            <aa attribute="assigned_terminal" assertion_to="Physical_component_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
(shape_aspect.description = 'interconnect component interface terminal')
(shape_aspect.description = 'packaged connector component interface terminal')}
shape_aspect =&gt;
component_feature =&gt;
physical_component_feature =&gt;
physical_component_interface_terminal

</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Interconnect_module_component_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'interconnect module component terminal'}
shape_aspect =&gt;
component_feature =&gt;
component_terminal =&gt;
physical_component_terminal
</refpath>
            </aa>
            <aa attribute="usage_view_terminal" assertion_to="Layered_assembly_module_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'layered assembly module terminal'}
shape_aspect =&gt;
assembly_module_terminal
</refpath>
            </aa>
        </ae>
		<sc constraint="dsatauv_component_feature_to_physical_usage_view_assignment_subtypes" entity="Component_feature_to_physical_usage_view_assignment">
			<description>
				All members of this constraint maps to entity <express_ref linkend="product_property_definition_schema:ir_express:product_property_definition_schema.shape_aspect_relationship"/> with additional constraints in the mapping.
				All of them require UNIQUE string for <express_ref linkend="product_property_definition_schema:ir_express:product_property_definition_schema.shape_aspect_relationship"/>.<express_ref linkend="product_property_definition_schema:ir_express:product_property_definition_schema.shape_aspect_relationship.description"/>, so ONEOF subtype constraint from ARM is guaranteed as not violated.
			</description>
			<constraint>
			shape_aspect_relationship
			</constraint>
			<source xml:space="preserve">
			ISO 10303-41
			</source>
		</sc>
		<sc constraint="dsatauv_physical_component_terminal_subtypes" entity="Physical_component_terminal">
			<description>
				All members of this constraint maps to entity <express_ref linkend="Physical_component_feature:mim:Physical_component_feature_mim.physical_component_terminal"/> with additional constraints in the mapping.
				All of them require UNIQUE string for <express_ref linkend="product_property_definition_schema:ir_express:product_property_definition_schema.shape_aspect"/>.<express_ref linkend="product_property_definition_schema:ir_express:product_property_definition_schema.shape_aspect.description"/>, so ONEOF subtype constraint from ARM is guaranteed as not violated.
			</description>
			<constraint>
			dsatauv_physical_component_terminal
			</constraint>
			<source xml:space="preserve">
			ISO 10303-1721
			</source>
		</sc>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
