<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.3 2004/11/30 16:45:52 budreckytej Exp $ -->
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      --><!DOCTYPE module SYSTEM "../../../dtd/module.dtd">

<module name="design_specific_assignment_to_interconnect_usage_view" part="xxxx" version="1" sc4.working_group="12" wg.number="00000" wg.number.arm="" wg.number.mim="" checklist.internal_review="" checklist.project_leader="" checklist.convener="" status="CD-TS" language="E" publication.year="" published="n" rcs.date="$Date: 2004/11/30 16:45:52 $" rcs.revision="$Revision: 1.3 $" development.folder="dvlp" xmlns:xlink="http://www.w3.org/1999/xlink">

 <keywords>
    module
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->
 

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of 
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>xxxxx</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>xxxx</li>
 </outscope>

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   <imgfile file="armexpg2.xml"/>
        </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Component_terminal_to_interconnect_module_interface_terminal_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
[shape_aspect_relationship.name = 'component feature to physical usage assignment']
[shape_aspect_relationship.description = 'component terminal to interconnect module interface terminal assignment']}
</refpath>
            <aa attribute="assigned_terminal" assertion_to="Component_termination_passage_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'component termination passage interface terminal'}
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
            <aa attribute="usage_view_terminal" assertion_to="Interconnect_module_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition
product_definition.name = 'interconnect module'}
shape_aspect =&gt;
interconnect_module_terminal =&gt;
interconnect_module_interface_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Component_termination_passage_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'component termination passage interface terminal'}
shape_aspect =&gt;
laminate_component_interface_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Land_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'land interface terminal'}
shape_aspect =&gt;
laminate_component_interface_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Non_functional_land_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'non functional land interface terminal'}
shape_aspect =&gt;
laminate_component_interface_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Printed_connector_component_interface_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'printed connector component interface terminal'}
shape_aspect =&gt;
laminate_component_interface_terminal
</refpath>
            </aa>
        </ae>
    <ae entity="Component_terminal_to_interconnect_module_join_terminal_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
[shape_aspect_relationship.name = 'component feature to physical usage assignment']
[shape_aspect_relationship.description = 'component terminal to interconnect module join terminal assignment']}
</refpath>
            <aa attribute="assigned_terminal" assertion_to="Component_termination_passage_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'component termination passage join terminal'}
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
            <aa attribute="usage_view_terminal" assertion_to="Interconnect_module_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition
product_definition.name = 'interconnect module'}
shape_aspect =&gt;
interconnect_module_terminal =&gt;
interconnect_module_join_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Interconnect_module_macro_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'interconnect module component terminal'}
shape_aspect =&gt;
component_terminal =&gt;
interconnect_module_macro_component_join_terminal
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Land_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;

{shape_aspect
shape_aspect.description = 'land join terminal'}
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
            <aa attribute="assigned_terminal" assertion_to="Printed_component_join_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'printed component join terminal'}
shape_aspect =&gt;
component_shape_aspect
</refpath>
            </aa>
        </ae>
    <ae entity="Stratum_concept_to_physical_usage_view_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'stratum concept to physical usage view assignment'}
</refpath>
            <aa attribute="purpose">
                <aimelt xml:space="preserve">shape_aspect_relationship.description</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve"/>
            </aa>
            <aa attribute="defined_part_feature" assertion_to="Part_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
shape_aspect
{([shape_aspect =&gt;
composite_shape_aspect]
[shape_aspect
shape_aspect.description = 'part group feature'])
(shape_aspect.description = 'part generic feature')
(shape_aspect.description = 'polarity indication feature')
(shape_aspect.description = 'interconnect module cavity surface')
(shape_aspect.description = 'interconnect module cutout surface')
(shape_aspect.description = 'interconnect module edge segment surface')
(shape_aspect.description = 'interconnect module edge surface')
(shape_aspect.description = 'interconnect module primary surface')
(shape_aspect.description = 'interconnect module secondary surface')
(shape_aspect.description = 'interconnect module surface feature')
(shape_aspect =&gt;
primary_orientation_feature)
(shape_aspect =&gt;
secondary_orientation_feature)
(shape_aspect =&gt; 
package_body)
(shape_aspect =&gt; 
part_tooling_feature)
(shape_aspect =&gt;
functional_orientation_feature)
(shape_aspect =&gt; 
thermal_feature)
(shape_aspect =&gt; 
part_mounting_feature)
(shape_aspect =&gt; 
package_terminal)
(shape_aspect =&gt; 
assembly_module_terminal)
(shape_aspect =&gt; 
interconnect_module_terminal)
(shape_aspect =&gt; 
minimally_defined_bare_die_terminal)
(shape_aspect =&gt; 
packaged_part_terminal)
(shape_aspect =&gt; 
package_body_surface)}
</refpath>
            </aa>
            <aa attribute="assigned_design_object" assertion_to="Inter_stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
component_shape_aspect =&gt;
inter_stratum_feature
</refpath>
            </aa>
            <aa attribute="assigned_design_object" assertion_to="Laminate_component">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
{[(shape_aspect =&gt;
component_shape_aspect =&gt;
(inter_stratum_feature)
(land)
(fiducial)
(probe_access_area)
(material_removal_component_shape_aspect))
(shape_aspect
{shape_aspect.description = 'laminate text string component'} =&gt;
component_shape_aspect =&gt;
assembly_group_component_shape_aspect =&gt;
array_placement_group_component_shape_aspect)
(shape_aspect
{(shape_aspect.description = 'laminate component')
(shape_aspect.description = 'part template occurrence')
(shape_aspect.description = 'conductive interconnect element with pre defined transitions')
(shape_aspect.description = 'join 2 physical connectivity definition supporting')
(shape_aspect.description = 'conductive interconnect element with user defined single transition')
(shape_aspect.description = 'unrouted conductive interconnect element')
(shape_aspect.description = 'laminate text component')
(shape_aspect.description = 'primary stratum indicator symbol')
(shape_aspect.description = 'routed interconnect component')
(shape_aspect.description = 'special symbol laminate component')
(shape_aspect.description = 'stratum feature template component')})]
[shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
{product_definition.description = 'laminate component'}]}
</refpath>
            </aa>
            <aa attribute="assigned_design_object" assertion_to="Stratum">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect
!{(shape_aspect =&gt;
stratum_surface)
(shape_aspect =&gt;
stratum_feature)}
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
product_definition =&gt;
stratum
</refpath>
            </aa>
            <aa attribute="assigned_design_object" assertion_to="Stratum_feature">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
stratum_feature
</refpath>
            </aa>
            <aa attribute="assigned_design_object" assertion_to="Stratum_surface">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
stratum_surface
</refpath>
            </aa>
        </ae>
    </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
