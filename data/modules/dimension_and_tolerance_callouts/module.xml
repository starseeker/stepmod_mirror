<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.4 2006/02/16 19:48:18 thendrix Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="dimension_and_tolerance_callouts"
   name.french="&#233;bauche explicite"
   part="1362"
   version="1"
   sc4.working_group="12"
   wg.number="4336"
   wg.number.arm="4337"
   wg.number.mim="4338"
   checklist.internal_review="4343"
   checklist.project_leader="4344"
   checklist.convener="4346"
   status="CD-TS"
   language="E"
   publication.year="2006"
   publication.date="2006-09-01"
   published="n"
   rcs.date="$Date: 2006/02/16 19:48:18 $"
   rcs.revision="$Revision: 1.4 $"
   development.folder="dvlp">

 <keywords>
    module, draughting, annotation elements, drawing, drawing organization, drawing sheet, views, symbols, callout, dimension, tolerance, datum
 </keywords>


 <contacts>
   <projlead ref="ap203ed2.projlead"/>
   <editor ref="ap203ed2.editor"/>
 </contacts>
 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of draughting elements in an explicit form used in technical drawings or in spatially annotated models. Additionally, it defines the organizational structure and management data for technical drawings.
   </p><p>
This UoF is based on ISO 10303-201 and establishes the information requirements for the exchange of part definition data in the form of CAD drawings with explicit annotation. Annotation elements are either defined in a two-dimensional coordinate system, related to the area or view, or in the same coordinate system as the geometry which may be two- or three-dimensional. The annotation elements themselves are always planar.
</p>
<p>This UoF also provides the objects needed for the management of drawing sheets, drawing views, symbols, and dimensioning. 
</p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>the representation of annotation elements in an explicit form used in technical drawings and annotated geometric models;</li>
   <li>the representation of annotation elements for dimension and dimensional tolerance callouts;</li>
   <li>the representation of annotation elements for geometric tolerance and datum feature  callouts;</li>
   <li>the representation of annotation elements for surface condition callout.</li>
 </inscope>
<outscope>
<li>associativity of annotation elements other than text.</li></outscope>


<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
<mapping_table> <!--  ++  DATUM_FEATURE_CALLOUT  ++ -->
<ae entity="Datum_feature_callout">
<aimelt>datum_feature_callout</aimelt>
<source>ISO 10303-506</source>
</ae> <!--  ++  DATUM_TARGET_CALLOUT  ++ -->
<ae entity="Datum_target_callout">
<aimelt>datum_target_callout</aimelt>
<source>ISO 10303-506</source>
</ae> <!--  ++  DIMENSION  ++ -->
<ae entity="Dimension">
<aimelt>(angular_dimension)
(curve_dimension)
(diameter_dimension)
(leader_directed_dimension)
(linear_dimension)
(ordinate_dimension)
(radius_dimension)
</aimelt>
<source>ISO 10303-506</source>
<refpath>(angular_dimension &lt;=
dimension_curve_directed_callout)
(curve_dimension &lt;=
dimension_curve_directed_callout)
(diameter_dimension &lt;=
dimension_curve_directed_callout )
(leader_directed_dimension &lt;=
leader_directed_callout)
(linear_dimension &lt;=
dimension_curve_directed_callout)
(ordinate_dimension &lt;=
projection_directed_callout)
(radius_dimension &lt;=
dimension_curve_directed_callout)</refpath>
<aa attribute="id">
<aimelt>representation_item.name</aimelt>
<source>ISO 10303-43</source>
<refpath>(angular_dimension &lt;= dimension_curve_directed_callout)
(curve_dimension &lt;= dimension_curve_directed_callout)
(diameter_dimension &lt;= dimension_curve_directed_callout)
(leader_directed_dimension &lt;= leader_directed_callout)
(linear_dimension &lt;= dimension_curve_directed_callout)
(ordinate_dimension &lt;= projection_directed_callout)
(radius_dimension &lt;= dimension_curve_directed_callout)
&lt;=
draughting_callout &lt;=
{draughting_callout =>
draughting_elements}
geometric_representation_item &lt;=
representation_item 
representation_item.name</refpath>
</aa>
<aa attribute="primary_callout" assertion_to="Dimension_callout">
<aimelt>PATH</aimelt>
<refpath>((angular_dimension &lt;= dimension_curve_directed_callout 
dimension_curve_directed_callout &lt;= draughting_callout)
(curve_dimension &lt;= dimension_curve_directed_callout 
dimension_curve_directed_callout &lt;= draughting_callout)
(diameter_dimension &lt;= dimension_curve_directed_callout
dimension_curve_directed_callout &lt;= draughting_callout)
(leader_directed_dimension &lt;= leader_directed_callout 
leader_directed_callout &lt;= draughting_callout)
(linear_dimension &lt;= dimension_curve_directed_callout 
dimension_curve_directed_callout &lt;= draughting_callout)
(ordinate_dimension &lt;= projection_directed_callout
projection_directed_callout &lt;= draughting_callout)
(radius_dimension &lt;= dimension_curve_directed_callout 
dimension_curve_directed_callout &lt;= draughting_callout)
draughting_callout &lt;-
{draughting_callout =>
draughting_elements}
draughting_callout_relationship.relating_draughting_callout
draughting_callout_relationship
{draughting_callout_relationship =>
dimension_callout_relationship}
{draughting_callout_relationship.name = 'primary'}
draughting_callout_relationship.related_draughting_callout ->
draughting_callout)</refpath>
</aa>
<aa attribute="secondary_callout" assertion_to="Dimension_callout">
  <alt_map id="1"><description>If the callout is not structured.</description>
<aimelt>PATH</aimelt>
<refpath>((angular_dimension &lt;=
dimension_curve_directed_callout &lt;= 
draughting_callout)
(curve_dimension &lt;=
dimension_curve_directed_callout &lt;= 
draughting_callout)
(diameter_dimension &lt;=
dimension_curve_directed_callout &lt;= 
draughting_callout)
(leader_directed_dimension &lt;=
leader_directed_callout &lt;= 
draughting_callout)
(linear_dimension &lt;=
dimension_curve_directed_callout &lt;= 
draughting_callout)
(ordinate_dimension &lt;=
projection_directed_callout &lt;= 
draughting_callout)
(radius_dimension &lt;=
dimension_curve_directed_callout &lt;= 
draughting_callout)
draughting_callout &lt;-
{draughting_callout =>
draughting_elements}
draughting_callout_relationship.relating_draughting_callout
draughting_callout_relationship
{draughting_callout_relationship =>
dimension_callout_relationship}
{draughting_callout_relationship.name = 'primary'}
draughting_callout_relationship.related_draughting_callout ->
draughting_callout =>
draughting_elements)</refpath>
  </alt_map>
  <alt_map id="2"><description>If the callout is  structured.</description>
<aimelt>PATH</aimelt>
<refpath>((angular_dimension &lt;=
dimension_curve_directed_callout &lt;= draughting_callout)
(curve_dimension &lt;=
dimension_curve_directed_callout &lt;= draughting_callout)
(diameter_dimension &lt;=
dimension_curve_directed_callout &lt;= draughting_callout)
(leader_directed_dimension &lt;=
leader_directed_callout &lt;= draughting_callout)
(linear_dimension &lt;=
dimension_curve_directed_callout &lt;= draughting_callout)
(ordinate_dimension &lt;=
projection_directed_callout &lt;= draughting_callout)
(radius_dimension &lt;=
dimension_curve_directed_callout &lt;= draughting_callout)
draughting_callout &lt;-
{draughting_callout =>
draughting_elements}
draughting_callout_relationship.relating_draughting_callout
draughting_callout_relationship
{draughting_callout_relationship =>
dimension_callout_relationship}
{draughting_callout_relationship.name = 'primary'}
draughting_callout_relationship.related_draughting_callout ->
draughting_callout =>
structured_dimension_callout)</refpath>
  </alt_map>
</aa>
</ae> <!--  ++  DIMENSION_CALLOUT  ++ -->
<ae entity="Dimension_callout">
<alt_map id="1"><description>If the callout is not structured.</description>
<aimelt>(draughting_elements)</aimelt>
<refpath>(draughting_elements &lt;=
draughting_callout)</refpath>
</alt_map>
<alt_map id="2"><description>If the callout is  structured.</description>
<aimelt>(structured_dimension_callout)</aimelt>
<source>ISO 10303-506</source>
<refpath>(structured_dimension_callout &lt;=
draughting_callout)</refpath>
</alt_map>
<aa attribute="callout_element" assertion_to="dimension_callout_select">
<aimelt>PATH</aimelt>
<refpath>draughting_elements &lt;=
draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element</refpath>
</aa>
<aa attribute="callout_element" assertion_to="Dimension_symbol">
  <alt_map alt_map.inc="1">
<aimelt>PATH</aimelt>
<refpath>(draughting_elements &lt;=
draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_symbol_occurrence
annotation_symbol_occurrence)
</refpath>
</alt_map>
  <alt_map alt_map.inc="2">
<aimelt>PATH</aimelt>
<refpath>(structured_dimension_callout  &lt;=
draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_symbol_occurrence
annotation_symbol_occurrence)
</refpath>
</alt_map>
</aa>
<aa attribute="callout_element" assertion_to="Text">
  <alt_map alt_map.inc="1">
<aimelt>PATH</aimelt>
<refpath>(draughting_elements &lt;=
draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_text_occurrence
annotation_text_occurrence)</refpath>
  </alt_map>
 <alt_map alt_map.inc="2">
<aimelt>PATH</aimelt>
<refpath>(structured_dimension_callout  &lt;=
draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_text_occurrence
annotation_text_occurrence)</refpath>
  </alt_map>
</aa>
<aa attribute="is_displaying" assertion_to="Geometric_dimension">
<alt_map id="1"><description>If the callout is not structured and the dimension is a  dimensional_location.</description>
<aimelt>PATH</aimelt>
<refpath>(draughting_elements &lt;= draughting_callout)
draughting_callout &lt;=
{draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_text_occurrence
annotation_text_occurrence &lt;=
annotation_occurrence &lt;=
styled_item
styled_item.item ->
representation_item =>
geometric_representation_item =>
text_literal =>
dimension_text_associativity}
geometric_representation_item &lt;=
representation_item &lt;-
mapped_item.mapping_target
mapped_item
{mapped_item =>
dimension_text_associativity &lt;=
text_literal}
mapped_item.mapping_source ->
representation_map
representation_map.mapped_representation ->
representation =>
shape_representation =>
shape_dimension_representation &lt;-
dimensional_characteristic_representation.representation
dimensional_characteristic_representation
dimensional_characteristic_representation.dimension ->
dimensional_characteristic
(dimensional_characteristic = dimensional_location
dimensional_location)
</refpath>
</alt_map>
<alt_map id="2"><description>If the callout is structured and the dimension is a  dimensional_location.</description>
<aimelt>PATH</aimelt>
<refpath>
(structured_dimension_callout &lt;= draughting_callout)
draughting_callout &lt;=
{draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_text_occurrence
annotation_text_occurrence &lt;=
annotation_occurrence &lt;=
styled_item
styled_item.item ->
representation_item =>
geometric_representation_item =>
text_literal =>
dimension_text_associativity}
geometric_representation_item &lt;=
representation_item &lt;-
mapped_item.mapping_target
mapped_item
{mapped_item =>
dimension_text_associativity &lt;=
text_literal}
mapped_item.mapping_source ->
representation_map
representation_map.mapped_representation ->
representation =>
shape_representation =>
shape_dimension_representation &lt;-
dimensional_characteristic_representation.representation
dimensional_characteristic_representation
dimensional_characteristic_representation.dimension ->
dimensional_characteristic
(dimensional_characteristic = dimensional_location
dimensional_location)
</refpath>
</alt_map>
<alt_map id="3"><description>If the callout is not structured and the dimension is a  dimensional_size.</description>
<aimelt>PATH</aimelt>
<refpath>(draughting_elements &lt;= draughting_callout)
draughting_callout &lt;=
{draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_text_occurrence
annotation_text_occurrence &lt;=
annotation_occurrence &lt;=
styled_item
styled_item.item ->
representation_item =>
geometric_representation_item =>
text_literal =>
dimension_text_associativity}
geometric_representation_item &lt;=
representation_item &lt;-
mapped_item.mapping_target
mapped_item
{mapped_item =>
dimension_text_associativity &lt;=
text_literal}
mapped_item.mapping_source ->
representation_map
representation_map.mapped_representation ->
representation =>
shape_representation =>
shape_dimension_representation &lt;-
dimensional_characteristic_representation.representation
dimensional_characteristic_representation
dimensional_characteristic_representation.dimension ->
dimensional_characteristic
(dimensional_characteristic = dimensional_size
dimensional_size)</refpath>
</alt_map>
<alt_map id="4"><description>If the callout is  structured and the dimension is a  dimensional_size.</description>
<aimelt>PATH</aimelt>
<refpath>
(structured_dimension_callout &lt;= draughting_callout)
draughting_callout &lt;=
{draughting_callout
draughting_callout.contents[i] ->
draughting_callout_element
draughting_callout_element = annotation_text_occurrence
annotation_text_occurrence &lt;=
annotation_occurrence &lt;=
styled_item
styled_item.item ->
representation_item =>
geometric_representation_item =>
text_literal =>
dimension_text_associativity}
geometric_representation_item &lt;=
representation_item &lt;-
mapped_item.mapping_target
mapped_item
{mapped_item =>
dimension_text_associativity &lt;=
text_literal}
mapped_item.mapping_source ->
representation_map
representation_map.mapped_representation ->
representation =>
shape_representation =>
shape_dimension_representation &lt;-
dimensional_characteristic_representation.representation
dimensional_characteristic_representation
dimensional_characteristic_representation.dimension ->
dimensional_characteristic
(dimensional_characteristic = dimensional_size
dimensional_size)</refpath>
</alt_map>
</aa>
</ae> <!--  ++  DIMENSION_CURVE  ++ -->
<ae entity="Dimension_curve">
<aimelt>dimension_curve</aimelt>
<source>ISO 10303-101</source>
<aa attribute="terminator" assertion_to="Terminator">
<aimelt>PATH</aimelt>
<refpath>dimension_curve &lt;=
annotation_curve_occurrence &lt;-
terminator_symbol.annotated_curve
terminator_symbol &lt;=
{terminator_symbol =>
dimension_curve_terminator}
annotation_symbol_occurrence &lt;= 
annotation_occurrence
{annotation_occurrence =>
draughting_annotation_occurrence}
annotation_occurrence &lt;=
styled_item
styled_item.item ->
representation_item =>
geometric_representation_item =>
defined_symbol
defined_symbol.definition ->
defined_symbol_select
defined_symbol_select = pre_defined_symbol
pre_defined_symbol =>
pre_defined_terminator_symbol
</refpath>
</aa>
</ae> <!--  ++  DIMENSION_SEQUENCE_PAIR  ++ -->
<ae entity="Dimension_sequence_pair">
<aimelt>dimension_pair</aimelt>
<source>506</source>
<refpath>dimension_pair &lt;=
draughting_callout_relationship
{(draughting_callout_relationship.name = 'chained')
(draughting_callout_relationship.name = 'parallel')} 
</refpath>
<aa attribute="predecessor" assertion_to="Dimension">
<aimelt>PATH</aimelt>
<refpath>dimension_pair &lt;=
draughting_callout_relationship 
draughting_callout_relationship.relating_draughting_callout -> 
draughting_callout =>
{draughting_callout =>
draughting_elements}
(dimension_curve_directed_callout => 
angular_dimension)
(dimension_curve_directed_callout => 
curve_dimension)
(dimension_curve_directed_callout => 
diameter_dimension)
(dimension_curve_directed_callout =>
linear_dimension)
(projection_directed_callout => 
ordinate_dimension)
(dimension_curve_directed_callout => 
radius_dimension)</refpath>
</aa>
<aa attribute="successor" assertion_to="Dimension">
<aimelt>PATH</aimelt>
<refpath>dimension_pair &lt;=
draughting_callout_relationship 
draughting_callout_relationship.related_draughting_callout -> 
draughting_callout =>
{draughting_callout =>
draughting_elements}
(dimension_curve_directed_callout => 
angular_dimension)
(dimension_curve_directed_callout => 
curve_dimension)
(dimension_curve_directed_callout => 
diameter_dimension)
(dimension_curve_directed_callout =>
linear_dimension)
(projection_directed_callout => 
ordinate_dimension)
(dimension_curve_directed_callout => 
radius_dimension) 
 </refpath>
</aa>
</ae> <!--  ++  GEOMETRIC_TOLERANCE_CALLOUT  ++ -->
<ae entity="Geometric_tolerance_callout">
<aimelt>geometrical_tolerance_callout</aimelt>
<source>506</source>
<refpath>geometrical_tolerance_callout &lt;=
draughting_callout</refpath>
</ae> <!--  ++  PROJECTION_CURVE  ++ -->
<ae entity="Projection_curve">
<aimelt>projection_curve</aimelt>
<source>101</source>
</ae> <!--  ++  SURFACE_CONDITION_CALLOUT  ++ -->
<ae entity="Surface_condition_callout">
<aimelt>pre_defined_surface_condition_symbol</aimelt>
<source>Annotated_presentation_mim</source>
<refpath>pre_defined_surface_condition_symbol &lt;=
pre_defined_symbol</refpath>
</ae>
</mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
