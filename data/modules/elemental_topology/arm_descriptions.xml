<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet 
  type="text/xsl" 
  href="../../../xsl/descriptions.xsl"?>
<!DOCTYPE ext_descriptions SYSTEM "../../../dtd/description.dtd">
<ext_descriptions module_directory="elemental_topology" schema_file="arm.xml" rcs.date="$Date: 2009/11/25 11:53:05 $" rcs.revision="$Revision: 1.8 $">


  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Elemental_topology_arm 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
   <ext_description linkend="Elemental_topology_arm"/>

  
  
  
  
  
  <!-- 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Connected_edge_set 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
     <ext_description linkend="Elemental_topology_arm.Connected_edge_set">

  
  
  
  A <b>Connected_edge_set</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/>
        that is a set of edges arcwise connected via their common vertices.
  
  </ext_description>
  
  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Connected_edge_set  Attribute: connected_edges
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
  <ext_description linkend="Elemental_topology_arm.Connected_edge_set.connected_edges">
a set of <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Edge"/>s arcwise connected at common <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Vertex"/>s. The domains of the <b>connected_edges</b> shall not intersect.
  
  </ext_description>
  
  
 <!-- 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Connected_face_set 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
     <ext_description linkend="Elemental_topology_arm.Connected_face_set">

  
  
  
  A <b>Connected_face_set</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/> that is a set of faces such that the domain of the faces together with their bounding edges and vertices is connected.
  
  </ext_description>
  
  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Connected_face_set  Attribute: connected_faces
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
  <ext_description linkend="Elemental_topology_arm.Connected_face_set.connected_faces">
a set of <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Face"/>s arcwise connected along common <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Edge"/>s or <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Vertex"/>s. The domains of the <b>connected_faces</b> shall not overlap.
  </ext_description>
   
  
  
  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Elemental_topology_arm  Entity: Detailed_topological_model_element 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Elemental_topology_arm.Detailed_topological_model_element">
	A <b>Detailed_topological_model_element</b> is a type of 
	<express_ref linkend="foundation_representation:arm:Foundation_representation_arm.Representation_item"/> 
	that represents a single element of
	the topology, or connectivity, of the entities that make up the representation of an object.
	A <b>Detailed_topological_model_element</b> is either a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Connected_edge_set"/> 
	or a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Connected_face_set"/>,
	or an
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge"/>,
	or a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Face"/>,
	or a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Face_bound"/>,
	or a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Vertex"/>,
	or a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Loop"/>,
	or a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Loop"/>
	and a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Path"/>,
	or a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Path"/>.
</ext_description>


<!-- 
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Schema: Elemental_topology_arm  Entity: Edge 
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
   -->
<ext_description linkend="Elemental_topology_arm.Edge">
        An <b>Edge</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/>
        that is an oriented bounded one dimensional manifold connecting two vertices. 
        The topological sense of the edge is from the 
        <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge.edge_start"/> to the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge.edge_end"/>.
</ext_description>

<!-- 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   Schema: Elemental_topology_arm  Entity: Edge Attribute: edge_start
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
  -->
<ext_description linkend="Elemental_topology_arm.Edge.edge_start">
        the 
        <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Vertex"/> 
        defining the start point of the edge.
</ext_description>
 
 <!-- 
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Schema: elemental_topology_arm  Entity: Edge Attribute: edge_end
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
   -->
<ext_description linkend="Elemental_topology_arm.Edge.edge_end">
        the 
        <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Vertex"/>
        defining the end point of the edge; this may coincide with the start point if the edge forms a closed loop.
</ext_description>
 
 
 <!-- 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Edge_loop 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
 <ext_description linkend="Elemental_topology_arm.Edge_loop">
        An <b>Edge_loop</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Loop"/>
        with a non-zero extent. It is also a type of  <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Path"/> with the property that the start and end vertices coincide.
 </ext_description>
 
 <!-- 
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Schema: Elemental_topology_arm  Entity: Edge_loop Attribute: ne
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
   -->
 <ext_description linkend="Elemental_topology_arm.Edge_loop.ne">
        the number of 
        <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge"/>s defining the path of the loop.
 </ext_description>
  
  <!-- WR1 -->
     <ext_description linkend="Elemental_topology_arm.Edge_loop.wr:WR1">
     The <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge.edge_start"/> of the first edge shall be the same as the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge.edge_end"/> of the last edge. This ensures
that the path is closed to form a loop.
   </ext_description>

 <!-- 
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Schema: Elemental_topology_arm  Entity: Face
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
     -->
  <ext_description linkend="Elemental_topology_arm.Face">
        A <b>Face</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/>
        that is a topological entity of dimensionality 2 corresponding to the intuitive notion of a piece of
surface bounded by loops. Its domain, if present, is an oriented, connected, finite 2-manifold. A
face domain shall not have handles, but it may have holes, each hole bounded by a loop.
<note> The full semantics of this entity is defined in the corresponding MIM object from ISO 10303-42; this has additional constraints in the form of informal propositions.
</note>
  </ext_description>
  
  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Face_bound Attribute: bounds
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
  <ext_description linkend="Elemental_topology_arm.Face.bounds">
        the  set of <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Face_bound"/>s which define all the boundaries of the face.
        
  </ext_description>
   
  <!-- WR1 -->
      <ext_description linkend="Elemental_topology_arm.Face.wr:WR1">
      At most, one of the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Face.bounds"/> shall be of type <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Face_outer_bound"/>.
    </ext_description> 
  
 
 
 <!-- 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Face_bound
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
 <ext_description linkend="Elemental_topology_arm.Face_bound">
        A <b>Face_bound</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/>
        that is the usage of a loop for bounding a <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Face"/>.
 </ext_description>
 
 <!-- 
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Schema: Elemental_topology_arm  Entity: Face_bound Attribute: bound
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
   -->
 <ext_description linkend="Elemental_topology_arm.Face_bound.bound">
        the  <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Loop"/> which will be used as a face boundary.
        
 </ext_description>
  
   <!-- 
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Schema: Elemental_topology_arm  Entity: Face_bound Attribute: orientation
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
     -->
   <ext_description linkend="Elemental_topology_arm.Face_bound.orientation">
   an indicator of whether (TRUE), or not (FALSE) the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Loop"/> has the same sense when used to
bound the face as when first defined. If <b>orientation</b> is FALSE, the senses of all its component oriented
edges are implicitly reversed when used in the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Face"/>.
        
   </ext_description>
  
  <!-- 
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
       Schema: Elemental_topology_arm  Entity: Face_outer_bound
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
      -->
   <ext_description linkend="Elemental_topology_arm.Face_outer_bound">
        A <b>Face_outer_bound</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Face_bound"/>
        which carries the additional semantics of defining
        an outer boundary on the face. A <b>Face_outer_bound</b> shall separate the interior of the face from the exterior and shall enclose the interior domain of the face. No more than one boundary of a face shall be of this type.

 </ext_description>
 
 <!-- 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Schema: Elemental_topology_arm  Entity: Loop
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
       -->
<ext_description linkend="Elemental_topology_arm.Loop">
	A <b>Loop</b> is a type of 
	<express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/>
	constructed from a single <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Vertex"/>, 
	or by stringing together connected 
	edges beginning and ending at the same 
	<express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Vertex"/>. 
	A <b>Loop</b> has dimensionality 0 or 1.
	A <b>Loop</b> may be either a
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Vertex_loop"/>
	or an
	<express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge_loop"/>.
 </ext_description>
 
 
 <!-- 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Oriented_edge 
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
 <ext_description linkend="Elemental_topology_arm.Oriented_edge">
        An <b>Oriented_edge</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Edge"/>
         constructed from another edge which contains a BOOLEAN orientation
        flag to indicate whether or not the orientation of the constructed edge agrees with the orientation of
        the original edge. Except for possible re-orientation, the <b>Oriented_edge</b> is equivalent to the original edge.
 </ext_description>
 
 <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Oriented_edge Attribute: edge_definition
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
  <ext_description linkend="Elemental_topology_arm.Oriented_edge.edge_definition">
        the 
        <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge"/> 
        defining the domain of the <b>Oriented_edge</b>
  </ext_description>
  
 <!-- 
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Schema: Elemental_topology_arm  Entity: Oriented_edge Attribute: orientation
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
     -->
   <ext_description linkend="Elemental_topology_arm.Oriented_edge.orientation">
        a BOOLEAN flag.  If TRUE, the topological orientation as used coincides with the orientation,
from start vertex to end vertex, of the <b>edge_definition</b>, if FALSE the vertices are reversed in order.
        
        
   </ext_description>
  
 
 <!-- 
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    Schema: Elemental_topology_arm  Entity: Oriented_edge Attribute: edge_start
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
   -->
 <ext_description linkend="Elemental_topology_arm.Oriented_edge.edge_start">
        the  start vertex of the <b>Oriented_edge</b>. This is derived from the vertices of the <b>edge_definition</b> after taking account of the <b>orientation</b>.
 </ext_description>
  
  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: elemental_topology_arm  Entity: Oriented_edge Attribute: edge_end
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
 <ext_description linkend="Elemental_topology_arm.Oriented_edge.edge_end">
        the end vertex of the <b>Oriented_edge</b>. This is derived from the vertices of the <b>edge_definition</b>
after taking account of the <b>orientation</b>.
 </ext_description>
 
 <!-- WR1 -->
       <ext_description linkend="Elemental_topology_arm.Oriented_edge.wr:WR1">
        The <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Oriented_edge.edge_definition"/> shall not be of type <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Oriented_edge"/>.
     </ext_description> 
  
 <!-- 
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Schema: Elemental_topology_arm  Entity: Path
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
     -->
  <ext_description linkend="Elemental_topology_arm.Path">
        A <b>Path</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/>
         consisting of an ordered collection of <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Oriented_edge"/>s, such that the 
        start vertex of each edge coincides with the end  vertex of its predecessor. The path is ordered from the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge.edge_start"/>
         of its first <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Oriented_edge"/> to the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge.edge_end"/> of its last edge. The BOOLEAN value
        orientation in the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Oriented_edge"/> indicates whether the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Edge"/>  direction agrees with the direction of the
<b>Path</b> (TRUE) or is in the opposite direction (FALSE).
  <p>An individual edge can only be referenced once by an individual path.
An edge can be referenced by multiple paths. An edge can exist independently of a path.</p>
  </ext_description>
  
  <!-- 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     Schema: Elemental_topology_arm  Entity: Path Attribute: edge_list
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
    -->
  <ext_description linkend="Elemental_topology_arm.Path.edge_list">
        the  list of unique <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Oriented_edge"/> entities which are concatenated together to form this <b>Path</b>.
    </ext_description>
  
 
  <!-- WR1 -->
      <ext_description linkend="Elemental_topology_arm.Path.wr:WR1">
      The end vertex of each <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Oriented_edge"/> shall be the same as the start vertex of its successor. This is checked by the function <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.path_aligned"/>.
    </ext_description>

 <!-- 
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Schema: Elemental_topology_arm  Entity: Vertex 
     ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
     -->
      <ext_description linkend="Elemental_topology_arm.Vertex">
         A  <b>Vertex</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Detailed_topological_model_element"/> 
         is a point of interest in topological space, it has dimensionality 0.
        </ext_description>
 
 
 
 
 <!-- 
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        Schema: Elemental_topology_arm  Entity: Vertex_loop
       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
       -->
    <ext_description linkend="Elemental_topology_arm.Vertex_loop">
        A <b>Vertex_loop</b> is a type of 
        <express_ref linkend="elemental_topology:arm:Elemental_topology_arm.Loop"/>
         of zero extent consisting of a single vertex.
 </ext_description>
 
  <!-- 
   ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Schema: Elemental_topology_arm  Entity: Vertex_loop Attribute: loop_vertex
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
     -->
   <ext_description linkend="Elemental_topology_arm.Vertex_loop.loop_vertex">
        the   <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Vertex"/>  which defines the entire <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Loop"/>.
     </ext_description>
 
 <!-- ++++++++++ boolean_choice +++++++++++ -->
 <ext_description linkend="Elemental_topology_arm.boolean_choice">
        The <b>boolean_choice</b> function returns one of 2 possible values from the input as determined by the value of a BOOLEAN input argument.
 </ext_description>
 
 
 <!-- boolean_choice -->
 <ext_description linkend="Elemental_topology_arm.boolean_choice.b">
        (input) the BOOLEAN value used to select the element <b>choice1</b> (TRUE) or <b>choice2</b> (FALSE).
 </ext_description>
<!-- boolean_choice -->
 <ext_description linkend="Elemental_topology_arm.boolean_choice.choice1">
         the first item which may be selected and returned.
 </ext_description>
<!-- boolean_choice -->
 <ext_description linkend="Elemental_topology_arm.boolean_choice.choice2">
        the second item which may be selected and returned.
 </ext_description>

 <!-- ++++++++++ path_aligned +++++++++++ -->
  <ext_description linkend="Elemental_topology_arm.path_aligned">
        The <b>path_aligned</b> function  returns TRUE if, for the edges of the input <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Path"/>, the end vertex of each edge is the same as the start vertex of its successor.
  </ext_description>
  
  <!-- path_aligned -->
  
  <ext_description linkend="Elemental_topology_arm.path_aligned.a_path">
        (input) the <express_ref linkend="Elemental_topology:arm:Elemental_topology_arm.Path"/> for which it is required to verify that its component edges are arranged consecutively head-to-tail.
  </ext_description>
 <!-- path_aligned -->
  <ext_description linkend="Elemental_topology_arm.path_aligned.p">
         (output) a BOOLEAN variable which is TRUE if all edges in <b>a_path</b> join head-to-tail.
  </ext_description>
 
 
 </ext_descriptions>
