<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 rel. 2 U (http://www.xmlspy.com) by S.M.Barker (BAE SYSTEMS) -->
<!-- $Id: module.xml,v 1.33 2003/03/21 11:00:39 robbod Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
<!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module name="envelope" part="1265" version="1" wg.number="1459" wg.number.arm="1460" wg.number.mim="1461" checklist.internal_review="1819" checklist.project_leader="1637" checklist.convener="1638" status="CD-TS" language="E" publication.year="2003" published="n" rcs.date="$Date: 2003/03/21 11:00:39 $" rcs.revision="$Revision: 1.33 $" development.folder="dvlp">
	<keywords>
    module, envelope, mail, receipt
 </keywords>
	<!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
	<contacts>
		<projlead ref="plcs.projlead"/>
		<editor ref="seanbarker"/>
	</contacts>
	<!-- Introduction -->
	<!-- The introduction should start as shown: -->
	<purpose>
          <p>
            This part of ISO 10303 specifies an application module for the
            representation of Envelope. 
            An envelope is a wrapper for a 
            <express_ref linkend="message:arm:Message_arm.Message"/>.
            It is provided in order to maintain an audit trail of
            transmission. Increased volumes and frequency of transaction, particularly
            of small extracts from a database, require the association of transmission
            information with the database. For example, in an automated support
            environment, failure to notify significant faults, maintenance actions or
            procedural changes may be legally significant. 
            Just as with a physical letter where the envelope is quite
            distinct from the content, in this module, the envelope is quite distinct
            from the message it contains. Provision is also made to use the envelope
            entity to send back receipts. 
   </p>
	</purpose>
	<!-- Items in scope -->
	<inscope>
		<li>Identification of the sender of the envelope and date sent;</li>
		<li>Identification of the recipient of the envelope and date received;</li>
		<li>Authorisation of the sending of the message;</li>
		<li>Solicitation of a receipt for the envelope and acknowledge it;</li>
		<li>Association of envelopes to each other;</li>
		<li>Association of properties to the envelope.</li>
	</inscope>
	<!-- Items out of scope -->
	<outscope>
		<li>Specification of envelope routing;</li>
		<li>
			<p>
       Specification of information about the contents of the envelope;
     </p>
			<note>
       Definition of message is within the scope of the
       <module_ref linkend="message:1_inscope">Message</module_ref>
       application module.
     </note>
		</li>
		<li>Specification of any encoding or encryption used on the envelope or its contents;</li>
		<li>Specification of information used by the transmission system for the envelope.</li>
	</outscope>
	<normrefs>
		<normref.inc normref="ref10303-41.2000"/>
		<normref.inc module.name="message">
			<term.ref linkend="message"/>
		</normref.inc>
	</normrefs>
	<definition>
		<term id="envelope">envelope</term>
		<def>a wrapper for a message, and providing addressee and acknowledgement information.
   </def>
	</definition>
	<!--

 <abbreviations/>
-->
	<!-- Clause 4 ARM  -->
	<arm>
		<!-- Note ARM short form EXPRESS is in arm.xml -->
		<!-- Units of functionality -->
		<uof name="Envelope">
			<description>
	Envelope specifies the data structure needed to provide an audit trail for the transmission of messages and their acknowledgement.
     </description>
			<uof.ae entity="Envelope"/>
			<uof.ae entity="Envelope_association"/>
		</uof>
		<!-- Short form EXPRESS-G -->
		<express-g>
			<imgfile file="armexpg1.xml"/>
			<imgfile file="armexpg2.xml"/>
		</express-g>
	</arm>
	<!-- Clause 5.1 Mapping specification -->
	<mapping_table>
		<!-- mappings due to the extension of the approval_item select -->
		<ae entity="Approval_assignment" original_module="approval">
			<aa attribute="items" assertion_to="Envelope">
                          <aimelt>PATH</aimelt>
                          <refpath_extend extended_select="approval_item">
                                  approval_item *> envelope_approval
                                  envelope_approval = envelope
                                </refpath_extend>
			</aa>
		</ae>
		<!-- mappings due to the extension of the date_or_date_time_item select-->
		<ae entity="Date_or_date_time_assignment" original_module="date_time_assignment">
			<aa attribute="items" assertion_to="Envelope">
				<!-- date Envelope sent -->
				<alt_map id="1">
                                  <description>If a date is assigned to the envelope</description>
                                  <aimelt>PATH</aimelt>
                                  <refpath>
                                    date_assignment=&gt;
                                    { (date_assignment.role='Envelope sent')
                                    (date_assignment.role='Envelope received')
                                    (date_assignment.role)}
                                    applied_date_assignment
                                    applied_date_assignment.items[i] -&gt; date_item
                                    date_item *&gt; envelope_date
                                    envelope_date = envelope
                                  </refpath>
				</alt_map>
				<!-- date and time  Envelope sent-->
				<alt_map id="3">
                                  <description>If a date and time is assigned to  the envelope</description>
				   <aimelt>PATH</aimelt>
                                  <refpath>
                                    date_assignment=&gt;
                                    {(date_assignment.role='Envelope sent')
                                    (date_assignment.role='Envelope received')
                                    (date_assignment.role)}
                                    applied_date_assignment
                                    applied_date_assignment.items[i] -&gt; date_and_time_item
                                    date_and_time_item *&gt; envelope_date_and_time
                                    envelope_date_and_time = envelope
                                  </refpath>
                                </alt_map>
			</aa>
		</ae>
		<!-- mappings due to the extension of the organization_or_person_in_organization_select select-->
		<ae entity="Organization_or_person_in_organization_assignment" original_module="person_organization_assignment">
			<aa attribute="items" assertion_to="Envelope">
				<!-- referencing the alternative mapping (id="1") description provided in
                                     the person_organization_assignment module -->
				<alt_map alt_map.inc="1">
					<!-- extending the mapping from person_organization_assignment module -->
				   <aimelt>PATH</aimelt>
					<refpath>
                                          applied_organization_assignment 
                                          {applied_organization_assignment &lt;= organization_assignment
                                          (organization_assignment.role = 'Envelope recipient')
                                          
                                          (organization_assignment.role)}
                                          applied_organization_assignment.items[i] -&gt; organization_item
                                          organization_item *&gt; envelope_organization_item 
                                          envelope_organization_item = envelope
                                        </refpath>
                                      </alt_map>
                                      <!-- referencing the alternative mapping (id="1") description provided in
                                           the person_organization_assignment module -->
                                      <alt_map alt_map.inc="2">
                                        <!-- extending the mapping from person_organization_assignment module -->
				   <aimelt>PATH</aimelt>
                                        <refpath>
                                          applied_person_and_organization_assignment 
                                          {applied_person_and_organization_assignment &lt;= person_and_organization_assignment
                                          (person_and_organization_assignment.role = 'Envelope recipient')
                                          (person_and_organization_assignment.role)}
                                          applied_person_and_organization_assignment.items[i] -&gt; person_and_organization_item
                                          person_and_organization_item *&gt; envelope_person_organization_item 
                                          envelope_person_organization_item = envelope
                                        </refpath>
                                      </alt_map>
                                    </aa>
                                  </ae>
                                  <!-- mappings due to the use of of the product_property_assignment_select -->
                                  <ae entity="Assigned_property" original_module="property_assignment">
                                    <aa attribute="described_element" assertion_to="Envelope">
                                      <aimelt>PATH</aimelt>
                                      <source>ISO 10303-41</source>
                                      <refpath>
                                        property_definition
                                        property_definition.definition -&gt;
                                        characterized_definition
                                        characterized_definition = characterized_product_definition
                                        characterized_product_definition = product_definition
                                        product_definition.formation -&gt; product_definition_formation
                                        product_definition_formation
                                        product_definition_formation.of_product -&gt; product
                                        product
                                        {product &lt;-
                                        product_related_product_category.products[i]
                                        product_related_product_category &lt;=
                                        product_category
                                        product_category.name='envelope'}
                                      </refpath>
			</aa>
		</ae>
		<ae entity="Envelope">
			<aimelt>envelope</aimelt>
			<source>ISO 10303-41</source>
			<refpath>
      envelope &lt;= 
      [product]
      {product &lt;-
      product_related_product_category.products[i]
      product_related_product_category &lt;=
      product_category
      product_category.name='envelope' }
      [characterized_object]
   </refpath>
			<aa attribute="acknowledge">
				<aimelt>product.name</aimelt>
				<source>ISO 10303-41</source>
				<refpath>
         envelope &lt;= 
         [product]
         product.name 
         {  (product.name = '') 
            (product.name = 'ask message arrival') 
            (product.name = 'ask message read')
            (product.name = 'acknowledge arrival')
            (product.name = 'delivery failure')
         } 
         [characterized_object]
        </refpath>
			</aa>
			<aa attribute="id">
				<aimelt>product.id</aimelt>
				<source>ISO 10303-41</source>
				<refpath>
         envelope &lt;= 
         [product]
         product.id  
         [characterized_object]
        </refpath>
			</aa>
			<aa attribute="wrapping" assertion_to="Message">
				<aimelt>product</aimelt>
				<source>ISO 10303-41</source>
				<refpath>
	product &lt;- product_relationship.relating_product
	product_relationship
	product_relationship.related_product -&gt; product
	{
	product.frame_of_reference[1] -&gt;
        product_context
        product_context.discipline_type='message'}
        </refpath>
			</aa>
		</ae>
		<ae entity="Envelope_association">
			<aimelt>envelope_relationship</aimelt>
			<source>ISO 10303-41</source>
			<refpath>envelope_relationship &lt;=
   product_relationship
   </refpath>
			<aa attribute="related" assertion_to="Envelope">
				<aimelt>PATH</aimelt>
				<source>ISO 10303-41</source>
				<refpath>
	envelope_relationship &lt;=
    	product_relationship
    	product_relationship.related_product -&gt;
	product
    	{product &lt;-
    	product_related_product_category.products[i]
    	product_related_product_category &lt;=
    	product_category
    	product_category.name='envelope'} 
	</refpath>
			</aa>
			<aa attribute="relating" assertion_to="Envelope">
				<aimelt>PATH</aimelt>
				<source>ISO 10303-41</source>
				<refpath>
	envelope_relationship &lt;=
    	product_relationship
    	product_relationship.relating_product -&gt;
	product
    	{product &lt;-
    	product_related_product_category.products[i]
    	product_related_product_category &lt;=
    	product_category
    	product_category.name='envelope'}
	</refpath>
			</aa>
			<aa attribute="role">
				<aimelt>product_relationship.name</aimelt>
				<source>ISO 10303-41</source>
			</aa>
		</ae>
	</mapping_table>
	<!-- Clause 5.2 MIM -->
	<mim>
		<!--  Note MIM short form express is in mim.xml -->
		<express-g>
			<imgfile file="mimexpg1.xml"/>
			<imgfile file="mimexpg2.xml"/>
		</express-g>
		<shortnames>
			<shortname name="ENVLP" entity="envelope"/>
			<shortname name="ENVRLT" entity="envelope_relationship"/>
		</shortnames>
	</mim>
</module>
