<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">

<express language_version="2" rcs.date="2005-10-05T20:56:29" rcs.revision="1.0" description.file="arm_descriptions.xml">
   <application name="JSDAI" owner="LKSoft" url="www.lksoft.com" version="4.0 beta" source="extended_basic_geometry_arm schema_instance"/>
   <schema name="Extended_basic_geometry_arm">
      <interface kind="use" schema="Basic_geometry_arm"/>
      <interface kind="use" schema="Shape_property_assignment_arm"/>
      <type name="axis_placement_or_cto2d">
         <select selectitems="Axis_placement Cartesian_transformation_2d"/>
      </type>
      <entity name="Axis_placement_2d" supertypes="Axis_placement"/>
      <entity name="Axis_placement_3d" supertypes="Axis_placement"/>
      <entity name="Definitional_representation_relationship" supertypes="Representation_relationship">
         <where label="WR1" expression="acyclic_representation_relationship(SELF,&#10;       [SELF\representation_relationship.rep_2],&#10;       'FOUNDATION_REPRESENTATION_ARM.'+&#10;       'REPRESENTATION')"/>
      </entity>
      <entity name="Detailed_geometric_model_element_relationship">
         <explicit name="item_1">
            <typename name="Detailed_geometric_model_element"/>
         </explicit>
         <explicit name="item_2">
            <typename name="Detailed_geometric_model_element"/>
         </explicit>
         <where label="WR1" expression="item_1 &lt;&gt; item_2"/>
      </entity>
      <entity name="Geometric_model_relationship" supertypes="Representation_relationship">
         <explicit name="rep_1">
            <typename name="Geometric_model"/>
            <redeclaration entity-ref="Representation_relationship"/>
         </explicit>
         <explicit name="rep_2">
            <typename name="Geometric_model"/>
            <redeclaration entity-ref="Representation_relationship"/>
         </explicit>
         <where label="WR1" expression="rep_1 &lt;&gt; rep_2"/>
      </entity>
      <entity name="Shape_item_relationship" supertypes="Detailed_geometric_model_element_relationship Representation_item"/>
      <entity name="Vector" supertypes="Detailed_geometric_model_element">
         <explicit name="orientation">
            <typename name="Direction"/>
         </explicit>
         <explicit name="magnitude">
            <typename name="length_measure"/>
         </explicit>
         <where label="WR1" expression="magnitude &gt;= 0.0"/>
      </entity>
      <subtype.constraint name="alternate_extended_geometry_items" entity="Detailed_geometric_model_element" super.expression="ONEOF (Cartesian_point, Direction, Axis_placement, Cartesian_transformation_2d, Cartesian_transformation_3d, Curve, Point_on_curve, Point_on_surface, Surface, Vector)"/>
      <subtype.constraint name="alternate_extended_representation_items" entity="Representation_item" super.expression="ONEOF (Detailed_geometric_model_element, Vector)"/>
      <function name="acyclic_representation_relationship">
         <parameter name="relation">
            <typename name="Representation_relationship"/>
         </parameter>
         <parameter name="relatives">
            <aggregate type="SET" lower="1" upper="?"/>
            <typename name="Representation"/>
         </parameter>
         <parameter name="specific_relation">
            <builtintype type="STRING"/>
         </parameter>
         <builtintype type="BOOLEAN"/>
         <algorithm>LOCAL
      x : SET OF representation_relationship;
    END_LOCAL;

    IF relation.rep_1 IN relatives THEN
      RETURN (FALSE);
    END_IF;
    x := QUERY(r &lt;* bag_to_set(USEDIN(relation.rep_1, 'FOUNDATION_REPRESENTATION_ARM.' + 'REPRESENTATION_RELATIONSHIP.' + 'REP_2')) | specific_relation IN TYPEOF(r));
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_representation_relationship(x[i], relatives + relation.rep_1, specific_relation) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);</algorithm>
      </function>
      <function name="bag_to_set">
         <parameter name="the_bag">
            <aggregate type="BAG" lower="0" upper="?"/>
            <builtintype type="GENERIC"/>
         </parameter>
         <aggregate type="SET" lower="0" upper="?"/>
         <builtintype type="GENERIC"/>
         <algorithm>LOCAL
      the_set : SET OF GENERIC : intype := [];
      i       : INTEGER;
    END_LOCAL;

    IF SIZEOF(the_bag) &gt; 0 THEN
      REPEAT i := 1 TO HIINDEX(the_bag);
        the_set := the_set + the_bag[i];
      END_REPEAT;
    END_IF;
    RETURN(the_set);</algorithm>
      </function>
   </schema>
</express>
