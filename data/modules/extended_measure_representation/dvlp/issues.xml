<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: issues.xml,v 1.12 2003/11/07 17:41:35 robbod Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../../xsl/projmg/issues_file.xsl"?>
<!DOCTYPE issues SYSTEM "../../../../dtd/projmg/issues.dtd">

<issues module="extended_measure_representation">
  <issue id="TEH3" type="mapping_table" by="TEH" date="8/16/2002" status="closed">
    <description>Adding new subtypes to an application object that is defined ein another application module  may add mappings. Does that mean we add another spec in *this* module? If so, need to document and fix xsl. </description>
  </issue>
  <issue id="TEH1" type="arm" by="PHU" date="8/14/2002" status="closed">
    <description>characteristic should be dimension_value</description>
  </issue>
  <issue id="TEH4" type="arm" by="PHU" date="9/1/2002" status="closed">
    <description>type limit_qualifier_list is
extensible while it was by intent not in AP214.
Do you have a reason to keep it extensible?</description>
  </issue>
  <issue id="TEH5" type="arm" by="PHU" date="9/1/2002" status="closed">
    <description>In the mapping of value_limit.limit_qualifier, the type_qualifier name shall
be 'minimum' or 'maximum' (and not 'mim' and 'max').</description>
  </issue>
  <issue id="TEH6" type="mapping_table" by="PHU" date="9/1/2002" status="closed">
    <description>In the non-tabular syntax of mapping specification, a global rule section  shall contain the name of rules (and possibly their clause number in the MIM).
</description>
  </issue>
  <issue id="TEH7" type="mapping_table" by="PHU" date="9/1/2002" status="closed">
    <description>Remove the empty elements in the mapping specification in order to get rid of empty sections (e.g. source when MIM
element=PATH)</description>
  </issue>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<issue
   id="RBN-1"
   type="arm"
   linkend="Extended_measure_representation_arm"
   status="closed"
   category="editorial"
   by="Greg Paul"
   date="03-01-20">
<description>
1106 has rules - we were not going have rules for the lowest level modules?  Oversight? 
</description>

<comment
   by="Pascal Huau"
   date="03-01-21">
<description>
there is a legend running in SC4 that says that there shall be no rule in base modules.
 
This is not true. There are and will be rules in base modules, but not any kind of rules.
 
The rules you may find in base modules are those that maps a particular constraint of the ARM, that is specific to a construct of that module and/or that shall not be contradicted by another constraint in another module used simultaneously with the first module in a same CC.
 
On the other hand, rules that may be contradicted in another module shall not be included in a base module.
For example, a rule that requires that any instance of product is approved, shall not be included in Product_identification but in a CC or AP module.
 
The major reason to have a rule in a base module is that we do not have to duplicate and don't risk to forget to duplicate that rule in every module that uses the considered module.
 
 
For example, in extended_measure_representation, we want to restrict the composition of subtypes of representation_item. It makes sense to define the rules (which in that case could be subtype_constraints) in extended_measure_representation, as the constraints they define are general and as it would make no sense that another module allows the compositions that are forbidden by these rules.

</description>
</comment>
</issue>


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<issue
   id="RBN-2"
   type="mapping_table"
   status="closed"
   category="editorial"
   by="Rob Bodington"
   date="03-04-28"
   seds="no"
   ballot_comment="yes" member_body="GB">
<description>
Mapping check shows following errors:
Processing: data/modules/extended_measure_representation/nav/mapping_view.xml
Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of representation_item.name
Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of representation_item.name
Error Map34: ERROR in subtyping in PATH: value_representation_item is not a supertype of representation_item
Error Map35: ERROR in subtyping in PATH: representation_item is not a subtype of qualified_representation_item
Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of Measure_item
Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of representation_item.name
Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of representation_item.name
Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of representation_item.name
Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of representation_item.name
</description>

<comment
   by="Rob Bodington"
   date="03-04-28">
<description>
Raised as UK ballot comment.
</description>
</comment>

<comment
   by="Tom Hendrix"
   date="03-05-22">
<description>
Accept and fix except for " Error Map34: ERROR in subtyping in PATH: representation_item is not a supertype of Measure_item." This is due to error checking software not recognizing a SUPERTYPE mapping template. 
</description>
</comment>
</issue>

<!-- Ballot comments SC4N1481 -->

<issue
   id="US_SC4N1429_1"
   type="general"
   status="closed"
   category="major_technical"
   by="US Ballot"
   date="03-05-06"
   member_body="US" ballot_comment="yes">
<description>
<p>Ballot comment</p>
<p>Presently, EPM parser raises the following error for double_toleranced_measure_item:
ERROR : Line 1037: Illegal attribute redeclaration.
Redeclaring attribute: DOUBLE_TOLERANCED_MEASURE_ITEM.ITEM_ELEMENT in line: 1037
Redeclared attribute: COMPOUND_REPRESENTATION_ITEM.ITEM_ELEMENT in line: 28770
Redeclaration from aggregate type to simple type is illegal</p>
<p>Proposed change</p>
<p>Change to the following (this solution was recommended by Phil Spiby and Pascal Huau)

TYPE list_of_two_representation_items = list_representation_item;
WHERE
HIINDEX(SELF) = 2;
END_TYPE;

ENTITY double_toleranced_item
 SUBTYPE OF (compound_representation_item);
  SELF\compound_representation_item.item_element :
list_of_two_representation_items ;
DERIVE
  tolerance_range : value_range :=
SELF\compound_representation_item.item_element[2];
  toleranced_measure_value : measure_representation_item :=
SELF\compound_representation_item.item_element[1];
END_ENTITY;
</p>
</description>

<comment
   by="Tom Hendrix"
   date="03-05-22">
<description>
Accept. Howver, when fixed as proposed, parser still raised an error. So I fixed as proposed except that the DERIVE is replaced with two informal propositions. </description>
</comment>
</issue>

<issue
   id="ES_SC4N1429_6"
   type="general"
   status="closed"
   category="editorial"
   by="ES Ballot"
   date="03-05-06"
   member_body="ES" ballot_comment="yes">
<description>
<p>Ballot comment</p>
<p>Edition error: ARM schema level diagram shows the logo of GraphicalExpress and there is a huge blank space from the diagram until the title</p>
</description>

<comment
   by="Tom Hendrix"
   date="03-05-22">
<description>
Accept. Fixed.
</description>
</comment>
</issue>

<issue
   id="ES_SC4N1429_7"
   type="general"
   status="closed"
   category="editorial"
   by="ES Ballot"
   date="03-05-06"
   member_body="ES" ballot_comment="yes">
<description>
<p>Ballot comment</p>
<p>Edition error: ARM entity level diagram shows the logo of GraphicalExpress and a title apart from the typical one.</p>
</description>

<comment
   by="Tom Hendrix"
   date="03-05-22">
<description>
Accept. Fixed.
</description>
</comment>
</issue>

<issue
   id="ES_SC4N1429_8"
   type="general"
   status="closed"
   category="editorial"
   by="ES Ballot"
   date="03-05-06"
   member_body="ES" ballot_comment="yes">
<description>
<p>Ballot comment</p>
<p>Edition recommendation: In clauses 4.4.7 the name of the entity is recommended to be written in bold letters</p>
</description>

<comment
   by="Tom Hendrix"
   date="03-05-22">
<description>
Accept. Fixed.
</description>
</comment>
</issue>


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<issue
   id="TMK-2"
   type="arm"
   linkend="extended_measure_representation_arm"
   status="closed"
   category="minor_technical"
   by="Tim King"
   date="03-10-21"
   seds="no"
   ballot_comment="yes" member_body="GB" resolution="accept">
<description>
  <p>
    Many of the modules in the ballot depend on the Application Module Extended
    measure representation (1106).  However, the definition of the
    Qualified_property_value_representation ARM entity is not clear. 
  </p>
  <p>
    The definition of "value_determination" is extremely poor:  "specifies
    information on how the Qualified_property_value_representation shall be
    interpreted. Where applicable the following values shall be used".  "shall
    be interpreted" is not testable.  "Where applicable" is meaningless.
    Change to "The following values may be used:". 
  </p>
  <p>
    The property_value_qualifier is also difficult to understand.  There is
    no illustration of the meanings "nominal", "specified", "typical".
    "nominal", in particular, is not a concept that suggests an obvious
    distinct meaning. 
  </p>
  <p>
    Moreover, there is no clear distinction between the attributes
    "value_determination" and "qualifier".  One clear indication of the issue
    is that both map to the same element in Part 45 type_qualifier, which has
    en example including both "nominal" and "measured" (i.e. collapsing to a
    single concept).  A further anomaly is that property_value_qualifier is an
    extensible enumeration.  Although extensible, this appears to be a concept
    that does not especially sit as an enumeration. 
  </p>
</description>


<comment
   by="Rob Bodington"
   date="03-10-30">
<description>
  <p>
    The use of the phrase "Where applicable" has been agreed by the Quality
    Committee as the phrase used to indicate reference data in the standard.
  </p>
  <p>
    Reword the description the of value_determination from:
    value_determination: specifies information on how the
    Qualified_property_value_representation shall be interpreted.  
  </p>
  <p>
    to:
    value_determination: the method by which the value has been determined.
  </p>
  <p>
    Replace the property_value_qualifier type with a STRING.
    List the enumerated values as a "Where applicable statement".
  </p>
  <p>
    Change the wording of 
    qualifier: specifies the kind of the <b>Qualified_property_value_representation.</b> 
  </p>
  <p>
    to:
    the qualification that is applicable to the representation of the
    property value.
    and detail the "Where applicable statement".
  </p>
</description>
</comment>
</issue>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<issue
   id="RBN-3"
   type="arm"
   linkend="Extended_measure_representation_mim"
   status="closed"
   category="minor_technical"
   by="Rob Bodington"
   date="03-10-31"
   seds="no">
<description>
  Use phrases for attributes and indicate which are optional
</description>
</issue>

</issues>
