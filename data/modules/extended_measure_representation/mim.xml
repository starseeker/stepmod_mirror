<?xml version="1.0"?>
<!-- $Id: express2xml.js,v 1.25 2002/11/06 00:59:57 thendrix Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  description.file="mim_descriptions.xml"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name="express2xml.js"
    owner="Eurostep Limited"
    url="http://www.eurostep.com"
    version="1.25"
    source="mim.exp"/>

  <schema name="Extended_measure_representation_mim">
    <interface
      kind="use"
      schema="Measure_representation_mim">
    </interface>

    <interface
      kind="use"
      schema="qualified_measure_schema">
      <interfaced.item
        name="precision_qualifier"/>
      <interfaced.item
        name="qualified_representation_item"/>
      <interfaced.item
        name="type_qualifier"/>
    </interface>

    <interface
      kind="use"
      schema="representation_schema">
      <interfaced.item
        name="compound_representation_item"/>
      <interfaced.item
        name="list_representation_item"/>
    </interface>

    <interface
      kind="use"
      schema="Value_with_unit_mim">
    </interface>

    <interface
      kind="reference"
      schema="support_resource_schema">
      <interfaced.item
        name="type_check_function"/>
    </interface>

    <type name="list_of_two_representation_items">
      <typename
        name="list_representation_item"/>

      <where
        label="WR1"
        expression="HIINDEX(SELF) = 2">
      </where>
    </type>
    <entity
      name="double_toleranced_measure_item"
      supertypes="compound_representation_item">
      <explicit
        name="item_element">
        <redeclaration
          entity-ref="compound_representation_item"/>
          <typename
            name="list_of_two_representation_items"/>
        </explicit>
        <derived
          name="tolerance_range"
          expression="SELF\compound_representation_item.item_element[2]">
          <typename
            name="value_range"/>
        </derived>
        <derived
          name="toleranced_measure_value"
          expression="SELF\compound_representation_item.item_element[1]">
          <typename
            name="measure_representation_item"/>
        </derived>
      </entity>

      <entity
        name="value_range"
        supertypes="compound_representation_item">
        <where
          label="WR1"
          expression="( 'EXTENDED_MEASURE_REPRESENTATION_MIM.'+ 'SET_REPRESENTATION_ITEM' IN     TYPEOF ( item_element ) ) AND value_range_wr1 (item_element )">
        </where>
        <where
          label="WR2"
          expression="value_range_wr2 ( item_element )">
        </where>
        <where
          label="WR3"
          expression="value_range_wr3 ( item_element )">
        </where>
      </entity>

      <function
        name="value_range_wr1">
        <parameter
          name="agg">
          <typename
            name="AGGREGATE OF representation_item"/>
        </parameter>
        <builtintype
          type="BOOLEAN"/>
        <algorithm>
  BEGIN
    IF (SIZEOF(agg) = 2) AND ((SIZEOF(QUERY ( i1 &lt;* agg | (
    'EXTENDED_MEASURE_REPRESENTATION_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF
    (i1)) )) = 2) OR 
    (SIZEOF(QUERY ( i2 &lt;* agg | (
    'EXTENDED_MEASURE_REPRESENTATION_MIM.VALUE_REPRESENTATION_ITEM' IN TYPEOF
    (i2)) )) = 2)) THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;
  END;
        </algorithm>

      </function>

      <function
        name="value_range_wr2">
        <parameter
          name="agg">
          <typename
            name="AGGREGATE OF representation_item"/>
        </parameter>
        <builtintype
          type="BOOLEAN"/>
        <algorithm>
  BEGIN
    IF (SIZEOF(QUERY ( i &lt;* agg | (i.name = 'upper limit') )) = 1)
    AND (SIZEOF(QUERY ( i &lt;* agg | (i.name = 'lower limit') )) = 1)
     THEN
      RETURN(TRUE);
    ELSE
      RETURN(FALSE);
    END_IF;
  END;
        </algorithm>

      </function>

      <function
        name="value_range_wr3">
        <parameter
          name="agg">
          <typename
            name="AGGREGATE OF representation_item"/>
        </parameter>
        <builtintype
          type="BOOLEAN"/>
        <algorithm>
BEGIN 
  IF (SIZEOF(QUERY( i1 &lt;* agg | 
    ('EXTENDED_MEASURE_REPRESENTATION_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i1)) AND 
  (SIZEOF ( QUERY (i2 &lt;* agg | 
    ('EXTENDED_MEASURE_REPRESENTATION_MIM.MEASURE_REPRESENTATION_ITEM' IN TYPEOF (i2)) AND 
  (i1 :&lt;&gt;: i2) AND  (i1\measure_with_unit.unit_component :=: i2\measure_with_unit.unit_component) ) ) = 1 ))) = 2 )
  THEN 
      RETURN (TRUE); 
  ELSE 
      RETURN (FALSE); 
  END_IF; 
END; 
        </algorithm>

      </function>

      <rule
        name="subtype_exclusiveness_representation_item"
        appliesto="representation_item">
        <algorithm>

        </algorithm>

        <where
          label="WR1"
          expression="SIZEOF(QUERY (cri &lt;* representation_item |                    NOT (type_check_function(cri,                       ['EXTENDED_MEASURE_REPRESENTATION_MIM.MEASURE_REPRESENTATION_ITEM',                        'EXTENDED_MEASURE_REPRESENTATION_MIM.VALUE_REPRESENTATION_ITEM',                        'EXTENDED_MEASURE_REPRESENTATION_MIM.COMPOUND_REPRESENTATION_ITEM'] , 3 )               ))) = 0">
        </where>

      </rule>

      <rule
        name="subtype_exclusiveness_compound_representation_item"
        appliesto="compound_representation_item">
        <algorithm>

        </algorithm>

        <where
          label="WR1"
          expression="SIZEOF(QUERY (cri &lt;* compound_representation_item |       NOT (type_check_function(cri,                 ['EXTENDED_MEASURE_REPRESENTATION_MIM.DOUBLE_TOLERANCED_MEASURE_ITEM',                  'EXTENDED_MEASURE_REPRESENTATION_MIM.VALUE_RANGE'] , 3 ) ))) = 0">
        </where>

      </rule>

    </schema>

  </express>
