(*
   $Id: mim.exp,v 1.15 2005/04/11 10:44:08 budreckytej Exp $
   ISO TC184/SC4/WG12 N3412 - ISO/CD-TS 10303-1672 Fill area - EXPRESS MIM
*)

SCHEMA Fill_area_mim;
	USE FROM Basic_curve_mim;	-- ISO/TS 10303-1651
	USE FROM Styled_curve_mim;	-- ISO/TS 10303-1749
	USE FROM Value_with_unit_extension_mim;	-- ISO/TS 10303-1753
--	USE FROM Annotated_presentation_mim;
	USE FROM Associative_text_mim;    -- ISO/TS 10303-1132

	USE FROM Extended_elemental_geometric_shape_mim;	-- ISO/TS 10303-1667	
	(** Layered_shape_arm is referenced just for the vector *)

	USE FROM Presentation_definition_schema
		(annotation_fill_area,
		annotation_fill_area_occurrence);
	USE FROM Presentation_appearance_schema(fill_area_style);

RULE fill_area_occurrence_constraint FOR 
( annotation_fill_area_occurrence );
WHERE
  WR1: SIZEOF(QUERY(afao <* annotation_fill_area_occurrence |
       NOT ('FILL_AREA_MIM.'
       + 'ANNOTATION_FILL_AREA' IN TYPEOF(afao.item))
       )) = 0;
  WR2: SIZEOF(QUERY(afao <* annotation_fill_area_occurrence |
       NOT ('FILL_AREA_MIM.'
       + 'CARTESIAN_POINT' IN TYPEOF(afao.fill_style_target))
       )) = 0;
  WR3: SIZEOF(QUERY(afao <* annotation_fill_area_occurrence |
       SIZEOF(QUERY(psa <* afao.styles |
       SIZEOF(QUERY(cs <* psa.styles |
       ('FILL_AREA_MIM.'
       + 'CURVE_STYLE' IN TYPEOF(cs))
       )) = 0
       )) = 0
       )) = 0;
END_RULE;

RULE fill_area_style_constraint FOR ( fill_area_style );
WHERE
  WR1: SIZEOF(QUERY(fas <* fill_area_style |
       NOT (SIZEOF(fas.fill_styles) = 1 )
       )) = 0;
END_RULE;

RULE fill_area_style_unique_constraint FOR (fill_area_style);

LOCAL
  r :  BAG OF fill_area_style := QUERY (r <* fill_area_style | TRUE);
  pass : BOOLEAN := TRUE;
  name_bag : BAG OF string := [];
END_LOCAL;

REPEAT i := 1 to SIZEOF (r) by 1;
  IF EXISTS( r[i]\fill_area_style.name ) THEN
    IF (r[i]\fill_area_style.name IN name_bag) THEN
      pass := FALSE;
      ESCAPE;
    ELSE
      name_bag := name_bag + r[i]\fill_area_style.name;
    END_IF;
  END_IF;
END_REPEAT;

WHERE
WR1 : pass;

END_RULE;
	
END_SCHEMA;



