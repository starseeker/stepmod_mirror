<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.13 2012/08/28 17:18:58 lothartklein Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="form_feature_in_panel"
   name.french="forme caract&#233;ristique dans panneau"
   part="1806"
   version="1"
   sc4.working_group="12"
   wg.number="7890"
   wg.number.arm="7891"
   wg.number.mim="7892"
   wg.number.supersedes="7327"
   wg.number.arm.supersedes="7328"
   wg.number.mim.supersedes="7329"
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="TS"
   language="E"
   publication.year="2013-01"
   publication.date="2013-01-01"
   published="y"
   rcs.date="$Date: 2012/08/28 17:18:58 $"
   rcs.revision="$Revision: 1.13 $"
   development.folder="dvlp">

 <keywords>
    module, form feature, panel
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope 
 <abstract>
    <li>xxxxx</li>
 </abstract>
-->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="ap242.projlead"/>
   <editor ref="ap242.editor"/>
 </contacts>

 <!-- Change history -->
 <!-- If the module is not a first edition, then document the change history -->
 <!-- If the module is a first edition, then comment out this section -->
<!-- 
 <changes>
  
   <change version="2">
     <description>XXX Optional edition description goes here</description>
     <arm.changes>
       <description>XXX Optional ARM description goes here</description>
       <arm.additions>
         <modified.object type="TYPE" name="ZZ"/>
       </arm.additions>
       <arm.modifications>
         <modified.object type="ENTITY" name="ZZ"/>
       </arm.modifications>
       <arm.deletions>        
         <modified.object type="TYPE" name="X" moved-to-module="ZZ"/>
       </arm.deletions>
     </arm.changes>

     <mapping.changes>
       <description>Optional mapping description goes here</description>
       <mapping.change>XXX description of mapping change goes here</mapping.change>
     </mapping.changes>

     <mim.changes>
       <description>XXX Optional ARM description goes here</description>
       <mim.additions>         
         <modified.object type="TYPE" name="ZZ"/>
       </mim.additions>
       <mim.modifications>
         <modified.object type="ENTITY" name="ZZ"/>
       </mim.modifications>
       <mim.deletions>         
         <modified.object type="TYPE" name="ZZ" moved-to-module="ZZ"/>
       </mim.deletions>
     </mim.changes>
   </change>
 </changes>  -->

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of areas of interest 
     on an already designed shape as a particular kind of feature whose type 
     and defining parameters are specified in this part of ISO 10303.
   </p>
   <p>
Usually, these features have a certain meaning to the user, 
such as a correspondence to a manufacturing process operation managed or manageable by the user.
   </p>
   <p>
This part of ISO 10303 distinguishes between form features for sheet-type parts or tools. 
Among these features are stair step, pocket, locator, hole, hole with barring, slot, rib, bead, boss and joggle. 
Figure xxx shows the features for sheet-type parts covered.
   </p>
	<figure number="1"> <title>Form features in panel</title>
			<img src="xxx.gif"/>	
	</figure>
   <p>
Within this application module, a variation of the feature parameters does not result 
in a change of the shape of the part where the features are applied, 
i.e., the shape, which is defined explicitly, is not dependent on the feature parameters.
The parameters may be used to specify the areas of interest in a more appropriate way, 
e.g., to support manufacturing planning.     
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
      <li>features in sheet metal parts;</li>
	  <li>items within the scope of application module <module_ref linkend="basic_geometry:1_scope">Basic geometry</module_ref>, ISO/TS 10303-1652;</li>
      <li>items within the scope of application module <module_ref linkend="elemental_topology:1_scope">Elemental topology</module_ref>, ISO/TS 10303-1005;</li>
      <li>items within the scope of application module <module_ref linkend="machining_features:1_scope">Machining features</module_ref>, ISO/TS 10303-1814;</li>
      <li>items within the scope of application module <module_ref linkend="shape_feature:1_scope">Shape feature</module_ref>, ISO/TS 10303-1764;</li>
      <li>items within the scope of application module <module_ref linkend="value_with_unit_extension:1_scope">Value with unit extension</module_ref>, ISO/TS 10303-1753.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope> -->

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
     <imgfile file="armexpg3.xml"/>
     <imgfile file="armexpg4.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
<mapping_table> 

<!--  ++  BEAD_END_TYPE  ++ -->
<ae entity="Bead_end_type">
	<aimelt>bead_end</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		bead_end &lt;=
		shape_aspect
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
	<aa attribute="is_applied_to" assertion_to="starting_or_ending">
		<aimelt>shape_aspect_relationship.description</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			bead_end &lt;=
			shape_aspect &lt;-
			shape_aspect_relationship.relating_shape_aspect
			shape_aspect_relationship
			{shape_aspect_relationship.name = 'bead end usage'}
			shape_aspect_relationship.description
			{(shape_aspect_relationship.description = 'starting' )
			(shape_aspect_relationship.description = 'ending' )} 
		</refpath>
	</aa>
</ae> 

<!--  ++  BEAD_FEATURE  ++ -->
<ae entity="Bead_feature">
	<aimelt>bead</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		bead &lt;=
		feature_definition &lt;=
		characterized_object 	
	</refpath>
	<aa attribute="base_radius" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			bead &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'base radius'}
			measure_representation_item
			{[measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = length_measure
			(length_measure)
			(length_measure = 0.0)]
			[measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit]}
		</refpath>
	</aa>
	<aa attribute="bead_profile" assertion_to="Open_profile_usage">
		<aimelt>PATH</aimelt>
		<refpath>
			bead &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'bead profile']
			[shape_aspect.description = 'open profile occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.description = 'profile usage']
			[shape_aspect_relationship =&gt;
			shape_defining_relationship]}
		</refpath>
	</aa>
	<aa attribute="end_condition" assertion_to="Bead_end_type">
		<aimelt>PATH</aimelt>
		<refpath>
			bead &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'end condition']
			[shape_aspect.description = 'bead end occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.name = 'bead end usage']
			[shape_aspect_relationship =&gt;
			feature_component_relationship]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;>
			bead_end			
		</refpath>
	</aa>
	<aa attribute="sweep_path" assertion_to="Path_feature_component">
		<aimelt>PATH</aimelt>
		<refpath>
			bead &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'sweep path']
			[shape_aspect.description = 'path feature component occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.description = 'path feature component usage']
			[shape_aspect_relationship =&gt;
			shape_defining_relationship]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			path_feature_component		
		</refpath>
	</aa>
</ae> 

<!--  ++  CLOSED_PROFILE_USAGE  ++ -->
<ae entity="Closed_profile_usage">
	<aimelt>shape_defining_relationship</aimelt>
	<source>ISO 10303-522</source>
	<refpath>
		shape_defining_relationship &lt;=
		shape_aspect_relationship
		{shape_aspect_relationship.description = 'profile usage'}
	</refpath>
</ae> 

<!--  ++  COMPOUND_FEATURE_IN_PANEL  ++ -->
<ae entity="Compound_feature_in_panel">
	<aimelt>compound_feature</aimelt>
	<source>ISO 10303-522</source>
	<refpath>
		{compound_feature &lt;=
		feature_definition &lt;=
		characterized_object
		characterized_definition = characterized_object
		characterized_definition &lt;-
		property_definition.definition
		property_definition =&gt;
		product_definition_shape &lt;-
		shape_aspect.of_shape
		shape_aspect
		{shape_aspect =&gt;
		composite_shape_aspect}
		shape_aspect.name = 'compound feature in panel'}
	</refpath>
	<aa attribute="feature_type">
		<aimelt>characterized_object.name</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			compound_feature &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_object.name
		</refpath>
	</aa>
</ae> 

<!--  ++  COMPOUND_FEATURE_IN_PANEL_ELEMENT  ++ -->
<ae entity="Compound_feature_in_panel_element">
	<alt_map id="1">
		<description>If the component is an integral part of the compound.</description>
		<aimelt>instanced_feature</aimelt>
		<source>ISO 10303-47</source>
		<refpath>
			instanced_feature &lt;=
			[shape_aspect]
			[feature_definition &lt;=
			characterized_object]	
		</refpath>
	</alt_map>
	<alt_map id="2">
		<description>If the component is defined independently and placed in the compound by a transformation.</description>
		<aimelt>placed_feature</aimelt>
		<source>ISO 10303-1764</source>
		<refpath>
			placed_feature &lt;=
			shape_aspect
		</refpath>
	</alt_map>
	<alt_map id="3">
		<description>If the component is a transition_feature.</description>
		<aimelt>transition_feature</aimelt>
		<source>ISO 10303-522</source>
		<refpath>
			transition_feature &lt;=
			shape_aspect
		</refpath>
	</alt_map>
	<aa attribute="element_placement" assertion_to="Geometric_placement_operation">
		<alt_map id="2">
			<description>If the component is defined independently and placed in the compound by a transformation.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				placed_feature &lt;=
				shape_aspect
				shape_definition = shape_aspect
				shape_definition
				characterized_definition = shape_definition
				characterized_definition &lt;-
				property_definition.definition
				property_definition
				represented_definition = property_definition
				represented_definition &lt;-
				property_definition_representation.definition
				property_definition_representation
				{property_definition_representation =&gt;
				shape_definition_representation}
				property_definition_representation.used_representation -&gt;
				representation
				{[representation.name = 'feature definition placement']
				[representation =&gt;
				shape_representation]}
				representation.items[i] -&gt;
				representation_item =&gt;
				mapped_item	
			</refpath>
		</alt_map>
	</aa>
	<aa attribute="feature" assertion_to="Process_feature_in_panel">
		<alt_map id="1">
			<description>If the component is an integral part of the compound.</description>
			<aimelt>IDENTICAL MAPPING</aimelt>
			<refpath>
				instanced_feature &lt;=
				feature_definition
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>If the component is defined independently and placed in the compound by a transformation.</description>
			<aimelt>IDENTICAL MAPPING</aimelt>
			<refpath>
				placed_feature &lt;=
				shape_aspect
				{shape_aspect
				shape_definition = shape_aspect
				shape_definition
				characterized_definition = shape_definition
				characterized_definition &lt;-
				property_definition.definition
				property_definition
				represented_definition = property_definition
				represented_definition &lt;-
				property_definition_representation.definition
				property_definition_representation
				{property_definition_representation =&gt;
				shape_definition_representation}
				property_definition_representation.used_representation -&gt;
				representation
				{[representation.name = 'feature definition placement']
				[representation =&gt;
				shape_representation]}
				representation.items [i] -&gt;
				representation_item =&gt;
				mapped_item
				mapped_item.mapping_source -&gt;
				representation_map
				representation_map.mapped_representation -&gt;
				representation &lt;-
				{representation =&gt;
				shape_representation =&gt;
				shape_representation_with_parameters}
				property_definition_representation.used_representation
				property_definition_representation
				{property_definition_representation =&gt;
				shape_definition_representation}
				property_definition_representation.definition -&gt;
				represented_definition
				represented_definition = property_definition
				property_definition
				property_definition.definition -&gt;
				characterized_definition
				characterized_definition = characterized_object
				characterized_object =&gt;
				feature_definition}				
			</refpath>
		</alt_map>
	</aa>
	<aa attribute="feature" assertion_to="Transition_feature">
		<aimelt>IDENTICAL MAPPING</aimelt>
	</aa>
	<aa attribute="is_element_for" assertion_to="Compound_feature_in_panel">
		<alt_map id="1">
			<description>If the component is an integral part of the compound.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				instanced_feature &lt;=
				shape_aspect &lt;-
				shape_aspect_relationship.related_shape_aspect
				shape_aspect_relationship &lt;-
				{shape_aspect_relationship =&gt;
				feature_component_relationship}
				composite_shape_aspect.component_relationships[i]
				composite_shape_aspect &lt;=
				shape_aspect
				{shape_aspect.name = 'compound feature in panel'}
				shape_aspect.of_shape -&gt;
				product_definition_shape &lt;=
				property_definition
				property_definition.definition -&gt;
				characterized_definition
				characterized_definition = characterized_object
				characterized_object =&gt;
				feature_definition =&gt;
				compound_feature				
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>If the component is defined independently and placed in the compound by a transformation.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				placed_feature &lt;=
				shape_aspect &lt;-
				shape_aspect_relationship.related_shape_aspect
				shape_aspect_relationship &lt;-
				{shape_aspect_relationship =&gt;
				feature_component_relationship}
				composite_shape_aspect.component_relationships[i]
				composite_shape_aspect &lt;=
				shape_aspect
				{shape_aspect.name = 'compound feature in panel'}
				shape_aspect.of_shape -&gt;
				product_definition_shape &lt;=
				property_definition
				property_definition.definition -&gt;
				characterized_definition
				characterized_definition = characterized_object
				characterized_object =&gt;
				feature_definition =&gt;
				compound_feature
			</refpath>
		</alt_map>	
		<alt_map id="3">
			<description>If the component is a transition_feature.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				transition_feature &lt;=
				shape_aspect &lt;-
				shape_aspect_relationship.related_shape_aspect
				shape_aspect_relationship &lt;-
				{shape_aspect_relationship =&gt;
				feature_component_relationship}
				composite_shape_aspect.component_relationships[i]
				composite_shape_aspect &lt;=
				shape_aspect
				{shape_aspect.name = 'compound feature in panel'}
				shape_aspect.of_shape -&gt;
				product_definition_shape &lt;=
				property_definition
				property_definition.definition -&gt;
				characterized_definition
				characterized_definition = characterized_object
				characterized_object =&gt;
				feature_definition =&gt;
				compound_feature
			</refpath>
		</alt_map>
	</aa>
</ae> 

<!--  ++  COMPOUND_FEATURE_IN_PANEL_ELEMENT_RELATIONSHIP  ++ -->
<ae entity="Compound_feature_in_panel_element_relationship">
	<aimelt>shape_aspect_relationship</aimelt>
	<source>ISO 10303-41</source>
	<rules>compound_features_of_equal_type</rules>
	<refpath>
		{shape_aspect_relationship
		shape_aspect_relationship.name = 'compound feature ordering'}		
	</refpath>
	<aa attribute="successor" assertion_to="Compound_feature_in_panel_element">
		<alt_map id="1">
			<description>If the component is an integral part of the compound.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				shape_aspect_relationship
				shape_aspect_relationship.relating_shape_aspect -&gt;
				shape_aspect =&gt;
				instanced_feature
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>If the component is defined independently and placed in the compound by a transformation.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				shape_aspect_relationship
				shape_aspect_relationship.relating_shape_aspect -&gt;
				shape_aspect =&gt;
				placed_feature
			</refpath>
		</alt_map>
		<alt_map id="3">
			<description> If the component is a transition_feature.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				shape_aspect_relationship
				shape_aspect_relationship.relating_shape_aspect -&gt;
				shape_aspect =&gt;
				transition_feature
			</refpath>
		</alt_map>
	</aa>
	<aa attribute="predecessor" assertion_to="Compound_feature_in_panel_element">
		<alt_map id="1">
			<description>If the component is an integral part of the compound.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				shape_aspect_relationship
				shape_aspect_relationship.related_shape_aspect -&gt;
				shape_aspect =&gt;
				instanced_feature
			</refpath>
		</alt_map>
		<alt_map id="2">
			<description>If the component is defined independently and placed in the compound by a transformation.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				shape_aspect_relationship
				shape_aspect_relationship.related_shape_aspect -&gt;
				shape_aspect =&gt;
				placed_feature
			</refpath>
		</alt_map>
		<alt_map id="3">
			<description> If the component is a transition_feature.</description>
			<aimelt>PATH</aimelt>
			<refpath>
				shape_aspect_relationship
				shape_aspect_relationship.related_shape_aspect -&gt;
				shape_aspect =&gt;
				transition_feature
			</refpath>
		</alt_map>
	</aa>
</ae> 

<!--  ++  DIRECTED_ANGLE  ++ -->
<ae entity="Directed_angle">
	<aimelt>directed_angle</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		directed_angle &lt;=
		shape_aspect 
	</refpath>
	<aa attribute="angle" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			directed_angle &lt;=
			shape_aspect &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'angle'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit} 
		</refpath>
	</aa>
	<aa attribute="angle_reference" assertion_to="angle_reference_enumeration">
		<aimelt>shape_aspect.description</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			directed_angle &lt;=
			shape_aspect
			shape_aspect.description
			{(shape_aspect.description = 'punch direction')
			(shape_aspect.description = 'profile normal')
			(shape_aspect.description = 'surface normal')} 
		</refpath>
	</aa>
</ae> 

<!--  ++  FACE_TERMINATION  ++ -->
<ae entity="Face_termination">
	<aimelt>joggle_termination</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		joggle_termination &lt;=
		shape_aspect
		{shape_aspect.description = 'face termination'}
	</refpath>
</ae> 

<!--  ++  FORM_FEATURE_IN_PANEL  ++ -->
<ae entity="Form_feature_in_panel">
	<aimelt>feature_in_panel</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		feature_in_panel &lt;=
		feature_definition &lt;=
		characterized_object 
	</refpath>
	<aa attribute="base_boundary_defined_by" assertion_to="Closed_profile_usage">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'base boundary']
			[shape_aspect.description = 'closed profile occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship =&gt;
			{shape_aspect_relationship.description = 'profile usage'}
			shape_defining_relationship 
		</refpath>
	</aa>
	<aa attribute="base_boundary_defined_by" assertion_to="Directed_angle">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'base boundary']
			[shape_aspect.description = 'directed angle occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.name = 'directed angle usage']
			[shape_aspect_relationship =&gt;
			shape_defining_relationship]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			directed_angle
		</refpath>
	</aa>
	<aa attribute="base_radius" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'base radius'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="feature_type" assertion_to="form_feature_in_panel_type">
		<aimelt>characterized_object.description</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_object.description 
			{(characterized_object.description = 'pocket')
			(characterized_object.description = 'boss')
			(characterized_object.description = 'stairstep')}
		</refpath>
	</aa>
	<aa attribute="target_boundary_defined_by" assertion_to="Closed_profile_usage">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'target boundary']
			[shape_aspect.description = 'closed profile occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship =&gt;
			{shape_aspect_relationship.description = 'profile usage'}
			shape_defining_relationship 
		</refpath>
	</aa>
	<aa attribute="target_boundary_defined_by" assertion_to="Directed_angle">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'target boundary']
			[shape_aspect.description = 'directed angle occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.name = 'directed angle usage']
			[shape_aspect_relationship =&gt;
			shape_defining_relationship]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			directed_angle
		</refpath>
	</aa>
	<aa attribute="target_face" assertion_to="Connected_face_set">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{[representation.name = 'target face']
			[representation =&gt;
			shape_representation =&gt;
			face_shape_representation]}
			representation.items[i] -&gt;
			representation_item =&gt;
			topological_representation_item =&gt;
			connected_face_set =&gt;
			(closed_shell)
			(open_shell) 
		</refpath>
	</aa>
	<aa attribute="target_face" assertion_to="Surface">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{[representation.name = 'target face']
			[representation =&gt;
			shape_representation =&gt;
			face_shape_representation]}
			representation.items[i] -&gt;
			representation_item =&gt;
			geometric_representation_item =&gt;
			face_surface
			face_surface.face_geometry -&gt;
			surface 
		</refpath>
	</aa>
	<aa attribute="target_radius" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_in_panel &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'target radius'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  HOLE_FEATURE_IN_PANEL  ++ -->
<ae entity="Hole_feature_in_panel">
	<aimelt>hole_in_panel</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		hole_in_panel &lt;=
		feature_definition &lt;=
		characterized_object 
	</refpath>
	<aa attribute="hole_profile" assertion_to="Closed_profile_usage">
		<aimelt>PATH</aimelt>
		<refpath>
			hole_in_panel &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'hole profile']
			[shape_aspect.description = 'closed profile occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship =&gt;
			{shape_aspect_relationship.description = 'profile usage'}
			shape_defining_relationship
		</refpath>
	</aa>
	<aa attribute="hole_type">
		<aimelt>characterized_object.description</aimelt>
		<source>ISO 10303-41</source>
		<refpath>
			hole_in_panel &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_object.description
		</refpath>
	</aa>
</ae> 

<!--  ++  JOGGLE_FEATURE  ++ -->
<ae entity="Joggle_feature">
	<aimelt>joggle</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		joggle &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="base_radius_1" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'base radius 1'}
			measure_representation_item
			{[measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = length_measure
			(length_measure)
			(length_measure = 0.0)]
			[measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit]}
		</refpath>
	</aa>
	<aa attribute="base_radius_2" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'base radius 2'}
			measure_representation_item
			{[measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = length_measure
			(length_measure)
			(length_measure = 0.0)]
			[measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit]}
		</refpath>
	</aa>
	<aa attribute="defining_path" assertion_to="Linear_path_feature_component">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'defining path']
			[shape_aspect.description = 'path feature component occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.description = 'path feature component usage']
			[shape_aspect_relationship =&gt;
			shape_defining_relationship]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			{shape_aspect.description = 'linear'}
			path_feature_component
		</refpath>
	</aa>
	<aa attribute="direction_angle_1" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'direction angle 1'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="direction_angle_2" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'direction angle 2'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="height" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'height'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="slope_angle_1" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'slope angle 1'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="slope_angle_2" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'slope angle 2'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="termination" assertion_to="Joggle_termination">
		<aimelt>PATH</aimelt>
		<refpath>
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'termination']
			[shape_aspect.description = 'joggle termination occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.name = 'joggle termination usage']
			[shape_aspect_relationship =&gt;
			feature_component_relationship]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			joggle_termination
		</refpath>
	</aa>
	<aa attribute="top_radius_1" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'top radius 1'}
			measure_representation_item
			{[measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = length_measure
			(length_measure)
			(length_measure = 0.0)]
			[measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit]}
		</refpath>
	</aa>
	<aa attribute="top_radius_2" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'top radius 2'}
			measure_representation_item
			{[measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = length_measure
			(length_measure)
			(length_measure = 0.0)]
			[measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit]}
		</refpath>
	</aa>
</ae> 

<!--  ++  JOGGLE_TERMINATION  ++ -->
<ae entity="Joggle_termination">
	<aimelt>joggle_termination</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		joggle_termination &lt;=
		shape_aspect
		{shape_aspect.of_shape -&gt;
		product_definition_shape &lt;=
		property_definition
		property_definition.definition -&gt;
		characterized_definition
		characterized_definition = characterized_object
		characterized_object =&gt;
		feature_component_definition}
	</refpath>
</ae> 

<!--  ++  LINEAR_BEAD_END_TYPE  ++ -->
<ae entity="Linear_bead_end_type">
	<aimelt>bead_end</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		bead_end &lt;=
		shape_aspect
		{shape_aspect.description = 'linear'}
	</refpath>
	<aa attribute="end_length" assertion_to="Length_data_element">
		<aimelt>measure_representation_item</aimelt>
		<source>ISO 10303-45</source>
		<rules>dependent_instantiable_measure_with_unit</rules>
		<refpath>
			bead_end &lt;=
			shape_aspect
			shape_aspect &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'end length'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="end_shape" assertion_to="straight_or_tapered">
		<aimelt>descriptive_representation_item.description</aimelt>
		<source>ISO 10303-45</source>
		<refpath>
			bead_end &lt;=
			shape_aspect
			shape_aspect &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'end shape'}
			descriptive_representation_item
			{(descriptive_representation_item.description = 'straight')
			(descriptive_representation_item.description = 'tapered')}
		</refpath>
	</aa>
</ae> 

<!--  ++  LOCATOR_FEATURE  ++ -->
<ae entity="Locator_feature">
	<aimelt>locator</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		locator &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="base_radius" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			locator &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'base radius'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="diameter" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			locator &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'diameter'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="tip_angle" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			locator &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'tip angle'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="tip_radius" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			locator &lt;=
			feature_definition &lt;=
			characterized_object
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'tip radius'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
</ae> 

<!--  ++  OPEN_BEAD_END_TYPE  ++ -->
<ae entity="Open_bead_end_type">
	<aimelt>bead_end</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		bead_end &lt;=
		shape_aspect
		{shape_aspect.description = 'open'}
	</refpath>
</ae> 

<!--  ++  OPEN_PROFILE_USAGE  ++ -->
<ae entity="Open_profile_usage">
	<aimelt>shape_defining_relationship</aimelt>
	<source>ISO 10303-522</source>
	<refpath>
		shape_defining_relationship &lt;=
		shape_aspect_relationship
		{shape_aspect_relationship.description = 'profile usage'}
	</refpath>
	<aa attribute="profile_limit" assertion_to="Plane">
		<aimelt>PATH</aimelt>
		<refpath>
			shape_defining_relationship &lt;=
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect
			shape_definition = shape_aspect
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation .used_representation -&gt;
			representation
			{representation =&gt;
			{representation.name = 'profile limit'}
			shape_representation =&gt;
			planar_shape_representation}
			representation.items [i] -&gt;
			representation_item =&gt;
			geometric_representation_item =&gt;
			surface =&gt;
			elementary_surface =&gt;
			plane
		</refpath>
	</aa>
	<aa attribute="used_profile" assertion_to="Open_profile">
		<aimelt>PATH</aimelt>
		<refpath>
			shape_defining_relationship &lt;=
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect
		</refpath>
	</aa>
</ae> 

<!--  ++  PANEL_HOLE_WITH_BARRING  ++ -->
<ae entity="Panel_hole_with_barring">
	<aimelt>barring_hole</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		barring_hole &lt;=
		feature_definition &lt;=
		characterized_object
	</refpath>
	<aa attribute="angle_defined_by" assertion_to="Directed_angle">
		<aimelt>PATH</aimelt>
		<refpath>
			barring_hole &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'barring angle']
			[shape_aspect.description = 'directed angle occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship
			{[shape_aspect_relationship.name = 'directed angle usage']
			[shape_aspect_relationship =&gt;
			shape_defining_relationship]}
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect =&gt;
			directed_angle
		</refpath>
	</aa>
	<aa attribute="barring_profile" assertion_to="Closed_profile_usage">
		<aimelt>PATH</aimelt>
		<refpath>
			barring_hole &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition =&gt;
			product_definition_shape &lt;-
			shape_aspect.of_shape
			shape_aspect &lt;-
			{[shape_aspect.name = 'barring profile']
			[shape_aspect.description = 'closed profile occurrence']}
			shape_aspect_relationship.related_shape_aspect
			shape_aspect_relationship =&gt;
			{shape_aspect_relationship.description = 'profile usage'}
			shape_defining_relationship
		</refpath>
	</aa>
	<aa attribute="base_radius" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			barring_hole &lt;=
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'base radius'}
			measure_representation_item
			{[measure_representation_item &lt;=
			measure_with_unit
			measure_with_unit.value_component -&gt;
			measure_value
			measure_value = length_measure
			(length_measure)
			(length_measure = 0.0)]
			[measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit]}
		</refpath>
	</aa>
</ae> 

<!--  ++  PROCESS_FEATURE_IN_PANEL  ++ -->
<ae entity="Process_feature_in_panel">
	<aimelt>feature_definition</aimelt>
	<source>ISO 10303-47</source>
	<refpath>
		feature_definition &lt;=
		{feature_definition =&gt;
		(barring_hole)
		(bead)
		(hole_in_panel)
		(feature_in_panel)
		(joggle)
		(locator)
		(compound_feature)}
		characterized_object
	</refpath>
	<aa attribute="punch_direction" assertion_to="Direction">
		<aimelt>direction</aimelt>
		<source>ISO 10303-42</source>
		<refpath>
			feature_definition &lt;=
			characterized_object 
			characterized_definition = characterized_object
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			{property_definition =&gt;
			product_definition_shape}
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			{representation.name = 'punch direction'}
			shape_representation =&gt;
			direction_shape_representation}
			representation.items [i] -&gt;
			representation_item =&gt;
			geometric_representation_item =&gt;
			direction
		</refpath>
	</aa>
</ae> 

<!--  ++  PROFILE_USAGE  ++ -->
<ae entity="Profile_usage">
	<aimelt>shape_defining_relationship</aimelt>
	<source>ISO 10303-522</source>
	<refpath>
		shape_defining_relationship &lt;=
		shape_aspect_relationship
		{shape_aspect_relationship.description = 'profile usage'}
	</refpath>
	<aa attribute="profile_placement" assertion_to="Geometric_placement_operation">
		<aimelt>PATH</aimelt>
		<refpath>
			shape_defining_relationship &lt;=
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect
			shape_definition = shape_aspect 
			shape_definition
			characterized_definition = shape_definition
			characterized_definition &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation &lt;-
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation_map.mapped_representation
			representation_map &lt;-
			mapped_item.mapping_source
			mapped_item
		</refpath>
	</aa>
	<aa attribute="used_profile" assertion_to="Profile">
		<aimelt>PATH</aimelt>
		<refpath>
			shape_defining_relationship &lt;=
			shape_aspect_relationship
			shape_aspect_relationship.relating_shape_aspect -&gt;
			shape_aspect
		</refpath>
	</aa>
</ae> 

<!--  ++  RADIUSED_BEAD_END_TYPE  ++ -->
<ae entity="Radiused_bead_end_type">
	<aimelt>bead_end</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		bead_end &lt;=
		shape_aspect
		{shape_aspect.description = 'radiused'}
	</refpath>
</ae> 

<!--  ++  VALUE_TERMINATION  ++ -->
<ae entity="Value_termination">
	<aimelt>joggle_termination</aimelt>
	<source>ISO 10303-1806</source>
	<refpath>
		joggle_termination &lt;=
		shape_aspect
		{shape_aspect.description = 'value termination'}
	</refpath>
	<aa attribute="depth" assertion_to="Length_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle_termination &lt;=
			shape_aspect
			shape_aspect &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'depth'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			length_measure_with_unit}
		</refpath>
	</aa>
	<aa attribute="angle" assertion_to="Angle_data_element">
		<aimelt>PATH</aimelt>
		<refpath>
			joggle_termination &lt;=
			shape_aspect
			shape_aspect &lt;-
			property_definition.definition
			property_definition
			represented_definition = property_definition
			represented_definition &lt;-
			property_definition_representation.definition
			property_definition_representation
			{property_definition_representation =&gt;
			shape_definition_representation}
			property_definition_representation.used_representation -&gt;
			representation
			{representation =&gt;
			shape_representation =&gt;
			shape_representation_with_parameters}
			representation.items[i] -&gt;
			representation_item =&gt;
			{representation_item.name = 'angle'}
			measure_representation_item
			{measure_representation_item &lt;=
			measure_with_unit =&gt;
			plane_angle_measure_with_unit}
		</refpath>
	</aa>
</ae>
</mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
   <shortnames>
      <shortname name="BRRHL" entity="barring_hole"/>
	  <shortname name="BEAD" entity="bead"/>
	  <shortname name="BDEND" entity="bead_end"/>	 
	  <shortname name="DRCANG" entity="directed_angle"/> 
      <shortname name="FTINPN" entity="feature_in_panel"/>
      <shortname name="HLINPN" entity="hole_in_panel"/>
      <shortname name="JOGGLE" entity="joggle"/>
      <shortname name="JGGTRM" entity="joggle_termination"/>
      <shortname name="LCTR" entity="locator"/>
   </shortnames>                                 		          		               	      
 </mim>


 <!-- Clause 6 Module reference data -->
<!--
 <refdata>
   <refdata_subclause title='Classifications of x'>
   </refdata_subclause>
 </refdata>
-->

</module>
