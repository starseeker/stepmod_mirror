<?xml version='1.0' encoding='UTF-8'?>
<!-- $Id: arm_lf.xml,v 1.8 2007/08/30 00:22:32 abhpf Exp $ -->
<?xml-stylesheet type="text/xsl" href="../../../xsl/express.xsl"?>
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<express
  language_version="2"
  rcs.date="$Date: 2007/08/30 00:22:32 $"
  rcs.revision="$Revision: 1.8 $">

  <application
    name=" Eurostep EXPRESS Parser (Eep!)"
    owner="Eurostep Limited"
    url="www.eurostep.com"
    version="1, 3, 30, 37"
    source="arm_lf.exp"/>

  <schema name="Function_based_behaviour_arm_LF">
    <type name="behaviour_item">
      <select
        selectitems="Behaviour_view_definition"
      />
    </type>

    <type name="behaviour_model">
      <select
        selectitems="Function_based_behaviour_model"
      />
    </type>

    <type name="expression_assignment_item">
      <select
        selectitems="Condition"
      />
    </type>

    <type name="required_resource_item">
      <select
        selectitems="Activity_method Product Product_version Product_view_definition Task_element Task_step"
      />
    </type>

    <type name="characterized_resource_select">
      <select
        selectitems="Required_resource Resource_item Resource_item_assignment Resource_item_relationship"
      />
    </type>

    <type name="list_of_text_based_item">
      <aggregate type="LIST"
        lower="1"
        upper="?"
      />
      <typename name="Textual_expression_representation_item"/>
    </type>

    <type name="list_or_set_of_text_based_item">
      <select
        selectitems="list_of_text_based_item set_of_text_based_item"
      />
    </type>

    <type name="set_of_text_based_item">
      <aggregate type="SET"
        lower="1"
        upper="?"
      />
      <typename name="Textual_expression_representation_item"/>
    </type>

    <type name="text_based_item_select">
      <select
        selectitems="Included_text_based_representation Textual_expression_composition Textual_expression_representation_item"
      />
    </type>

    <type name="identification_item">
      <select
        selectitems="Activity_method Activity_method_relationship Applied_activity_method_assignment Behaviour Behaviour_version Behaviour_view_definition Condition Digital_file External_class_library External_source_identification File Independent_property Independent_property_relationship Product Product_category Product_version Product_view_definition Representation Required_resource Required_resource_relationship Resource_item Resource_property Task_element Task_element_relationship Task_io Task_step"
      />
    </type>

    <type name="external_identification_item">
      <select
        selectitems="File"
      />
    </type>

    <type name="task_item">
      <typename name="activity_method_item"/>
      <where
        label="wr1"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.ACTIVITY_METHOD&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr2"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.ASSIGNED_PROPERTY&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr3"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.BEHAVIOUR_DESCRIPTION_ASSOCIATION&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr4"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.CONDITION&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr5"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.FILE&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr6"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.PRODUCT_VERSION_RELATIONSHIP&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr7"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.REQUIRED_RESOURCE&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr8"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.REQUIRED_RESOURCE_ASSIGNMENT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr9"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.RESOURCE_ITEM&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr10"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.RESOURCE_PROPERTY&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr11"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.TASK_IO&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr12"
        expression="NOT (&apos;FUNCTION_BASED_BEHAVIOUR_ARM.TASK_IO_HIERARCHY&apos; IN TYPEOF(SELF))">
      </where>
    </type>

    <type name="any_number_value">
      <builtintype type="NUMBER"
      />
    </type>

    <type name="any_string_value">
      <builtintype type="STRING"
      />
    </type>

    <type name="length_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="measure_value">
      <select
        selectitems="any_number_value any_string_value length_measure plane_angle_measure"
      />
    </type>

    <type name="plane_angle_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="classification_item">
      <select
        selectitems="Activity_method Activity_method_relationship Applied_activity_method_assignment Class Condition Condition_assignment Condition_parameter Condition_relationship Constrained_general_parameter_relationship Context_dependent_unit Conversion_based_unit Derived_unit External_class_library External_item_identification External_source_identification File General_model_parameter Identification_assignment Independent_property Independent_property_relationship Parameter_value_representation_item Product Product_category Product_version Product_version_relationship Product_view_definition Representation Representation_context Representation_item Required_resource Required_resource_assignment Required_resource_relationship Resource_item Resource_item_assignment Resource_item_relationship Resource_property Resource_property_representation Supplied_part_relationship Text_based_representation Uncertainty_with_unit Unit Value_with_unit View_definition_context"
      />
    </type>

    <type name="assigned_name_select">
      <select
        selectitems="External_class_library"
      />
    </type>

    <type name="parameter_value_select">
      <select
        selectitems="Generic_expression Value_with_unit"
      />
    </type>

    <type name="property_assignment_select">
      <select
        selectitems="Activity_method Assigned_property Behaviour_view_definition Condition_parameter Generic_expression Independent_property Independent_property_relationship Product Product_category Product_version Product_version_relationship Product_view_definition Property_definition_representation Representation Representation_context Representation_item"
      />
    </type>

    <type name="represented_definition">
      <select
        selectitems="Assigned_property Independent_property"
      />
    </type>

    <type name="resource_assignment_item">
      <select
        selectitems="Activity_method Product Product_version Product_view_definition"
      />
    </type>

    <type name="resource_item_select">
      <select
        selectitems="File Product Product_version Product_view_definition"
      />
    </type>

    <type name="activity_method_item">
      <select
        selectitems="Activity_method Assigned_property Behaviour_description_association Condition File Product Product_version Product_version_relationship Product_view_definition Required_resource Required_resource_assignment Resource_item Resource_property Task_io Task_io_hierarchy"
      />
    </type>

    <type name="condition_item">
      <select
        selectitems="Activity_method_relationship Applied_activity_method_assignment Assigned_property Required_resource Required_resource_assignment Required_resource_relationship Resource_item Resource_item_assignment Resource_item_relationship Resource_property Task_element_relationship"
      />
    </type>

    <type name="condition_parameter_item">
      <select
        selectitems="Activity_method Assigned_property Classification_assignment Condition_relationship Identification_assignment Independent_property_representation parameter_value_select Product Product_category_assignment Product_version Product_view_definition Property_representation Representation Required_resource Resource_property Resource_property_representation"
      />
    </type>

    <entity name="External_source_identification"
    >
      <explicit
        name="source_id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="source_type">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="item">
        <typename name="external_identification_item"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Behaviour_view_definition"
      supertypes="Product_view_definition"
    >
      <explicit
        name="defined_version">
        <typename name="Behaviour_version"/>
        <redeclaration
          entity-ref="Product_view_definition"/>
      </explicit>
    </entity>

    <entity name="Expression_assignment"
    >
      <explicit
        name="expression">
        <typename name="Expression"/>
      </explicit>
      <explicit
        name="item">
        <typename name="expression_assignment_item"/>
      </explicit>
    </entity>

    <entity name="And_expression"
      supertypes="Multiple_arity_boolean_expression"
    >
    </entity>

    <entity name="Binary_boolean_expression"
      abstract.supertype="YES"
      supertypes="Boolean_expression Binary_generic_expression"
      super.expression="ONEOF(Xor_expression, Equals_expression)"
    >
    </entity>

    <entity name="Binary_numeric_expression"
      abstract.supertype="YES"
      supertypes="Numeric_expression Binary_generic_expression"
      super.expression="ONEOF(Minus_expression, Div_expression, Mod_expression, Slash_expression, Power_expression)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="Numeric_expression"/>
        <redeclaration
          entity-ref="Binary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Boolean_defined_function"
      abstract.supertype="YES"
      supertypes="Defined_function Boolean_expression"
    >
    </entity>

    <entity name="Boolean_expression"
      abstract.supertype="YES"
      supertypes="Expression"
      super.expression="ONEOF(Simple_boolean_expression, Unary_boolean_expression, Binary_boolean_expression, Multiple_arity_boolean_expression, Comparison_expression, Interval_expression, Boolean_defined_function)"
    >
    </entity>

    <entity name="Boolean_literal"
      supertypes="Simple_boolean_expression Generic_literal"
    >
      <explicit
        name="the_value">
        <builtintype type="BOOLEAN"
        />
      </explicit>
    </entity>

    <entity name="Boolean_variable"
      supertypes="Simple_boolean_expression Variable"
    >
    </entity>

    <entity name="Comparison_equal"
      supertypes="Comparison_expression"
    >
    </entity>

    <entity name="Comparison_expression"
      abstract.supertype="YES"
      supertypes="Boolean_expression Binary_generic_expression"
      super.expression="ONEOF(Comparison_equal, Comparison_greater, Comparison_greater_equal, Comparison_less, Comparison_less_equal, Comparison_not_equal, Like_expression)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="Expression"/>
        <redeclaration
          entity-ref="Binary_generic_expression"/>
      </explicit>
      <where
        label="WR1"
        expression="((&apos;NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF\Binary_generic_expression.operands[1])) AND (&apos;NUMERIC_EXPRESSION_ARM.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF\Binary_generic_expression.operands[2]))) OR ((&apos;BOOLEAN_EXPRESSION_ARM.BOOLEAN_EXPRESSION&apos; IN TYPEOF(SELF\Binary_generic_expression.operands[1])) AND (&apos;BOOLEAN_EXPRESSION_ARM.BOOLEAN_EXPRESSION&apos; IN TYPEOF(SELF\Binary_generic_expression.operands[2]))) OR ((&apos;STRING_EXPRESSION_ARM.STRING_EXPRESSION&apos; IN TYPEOF(SELF\Binary_generic_expression.operands[1])) AND (&apos;STRING_EXPRESSION_ARM.STRING_EXPRESSION&apos; IN TYPEOF(SELF\Binary_generic_expression.operands[2])))">
      </where>
    </entity>

    <entity name="Comparison_greater"
      supertypes="Comparison_expression"
    >
    </entity>

    <entity name="Comparison_greater_equal"
      supertypes="Comparison_expression"
    >
    </entity>

    <entity name="Comparison_less"
      supertypes="Comparison_expression"
    >
    </entity>

    <entity name="Comparison_less_equal"
      supertypes="Comparison_expression"
    >
    </entity>

    <entity name="Comparison_not_equal"
      supertypes="Comparison_expression"
    >
    </entity>

    <entity name="Concat_expression"
      supertypes="String_expression Multiple_arity_generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="String_expression"/>
        <redeclaration
          entity-ref="Multiple_arity_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Defined_function"
      abstract.supertype="YES"
    >
    </entity>

    <entity name="Div_expression"
      supertypes="Binary_numeric_expression"
    >
    </entity>

    <entity name="Equals_expression"
      supertypes="Binary_boolean_expression"
    >
    </entity>

    <entity name="Expression"
      abstract.supertype="YES"
      supertypes="Generic_expression"
      super.expression="ONEOF(Numeric_expression, Boolean_expression, String_expression)"
    >
    </entity>

    <entity name="Format_function"
      supertypes="String_expression Binary_generic_expression"
    >
      <derived
        name="value_to_format"
        expression="SELF\Binary_generic_expression.operands[1]">
        <typename name="Generic_expression"/>
      </derived>
      <derived
        name="format_string"
        expression="SELF\Binary_generic_expression.operands[2]">
        <typename name="Generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="((&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NUMERIC_EXPRESSION&apos;) IN TYPEOF(value_to_format)) AND ((&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos;) IN TYPEOF(format_string))">
      </where>
    </entity>

    <entity name="Index_expression"
      supertypes="String_expression Binary_generic_expression"
    >
      <derived
        name="operand"
        expression="SELF\Binary_generic_expression.operands[1]">
        <typename name="Generic_expression"/>
      </derived>
      <derived
        name="index"
        expression="SELF\Binary_generic_expression.operands[2]">
        <typename name="Generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="(&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(operand)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(index))">
      </where>
      <where
        label="WR2"
        expression="Is_int_expr(index)">
      </where>
    </entity>

    <entity name="Int_literal"
      supertypes="Literal_number"
    >
      <explicit
        name="the_value">
        <builtintype type="INTEGER"
        />
        <redeclaration
          entity-ref="Literal_number"/>
      </explicit>
    </entity>

    <entity name="Int_numeric_variable"
      supertypes="Numeric_variable"
    >
    </entity>

    <entity name="Interval_expression"
      supertypes="Boolean_expression Multiple_arity_generic_expression"
    >
      <derived
        name="interval_low"
        expression="SELF\Multiple_arity_generic_expression.operands[1]">
        <typename name="Generic_expression"/>
      </derived>
      <derived
        name="interval_item"
        expression="SELF\Multiple_arity_generic_expression.operands[2]">
        <typename name="Generic_expression"/>
      </derived>
      <derived
        name="interval_high"
        expression="SELF\Multiple_arity_generic_expression.operands[3]">
        <typename name="Generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="(&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.EXPRESSION&apos; IN TYPEOF(interval_low)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.EXPRESSION&apos; IN TYPEOF(interval_item)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.EXPRESSION&apos; IN TYPEOF(interval_high))">
      </where>
      <where
        label="WR2"
        expression="((&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_low)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_high)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_item))) OR ((&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF.interval_low)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF.interval_item)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(SELF.interval_high)))">
      </where>
    </entity>

    <entity name="Like_expression"
      supertypes="Comparison_expression"
    >
      <where
        label="WR1"
        expression="(&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF\Comparison_expression.operands[1])) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(SELF\Comparison_expression.operands[2]))">
      </where>
    </entity>

    <entity name="Literal_number"
      abstract.supertype="YES"
      supertypes="Simple_numeric_expression Generic_literal"
      super.expression="ONEOF(Int_literal, Real_literal)"
    >
      <explicit
        name="the_value">
        <builtintype type="NUMBER"
        />
      </explicit>
    </entity>

    <entity name="Minus_expression"
      supertypes="Binary_numeric_expression"
    >
    </entity>

    <entity name="Mod_expression"
      supertypes="Binary_numeric_expression"
    >
    </entity>

    <entity name="Mult_expression"
      supertypes="Multiple_arity_numeric_expression"
    >
    </entity>

    <entity name="Multiple_arity_boolean_expression"
      abstract.supertype="YES"
      supertypes="Boolean_expression Multiple_arity_generic_expression"
      super.expression="ONEOF(And_expression, Or_expression)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="Boolean_expression"/>
        <redeclaration
          entity-ref="Multiple_arity_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Multiple_arity_function_call"
      abstract.supertype="YES"
      supertypes="Multiple_arity_numeric_expression"
    >
    </entity>

    <entity name="Multiple_arity_numeric_expression"
      abstract.supertype="YES"
      supertypes="Numeric_expression Multiple_arity_generic_expression"
      super.expression="ONEOF(Plus_expression, Mult_expression, Multiple_arity_function_call)"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="Numeric_expression"/>
        <redeclaration
          entity-ref="Multiple_arity_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Not_expression"
      supertypes="Unary_boolean_expression"
    >
      <explicit
        name="operand">
        <typename name="Boolean_expression"/>
        <redeclaration
          entity-ref="Unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Numeric_expression"
      abstract.supertype="YES"
      supertypes="Expression"
    >
      <derived
        name="is_int"
        expression="Is_int_expr(SELF)">
        <builtintype type="BOOLEAN"
        />
      </derived>
      <derived
        name="sql_mappable"
        expression="Is_sql_mappable(SELF)">
        <builtintype type="BOOLEAN"
        />
      </derived>
    </entity>

    <entity name="Numeric_variable"
      supertypes="Simple_numeric_expression Variable"
      super.expression="ONEOF(Int_numeric_variable, Real_numeric_variable)"
    >
      <where
        label="WR1"
        expression="(&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.INT_NUMERIC_VARIABLE&apos; IN TYPEOF(SELF)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.REAL_NUMERIC_VARIABLE&apos; IN TYPEOF(SELF))">
      </where>
    </entity>

    <entity name="Or_expression"
      supertypes="Multiple_arity_boolean_expression"
    >
    </entity>

    <entity name="Plus_expression"
      supertypes="Multiple_arity_numeric_expression"
    >
    </entity>

    <entity name="Power_expression"
      supertypes="Binary_numeric_expression"
    >
    </entity>

    <entity name="Real_literal"
      supertypes="Literal_number"
    >
      <explicit
        name="the_value">
        <builtintype type="REAL"
        />
        <redeclaration
          entity-ref="Literal_number"/>
      </explicit>
    </entity>

    <entity name="Real_numeric_variable"
      supertypes="Numeric_variable"
    >
    </entity>

    <entity name="Simple_boolean_expression"
      abstract.supertype="YES"
      supertypes="Boolean_expression Simple_generic_expression"
      super.expression="ONEOF(Boolean_literal, Boolean_variable)"
    >
    </entity>

    <entity name="Simple_numeric_expression"
      abstract.supertype="YES"
      supertypes="Numeric_expression Simple_generic_expression"
      super.expression="ONEOF(Literal_number, Numeric_variable)"
    >
    </entity>

    <entity name="Simple_string_expression"
      abstract.supertype="YES"
      supertypes="String_expression Simple_generic_expression"
      super.expression="ONEOF(String_literal, String_variable)"
    >
    </entity>

    <entity name="Slash_expression"
      supertypes="Binary_numeric_expression"
    >
    </entity>

    <entity name="Sql_mappable_defined_function"
      abstract.supertype="YES"
      supertypes="Defined_function"
    >
    </entity>

    <entity name="String_defined_function"
      abstract.supertype="YES"
      supertypes="Defined_function String_expression"
    >
    </entity>

    <entity name="String_expression"
      abstract.supertype="YES"
      supertypes="Expression"
      super.expression="ONEOF(Simple_string_expression, Index_expression, Substring_expression, Concat_expression, Format_function, String_defined_function)"
    >
    </entity>

    <entity name="String_literal"
      supertypes="Simple_string_expression Generic_literal"
    >
      <explicit
        name="the_value">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="String_variable"
      supertypes="Simple_string_expression Variable"
    >
    </entity>

    <entity name="Substring_expression"
      supertypes="String_expression Multiple_arity_generic_expression"
    >
      <derived
        name="operand"
        expression="SELF\Multiple_arity_generic_expression.operands[1]">
        <typename name="Generic_expression"/>
      </derived>
      <derived
        name="index1"
        expression="SELF\Multiple_arity_generic_expression.operands[2]">
        <typename name="Generic_expression"/>
      </derived>
      <derived
        name="index2"
        expression="SELF\Multiple_arity_generic_expression.operands[3]">
        <typename name="Generic_expression"/>
      </derived>
      <where
        label="WR1"
        expression="(&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_EXPRESSION&apos; IN TYPEOF(operand)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(index1)) AND (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NUMERIC_EXPRESSION&apos; IN TYPEOF(index2))">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(SELF\Multiple_arity_generic_expression.operands) = 3">
      </where>
      <where
        label="WR3"
        expression="Is_int_expr(index1)">
      </where>
      <where
        label="WR4"
        expression="Is_int_expr(index2)">
      </where>
    </entity>

    <entity name="Unary_boolean_expression"
      abstract.supertype="YES"
      supertypes="Boolean_expression Unary_generic_expression"
    >
    </entity>

    <entity name="Unary_numeric_expression"
      abstract.supertype="YES"
      supertypes="Numeric_expression Unary_generic_expression"
    >
      <explicit
        name="operand">
        <typename name="Numeric_expression"/>
        <redeclaration
          entity-ref="Unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Xor_expression"
      supertypes="Binary_boolean_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="Boolean_expression"/>
        <redeclaration
          entity-ref="Binary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Binary_generic_expression"
      abstract.supertype="YES"
      supertypes="Generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="Generic_expression"/>
      </explicit>
    </entity>

    <entity name="Environment"
    >
      <explicit
        name="syntactic_representation">
        <typename name="Generic_variable"/>
      </explicit>
      <explicit
        name="semantics">
        <typename name="Variable_semantics"/>
      </explicit>
    </entity>

    <entity name="Generic_expression"
      abstract.supertype="YES"
      super.expression="ONEOF(Simple_generic_expression, Unary_generic_expression, Binary_generic_expression, Multiple_arity_generic_expression)"
    >
      <where
        label="WR1"
        expression="Is_Acyclic(SELF)">
      </where>
    </entity>

    <entity name="Generic_literal"
      abstract.supertype="YES"
      supertypes="Simple_generic_expression"
    >
    </entity>

    <entity name="Generic_variable"
      abstract.supertype="YES"
      supertypes="Simple_generic_expression"
      super.expression="Variable"
    >
      <inverse
        name="interpretation"
        entity="Environment"
        attribute="syntactic_representation">
      </inverse>
    </entity>

    <entity name="Multiple_arity_generic_expression"
      abstract.supertype="YES"
      supertypes="Generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="Generic_expression"/>
      </explicit>
    </entity>

    <entity name="Simple_generic_expression"
      abstract.supertype="YES"
      supertypes="Generic_expression"
      super.expression="ONEOF(Generic_literal, Generic_variable)"
    >
    </entity>

    <entity name="Unary_generic_expression"
      abstract.supertype="YES"
      supertypes="Generic_expression"
    >
      <explicit
        name="operand">
        <typename name="Generic_expression"/>
      </explicit>
    </entity>

    <entity name="Variable"
      abstract.supertype="YES"
      supertypes="Generic_variable"
    >
    </entity>

    <entity name="Variable_semantics"
      abstract.supertype="YES"
    >
    </entity>

    <entity name="External_functional_model"
      supertypes="Function_based_behaviour_model"
    >
      <explicit
        name="external_file">
        <typename name="Digital_file"/>
      </explicit>
    </entity>

    <entity name="Digital_file"
      supertypes="File"
    >
    </entity>

    <entity name="File"
      abstract.supertype="YES"
      super.expression="ONEOF(Digital_file, Hardcopy)"
    >
      <explicit
        name="id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="version"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="contained_data_type"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Hardcopy"
      supertypes="File"
    >
    </entity>

    <entity name="File_location_identification"
      supertypes="External_item_identification"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.FILE&apos; IN TYPEOF(SELF\External_source_identification.item)">
      </where>
    </entity>

    <entity name="Function_based_behaviour_model"
      supertypes="Representation"
    >
      <explicit
        name="context_of_items">
        <typename name="Function_based_behaviour_representation_context"/>
        <redeclaration
          entity-ref="Representation"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="Function_based_behaviour_representation_item"/>
        <redeclaration
          entity-ref="Representation"/>
      </explicit>
    </entity>

    <entity name="Function_based_behaviour_representation_context"
      supertypes="Representation_context"
    >
    </entity>

    <entity name="Function_based_behaviour_representation_item"
      supertypes="Representation_item"
    >
      <explicit
        name="item">
        <typename name="Task_element"/>
      </explicit>
    </entity>

    <entity name="Constrained_general_parameter_relationship"
      supertypes="Independent_property_relationship"
    >
      <explicit
        name="relating">
        <typename name="General_model_parameter"/>
        <redeclaration
          entity-ref="Independent_property_relationship"/>
      </explicit>
      <explicit
        name="related">
        <typename name="General_model_parameter"/>
        <redeclaration
          entity-ref="Independent_property_relationship"/>
      </explicit>
      <explicit
        name="required_class">
        <typename name="Class"/>
      </explicit>
      <where
        label="WR1"
        expression="(required_class.id IN CLASSOF(related)) AND (required_class.id IN CLASSOF(relating))">
      </where>
    </entity>

    <entity name="General_model_parameter"
      supertypes="Independent_property"
    >
    </entity>

    <entity name="Parameter_value_representation_item"
      supertypes="Representation_item"
    >
      <explicit
        name="parameter_value">
        <typename name="parameter_value_select"/>
      </explicit>
    </entity>

    <entity name="Required_resource"
      abstract.supertype="YES"
      super.expression="ONEOF(Required_resource_by_resource_item, Required_resource_by_specification)"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="required_quantity"
        optional="YES">
        <typename name="Value_with_unit"/>
      </explicit>
    </entity>

    <entity name="Required_resource_assignment"
    >
      <explicit
        name="assigned_resource">
        <typename name="Required_resource"/>
      </explicit>
      <explicit
        name="item">
        <typename name="required_resource_item"/>
      </explicit>
    </entity>

    <entity name="Required_resource_by_resource_item"
      supertypes="Required_resource"
    >
      <explicit
        name="resource_item">
        <typename name="Resource_item"/>
      </explicit>
    </entity>

    <entity name="Required_resource_by_specification"
      supertypes="Required_resource"
    >
    </entity>

    <entity name="Required_resource_relationship"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="relating">
        <typename name="Required_resource"/>
      </explicit>
      <explicit
        name="related">
        <typename name="Required_resource"/>
      </explicit>
    </entity>

    <entity name="Applied_independent_resource_property"
      supertypes="Resource_property"
    >
      <explicit
        name="base_element_property">
        <typename name="Independent_property"/>
      </explicit>
      <derived
        name="name"
        expression="base_element_property.property_type">
        <builtintype type="STRING"
        />
        <redeclaration
          entity-ref="Resource_property"/>
      </derived>
    </entity>

    <entity name="Resource_property"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="described_element">
        <typename name="characterized_resource_select"/>
      </explicit>
    </entity>

    <entity name="Resource_property_representation"
    >
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="property">
        <typename name="Resource_property"/>
      </explicit>
      <explicit
        name="rep">
        <typename name="Representation"/>
      </explicit>
      <explicit
        name="role">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Included_text_based_representation"
      supertypes="Representation_item"
    >
      <explicit
        name="source">
        <typename name="Text_based_representation"/>
      </explicit>
    </entity>

    <entity name="Text_based_representation"
      supertypes="Representation"
    >
      <explicit
        name="context_of_items">
        <typename name="Text_based_representation_context"/>
        <redeclaration
          entity-ref="Representation"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="1"
        />
        <typename name="text_based_item_select"/>
        <redeclaration
          entity-ref="Representation"/>
      </explicit>
    </entity>

    <entity name="Text_based_representation_context"
      supertypes="Representation_context"
    >
    </entity>

    <entity name="Textual_expression_composition"
      supertypes="Representation_item"
    >
      <explicit
        name="content">
        <typename name="list_or_set_of_text_based_item"/>
      </explicit>
    </entity>

    <entity name="Textual_expression_representation_item"
      supertypes="String_representation_item"
    >
    </entity>

    <entity name="Behaviour"
      supertypes="Product"
    >
    </entity>

    <entity name="Behaviour_version"
      supertypes="Product_version"
    >
      <explicit
        name="of_product">
        <typename name="Behaviour"/>
        <redeclaration
          entity-ref="Product_version"/>
      </explicit>
    </entity>

    <entity name="Behaviour_version_sequence"
      supertypes="Product_version_relationship"
    >
      <explicit
        name="relating_version">
        <typename name="Behaviour_version"/>
        <redeclaration
          entity-ref="Product_version_relationship"/>
      </explicit>
      <explicit
        name="related_version">
        <typename name="Behaviour_version"/>
        <redeclaration
          entity-ref="Product_version_relationship"/>
      </explicit>
      <derived
        name="predecessor"
        expression="SELF\Product_version_relationship.relating_version">
        <typename name="Behaviour_version"/>
      </derived>
      <derived
        name="successor"
        expression="SELF\Product_version_relationship.related_version">
        <typename name="Behaviour_version"/>
      </derived>
    </entity>

    <entity name="Identification_assignment"
    >
      <explicit
        name="identifier">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="role">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="identification_item"/>
      </explicit>
    </entity>

    <entity name="Product_version_relationship"
    >
      <explicit
        name="relation_type"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="relating_version">
        <typename name="Product_version"/>
      </explicit>
      <explicit
        name="related_version">
        <typename name="Product_version"/>
      </explicit>
      <where
        label="WR1"
        expression="relating_version :&lt;&gt;: related_version">
      </where>
      <where
        label="WR2"
        expression="EXISTS(relation_type) OR (TYPEOF(SELF\Product_version_relationship) &lt;&gt; TYPEOF(SELF))">
      </where>
    </entity>

    <entity name="Supplied_part_relationship"
      supertypes="Product_version_relationship"
    >
      <where
        label="WR1"
        expression="SELF\Product_version_relationship.relation_type IN [&apos;supplied item&apos;, &apos;supplied document&apos;]">
      </where>
    </entity>

    <entity name="Product_view_definition"
    >
      <explicit
        name="id"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="name"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="additional_characterization"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="initial_context">
        <typename name="View_definition_context"/>
      </explicit>
      <explicit
        name="additional_contexts">
        <aggregate type="SET"
          lower="0"
          upper="?"
        />
        <typename name="View_definition_context"/>
      </explicit>
      <explicit
        name="defined_version">
        <typename name="Product_version"/>
      </explicit>
      <where
        label="WR1"
        expression="NOT (initial_context IN additional_contexts)">
      </where>
      <where
        label="WR2"
        expression="EXISTS(id) OR (TYPEOF(SELF\Product_view_definition) &lt;&gt; TYPEOF(SELF))">
      </where>
    </entity>

    <entity name="View_definition_context"
    >
      <explicit
        name="application_domain">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="life_cycle_stage">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <where
        label="WR1"
        expression="(SIZEOF(USEDIN(SELF, &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.&apos; + &apos;PRODUCT_VIEW_DEFINITION.INITIAL_CONTEXT&apos;)) &gt; 0) OR (SIZEOF(USEDIN(SELF, &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.&apos; + &apos;PRODUCT_VIEW_DEFINITION.ADDITIONAL_CONTEXTS&apos;)) &gt; 0)">
      </where>
    </entity>

    <entity name="External_item_identification"
      supertypes="External_source_identification"
    >
      <explicit
        name="external_id">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Behaviour_description_association"
    >
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="representation">
        <typename name="behaviour_model"/>
      </explicit>
      <explicit
        name="represented_item">
        <typename name="behaviour_item"/>
      </explicit>
      <explicit
        name="role"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Decision_path"
    >
      <explicit
        name="condition">
        <typename name="Condition"/>
      </explicit>
      <explicit
        name="defined_in">
        <typename name="Multiple_decision_point"/>
      </explicit>
      <explicit
        name="path_element">
        <typename name="Task_element"/>
      </explicit>
    </entity>

    <entity name="Multiple_decision_point"
      supertypes="Structured_task_element"
    >
      <inverse
        name="paths"
        entity="Decision_path"
        attribute="defined_in">
        <inverse.aggregate
          type="SET"
          lower="2"
          upper="?"
        />
      </inverse>
    </entity>

    <entity name="Task_io"
      supertypes="Task_element_assignment"
    >
      <explicit
        name="assigned_activity_method">
        <typename name="Task_step"/>
        <redeclaration
          entity-ref="Applied_activity_method_assignment"/>
      </explicit>
    </entity>

    <entity name="Task_io_hierarchy"
    >
      <explicit
        name="child">
        <typename name="Task_io"/>
      </explicit>
      <explicit
        name="parent">
        <typename name="Task_io"/>
      </explicit>
      <where
        label="wr1"
        expression="child.role = parent.role">
      </where>
    </entity>

    <entity name="Task_step_hierarchy"
      supertypes="Task_element_relationship"
    >
      <explicit
        name="related_method">
        <typename name="Task_step"/>
        <redeclaration
          entity-ref="Task_element_relationship"/>
      </explicit>
      <explicit
        name="relating_method">
        <typename name="Task_step"/>
        <redeclaration
          entity-ref="Task_element_relationship"/>
      </explicit>
      <derived
        name="child"
        expression="SELF\Task_element_relationship.related_method">
        <typename name="Task_step"/>
      </derived>
      <derived
        name="parent"
        expression="SELF\Task_element_relationship.relating_method">
        <typename name="Task_step"/>
      </derived>
    </entity>

    <entity name="Concurrent_elements"
      supertypes="Structured_task_element"
    >
      <explicit
        name="elements">
        <aggregate type="SET"
          lower="2"
          upper="?"
        />
        <typename name="Task_element"/>
      </explicit>
    </entity>

    <entity name="Decision_point"
      supertypes="Structured_task_element"
    >
      <explicit
        name="condition">
        <typename name="Condition"/>
      </explicit>
      <explicit
        name="true_case_element"
        optional="YES">
        <typename name="Task_element"/>
      </explicit>
      <explicit
        name="false_case_element"
        optional="YES">
        <typename name="Task_element"/>
      </explicit>
      <explicit
        name="unknown_case_element"
        optional="YES">
        <typename name="Task_element"/>
      </explicit>
    </entity>

    <entity name="End_task"
      supertypes="Task_element"
    >
    </entity>

    <entity name="Exit_loop"
      supertypes="Task_element"
    >
    </entity>

    <entity name="Looping_element"
      supertypes="Structured_task_element"
      super.expression="ONEOF(Repeat_count, Repeat_until, Repeat_while)"
    >
      <explicit
        name="repeated_element">
        <typename name="Task_element"/>
      </explicit>
    </entity>

    <entity name="Repeat_count"
      supertypes="Looping_element"
    >
      <explicit
        name="count">
        <builtintype type="INTEGER"
        />
      </explicit>
    </entity>

    <entity name="Repeat_until"
      supertypes="Looping_element"
    >
      <explicit
        name="condition">
        <typename name="Condition"/>
      </explicit>
    </entity>

    <entity name="Repeat_while"
      supertypes="Looping_element"
    >
      <explicit
        name="condition">
        <typename name="Condition"/>
      </explicit>
    </entity>

    <entity name="Structured_task_element"
      abstract.supertype="YES"
      supertypes="Task_element"
      super.expression="ONEOF(Concurrent_elements, Decision_point, Looping_element, Task_element_sequence)"
    >
    </entity>

    <entity name="Task_element"
      abstract.supertype="YES"
      supertypes="Activity_method"
      super.expression="ONEOF(End_task, Exit_loop, Structured_task_element, Task_step)"
    >
    </entity>

    <entity name="Task_element_assignment"
      supertypes="Applied_activity_method_assignment"
    >
      <explicit
        name="assigned_activity_method">
        <typename name="Task_element"/>
        <redeclaration
          entity-ref="Applied_activity_method_assignment"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="task_item"/>
        <redeclaration
          entity-ref="Applied_activity_method_assignment"/>
      </explicit>
      <derived
        name="assigned_task_element"
        expression="SELF\Applied_activity_method_assignment.assigned_activity_method">
        <typename name="Task_element"/>
      </derived>
    </entity>

    <entity name="Task_element_relationship"
      supertypes="Activity_method_relationship"
    >
      <explicit
        name="relating_method">
        <typename name="Task_element"/>
        <redeclaration
          entity-ref="Activity_method_relationship"/>
      </explicit>
      <explicit
        name="related_method">
        <typename name="Task_element"/>
        <redeclaration
          entity-ref="Activity_method_relationship"/>
      </explicit>
    </entity>

    <entity name="Task_element_sequence"
      supertypes="Structured_task_element"
    >
      <explicit
        name="elements">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="Task_element"/>
      </explicit>
    </entity>

    <entity name="Task_step"
      supertypes="Task_element"
    >
      <explicit
        name="description">
        <builtintype type="STRING"
        />
        <redeclaration
          entity-ref="Activity_method"/>
      </explicit>
      <derived
        name="step_text"
        expression="SELF\Activity_method.description">
        <builtintype type="STRING"
        />
      </derived>
    </entity>

    <entity name="Numerical_representation_context"
      supertypes="Representation_context"
    >
      <explicit
        name="units"
        optional="YES">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="Unit"/>
      </explicit>
      <explicit
        name="accuracies"
        optional="YES">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="Uncertainty_with_unit"/>
      </explicit>
    </entity>

    <entity name="Representation"
    >
      <explicit
        name="id"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="name"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="context_of_items">
        <typename name="Representation_context"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="Representation_item"/>
      </explicit>
      <where
        label="WR1"
        expression="EXISTS(name) OR (TYPEOF(SELF\Representation) &lt;&gt; TYPEOF(SELF))">
      </where>
    </entity>

    <entity name="Representation_context"
    >
      <explicit
        name="id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="kind">
        <builtintype type="STRING"
        />
      </explicit>
      <inverse
        name="representations_in_context"
        entity="Representation"
        attribute="context_of_items">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"
        />
      </inverse>
    </entity>

    <entity name="Representation_item"
      abstract.supertype="YES"
    >
      <explicit
        name="name"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Representation_relationship"
    >
      <explicit
        name="relation_type"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="rep_1">
        <typename name="Representation"/>
      </explicit>
      <explicit
        name="rep_2">
        <typename name="Representation"/>
      </explicit>
      <where
        label="WR1"
        expression="EXISTS(relation_type) OR (TYPEOF(SELF\Representation_relationship) &lt;&gt; TYPEOF(SELF))">
      </where>
      <where
        label="WR2"
        expression="EXISTS(description) OR (TYPEOF(SELF\Representation_relationship) &lt;&gt; TYPEOF(SELF))">
      </where>
    </entity>

    <entity name="String_representation_item"
      supertypes="Representation_item"
    >
      <explicit
        name="string_value">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Amount_of_substance_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Context_dependent_unit"
      supertypes="Unit"
    >
      <where
        label="WR1"
        expression="EXISTS(SELF\Unit.name)">
      </where>
    </entity>

    <entity name="Conversion_based_unit"
      supertypes="Unit"
    >
      <explicit
        name="conversion_factor">
        <typename name="Value_with_unit"/>
      </explicit>
      <where
        label="WR1"
        expression="EXISTS(SELF\Unit.name)">
      </where>
    </entity>

    <entity name="Derived_unit"
      supertypes="Unit"
    >
      <explicit
        name="elements">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="Derived_unit_element"/>
      </explicit>
    </entity>

    <entity name="Derived_unit_element"
    >
      <explicit
        name="base_unit">
        <typename name="Unit"/>
      </explicit>
      <explicit
        name="exponent">
        <builtintype type="REAL"
        />
      </explicit>
    </entity>

    <entity name="Duration"
      supertypes="Value_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.&apos; + &apos;TIME_UNIT&apos; IN TYPEOF(SELF\Value_with_unit.unit)">
      </where>
    </entity>

    <entity name="Electric_current_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Length_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Luminous_intensity_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Mass_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Plane_angle_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Ratio_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Solid_angle_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Thermodynamic_temperature_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Time_unit"
      supertypes="Unit"
    >
    </entity>

    <entity name="Uncertainty_with_unit"
      supertypes="Value_with_unit"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Unit"
      super.expression="ONEOF(Amount_of_substance_unit, Electric_current_unit, Length_unit, Luminous_intensity_unit, Mass_unit, Plane_angle_unit, Ratio_unit, Solid_angle_unit, Thermodynamic_temperature_unit, Time_unit)"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="si_unit">
        <builtintype type="BOOLEAN"
        />
      </explicit>
    </entity>

    <entity name="Value_with_unit"
    >
      <explicit
        name="unit">
        <typename name="Unit"/>
      </explicit>
      <explicit
        name="value_component">
        <typename name="measure_value"/>
      </explicit>
    </entity>

    <entity name="Class"
      super.expression="ONEOF(Class_by_extension, Class_by_intension)"
    >
      <explicit
        name="id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Class_by_extension"
      supertypes="Class"
    >
    </entity>

    <entity name="Class_by_intension"
      supertypes="Class"
    >
    </entity>

    <entity name="Classification_assignment"
    >
      <explicit
        name="assigned_class">
        <typename name="Class"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="classification_item"/>
      </explicit>
      <explicit
        name="role"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="External_class"
      supertypes="Class"
    >
      <explicit
        name="external_source">
        <typename name="External_class_library"/>
      </explicit>
    </entity>

    <entity name="External_class_library"
    >
      <explicit
        name="id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Name_assignment"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="role">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="items">
        <typename name="assigned_name_select"/>
      </explicit>
    </entity>

    <entity name="Independent_property"
    >
      <explicit
        name="id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="property_type">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Independent_property_relationship"
    >
      <explicit
        name="relation_type">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="relating">
        <typename name="Independent_property"/>
      </explicit>
      <explicit
        name="related">
        <typename name="Independent_property"/>
      </explicit>
    </entity>

    <entity name="Independent_property_representation"
      supertypes="Property_definition_representation"
    >
      <explicit
        name="definition">
        <typename name="Independent_property"/>
        <redeclaration
          entity-ref="Property_definition_representation"/>
      </explicit>
      <derived
        name="property"
        expression="SELF\Property_definition_representation.definition">
        <typename name="Independent_property"/>
      </derived>
    </entity>

    <entity name="Named_variable_semantics"
      supertypes="Variable_semantics"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="variable_context">
        <typename name="Generic_expression"/>
      </explicit>
    </entity>

    <entity name="Applied_independent_property"
      supertypes="Assigned_property"
    >
      <explicit
        name="base_independent_property">
        <typename name="Independent_property"/>
      </explicit>
      <derived
        name="name"
        expression="base_independent_property.property_type">
        <builtintype type="STRING"
        />
        <redeclaration
          entity-ref="Assigned_property"/>
      </derived>
    </entity>

    <entity name="Assigned_property"
    >
      <explicit
        name="id"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="described_element">
        <typename name="property_assignment_select"/>
      </explicit>
    </entity>

    <entity name="Property_definition_representation"
      abstract.supertype="YES"
    >
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="definition">
        <typename name="represented_definition"/>
      </explicit>
      <explicit
        name="rep">
        <typename name="Representation"/>
      </explicit>
      <explicit
        name="role"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Property_representation"
      supertypes="Property_definition_representation"
    >
      <explicit
        name="definition">
        <typename name="Assigned_property"/>
        <redeclaration
          entity-ref="Property_definition_representation"/>
      </explicit>
      <derived
        name="property"
        expression="SELF\Property_definition_representation.definition">
        <typename name="Assigned_property"/>
      </derived>
    </entity>

    <entity name="Resource_group_relationship"
      supertypes="Resource_item_relationship"
    >
      <explicit
        name="quantity"
        optional="YES">
        <typename name="Value_with_unit"/>
      </explicit>
    </entity>

    <entity name="Resource_item"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="resource_items"
        optional="YES">
        <aggregate type="SET"
          lower="0"
          upper="?"
        />
        <typename name="resource_item_select"/>
      </explicit>
    </entity>

    <entity name="Resource_item_assignment"
    >
      <explicit
        name="assigned_resource">
        <typename name="Resource_item"/>
      </explicit>
      <explicit
        name="item">
        <typename name="resource_assignment_item"/>
      </explicit>
    </entity>

    <entity name="Resource_item_relationship"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="relating">
        <typename name="Resource_item"/>
      </explicit>
      <explicit
        name="related">
        <typename name="Resource_item"/>
      </explicit>
    </entity>

    <entity name="Product_version"
    >
      <explicit
        name="id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="of_product">
        <typename name="Product"/>
      </explicit>
    </entity>

    <entity name="Product"
    >
      <explicit
        name="id">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="name"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Product_category_assignment"
    >
      <explicit
        name="category">
        <typename name="Product_category"/>
      </explicit>
      <explicit
        name="products">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="Product"/>
      </explicit>
    </entity>

    <entity name="Product_category"
    >
      <explicit
        name="id"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Product_category_hierarchy"
    >
      <explicit
        name="super_category">
        <typename name="Product_category"/>
      </explicit>
      <explicit
        name="sub_category">
        <typename name="Product_category"/>
      </explicit>
    </entity>

    <entity name="Activity_method_relationship"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="relating_method">
        <typename name="Activity_method"/>
      </explicit>
      <explicit
        name="related_method">
        <typename name="Activity_method"/>
      </explicit>
    </entity>

    <entity name="Applied_activity_method_assignment"
    >
      <explicit
        name="assigned_activity_method">
        <typename name="Activity_method"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="activity_method_item"/>
      </explicit>
      <explicit
        name="role">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Activity_method"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="consequence"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="purpose">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Condition"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
    </entity>

    <entity name="Condition_assignment"
    >
      <explicit
        name="assigned_condition">
        <typename name="Condition"/>
      </explicit>
      <explicit
        name="item">
        <typename name="condition_item"/>
      </explicit>
    </entity>

    <entity name="Condition_parameter"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="condition">
        <typename name="Condition"/>
      </explicit>
      <explicit
        name="parameter"
        optional="YES">
        <typename name="condition_parameter_item"/>
      </explicit>
    </entity>

    <entity name="Condition_relationship"
    >
      <explicit
        name="name">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <builtintype type="STRING"
        />
      </explicit>
      <explicit
        name="relating_condition">
        <typename name="Condition"/>
      </explicit>
      <explicit
        name="related_condition">
        <typename name="Condition"/>
      </explicit>
    </entity>

    <entity name="Abs_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Acos_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Asin_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Atan_function"
      supertypes="Binary_function_call"
    >
    </entity>

    <entity name="Binary_function_call"
      abstract.supertype="YES"
      supertypes="Binary_numeric_expression"
      super.expression="Atan_function"
    >
    </entity>

    <entity name="Cos_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Exp_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Function_parameter_value"
      supertypes="Numeric_expression Unary_generic_expression"
      super.expression="Int_value_function"
    >
      <explicit
        name="operand">
        <typename name="String_expression"/>
        <redeclaration
          entity-ref="Unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Int_value_function"
      supertypes="Function_parameter_value"
    >
    </entity>

    <entity name="Integer_defined_function"
      abstract.supertype="YES"
      supertypes="Numeric_defined_function"
    >
    </entity>

    <entity name="Length_function"
      supertypes="Numeric_expression Unary_generic_expression"
    >
      <explicit
        name="operand">
        <typename name="String_expression"/>
        <redeclaration
          entity-ref="Unary_generic_expression"/>
      </explicit>
    </entity>

    <entity name="Log10_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Log2_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Log_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Maximum_function"
      supertypes="Multiple_arity_function_call"
    >
    </entity>

    <entity name="Minimum_function"
      supertypes="Multiple_arity_function_call"
    >
    </entity>

    <entity name="Minus_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Numeric_defined_function"
      abstract.supertype="YES"
      supertypes="Numeric_expression Defined_function"
      super.expression="ONEOF(Integer_defined_function, Real_defined_function)"
    >
    </entity>

    <entity name="Odd_function"
      supertypes="Unary_boolean_expression"
    >
      <explicit
        name="operand">
        <typename name="Numeric_expression"/>
        <redeclaration
          entity-ref="Unary_generic_expression"/>
      </explicit>
      <where
        label="WR1"
        expression="Is_int_expr(SELF\Numeric_expression)">
      </where>
    </entity>

    <entity name="Real_defined_function"
      abstract.supertype="YES"
      supertypes="Numeric_defined_function"
    >
    </entity>

    <entity name="Sin_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Square_root_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Tan_function"
      supertypes="Unary_function_call"
    >
    </entity>

    <entity name="Unary_function_call"
      abstract.supertype="YES"
      supertypes="Unary_numeric_expression"
      super.expression="ONEOF(Abs_function, Minus_function, Sin_function, Cos_function, Tan_function, Asin_function, Acos_function, Exp_function, Log_function, Log2_function, Log10_function, Square_root_function)"
    >
    </entity>

    <function name="Is_sql_mappable">
      <parameter name="arg">
        <typename name="Expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    i : INTEGER;
  END_LOCAL;

  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SIMPLE_NUMERIC_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SQL_MAPPABLE_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MINUS_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (Is_sql_mappable(arg\Unary_numeric_expression.operand));
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ABS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.TAN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ASIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ACOS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ATAN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.EXP_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LOG_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LOG2_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LOG10_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SQUARE_ROOT_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.VALUE_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LENGTH_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.PLUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MULT_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MAXIMUM_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MAXIMUM_FUNCTION&apos; IN TYPEOF(arg)) THEN
    REPEAT i := 1 TO SIZEOF(arg\Multiple_arity_numeric_expression.operands);
      IF NOT Is_sql_mappable(arg\Multiple_arity_numeric_expression.operands[i]) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MINUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SLASH_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (Is_sql_mappable(arg\Binary_numeric_expression.operands[1]) AND Is_sql_mappable(arg\Binary_numeric_expression.operands[2]));
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.DIV_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MOD_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.POWER_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SIMPLE_BOOLEAN_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NOT_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (Is_sql_mappable(arg\Unary_generic_expression.operand));
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ODD_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.XOR_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.AND_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.OR_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    REPEAT i := 1 TO SIZEOF(arg\Multiple_arity_boolean_expression.operands);
      IF NOT Is_sql_mappable(arg\Multiple_arity_boolean_expression.operands[i]) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.EQUALS_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (Is_sql_mappable(arg\Binary_generic_expression.operands[1]) AND Is_sql_mappable(arg\Binary_generic_expression.operands[2]));
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COMPARISON_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COMPARISON_GREATER&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COMPARISON_GREATER_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COMPARISON_LESS&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COMPARISON_LESS_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COMPARISON_NOT_EQUAL&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LIKE_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (Is_sql_mappable(arg\Comparison_expression.operands[1]) AND Is_sql_mappable(arg\Comparison_expression.operands[2]));
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.INTERVAL_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (Is_sql_mappable(arg\Interval_expression.interval_low) AND Is_sql_mappable(arg\Interval_expression.interval_high) AND Is_sql_mappable(arg\Interval_expression.interval_item));
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.NUMERIC_DEFINED_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.BOOLEAN_DEFINED_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_DEFINED_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SIMPLE_STRING_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.INDEX_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SUBSTRING_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.CONCAT_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.FORMAT_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  RETURN (FALSE);
      </algorithm>
    </function>

    <function name="Is_Acyclic">
      <parameter name="arg">
        <typename name="Generic_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  RETURN (Acyclic(arg, []));
      </algorithm>
    </function>

    <function name="Acyclic">
      <parameter name="arg1">
        <typename name="Generic_expression"/>
      </parameter>
      <parameter name="arg2">
        <aggregate type="SET"
        />
        <typename name="Generic_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    result : BOOLEAN;
  END_LOCAL;

  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SIMPLE_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1)) THEN
    RETURN (TRUE);
  END_IF;
  IF arg1 IN arg2 THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.UNARY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    RETURN (Acyclic(arg1\Unary_generic_expression.operand, arg2 + [arg1]));
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.BINARY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    RETURN (Acyclic(arg1\Binary_generic_expression.operands[1], arg2 + [arg1]) AND Acyclic(arg1\Binary_generic_expression.operands[2], arg2 + [arg1]));
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    result := TRUE;
    REPEAT i := 1 TO SIZEOF(arg1\Multiple_arity_generic_expression.operands);
      result := result AND Acyclic(arg1\Multiple_arity_generic_expression.operands[i], arg2 + [arg1]);
    END_REPEAT;
    RETURN (result);
  END_IF;
      </algorithm>
    </function>

    <function name="CLASSOF">
      <parameter name="the_instance">
        <builtintype type="GENERIC"
          typelabel="ininst"
        />
      </parameter>
      <aggregate type="SET"
      />
      <builtintype type="STRING"
      />
      <algorithm>
  LOCAL
    result : SET OF STRING;
    classifications : BAG OF Classification_assignment;
  END_LOCAL;

  result := TYPEOF(the_instance);
  classifications := USEDIN(the_instance, &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.CLASSIFICATION_ASSIGNMENT.ITEMS&apos;);
  REPEAT i := LOINDEX(classifications) TO HIINDEX(classifications);
    result := result + classifications[i].assigned_class.id;
  END_REPEAT;
  RETURN (result);
      </algorithm>
    </function>

    <function name="Is_int_expr">
      <parameter name="arg">
        <typename name="Numeric_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    i : INTEGER;
  END_LOCAL;

  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.INT_LITERAL&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.REAL_LITERAL&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.INT_NUMERIC_VARIABLE&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.REAL_NUMERIC_VARIABLE&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ABS_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (Is_int_expr(arg\Unary_numeric_expression.operand));
  END_IF;
  IF &apos;NUMERIC_FUNCTION.MINUS_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (Is_int_expr(arg\Unary_numeric_expression.operand));
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.COS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.TAN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ASIN_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.ACOS_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.Atan_function&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.EXP_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LOG_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LOG2_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LOG10_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SQUARE_ROOT_FUNCTION&apos; IN TYPEOF(arg)) THEN
    RETURN (FALSE);
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.PLUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MULT_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MAXIMUM_FUNCTION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MINIMUM_FUNCTION&apos; IN TYPEOF(arg)) THEN
    REPEAT i := 1 TO SIZEOF(arg\Multiple_arity_numeric_expression.operands);
      IF NOT Is_int_expr(arg\Multiple_arity_numeric_expression.operands[i]) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MINUS_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.POWER_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (Is_int_expr(arg\Binary_numeric_expression.operands[1]) AND Is_int_expr(arg\Binary_numeric_expression.operands[2]));
  END_IF;
  IF (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.DIV_EXPRESSION&apos; IN TYPEOF(arg)) OR (&apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.MOD_EXPRESSION&apos; IN TYPEOF(arg)) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.SLASH_EXPRESSION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.LENGTH_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.VALUE_FUNCTION&apos; IN TYPEOF(arg) THEN
    IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.INT_VALUE_FUNCTION&apos; IN TYPEOF(arg) THEN
      RETURN (TRUE);
    ELSE
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.INTEGER_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (TRUE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.REAL_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.BOOLEAN_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTION_BASED_BEHAVIOUR_ARM_LF.STRING_DEFINED_FUNCTION&apos; IN TYPEOF(arg) THEN
    RETURN (FALSE);
  END_IF;
  RETURN (FALSE);
      </algorithm>
    </function>

  </schema>

</express>
