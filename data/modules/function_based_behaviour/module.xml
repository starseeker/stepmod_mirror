<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.40 2009/07/02 10:03:53 philsp Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="function_based_behaviour"
   part="1453"
   version="1"
   sc4.working_group="3"
   wg.number="2480"
   wg.number.arm="2481"
   wg.number.mim="2482"
   wg.number.arm_lf="2483"
   wg.number.mim_lf="2484"
   wg.number.supersedes="2286"
   wg.number.arm.supersedes="2287"
   wg.number.mim.supersedes="2288"
   wg.number.arm_lf.supersedes="2289"
   wg.number.mim_lf.supersedes="2290"
   checklist.convener="2530"
   checklist.internal_review="2531"
   checklist.project_leader="2532"
   status="TS"
   language="E"
   publication.year="2009"
   publication.date=""
   published="n"
   rcs.date="$Date: 2009/07/02 10:03:53 $"
   rcs.revision="$Revision: 1.40 $"
   development.folder="dvlp">

 <keywords>
    module, systems engineering, system behaviour, function based behaviour
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
  <projlead ref="ap233.projlead2"/> 
   <editor ref="ap233.editor2"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for representing 
     the generic elements of the function based behaviour modelling paradigms used 
     for response to excitation analysis.
   </p>
   
   <p>
    One of the essential characteristics of systems that require modelling 
    is the response of the system to excitation. Function based behaviour 
    provides a model for response to excitation that is executable in tools. This
    provides a time line for that response and records logical errors in the 
    model that prevent execution. 
   </p>
   
   <p>This module provides links to generic modelling elements required to view 
   and model system behaviour from the perspective for "function".  This view does 
   not use the concept of "state."
   </p>
   
   <p>
   The concept model used during the development of this module is in Annex 
   <module_ref linkend="function_based_behaviour:f_usage_guide"> F</module_ref>.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>identification of a behaviour;</li>
   <li>hierarchy of behaviours;</li>
   <li>function based representation of behaviour;</li>
   <li>hierarchy of functions within a function based behaviour representation;</li>
   <li>means of representing the inputs and outputs of a function, including triggering mechanisms where appropriate;</li>
   <li>ordering of functions, and identifying decision points;</li>
   <li>identification of shared resources used by function;</li>
   <li>shared resource properties;</li>
   <li>underlying model for the representations: Function Flow Block Diagram (FFBD),
   Data Flow Diagram (DFD), N2 (N-Squared) Chart, IDEF0 Diagram, Use Case, Sequence Diagram, 
   Enhanced Function Flow Block Diagram, and Behaviour Diagram (BD).</li>
 </inscope>

 <!-- Items out of scope -->
 <outscope>
   <li>state based representation of behaviour.</li>
 </outscope>

<!--
 <normrefs/>
-->

<!--
 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
     <imgfile file="armexpg2.xml"/>
   </express-g>
 </arm>

<!-- ARM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          arm_lf.xml
          armexpg_lf1.gif
          armexpg_lf1.xml -->
 <arm_lf>
   <!-- Note ARM long form EXPRESS is in arm_lf.xml -->
   <express-g>
     <imgfile file="armexpg_lf1.xml"/>
   </express-g>
 </arm_lf>

 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   <ae entity="Applied_activity_method_assignment" original_module="activity_method_assignment" >	
     <aa attribute="items" assertion_to="*">	
       <refpath_extend extended_select="activity_method_item">	
         action_method_items *&gt; fbb_action_method_items	
         fbb_action_method_items =	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Assigned_property)/)
	(/MAPPING_OF(Behaviour_description_association)/)
	(/MAPPING_OF(Condition)/)
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_version_relationship)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Required_resource_assignment)/)
	(/MAPPING_OF(Resource_item)/)
	(/MAPPING_OF(Resource_item_realization)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Task_io)/)
	(/MAPPING_OF(Task_io_hierarchy)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Assigned_property" original_module="property_assignment">	
     <aa attribute="described_element" assertion_to="*">	
     <refpath_extend extended_select="property_assignment_select" >	
       characterized_definition *&gt; fbb_characterized_definition	
       fbb_characterized_definition = 	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Activity_method_relationship)/)
	(/MAPPING_OF(Applied_activity_method_assignment)/)
	(/MAPPING_OF(Assigned_property)/)
	(/MAPPING_OF(Behaviour_view_definition)/)
	(/MAPPING_OF(Condition_parameter)/)
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(Generic_expression)/)
	(/MAPPING_OF(Independent_property)/)
	(/MAPPING_OF(Independent_property_relationship)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_version_relationship)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Property_definition_representation)/)
	(/MAPPING_OF(Representation)/)
	(/MAPPING_OF(Representation_context)/)
	(/MAPPING_OF(Representation_item)/)
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Task_io_hierarchy)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Behaviour_description_association" original_module="behaviour_description_assignment" >	
     <aa attribute="representation" assertion_to="*">	
     <refpath_extend extended_select="behaviour_model" >	
       behaviour_model *&gt; functional_behaviour_model	
       functional_behaviour_model = 	
	(/MAPPING_OF(Function_based_behaviour_model)/)
       </refpath_extend>	
     </aa>	
   </ae>	 
   <ae entity="Classification_assignment" original_module="classification_assignment" >	
     <aa attribute="items" assertion_to="*">	
       <refpath_extend extended_select="classification_item" >	
         classification_item *&gt; fbb_classification_item	
         fbb_classification_item = 	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Activity_method_relationship)/)
	(/MAPPING_OF(Applied_activity_method_assignment)/)
	(/MAPPING_OF(Assigned_property)/)
	(/MAPPING_OF(Behaviour)/)
	(/MAPPING_OF(Behaviour_view_definition)/)
	(/MAPPING_OF(Class)/)
	(/MAPPING_OF(Context_dependent_unit)/)
	(/MAPPING_OF(Conversion_based_unit)/)
	(/MAPPING_OF(Derived_unit)/)
	(/MAPPING_OF(Digital_file)/)
	(/MAPPING_OF(Expression)/)
	(/MAPPING_OF(Expression_assignment)/)
	(/MAPPING_OF(External_class_library)/)
	(/MAPPING_OF(External_item_identification)/)
	(/MAPPING_OF(External_source_identification)/)
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(File_location_identification)/)
	(/MAPPING_OF(Hardcopy)/)
	(/MAPPING_OF(Identification_assignment)/)
	(/MAPPING_OF(Identification_relationship)/)
	(/MAPPING_OF(Independent_property)/)
	(/MAPPING_OF(Independent_property_relationship)/)
	(/MAPPING_OF(Independent_property_representation)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_relationship)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_version_relationship)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Property_representation)/)
	(/MAPPING_OF(Representation)/)
	(/MAPPING_OF(Representation_item)/)
	(/MAPPING_OF(Representation_relationship)/)
	(/MAPPING_OF(Requirement)/)
	(/MAPPING_OF(Requirement_version)/)
	(/MAPPING_OF(Requirement_version_relationship)/)
	(/MAPPING_OF(Resource_item_realization)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Resource_property_representation)/)
	(/MAPPING_OF(String_representation_item)/)
	(/MAPPING_OF(Supplied_part_relationship)/)
	(/MAPPING_OF(Uncertainty_with_unit)/)
	(/MAPPING_OF(Unit)/)
	(/MAPPING_OF(Value_with_unit)/)
	(/MAPPING_OF(View_definition_context)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Collection_assignment" original_module="collection_identification_and_version" >	
     <aa attribute="is_assigned_to" assertion_to="*">	
       <refpath_extend extended_select="collection_assignment_select" >	
         collection_assignment_groupable_item *&gt; fbb_collection_assignment_groupable_item	
         fbb_collection_assignment_groupable_item =	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Collection_membership" original_module="collection_identification_and_version" >	
     <aa attribute="member" assertion_to="*">	
       <refpath_extend extended_select="collection_member_select" >	
         collection_membership_groupable_item *&gt; fbb_collection_membership_groupable_item	
         fbb_collection_membership_groupable_item =	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Activity_method_relationship)/)
	(/MAPPING_OF(Applied_activity_method_assignment)/)
	(/MAPPING_OF(Assigned_property)/)
	(/MAPPING_OF(Class)/)
	(/MAPPING_OF(Classification_assignment)/)
	(/MAPPING_OF(Collection_assignment)/)
	(/MAPPING_OF(Collection_membership)/)
	(/MAPPING_OF(Condition)/)
	(/MAPPING_OF(Condition_assignment)/)
	(/MAPPING_OF(Condition_parameter)/)
	(/MAPPING_OF(Condition_relationship)/)
	(/MAPPING_OF(Derived_unit_element)/)
	(/MAPPING_OF(External_source)/)
	(/MAPPING_OF(External_source_identification)/)
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(Identification_assignment)/)
	(/MAPPING_OF(Identification_relationship)/)
	(/MAPPING_OF(Independent_property)/)
	(/MAPPING_OF(Independent_property_relationship)/)
	(/MAPPING_OF(Name_assignment)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_relationship)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_version_relationship)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Property_definition_representation)/)
	(/MAPPING_OF(Representation)/)
	(/MAPPING_OF(Representation_context)/)
	(/MAPPING_OF(Representation_item)/)
	(/MAPPING_OF(Representation_relationship)/)
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Required_resource_assignment)/)
	(/MAPPING_OF(Required_resource_relationship)/)
	(/MAPPING_OF(Required_resource_requirement)/)
	(/MAPPING_OF(Resource_item)/)
	(/MAPPING_OF(Resource_item_assignment)/)
	(/MAPPING_OF(Resource_item_realization)/)
	(/MAPPING_OF(Resource_item_relationship)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Resource_property_representation)/)
	(/MAPPING_OF(Same_as_external_item)/)
	(/MAPPING_OF(Unit)/)
	(/MAPPING_OF(Value_with_unit)/)
	(/MAPPING_OF(View_definition_context)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Condition_assignment" original_module="condition" >	
     <aa attribute="item" assertion_to="*">	
       <refpath_extend extended_select="condition_item">	
         condition_action_method_items *&gt; fbb_condition_action_method_items	
         fbb_condition_action_method_items = 	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Activity_method_relationship)/)
	(/MAPPING_OF(Applied_activity_method_assignment)/)
	(/MAPPING_OF(Assigned_property)/)
	(/MAPPING_OF(Expression_assignment)/)
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Required_resource_assignment)/)
	(/MAPPING_OF(Required_resource_relationship)/)
	(/MAPPING_OF(Resource_item)/)
	(/MAPPING_OF(Resource_item_assignment)/)
	(/MAPPING_OF(Resource_item_realization)/)
	(/MAPPING_OF(Resource_item_relationship)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Task_element_relationship)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Condition_parameter" original_module="condition">	
     <aa attribute="parameter" assertion_to="*">	
       <refpath_extend extended_select="condition_parameter_item">	
         condition_action_method_items *&gt; fbb_condition_action_method_items	
         fbb_condition_action_method_items = 	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Activity_method_relationship)/)
	(/MAPPING_OF(Applied_activity_method_assignment)/)
	(/MAPPING_OF(Assigned_property)/)
	(/MAPPING_OF(Classification_assignment)/)
	(/MAPPING_OF(Expression)/)
	(/MAPPING_OF(Identification_assignment)/)
	(/MAPPING_OF(Independent_property)/)
	(/MAPPING_OF(Independent_property_representation)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Property_representation)/)
	(/MAPPING_OF(Representation)/)
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Required_resource_assignment)/)
	(/MAPPING_OF(Required_resource_relationship)/)
	(/MAPPING_OF(Resource_item)/)
	(/MAPPING_OF(Resource_item_assignment)/)
	(/MAPPING_OF(Resource_item_realization)/)
	(/MAPPING_OF(Resource_item_relationship)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Resource_property_representation)/)
	(/MAPPING_OF(Task_element_relationship)/)
	(/MAPPING_OF(Value_with_unit)/)
	(/MAPPING_OF(parameter_value_select)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Expression_assignment" original_module="expression_assignment">	
     <aa attribute="items" assertion_to="*">	
     <refpath_extend extended_select="expression_assignment_item" >	
       expression_assignment_item *&gt; fbb_expression_assignment_item	
       fbb_expression_assignment_item = 	
	(/MAPPING_OF(Condition)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Identification_assignment" original_module="identification_assignment">	
     <aa attribute="items" assertion_to="*">	
       <refpath_extend extended_select="identification_item">	
         identification_item  *&gt; fbb_identification_item	
         fbb_identification_item = 	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Activity_method_relationship)/)
	(/MAPPING_OF(Applied_activity_method_assignment)/)
	(/MAPPING_OF(Assigned_property)/)
	(/MAPPING_OF(Class)/)
	(/MAPPING_OF(Condition)/)
	(/MAPPING_OF(Digital_file)/)
	(/MAPPING_OF(External_class_library)/)
	(/MAPPING_OF(External_source_identification)/)
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(General_model_parameter)/)
	(/MAPPING_OF(Hardcopy)/)
	(/MAPPING_OF(Identification_relationship)/)
	(/MAPPING_OF(Independent_property)/)
	(/MAPPING_OF(Independent_property_relationship)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_relationship)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Representation)/)
	(/MAPPING_OF(Representation_item)/)
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Required_resource_relationship)/)
	(/MAPPING_OF(Requirement_version_relationship)/)
	(/MAPPING_OF(Resource_item)/)
	(/MAPPING_OF(Resource_item_realization)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Task_element)/)
	(/MAPPING_OF(Task_element_relationship)/)
	(/MAPPING_OF(Task_io)/)
	(/MAPPING_OF(Task_step)/)
	(/MAPPING_OF(View_definition_context)/)
       </refpath_extend>	
     </aa>	
   </ae>	
<!-- Fix cvs_ant_all Error APmapindex3 -->
   <ae entity="Managed_resource_by_reference" original_module="resource_management" >	
     <aa attribute="item" assertion_to="*">	
       <refpath_extend extended_select="resource_item_select" >	
         action_method_items *&gt; fbb_action_method_items	
         fbb_action_method_items =	
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Required_resource_assignment" original_module="required_resource" >	
     <aa attribute="item" assertion_to="*">	
       <refpath_extend extended_select="required_resource_item" >	
         action_method_items *&gt; fbb_action_method_items	
         fbb_action_method_items =	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Task_element)/)
	(/MAPPING_OF(Task_step)/)
       </refpath_extend>	
     </aa>	
   </ae>	
<!-- Fix cvs_ant_all Error APmapindex3 -->
   <ae entity="Required_resource_by_reference" original_module="required_resource" >	
     <aa attribute="item" assertion_to="*">	
       <refpath_extend extended_select="resource_item_select" >	
         action_method_items *&gt; fbb_action_method_items	
         fbb_action_method_items =	
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Resource_as_realized_by_reference" original_module="resource_as_realized">	
     <aa attribute="item" assertion_to="*">	
     <refpath_extend extended_select="resource_item_select" >	
       action_method_items *&gt; fbb_action_method_items	
       fbb_action_method_items = 	
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Resource_item_assignment" original_module="resource_item" >	
     <aa attribute="item" assertion_to="*">	
       <refpath_extend extended_select="resource_assignment_item">	
         action_method_items *&gt; fbb_action_method_items	
         fbb_action_method_items =	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
       </refpath_extend>	
     </aa>	
   </ae>	
<!-- Fix cvs_ant_all Error APmapindex3 -->
   <ae entity="Resource_item_realization" original_module="resource_item" >	
     <aa attribute="item" assertion_to="*">	
       <refpath_extend extended_select="resource_item_select" >	
         action_method_items *&gt; fbb_action_method_items	
         fbb_action_method_items =	
	(/MAPPING_OF(File)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Resource_property" original_module="resource_property_assignment">	
     <aa attribute="described_element" assertion_to="*">	
     <refpath_extend extended_select="characterized_resource_select" >	
       characterized_resource_definition *&gt; fbb_characterized_resource_definition	
       fbb_characterized_resource_definition = 	
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Resource_item)/)
	(/MAPPING_OF(Resource_item_realization)/)
	(/MAPPING_OF(Resource_item_relationship)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Same_as_external_item" original_module="same_as_external_item" >	
     <aa attribute="items" assertion_to="*">	
       <refpath_extend extended_select="same_as_item">	
         same_as_item *&gt; fbb_same_as_item	
         fbb_same_as_item =	
	(/MAPPING_OF(Activity_method)/)
	(/MAPPING_OF(Condition)/)
	(/MAPPING_OF(Condition_parameter)/)
	(/MAPPING_OF(Derived_unit_element)/)
	(/MAPPING_OF(External_source)/)
	(/MAPPING_OF(External_source_identification)/)
	(/MAPPING_OF(Independent_property)/)
	(/MAPPING_OF(Product)/)
	(/MAPPING_OF(Product_version)/)
	(/MAPPING_OF(Product_view_definition)/)
	(/MAPPING_OF(Representation_context)/)
	(/MAPPING_OF(Required_resource)/)
	(/MAPPING_OF(Required_resource_requirement)/)
	(/MAPPING_OF(Resource_item)/)
	(/MAPPING_OF(Resource_property)/)
	(/MAPPING_OF(Unit)/)
	(/MAPPING_OF(Value_with_unit)/)
	(/MAPPING_OF(View_definition_context)/)
       </refpath_extend>	
     </aa>	
   </ae>	
   <ae entity="Task_element_assignment" original_module="task_element">	
     <aa attribute="items" assertion_to="*">	
     <refpath_extend extended_select="task_item" >	
       action_method_items *&gt; fbb_action_method_items	
       fbb_action_method_items = 	
	(/MAPPING_OF(Assigned_property)/) 
	(/MAPPING_OF(File)/) 
	(/MAPPING_OF(Product)/) 
	(/MAPPING_OF(Product_version)/) 
	(/MAPPING_OF(Product_version_relationship)/) 
	(/MAPPING_OF(Product_view_definition)/) 
	(/MAPPING_OF(Required_resource)/) 
	(/MAPPING_OF(Required_resource_assignment)/) 
	(/MAPPING_OF(Resource_item)/) 
	(/MAPPING_OF(Resource_property)/) 
       </refpath_extend>	
     </aa>	
   </ae>
<!-- Fix cvs_ant_all Error APmapindex3 -->
   <ae entity="Task_method_assignment" original_module="task_specification">	
     <aa attribute="items" assertion_to="*">	
     <refpath_extend extended_select="task_item" >	
       action_method_items *&gt; fbb_action_method_items	
       fbb_action_method_items = 	
	(/MAPPING_OF(Assigned_property)/) 
	(/MAPPING_OF(File)/) 
	(/MAPPING_OF(Product)/) 
	(/MAPPING_OF(Product_version)/) 
	(/MAPPING_OF(Product_version_relationship)/) 
	(/MAPPING_OF(Product_view_definition)/) 
	(/MAPPING_OF(Required_resource)/) 
	(/MAPPING_OF(Required_resource_assignment)/) 
	(/MAPPING_OF(Resource_item)/) 
	(/MAPPING_OF(Resource_property)/) 
       </refpath_extend>	
     </aa>	
   </ae>
<!-- Fix cvs_ant_all Error APmapindex3 -->
   <ae entity="Task_method_version_assignment" original_module="task_specification">	
     <aa attribute="items" assertion_to="*">	
     <refpath_extend extended_select="task_item" >	
       action_method_items *&gt; fbb_action_method_items	
       fbb_action_method_items = 	
	(/MAPPING_OF(Assigned_property)/) 
	(/MAPPING_OF(File)/) 
	(/MAPPING_OF(Product)/) 
	(/MAPPING_OF(Product_version)/) 
	(/MAPPING_OF(Product_version_relationship)/) 
	(/MAPPING_OF(Product_view_definition)/) 
	(/MAPPING_OF(Required_resource)/) 
	(/MAPPING_OF(Required_resource_assignment)/) 
	(/MAPPING_OF(Resource_item)/) 
	(/MAPPING_OF(Resource_property)/) 
       </refpath_extend>	
     </aa>	
   </ae>

</mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
     <imgfile file="mimexpg2.xml"/>
   </express-g>
    <shortnames>   
    <shortname name="FCAMAR" entity="fbb_characterized_action_method_assignment_relationship"/>
    <shortname name="FCAMR" entity="fbb_characterized_action_method_relationship"/>
    <shortname name="FCAR" entity="fbb_characterized_action_resource"/>
    <shortname name="FCARR" entity="fbb_characterized_action_resource_relationship"/>
    <shortname name="FCARRQ" entity="fbb_characterized_action_resource_requirement"/>
    <shortname name="FCAAMA" entity="fbb_characterized_applied_action_method_assignment"/>
    <shortname name="FCDF" entity="fbb_characterized_document_file"/>
    <shortname name="FCGE" entity="fbb_characterized_generic_expression"/>
    <shortname name="FCGP" entity="fbb_characterized_general_property"/>
    <shortname name="FCGPR" entity="fbb_characterized_general_property_relationship"/>
    <shortname name="FBCHRPR" entity="fbb_characterized_product"/>
<!--    <shortname name="FCPC" entity="fbb_characterized_product_category"/> --> 
    <shortname name="FCPD" entity="fbb_characterized_product_definition"/>
    <shortname name="FCPDF" entity="fbb_characterized_product_definition_formation"/>
    <shortname name="FCPDFR" entity="fbb_characterized_product_definition_formation_relationship"/>
    <shortname name="FCPD" entity="fbb_characterized_property_definition"/>
    <shortname name="FCPDR" entity="fbb_characterized_property_definition_representation"/>
    <shortname name="FBCHRP" entity="fbb_characterized_representation"/>
    <shortname name="FCRC" entity="fbb_characterized_representation_context"/>
    <shortname name="FCRI" entity="fbb_characterized_representation_item"/>
    <shortname name="FCRP" entity="fbb_characterized_resource_property"/>
  </shortnames>   
 </mim>

 <!-- MIM long form (optional) -->
 <!-- If not required, delete this section and the following files:
          mim_lf.xml
          mimexpg_lf1.gif
          mimexpg_lf1.xml -->
 <mim_lf>
   <!-- Note MIM long form EXPRESS is in mim_lf.xml -->
   <express-g>
     <imgfile file="mimexpg_lf1.xml"/>
   </express-g>
 </mim_lf>

   <usage_guide>
   
   
   	<p>Function Based Behaviour clearly depicts functions and their I/O. It is hierarchical. Ordering 
	of the functions is provided by ordering operations. Functions with their I/O correspond to classic 
	systems engineering N-squared charts and related to (but not identical with) data flow diagrams. They 
	provide a functional data model. Functions with their ordering correspond to the Functional Flow 
	Block Diagrams (FFBD's), developed in the 1950’s by TRW for the Army ballistic missile program. They modelled 
	functional control. In the 1970’s, when Jim Long added I/O to the FFBD’s, these executable diagrams 
	began to be used in systems engineering to capture response to excitation and to generate time lines. 
	They have been called Behaviour Diagrams (BD's) and Extended Functional Flow Block Diagrams (EFFBD’s). </p>
	
	<p>
	During 2006 the SysML program <a href="http://www.omgsysml.org"/> has generated a standard that provides 
	for an equivalent capability with diagrams called Activity Diagrams; reference 
	<a href="http://en.wikipedia.org/wiki/Activity_diagram"/>.  
	These are extensions made to UML 2.0 (see, <a href="http://en.wikipedia.org/wiki/Unified_Modeling_Language"/>)
	via the SysML program (see, <a href="http://en.wikipedia.org/wiki/SysML"/>). </p>
	
	<p>It is possible to define a unifying view for all of these graphical presentation.
	This is capsulated both in the AP233 Concept Model and in Jim Long's white paper <i>Relationships 
	between Common Graphical Representations in Systems Engineering</i>.</p>

	<p><b>F.1 AP233 function based behaviour concept model</b></p>
	
   	<p>Function Based Behaviour can be defined as a representation of what a system is to do, 
	based on descriptions of the transformations it performs. What a thing does can be 
	described by citing a set of significant transformations it performs. In science and 
	all changes can be represented by transformations that follow well known transformation 
	laws like conservation of matter and energy.</p>
	
	<p>Function is a transformation that consumes engineering things and generates or transforms 
	them into other engineering things. I/O is the output from one Function and the input to another Function.
	In all of the mathematical laws of science engineering things are transformed into other 
	engineering things. </p>

	<p>In the physical world nothing is created, destroyed or deleted. There is only transformation.
	Function embodies this concept and is the representation and basis for change in the physical world.</p>
	
	<figure id="ffb1" number="F-1"> 
	<title>Definitions concerning function based behaviour</title>
	<img src="SEHandBk7.gif"/>	
	</figure>

	
	<p>Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb1"> F-1</module_ref> 
	and the integer tagged definitions below provide the relationships for Function, I/O and Ordering 
	that are essential to the function based behaviour representation problem.</p>
	
	<p>An engineering thing is that for which observable, measurable, and reproducible properties or 
	attributes can be obtained.</p>
	
	<p><b>Function </b>(31) is a transformation that consumes one set of engineering things and generates or 
	transforms them into another set of engineering things.</p>
	
	<p><b>I/O </b>(32) is the output from one Function and an input to another Function</p>
	
	<p><b>Time_interval </b>(36) is a period of time during which a Function produces its I/O. In some disciplines 
	the transitions are found to be fast enough that they can be considered to be instantaneous. 
	Transformation of inputs into outputs takes a finite amount of time. The Time_intervals can be 
	assigned to a complex set of functions and then the time line for the behaviour can be calculated 
	from the model. In this manner an overall required time response can be calculated from a 
	design behaviour model. That prediction can then be verified by measurement when the system is built. </p>
	
	<p><b>Function_ordering </b>(37) is an operator that arranges functions as they are to be 
	executed in practice. Functions may occur in sequence or concurrently. It is possible to execute a 
	function repeatedly. These relationships are captured by a set of ordering operations and a set of 
	execution rules for the model.</p>
	
	<p><b>Script </b>(38) is a set of language elements associated with a Function that define how that Function 
	acts on inputs to generate outputs. By embedding language elements in a Function, the Function 
	can carry out transformation and decision processes on inputs that it receives.</p>
	
	<p><b>Sequence </b>(39) is an ordering operator that establishes sequence among Functions. In some cases a 
	behaviour requires a particular sequence of Functions to get a particular result. </p>
	
	<p><b>And </b>(40) is an ordering operator that establishes concurrency among functions. Some Functions must 
	be done at the same time to be effective; they must be concurrent.</p>
	
	<p><b>Or </b>(41) is an ordering operator that establishes alternative paths among a group of  Functions. In 
	many systems there are multiple choices in its behaviour. These choices are represented by 
	multiple paths or threads through the behaviour. </p>
	
	<p><b>Multi_exit_function </b>(42) is a Function that acts as an ordering operator that provides multiple 
	exits to alternative paths. One way of representing alternative paths is to use a Function that 
	has multiple exits and internal rules for the choices.</p>
	
	<p> <b>Loop</b>(43) is an  ordering operator that repeats a Functions or group of Functions some number of times.
	Often the same transformation is repeated for some number of times.</p>
	
	<p><b>Loop_limit </b>(44) is the number or expression for the number of repetitions in a Loop. It is inefficient 
	use of resource to allow a loop to run without a limit to stop it.</p>
	
	<p><b>Loop_exit </b>(45) is the ordering operation that terminates a loop and provides correct continuation of 
	the execution path. Often when a loop ends there is a transition to an entry point in the behaviour.</p>
	
	<p><b>Iterate </b>(46) is an ordering operator that repeats a Function or group of Functions. It is possible for 
	the termination of a repeated transformation not to be based on a number. It may be based on a 
	condition or a set of conditions.</p>
	
	<p><b>Iterate_limit </b>(47) is an ordering operation that establishes the set over which the iteration is 
	to be performed. In the games of checkers and chess there is no set number of moves that are made. 
	Rather the game proceeds by a set rules until a final rule or condition is met.</p>

	<p><b>F.2 Background</b></p> 

	<p>The following text has been extracted (with permission) from Jim Long's White Paper "Relationships
	between Common Graphical Representations in Systems Engineering".  This work is harmonized with
	both the AP233 Concept Model and the EXPRESS model defined within the Function Based behaviour
 	module set. The full/original white paper entitiled can be downloaded at:
	<a href="http://www.vitechcorp.com/library/papers.php"/>	</p>				

	<p>Over the past several years, systems engineers have
	evolved to a few graphical representations to present the functional and data flow
	characteristics of their system design. The most common of these are the Function Flow
 	Block Diagram (FFBD),Data Flow Diagram (DFD), N2 (N-Squared) Chart, IDEF0 Diagram,
 	Use Case, Sequence Diagram, Enhanced Function Flow Block Diagram, and behaviour Diagram (BD).
	Most of these graphical representations allow the engineer to decompose the functional
	and/or data models hierarchically.</p> 		

	<p>The objective of AP233's Function based behaviour capability is to provide a data model that 
	can be used as a neutral format for 	all of the graphical representations defined herein.  
	This data model is "complete", relative 	to the function based behaviour representation 
	needs of systems engineering. </p>		
	
	<p><b>F.3 Terminology</b></p>	
	<p>Let us introduce two terms that we use in describing the conditions that allow/cause a
	function to begin execution. Considering the control and data environment, a function can
	begin execution if it is both enabled (by control) and triggered (by data). In the case where
	there is no data trigger specified, a function begins execution upon being enabled. A
	function is enabled if the function(s) that precede it in the control flow specification
	have completed execution (e.g., satisfied their completion criteria). A function is triggered
	when the required stimulus data item becomes available to the function. We are not concerned
	here with other execution requirements (such as the availability of necessary resources, except
	in the case of the Dynamic Timeline Diagrams) that could be represented by either control or
	data structures as necessary.</p>		
	
	<p><b>F.3.1 Function Flow Block Diagram</b></p>	
	<p>The Function Flow Block Diagram (FFBD) was the first to be favored by systems engineers and
	continues to be widely used today (DSMC 1989, Blanchard and Fabrycky 1990 book "Systems 
	Engineering and Analysis"). 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb2"> F.2</module_ref> 
	shows a sample FFBD. An FFBD shows the functions that a 
	system is to perform and the order in which they are to be enabled (and performed). The order 
	of performance is specified from the set of available control constructs shown in 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb2"> F.3</module_ref> . The 
	control enablement of the first function is shown by the reference node(s) which precede it, 
	and the reference node(s) at the end of the function logic indicate what functions are enabled next. 
	The FFBD also shows completion criterion for functions as needed for specification (for example, 
	the exits for the multi-exit function in Figure 1). The FFBD does not contain any information relating 
	to the flow of data between functions, and therefore does not represent any data triggering of 
	functions. The FFBD only presents the control sequencing for the functions.</p>		
		
		<figure id="ffb2" number="F.2">
		<title>Sample Function Flow Block Diagram (FFBD)</title>			
		<img src="Vitech_fig_1.gif"/>
		</figure>		
		
		<figure id="ffb3" number="F.3">
		<title>Control Constructs for Function Flow Block Diagrams</title>			
		<img src="Vitech_fig_2.gif"/>		
		</figure>
	
	<p><b>F.3.2 Data Flow Diagram</b></p>		
	<p>The Data Flow Diagram (DFD), shown in 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb4"> F.4</module_ref>, 
	shows required data flow between the functions of
	a system (DeMarco 1979). This representation has been widely used by software engineers and serves
	as the basis of many software engineering methodologies and automated tools. The figure shows that
	data repositories, external sources, and external sinks can also be represented by DFDs. However,
	DFDs do not show any control constructs for function sequencing or enablement.</p>
	
		<figure id="ffb4" number="F.4">
		<title>Sample Data Flow Diagram</title>			
		<img src="Vitech_fig_3.gif"/>	
		</figure>
	
	<p><b>F.3.3 N-Squared (N2) Chart</b></p>		
	<p>The N-Squared (N2) Chart, shown in 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb5"> F.5</module_ref>, 
	was developed to show and specify interfaces
	between the elements of a system (Long et al. 1968, Lano 1977). 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb5"> F.5</module_ref>
	is the N2 Chart that
	corresponds to the Enhanced FFBD in 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb7"> F.7</module_ref>.
	When used to show the interfaces between the
	functions in a system, the N2 chart is equivalent to a DFD - it contains all the information and
	differs only in format. The N2 chart is commonly used as a complement to the FFBD to provide the
	data flow information as inputs and outputs of the system functions.</p>

		<figure id="ffb5" number="F.5">
		<title>Sample N-squared (N2) Chart</title>
		<img src="Vitech_fig_4.gif"/>		
		</figure>
	
	<p>The N2 Chart is structured by locating the functions on the diagonal, resulting in an N squared matrix
	for a set of N functions. For a given function, all outputs are located in the row of that function
	and all inputs are in the column of the function. If the functions are placed on the diagonal in
	the nominal order of execution, then data items located above the diagonal represent normal flowdown
	of data. Data items below the diagonal represent data item feedback. External inputs can optionally
	be shown in the row above the first function on the diagonal, and external outputs can be shown in 
	the right-hand column. If desired, data repositories can be represented by placing them on the diagonal
	with the functions.</p>	
	
	<p><b>F.3.4 IDEF0 Diagram</b></p>	
	<p>The IDEF0 Diagram (see 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb6"> F.6</module_ref>)
	appears to be a derivative of the DFD with a format like the
	N2 Chart (Groveston, 1989 and FIPS-183, 1993). The primary content of the IDEF0 Diagram is the
	specification of data flow between system functions. An IDEF0 diagram is often supported by an
	IDEF1 or IDEF1x diagram indicating data keys with the objective of preserving referential integrity.
	The IDEF0 diagram does allow the specification of control as an input to a function but does not have
	the capability to characterize that control in terms of constructs, as the FFBD, EFFBD, and behaviour
	Diagrams do. The specification of control with the IDEF0 notation is incomplete and, therefore, not
	executable. The IDEF0 Diagram also represents the mechanism (usually the component to which the
	function is allocated) which performs the function. 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb6"> F.6</module_ref> 
	is the IDEF0 Diagram that corresponds 
	to the EFFBD in 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb7"> F.7</module_ref>.</p>
	
		<figure id="ffb6" number="F.6">
		<title>Sample IDEF0 Diagram</title>
		<img src="Vitech_fig_5.gif"/>		
		</figure>
	
	<p><b>F.3.5 Enhanced FFBD</b></p>	
	<p>The EFFBD displays the control dimension of the functional model in an FFBD format with a data
	flow overlay to effectively capture data dependencies. Thus, the Enhanced FFBD represents:
	(1) functions, (2) control flows, and (3) data flows. The logic constructs allow you to indicate
	the control structure and sequencing relationships of all functions accomplished by the system being
	analyzed and specified. When displaying the data flow as an overlay on the control flow, the EFFBD
	graphically distinguishes between triggering and non-triggering data inputs. Triggering data is 
	required before a function can begin execution. Therefore, triggers are actually data items with
	control implications. 
	In Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb7"> F.7</module_ref>, 
	triggers are shown with green backgrounds and with the
	double-headed arrows. Non-triggering data inputs are shown with gray backgrounds and with
	single-headed arrows.</p>		
	
		<figure id="ffb7" number="F.7">
		<title>Sample Enhanced FFBD</title>
		<img src="Vitech_fig_8.gif"/>		
		</figure>
	
	<p>The Enhanced FFBD specification of a system is complete enough that it is executable as a
	discrete event model, providing the capability of dynamic, as well as static, validation. A 
	fundamental rule in the interpretation of an EFFBD specification is that a function must be 
	enabled (by completion of the function(s) preceding it in the control construct) and triggered
	(if any data input to it is identified as a trigger) before it can execute. This allows the
	engineer maximum freedom to use either control constructs or data triggers (or a combination
	of both) to specify execution conditions for individual system functions. By augmenting the EFFBD
	with function duration estimates/budgets and resource constraints and utilization, trade studies 
	can be done using dynamic simulation outputs. 
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb8"> F.8</module_ref> 
	shows the output of such a simulation.
	This figure shows timelines for a resource (MIPS). It also shows timelines for the integrated
	system functions, indicating the delays in function execution due to waiting for triggers and
	resources (MIPS). This dynamic view is also capable of showing the status of the queuing of 
	triggering data.</p>

		<figure id="ffb8" number="F.8">
		<title>Dynamic Timeline</title>
		<img src="Vitech_fig_9.png"/>		
		</figure>
		
	<p><b>F.3.6 Behaviour Diagram (BD)</b></p>	
	<p>The behaviour Diagram (BD) 
	(Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb9"> F.9</module_ref>) 
	is a graphical representation equivalent to the
	Enhanced FFBD 
	(Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb7"> F.7</module_ref>). 
	The primary difference is in the orientation of the control flow:
	in the EFFBD, control sequencing is from left to right; in the BD, control sequencing is
	from top to bottom. While it is not shown on the graphical construct, the BD model allows
	data inputs to a function to be characterized as either triggering (a control capability)
	or data update (not a control implementation).</p>		

		<figure id="ffb9" number="F.9">
		<title>Sample Behaviour Diagram</title>
		<img src="Vitech_fig_10.gif"/>		
		</figure>

		<p>As with the Enhanced FFBD, the behaviour Diagram specification of a system is sufficient
	to form an executable model allowing dynamic validation via discrete event simulation methods.</p>
	
	
	<p><b>F.4 Relationships between the diagrams</b></p>

	<p>From the descriptions of the graphic representations, it is seen that the FFBD
	characterizes only the functional control model and the DFD characterizes only the
	functional data model for a system. The Enhanced FFBD and behaviour Diagram capture both
	these limiting models and the continuum between them.  
	Figure <module_ref linkend="function_based_behaviour:f_usage_guide:figure:ffb10"> F.10</module_ref> 
	shows where all these
	graphical representations fit on the behaviour spectrum and, therefore, places them in
	perspective relative to each other in the sense of specifying control and triggering
	for functions.</p>	
	
		<figure id="ffb10" number="F.10">
		<title>Relationships of All Graphical Representations - FFBD and DFDs Are Limiting Cases</title>
		<img src="Vitech_fig_12.png"/>		
		</figure>
	
	<p><b>F.5 Conclusions</b></p>	
	
	<p>The graphical representations that systems engineers commonly use to describe and
	specify the functionality and data requirements of a system are very closely related
	when analyzed in the context of data and functional control capabilities. In particular,
	the FFBD and DFD are limiting cases of the EFFBD/behaviour Diagram representation
	The N2 Chart is equivalent to the DFD: so it is, likewise, a limiting case of the EFFBD/BD
	on the data modeling end of the spectrum. The IDEF0 is essentially a DFD, except that some
	control capability (no control constructs) is added. The IDEF0 also allows the explicit
	representation of functional allocation (i.e., what system component performs each function).</p>
     </usage_guide>
     
     
	<bibliography>

		<bibitem published="y">
		<pubdate>1998</pubdate>
		<stdtitle> Systems Engineering and Analysis</stdtitle> 
		<stdnumber>Benjamin S. Blanchard and Wolter J. Fabrycky</stdnumber> 
		</bibitem>

		<bibitem id="DSMC" published="y">
		<pubdate>1989</pubdate>
		<stdtitle> Systems Engineering Management Guide</stdtitle>
		<subtitle> http://handle.dtic.mil/100.2/ADA223168</subtitle>
		<orgname>Defense Systems Management College, U.S. Government Printing Office</orgname> 
		</bibitem>

		<bibitem id="DeMarco" published="y">
		<pubdate>1979</pubdate>
		<stdnumber> Tom Demarco </stdnumber> 
		<stdtitle> Structured Analysis and System Specification</stdtitle> 
		<subtitle>Prentice Hall </subtitle> 
		</bibitem>

		<bibitem id="FIPS" published="y">
		<pubdate>1993</pubdate>
		<stdtitle> Integration Definition for Function Modeling (IDEF0).</stdtitle> 
		<stdnumber>FIPS-183 NIST</stdnumber> 
		<subtitle>www.itl.nist.gov/fipspubs/idef02.doc </subtitle> 
		</bibitem>

		<bibitem published="y">
		<pubdate>2002</pubdate>
		<stdtitle> Relationships between Common Graphical Representations in Systems Engineering </stdtitle>
		<subtitle>http://www.vitechcorp.com/support/papers.php</subtitle> 
		<stdnumber>Jim Long, ViTech Corporation  </stdnumber> 
		</bibitem>

		<bibitem published="y">
		<pubdate>2008</pubdate>
		<orgname>OMG</orgname>
		<stdtitle>  OMG SysML(Systems Modeling Language) v. 1.1</stdtitle> 
		<subtitle>http://sysml.org/specs.htm</subtitle> 
		</bibitem>

</bibliography>


</module>
