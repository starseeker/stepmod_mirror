<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: module.xml,v 1.2 2005/01/06 09:22:47 budreckytej Exp $ -->
<!DOCTYPE module SYSTEM "../../../dtd/module.dtd">
<!-- Generated by mkmodule.js, Eurostep Limited, http://www.eurostep.com -->
 <!-- 
     To view the module in IExplorer, open: sys/1_scope.xml
      -->
<module
   name="functional_assignment_to_part"
   part="xxxx"
   version="1"
   sc4.working_group="12"
   wg.number="00000"
   wg.number.arm=""
   wg.number.mim=""
   checklist.internal_review=""
   checklist.project_leader=""
   checklist.convener=""
   status="CD-TS"
   language="E"
   publication.year=""
   published="n"
   rcs.date="$Date: 2005/01/06 09:22:47 $"
   rcs.revision="$Revision: 1.2 $"
   development.folder="dvlp">

 <keywords>
    module, piece part, function
 </keywords>

<!-- the abstract for the module. If not provided, the XSL will use the in scope -->

 <!-- Reference to contacts detailed in stepmod/data/basic/contacts.xml -->
 <contacts>
   <projlead ref="AP210.projlead"/>
   <editor ref="pdmmodules.editor"/>
 </contacts>

 <!-- Introduction -->
 <!-- The introduction should start as shown: -->
 <purpose>
   <p>
     This part of ISO 10303 specifies an application module for the
     representation of information needed to support mapping of functional models to piece part models.
   </p>
 </purpose>

 <!-- Items in scope -->
 <inscope>
   <li>functional mapping to packaged part;</li>
		<li>items within the scope of Network_functional_usage_view_arm;</li>
		<li>items within the scope of Physical_unit_usage_view_arm.</li>
 </inscope>

 <!-- Items out of scope 
 <outscope>
   <li>xxxx</li>
 </outscope>
-->

<!--
 <normrefs/>

 <definition/>

 <abbreviations/>
-->

 <!-- Clause 4 ARM  -->
 <arm>
   <!-- Note ARM short form EXPRESS is in arm.xml -->

   <!-- Short form EXPRESS-G -->
   <express-g>
     <imgfile file="armexpg1.xml"/>
   </express-g>
 </arm>


 <!-- Clause 5.1 Mapping specification -->
 <mapping_table>
   
 <ae entity="Part_terminal" extensible="NO">
            <aimelt xml:space="preserve">(assembly_module_terminal) (bare_die_terminal) (cable_terminal) (interconnect_module_terminal) (minimally_defined_bare_die_terminal) (packaged_part_terminal)</aimelt>
            <source xml:space="preserve">ISO 10303-210 210 210 210 210 210</source>
            <refpath xml:space="preserve">(assembly_module_terminal &lt;=)
(bare_die_terminal &lt;=
minimally_defined_bare_die_terminal &lt;=)
(cable_terminal &lt;=)
(interconnect_module_terminal &lt;=)
(minimally_defined_bare_die_terminal &lt;=)
(packaged_part_terminal &lt;=)
shape_aspect
</refpath>
        </ae>
    <ae entity="Part_connected_terminals_definition" extensible="NO">
            <aimelt xml:space="preserve">part_connected_terminals_definition</aimelt>
            <source xml:space="preserve">ISO 10303-210</source>
            <refpath xml:space="preserve">part_connected_terminals_definition &lt;=
shape_aspect
</refpath>
            <aa attribute="name">
                <aimelt xml:space="preserve">shape_aspect.name</aimelt>
                <source xml:space="preserve">ISO 10303-41</source>
                <refpath xml:space="preserve">part_connected_terminals_definition &lt;=
shape_aspect
shape_aspect.name
</refpath>
            </aa>
            <aa attribute="connected_terminals" assertion_to="Part_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">part_connected_terminals_definition &lt;=
shape_aspect &lt;-
shape_aspect_relationship.relating_shape_aspect
shape_aspect_relationship
{shape_aspect_relationship
shape_aspect_relationship.name  = 'member connected terminal'}
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
(assembly_module_terminal)
(minimally_defined_bare_die_terminal)
(interconnect_module_terminal)
(packaged_part_terminal)
</refpath>
            </aa>
            <aa attribute="associated_definition" assertion_to="Part_usage_view">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">part_connected_terminals_definition &lt;=
shape_aspect
shape_aspect.of_shape -&gt;
product_definition_shape &lt;=
property_definition
property_definition.definition -&gt;
characterized_definition
characterized_definition = characterized_product_definition
characterized_product_definition
characterized_product_definition = product_definition
</refpath>
            </aa>
        </ae>
    <ae entity="Functional_usage_view_to_part_terminal_assignment" extensible="NO">
            <aimelt xml:space="preserve">shape_aspect_relationship</aimelt>
            <source xml:space="preserve">ISO 10303-41</source>
            <refpath xml:space="preserve">{shape_aspect_relationship
shape_aspect_relationship.name = 'functional terminal allocation'}
</refpath>
            <aa attribute="physical_usage_view_terminal" assertion_to="Part_terminal">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.related_shape_aspect -&gt;
shape_aspect =&gt;
(assembly_module_terminal)
(minimally_defined_bare_die_terminal =&gt;
bare_die_terminal)
(interconnect_module_terminal)
(package_terminal)
(packaged_part_terminal)
</refpath>
            </aa>
            <aa attribute="functional_usage_view_terminal" assertion_to="Scalar_terminal_definition">
                <aimelt xml:space="preserve">PATH</aimelt>
                <refpath xml:space="preserve">shape_aspect_relationship
shape_aspect_relationship.relating_shape_aspect -&gt;
{shape_aspect
shape_aspect.description = 'scalar terminal'}
shape_aspect =&gt;
functional_unit_terminal_definition
</refpath>
            </aa>
        </ae>
 </mapping_table>

 <!-- Clause 5.2 MIM -->
 <mim>
   <!--  Note MIM short form express is in mim.xml -->
   <express-g>
     <imgfile file="mimexpg1.xml"/>
   </express-g>
 </mim>

</module>
