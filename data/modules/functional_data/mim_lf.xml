<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: mim_lf.xml,v 1.2 2002/10/30 18:30:08 davidleal Exp $ -->
<!DOCTYPE express SYSTEM "../../../dtd/express.dtd">
<?xml-stylesheet type="text/xsl"
href="../../../xsl/express.xsl" ?>

<express
  language_version="1"
  rcs.date="$Date: $"
  rcs.revision="$Revision: $">

  <application
    name=" Eurostep EXPRESS Parser (Eep!)"
    owner="Eurostep Limited"
    url="www.eurostep.com"
    version="1, 2, 1041, 2056"
    source="mim_lf.exp"/>

  <schema name="Functional_data_mim_lf">
    <constant
      name="schema_prefix"
      expression="&apos;FUNCTIONAL_DATA_MIM_LF.&apos;">
      <builtintype type="STRING"
      />
    </constant>
    <constant
      name="the_empty_space"
      expression="make_finite_space([])">
      <typename name="finite_space"/>
    </constant>
    <type name="action_items">
      <select
        selectitems="class_of_activity class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection class_of_person class_of_product composition_of_individual_activity composition_of_individual_product connection_of_individual_activity connection_of_individual_product containment_of_individual_product individual_activity individual_involvement_in_activity involvement_of_individual_product_in_connection organization organization_type person person_and_organization possession_of_property_by_activity possession_of_property_by_product product_as_individual property_condition_for_activity property_condition_for_product"
      />
    </type>

    <type name="amount_of_substance_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="area_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="atom_based_tuple">
      <aggregate type="LIST"
      />
      <typename name="atom_based_value"/>
    </type>

    <type name="atom_based_value">
      <select
        selectitems="maths_atom atom_based_tuple"
      />
    </type>

    <type name="celsius_temperature_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="characterized_action_definition">
      <select
        selectitems="action action_method action_relationship"
      />
    </type>

    <type name="characterized_definition">
      <select
        selectitems="characterized_product_definition"
      />
    </type>

    <type name="characterized_product_definition">
      <select
        selectitems="product_definition"
      />
    </type>

    <type name="classification_select">
      <select
        selectitems="composition_of_individual_activity composition_of_individual_product connection_of_individual_activity connection_of_individual_product containment_of_individual_product individual_activity individual_involvement_in_activity involvement_of_individual_product_in_connection product_as_individual"
      />
    </type>

    <type name="complete_membership_select">
      <select
        selectitems="composition_of_individual_activity composition_of_individual_product connection_of_individual_activity connection_of_individual_product containment_of_individual_product individual_activity individual_involvement_in_activity involvement_of_individual_product_in_connection product_as_individual"
      />
    </type>

    <type name="context_dependent_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="count_measure">
      <builtintype type="NUMBER"
      />
    </type>

    <type name="derived_property_select">
      <select
        selectitems="action_property property_definition"
      />
    </type>

    <type name="description_attribute_select">
      <select
        selectitems="application_context external_source person_and_organization property_definition_representation representation"
      />
    </type>

    <type name="descriptive_measure">
      <builtintype type="STRING"
      />
    </type>

    <type name="electric_current_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="elementary_space_enumerators">
      <enumeration
        items="es_numbers es_complex_numbers es_reals es_integers es_logicals es_booleans es_strings es_binarys es_maths_spaces es_maths_functions es_generics"
      />
    </type>

    <type name="external_identification_item">
      <select
        selectitems="class_of_activity class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection class_of_product"
      />
    </type>

    <type name="founded_item_select">
      <select
        selectitems="representation_item"
      />
    </type>

    <type name="id_attribute_select">
      <select
        selectitems="action address application_context group product_category property_definition representation"
      />
    </type>

    <type name="identification_item">
      <select
        selectitems="product_as_individual"
      />
    </type>

    <type name="identifier">
      <builtintype type="STRING"
      />
    </type>

    <type name="involved_class_select">
      <typename name="action_items"/>
      <where
        label="wr1"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.COMPOSITION_OF_INDIVIDUAL_ACTIVITY&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr2"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.COMPOSITION_OF_INDIVIDUAL_PRODUCT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr3"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.CONNECTION_OF_INDIVIDUAL_ACTIVITY&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr4"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.CONNECTION_OF_INDIVIDUAL_PRODUCT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr5"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.CONTAINMENT_OF_INDIVIDUAL_PRODUCT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr6"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.INDIVIDUAL_ACTIVITY&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr7"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.INDIVIDUAL_INVOLVEMENT_IN_ACTIVITY&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr8"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.INVOLVEMENT_OF_INDIVIDUAL_PRODUCT_IN_CONNECTION&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr9"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.ORGANIZATION&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr10"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.PERSON&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr11"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.PERSON_AND_ORGANIZATION&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr12"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.POSSESSION_OF_PROPERTY_BY_ACTIVITY&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr13"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.POSSESSION_OF_PROPERTY_BY_PRODUCT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr14"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.PRODUCT_AS_INDIVIDUAL&apos; IN TYPEOF(SELF))">
      </where>
    </type>

    <type name="involved_select">
      <typename name="action_items"/>
    </type>

    <type name="label">
      <builtintype type="STRING"
      />
    </type>

    <type name="length_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="luminous_intensity_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="mass_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="maths_atom">
      <select
        selectitems="maths_simple_atom maths_enum_atom"
      />
    </type>

    <type name="maths_boolean">
      <builtintype type="BOOLEAN"
      />
    </type>

    <type name="maths_enum_atom">
      <select
        selectitems="elementary_space_enumerators open_closed"
      />
    </type>

    <type name="maths_integer">
      <builtintype type="INTEGER"
      />
    </type>

    <type name="maths_real">
      <builtintype type="REAL"
      />
    </type>

    <type name="maths_simple_atom">
      <select
        selectitems="maths_real maths_integer maths_boolean"
      />
    </type>

    <type name="maths_tuple">
      <aggregate type="LIST"
        lower="0"
        upper="?"
      />
      <typename name="maths_value"/>
    </type>

    <type name="maths_value">
      <select
        selectitems="atom_based_value maths_tuple generic_expression"
      />
      <where
        label="constancy"
        expression="NOT (&apos;GENERIC_EXPRESSION&apos; IN stripped_typeof(SELF)) OR expression_is_constant(SELF)">
      </where>
    </type>

    <type name="measure_value">
      <select
        selectitems="amount_of_substance_measure area_measure celsius_temperature_measure context_dependent_measure count_measure descriptive_measure electric_current_measure length_measure luminous_intensity_measure mass_measure numeric_measure parameter_value plane_angle_measure positive_length_measure positive_plane_angle_measure positive_ratio_measure ratio_measure solid_angle_measure thermodynamic_temperature_measure time_measure volume_measure"
      />
    </type>

    <type name="name_attribute_select">
      <select
        selectitems="address derived_unit person_and_organization property_definition_representation"
      />
    </type>

    <type name="nonnegative_integer">
      <builtintype type="INTEGER"
      />
      <where
        label="nonnegativity"
        expression="SELF &gt;= 0">
      </where>
    </type>

    <type name="numeric_measure">
      <builtintype type="NUMBER"
      />
    </type>

    <type name="open_closed">
      <enumeration
        items="open closed"
      />
    </type>

    <type name="organization_type_item">
      <select
        selectitems="organization"
      />
    </type>

    <type name="parameter_value">
      <builtintype type="REAL"
      />
    </type>

    <type name="plane_angle_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="positive_integer">
      <typename name="nonnegative_integer"/>
      <where
        label="positivity"
        expression="SELF &gt; 0">
      </where>
    </type>

    <type name="positive_length_measure">
      <typename name="length_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.000000">
      </where>
    </type>

    <type name="positive_plane_angle_measure">
      <typename name="plane_angle_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.000000">
      </where>
    </type>

    <type name="positive_ratio_measure">
      <typename name="ratio_measure"/>
      <where
        label="WR1"
        expression="SELF &gt; 0.000000">
      </where>
    </type>

    <type name="product_space">
      <select
        selectitems="uniform_product_space listed_product_space"
      />
    </type>

    <type name="ratio_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="relationship_select">
      <typename name="space_context_select"/>
      <where
        label="wr1"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.CLASS_OF_COMPOSITION_OF_PRODUCT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr2"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.CLASS_OF_CONNECTION_OF_PRODUCT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr3"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.CLASS_OF_CONTAINMENT_OF_PRODUCT&apos; IN TYPEOF(SELF))">
      </where>
      <where
        label="wr4"
        expression="NOT (&apos;FUNCTIONAL_DATA_MIM.CLASS_OF_INVOLVEMENT_OF_PRODUCT_IN_CONNECTION&apos; IN TYPEOF(SELF))">
      </where>
    </type>

    <type name="represented_definition">
      <select
        selectitems="general_property property_definition"
      />
    </type>

    <type name="role_select">
      <select
        selectitems="action_assignment"
      />
    </type>

    <type name="si_prefix">
      <enumeration
        items="exa peta tera giga mega kilo hecto deca deci centi milli micro nano pico femto atto"
      />
    </type>

    <type name="si_unit_name">
      <enumeration
        items="metre gram second ampere kelvin mole candela radian steradian hertz newton pascal joule watt coulomb volt farad ohm siemens weber tesla henry degree_Celsius lumen lux becquerel gray sievert"
      />
    </type>

    <type name="solid_angle_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="source_item">
      <select
        selectitems="identifier"
      />
    </type>

    <type name="space_context_select">
      <select
        selectitems="action action_method class_of_composition_of_activity class_of_composition_of_product class_of_connection_of_activity class_of_connection_of_product class_of_containment_of_product class_of_involvement_in_activity class_of_involvement_of_product_in_connection general_property representation_item"
      />
    </type>

    <type name="text">
      <builtintype type="STRING"
      />
    </type>

    <type name="thermodynamic_temperature_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="time_measure">
      <builtintype type="REAL"
      />
    </type>

    <type name="unit">
      <select
        selectitems="derived_unit named_unit"
      />
    </type>

    <type name="value_context_select">
      <select
        selectitems="action action_method general_property representation_item"
      />
    </type>

    <type name="volume_measure">
      <builtintype type="REAL"
      />
    </type>

    <entity name="action"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="chosen_method">
        <typename name="action_method"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="action_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_action">
        <typename name="action"/>
      </explicit>
      <derived
        name="role"
        expression="get_role(SELF)">
        <typename name="object_role"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ROLE_ASSOCIATION.ITEM_WITH_ROLE&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="action_method"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="consequence">
        <typename name="text"/>
      </explicit>
      <explicit
        name="purpose">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="action_property"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
      <explicit
        name="definition">
        <typename name="characterized_action_definition"/>
      </explicit>
    </entity>

    <entity name="action_property_representation"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
      <explicit
        name="property">
        <typename name="action_property"/>
      </explicit>
      <explicit
        name="representation">
        <typename name="representation"/>
      </explicit>
    </entity>

    <entity name="action_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_action">
        <typename name="action"/>
      </explicit>
      <explicit
        name="related_action">
        <typename name="action"/>
      </explicit>
    </entity>

    <entity name="action_status"
    >
      <explicit
        name="status">
        <typename name="label"/>
      </explicit>
      <explicit
        name="assigned_action">
        <typename name="executed_action"/>
      </explicit>
    </entity>

    <entity name="address"
    >
      <explicit
        name="internal_location"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="street_number"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="street"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="postal_box"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="town"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="region"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="postal_code"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="country"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="facsimile_number"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="telephone_number"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="electronic_mail_address"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="telex_number"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <derived
        name="url"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="EXISTS(internal_location) OR EXISTS(street_number) OR EXISTS(street) OR EXISTS(postal_box) OR EXISTS(town) OR EXISTS(region) OR EXISTS(postal_code) OR EXISTS(country) OR EXISTS(facsimile_number) OR EXISTS(telephone_number) OR EXISTS(electronic_mail_address) OR EXISTS(telex_number)">
      </where>
    </entity>

    <entity name="amount_of_substance_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.AMOUNT_OF_SUBSTANCE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="amount_of_substance_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 1.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="application_context"
    >
      <explicit
        name="application">
        <typename name="label"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <inverse
        name="context_elements"
        entity="application_context_element"
        attribute="frame_of_reference">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"
        />
      </inverse>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="application_context_element"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <typename name="application_context"/>
      </explicit>
    </entity>

    <entity name="applied_action_assignment"
      supertypes="action_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="action_items"/>
      </explicit>
    </entity>

    <entity name="applied_classification_assignment"
      supertypes="classification_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="classification_select"/>
      </explicit>
    </entity>

    <entity name="applied_external_identification_assignment"
      supertypes="external_identification_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="external_identification_item"/>
      </explicit>
    </entity>

    <entity name="applied_identification_assignment"
      supertypes="identification_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="identification_item"/>
      </explicit>
    </entity>

    <entity name="applied_organization_type_assignment"
      supertypes="organization_type_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="organization_type_item"/>
      </explicit>
    </entity>

    <entity name="area_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.AREA_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="area_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 2.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="binary_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="2"
        />
        <typename name="generic_expression"/>
      </explicit>
    </entity>

    <entity name="cardinality_of_related_class"
      supertypes="maths_space_context"
    >
      <explicit
        name="physical_space">
        <typename name="relationship_select"/>
        <redeclaration
          entity-ref="maths_space_context"/>
      </explicit>
    </entity>

    <entity name="cardinality_of_relating_class"
      supertypes="maths_space_context"
    >
      <explicit
        name="physical_space">
        <typename name="relationship_select"/>
        <redeclaration
          entity-ref="maths_space_context"/>
      </explicit>
    </entity>

    <entity name="celsius_temperature_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="class"
      supertypes="group"
      super.expression="ONEOF(class_by_extension, class_by_intension)"
    >
    </entity>

    <entity name="class_by_extension"
      supertypes="class"
    >
    </entity>

    <entity name="class_by_intension"
      supertypes="class"
    >
    </entity>

    <entity name="class_of_activity"
      supertypes="executed_action class"
    >
    </entity>

    <entity name="class_of_composition_of_activity"
      supertypes="action_relationship class"
    >
      <explicit
        name="relating_action">
        <typename name="class_of_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
      <explicit
        name="related_action">
        <typename name="class_of_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
    </entity>

    <entity name="class_of_composition_of_product"
      supertypes="product_definition_formation_relationship class"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="class_of_product"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="class_of_product"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="class_of_connection_of_activity"
      supertypes="action_relationship class"
    >
      <explicit
        name="relating_action">
        <typename name="class_of_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
      <explicit
        name="related_action">
        <typename name="class_of_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
    </entity>

    <entity name="class_of_connection_of_product"
      supertypes="product_definition_formation_relationship class"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="class_of_product"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="class_of_product"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="class_of_connection_of_product_with_involvements"
      supertypes="class_of_connection_of_product class_of_product"
    >
    </entity>

    <entity name="class_of_containment_of_product"
      supertypes="product_definition_formation_relationship class"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="class_of_product"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="class_of_product"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="class_of_involvement_in_activity"
      supertypes="applied_action_assignment class"
    >
      <explicit
        name="assigned_action">
        <typename name="class_of_activity"/>
        <redeclaration
          entity-ref="action_assignment"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="1"
        />
        <typename name="involved_class_select"/>
        <redeclaration
          entity-ref="applied_action_assignment"/>
      </explicit>
    </entity>

    <entity name="class_of_involvement_of_product_in_connection"
      supertypes="product_definition_formation_relationship class"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="class_of_connection_of_product_with_involvements"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="class_of_product"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="class_of_person"
      supertypes="person_type class"
    >
    </entity>

    <entity name="class_of_product"
      supertypes="product_definition_formation class"
    >
    </entity>

    <entity name="classification"
      supertypes="applied_classification_assignment"
    >
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="1"
        />
        <typename name="classification_select"/>
        <redeclaration
          entity-ref="applied_classification_assignment"/>
      </explicit>
      <derived
        name="classified"
        expression="SELF\applied_classification_assignment.items[1]">
        <typename name="classification_select"/>
      </derived>
      <derived
        name="classifier"
        expression="SELF\classification_assignment.assigned_class">
        <typename name="class"/>
      </derived>
    </entity>

    <entity name="classification_assignment"
      abstract.supertype="YES"
      super.expression="ONEOF(applied_classification_assignment, complete_membership)"
    >
      <explicit
        name="assigned_class">
        <typename name="group"/>
      </explicit>
      <explicit
        name="role">
        <typename name="classification_role"/>
      </explicit>
    </entity>

    <entity name="classification_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="complement"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="set_1">
        <typename name="class"/>
      </explicit>
      <explicit
        name="set_2">
        <typename name="class"/>
      </explicit>
      <explicit
        name="universe">
        <typename name="class"/>
      </explicit>
      <where
        label="complement_different"
        expression="NOT identical_sets(set_1, set_2)">
      </where>
    </entity>

    <entity name="complete_membership"
      supertypes="classification_assignment"
    >
      <explicit
        name="members">
        <aggregate type="SET"
          lower="0"
          upper="?"
        />
        <typename name="complete_membership_select"/>
      </explicit>
      <derived
        name="containing_set"
        expression="SELF\classification_assignment.assigned_class">
        <typename name="class"/>
      </derived>
    </entity>

    <entity name="composition_of_individual_activity"
      supertypes="action_relationship"
    >
      <explicit
        name="relating_action">
        <typename name="individual_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
      <explicit
        name="related_action">
        <typename name="individual_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
    </entity>

    <entity name="composition_of_individual_product"
      supertypes="product_definition_formation_relationship"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="compound_maths_space_context"
      supertypes="maths_space_context"
    >
      <explicit
        name="components">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="maths_space_context"/>
      </explicit>
    </entity>

    <entity name="condition_property"
      supertypes="general_property_association"
    >
      <explicit
        name="base_definition">
        <typename name="independent_property_definition"/>
        <redeclaration
          entity-ref="general_property_association"/>
      </explicit>
      <where
        label="link_to_condition"
        expression="(&apos;FUNCTIONAL_DATA_MIM_LF.PROPERTY_CONDITION_FOR_ACTIVITY&apos; IN TYPEOF(SELF\general_property_association.derived_definition)) OR (&apos;FUNCTIONAL_DATA_MIM_LF.PROPERTY_CONDITION_FOR_PRODUCT&apos; IN TYPEOF(SELF\general_property_association.derived_definition))">
      </where>
    </entity>

    <entity name="connection_of_individual_activity"
      supertypes="action_relationship"
    >
      <explicit
        name="relating_action">
        <typename name="individual_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
      <explicit
        name="related_action">
        <typename name="individual_activity"/>
        <redeclaration
          entity-ref="action_relationship"/>
      </explicit>
    </entity>

    <entity name="connection_of_individual_product"
      supertypes="product_definition_formation_relationship"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="connection_of_individual_product_with_involvements"
      supertypes="connection_of_individual_product product_as_individual"
    >
    </entity>

    <entity name="containment_of_individual_product"
      supertypes="product_definition_formation_relationship"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="context_dependent_unit"
      supertypes="named_unit"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="conversion_based_unit"
      supertypes="named_unit"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="conversion_factor">
        <typename name="measure_with_unit"/>
      </explicit>
    </entity>

    <entity name="defined_maths_space_context"
      supertypes="maths_space_context"
    >
    </entity>

    <entity name="derived_unit"
    >
      <explicit
        name="elements">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="derived_unit_element"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <where
        label="WR1"
        expression="(SIZEOF(elements) &gt; 1) OR ((SIZEOF(elements) = 1) AND (elements[1].exponent &lt;&gt; 1.000000))">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="derived_unit_element"
    >
      <explicit
        name="unit">
        <typename name="named_unit"/>
      </explicit>
      <explicit
        name="exponent">
        <builtintype type="REAL"
        />
      </explicit>
    </entity>

    <entity name="description_attribute"
    >
      <explicit
        name="attribute_value">
        <typename name="text"/>
      </explicit>
      <explicit
        name="described_item">
        <typename name="description_attribute_select"/>
      </explicit>
    </entity>

    <entity name="descriptive_representation_item"
      supertypes="representation_item"
    >
      <explicit
        name="description">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="dimensional_exponents"
    >
      <explicit
        name="length_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="mass_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="time_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="electric_current_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="thermodynamic_temperature_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="amount_of_substance_exponent">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="luminous_intensity_exponent">
        <builtintype type="REAL"
        />
      </explicit>
    </entity>

    <entity name="electric_current_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.ELECTRIC_CURRENT_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="electric_current_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 1.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="elementary_space"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="space_id">
        <typename name="elementary_space_enumerators"/>
      </explicit>
    </entity>

    <entity name="environment"
    >
      <explicit
        name="syntactic_representation">
        <typename name="generic_variable"/>
      </explicit>
      <explicit
        name="semantics">
        <typename name="variable_semantics"/>
      </explicit>
    </entity>

    <entity name="executed_action"
      supertypes="action"
    >
    </entity>

    <entity name="explicitly_enumerated_maths_space_context"
      supertypes="maths_space_context"
    >
      <explicit
        name="members">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="maths_value_context"/>
      </explicit>
    </entity>

    <entity name="extended_tuple_space"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="base">
        <typename name="product_space"/>
      </explicit>
      <explicit
        name="extender">
        <typename name="maths_space"/>
      </explicit>
      <where
        label="WR1"
        expression="expression_is_constant(base) AND expression_is_constant(extender)">
      </where>
      <where
        label="WR2"
        expression="no_cyclic_space_reference(SELF, [])">
      </where>
      <where
        label="WR3"
        expression="extender &lt;&gt; the_empty_space">
      </where>
    </entity>

    <entity name="external_identification_assignment"
      abstract.supertype="YES"
      supertypes="identification_assignment"
    >
      <explicit
        name="source">
        <typename name="external_source"/>
      </explicit>
    </entity>

    <entity name="external_source"
    >
      <explicit
        name="source_id">
        <typename name="source_item"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="externally_defined_item"
    >
      <explicit
        name="item_id">
        <typename name="source_item"/>
      </explicit>
      <explicit
        name="source">
        <typename name="external_source"/>
      </explicit>
    </entity>

    <entity name="finite_integer_interval"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="min">
        <builtintype type="INTEGER"
        />
      </explicit>
      <explicit
        name="max">
        <builtintype type="INTEGER"
        />
      </explicit>
      <derived
        name="size"
        expression="max - min + 1">
        <typename name="positive_integer"/>
      </derived>
      <where
        label="WR1"
        expression="min &lt;= max">
      </where>
    </entity>

    <entity name="finite_real_interval"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="min">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="min_closure">
        <typename name="open_closed"/>
      </explicit>
      <explicit
        name="max">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="max_closure">
        <typename name="open_closed"/>
      </explicit>
      <where
        label="WR1"
        expression="min &lt; max">
      </where>
    </entity>

    <entity name="finite_space"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="members">
        <aggregate type="SET"
        />
        <typename name="maths_value"/>
      </explicit>
      <where
        label="WR1"
        expression="VALUE_UNIQUE(members)">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(QUERY(expr &lt;* QUERY(member &lt;* members | &apos;FUNCTIONAL_DATA_MIM_LF.GENERIC_EXPRESSION&apos; IN TYPEOF(member)) | NOT expression_is_constant(expr))) = 0">
      </where>
      <where
        label="WR3"
        expression="no_cyclic_space_reference(SELF, [])">
      </where>
    </entity>

    <entity name="general_property"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="general_property_association"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="base_definition">
        <typename name="general_property"/>
      </explicit>
      <explicit
        name="derived_definition">
        <typename name="derived_property_select"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(derived_definition, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;GENERAL_PROPERTY_ASSOCIATION.&apos; + &apos;DERIVED_DEFINITION&apos;)) = 1">
      </where>
      <where
        label="WR2"
        expression="derived_definition.name = base_definition.name">
      </where>
    </entity>

    <entity name="general_property_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_property">
        <typename name="general_property"/>
      </explicit>
      <explicit
        name="related_property">
        <typename name="general_property"/>
      </explicit>
    </entity>

    <entity name="generic_expression"
      abstract.supertype="YES"
      super.expression="ONEOF(simple_generic_expression, unary_generic_expression, binary_generic_expression, multiple_arity_generic_expression)"
    >
      <where
        label="WR1"
        expression="is_acyclic(SELF)">
      </where>
    </entity>

    <entity name="generic_literal"
      abstract.supertype="YES"
      supertypes="simple_generic_expression"
    >
    </entity>

    <entity name="generic_variable"
      abstract.supertype="YES"
      supertypes="simple_generic_expression"
    >
      <inverse
        name="interpretation"
        entity="environment"
        attribute="syntactic_representation">
      </inverse>
    </entity>

    <entity name="global_uncertainty_assigned_context"
      supertypes="representation_context"
    >
      <explicit
        name="uncertainty">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="uncertainty_measure_with_unit"/>
      </explicit>
    </entity>

    <entity name="global_unit_assigned_context"
      supertypes="representation_context"
    >
      <explicit
        name="units">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="unit"/>
      </explicit>
    </entity>

    <entity name="group"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="id_attribute"
    >
      <explicit
        name="attribute_value">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="identified_item">
        <typename name="id_attribute_select"/>
      </explicit>
    </entity>

    <entity name="identification_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="assigned_id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="role">
        <typename name="identification_role"/>
      </explicit>
    </entity>

    <entity name="identification_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="independent_property_definition"
      supertypes="general_property class"
      super.expression="ONEOF(point_property_definition, range_property_definition)"
    >
    </entity>

    <entity name="individual_activity"
      supertypes="executed_action"
    >
    </entity>

    <entity name="individual_involvement_in_activity"
      supertypes="applied_action_assignment"
    >
      <explicit
        name="assigned_action">
        <typename name="individual_activity"/>
        <redeclaration
          entity-ref="action_assignment"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="1"
        />
        <typename name="involved_select"/>
        <redeclaration
          entity-ref="applied_action_assignment"/>
      </explicit>
    </entity>

    <entity name="integer_interval_from_min"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="min">
        <builtintype type="INTEGER"
        />
      </explicit>
    </entity>

    <entity name="integer_interval_to_max"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="max">
        <builtintype type="INTEGER"
        />
      </explicit>
    </entity>

    <entity name="intersection"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="operand">
        <aggregate type="SET"
          lower="2"
          upper="?"
        />
        <typename name="class"/>
      </explicit>
      <explicit
        name="resultant">
        <typename name="class"/>
      </explicit>
    </entity>

    <entity name="involvement_of_individual_product_in_connection"
      supertypes="product_definition_formation_relationship"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="connection_of_individual_product_with_involvements"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
    </entity>

    <entity name="length_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.LENGTH_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="length_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 1.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="listed_product_space"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="factors">
        <aggregate type="LIST"
        />
        <typename name="maths_space"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(QUERY(space &lt;* factors | NOT (expression_is_constant(space)))) = 0">
      </where>
      <where
        label="WR2"
        expression="no_cyclic_space_reference(SELF, [])">
      </where>
      <where
        label="WR3"
        expression="NOT (the_empty_space IN factors)">
      </where>
    </entity>

    <entity name="luminous_intensity_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.LUMINOUS_INTENSITY_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="luminous_intensity_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 1.000000)">
      </where>
    </entity>

    <entity name="mass_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.MASS_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="mass_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 1.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="maths_space"
      abstract.supertype="YES"
      supertypes="generic_expression"
      super.expression="ONEOF(elementary_space, finite_integer_interval, integer_interval_from_min, integer_interval_to_max, finite_real_interval, real_interval_from_min, real_interval_to_max, finite_space, uniform_product_space, listed_product_space, extended_tuple_space)"
    >
    </entity>

    <entity name="maths_space_context"
      super.expression="ONEOF(compound_maths_space_context, defined_maths_space_context, explicitly_enumerated_maths_space_context)"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="abstract_space">
        <typename name="maths_space"/>
      </explicit>
      <explicit
        name="physical_space">
        <typename name="space_context_select"/>
      </explicit>
    </entity>

    <entity name="maths_value_context"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="abstract_value">
        <typename name="maths_value"/>
      </explicit>
      <explicit
        name="physical_value">
        <typename name="value_context_select"/>
      </explicit>
    </entity>

    <entity name="measure_with_unit"
      super.expression="ONEOF(length_measure_with_unit, mass_measure_with_unit, time_measure_with_unit, electric_current_measure_with_unit, thermodynamic_temperature_measure_with_unit, celsius_temperature_measure_with_unit, amount_of_substance_measure_with_unit, luminous_intensity_measure_with_unit, plane_angle_measure_with_unit, solid_angle_measure_with_unit, area_measure_with_unit, volume_measure_with_unit, ratio_measure_with_unit)"
    >
      <explicit
        name="value_component">
        <typename name="measure_value"/>
      </explicit>
      <explicit
        name="unit_component">
        <typename name="unit"/>
      </explicit>
      <where
        label="WR1"
        expression="valid_units(SELF)">
      </where>
    </entity>

    <entity name="membership_of_maths_space_context"
    >
      <explicit
        name="space_context">
        <typename name="maths_space_context"/>
      </explicit>
      <explicit
        name="value_context">
        <typename name="maths_value_context"/>
      </explicit>
    </entity>

    <entity name="multiple_arity_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
    >
      <explicit
        name="operands">
        <aggregate type="LIST"
          lower="2"
          upper="?"
        />
        <typename name="generic_expression"/>
      </explicit>
    </entity>

    <entity name="name_attribute"
    >
      <explicit
        name="attribute_value">
        <typename name="label"/>
      </explicit>
      <explicit
        name="named_item">
        <typename name="name_attribute_select"/>
      </explicit>
    </entity>

    <entity name="named_unit"
      super.expression="ONEOF(si_unit, conversion_based_unit, context_dependent_unit) ANDOR ONEOF(length_unit, mass_unit, time_unit, electric_current_unit, thermodynamic_temperature_unit, amount_of_substance_unit, luminous_intensity_unit, plane_angle_unit, solid_angle_unit, area_unit, volume_unit, ratio_unit)"
    >
      <explicit
        name="dimensions">
        <typename name="dimensional_exponents"/>
      </explicit>
    </entity>

    <entity name="object_role"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="organization"
    >
      <explicit
        name="id"
        optional="YES">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="organization_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_organization">
        <typename name="organization"/>
      </explicit>
      <explicit
        name="related_organization">
        <typename name="organization"/>
      </explicit>
    </entity>

    <entity name="organization_type"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="organization_type_assignment"
      abstract.supertype="YES"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="assigned_organization_type">
        <typename name="organization_type"/>
      </explicit>
      <explicit
        name="role">
        <typename name="organization_type_role"/>
      </explicit>
    </entity>

    <entity name="organization_type_role"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="organizational_address"
      supertypes="address"
    >
      <explicit
        name="organizations">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="organization"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="person"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="last_name"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="first_name"
        optional="YES">
        <typename name="label"/>
      </explicit>
      <explicit
        name="middle_names"
        optional="YES">
        <aggregate type="LIST"
          lower="1"
          upper="?"
        />
        <typename name="label"/>
      </explicit>
      <explicit
        name="prefix_titles"
        optional="YES">
        <aggregate type="LIST"
          lower="1"
          upper="?"
        />
        <typename name="label"/>
      </explicit>
      <explicit
        name="suffix_titles"
        optional="YES">
        <aggregate type="LIST"
          lower="1"
          upper="?"
        />
        <typename name="label"/>
      </explicit>
      <where
        label="WR1"
        expression="EXISTS(last_name) OR EXISTS(first_name)">
      </where>
    </entity>

    <entity name="person_and_organization"
    >
      <explicit
        name="the_person">
        <typename name="person"/>
      </explicit>
      <explicit
        name="the_organization">
        <typename name="organization"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="person_and_organization_address"
      supertypes="organizational_address personal_address"
    >
      <explicit
        name="people">
        <aggregate type="SET"
          lower="1"
          upper="1"
        />
        <typename name="person"/>
        <redeclaration
          entity-ref="personal_address"/>
      </explicit>
      <explicit
        name="organizations">
        <aggregate type="SET"
          lower="1"
          upper="1"
        />
        <typename name="organization"/>
        <redeclaration
          entity-ref="organizational_address"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(QUERY(pao &lt;* USEDIN(SELF\personal_address.people[1], &apos;FUNCTIONAL_DATA_MIM_LF.PERSON_AND_ORGANIZATION.THE_PERSON&apos;) | pao.the_organization :=: SELF\organizational_address.organizations[1])) = 1">
      </where>
    </entity>

    <entity name="person_type"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="personal_address"
      supertypes="address"
    >
      <explicit
        name="people">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="person"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
    </entity>

    <entity name="plane_angle_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.PLANE_ANGLE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="plane_angle_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="point_property_definition"
      supertypes="independent_property_definition"
    >
    </entity>

    <entity name="possessed_property"
      supertypes="general_property_association"
    >
      <explicit
        name="base_definition">
        <typename name="independent_property_definition"/>
        <redeclaration
          entity-ref="general_property_association"/>
      </explicit>
      <where
        label="link_to_possession"
        expression="(&apos;FUNCTIONAL_DATA_MIM_LF.POSSESSION_OF_PROPERTY_BY_ACTIVITY&apos; IN TYPEOF(SELF\general_property_association.derived_definition)) OR (&apos;FUNCTIONAL_DATA_MIM_LF.POSSESSION_OF_PROPERTY_BY_PRODUCT&apos; IN TYPEOF(SELF\general_property_association.derived_definition))">
      </where>
    </entity>

    <entity name="possession_of_property_by_activity"
      supertypes="action_property"
    >
      <explicit
        name="definition">
        <typename name="individual_activity"/>
        <redeclaration
          entity-ref="action_property"/>
      </explicit>
    </entity>

    <entity name="possession_of_property_by_product"
      supertypes="property_definition"
    >
      <where
        label="link_to_individual"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.PRODUCT_AS_INDIVIDUAL&apos; IN TYPEOF(SELF\property_definition.definition.formation)">
      </where>
    </entity>

    <entity name="power_set"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="base">
        <typename name="class"/>
      </explicit>
      <explicit
        name="derived">
        <typename name="class"/>
      </explicit>
      <where
        label="derived_different"
        expression="NOT identical_sets(base, derived)">
      </where>
    </entity>

    <entity name="product"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="product_context"/>
      </explicit>
    </entity>

    <entity name="product_as_individual"
      abstract.supertype="YES"
      supertypes="product_definition_formation"
      super.expression="ONEOF(product_as_planned, product_as_realized)"
    >
    </entity>

    <entity name="product_as_planned"
      supertypes="product_as_individual"
    >
    </entity>

    <entity name="product_as_realized"
      supertypes="product_as_individual"
    >
    </entity>

    <entity name="product_category"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="product_category_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="category">
        <typename name="product_category"/>
      </explicit>
      <explicit
        name="sub_category">
        <typename name="product_category"/>
      </explicit>
      <where
        label="WR1"
        expression="acyclic_product_category_relationship(SELF, [SELF.sub_category])">
      </where>
    </entity>

    <entity name="product_context"
      supertypes="application_context_element"
    >
      <explicit
        name="discipline_type">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="product_definition"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="formation">
        <typename name="product_definition_formation"/>
      </explicit>
      <explicit
        name="frame_of_reference">
        <typename name="product_definition_context"/>
      </explicit>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="product_definition_context"
      supertypes="application_context_element"
    >
      <explicit
        name="life_cycle_stage">
        <typename name="label"/>
      </explicit>
    </entity>

    <entity name="product_definition_formation"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="of_product">
        <typename name="product"/>
      </explicit>
      <unique
        label="UR1">
        <unique.attribute
          attribute="id"/>
        <unique.attribute
          attribute="of_product"/>
      </unique>
    </entity>

    <entity name="product_definition_formation_relationship"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="relating_product_definition_formation">
        <typename name="product_definition_formation"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="product_definition_formation"/>
      </explicit>
    </entity>

    <entity name="product_design_to_individual"
      supertypes="product_definition_formation_relationship"
    >
      <explicit
        name="related_product_definition_formation">
        <typename name="product_as_individual"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <derived
        name="individual_product"
        expression="SELF\product_definition_formation_relationship.related_product_definition_formation">
        <typename name="product_as_individual"/>
      </derived>
      <derived
        name="product_version"
        expression="SELF\product_definition_formation_relationship.relating_product_definition_formation">
        <typename name="product_definition_formation"/>
      </derived>
    </entity>

    <entity name="product_planned_to_realized"
      supertypes="product_definition_formation_relationship"
    >
      <explicit
        name="relating_product_definition_formation">
        <typename name="product_as_planned"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <explicit
        name="related_product_definition_formation">
        <typename name="product_as_realized"/>
        <redeclaration
          entity-ref="product_definition_formation_relationship"/>
      </explicit>
      <derived
        name="planned_product"
        expression="SELF\product_definition_formation_relationship.relating_product_definition_formation">
        <typename name="product_as_planned"/>
      </derived>
      <derived
        name="realized_product"
        expression="SELF\product_definition_formation_relationship.related_product_definition_formation">
        <typename name="product_as_realized"/>
      </derived>
    </entity>

    <entity name="product_related_product_category"
      supertypes="product_category"
    >
      <explicit
        name="products">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="product"/>
      </explicit>
    </entity>

    <entity name="proper_subset"
      supertypes="subset"
    >
      <where
        label="subset_different"
        expression="NOT identical_sets(superset, subset)">
      </where>
    </entity>

    <entity name="property_condition_for_activity"
      supertypes="action_property"
    >
      <explicit
        name="definition">
        <typename name="class_of_activity"/>
        <redeclaration
          entity-ref="action_property"/>
      </explicit>
    </entity>

    <entity name="property_condition_for_product"
      supertypes="property_definition"
    >
      <where
        label="link_to_class"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.CLASS_OF_PRODUCT&apos; IN TYPEOF(SELF\property_definition.definition.formation)">
      </where>
    </entity>

    <entity name="property_definition"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="definition">
        <typename name="characterized_definition"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="property_definition_representation"
    >
      <explicit
        name="definition">
        <typename name="represented_definition"/>
      </explicit>
      <explicit
        name="used_representation">
        <typename name="representation"/>
      </explicit>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <derived
        name="name"
        expression="get_name_value(SELF)">
        <typename name="label"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.NAMED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="property_space"
      supertypes="general_property class"
    >
    </entity>

    <entity name="property_symmetry"
      supertypes="general_property class"
    >
    </entity>

    <entity name="property_symmetry_by_library_reference"
      supertypes="property_symmetry externally_defined_item"
    >
    </entity>

    <entity name="quantifier_expression"
      abstract.supertype="YES"
      supertypes="multiple_arity_generic_expression"
    >
      <explicit
        name="variables">
        <aggregate type="LIST"
          unique="YES"
          lower="1"
          upper="?"
        />
        <typename name="generic_variable"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(QUERY(vrbl &lt;* variables | NOT (vrbl IN SELF\multiple_arity_generic_expression.operands))) = 0">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(QUERY(vrbl &lt;* variables | NOT ((schema_prefix + &apos;BOUND_VARIABLE_SEMANTICS&apos;) IN TYPEOF(vrbl.interpretation.semantics)))) = 0">
      </where>
    </entity>

    <entity name="range_property_definition"
      supertypes="independent_property_definition"
    >
    </entity>

    <entity name="ratio_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.RATIO_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="ratio_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="real_interval_from_min"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="min">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="min_closure">
        <typename name="open_closed"/>
      </explicit>
    </entity>

    <entity name="real_interval_to_max"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="max">
        <builtintype type="REAL"
        />
      </explicit>
      <explicit
        name="max_closure">
        <typename name="open_closed"/>
      </explicit>
    </entity>

    <entity name="representation"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="items">
        <aggregate type="SET"
          lower="1"
          upper="?"
        />
        <typename name="representation_item"/>
      </explicit>
      <explicit
        name="context_of_items">
        <typename name="representation_context"/>
      </explicit>
      <derived
        name="id"
        expression="get_id_value(SELF)">
        <typename name="identifier"/>
      </derived>
      <derived
        name="description"
        expression="get_description_value(SELF)">
        <typename name="text"/>
      </derived>
      <where
        label="WR1"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.IDENTIFIED_ITEM&apos;)) &lt;= 1">
      </where>
      <where
        label="WR2"
        expression="SIZEOF(USEDIN(SELF, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM&apos;)) &lt;= 1">
      </where>
    </entity>

    <entity name="representation_context"
    >
      <explicit
        name="context_identifier">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="context_type">
        <typename name="text"/>
      </explicit>
      <inverse
        name="representations_in_context"
        entity="representation"
        attribute="context_of_items">
        <inverse.aggregate
          type="SET"
          lower="1"
          upper="?"
        />
      </inverse>
    </entity>

    <entity name="representation_context_defined_maths_space_context"
      supertypes="defined_maths_space_context"
    >
      <explicit
        name="representation_basis">
        <typename name="representation_context"/>
      </explicit>
    </entity>

    <entity name="representation_item"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <where
        label="WR1"
        expression="SIZEOF(using_representations(SELF)) &gt; 0">
      </where>
    </entity>

    <entity name="representation_relationship"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="rep_1">
        <typename name="representation"/>
      </explicit>
      <explicit
        name="rep_2">
        <typename name="representation"/>
      </explicit>
    </entity>

    <entity name="role_association"
    >
      <explicit
        name="role">
        <typename name="object_role"/>
      </explicit>
      <explicit
        name="item_with_role">
        <typename name="role_select"/>
      </explicit>
    </entity>

    <entity name="same_membership"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="set_1">
        <typename name="class"/>
      </explicit>
      <explicit
        name="set_2">
        <typename name="class"/>
      </explicit>
    </entity>

    <entity name="si_unit"
      supertypes="named_unit"
    >
      <explicit
        name="prefix"
        optional="YES">
        <typename name="si_prefix"/>
      </explicit>
      <explicit
        name="name">
        <typename name="si_unit_name"/>
      </explicit>
      <derived
        name="dimensions"
        expression="dimensions_for_si_unit(name)">
        <typename name="dimensional_exponents"/>
        <redeclaration
          entity-ref="named_unit"/>
      </derived>
    </entity>

    <entity name="simple_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
      super.expression="ONEOF(generic_literal, generic_variable)"
    >
    </entity>

    <entity name="solid_angle_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.SOLID_ANGLE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="solid_angle_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="space_for_property_definition"
      supertypes="general_property_relationship"
    >
      <explicit
        name="relating_property">
        <typename name="property_space"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
      <explicit
        name="related_property">
        <typename name="independent_property_definition"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
    </entity>

    <entity name="standard_property_symmetry"
      supertypes="property_symmetry_by_library_reference"
    >
      <where
        label="valid_standard_class"
        expression="(SELF\property_symmetry_by_library_reference\externally_defined_item.source.source_id = &apos;ISO-TS-10303-1099&apos;) AND (SELF\property_symmetry_by_library_reference\externally_defined_item.item_id IN [&apos;PS001&apos;, &apos;PS002&apos;, &apos;PS003&apos;, &apos;PS004&apos;, &apos;PS005&apos;, &apos;PS006&apos;, &apos;PS007&apos;, &apos;PS008&apos;, &apos;PS009&apos;, &apos;PS010&apos;, &apos;PS011&apos;, &apos;PS012&apos;, &apos;PS013&apos;])">
      </where>
    </entity>

    <entity name="standard_tensor_order_and_symmetry"
      supertypes="tensor_order_and_symmetry_by_library_reference"
    >
      <where
        label="valid_standard_class"
        expression="(SELF\tensor_order_and_symmetry_by_library_reference\externally_defined_item.source.source_id = &apos;ISO-TS-10303-1080&apos;) AND (SELF\tensor_order_and_symmetry_by_library_reference\externally_defined_item.item_id IN [&apos;TO001&apos;, &apos;TO002&apos;, &apos;TO003&apos;, &apos;TO004&apos;, &apos;TO005&apos;, &apos;TO006&apos;, &apos;TO007&apos;, &apos;TO008&apos;, &apos;TO009&apos;])">
      </where>
    </entity>

    <entity name="subset"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="subset">
        <typename name="class"/>
      </explicit>
      <explicit
        name="superset">
        <typename name="class"/>
      </explicit>
    </entity>

    <entity name="symmetry_for_property_definition"
      supertypes="general_property_relationship"
    >
      <explicit
        name="relating_property">
        <typename name="property_symmetry"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
      <explicit
        name="related_property">
        <typename name="independent_property_definition"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
    </entity>

    <entity name="tensor_order_and_symmetry"
      supertypes="general_property class"
    >
    </entity>

    <entity name="tensor_order_and_symmetry_by_library_reference"
      supertypes="tensor_order_and_symmetry externally_defined_item"
    >
    </entity>

    <entity name="tensor_order_and_symmetry_for_property_space"
      supertypes="general_property_relationship"
    >
      <explicit
        name="relating_property">
        <typename name="tensor_order_and_symmetry"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
      <explicit
        name="related_property">
        <typename name="property_space"/>
        <redeclaration
          entity-ref="general_property_relationship"/>
      </explicit>
    </entity>

    <entity name="thermodynamic_temperature_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.THERMODYNAMIC_TEMPERATURE_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="thermodynamic_temperature_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 1.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="time_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.TIME_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="time_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 0.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 1.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <entity name="unary_generic_expression"
      abstract.supertype="YES"
      supertypes="generic_expression"
    >
      <explicit
        name="operand">
        <typename name="generic_expression"/>
      </explicit>
    </entity>

    <entity name="uncertainty_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <where
        label="WR1"
        expression="valid_measure_value(SELF\measure_with_unit.value_component)">
      </where>
    </entity>

    <entity name="uniform_product_space"
      supertypes="maths_space generic_literal"
    >
      <explicit
        name="base">
        <typename name="maths_space"/>
      </explicit>
      <explicit
        name="exponent">
        <typename name="positive_integer"/>
      </explicit>
      <where
        label="WR1"
        expression="expression_is_constant(base)">
      </where>
      <where
        label="WR2"
        expression="no_cyclic_space_reference(SELF, [])">
      </where>
      <where
        label="WR3"
        expression="base &lt;&gt; the_empty_space">
      </where>
    </entity>

    <entity name="union"
    >
      <explicit
        name="id">
        <typename name="identifier"/>
      </explicit>
      <explicit
        name="name">
        <typename name="label"/>
      </explicit>
      <explicit
        name="description"
        optional="YES">
        <typename name="text"/>
      </explicit>
      <explicit
        name="operand">
        <aggregate type="SET"
          lower="2"
          upper="?"
        />
        <typename name="class"/>
      </explicit>
      <explicit
        name="resultant">
        <typename name="class"/>
      </explicit>
    </entity>

    <entity name="unit_defined_maths_space_context"
      supertypes="defined_maths_space_context"
    >
      <explicit
        name="unit_basis">
        <typename name="unit"/>
      </explicit>
    </entity>

    <entity name="variable_semantics"
      abstract.supertype="YES"
    >
    </entity>

    <entity name="volume_measure_with_unit"
      supertypes="measure_with_unit"
    >
      <where
        label="WR1"
        expression="&apos;FUNCTIONAL_DATA_MIM_LF.VOLUME_UNIT&apos; IN TYPEOF(SELF\measure_with_unit.unit_component)">
      </where>
    </entity>

    <entity name="volume_unit"
      supertypes="named_unit"
    >
      <where
        label="WR1"
        expression="(SELF\named_unit.dimensions.length_exponent = 3.000000) AND (SELF\named_unit.dimensions.mass_exponent = 0.000000) AND (SELF\named_unit.dimensions.time_exponent = 0.000000) AND (SELF\named_unit.dimensions.electric_current_exponent = 0.000000) AND (SELF\named_unit.dimensions.thermodynamic_temperature_exponent = 0.000000) AND (SELF\named_unit.dimensions.amount_of_substance_exponent = 0.000000) AND (SELF\named_unit.dimensions.luminous_intensity_exponent = 0.000000)">
      </where>
    </entity>

    <function name="acyclic">
      <parameter name="arg1">
        <typename name="generic_expression"/>
      </parameter>
      <parameter name="arg2">
        <aggregate type="SET"
        />
        <typename name="generic_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    result : BOOLEAN;
  END_LOCAL;

  IF (&apos;FUNCTIONAL_DATA_MIM_LF.SIMPLE_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1)) THEN
    RETURN (TRUE);
  END_IF;
  IF arg1 IN arg2 THEN
    RETURN (FALSE);
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.UNARY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    RETURN (acyclic(arg1\unary_generic_expression.operand, arg2 + [arg1]));
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.BINARY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    RETURN (acyclic(arg1\binary_generic_expression.operands[1], arg2 + [arg1]) AND acyclic(arg1\binary_generic_expression.operands[2], arg2 + [arg1]));
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.MULTIPLE_ARITY_GENERIC_EXPRESSION&apos; IN TYPEOF(arg1) THEN
    result := TRUE;
    REPEAT i := 1 TO SIZEOF(arg1\multiple_arity_generic_expression.operands);
      result := result AND acyclic(arg1\multiple_arity_generic_expression.operands[i], arg2 + [arg1]);
    END_REPEAT;
    RETURN (result);
  END_IF;
      </algorithm>
    </function>

    <function name="acyclic_product_category_relationship">
      <parameter name="relation">
        <typename name="product_category_relationship"/>
      </parameter>
      <parameter name="children">
        <aggregate type="SET"
        />
        <typename name="product_category"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    x : SET OF product_category_relationship;
    local_children : SET OF product_category;
  END_LOCAL;

  REPEAT i := 1 TO HIINDEX(children);
    IF relation.category :=: children[i] THEN
      RETURN (FALSE);
    END_IF;
  END_REPEAT;
  x := bag_to_set(USEDIN(relation.category, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY&apos;));
  local_children := children + relation.category;
  IF SIZEOF(x) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(x);
      IF NOT acyclic_product_category_relationship(x[i], local_children) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <function name="bag_to_set">
      <parameter name="the_bag">
        <aggregate type="BAG"
        />
        <builtintype type="GENERIC"
          typelabel="intype"
        />
      </parameter>
      <aggregate type="SET"
      />
      <builtintype type="GENERIC"
        typelabel="intype"
      />
      <algorithm>
  LOCAL
    the_set : SET OF GENERIC:intype := [];
  END_LOCAL;

  IF SIZEOF(the_bag) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(the_bag);
      the_set := the_set + the_bag[i];
    END_REPEAT;
  END_IF;
  RETURN (the_set);
      </algorithm>
    </function>

    <function name="bool">
      <parameter name="lgcl">
        <builtintype type="LOGICAL"
        />
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  IF NOT EXISTS(lgcl) THEN
    RETURN (FALSE);
  END_IF;
  IF lgcl &lt;&gt; TRUE THEN
    RETURN (FALSE);
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <function name="derive_dimensional_exponents">
      <parameter name="x">
        <typename name="unit"/>
      </parameter>
      <typename name="dimensional_exponents"/>
      <algorithm>
  LOCAL
    result : dimensional_exponents := dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000);
  END_LOCAL;

  IF &apos;FUNCTIONAL_DATA_MIM_LF.DERIVED_UNIT&apos; IN TYPEOF(x) THEN
    REPEAT i := LOINDEX(x.elements) TO HIINDEX(x.elements);
      result.length_exponent := result.length_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.length_exponent);
      result.mass_exponent := result.mass_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.mass_exponent);
      result.time_exponent := result.time_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.time_exponent);
      result.electric_current_exponent := result.electric_current_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.electric_current_exponent);
      result.thermodynamic_temperature_exponent := result.thermodynamic_temperature_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.thermodynamic_temperature_exponent);
      result.amount_of_substance_exponent := result.amount_of_substance_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.amount_of_substance_exponent);
      result.luminous_intensity_exponent := result.luminous_intensity_exponent + (x.elements[i].exponent * x.elements[i].unit.dimensions.luminous_intensity_exponent);
    END_REPEAT;
  ELSE
    result := x.dimensions;
  END_IF;
  RETURN (result);
      </algorithm>
    </function>

    <function name="dimensions_for_si_unit">
      <parameter name="n">
        <typename name="si_unit_name"/>
      </parameter>
      <typename name="dimensional_exponents"/>
      <algorithm>
  CASE n OF 
    metre:
      RETURN (dimensional_exponents(1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    gram:
      RETURN (dimensional_exponents(0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    second:
      RETURN (dimensional_exponents(0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    ampere:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000));
    kelvin:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000));
    mole:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000));
    candela:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000));
    radian:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    steradian:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    hertz:
      RETURN (dimensional_exponents(0.000000, 0.000000,  - 1.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    newton:
      RETURN (dimensional_exponents(1.000000, 1.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    pascal:
      RETURN (dimensional_exponents( - 1.000000, 1.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    joule:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    watt:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 3.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    coulomb:
      RETURN (dimensional_exponents(0.000000, 0.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000));
    volt:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 3.000000,  - 1.000000, 0.000000, 0.000000, 0.000000));
    farad:
      RETURN (dimensional_exponents( - 2.000000,  - 1.000000, 4.000000, 1.000000, 0.000000, 0.000000, 0.000000));
    ohm:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 3.000000,  - 2.000000, 0.000000, 0.000000, 0.000000));
    siemens:
      RETURN (dimensional_exponents( - 2.000000,  - 1.000000, 3.000000, 2.000000, 0.000000, 0.000000, 0.000000));
    weber:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 2.000000,  - 1.000000, 0.000000, 0.000000, 0.000000));
    tesla:
      RETURN (dimensional_exponents(0.000000, 1.000000,  - 2.000000,  - 1.000000, 0.000000, 0.000000, 0.000000));
    henry:
      RETURN (dimensional_exponents(2.000000, 1.000000,  - 2.000000,  - 2.000000, 0.000000, 0.000000, 0.000000));
    degree_Celsius:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000));
    lumen:
      RETURN (dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000));
    lux:
      RETURN (dimensional_exponents( - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000));
    becquerel:
      RETURN (dimensional_exponents(0.000000, 0.000000,  - 1.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    gray:
      RETURN (dimensional_exponents(2.000000, 0.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    sievert:
      RETURN (dimensional_exponents(2.000000, 0.000000,  - 2.000000, 0.000000, 0.000000, 0.000000, 0.000000));
    OTHERWISE:
      RETURN (?);
  END_CASE;
      </algorithm>
    </function>

    <function name="expression_is_constant">
      <parameter name="expr">
        <typename name="generic_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  RETURN (bool(SIZEOF(free_variables_of(expr)) = 0));
      </algorithm>
    </function>

    <function name="free_variables_of">
      <parameter name="expr">
        <typename name="generic_expression"/>
      </parameter>
      <aggregate type="SET"
      />
      <typename name="generic_variable"/>
      <algorithm>
  LOCAL
    typenames : SET OF STRING := stripped_typeof(expr);
    result : SET OF generic_variable := [];
    exprs : LIST OF generic_expression := [];
  END_LOCAL;

  IF &apos;GENERIC_LITERAL&apos; IN typenames THEN
    RETURN (result);
  END_IF;
  IF &apos;GENERIC_VARIABLE&apos; IN typenames THEN
    result := result + expr;
    RETURN (result);
  END_IF;
  IF &apos;QUANTIFIER_EXPRESSION&apos; IN typenames THEN
    exprs := QUERY(ge &lt;* expr\multiple_arity_generic_expression.operands | NOT (ge IN expr\quantifier_expression.variables));
    REPEAT i := 1 TO SIZEOF(exprs);
      result := result + free_variables_of(exprs[i]);
    END_REPEAT;
    REPEAT i := 1 TO SIZEOF(expr\quantifier_expression.variables);
      result := result - expr\quantifier_expression.variables[i];
    END_REPEAT;
    RETURN (result);
  END_IF;
  IF &apos;UNARY_GENERIC_EXPRESSION&apos; IN typenames THEN
    RETURN (free_variables_of(expr\unary_generic_expression.operand));
  END_IF;
  IF &apos;BINARY_GENERIC_EXPRESSION&apos; IN typenames THEN
    result := free_variables_of(expr\binary_generic_expression.operands[1]);
    RETURN (result + free_variables_of(expr\binary_generic_expression.operands[2]));
  END_IF;
  IF &apos;MULTIPLE_ARITY_GENERIC_EXPRESSION&apos; IN typenames THEN
    REPEAT i := 1 TO SIZEOF(expr\multiple_arity_generic_expression.operands);
      result := result + free_variables_of(expr\multiple_arity_generic_expression.operands[i]);
    END_REPEAT;
    RETURN (result);
  END_IF;
  RETURN (result);
      </algorithm>
    </function>

    <function name="get_description_value">
      <parameter name="obj">
        <typename name="description_attribute_select"/>
      </parameter>
      <typename name="text"/>
      <algorithm>
  LOCAL
    description_bag : BAG OF description_attribute := (USEDIN(obj, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;DESCRIPTION_ATTRIBUTE.&apos; + &apos;DESCRIBED_ITEM&apos;));
  END_LOCAL;

  IF SIZEOF(description_bag) = 1 THEN
    RETURN (description_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="get_id_value">
      <parameter name="obj">
        <typename name="id_attribute_select"/>
      </parameter>
      <typename name="identifier"/>
      <algorithm>
  LOCAL
    id_bag : BAG OF id_attribute := (USEDIN(obj, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ID_ATTRIBUTE.&apos; + &apos;IDENTIFIED_ITEM&apos;));
  END_LOCAL;

  IF SIZEOF(id_bag) = 1 THEN
    RETURN (id_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="get_name_value">
      <parameter name="obj">
        <typename name="name_attribute_select"/>
      </parameter>
      <typename name="label"/>
      <algorithm>
  LOCAL
    name_bag : BAG OF name_attribute := (USEDIN(obj, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;NAME_ATTRIBUTE.&apos; + &apos;NAMED_ITEM&apos;));
  END_LOCAL;

  IF SIZEOF(name_bag) = 1 THEN
    RETURN (name_bag[1].attribute_value);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="get_role">
      <parameter name="obj">
        <typename name="role_select"/>
      </parameter>
      <typename name="object_role"/>
      <algorithm>
  LOCAL
    role_bag : BAG OF role_association := (USEDIN(obj, &apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;ROLE_ASSOCIATION.&apos; + &apos;ITEM_WITH_ROLE&apos;));
  END_LOCAL;

  IF SIZEOF(role_bag) = 1 THEN
    RETURN (role_bag[1].role);
  ELSE
    RETURN (?);
  END_IF;
      </algorithm>
    </function>

    <function name="identical_sets">
      <parameter name="set_a">
        <typename name="class"/>
      </parameter>
      <parameter name="set_b">
        <typename name="class"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    set_of_sets : SET OF class := [];
  END_LOCAL;

  IF (set_a = set_b) THEN
    RETURN (TRUE);
  END_IF;
  set_of_sets := set_of_sets + set_b;
  RETURN (identical_to_one_of_set_of_sets(set_a, set_of_sets));
      </algorithm>
    </function>

    <function name="identical_to_one_of_set_of_sets">
      <parameter name="set_a">
        <typename name="class"/>
      </parameter>
      <parameter name="set_of_sets">
        <aggregate type="SET"
        />
        <typename name="class"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    i : INTEGER;
    initial_size : INTEGER;
    augmented_size : INTEGER;
    set_of_forward_equivalences : SET OF same_membership := [];
    set_of_backward_equivalences : SET OF same_membership := [];
    augmented_set_of_sets : SET OF class := [];
  END_LOCAL;

  IF (set_a IN set_of_sets) THEN
    RETURN (TRUE);
  END_IF;
  initial_size := SIZEOF(set_of_sets);
  IF (initial_size = 0) THEN
    RETURN (FALSE);
  END_IF;
  REPEAT i := 1 TO initial_size;
    set_of_forward_equivalences := set_of_forward_equivalences + USEDIN(set_of_sets[i], &apos;FUNCTIONAL_DATA_MIM_LF.SAME_MEMBERSHIP.SET_1&apos;);
    set_of_backward_equivalences := set_of_forward_equivalences + USEDIN(set_of_sets[i], &apos;FUNCTIONAL_DATA_MIM_LF.SAME_MEMBERSHIP.SET_2&apos;);
  END_REPEAT;
  augmented_set_of_sets := set_of_sets;
  IF (SIZEOF(set_of_forward_equivalences) &gt; 0) THEN
    REPEAT i := 1 TO HIINDEX(set_of_forward_equivalences);
      augmented_set_of_sets := augmented_set_of_sets + set_of_forward_equivalences[i].set_2;
    END_REPEAT;
  END_IF;
  IF (SIZEOF(set_of_backward_equivalences) &gt; 0) THEN
    REPEAT i := 1 TO HIINDEX(set_of_backward_equivalences);
      augmented_set_of_sets := augmented_set_of_sets + set_of_backward_equivalences[i].set_1;
    END_REPEAT;
  END_IF;
  augmented_size := SIZEOF(augmented_set_of_sets);
  IF augmented_size = initial_size THEN
    RETURN (FALSE);
  END_IF;
  RETURN (identical_to_one_of_set_of_sets(set_a, augmented_set_of_sets));
      </algorithm>
    </function>

    <function name="is_acyclic">
      <parameter name="arg">
        <typename name="generic_expression"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  RETURN (acyclic(arg, []));
      </algorithm>
    </function>

    <function name="make_finite_space">
      <parameter name="members">
        <aggregate type="SET"
        />
        <typename name="maths_value"/>
      </parameter>
      <typename name="finite_space"/>
      <algorithm>
  RETURN (finite_space(members)||maths_space()||generic_expression()||generic_literal()||simple_generic_expression());
      </algorithm>
    </function>

    <function name="no_cyclic_space_reference">
      <parameter name="spc">
        <typename name="maths_space"/>
      </parameter>
      <parameter name="refs">
        <aggregate type="SET"
        />
        <typename name="maths_space"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    types : SET OF STRING;
    refs_plus : SET OF maths_space;
  END_LOCAL;

  IF (spc IN refs) THEN
    RETURN (FALSE);
  END_IF;
  types := TYPEOF(spc);
  refs_plus := refs + spc;
  IF (schema_prefix + &apos;FINITE_SPACE&apos;) IN types THEN
    RETURN (bool(SIZEOF(QUERY(sp &lt;* QUERY(mem &lt;* spc\finite_space.members | (schema_prefix + &apos;MATHS_SPACE&apos;) IN TYPEOF(mem)) | NOT no_cyclic_space_reference(sp, refs_plus))) = 0));
  END_IF;
  IF (schema_prefix + &apos;UNIFORM_PRODUCT_SPACE&apos;) IN types THEN
    RETURN (no_cyclic_space_reference(spc\uniform_product_space.base, refs_plus));
  END_IF;
  IF (schema_prefix + &apos;LISTED_PRODUCT_SPACE&apos;) IN types THEN
    RETURN (bool(SIZEOF(QUERY(fac &lt;* spc\listed_product_space.factors | NOT no_cyclic_space_reference(fac, refs_plus))) = 0));
  END_IF;
  IF (schema_prefix + &apos;EXTENDED_TUPLE_SPACE&apos;) IN types THEN
    RETURN (no_cyclic_space_reference(spc\extended_tuple_space.base, refs_plus) AND no_cyclic_space_reference(spc\extended_tuple_space.extender, refs_plus));
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <function name="stripped_typeof">
      <parameter name="arg">
        <builtintype type="GENERIC"
          typelabel="G"
        />
      </parameter>
      <aggregate type="SET"
      />
      <builtintype type="STRING"
      />
      <algorithm>
  LOCAL
    types : SET OF STRING := TYPEOF(arg);
    stypes : SET OF STRING := [];
    n : INTEGER := LENGTH(schema_prefix);
  END_LOCAL;

  REPEAT i := 1 TO SIZEOF(types);
    IF types[i][1:n] = schema_prefix THEN
      stypes := ;
    ELSE
      stypes := stypes + [types[i]];
    END_IF;
  END_REPEAT;
  RETURN (stypes);
      </algorithm>
    </function>

    <function name="using_items">
      <parameter name="item">
        <typename name="founded_item_select"/>
      </parameter>
      <parameter name="checked_items">
        <aggregate type="SET"
        />
        <typename name="founded_item_select"/>
      </parameter>
      <aggregate type="SET"
      />
      <typename name="founded_item_select"/>
      <algorithm>
  LOCAL
    new_check_items : SET OF founded_item_select;
    result_items : SET OF founded_item_select;
    next_items : SET OF founded_item_select;
  END_LOCAL;

  result_items := [];
  new_check_items := checked_items + item;
  next_items := QUERY(z &lt;* bag_to_set(USEDIN(item, &apos;&apos;)) | (&apos;FUNCTIONAL_DATA_MIM_LF.REPRESENTATION_ITEM&apos; IN TYPEOF(z)) OR (&apos;FUNCTIONAL_DATA_MIM_LF.FOUNDED_ITEM&apos; IN TYPEOF(z)));
  IF SIZEOF(next_items) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(next_items);
      IF NOT (next_items[i] IN new_check_items) THEN
        result_items := result_items + next_items[i] + using_items(next_items[i], new_check_items);
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (result_items);
      </algorithm>
    </function>

    <function name="using_representations">
      <parameter name="item">
        <typename name="founded_item_select"/>
      </parameter>
      <aggregate type="SET"
      />
      <typename name="representation"/>
      <algorithm>
  LOCAL
    results : SET OF representation;
    result_bag : BAG OF representation;
    intermediate_items : SET OF founded_item_select;
  END_LOCAL;

  results := [];
  result_bag := USEDIN(item, &apos;FUNCTIONAL_DATA_MIM_LF.REPRESENTATION.ITEMS&apos;);
  IF SIZEOF(result_bag) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(result_bag);
      results := results + result_bag[i];
    END_REPEAT;
  END_IF;
  intermediate_items := using_items(item, []);
  IF SIZEOF(intermediate_items) &gt; 0 THEN
    REPEAT i := 1 TO HIINDEX(intermediate_items);
      result_bag := USEDIN(intermediate_items[i], &apos;FUNCTIONAL_DATA_MIM_LF.REPRESENTATION.ITEMS&apos;);
      IF SIZEOF(result_bag) &gt; 0 THEN
        REPEAT j := 1 TO HIINDEX(result_bag);
          results := results + result_bag[j];
        END_REPEAT;
      END_IF;
    END_REPEAT;
  END_IF;
  RETURN (results);
      </algorithm>
    </function>

    <function name="valid_measure_value">
      <parameter name="m">
        <typename name="measure_value"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  IF (&apos;REAL&apos; IN TYPEOF(m)) THEN
    RETURN (m &gt; 0.000000);
  ELSE
    IF (&apos;INTEGER&apos; IN TYPEOF(m)) THEN
      RETURN (m &gt; 0);
    ELSE
      RETURN (TRUE);
    END_IF;
  END_IF;
      </algorithm>
    </function>

    <function name="valid_units">
      <parameter name="m">
        <typename name="measure_with_unit"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  IF &apos;FUNCTIONAL_DATA_MIM_LF.LENGTH_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.MASS_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.TIME_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.ELECTRIC_CURRENT_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.THERMODYNAMIC_TEMPERATURE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.CELSIUS_TEMPERATURE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.AMOUNT_OF_SUBSTANCE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.LUMINOUS_INTENSITY_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.PLANE_ANGLE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.SOLID_ANGLE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.AREA_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.VOLUME_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.RATIO_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.POSITIVE_LENGTH_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  IF &apos;FUNCTIONAL_DATA_MIM_LF.POSITIVE_PLANE_ANGLE_MEASURE&apos; IN TYPEOF(m.value_component) THEN
    IF derive_dimensional_exponents(m.unit_component) &lt;&gt; dimensional_exponents(0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000) THEN
      RETURN (FALSE);
    END_IF;
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <function name="version_assignment_is_valid">
      <parameter name="aia">
        <typename name="applied_identification_assignment"/>
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    item : identification_item;
    role : identification_role;
  END_LOCAL;

  role := aia.role;
  IF role.name = &apos;version&apos; THEN
    REPEAT i := LOINDEX(aia.items) TO HIINDEX(aia.items);
      item := aia.items[i];
      IF (SIZEOF([&apos;FUNCTIONAL_DATA_MIM_LF.&apos; + &apos;VERSIONABLE_ITEM&apos;] * TYPEOF(item)) = 0) THEN
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
    RETURN (TRUE);
  ELSE
    RETURN (TRUE);
  END_IF;
      </algorithm>
    </function>

    <function name="dependently_instantiated">
      <parameter name="set_of_input_instances">
        <aggregate type="SET"
        />
        <builtintype type="GENERIC"
        />
      </parameter>
      <parameter name="set_of_input_types">
        <aggregate type="SET"
        />
        <builtintype type="STRING"
        />
      </parameter>
      <parameter name="previous_in_chain">
        <aggregate type="LIST"
        />
        <builtintype type="GENERIC"
        />
      </parameter>
      <builtintype type="BOOLEAN"
      />
      <algorithm>
  LOCAL
    number_of_input_instances : INTEGER;
    number_of_referring_instances : INTEGER;
    bag_of_referring_instances : BAG OF INTEGER := [];
    dependently_instantiated_flag : BOOLEAN;
    previous_in_chain_plus : LIST OF INTEGER := [];
    recursion : BOOLEAN;
    result : BOOLEAN := TRUE;
    set_of_types : SET OF STRING := [];
  END_LOCAL;

  IF EXISTS(set_of_input_instances) THEN
    number_of_input_instances := SIZEOF(set_of_input_instances);
    set_of_input_types := set_of_input_types + &apos;GENERIC&apos;;
    REPEAT i := 1 TO number_of_input_instances;
      bag_of_referring_instances := USEDIN(set_of_input_instances[i], &apos;&apos;);
      IF EXISTS(bag_of_referring_instances) THEN
        number_of_referring_instances := SIZEOF(bag_of_referring_instances);
        dependently_instantiated_flag := FALSE;
        REPEAT j := 1 TO number_of_referring_instances;
          set_of_types := TYPEOF(bag_of_referring_instances[j]);
          IF set_of_types &lt;= set_of_input_types THEN
            IF EXISTS(previous_in_chain) THEN
              recursion := TRUE;
              REPEAT k := 1 TO SIZEOF(previous_in_chain);
                IF previous_in_chain[k] :=: bag_of_referring_instances[j] THEN
                  recursion := FALSE;
                  ESCAPE;
                END_IF;
              END_REPEAT;
            END_IF;
            IF recursion THEN
              previous_in_chain_plus := previous_in_chain + set_of_input_instances[i];
              IF dependently_instantiated([bag_of_referring_instances[j]], set_of_input_types, previous_in_chain_plus) THEN
                dependently_instantiated_flag := TRUE;
                ESCAPE;
              ELSE
                SKIP;
              END_IF;
            END_IF;
          ELSE
            dependently_instantiated_flag := TRUE;
            ESCAPE;
          END_IF;
        END_REPEAT;
        IF NOT dependently_instantiated_flag THEN
          RETURN (FALSE);
        END_IF;
      ELSE
        RETURN (FALSE);
      END_IF;
    END_REPEAT;
  ELSE
    RETURN (FALSE);
  END_IF;
  RETURN (TRUE);
      </algorithm>
    </function>

    <rule name="version_assignments_are_valid"
      appliesto="applied_identification_assignment">
      <where
        label="WR1"
        expression="SIZEOF(QUERY(aia &lt;* applied_identification_assignment | NOT version_assignment_is_valid(aia))) = 0">
      </where>
    </rule>

    <rule name="validate_dependently_instantiable_entity_data_types"
      appliesto="application_context application_context_element applied_classification_assignment binary_generic_expression classification_assignment classification_role description_attribute environment extended_tuple_space generic_expression generic_literal generic_variable multiple_arity_generic_expression name_attribute organization_type_role product_context quantifier_expression role_association simple_generic_expression unary_generic_expression variable_semantics">
      <algorithm>
  LOCAL
    number_of_input_instances : INTEGER;
    previous_in_chain : LIST OF INTEGER := [];
    set_of_input_types : SET OF STRING := [];
    all_instances : SET OF INTEGER := [];
  END_LOCAL;

  all_instances := ;
  number_of_input_instances := SIZEOF(all_instances);
  REPEAT i := 1 TO number_of_input_instances;
    set_of_input_types := set_of_input_types + TYPEOF(all_instances[i]);
  END_REPEAT;
      </algorithm>
      <where
        label="WR1"
        expression="dependently_instantiated(all_instances, set_of_input_types, previous_in_chain)">
      </where>
    </rule>

  </schema>

</express>